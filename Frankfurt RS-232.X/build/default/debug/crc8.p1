Version 3.2 HI-TECH Software Intermediate Code
[; ;stdio.h: 8: typedef int ptrdiff_t;
[; ;stdio.h: 9: typedef unsigned size_t;
[; ;stdio.h: 10: typedef unsigned short wchar_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...);
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...);
[; ;stdio.h: 198: extern int vprintf(const char *, va_list);
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap);
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list);
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
"17 crc8.c
[v _crc8_table `uc ~T0 @X0 -> 256 `i s ]
[; ;crc8.c: 17: static unsigned char crc8_table[256];
"18
[v _made_table `i ~T0 @X0 1 s ]
[i _made_table
-> 0 `i
]
[; ;crc8.c: 18: static int made_table=0;
"25
[v _init_crc8 `(v ~T0 @X0 1 ef ]
{
[; ;crc8.c: 24: void init_crc8()
[; ;crc8.c: 25: {
[e :U _init_crc8 ]
[f ]
"26
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
"27
[v _crc `uc ~T0 @X0 1 a ]
[; ;crc8.c: 26: int i,j;
[; ;crc8.c: 27: unsigned char crc;
[; ;crc8.c: 29: if (!made_table) {
"29
[e $ ! ! != _made_table -> 0 `i 3  ]
{
[; ;crc8.c: 30: for ( i=0; i<256; i++ ) {
"30
{
[e = _i -> 0 `i ]
[e $ < _i -> 256 `i 4  ]
[e $U 5  ]
[e :U 4 ]
{
[; ;crc8.c: 31: crc = i;
"31
[e = _crc -> _i `uc ]
[; ;crc8.c: 32: for (j=0; j<8; j++) {
"32
{
[e = _j -> 0 `i ]
[e $ < _j -> 8 `i 7  ]
[e $U 8  ]
[e :U 7 ]
{
[; ;crc8.c: 33: crc = (crc << 1) ^ ((crc & 0x80) ? 0x07 : 0);
"33
[e = _crc -> ^ << -> _crc `i -> 1 `i ? != & -> _crc `i -> 128 `i -> 0 `i : -> 7 `i -> 0 `i `uc ]
"34
}
"32
[e ++ _j -> 1 `i ]
[e $ < _j -> 8 `i 7  ]
[e :U 8 ]
"34
}
[; ;crc8.c: 34: }
[; ;crc8.c: 35: crc8_table[i] = crc & 0xFF;
"35
[e = *U + &U _crc8_table * -> -> _i `ui `ux -> -> # *U &U _crc8_table `ui `ux -> & -> _crc `i -> 255 `i `uc ]
"37
}
"30
[e ++ _i -> 1 `i ]
[e $ < _i -> 256 `i 4  ]
[e :U 5 ]
"37
}
[; ;crc8.c: 37: }
[; ;crc8.c: 38: made_table=1;
"38
[e = _made_table -> 1 `i ]
"39
}
[e :U 3 ]
[; ;crc8.c: 39: }
[; ;crc8.c: 40: }
"40
[e :UE 2 ]
}
"47
[v _crc8 `(v ~T0 @X0 1 ef2`*uc`uc ]
{
[; ;crc8.c: 46: void crc8( unsigned char *crc, unsigned char m )
[; ;crc8.c: 47: {
[e :U _crc8 ]
[v _crc `*uc ~T0 @X0 1 r1 ]
[v _m `uc ~T0 @X0 1 r2 ]
[f ]
[; ;crc8.c: 48: if ( !made_table ) {
"48
[e $ ! ! != _made_table -> 0 `i 11  ]
{
[; ;crc8.c: 49: init_crc8();
"49
[e ( _init_crc8 ..  ]
"50
}
[e :U 11 ]
[; ;crc8.c: 50: }
[; ;crc8.c: 52: *crc = crc8_table[(*crc) ^ m];
"52
[e = *U _crc *U + &U _crc8_table * -> -> ^ -> *U _crc `i -> _m `i `ui `ux -> -> # *U &U _crc8_table `ui `ux ]
[; ;crc8.c: 53: *crc &= 0xFF;
"53
[e =& *U _crc -> -> 255 `i `uc ]
[; ;crc8.c: 54: }
"54
[e :UE 10 ]
}
