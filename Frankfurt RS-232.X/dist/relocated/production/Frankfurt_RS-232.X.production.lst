

Microchip Technology PIC18 PRO Macro Assembler V1.21 build 54009 
                                                                                               Wed Nov 25 22:38:33 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 54009
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   117                           	psect	pa_nodes,global,class=CODE,delta=1
   118  0000                     tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           tblptrl	equ	0xFF6
   121                           tablat	equ	0xFF5
   122                           prodh	equ	0xFF4
   123                           prodl	equ	0xFF3
   124                           intcon	equ	0xFF2
   125                           indf0	equ	0xFEF
   126                           fsr0h	equ	0xFEA
   127                           fsr0l	equ	0xFE9
   128                           wreg	equ	0xFE8
   129                           indf1	equ	0xFE7
   130                           postinc1	equ	0xFE6
   131                           postdec1	equ	0xFE5
   132                           fsr1h	equ	0xFE2
   133                           fsr1l	equ	0xFE1
   134                           indf2	equ	0xFDF
   135                           postinc2	equ	0xFDE
   136                           postdec2	equ	0xFDD
   137                           plusw2	equ	0xFDB
   138                           fsr2h	equ	0xFDA
   139                           fsr2l	equ	0xFD9
   140                           status	equ	0xFD8
   141                           
   142                           	psect	mediumconst
   143  006DEC                     __pmediumconst:
   144                           	opt stack 0
   145  006DEC                     _octpowers:
   146                           	opt stack 0
   147  006DEC  0001               	dw	1
   148  006DEE  0000               	dw	0
   149  006DF0  0008               	dw	8
   150  006DF2  0000               	dw	0
   151  006DF4  0040               	dw	64
   152  006DF6  0000               	dw	0
   153  006DF8  0200               	dw	512
   154  006DFA  0000               	dw	0
   155  006DFC  1000               	dw	4096
   156  006DFE  0000               	dw	0
   157  006E00  8000               	dw	32768
   158  006E02  0000               	dw	0
   159  006E04  0000               	dw	0
   160  006E06  0004               	dw	4
   161  006E08  0000               	dw	0
   162  006E0A  0020               	dw	32
   163  006E0C  0000               	dw	0
   164  006E0E  0100               	dw	256
   165  006E10  0000               	dw	0
   166  006E12  0800               	dw	2048
   167  006E14  0000               	dw	0
   168  006E16  4000               	dw	16384
   169  006E18  0000               	dw	0
   170  006E1A  0000               	dw	0
   171  006E1C                     __end_of_octpowers:
   172                           	opt stack 0
   173  006E1C                     _dpowers:
   174                           	opt stack 0
   175  006E1C  0001               	dw	1
   176  006E1E  0000               	dw	0
   177  006E20  000A               	dw	10
   178  006E22  0000               	dw	0
   179  006E24  0064               	dw	100
   180  006E26  0000               	dw	0
   181  006E28  03E8               	dw	1000
   182  006E2A  0000               	dw	0
   183  006E2C  2710               	dw	10000
   184  006E2E  0000               	dw	0
   185  006E30  86A0               	dw	34464
   186  006E32  0001               	dw	1
   187  006E34  4240               	dw	16960
   188  006E36  000F               	dw	15
   189  006E38  9680               	dw	38528
   190  006E3A  0098               	dw	152
   191  006E3C  E100               	dw	57600
   192  006E3E  05F5               	dw	1525
   193  006E40  CA00               	dw	51712
   194  006E42  3B9A               	dw	15258
   195  006E44                     __end_of_dpowers:
   196                           	opt stack 0
   197  006E44                     _hexpowers:
   198                           	opt stack 0
   199  006E44  0001               	dw	1
   200  006E46  0000               	dw	0
   201  006E48  0010               	dw	16
   202  006E4A  0000               	dw	0
   203  006E4C  0100               	dw	256
   204  006E4E  0000               	dw	0
   205  006E50  1000               	dw	4096
   206  006E52  0000               	dw	0
   207  006E54  0000               	dw	0
   208  006E56  0001               	dw	1
   209  006E58  0000               	dw	0
   210  006E5A  0010               	dw	16
   211  006E5C  0000               	dw	0
   212  006E5E  0100               	dw	256
   213  006E60  0000               	dw	0
   214  006E62  1000               	dw	4096
   215  006E64                     __end_of_hexpowers:
   216                           	opt stack 0
   217  0000                     _BRGCON1	set	3952
   218  0000                     _BRGCON2	set	3953
   219  0000                     _BRGCON3	set	3954
   220  0000                     _BSEL0	set	3576
   221  0000                     _CANCON	set	3951
   222  0000                     _CIOCON	set	3955
   223  0000                     _COMSTATbits	set	3956
   224  0000                     _ECANCON	set	3959
   225  0000                     _EEADR	set	4009
   226  0000                     _EECON1bits	set	4006
   227  0000                     _EECON2	set	4007
   228  0000                     _EEDATA	set	4008
   229  0000                     _INTCONbits	set	4082
   230  0000                     _MSEL0	set	3568
   231  0000                     _MSEL1	set	3569
   232  0000                     _MSEL2	set	3570
   233  0000                     _OSCCONbits	set	4051
   234  0000                     _OSCTUNEbits	set	3995
   235  0000                     _PIE1	set	3997
   236  0000                     _PIE1bits	set	3997
   237  0000                     _PIE2bits	set	4000
   238  0000                     _PIR1bits	set	3998
   239  0000                     _PIR2bits	set	4001
   240  0000                     _PORTCbits	set	3970
   241  0000                     _RCREG	set	4014
   242  0000                     _RCSTA	set	4011
   243  0000                     _RCSTAbits	set	4011
   244  0000                     _RXB1CONbits	set	3920
   245  0000                     _RXERRCNT	set	3957
   246  0000                     _RXF0EIDH	set	3842
   247  0000                     _RXF0EIDL	set	3843
   248  0000                     _RXF0SIDH	set	3840
   249  0000                     _RXF0SIDL	set	3841
   250  0000                     _RXF10EIDH	set	3446
   251  0000                     _RXF10EIDL	set	3447
   252  0000                     _RXF10SIDH	set	3444
   253  0000                     _RXF10SIDL	set	3445
   254  0000                     _RXF11EIDH	set	3450
   255  0000                     _RXF11EIDL	set	3451
   256  0000                     _RXF11SIDH	set	3448
   257  0000                     _RXF11SIDL	set	3449
   258  0000                     _RXF12EIDH	set	3458
   259  0000                     _RXF12EIDL	set	3459
   260  0000                     _RXF12SIDH	set	3456
   261  0000                     _RXF12SIDL	set	3457
   262  0000                     _RXF13EIDH	set	3462
   263  0000                     _RXF13EIDL	set	3463
   264  0000                     _RXF13SIDH	set	3460
   265  0000                     _RXF13SIDL	set	3461
   266  0000                     _RXF14EIDH	set	3466
   267  0000                     _RXF14EIDL	set	3467
   268  0000                     _RXF14SIDH	set	3464
   269  0000                     _RXF14SIDL	set	3465
   270  0000                     _RXF15EIDH	set	3474
   271  0000                     _RXF15EIDL	set	3475
   272  0000                     _RXF15SIDH	set	3472
   273  0000                     _RXF15SIDL	set	3473
   274  0000                     _RXF1EIDH	set	3846
   275  0000                     _RXF1EIDL	set	3847
   276  0000                     _RXF1SIDH	set	3844
   277  0000                     _RXF1SIDL	set	3845
   278  0000                     _RXF2EIDH	set	3850
   279  0000                     _RXF2EIDL	set	3851
   280  0000                     _RXF2SIDH	set	3848
   281  0000                     _RXF2SIDL	set	3849
   282  0000                     _RXF3EIDH	set	3854
   283  0000                     _RXF3EIDL	set	3855
   284  0000                     _RXF3SIDH	set	3852
   285  0000                     _RXF3SIDL	set	3853
   286  0000                     _RXF4EIDH	set	3858
   287  0000                     _RXF4EIDL	set	3859
   288  0000                     _RXF4SIDH	set	3856
   289  0000                     _RXF4SIDL	set	3857
   290  0000                     _RXF5EIDH	set	3862
   291  0000                     _RXF5EIDL	set	3863
   292  0000                     _RXF5SIDH	set	3860
   293  0000                     _RXF5SIDL	set	3861
   294  0000                     _RXF6EIDH	set	3426
   295  0000                     _RXF6EIDL	set	3427
   296  0000                     _RXF6SIDH	set	3424
   297  0000                     _RXF6SIDL	set	3425
   298  0000                     _RXF7EIDH	set	3430
   299  0000                     _RXF7EIDL	set	3431
   300  0000                     _RXF7SIDH	set	3428
   301  0000                     _RXF7SIDL	set	3429
   302  0000                     _RXF8EIDH	set	3434
   303  0000                     _RXF8EIDL	set	3435
   304  0000                     _RXF8SIDH	set	3432
   305  0000                     _RXF8SIDL	set	3433
   306  0000                     _RXF9EIDH	set	3442
   307  0000                     _RXF9EIDL	set	3443
   308  0000                     _RXF9SIDH	set	3440
   309  0000                     _RXF9SIDL	set	3441
   310  0000                     _RXFBCON0	set	3552
   311  0000                     _RXFBCON1	set	3553
   312  0000                     _RXFBCON2	set	3554
   313  0000                     _RXFBCON3	set	3555
   314  0000                     _RXFBCON4	set	3556
   315  0000                     _RXFBCON5	set	3557
   316  0000                     _RXFBCON6	set	3558
   317  0000                     _RXFBCON7	set	3559
   318  0000                     _RXFCON0	set	3540
   319  0000                     _RXFCON1	set	3541
   320  0000                     _RXM0EIDH	set	3866
   321  0000                     _RXM0EIDL	set	3867
   322  0000                     _RXM0SIDL	set	3865
   323  0000                     _RXM1EIDH	set	3870
   324  0000                     _RXM1EIDL	set	3871
   325  0000                     _RXM1SIDL	set	3869
   326  0000                     _SPBRG	set	4015
   327  0000                     _SPBRGH	set	4016
   328  0000                     _T0CON	set	4053
   329  0000                     _T0CONbits	set	4053
   330  0000                     _T3CON	set	4017
   331  0000                     _T3CONbits	set	4017
   332  0000                     _TMR0H	set	4055
   333  0000                     _TMR0L	set	4054
   334  0000                     _TMR3H	set	4019
   335  0000                     _TMR3L	set	4018
   336  0000                     _TRISBbits	set	3987
   337  0000                     _TRISCbits	set	3988
   338  0000                     _TXERRCNT	set	3958
   339  0000                     _TXREG	set	4013
   340  0000                     _TXSTA	set	4012
   341  0000                     _TXSTAbits	set	4012
   342  0000                     _B0RXFUL	set	28935
   343  0000                     _B0TXEN	set	28610
   344  0000                     _B1RXFUL	set	29063
   345  0000                     _B1TXEN	set	28611
   346  0000                     _B2RXFUL	set	29191
   347  0000                     _B2TXEN	set	28612
   348  0000                     _B3RXFUL	set	29319
   349  0000                     _B3TXEN	set	28613
   350  0000                     _B4RXFUL	set	29447
   351  0000                     _B4TXEN	set	28614
   352  0000                     _B5RXFUL	set	29575
   353  0000                     _B5TXEN	set	28615
   354  0000                     _ERRIE	set	32029
   355  0000                     _ERRIF	set	32037
   356  0000                     _FIFOEMPTY	set	31655
   357  0000                     _IRXIF	set	32039
   358  0000                     _LATC1	set	31833
   359  0000                     _MDSEL0	set	31678
   360  0000                     _MDSEL1	set	31679
   361  0000                     _PEIE	set	32662
   362  0000                     _RCIE	set	31981
   363  0000                     _RCIF	set	31989
   364  0000                     _RCIP	set	31997
   365  0000                     _RXB0FILHIT0	set	31488
   366  0000                     _RXB0FUL	set	31495
   367  0000                     _RXB0IF	set	32032
   368  0000                     _RXB0OVFL	set	31655
   369  0000                     _RXB1IF	set	32033
   370  0000                     _RXB1OVFL	set	31654
   371  0000                     _RXBnIE	set	32025
   372  0000                     _RXBnIF	set	32033
   373  0000                     _RXM0EXIDM	set	30923
   374  0000                     _RXM1EXIDEN	set	30955
   375  0000                     _B0CON	set	3616
   376  0000                     _B1CON	set	3632
   377  0000                     _B2CON	set	3648
   378  0000                     _B3CON	set	3664
   379  0000                     _B4CON	set	3680
   380  0000                     _B5CON	set	3696
   381  0000                     _RXB0CON	set	3936
   382  0000                     _RXB1CON	set	3920
   383  0000                     _RXM0SIDH	set	3864
   384  0000                     _RXM1SIDH	set	3868
   385  0000                     _TXB0CON	set	3904
   386  0000                     _TXB1CON	set	3888
   387  0000                     _TXB2CON	set	3872
   388  006E64                     __stringdata:
   389                           	opt stack 0
   390  006E64                     STR_270:
   391  006E64  20                 	db	32
   392  006E65  20                 	db	32
   393  006E66  20                 	db	32
   394  006E67  20                 	db	32
   395  006E68  20                 	db	32
   396  006E69  20                 	db	32
   397  006E6A  20                 	db	32
   398  006E6B  20                 	db	32
   399  006E6C  20                 	db	32
   400  006E6D  46                 	db	70	;'F'
   401  006E6E  6F                 	db	111	;'o'
   402  006E6F  72                 	db	114	;'r'
   403  006E70  6D                 	db	109	;'m'
   404  006E71  61                 	db	97	;'a'
   405  006E72  74                 	db	116	;'t'
   406  006E73  3A                 	db	58	;':'
   407  006E74  20                 	db	32
   408  006E75  66                 	db	102	;'f'
   409  006E76  69                 	db	105	;'i'
   410  006E77  6C                 	db	108	;'l'
   411  006E78  74                 	db	116	;'t'
   412  006E79  65                 	db	101	;'e'
   413  006E7A  72                 	db	114	;'r'
   414  006E7B  20                 	db	32
   415  006E7C  66                 	db	102	;'f'
   416  006E7D  69                 	db	105	;'i'
   417  006E7E  6C                 	db	108	;'l'
   418  006E7F  74                 	db	116	;'t'
   419  006E80  65                 	db	101	;'e'
   420  006E81  72                 	db	114	;'r'
   421  006E82  6E                 	db	110	;'n'
   422  006E83  6F                 	db	111	;'o'
   423  006E84  2C                 	db	44
   424  006E85  70                 	db	112	;'p'
   425  006E86  72                 	db	114	;'r'
   426  006E87  69                 	db	105	;'i'
   427  006E88  6F                 	db	111	;'o'
   428  006E89  2C                 	db	44
   429  006E8A  63                 	db	99	;'c'
   430  006E8B  6C                 	db	108	;'l'
   431  006E8C  61                 	db	97	;'a'
   432  006E8D  73                 	db	115	;'s'
   433  006E8E  73                 	db	115	;'s'
   434  006E8F  2C                 	db	44
   435  006E90  74                 	db	116	;'t'
   436  006E91  79                 	db	121	;'y'
   437  006E92  70                 	db	112	;'p'
   438  006E93  65                 	db	101	;'e'
   439  006E94  2C                 	db	44
   440  006E95  6E                 	db	110	;'n'
   441  006E96  6F                 	db	111	;'o'
   442  006E97  64                 	db	100	;'d'
   443  006E98  65                 	db	101	;'e'
   444  006E99  69                 	db	105	;'i'
   445  006E9A  64                 	db	100	;'d'
   446  006E9B  20                 	db	32
   447  006E9C  20                 	db	32
   448  006E9D  28                 	db	40
   449  006E9E  66                 	db	102	;'f'
   450  006E9F  69                 	db	105	;'i'
   451  006EA0  6C                 	db	108	;'l'
   452  006EA1  74                 	db	116	;'t'
   453  006EA2  65                 	db	101	;'e'
   454  006EA3  72                 	db	114	;'r'
   455  006EA4  6E                 	db	110	;'n'
   456  006EA5  6F                 	db	111	;'o'
   457  006EA6  20                 	db	32
   458  006EA7  3D                 	db	61	;'='
   459  006EA8  20                 	db	32
   460  006EA9  30                 	db	48	;'0'
   461  006EAA  2D                 	db	45
   462  006EAB  31                 	db	49	;'1'
   463  006EAC  35                 	db	53	;'5'
   464  006EAD  29                 	db	41
   465  006EAE  2E                 	db	46
   466  006EAF  0D                 	db	13
   467  006EB0  0A                 	db	10
   468  006EB1  00                 	db	0
   469  006EB2                     STR_268:
   470  006EB2  49                 	db	73	;'I'
   471  006EB3  4E                 	db	78	;'N'
   472  006EB4  46                 	db	70	;'F'
   473  006EB5  4F                 	db	79	;'O'
   474  006EB6  20                 	db	32
   475  006EB7  2D                 	db	45
   476  006EB8  20                 	db	32
   477  006EB9  47                 	db	71	;'G'
   478  006EBA  65                 	db	101	;'e'
   479  006EBB  74                 	db	116	;'t'
   480  006EBC  20                 	db	32
   481  006EBD  69                 	db	105	;'i'
   482  006EBE  6E                 	db	110	;'n'
   483  006EBF  66                 	db	102	;'f'
   484  006EC0  6F                 	db	111	;'o'
   485  006EC1  20                 	db	32
   486  006EC2  61                 	db	97	;'a'
   487  006EC3  62                 	db	98	;'b'
   488  006EC4  6F                 	db	111	;'o'
   489  006EC5  75                 	db	117	;'u'
   490  006EC6  74                 	db	116	;'t'
   491  006EC7  20                 	db	32
   492  006EC8  61                 	db	97	;'a'
   493  006EC9  6E                 	db	110	;'n'
   494  006ECA  20                 	db	32
   495  006ECB  65                 	db	101	;'e'
   496  006ECC  78                 	db	120	;'x'
   497  006ECD  69                 	db	105	;'i'
   498  006ECE  73                 	db	115	;'s'
   499  006ECF  74                 	db	116	;'t'
   500  006ED0  65                 	db	101	;'e'
   501  006ED1  6E                 	db	110	;'n'
   502  006ED2  74                 	db	116	;'t'
   503  006ED3  20                 	db	32
   504  006ED4  6E                 	db	110	;'n'
   505  006ED5  6F                 	db	111	;'o'
   506  006ED6  64                 	db	100	;'d'
   507  006ED7  65                 	db	101	;'e'
   508  006ED8  20                 	db	32
   509  006ED9  6F                 	db	111	;'o'
   510  006EDA  6E                 	db	110	;'n'
   511  006EDB  20                 	db	32
   512  006EDC  74                 	db	116	;'t'
   513  006EDD  68                 	db	104	;'h'
   514  006EDE  65                 	db	101	;'e'
   515  006EDF  20                 	db	32
   516  006EE0  62                 	db	98	;'b'
   517  006EE1  75                 	db	117	;'u'
   518  006EE2  73                 	db	115	;'s'
   519  006EE3  20                 	db	32
   520  006EE4  28                 	db	40
   521  006EE5  46                 	db	70	;'F'
   522  006EE6  6F                 	db	111	;'o'
   523  006EE7  72                 	db	114	;'r'
   524  006EE8  6D                 	db	109	;'m'
   525  006EE9  61                 	db	97	;'a'
   526  006EEA  74                 	db	116	;'t'
   527  006EEB  3A                 	db	58	;':'
   528  006EEC  20                 	db	32
   529  006EED  69                 	db	105	;'i'
   530  006EEE  6E                 	db	110	;'n'
   531  006EEF  66                 	db	102	;'f'
   532  006EF0  6F                 	db	111	;'o'
   533  006EF1  20                 	db	32
   534  006EF2  6E                 	db	110	;'n'
   535  006EF3  69                 	db	105	;'i'
   536  006EF4  63                 	db	99	;'c'
   537  006EF5  6B                 	db	107	;'k'
   538  006EF6  6E                 	db	110	;'n'
   539  006EF7  61                 	db	97	;'a'
   540  006EF8  6D                 	db	109	;'m'
   541  006EF9  65                 	db	101	;'e'
   542  006EFA  29                 	db	41
   543  006EFB  2E                 	db	46
   544  006EFC  0D                 	db	13
   545  006EFD  0A                 	db	10
   546  006EFE  00                 	db	0
   547  006EFF                     STR_266:
   548  006EFF  52                 	db	82	;'R'
   549  006F00  52                 	db	82	;'R'
   550  006F01  45                 	db	69	;'E'
   551  006F02  47                 	db	71	;'G'
   552  006F03  20                 	db	32
   553  006F04  2D                 	db	45
   554  006F05  20                 	db	32
   555  006F06  52                 	db	82	;'R'
   556  006F07  65                 	db	101	;'e'
   557  006F08  61                 	db	97	;'a'
   558  006F09  64                 	db	100	;'d'
   559  006F0A  20                 	db	32
   560  006F0B  72                 	db	114	;'r'
   561  006F0C  65                 	db	101	;'e'
   562  006F0D  67                 	db	103	;'g'
   563  006F0E  69                 	db	105	;'i'
   564  006F0F  73                 	db	115	;'s'
   565  006F10  74                 	db	116	;'t'
   566  006F11  65                 	db	101	;'e'
   567  006F12  72                 	db	114	;'r'
   568  006F13  28                 	db	40
   569  006F14  73                 	db	115	;'s'
   570  006F15  29                 	db	41
   571  006F16  20                 	db	32
   572  006F17  6F                 	db	111	;'o'
   573  006F18  66                 	db	102	;'f'
   574  006F19  20                 	db	32
   575  006F1A  6E                 	db	110	;'n'
   576  006F1B  6F                 	db	111	;'o'
   577  006F1C  64                 	db	100	;'d'
   578  006F1D  65                 	db	101	;'e'
   579  006F1E  20                 	db	32
   580  006F1F  28                 	db	40
   581  006F20  46                 	db	70	;'F'
   582  006F21  6F                 	db	111	;'o'
   583  006F22  72                 	db	114	;'r'
   584  006F23  6D                 	db	109	;'m'
   585  006F24  61                 	db	97	;'a'
   586  006F25  74                 	db	116	;'t'
   587  006F26  3A                 	db	58	;':'
   588  006F27  20                 	db	32
   589  006F28  72                 	db	114	;'r'
   590  006F29  72                 	db	114	;'r'
   591  006F2A  65                 	db	101	;'e'
   592  006F2B  67                 	db	103	;'g'
   593  006F2C  20                 	db	32
   594  006F2D  6E                 	db	110	;'n'
   595  006F2E  6F                 	db	111	;'o'
   596  006F2F  64                 	db	100	;'d'
   597  006F30  65                 	db	101	;'e'
   598  006F31  69                 	db	105	;'i'
   599  006F32  64                 	db	100	;'d'
   600  006F33  20                 	db	32
   601  006F34  5B                 	db	91	;'['
   602  006F35  70                 	db	112	;'p'
   603  006F36  61                 	db	97	;'a'
   604  006F37  67                 	db	103	;'g'
   605  006F38  65                 	db	101	;'e'
   606  006F39  3A                 	db	58	;':'
   607  006F3A  5D                 	db	93	;']'
   608  006F3B  72                 	db	114	;'r'
   609  006F3C  65                 	db	101	;'e'
   610  006F3D  67                 	db	103	;'g'
   611  006F3E  20                 	db	32
   612  006F3F  5B                 	db	91	;'['
   613  006F40  63                 	db	99	;'c'
   614  006F41  6F                 	db	111	;'o'
   615  006F42  75                 	db	117	;'u'
   616  006F43  6E                 	db	110	;'n'
   617  006F44  74                 	db	116	;'t'
   618  006F45  5D                 	db	93	;']'
   619  006F46  29                 	db	41
   620  006F47  2E                 	db	46
   621  006F48  0D                 	db	13
   622  006F49  0A                 	db	10
   623  006F4A  00                 	db	0
   624  006F4B                     STR_267:
   625  006F4B  57                 	db	87	;'W'
   626  006F4C  52                 	db	82	;'R'
   627  006F4D  45                 	db	69	;'E'
   628  006F4E  47                 	db	71	;'G'
   629  006F4F  20                 	db	32
   630  006F50  2D                 	db	45
   631  006F51  20                 	db	32
   632  006F52  57                 	db	87	;'W'
   633  006F53  72                 	db	114	;'r'
   634  006F54  69                 	db	105	;'i'
   635  006F55  74                 	db	116	;'t'
   636  006F56  65                 	db	101	;'e'
   637  006F57  20                 	db	32
   638  006F58  72                 	db	114	;'r'
   639  006F59  65                 	db	101	;'e'
   640  006F5A  67                 	db	103	;'g'
   641  006F5B  69                 	db	105	;'i'
   642  006F5C  73                 	db	115	;'s'
   643  006F5D  74                 	db	116	;'t'
   644  006F5E  65                 	db	101	;'e'
   645  006F5F  72                 	db	114	;'r'
   646  006F60  20                 	db	32
   647  006F61  6F                 	db	111	;'o'
   648  006F62  66                 	db	102	;'f'
   649  006F63  20                 	db	32
   650  006F64  6E                 	db	110	;'n'
   651  006F65  6F                 	db	111	;'o'
   652  006F66  64                 	db	100	;'d'
   653  006F67  65                 	db	101	;'e'
   654  006F68  20                 	db	32
   655  006F69  28                 	db	40
   656  006F6A  46                 	db	70	;'F'
   657  006F6B  6F                 	db	111	;'o'
   658  006F6C  72                 	db	114	;'r'
   659  006F6D  6D                 	db	109	;'m'
   660  006F6E  61                 	db	97	;'a'
   661  006F6F  74                 	db	116	;'t'
   662  006F70  3A                 	db	58	;':'
   663  006F71  20                 	db	32
   664  006F72  77                 	db	119	;'w'
   665  006F73  72                 	db	114	;'r'
   666  006F74  65                 	db	101	;'e'
   667  006F75  67                 	db	103	;'g'
   668  006F76  20                 	db	32
   669  006F77  6E                 	db	110	;'n'
   670  006F78  6F                 	db	111	;'o'
   671  006F79  64                 	db	100	;'d'
   672  006F7A  65                 	db	101	;'e'
   673  006F7B  69                 	db	105	;'i'
   674  006F7C  64                 	db	100	;'d'
   675  006F7D  20                 	db	32
   676  006F7E  5B                 	db	91	;'['
   677  006F7F  70                 	db	112	;'p'
   678  006F80  61                 	db	97	;'a'
   679  006F81  67                 	db	103	;'g'
   680  006F82  65                 	db	101	;'e'
   681  006F83  3A                 	db	58	;':'
   682  006F84  5D                 	db	93	;']'
   683  006F85  72                 	db	114	;'r'
   684  006F86  65                 	db	101	;'e'
   685  006F87  67                 	db	103	;'g'
   686  006F88  20                 	db	32
   687  006F89  63                 	db	99	;'c'
   688  006F8A  6F                 	db	111	;'o'
   689  006F8B  6E                 	db	110	;'n'
   690  006F8C  74                 	db	116	;'t'
   691  006F8D  65                 	db	101	;'e'
   692  006F8E  6E                 	db	110	;'n'
   693  006F8F  74                 	db	116	;'t'
   694  006F90  29                 	db	41
   695  006F91  2E                 	db	46
   696  006F92  0D                 	db	13
   697  006F93  0A                 	db	10
   698  006F94  00                 	db	0
   699  006F95                     STR_272:
   700  006F95  20                 	db	32
   701  006F96  20                 	db	32
   702  006F97  20                 	db	32
   703  006F98  20                 	db	32
   704  006F99  20                 	db	32
   705  006F9A  20                 	db	32
   706  006F9B  20                 	db	32
   707  006F9C  46                 	db	70	;'F'
   708  006F9D  6F                 	db	111	;'o'
   709  006F9E  72                 	db	114	;'r'
   710  006F9F  6D                 	db	109	;'m'
   711  006FA0  61                 	db	97	;'a'
   712  006FA1  74                 	db	116	;'t'
   713  006FA2  3A                 	db	58	;':'
   714  006FA3  20                 	db	32
   715  006FA4  6D                 	db	109	;'m'
   716  006FA5  61                 	db	97	;'a'
   717  006FA6  73                 	db	115	;'s'
   718  006FA7  6B                 	db	107	;'k'
   719  006FA8  20                 	db	32
   720  006FA9  6D                 	db	109	;'m'
   721  006FAA  61                 	db	97	;'a'
   722  006FAB  73                 	db	115	;'s'
   723  006FAC  6B                 	db	107	;'k'
   724  006FAD  6E                 	db	110	;'n'
   725  006FAE  6F                 	db	111	;'o'
   726  006FAF  2C                 	db	44
   727  006FB0  70                 	db	112	;'p'
   728  006FB1  72                 	db	114	;'r'
   729  006FB2  69                 	db	105	;'i'
   730  006FB3  6F                 	db	111	;'o'
   731  006FB4  2C                 	db	44
   732  006FB5  63                 	db	99	;'c'
   733  006FB6  6C                 	db	108	;'l'
   734  006FB7  61                 	db	97	;'a'
   735  006FB8  73                 	db	115	;'s'
   736  006FB9  73                 	db	115	;'s'
   737  006FBA  2C                 	db	44
   738  006FBB  74                 	db	116	;'t'
   739  006FBC  79                 	db	121	;'y'
   740  006FBD  70                 	db	112	;'p'
   741  006FBE  65                 	db	101	;'e'
   742  006FBF  2C                 	db	44
   743  006FC0  6E                 	db	110	;'n'
   744  006FC1  6F                 	db	111	;'o'
   745  006FC2  64                 	db	100	;'d'
   746  006FC3  65                 	db	101	;'e'
   747  006FC4  69                 	db	105	;'i'
   748  006FC5  64                 	db	100	;'d'
   749  006FC6  20                 	db	32
   750  006FC7  28                 	db	40
   751  006FC8  6D                 	db	109	;'m'
   752  006FC9  61                 	db	97	;'a'
   753  006FCA  73                 	db	115	;'s'
   754  006FCB  6B                 	db	107	;'k'
   755  006FCC  6E                 	db	110	;'n'
   756  006FCD  6F                 	db	111	;'o'
   757  006FCE  20                 	db	32
   758  006FCF  3D                 	db	61	;'='
   759  006FD0  20                 	db	32
   760  006FD1  30                 	db	48	;'0'
   761  006FD2  20                 	db	32
   762  006FD3  6F                 	db	111	;'o'
   763  006FD4  72                 	db	114	;'r'
   764  006FD5  20                 	db	32
   765  006FD6  31                 	db	49	;'1'
   766  006FD7  29                 	db	41
   767  006FD8  2E                 	db	46
   768  006FD9  0D                 	db	13
   769  006FDA  0A                 	db	10
   770  006FDB  00                 	db	0
   771  006FDC                     STR_282:
   772  006FDC  2D                 	db	45
   773  006FDD  2D                 	db	45
   774  006FDE  2D                 	db	45
   775  006FDF  2D                 	db	45
   776  006FE0  2D                 	db	45
   777  006FE1  2D                 	db	45
   778  006FE2  2D                 	db	45
   779  006FE3  2D                 	db	45
   780  006FE4  2D                 	db	45
   781  006FE5  2D                 	db	45
   782  006FE6  2D                 	db	45
   783  006FE7  2D                 	db	45
   784  006FE8  2D                 	db	45
   785  006FE9  2D                 	db	45
   786  006FEA  2D                 	db	45
   787  006FEB  2D                 	db	45
   788  006FEC  2D                 	db	45
   789  006FED  2D                 	db	45
   790  006FEE  2D                 	db	45
   791  006FEF  2D                 	db	45
   792  006FF0  2D                 	db	45
   793  006FF1  2D                 	db	45
   794  006FF2  2D                 	db	45
   795  006FF3  2D                 	db	45
   796  006FF4  2D                 	db	45
   797  006FF5  2D                 	db	45
   798  006FF6  2D                 	db	45
   799  006FF7  2D                 	db	45
   800  006FF8  2D                 	db	45
   801  006FF9  2D                 	db	45
   802  006FFA  2D                 	db	45
   803  006FFB  2D                 	db	45
   804  006FFC  2D                 	db	45
   805  006FFD  2D                 	db	45
   806  006FFE  2D                 	db	45
   807  006FFF  2D                 	db	45
   808  007000  2D                 	db	45
   809  007001  2D                 	db	45
   810  007002  2D                 	db	45
   811  007003  2D                 	db	45
   812  007004  2D                 	db	45
   813  007005  2D                 	db	45
   814  007006  2D                 	db	45
   815  007007  2D                 	db	45
   816  007008  2D                 	db	45
   817  007009  2D                 	db	45
   818  00700A  2D                 	db	45
   819  00700B  2D                 	db	45
   820  00700C  2D                 	db	45
   821  00700D  2D                 	db	45
   822  00700E  2D                 	db	45
   823  00700F  2D                 	db	45
   824  007010  2D                 	db	45
   825  007011  2D                 	db	45
   826  007012  2D                 	db	45
   827  007013  2D                 	db	45
   828  007014  2D                 	db	45
   829  007015  2D                 	db	45
   830  007016  2D                 	db	45
   831  007017  2D                 	db	45
   832  007018  2D                 	db	45
   833  007019  2D                 	db	45
   834  00701A  2D                 	db	45
   835  00701B  2D                 	db	45
   836  00701C  0D                 	db	13
   837  00701D  0A                 	db	10
   838  00701E  00                 	db	0
   839  00701F                     STR_276:
   840  00701F  20                 	db	32
   841  007020  20                 	db	32
   842  007021  20                 	db	32
   843  007022  20                 	db	32
   844  007023  52                 	db	82	;'R'
   845  007024  57                 	db	87	;'W'
   846  007025  54                 	db	84	;'T'
   847  007026  49                 	db	73	;'I'
   848  007027  4D                 	db	77	;'M'
   849  007028  45                 	db	69	;'E'
   850  007029  4F                 	db	79	;'O'
   851  00702A  55                 	db	85	;'U'
   852  00702B  54                 	db	84	;'T'
   853  00702C  20                 	db	32
   854  00702D  2D                 	db	45
   855  00702E  20                 	db	32
   856  00702F  53                 	db	83	;'S'
   857  007030  65                 	db	101	;'e'
   858  007031  74                 	db	116	;'t'
   859  007032  20                 	db	32
   860  007033  72                 	db	114	;'r'
   861  007034  65                 	db	101	;'e'
   862  007035  67                 	db	103	;'g'
   863  007036  69                 	db	105	;'i'
   864  007037  73                 	db	115	;'s'
   865  007038  74                 	db	116	;'t'
   866  007039  65                 	db	101	;'e'
   867  00703A  72                 	db	114	;'r'
   868  00703B  20                 	db	32
   869  00703C  72                 	db	114	;'r'
   870  00703D  65                 	db	101	;'e'
   871  00703E  61                 	db	97	;'a'
   872  00703F  64                 	db	100	;'d'
   873  007040  2F                 	db	47
   874  007041  77                 	db	119	;'w'
   875  007042  72                 	db	114	;'r'
   876  007043  69                 	db	105	;'i'
   877  007044  74                 	db	116	;'t'
   878  007045  65                 	db	101	;'e'
   879  007046  20                 	db	32
   880  007047  74                 	db	116	;'t'
   881  007048  69                 	db	105	;'i'
   882  007049  6D                 	db	109	;'m'
   883  00704A  65                 	db	101	;'e'
   884  00704B  6F                 	db	111	;'o'
   885  00704C  75                 	db	117	;'u'
   886  00704D  74                 	db	116	;'t'
   887  00704E  2E                 	db	46
   888  00704F  20                 	db	32
   889  007050  44                 	db	68	;'D'
   890  007051  65                 	db	101	;'e'
   891  007052  66                 	db	102	;'f'
   892  007053  61                 	db	97	;'a'
   893  007054  75                 	db	117	;'u'
   894  007055  6C                 	db	108	;'l'
   895  007056  74                 	db	116	;'t'
   896  007057  3D                 	db	61	;'='
   897  007058  32                 	db	50	;'2'
   898  007059  30                 	db	48	;'0'
   899  00705A  20                 	db	32
   900  00705B  6D                 	db	109	;'m'
   901  00705C  73                 	db	115	;'s'
   902  00705D  20                 	db	32
   903  00705E  2E                 	db	46
   904  00705F  0D                 	db	13
   905  007060  0A                 	db	10
   906  007061  00                 	db	0
   907  007062                     STR_107:
   908  007062  2D                 	db	45
   909  007063  45                 	db	69	;'E'
   910  007064  52                 	db	82	;'R'
   911  007065  52                 	db	82	;'R'
   912  007066  4F                 	db	79	;'O'
   913  007067  52                 	db	82	;'R'
   914  007068  20                 	db	32
   915  007069  2D                 	db	45
   916  00706A  20                 	db	32
   917  00706B  46                 	db	70	;'F'
   918  00706C  69                 	db	105	;'i'
   919  00706D  6C                 	db	108	;'l'
   920  00706E  74                 	db	116	;'t'
   921  00706F  65                 	db	101	;'e'
   922  007070  72                 	db	114	;'r'
   923  007071  20                 	db	32
   924  007072  6E                 	db	110	;'n'
   925  007073  75                 	db	117	;'u'
   926  007074  6D                 	db	109	;'m'
   927  007075  62                 	db	98	;'b'
   928  007076  65                 	db	101	;'e'
   929  007077  72                 	db	114	;'r'
   930  007078  20                 	db	32
   931  007079  63                 	db	99	;'c'
   932  00707A  61                 	db	97	;'a'
   933  00707B  6E                 	db	110	;'n'
   934  00707C  20                 	db	32
   935  00707D  6F                 	db	111	;'o'
   936  00707E  6E                 	db	110	;'n'
   937  00707F  6C                 	db	108	;'l'
   938  007080  79                 	db	121	;'y'
   939  007081  20                 	db	32
   940  007082  62                 	db	98	;'b'
   941  007083  65                 	db	101	;'e'
   942  007084  20                 	db	32
   943  007085  73                 	db	115	;'s'
   944  007086  65                 	db	101	;'e'
   945  007087  74                 	db	116	;'t'
   946  007088  20                 	db	32
   947  007089  74                 	db	116	;'t'
   948  00708A  6F                 	db	111	;'o'
   949  00708B  20                 	db	32
   950  00708C  61                 	db	97	;'a'
   951  00708D  20                 	db	32
   952  00708E  76                 	db	118	;'v'
   953  00708F  61                 	db	97	;'a'
   954  007090  6C                 	db	108	;'l'
   955  007091  75                 	db	117	;'u'
   956  007092  65                 	db	101	;'e'
   957  007093  20                 	db	32
   958  007094  62                 	db	98	;'b'
   959  007095  65                 	db	101	;'e'
   960  007096  74                 	db	116	;'t'
   961  007097  77                 	db	119	;'w'
   962  007098  65                 	db	101	;'e'
   963  007099  65                 	db	101	;'e'
   964  00709A  6E                 	db	110	;'n'
   965  00709B  20                 	db	32
   966  00709C  30                 	db	48	;'0'
   967  00709D  2D                 	db	45
   968  00709E  31                 	db	49	;'1'
   969  00709F  35                 	db	53	;'5'
   970  0070A0  2E                 	db	46
   971  0070A1  0D                 	db	13
   972  0070A2  0A                 	db	10
   973  0070A3  00                 	db	0
   974  0070A4                     STR_279:
   975  0070A4  20                 	db	32
   976  0070A5  20                 	db	32
   977  0070A6  20                 	db	32
   978  0070A7  20                 	db	32
   979  0070A8  4D                 	db	77	;'M'
   980  0070A9  4F                 	db	79	;'O'
   981  0070AA  44                 	db	68	;'D'
   982  0070AB  45                 	db	69	;'E'
   983  0070AC  20                 	db	32
   984  0070AD  2D                 	db	45
   985  0070AE  20                 	db	32
   986  0070AF  53                 	db	83	;'S'
   987  0070B0  65                 	db	101	;'e'
   988  0070B1  74                 	db	116	;'t'
   989  0070B2  20                 	db	32
   990  0070B3  61                 	db	97	;'a'
   991  0070B4  64                 	db	100	;'d'
   992  0070B5  61                 	db	97	;'a'
   993  0070B6  70                 	db	112	;'p'
   994  0070B7  74                 	db	116	;'t'
   995  0070B8  65                 	db	101	;'e'
   996  0070B9  72                 	db	114	;'r'
   997  0070BA  20                 	db	32
   998  0070BB  6D                 	db	109	;'m'
   999  0070BC  6F                 	db	111	;'o'
  1000  0070BD  64                 	db	100	;'d'
  1001  0070BE  65                 	db	101	;'e'
  1002  0070BF  20                 	db	32
  1003  0070C0  74                 	db	116	;'t'
  1004  0070C1  68                 	db	104	;'h'
  1005  0070C2  61                 	db	97	;'a'
  1006  0070C3  74                 	db	116	;'t'
  1007  0070C4  20                 	db	32
  1008  0070C5  73                 	db	115	;'s'
  1009  0070C6  68                 	db	104	;'h'
  1010  0070C7  6F                 	db	111	;'o'
  1011  0070C8  75                 	db	117	;'u'
  1012  0070C9  6C                 	db	108	;'l'
  1013  0070CA  64                 	db	100	;'d'
  1014  0070CB  20                 	db	32
  1015  0070CC  62                 	db	98	;'b'
  1016  0070CD  65                 	db	101	;'e'
  1017  0070CE  20                 	db	32
  1018  0070CF  75                 	db	117	;'u'
  1019  0070D0  73                 	db	115	;'s'
  1020  0070D1  65                 	db	101	;'e'
  1021  0070D2  64                 	db	100	;'d'
  1022  0070D3  20                 	db	32
  1023  0070D4  6F                 	db	111	;'o'
  1024  0070D5  6E                 	db	110	;'n'
  1025  0070D6  20                 	db	32
  1026  0070D7  73                 	db	115	;'s'
  1027  0070D8  74                 	db	116	;'t'
  1028  0070D9  61                 	db	97	;'a'
  1029  0070DA  72                 	db	114	;'r'
  1030  0070DB  74                 	db	116	;'t'
  1031  0070DC  75                 	db	117	;'u'
  1032  0070DD  70                 	db	112	;'p'
  1033  0070DE  2E                 	db	46
  1034  0070DF  0D                 	db	13
  1035  0070E0  0A                 	db	10
  1036  0070E1  00                 	db	0
  1037  0070E2                     STR_240:
  1038  0070E2  54                 	db	84	;'T'
  1039  0070E3  72                 	db	114	;'r'
  1040  0070E4  61                 	db	97	;'a'
  1041  0070E5  6E                 	db	110	;'n'
  1042  0070E6  73                 	db	115	;'s'
  1043  0070E7  6D                 	db	109	;'m'
  1044  0070E8  69                 	db	105	;'i'
  1045  0070E9  74                 	db	116	;'t'
  1046  0070EA  74                 	db	116	;'t'
  1047  0070EB  65                 	db	101	;'e'
  1048  0070EC  72                 	db	114	;'r'
  1049  0070ED  20                 	db	32
  1050  0070EE  69                 	db	105	;'i'
  1051  0070EF  6E                 	db	110	;'n'
  1052  0070F0  20                 	db	32
  1053  0070F1  45                 	db	69	;'E'
  1054  0070F2  72                 	db	114	;'r'
  1055  0070F3  72                 	db	114	;'r'
  1056  0070F4  6F                 	db	111	;'o'
  1057  0070F5  72                 	db	114	;'r'
  1058  0070F6  20                 	db	32
  1059  0070F7  53                 	db	83	;'S'
  1060  0070F8  74                 	db	116	;'t'
  1061  0070F9  61                 	db	97	;'a'
  1062  0070FA  74                 	db	116	;'t'
  1063  0070FB  65                 	db	101	;'e'
  1064  0070FC  20                 	db	32
  1065  0070FD  57                 	db	87	;'W'
  1066  0070FE  61                 	db	97	;'a'
  1067  0070FF  72                 	db	114	;'r'
  1068  007100  6E                 	db	110	;'n'
  1069  007101  69                 	db	105	;'i'
  1070  007102  6E                 	db	110	;'n'
  1071  007103  67                 	db	103	;'g'
  1072  007104  20                 	db	32
  1073  007105  28                 	db	40
  1074  007106  31                 	db	49	;'1'
  1075  007107  32                 	db	50	;'2'
  1076  007108  38                 	db	56	;'8'
  1077  007109  20                 	db	32
  1078  00710A  3E                 	db	62	;'>'
  1079  00710B  20                 	db	32
  1080  00710C  54                 	db	84	;'T'
  1081  00710D  58                 	db	88	;'X'
  1082  00710E  45                 	db	69	;'E'
  1083  00710F  52                 	db	82	;'R'
  1084  007110  52                 	db	82	;'R'
  1085  007111  43                 	db	67	;'C'
  1086  007112  4E                 	db	78	;'N'
  1087  007113  54                 	db	84	;'T'
  1088  007114  20                 	db	32
  1089  007115  3E                 	db	62	;'>'
  1090  007116  20                 	db	32
  1091  007117  39                 	db	57	;'9'
  1092  007118  36                 	db	54	;'6'
  1093  007119  29                 	db	41
  1094  00711A  0D                 	db	13
  1095  00711B  0A                 	db	10
  1096  00711C  00                 	db	0
  1097  00711D                     STR_242:
  1098  00711D  54                 	db	84	;'T'
  1099  00711E  72                 	db	114	;'r'
  1100  00711F  61                 	db	97	;'a'
  1101  007120  6E                 	db	110	;'n'
  1102  007121  73                 	db	115	;'s'
  1103  007122  6D                 	db	109	;'m'
  1104  007123  69                 	db	105	;'i'
  1105  007124  74                 	db	116	;'t'
  1106  007125  74                 	db	116	;'t'
  1107  007126  65                 	db	101	;'e'
  1108  007127  72                 	db	114	;'r'
  1109  007128  20                 	db	32
  1110  007129  69                 	db	105	;'i'
  1111  00712A  6E                 	db	110	;'n'
  1112  00712B  20                 	db	32
  1113  00712C  45                 	db	69	;'E'
  1114  00712D  72                 	db	114	;'r'
  1115  00712E  72                 	db	114	;'r'
  1116  00712F  6F                 	db	111	;'o'
  1117  007130  72                 	db	114	;'r'
  1118  007131  20                 	db	32
  1119  007132  53                 	db	83	;'S'
  1120  007133  74                 	db	116	;'t'
  1121  007134  61                 	db	97	;'a'
  1122  007135  74                 	db	116	;'t'
  1123  007136  65                 	db	101	;'e'
  1124  007137  20                 	db	32
  1125  007138  42                 	db	66	;'B'
  1126  007139  75                 	db	117	;'u'
  1127  00713A  73                 	db	115	;'s'
  1128  00713B  20                 	db	32
  1129  00713C  50                 	db	80	;'P'
  1130  00713D  61                 	db	97	;'a'
  1131  00713E  73                 	db	115	;'s'
  1132  00713F  73                 	db	115	;'s'
  1133  007140  69                 	db	105	;'i'
  1134  007141  76                 	db	118	;'v'
  1135  007142  65                 	db	101	;'e'
  1136  007143  20                 	db	32
  1137  007144  28                 	db	40
  1138  007145  54                 	db	84	;'T'
  1139  007146  58                 	db	88	;'X'
  1140  007147  45                 	db	69	;'E'
  1141  007148  52                 	db	82	;'R'
  1142  007149  52                 	db	82	;'R'
  1143  00714A  43                 	db	67	;'C'
  1144  00714B  4E                 	db	78	;'N'
  1145  00714C  54                 	db	84	;'T'
  1146  00714D  20                 	db	32
  1147  00714E  3F                 	db	63	;'?'
  1148  00714F  20                 	db	32
  1149  007150  31                 	db	49	;'1'
  1150  007151  32                 	db	50	;'2'
  1151  007152  38                 	db	56	;'8'
  1152  007153  29                 	db	41
  1153  007154  0D                 	db	13
  1154  007155  0A                 	db	10
  1155  007156  00                 	db	0
  1156  007157                     STR_2:
  1157  007157  43                 	db	67	;'C'
  1158  007158  6F                 	db	111	;'o'
  1159  007159  70                 	db	112	;'p'
  1160  00715A  79                 	db	121	;'y'
  1161  00715B  72                 	db	114	;'r'
  1162  00715C  69                 	db	105	;'i'
  1163  00715D  67                 	db	103	;'g'
  1164  00715E  68                 	db	104	;'h'
  1165  00715F  74                 	db	116	;'t'
  1166  007160  20                 	db	32
  1167  007161  28                 	db	40
  1168  007162  43                 	db	67	;'C'
  1169  007163  29                 	db	41
  1170  007164  20                 	db	32
  1171  007165  32                 	db	50	;'2'
  1172  007166  30                 	db	48	;'0'
  1173  007167  31                 	db	49	;'1'
  1174  007168  34                 	db	52	;'4'
  1175  007169  2D                 	db	45
  1176  00716A  32                 	db	50	;'2'
  1177  00716B  30                 	db	48	;'0'
  1178  00716C  31                 	db	49	;'1'
  1179  00716D  35                 	db	53	;'5'
  1180  00716E  20                 	db	32
  1181  00716F  50                 	db	80	;'P'
  1182  007170  61                 	db	97	;'a'
  1183  007171  72                 	db	114	;'r'
  1184  007172  61                 	db	97	;'a'
  1185  007173  64                 	db	100	;'d'
  1186  007174  69                 	db	105	;'i'
  1187  007175  73                 	db	115	;'s'
  1188  007176  65                 	db	101	;'e'
  1189  007177  20                 	db	32
  1190  007178  6F                 	db	111	;'o'
  1191  007179  66                 	db	102	;'f'
  1192  00717A  20                 	db	32
  1193  00717B  74                 	db	116	;'t'
  1194  00717C  68                 	db	104	;'h'
  1195  00717D  65                 	db	101	;'e'
  1196  00717E  20                 	db	32
  1197  00717F  46                 	db	70	;'F'
  1198  007180  72                 	db	114	;'r'
  1199  007181  6F                 	db	111	;'o'
  1200  007182  67                 	db	103	;'g'
  1201  007183  20                 	db	32
  1202  007184  41                 	db	65	;'A'
  1203  007185  42                 	db	66	;'B'
  1204  007186  2C                 	db	44
  1205  007187  20                 	db	32
  1206  007188  53                 	db	83	;'S'
  1207  007189  77                 	db	119	;'w'
  1208  00718A  65                 	db	101	;'e'
  1209  00718B  64                 	db	100	;'d'
  1210  00718C  65                 	db	101	;'e'
  1211  00718D  6E                 	db	110	;'n'
  1212  00718E  0D                 	db	13
  1213  00718F  0A                 	db	10
  1214  007190  00                 	db	0
  1215  007191                     STR_248:
  1216  007191  52                 	db	82	;'R'
  1217  007192  65                 	db	101	;'e'
  1218  007193  63                 	db	99	;'c'
  1219  007194  65                 	db	101	;'e'
  1220  007195  69                 	db	105	;'i'
  1221  007196  76                 	db	118	;'v'
  1222  007197  65                 	db	101	;'e'
  1223  007198  72                 	db	114	;'r'
  1224  007199  20                 	db	32
  1225  00719A  20                 	db	32
  1226  00719B  69                 	db	105	;'i'
  1227  00719C  6E                 	db	110	;'n'
  1228  00719D  20                 	db	32
  1229  00719E  45                 	db	69	;'E'
  1230  00719F  72                 	db	114	;'r'
  1231  0071A0  72                 	db	114	;'r'
  1232  0071A1  6F                 	db	111	;'o'
  1233  0071A2  72                 	db	114	;'r'
  1234  0071A3  20                 	db	32
  1235  0071A4  53                 	db	83	;'S'
  1236  0071A5  74                 	db	116	;'t'
  1237  0071A6  61                 	db	97	;'a'
  1238  0071A7  74                 	db	116	;'t'
  1239  0071A8  65                 	db	101	;'e'
  1240  0071A9  20                 	db	32
  1241  0071AA  57                 	db	87	;'W'
  1242  0071AB  61                 	db	97	;'a'
  1243  0071AC  72                 	db	114	;'r'
  1244  0071AD  6E                 	db	110	;'n'
  1245  0071AE  69                 	db	105	;'i'
  1246  0071AF  6E                 	db	110	;'n'
  1247  0071B0  67                 	db	103	;'g'
  1248  0071B1  20                 	db	32
  1249  0071B2  28                 	db	40
  1250  0071B3  31                 	db	49	;'1'
  1251  0071B4  32                 	db	50	;'2'
  1252  0071B5  38                 	db	56	;'8'
  1253  0071B6  20                 	db	32
  1254  0071B7  3E                 	db	62	;'>'
  1255  0071B8  20                 	db	32
  1256  0071B9  52                 	db	82	;'R'
  1257  0071BA  58                 	db	88	;'X'
  1258  0071BB  45                 	db	69	;'E'
  1259  0071BC  52                 	db	82	;'R'
  1260  0071BD  52                 	db	82	;'R'
  1261  0071BE  43                 	db	67	;'C'
  1262  0071BF  4E                 	db	78	;'N'
  1263  0071C0  54                 	db	84	;'T'
  1264  0071C1  20                 	db	32
  1265  0071C2  3E                 	db	62	;'>'
  1266  0071C3  20                 	db	32
  1267  0071C4  39                 	db	57	;'9'
  1268  0071C5  36                 	db	54	;'6'
  1269  0071C6  29                 	db	41
  1270  0071C7  0D                 	db	13
  1271  0071C8  0A                 	db	10
  1272  0071C9  00                 	db	0
  1273  0071CA                     STR_260:
  1274  0071CA  20                 	db	32
  1275  0071CB  20                 	db	32
  1276  0071CC  20                 	db	32
  1277  0071CD  20                 	db	32
  1278  0071CE  20                 	db	32
  1279  0071CF  46                 	db	70	;'F'
  1280  0071D0  6F                 	db	111	;'o'
  1281  0071D1  72                 	db	114	;'r'
  1282  0071D2  6D                 	db	109	;'m'
  1283  0071D3  61                 	db	97	;'a'
  1284  0071D4  74                 	db	116	;'t'
  1285  0071D5  3A                 	db	58	;':'
  1286  0071D6  20                 	db	32
  1287  0071D7  70                 	db	112	;'p'
  1288  0071D8  72                 	db	114	;'r'
  1289  0071D9  69                 	db	105	;'i'
  1290  0071DA  6F                 	db	111	;'o'
  1291  0071DB  72                 	db	114	;'r'
  1292  0071DC  69                 	db	105	;'i'
  1293  0071DD  74                 	db	116	;'t'
  1294  0071DE  79                 	db	121	;'y'
  1295  0071DF  2C                 	db	44
  1296  0071E0  63                 	db	99	;'c'
  1297  0071E1  6C                 	db	108	;'l'
  1298  0071E2  61                 	db	97	;'a'
  1299  0071E3  73                 	db	115	;'s'
  1300  0071E4  73                 	db	115	;'s'
  1301  0071E5  2C                 	db	44
  1302  0071E6  74                 	db	116	;'t'
  1303  0071E7  79                 	db	121	;'y'
  1304  0071E8  70                 	db	112	;'p'
  1305  0071E9  65                 	db	101	;'e'
  1306  0071EA  2C                 	db	44
  1307  0071EB  6E                 	db	110	;'n'
  1308  0071EC  6F                 	db	111	;'o'
  1309  0071ED  64                 	db	100	;'d'
  1310  0071EE  65                 	db	101	;'e'
  1311  0071EF  69                 	db	105	;'i'
  1312  0071F0  64                 	db	100	;'d'
  1313  0071F1  2C                 	db	44
  1314  0071F2  63                 	db	99	;'c'
  1315  0071F3  6F                 	db	111	;'o'
  1316  0071F4  75                 	db	117	;'u'
  1317  0071F5  6E                 	db	110	;'n'
  1318  0071F6  74                 	db	116	;'t'
  1319  0071F7  2C                 	db	44
  1320  0071F8  64                 	db	100	;'d'
  1321  0071F9  61                 	db	97	;'a'
  1322  0071FA  74                 	db	116	;'t'
  1323  0071FB  61                 	db	97	;'a'
  1324  0071FC  2C                 	db	44
  1325  0071FD  2C                 	db	44
  1326  0071FE  2C                 	db	44
  1327  0071FF  0D                 	db	13
  1328  007200  0A                 	db	10
  1329  007201  00                 	db	0
  1330  007202                     STR_247:
  1331  007202  52                 	db	82	;'R'
  1332  007203  65                 	db	101	;'e'
  1333  007204  63                 	db	99	;'c'
  1334  007205  65                 	db	101	;'e'
  1335  007206  69                 	db	105	;'i'
  1336  007207  76                 	db	118	;'v'
  1337  007208  65                 	db	101	;'e'
  1338  007209  72                 	db	114	;'r'
  1339  00720A  20                 	db	32
  1340  00720B  69                 	db	105	;'i'
  1341  00720C  6E                 	db	110	;'n'
  1342  00720D  20                 	db	32
  1343  00720E  45                 	db	69	;'E'
  1344  00720F  72                 	db	114	;'r'
  1345  007210  72                 	db	114	;'r'
  1346  007211  6F                 	db	111	;'o'
  1347  007212  72                 	db	114	;'r'
  1348  007213  20                 	db	32
  1349  007214  53                 	db	83	;'S'
  1350  007215  74                 	db	116	;'t'
  1351  007216  61                 	db	97	;'a'
  1352  007217  74                 	db	116	;'t'
  1353  007218  65                 	db	101	;'e'
  1354  007219  20                 	db	32
  1355  00721A  42                 	db	66	;'B'
  1356  00721B  75                 	db	117	;'u'
  1357  00721C  73                 	db	115	;'s'
  1358  00721D  20                 	db	32
  1359  00721E  50                 	db	80	;'P'
  1360  00721F  61                 	db	97	;'a'
  1361  007220  73                 	db	115	;'s'
  1362  007221  73                 	db	115	;'s'
  1363  007222  69                 	db	105	;'i'
  1364  007223  76                 	db	118	;'v'
  1365  007224  65                 	db	101	;'e'
  1366  007225  20                 	db	32
  1367  007226  28                 	db	40
  1368  007227  52                 	db	82	;'R'
  1369  007228  58                 	db	88	;'X'
  1370  007229  45                 	db	69	;'E'
  1371  00722A  52                 	db	82	;'R'
  1372  00722B  52                 	db	82	;'R'
  1373  00722C  43                 	db	67	;'C'
  1374  00722D  4E                 	db	78	;'N'
  1375  00722E  54                 	db	84	;'T'
  1376  00722F  20                 	db	32
  1377  007230  3E                 	db	62	;'>'
  1378  007231  20                 	db	32
  1379  007232  31                 	db	49	;'1'
  1380  007233  32                 	db	50	;'2'
  1381  007234  37                 	db	55	;'7'
  1382  007235  29                 	db	41
  1383  007236  0D                 	db	13
  1384  007237  0A                 	db	10
  1385  007238  00                 	db	0
  1386  007239                     STR_278:
  1387  007239  20                 	db	32
  1388  00723A  20                 	db	32
  1389  00723B  20                 	db	32
  1390  00723C  20                 	db	32
  1391  00723D  53                 	db	83	;'S'
  1392  00723E  54                 	db	84	;'T'
  1393  00723F  41                 	db	65	;'A'
  1394  007240  52                 	db	82	;'R'
  1395  007241  54                 	db	84	;'T'
  1396  007242  49                 	db	73	;'I'
  1397  007243  46                 	db	70	;'F'
  1398  007244  20                 	db	32
  1399  007245  2D                 	db	45
  1400  007246  20                 	db	32
  1401  007247  53                 	db	83	;'S'
  1402  007248  65                 	db	101	;'e'
  1403  007249  74                 	db	116	;'t'
  1404  00724A  20                 	db	32
  1405  00724B  69                 	db	105	;'i'
  1406  00724C  6E                 	db	110	;'n'
  1407  00724D  74                 	db	116	;'t'
  1408  00724E  65                 	db	101	;'e'
  1409  00724F  72                 	db	114	;'r'
  1410  007250  66                 	db	102	;'f'
  1411  007251  61                 	db	97	;'a'
  1412  007252  63                 	db	99	;'c'
  1413  007253  65                 	db	101	;'e'
  1414  007254  20                 	db	32
  1415  007255  73                 	db	115	;'s'
  1416  007256  74                 	db	116	;'t'
  1417  007257  61                 	db	97	;'a'
  1418  007258  74                 	db	116	;'t'
  1419  007259  65                 	db	101	;'e'
  1420  00725A  20                 	db	32
  1421  00725B  74                 	db	116	;'t'
  1422  00725C  6F                 	db	111	;'o'
  1423  00725D  20                 	db	32
  1424  00725E  75                 	db	117	;'u'
  1425  00725F  73                 	db	115	;'s'
  1426  007260  65                 	db	101	;'e'
  1427  007261  20                 	db	32
  1428  007262  6F                 	db	111	;'o'
  1429  007263  6E                 	db	110	;'n'
  1430  007264  20                 	db	32
  1431  007265  73                 	db	115	;'s'
  1432  007266  74                 	db	116	;'t'
  1433  007267  61                 	db	97	;'a'
  1434  007268  72                 	db	114	;'r'
  1435  007269  74                 	db	116	;'t'
  1436  00726A  75                 	db	117	;'u'
  1437  00726B  70                 	db	112	;'p'
  1438  00726C  2E                 	db	46
  1439  00726D  0D                 	db	13
  1440  00726E  0A                 	db	10
  1441  00726F  00                 	db	0
  1442  007270                     STR_4:
  1443  007270  50                 	db	80	;'P'
  1444  007271  72                 	db	114	;'r'
  1445  007272  65                 	db	101	;'e'
  1446  007273  73                 	db	115	;'s'
  1447  007274  73                 	db	115	;'s'
  1448  007275  20                 	db	32
  1449  007276  27                 	db	39
  1450  007277  76                 	db	118	;'v'
  1451  007278  27                 	db	39
  1452  007279  20                 	db	32
  1453  00727A  77                 	db	119	;'w'
  1454  00727B  69                 	db	105	;'i'
  1455  00727C  74                 	db	116	;'t'
  1456  00727D  68                 	db	104	;'h'
  1457  00727E  69                 	db	105	;'i'
  1458  00727F  6E                 	db	110	;'n'
  1459  007280  20                 	db	32
  1460  007281  74                 	db	116	;'t'
  1461  007282  68                 	db	104	;'h'
  1462  007283  72                 	db	114	;'r'
  1463  007284  65                 	db	101	;'e'
  1464  007285  65                 	db	101	;'e'
  1465  007286  20                 	db	32
  1466  007287  73                 	db	115	;'s'
  1467  007288  65                 	db	101	;'e'
  1468  007289  63                 	db	99	;'c'
  1469  00728A  6F                 	db	111	;'o'
  1470  00728B  6E                 	db	110	;'n'
  1471  00728C  64                 	db	100	;'d'
  1472  00728D  73                 	db	115	;'s'
  1473  00728E  20                 	db	32
  1474  00728F  74                 	db	116	;'t'
  1475  007290  6F                 	db	111	;'o'
  1476  007291  20                 	db	32
  1477  007292  65                 	db	101	;'e'
  1478  007293  6E                 	db	110	;'n'
  1479  007294  74                 	db	116	;'t'
  1480  007295  65                 	db	101	;'e'
  1481  007296  72                 	db	114	;'r'
  1482  007297  20                 	db	32
  1483  007298  76                 	db	118	;'v'
  1484  007299  65                 	db	101	;'e'
  1485  00729A  72                 	db	114	;'r'
  1486  00729B  62                 	db	98	;'b'
  1487  00729C  6F                 	db	111	;'o'
  1488  00729D  73                 	db	115	;'s'
  1489  00729E  65                 	db	101	;'e'
  1490  00729F  20                 	db	32
  1491  0072A0  6D                 	db	109	;'m'
  1492  0072A1  6F                 	db	111	;'o'
  1493  0072A2  64                 	db	100	;'d'
  1494  0072A3  65                 	db	101	;'e'
  1495  0072A4  0D                 	db	13
  1496  0072A5  0A                 	db	10
  1497  0072A6  00                 	db	0
  1498  0072A7                     STR_241:
  1499  0072A7  54                 	db	84	;'T'
  1500  0072A8  72                 	db	114	;'r'
  1501  0072A9  61                 	db	97	;'a'
  1502  0072AA  6E                 	db	110	;'n'
  1503  0072AB  73                 	db	115	;'s'
  1504  0072AC  6D                 	db	109	;'m'
  1505  0072AD  69                 	db	105	;'i'
  1506  0072AE  74                 	db	116	;'t'
  1507  0072AF  74                 	db	116	;'t'
  1508  0072B0  65                 	db	101	;'e'
  1509  0072B1  72                 	db	114	;'r'
  1510  0072B2  20                 	db	32
  1511  0072B3  69                 	db	105	;'i'
  1512  0072B4  6E                 	db	110	;'n'
  1513  0072B5  20                 	db	32
  1514  0072B6  45                 	db	69	;'E'
  1515  0072B7  72                 	db	114	;'r'
  1516  0072B8  72                 	db	114	;'r'
  1517  0072B9  6F                 	db	111	;'o'
  1518  0072BA  72                 	db	114	;'r'
  1519  0072BB  20                 	db	32
  1520  0072BC  53                 	db	83	;'S'
  1521  0072BD  74                 	db	116	;'t'
  1522  0072BE  61                 	db	97	;'a'
  1523  0072BF  74                 	db	116	;'t'
  1524  0072C0  65                 	db	101	;'e'
  1525  0072C1  20                 	db	32
  1526  0072C2  42                 	db	66	;'B'
  1527  0072C3  75                 	db	117	;'u'
  1528  0072C4  73                 	db	115	;'s'
  1529  0072C5  20                 	db	32
  1530  0072C6  4F                 	db	79	;'O'
  1531  0072C7  46                 	db	70	;'F'
  1532  0072C8  46                 	db	70	;'F'
  1533  0072C9  20                 	db	32
  1534  0072CA  28                 	db	40
  1535  0072CB  54                 	db	84	;'T'
  1536  0072CC  58                 	db	88	;'X'
  1537  0072CD  45                 	db	69	;'E'
  1538  0072CE  52                 	db	82	;'R'
  1539  0072CF  52                 	db	82	;'R'
  1540  0072D0  43                 	db	67	;'C'
  1541  0072D1  4E                 	db	78	;'N'
  1542  0072D2  54                 	db	84	;'T'
  1543  0072D3  20                 	db	32
  1544  0072D4  3F                 	db	63	;'?'
  1545  0072D5  20                 	db	32
  1546  0072D6  32                 	db	50	;'2'
  1547  0072D7  35                 	db	53	;'5'
  1548  0072D8  36                 	db	54	;'6'
  1549  0072D9  29                 	db	41
  1550  0072DA  0D                 	db	13
  1551  0072DB  0A                 	db	10
  1552  0072DC  00                 	db	0
  1553  0072DD                     STR_80:
  1554  0072DD  2D                 	db	45
  1555  0072DE  45                 	db	69	;'E'
  1556  0072DF  52                 	db	82	;'R'
  1557  0072E0  52                 	db	82	;'R'
  1558  0072E1  4F                 	db	79	;'O'
  1559  0072E2  52                 	db	82	;'R'
  1560  0072E3  20                 	db	32
  1561  0072E4  2D                 	db	45
  1562  0072E5  20                 	db	32
  1563  0072E6  4F                 	db	79	;'O'
  1564  0072E7  6E                 	db	110	;'n'
  1565  0072E8  65                 	db	101	;'e'
  1566  0072E9  20                 	db	32
  1567  0072EA  6F                 	db	111	;'o'
  1568  0072EB  72                 	db	114	;'r'
  1569  0072EC  20                 	db	32
  1570  0072ED  6D                 	db	109	;'m'
  1571  0072EE  6F                 	db	111	;'o'
  1572  0072EF  72                 	db	114	;'r'
  1573  0072F0  65                 	db	101	;'e'
  1574  0072F1  20                 	db	32
  1575  0072F2  72                 	db	114	;'r'
  1576  0072F3  65                 	db	101	;'e'
  1577  0072F4  67                 	db	103	;'g'
  1578  0072F5  69                 	db	105	;'i'
  1579  0072F6  73                 	db	115	;'s'
  1580  0072F7  74                 	db	116	;'t'
  1581  0072F8  65                 	db	101	;'e'
  1582  0072F9  72                 	db	114	;'r'
  1583  0072FA  28                 	db	40
  1584  0072FB  73                 	db	115	;'s'
  1585  0072FC  29                 	db	41
  1586  0072FD  20                 	db	32
  1587  0072FE  63                 	db	99	;'c'
  1588  0072FF  6F                 	db	111	;'o'
  1589  007300  75                 	db	117	;'u'
  1590  007301  6C                 	db	108	;'l'
  1591  007302  64                 	db	100	;'d'
  1592  007303  20                 	db	32
  1593  007304  6E                 	db	110	;'n'
  1594  007305  6F                 	db	111	;'o'
  1595  007306  74                 	db	116	;'t'
  1596  007307  20                 	db	32
  1597  007308  62                 	db	98	;'b'
  1598  007309  65                 	db	101	;'e'
  1599  00730A  20                 	db	32
  1600  00730B  72                 	db	114	;'r'
  1601  00730C  65                 	db	101	;'e'
  1602  00730D  61                 	db	97	;'a'
  1603  00730E  64                 	db	100	;'d'
  1604  00730F  2E                 	db	46
  1605  007310  0D                 	db	13
  1606  007311  0A                 	db	10
  1607  007312  00                 	db	0
  1608  007313                     STR_50:
  1609  007313  2D                 	db	45
  1610  007314  45                 	db	69	;'E'
  1611  007315  52                 	db	82	;'R'
  1612  007316  52                 	db	82	;'R'
  1613  007317  4F                 	db	79	;'O'
  1614  007318  52                 	db	82	;'R'
  1615  007319  20                 	db	32
  1616  00731A  2D                 	db	45
  1617  00731B  20                 	db	32
  1618  00731C  43                 	db	67	;'C'
  1619  00731D  6F                 	db	111	;'o'
  1620  00731E  6D                 	db	109	;'m'
  1621  00731F  6D                 	db	109	;'m'
  1622  007320  61                 	db	97	;'a'
  1623  007321  6E                 	db	110	;'n'
  1624  007322  64                 	db	100	;'d'
  1625  007323  20                 	db	32
  1626  007324  6F                 	db	111	;'o'
  1627  007325  6E                 	db	110	;'n'
  1628  007326  6C                 	db	108	;'l'
  1629  007327  79                 	db	121	;'y'
  1630  007328  20                 	db	32
  1631  007329  77                 	db	119	;'w'
  1632  00732A  6F                 	db	111	;'o'
  1633  00732B  72                 	db	114	;'r'
  1634  00732C  6B                 	db	107	;'k'
  1635  00732D  73                 	db	115	;'s'
  1636  00732E  20                 	db	32
  1637  00732F  69                 	db	105	;'i'
  1638  007330  66                 	db	102	;'f'
  1639  007331  20                 	db	32
  1640  007332  69                 	db	105	;'i'
  1641  007333  6E                 	db	110	;'n'
  1642  007334  74                 	db	116	;'t'
  1643  007335  65                 	db	101	;'e'
  1644  007336  72                 	db	114	;'r'
  1645  007337  66                 	db	102	;'f'
  1646  007338  61                 	db	97	;'a'
  1647  007339  63                 	db	99	;'c'
  1648  00733A  65                 	db	101	;'e'
  1649  00733B  20                 	db	32
  1650  00733C  69                 	db	105	;'i'
  1651  00733D  73                 	db	115	;'s'
  1652  00733E  20                 	db	32
  1653  00733F  6F                 	db	111	;'o'
  1654  007340  70                 	db	112	;'p'
  1655  007341  65                 	db	101	;'e'
  1656  007342  6E                 	db	110	;'n'
  1657  007343  2E                 	db	46
  1658  007344  0D                 	db	13
  1659  007345  0A                 	db	10
  1660  007346  00                 	db	0
  1661  007347                     STR_235:
  1662  007347  54                 	db	84	;'T'
  1663  007348  72                 	db	114	;'r'
  1664  007349  61                 	db	97	;'a'
  1665  00734A  6E                 	db	110	;'n'
  1666  00734B  73                 	db	115	;'s'
  1667  00734C  6D                 	db	109	;'m'
  1668  00734D  69                 	db	105	;'i'
  1669  00734E  74                 	db	116	;'t'
  1670  00734F  74                 	db	116	;'t'
  1671  007350  65                 	db	101	;'e'
  1672  007351  72                 	db	114	;'r'
  1673  007352  20                 	db	32
  1674  007353  6F                 	db	111	;'o'
  1675  007354  72                 	db	114	;'r'
  1676  007355  20                 	db	32
  1677  007356  52                 	db	82	;'R'
  1678  007357  65                 	db	101	;'e'
  1679  007358  63                 	db	99	;'c'
  1680  007359  65                 	db	101	;'e'
  1681  00735A  69                 	db	105	;'i'
  1682  00735B  76                 	db	118	;'v'
  1683  00735C  65                 	db	101	;'e'
  1684  00735D  72                 	db	114	;'r'
  1685  00735E  20                 	db	32
  1686  00735F  69                 	db	105	;'i'
  1687  007360  73                 	db	115	;'s'
  1688  007361  20                 	db	32
  1689  007362  69                 	db	105	;'i'
  1690  007363  6E                 	db	110	;'n'
  1691  007364  20                 	db	32
  1692  007365  45                 	db	69	;'E'
  1693  007366  72                 	db	114	;'r'
  1694  007367  72                 	db	114	;'r'
  1695  007368  6F                 	db	111	;'o'
  1696  007369  72                 	db	114	;'r'
  1697  00736A  20                 	db	32
  1698  00736B  53                 	db	83	;'S'
  1699  00736C  74                 	db	116	;'t'
  1700  00736D  61                 	db	97	;'a'
  1701  00736E  74                 	db	116	;'t'
  1702  00736F  65                 	db	101	;'e'
  1703  007370  20                 	db	32
  1704  007371  57                 	db	87	;'W'
  1705  007372  61                 	db	97	;'a'
  1706  007373  72                 	db	114	;'r'
  1707  007374  6E                 	db	110	;'n'
  1708  007375  69                 	db	105	;'i'
  1709  007376  6E                 	db	110	;'n'
  1710  007377  67                 	db	103	;'g'
  1711  007378  0D                 	db	13
  1712  007379  0A                 	db	10
  1713  00737A  00                 	db	0
  1714  00737B                     STR_254:
  1715  00737B  4C                 	db	76	;'L'
  1716  00737C  49                 	db	73	;'I'
  1717  00737D  53                 	db	83	;'S'
  1718  00737E  54                 	db	84	;'T'
  1719  00737F  45                 	db	69	;'E'
  1720  007380  4E                 	db	78	;'N'
  1721  007381  20                 	db	32
  1722  007382  2D                 	db	45
  1723  007383  20                 	db	32
  1724  007384  4F                 	db	79	;'O'
  1725  007385  70                 	db	112	;'p'
  1726  007386  65                 	db	101	;'e'
  1727  007387  6E                 	db	110	;'n'
  1728  007388  20                 	db	32
  1729  007389  43                 	db	67	;'C'
  1730  00738A  41                 	db	65	;'A'
  1731  00738B  4E                 	db	78	;'N'
  1732  00738C  20                 	db	32
  1733  00738D  69                 	db	105	;'i'
  1734  00738E  6E                 	db	110	;'n'
  1735  00738F  74                 	db	116	;'t'
  1736  007390  65                 	db	101	;'e'
  1737  007391  72                 	db	114	;'r'
  1738  007392  66                 	db	102	;'f'
  1739  007393  61                 	db	97	;'a'
  1740  007394  63                 	db	99	;'c'
  1741  007395  65                 	db	101	;'e'
  1742  007396  20                 	db	32
  1743  007397  69                 	db	105	;'i'
  1744  007398  6E                 	db	110	;'n'
  1745  007399  20                 	db	32
  1746  00739A  6C                 	db	108	;'l'
  1747  00739B  69                 	db	105	;'i'
  1748  00739C  73                 	db	115	;'s'
  1749  00739D  74                 	db	116	;'t'
  1750  00739E  65                 	db	101	;'e'
  1751  00739F  6E                 	db	110	;'n'
  1752  0073A0  20                 	db	32
  1753  0073A1  6F                 	db	111	;'o'
  1754  0073A2  6E                 	db	110	;'n'
  1755  0073A3  6C                 	db	108	;'l'
  1756  0073A4  79                 	db	121	;'y'
  1757  0073A5  20                 	db	32
  1758  0073A6  6D                 	db	109	;'m'
  1759  0073A7  6F                 	db	111	;'o'
  1760  0073A8  64                 	db	100	;'d'
  1761  0073A9  65                 	db	101	;'e'
  1762  0073AA  2E                 	db	46
  1763  0073AB  0D                 	db	13
  1764  0073AC  0A                 	db	10
  1765  0073AD  00                 	db	0
  1766  0073AE                     STR_122:
  1767  0073AE  2D                 	db	45
  1768  0073AF  45                 	db	69	;'E'
  1769  0073B0  52                 	db	82	;'R'
  1770  0073B1  52                 	db	82	;'R'
  1771  0073B2  4F                 	db	79	;'O'
  1772  0073B3  52                 	db	82	;'R'
  1773  0073B4  20                 	db	32
  1774  0073B5  2D                 	db	45
  1775  0073B6  20                 	db	32
  1776  0073B7  4D                 	db	77	;'M'
  1777  0073B8  61                 	db	97	;'a'
  1778  0073B9  73                 	db	115	;'s'
  1779  0073BA  6B                 	db	107	;'k'
  1780  0073BB  20                 	db	32
  1781  0073BC  6E                 	db	110	;'n'
  1782  0073BD  75                 	db	117	;'u'
  1783  0073BE  6D                 	db	109	;'m'
  1784  0073BF  62                 	db	98	;'b'
  1785  0073C0  65                 	db	101	;'e'
  1786  0073C1  72                 	db	114	;'r'
  1787  0073C2  20                 	db	32
  1788  0073C3  63                 	db	99	;'c'
  1789  0073C4  61                 	db	97	;'a'
  1790  0073C5  6E                 	db	110	;'n'
  1791  0073C6  20                 	db	32
  1792  0073C7  6F                 	db	111	;'o'
  1793  0073C8  6E                 	db	110	;'n'
  1794  0073C9  6C                 	db	108	;'l'
  1795  0073CA  79                 	db	121	;'y'
  1796  0073CB  20                 	db	32
  1797  0073CC  62                 	db	98	;'b'
  1798  0073CD  65                 	db	101	;'e'
  1799  0073CE  20                 	db	32
  1800  0073CF  73                 	db	115	;'s'
  1801  0073D0  65                 	db	101	;'e'
  1802  0073D1  74                 	db	116	;'t'
  1803  0073D2  20                 	db	32
  1804  0073D3  61                 	db	97	;'a'
  1805  0073D4  73                 	db	115	;'s'
  1806  0073D5  20                 	db	32
  1807  0073D6  30                 	db	48	;'0'
  1808  0073D7  20                 	db	32
  1809  0073D8  6F                 	db	111	;'o'
  1810  0073D9  72                 	db	114	;'r'
  1811  0073DA  20                 	db	32
  1812  0073DB  31                 	db	49	;'1'
  1813  0073DC  2E                 	db	46
  1814  0073DD  0D                 	db	13
  1815  0073DE  0A                 	db	10
  1816  0073DF  00                 	db	0
  1817  0073E0                     STR_255:
  1818  0073E0  4C                 	db	76	;'L'
  1819  0073E1  4F                 	db	79	;'O'
  1820  0073E2  4F                 	db	79	;'O'
  1821  0073E3  50                 	db	80	;'P'
  1822  0073E4  42                 	db	66	;'B'
  1823  0073E5  41                 	db	65	;'A'
  1824  0073E6  43                 	db	67	;'C'
  1825  0073E7  4B                 	db	75	;'K'
  1826  0073E8  20                 	db	32
  1827  0073E9  2D                 	db	45
  1828  0073EA  20                 	db	32
  1829  0073EB  4F                 	db	79	;'O'
  1830  0073EC  70                 	db	112	;'p'
  1831  0073ED  65                 	db	101	;'e'
  1832  0073EE  6E                 	db	110	;'n'
  1833  0073EF  20                 	db	32
  1834  0073F0  43                 	db	67	;'C'
  1835  0073F1  41                 	db	65	;'A'
  1836  0073F2  4E                 	db	78	;'N'
  1837  0073F3  20                 	db	32
  1838  0073F4  69                 	db	105	;'i'
  1839  0073F5  6E                 	db	110	;'n'
  1840  0073F6  74                 	db	116	;'t'
  1841  0073F7  65                 	db	101	;'e'
  1842  0073F8  72                 	db	114	;'r'
  1843  0073F9  66                 	db	102	;'f'
  1844  0073FA  61                 	db	97	;'a'
  1845  0073FB  63                 	db	99	;'c'
  1846  0073FC  65                 	db	101	;'e'
  1847  0073FD  20                 	db	32
  1848  0073FE  69                 	db	105	;'i'
  1849  0073FF  6E                 	db	110	;'n'
  1850  007400  20                 	db	32
  1851  007401  6C                 	db	108	;'l'
  1852  007402  6F                 	db	111	;'o'
  1853  007403  6F                 	db	111	;'o'
  1854  007404  70                 	db	112	;'p'
  1855  007405  62                 	db	98	;'b'
  1856  007406  61                 	db	97	;'a'
  1857  007407  63                 	db	99	;'c'
  1858  007408  6B                 	db	107	;'k'
  1859  007409  20                 	db	32
  1860  00740A  6D                 	db	109	;'m'
  1861  00740B  6F                 	db	111	;'o'
  1862  00740C  64                 	db	100	;'d'
  1863  00740D  65                 	db	101	;'e'
  1864  00740E  2E                 	db	46
  1865  00740F  0D                 	db	13
  1866  007410  0A                 	db	10
  1867  007411  00                 	db	0
  1868  007412                     STR_257:
  1869  007412  56                 	db	86	;'V'
  1870  007413  45                 	db	69	;'E'
  1871  007414  52                 	db	82	;'R'
  1872  007415  53                 	db	83	;'S'
  1873  007416  49                 	db	73	;'I'
  1874  007417  4F                 	db	79	;'O'
  1875  007418  4E                 	db	78	;'N'
  1876  007419  20                 	db	32
  1877  00741A  2D                 	db	45
  1878  00741B  20                 	db	32
  1879  00741C  44                 	db	68	;'D'
  1880  00741D  69                 	db	105	;'i'
  1881  00741E  73                 	db	115	;'s'
  1882  00741F  70                 	db	112	;'p'
  1883  007420  6C                 	db	108	;'l'
  1884  007421  61                 	db	97	;'a'
  1885  007422  79                 	db	121	;'y'
  1886  007423  20                 	db	32
  1887  007424  66                 	db	102	;'f'
  1888  007425  69                 	db	105	;'i'
  1889  007426  72                 	db	114	;'r'
  1890  007427  6D                 	db	109	;'m'
  1891  007428  77                 	db	119	;'w'
  1892  007429  61                 	db	97	;'a'
  1893  00742A  72                 	db	114	;'r'
  1894  00742B  65                 	db	101	;'e'
  1895  00742C  20                 	db	32
  1896  00742D  76                 	db	118	;'v'
  1897  00742E  65                 	db	101	;'e'
  1898  00742F  72                 	db	114	;'r'
  1899  007430  73                 	db	115	;'s'
  1900  007431  69                 	db	105	;'i'
  1901  007432  6F                 	db	111	;'o'
  1902  007433  6E                 	db	110	;'n'
  1903  007434  20                 	db	32
  1904  007435  69                 	db	105	;'i'
  1905  007436  6E                 	db	110	;'n'
  1906  007437  66                 	db	102	;'f'
  1907  007438  6F                 	db	111	;'o'
  1908  007439  72                 	db	114	;'r'
  1909  00743A  6D                 	db	109	;'m'
  1910  00743B  61                 	db	97	;'a'
  1911  00743C  74                 	db	116	;'t'
  1912  00743D  69                 	db	105	;'i'
  1913  00743E  6F                 	db	111	;'o'
  1914  00743F  6E                 	db	110	;'n'
  1915  007440  2E                 	db	46
  1916  007441  0D                 	db	13
  1917  007442  0A                 	db	10
  1918  007443  00                 	db	0
  1919  007444                     STR_277:
  1920  007444  20                 	db	32
  1921  007445  20                 	db	32
  1922  007446  20                 	db	32
  1923  007447  20                 	db	32
  1924  007448  20                 	db	32
  1925  007449  20                 	db	32
  1926  00744A  20                 	db	32
  1927  00744B  20                 	db	32
  1928  00744C  20                 	db	32
  1929  00744D  20                 	db	32
  1930  00744E  20                 	db	32
  1931  00744F  20                 	db	32
  1932  007450  20                 	db	32
  1933  007451  20                 	db	32
  1934  007452  20                 	db	32
  1935  007453  20                 	db	32
  1936  007454  46                 	db	70	;'F'
  1937  007455  6F                 	db	111	;'o'
  1938  007456  72                 	db	114	;'r'
  1939  007457  6D                 	db	109	;'m'
  1940  007458  61                 	db	97	;'a'
  1941  007459  74                 	db	116	;'t'
  1942  00745A  3A                 	db	58	;':'
  1943  00745B  20                 	db	32
  1944  00745C  73                 	db	115	;'s'
  1945  00745D  65                 	db	101	;'e'
  1946  00745E  74                 	db	116	;'t'
  1947  00745F  20                 	db	32
  1948  007460  72                 	db	114	;'r'
  1949  007461  77                 	db	119	;'w'
  1950  007462  74                 	db	116	;'t'
  1951  007463  69                 	db	105	;'i'
  1952  007464  6D                 	db	109	;'m'
  1953  007465  65                 	db	101	;'e'
  1954  007466  6F                 	db	111	;'o'
  1955  007467  75                 	db	117	;'u'
  1956  007468  74                 	db	116	;'t'
  1957  007469  20                 	db	32
  1958  00746A  74                 	db	116	;'t'
  1959  00746B  69                 	db	105	;'i'
  1960  00746C  6D                 	db	109	;'m'
  1961  00746D  65                 	db	101	;'e'
  1962  00746E  6F                 	db	111	;'o'
  1963  00746F  75                 	db	117	;'u'
  1964  007470  74                 	db	116	;'t'
  1965  007471  2E                 	db	46
  1966  007472  0D                 	db	13
  1967  007473  0A                 	db	10
  1968  007474  00                 	db	0
  1969  007475                     STR_275:
  1970  007475  20                 	db	32
  1971  007476  20                 	db	32
  1972  007477  20                 	db	32
  1973  007478  20                 	db	32
  1974  007479  44                 	db	68	;'D'
  1975  00747A  45                 	db	69	;'E'
  1976  00747B  43                 	db	67	;'C'
  1977  00747C  49                 	db	73	;'I'
  1978  00747D  4D                 	db	77	;'M'
  1979  00747E  41                 	db	65	;'A'
  1980  00747F  4C                 	db	76	;'L'
  1981  007480  20                 	db	32
  1982  007481  2D                 	db	45
  1983  007482  20                 	db	32
  1984  007483  44                 	db	68	;'D'
  1985  007484  69                 	db	105	;'i'
  1986  007485  73                 	db	115	;'s'
  1987  007486  70                 	db	112	;'p'
  1988  007487  6C                 	db	108	;'l'
  1989  007488  61                 	db	97	;'a'
  1990  007489  79                 	db	121	;'y'
  1991  00748A  20                 	db	32
  1992  00748B  6E                 	db	110	;'n'
  1993  00748C  75                 	db	117	;'u'
  1994  00748D  6D                 	db	109	;'m'
  1995  00748E  65                 	db	101	;'e'
  1996  00748F  72                 	db	114	;'r'
  1997  007490  69                 	db	105	;'i'
  1998  007491  63                 	db	99	;'c'
  1999  007492  61                 	db	97	;'a'
  2000  007493  6C                 	db	108	;'l'
  2001  007494  73                 	db	115	;'s'
  2002  007495  20                 	db	32
  2003  007496  69                 	db	105	;'i'
  2004  007497  6E                 	db	110	;'n'
  2005  007498  20                 	db	32
  2006  007499  64                 	db	100	;'d'
  2007  00749A  65                 	db	101	;'e'
  2008  00749B  63                 	db	99	;'c'
  2009  00749C  69                 	db	105	;'i'
  2010  00749D  6D                 	db	109	;'m'
  2011  00749E  61                 	db	97	;'a'
  2012  00749F  6C                 	db	108	;'l'
  2013  0074A0  2E                 	db	46
  2014  0074A1  0D                 	db	13
  2015  0074A2  0A                 	db	10
  2016  0074A3  00                 	db	0
  2017  0074A4                     STR_274:
  2018  0074A4  20                 	db	32
  2019  0074A5  20                 	db	32
  2020  0074A6  20                 	db	32
  2021  0074A7  20                 	db	32
  2022  0074A8  48                 	db	72	;'H'
  2023  0074A9  45                 	db	69	;'E'
  2024  0074AA  58                 	db	88	;'X'
  2025  0074AB  20                 	db	32
  2026  0074AC  2D                 	db	45
  2027  0074AD  20                 	db	32
  2028  0074AE  44                 	db	68	;'D'
  2029  0074AF  69                 	db	105	;'i'
  2030  0074B0  73                 	db	115	;'s'
  2031  0074B1  70                 	db	112	;'p'
  2032  0074B2  6C                 	db	108	;'l'
  2033  0074B3  61                 	db	97	;'a'
  2034  0074B4  79                 	db	121	;'y'
  2035  0074B5  20                 	db	32
  2036  0074B6  6E                 	db	110	;'n'
  2037  0074B7  75                 	db	117	;'u'
  2038  0074B8  6D                 	db	109	;'m'
  2039  0074B9  65                 	db	101	;'e'
  2040  0074BA  72                 	db	114	;'r'
  2041  0074BB  69                 	db	105	;'i'
  2042  0074BC  63                 	db	99	;'c'
  2043  0074BD  61                 	db	97	;'a'
  2044  0074BE  6C                 	db	108	;'l'
  2045  0074BF  73                 	db	115	;'s'
  2046  0074C0  20                 	db	32
  2047  0074C1  69                 	db	105	;'i'
  2048  0074C2  6E                 	db	110	;'n'
  2049  0074C3  20                 	db	32
  2050  0074C4  68                 	db	104	;'h'
  2051  0074C5  65                 	db	101	;'e'
  2052  0074C6  78                 	db	120	;'x'
  2053  0074C7  61                 	db	97	;'a'
  2054  0074C8  64                 	db	100	;'d'
  2055  0074C9  65                 	db	101	;'e'
  2056  0074CA  63                 	db	99	;'c'
  2057  0074CB  69                 	db	105	;'i'
  2058  0074CC  6D                 	db	109	;'m'
  2059  0074CD  61                 	db	97	;'a'
  2060  0074CE  6C                 	db	108	;'l'
  2061  0074CF  2E                 	db	46
  2062  0074D0  0D                 	db	13
  2063  0074D1  0A                 	db	10
  2064  0074D2  00                 	db	0
  2065  0074D3                     STR_265:
  2066  0074D3  46                 	db	70	;'F'
  2067  0074D4  49                 	db	73	;'I'
  2068  0074D5  4E                 	db	78	;'N'
  2069  0074D6  44                 	db	68	;'D'
  2070  0074D7  20                 	db	32
  2071  0074D8  2D                 	db	45
  2072  0074D9  20                 	db	32
  2073  0074DA  46                 	db	70	;'F'
  2074  0074DB  69                 	db	105	;'i'
  2075  0074DC  6E                 	db	110	;'n'
  2076  0074DD  64                 	db	100	;'d'
  2077  0074DE  20                 	db	32
  2078  0074DF  61                 	db	97	;'a'
  2079  0074E0  76                 	db	118	;'v'
  2080  0074E1  61                 	db	97	;'a'
  2081  0074E2  69                 	db	105	;'i'
  2082  0074E3  6C                 	db	108	;'l'
  2083  0074E4  61                 	db	97	;'a'
  2084  0074E5  62                 	db	98	;'b'
  2085  0074E6  6C                 	db	108	;'l'
  2086  0074E7  65                 	db	101	;'e'
  2087  0074E8  20                 	db	32
  2088  0074E9  43                 	db	67	;'C'
  2089  0074EA  41                 	db	65	;'A'
  2090  0074EB  4E                 	db	78	;'N'
  2091  0074EC  34                 	db	52	;'4'
  2092  0074ED  56                 	db	86	;'V'
  2093  0074EE  53                 	db	83	;'S'
  2094  0074EF  43                 	db	67	;'C'
  2095  0074F0  50                 	db	80	;'P'
  2096  0074F1  20                 	db	32
  2097  0074F2  6E                 	db	110	;'n'
  2098  0074F3  6F                 	db	111	;'o'
  2099  0074F4  64                 	db	100	;'d'
  2100  0074F5  65                 	db	101	;'e'
  2101  0074F6  73                 	db	115	;'s'
  2102  0074F7  20                 	db	32
  2103  0074F8  6F                 	db	111	;'o'
  2104  0074F9  6E                 	db	110	;'n'
  2105  0074FA  20                 	db	32
  2106  0074FB  62                 	db	98	;'b'
  2107  0074FC  75                 	db	117	;'u'
  2108  0074FD  73                 	db	115	;'s'
  2109  0074FE  2E                 	db	46
  2110  0074FF  0D                 	db	13
  2111  007500  0A                 	db	10
  2112  007501  00                 	db	0
  2113  007502                     STR_164:
  2114  007502  2B                 	db	43
  2115  007503  45                 	db	69	;'E'
  2116  007504  52                 	db	82	;'R'
  2117  007505  52                 	db	82	;'R'
  2118  007506  4F                 	db	79	;'O'
  2119  007507  52                 	db	82	;'R'
  2120  007508  20                 	db	32
  2121  007509  2D                 	db	45
  2122  00750A  20                 	db	32
  2123  00750B  57                 	db	87	;'W'
  2124  00750C  72                 	db	114	;'r'
  2125  00750D  6F                 	db	111	;'o'
  2126  00750E  6E                 	db	110	;'n'
  2127  00750F  67                 	db	103	;'g'
  2128  007510  20                 	db	32
  2129  007511  61                 	db	97	;'a'
  2130  007512  72                 	db	114	;'r'
  2131  007513  67                 	db	103	;'g'
  2132  007514  75                 	db	117	;'u'
  2133  007515  6D                 	db	109	;'m'
  2134  007516  65                 	db	101	;'e'
  2135  007517  6E                 	db	110	;'n'
  2136  007518  74                 	db	116	;'t'
  2137  007519  20                 	db	32
  2138  00751A  74                 	db	116	;'t'
  2139  00751B  6F                 	db	111	;'o'
  2140  00751C  20                 	db	32
  2141  00751D  27                 	db	39
  2142  00751E  73                 	db	115	;'s'
  2143  00751F  65                 	db	101	;'e'
  2144  007520  74                 	db	116	;'t'
  2145  007521  20                 	db	32
  2146  007522  74                 	db	116	;'t'
  2147  007523  69                 	db	105	;'i'
  2148  007524  6D                 	db	109	;'m'
  2149  007525  65                 	db	101	;'e'
  2150  007526  73                 	db	115	;'s'
  2151  007527  74                 	db	116	;'t'
  2152  007528  61                 	db	97	;'a'
  2153  007529  6D                 	db	109	;'m'
  2154  00752A  70                 	db	112	;'p'
  2155  00752B  27                 	db	39
  2156  00752C  2E                 	db	46
  2157  00752D  0D                 	db	13
  2158  00752E  0A                 	db	10
  2159  00752F  00                 	db	0
  2160  007530                     STR_253:
  2161  007530  53                 	db	83	;'S'
  2162  007531  49                 	db	73	;'I'
  2163  007532  4C                 	db	76	;'L'
  2164  007533  45                 	db	69	;'E'
  2165  007534  4E                 	db	78	;'N'
  2166  007535  54                 	db	84	;'T'
  2167  007536  20                 	db	32
  2168  007537  2D                 	db	45
  2169  007538  20                 	db	32
  2170  007539  4F                 	db	79	;'O'
  2171  00753A  70                 	db	112	;'p'
  2172  00753B  65                 	db	101	;'e'
  2173  00753C  6E                 	db	110	;'n'
  2174  00753D  20                 	db	32
  2175  00753E  43                 	db	67	;'C'
  2176  00753F  41                 	db	65	;'A'
  2177  007540  4E                 	db	78	;'N'
  2178  007541  20                 	db	32
  2179  007542  69                 	db	105	;'i'
  2180  007543  6E                 	db	110	;'n'
  2181  007544  74                 	db	116	;'t'
  2182  007545  65                 	db	101	;'e'
  2183  007546  72                 	db	114	;'r'
  2184  007547  66                 	db	102	;'f'
  2185  007548  61                 	db	97	;'a'
  2186  007549  63                 	db	99	;'c'
  2187  00754A  65                 	db	101	;'e'
  2188  00754B  20                 	db	32
  2189  00754C  69                 	db	105	;'i'
  2190  00754D  6E                 	db	110	;'n'
  2191  00754E  20                 	db	32
  2192  00754F  73                 	db	115	;'s'
  2193  007550  69                 	db	105	;'i'
  2194  007551  6C                 	db	108	;'l'
  2195  007552  65                 	db	101	;'e'
  2196  007553  6E                 	db	110	;'n'
  2197  007554  74                 	db	116	;'t'
  2198  007555  20                 	db	32
  2199  007556  6D                 	db	109	;'m'
  2200  007557  6F                 	db	111	;'o'
  2201  007558  64                 	db	100	;'d'
  2202  007559  65                 	db	101	;'e'
  2203  00755A  2E                 	db	46
  2204  00755B  0D                 	db	13
  2205  00755C  0A                 	db	10
  2206  00755D  00                 	db	0
  2207  00755E                     STR_258:
  2208  00755E  49                 	db	73	;'I'
  2209  00755F  46                 	db	70	;'F'
  2210  007560  4D                 	db	77	;'M'
  2211  007561  4F                 	db	79	;'O'
  2212  007562  44                 	db	68	;'D'
  2213  007563  45                 	db	69	;'E'
  2214  007564  20                 	db	32
  2215  007565  2D                 	db	45
  2216  007566  20                 	db	32
  2217  007567  44                 	db	68	;'D'
  2218  007568  69                 	db	105	;'i'
  2219  007569  73                 	db	115	;'s'
  2220  00756A  70                 	db	112	;'p'
  2221  00756B  6C                 	db	108	;'l'
  2222  00756C  61                 	db	97	;'a'
  2223  00756D  79                 	db	121	;'y'
  2224  00756E  20                 	db	32
  2225  00756F  73                 	db	115	;'s'
  2226  007570  65                 	db	101	;'e'
  2227  007571  6C                 	db	108	;'l'
  2228  007572  65                 	db	101	;'e'
  2229  007573  63                 	db	99	;'c'
  2230  007574  74                 	db	116	;'t'
  2231  007575  65                 	db	101	;'e'
  2232  007576  64                 	db	100	;'d'
  2233  007577  20                 	db	32
  2234  007578  69                 	db	105	;'i'
  2235  007579  6E                 	db	110	;'n'
  2236  00757A  74                 	db	116	;'t'
  2237  00757B  65                 	db	101	;'e'
  2238  00757C  72                 	db	114	;'r'
  2239  00757D  66                 	db	102	;'f'
  2240  00757E  61                 	db	97	;'a'
  2241  00757F  63                 	db	99	;'c'
  2242  007580  65                 	db	101	;'e'
  2243  007581  20                 	db	32
  2244  007582  6D                 	db	109	;'m'
  2245  007583  6F                 	db	111	;'o'
  2246  007584  64                 	db	100	;'d'
  2247  007585  65                 	db	101	;'e'
  2248  007586  2E                 	db	46
  2249  007587  0D                 	db	13
  2250  007588  0A                 	db	10
  2251  007589  00                 	db	0
  2252  00758A                     STR_252:
  2253  00758A  4F                 	db	79	;'O'
  2254  00758B  50                 	db	80	;'P'
  2255  00758C  45                 	db	69	;'E'
  2256  00758D  4E                 	db	78	;'N'
  2257  00758E  20                 	db	32
  2258  00758F  2D                 	db	45
  2259  007590  20                 	db	32
  2260  007591  4F                 	db	79	;'O'
  2261  007592  70                 	db	112	;'p'
  2262  007593  65                 	db	101	;'e'
  2263  007594  6E                 	db	110	;'n'
  2264  007595  20                 	db	32
  2265  007596  43                 	db	67	;'C'
  2266  007597  41                 	db	65	;'A'
  2267  007598  4E                 	db	78	;'N'
  2268  007599  20                 	db	32
  2269  00759A  69                 	db	105	;'i'
  2270  00759B  6E                 	db	110	;'n'
  2271  00759C  74                 	db	116	;'t'
  2272  00759D  65                 	db	101	;'e'
  2273  00759E  72                 	db	114	;'r'
  2274  00759F  66                 	db	102	;'f'
  2275  0075A0  61                 	db	97	;'a'
  2276  0075A1  63                 	db	99	;'c'
  2277  0075A2  65                 	db	101	;'e'
  2278  0075A3  20                 	db	32
  2279  0075A4  69                 	db	105	;'i'
  2280  0075A5  6E                 	db	110	;'n'
  2281  0075A6  20                 	db	32
  2282  0075A7  6E                 	db	110	;'n'
  2283  0075A8  6F                 	db	111	;'o'
  2284  0075A9  72                 	db	114	;'r'
  2285  0075AA  6D                 	db	109	;'m'
  2286  0075AB  61                 	db	97	;'a'
  2287  0075AC  6C                 	db	108	;'l'
  2288  0075AD  20                 	db	32
  2289  0075AE  6D                 	db	109	;'m'
  2290  0075AF  6F                 	db	111	;'o'
  2291  0075B0  64                 	db	100	;'d'
  2292  0075B1  65                 	db	101	;'e'
  2293  0075B2  2E                 	db	46
  2294  0075B3  0D                 	db	13
  2295  0075B4  0A                 	db	10
  2296  0075B5  00                 	db	0
  2297  0075B6                     STR_135:
  2298  0075B6  2B                 	db	43
  2299  0075B7  4F                 	db	79	;'O'
  2300  0075B8  4B                 	db	75	;'K'
  2301  0075B9  20                 	db	32
  2302  0075BA  2D                 	db	45
  2303  0075BB  20                 	db	32
  2304  0075BC  4E                 	db	78	;'N'
  2305  0075BD  75                 	db	117	;'u'
  2306  0075BE  6D                 	db	109	;'m'
  2307  0075BF  65                 	db	101	;'e'
  2308  0075C0  72                 	db	114	;'r'
  2309  0075C1  69                 	db	105	;'i'
  2310  0075C2  63                 	db	99	;'c'
  2311  0075C3  61                 	db	97	;'a'
  2312  0075C4  6C                 	db	108	;'l'
  2313  0075C5  20                 	db	32
  2314  0075C6  6F                 	db	111	;'o'
  2315  0075C7  75                 	db	117	;'u'
  2316  0075C8  74                 	db	116	;'t'
  2317  0075C9  70                 	db	112	;'p'
  2318  0075CA  75                 	db	117	;'u'
  2319  0075CB  74                 	db	116	;'t'
  2320  0075CC  20                 	db	32
  2321  0075CD  6E                 	db	110	;'n'
  2322  0075CE  6F                 	db	111	;'o'
  2323  0075CF  77                 	db	119	;'w'
  2324  0075D0  20                 	db	32
  2325  0075D1  69                 	db	105	;'i'
  2326  0075D2  6E                 	db	110	;'n'
  2327  0075D3  20                 	db	32
  2328  0075D4  68                 	db	104	;'h'
  2329  0075D5  65                 	db	101	;'e'
  2330  0075D6  78                 	db	120	;'x'
  2331  0075D7  61                 	db	97	;'a'
  2332  0075D8  64                 	db	100	;'d'
  2333  0075D9  65                 	db	101	;'e'
  2334  0075DA  63                 	db	99	;'c'
  2335  0075DB  69                 	db	105	;'i'
  2336  0075DC  6D                 	db	109	;'m'
  2337  0075DD  61                 	db	97	;'a'
  2338  0075DE  6C                 	db	108	;'l'
  2339  0075DF  0D                 	db	13
  2340  0075E0  0A                 	db	10
  2341  0075E1  00                 	db	0
  2342  0075E2                     STR_110:
  2343  0075E2  2D                 	db	45
  2344  0075E3  45                 	db	69	;'E'
  2345  0075E4  52                 	db	82	;'R'
  2346  0075E5  52                 	db	82	;'R'
  2347  0075E6  4F                 	db	79	;'O'
  2348  0075E7  52                 	db	82	;'R'
  2349  0075E8  20                 	db	32
  2350  0075E9  2D                 	db	45
  2351  0075EA  20                 	db	32
  2352  0075EB  66                 	db	102	;'f'
  2353  0075EC  69                 	db	105	;'i'
  2354  0075ED  6C                 	db	108	;'l'
  2355  0075EE  74                 	db	116	;'t'
  2356  0075EF  65                 	db	101	;'e'
  2357  0075F0  72                 	db	114	;'r'
  2358  0075F1  20                 	db	32
  2359  0075F2  66                 	db	102	;'f'
  2360  0075F3  6F                 	db	111	;'o'
  2361  0075F4  72                 	db	114	;'r'
  2362  0075F5  20                 	db	32
  2363  0075F6  70                 	db	112	;'p'
  2364  0075F7  72                 	db	114	;'r'
  2365  0075F8  69                 	db	105	;'i'
  2366  0075F9  6F                 	db	111	;'o'
  2367  0075FA  72                 	db	114	;'r'
  2368  0075FB  69                 	db	105	;'i'
  2369  0075FC  74                 	db	116	;'t'
  2370  0075FD  79                 	db	121	;'y'
  2371  0075FE  20                 	db	32
  2372  0075FF  69                 	db	105	;'i'
  2373  007600  73                 	db	115	;'s'
  2374  007601  20                 	db	32
  2375  007602  6D                 	db	109	;'m'
  2376  007603  69                 	db	105	;'i'
  2377  007604  73                 	db	115	;'s'
  2378  007605  73                 	db	115	;'s'
  2379  007606  69                 	db	105	;'i'
  2380  007607  6E                 	db	110	;'n'
  2381  007608  67                 	db	103	;'g'
  2382  007609  0D                 	db	13
  2383  00760A  0A                 	db	10
  2384  00760B  00                 	db	0
  2385  00760C                     STR_158:
  2386  00760C  2B                 	db	43
  2387  00760D  45                 	db	69	;'E'
  2388  00760E  52                 	db	82	;'R'
  2389  00760F  52                 	db	82	;'R'
  2390  007610  4F                 	db	79	;'O'
  2391  007611  52                 	db	82	;'R'
  2392  007612  20                 	db	32
  2393  007613  2D                 	db	45
  2394  007614  20                 	db	32
  2395  007615  57                 	db	87	;'W'
  2396  007616  72                 	db	114	;'r'
  2397  007617  6F                 	db	111	;'o'
  2398  007618  6E                 	db	110	;'n'
  2399  007619  67                 	db	103	;'g'
  2400  00761A  20                 	db	32
  2401  00761B  61                 	db	97	;'a'
  2402  00761C  72                 	db	114	;'r'
  2403  00761D  67                 	db	103	;'g'
  2404  00761E  75                 	db	117	;'u'
  2405  00761F  6D                 	db	109	;'m'
  2406  007620  65                 	db	101	;'e'
  2407  007621  6E                 	db	110	;'n'
  2408  007622  74                 	db	116	;'t'
  2409  007623  20                 	db	32
  2410  007624  74                 	db	116	;'t'
  2411  007625  6F                 	db	111	;'o'
  2412  007626  20                 	db	32
  2413  007627  27                 	db	39
  2414  007628  73                 	db	115	;'s'
  2415  007629  65                 	db	101	;'e'
  2416  00762A  74                 	db	116	;'t'
  2417  00762B  20                 	db	32
  2418  00762C  65                 	db	101	;'e'
  2419  00762D  63                 	db	99	;'c'
  2420  00762E  68                 	db	104	;'h'
  2421  00762F  6F                 	db	111	;'o'
  2422  007630  27                 	db	39
  2423  007631  2E                 	db	46
  2424  007632  0D                 	db	13
  2425  007633  0A                 	db	10
  2426  007634  00                 	db	0
  2427  007635                     STR_116:
  2428  007635  2D                 	db	45
  2429  007636  45                 	db	69	;'E'
  2430  007637  52                 	db	82	;'R'
  2431  007638  52                 	db	82	;'R'
  2432  007639  4F                 	db	79	;'O'
  2433  00763A  52                 	db	82	;'R'
  2434  00763B  20                 	db	32
  2435  00763C  2D                 	db	45
  2436  00763D  20                 	db	32
  2437  00763E  66                 	db	102	;'f'
  2438  00763F  69                 	db	105	;'i'
  2439  007640  6C                 	db	108	;'l'
  2440  007641  74                 	db	116	;'t'
  2441  007642  65                 	db	101	;'e'
  2442  007643  72                 	db	114	;'r'
  2443  007644  20                 	db	32
  2444  007645  66                 	db	102	;'f'
  2445  007646  6F                 	db	111	;'o'
  2446  007647  72                 	db	114	;'r'
  2447  007648  20                 	db	32
  2448  007649  6E                 	db	110	;'n'
  2449  00764A  69                 	db	105	;'i'
  2450  00764B  64                 	db	100	;'d'
  2451  00764C  65                 	db	101	;'e'
  2452  00764D  20                 	db	32
  2453  00764E  69                 	db	105	;'i'
  2454  00764F  64                 	db	100	;'d'
  2455  007650  20                 	db	32
  2456  007651  69                 	db	105	;'i'
  2457  007652  73                 	db	115	;'s'
  2458  007653  20                 	db	32
  2459  007654  6D                 	db	109	;'m'
  2460  007655  69                 	db	105	;'i'
  2461  007656  73                 	db	115	;'s'
  2462  007657  73                 	db	115	;'s'
  2463  007658  69                 	db	105	;'i'
  2464  007659  6E                 	db	110	;'n'
  2465  00765A  67                 	db	103	;'g'
  2466  00765B  0D                 	db	13
  2467  00765C  0A                 	db	10
  2468  00765D  00                 	db	0
  2469  00765E                     STR_264:
  2470  00765E  48                 	db	72	;'H'
  2471  00765F  45                 	db	69	;'E'
  2472  007660  4C                 	db	76	;'L'
  2473  007661  50                 	db	80	;'P'
  2474  007662  20                 	db	32
  2475  007663  2D                 	db	45
  2476  007664  20                 	db	32
  2477  007665  44                 	db	68	;'D'
  2478  007666  69                 	db	105	;'i'
  2479  007667  73                 	db	115	;'s'
  2480  007668  70                 	db	112	;'p'
  2481  007669  6C                 	db	108	;'l'
  2482  00766A  61                 	db	97	;'a'
  2483  00766B  79                 	db	121	;'y'
  2484  00766C  20                 	db	32
  2485  00766D  74                 	db	116	;'t'
  2486  00766E  68                 	db	104	;'h'
  2487  00766F  69                 	db	105	;'i'
  2488  007670  73                 	db	115	;'s'
  2489  007671  20                 	db	32
  2490  007672  68                 	db	104	;'h'
  2491  007673  65                 	db	101	;'e'
  2492  007674  6C                 	db	108	;'l'
  2493  007675  70                 	db	112	;'p'
  2494  007676  20                 	db	32
  2495  007677  69                 	db	105	;'i'
  2496  007678  6E                 	db	110	;'n'
  2497  007679  66                 	db	102	;'f'
  2498  00767A  6F                 	db	111	;'o'
  2499  00767B  72                 	db	114	;'r'
  2500  00767C  6D                 	db	109	;'m'
  2501  00767D  61                 	db	97	;'a'
  2502  00767E  74                 	db	116	;'t'
  2503  00767F  69                 	db	105	;'i'
  2504  007680  6F                 	db	111	;'o'
  2505  007681  6E                 	db	110	;'n'
  2506  007682  2E                 	db	46
  2507  007683  0D                 	db	13
  2508  007684  0A                 	db	10
  2509  007685  00                 	db	0
  2510  007686                     STR_125:
  2511  007686  2D                 	db	45
  2512  007687  45                 	db	69	;'E'
  2513  007688  52                 	db	82	;'R'
  2514  007689  52                 	db	82	;'R'
  2515  00768A  4F                 	db	79	;'O'
  2516  00768B  52                 	db	82	;'R'
  2517  00768C  20                 	db	32
  2518  00768D  2D                 	db	45
  2519  00768E  20                 	db	32
  2520  00768F  6D                 	db	109	;'m'
  2521  007690  61                 	db	97	;'a'
  2522  007691  73                 	db	115	;'s'
  2523  007692  6B                 	db	107	;'k'
  2524  007693  20                 	db	32
  2525  007694  66                 	db	102	;'f'
  2526  007695  6F                 	db	111	;'o'
  2527  007696  72                 	db	114	;'r'
  2528  007697  20                 	db	32
  2529  007698  70                 	db	112	;'p'
  2530  007699  72                 	db	114	;'r'
  2531  00769A  69                 	db	105	;'i'
  2532  00769B  6F                 	db	111	;'o'
  2533  00769C  72                 	db	114	;'r'
  2534  00769D  69                 	db	105	;'i'
  2535  00769E  74                 	db	116	;'t'
  2536  00769F  79                 	db	121	;'y'
  2537  0076A0  20                 	db	32
  2538  0076A1  69                 	db	105	;'i'
  2539  0076A2  73                 	db	115	;'s'
  2540  0076A3  20                 	db	32
  2541  0076A4  6D                 	db	109	;'m'
  2542  0076A5  69                 	db	105	;'i'
  2543  0076A6  73                 	db	115	;'s'
  2544  0076A7  73                 	db	115	;'s'
  2545  0076A8  69                 	db	105	;'i'
  2546  0076A9  6E                 	db	110	;'n'
  2547  0076AA  67                 	db	103	;'g'
  2548  0076AB  0D                 	db	13
  2549  0076AC  0A                 	db	10
  2550  0076AD  00                 	db	0
  2551  0076AE                     STR_137:
  2552  0076AE  2B                 	db	43
  2553  0076AF  4F                 	db	79	;'O'
  2554  0076B0  4B                 	db	75	;'K'
  2555  0076B1  20                 	db	32
  2556  0076B2  2D                 	db	45
  2557  0076B3  20                 	db	32
  2558  0076B4  4E                 	db	78	;'N'
  2559  0076B5  75                 	db	117	;'u'
  2560  0076B6  6D                 	db	109	;'m'
  2561  0076B7  65                 	db	101	;'e'
  2562  0076B8  72                 	db	114	;'r'
  2563  0076B9  69                 	db	105	;'i'
  2564  0076BA  63                 	db	99	;'c'
  2565  0076BB  61                 	db	97	;'a'
  2566  0076BC  6C                 	db	108	;'l'
  2567  0076BD  20                 	db	32
  2568  0076BE  6F                 	db	111	;'o'
  2569  0076BF  75                 	db	117	;'u'
  2570  0076C0  74                 	db	116	;'t'
  2571  0076C1  70                 	db	112	;'p'
  2572  0076C2  75                 	db	117	;'u'
  2573  0076C3  74                 	db	116	;'t'
  2574  0076C4  20                 	db	32
  2575  0076C5  6E                 	db	110	;'n'
  2576  0076C6  6F                 	db	111	;'o'
  2577  0076C7  77                 	db	119	;'w'
  2578  0076C8  20                 	db	32
  2579  0076C9  69                 	db	105	;'i'
  2580  0076CA  6E                 	db	110	;'n'
  2581  0076CB  20                 	db	32
  2582  0076CC  64                 	db	100	;'d'
  2583  0076CD  65                 	db	101	;'e'
  2584  0076CE  63                 	db	99	;'c'
  2585  0076CF  69                 	db	105	;'i'
  2586  0076D0  6D                 	db	109	;'m'
  2587  0076D1  61                 	db	97	;'a'
  2588  0076D2  6C                 	db	108	;'l'
  2589  0076D3  0D                 	db	13
  2590  0076D4  0A                 	db	10
  2591  0076D5  00                 	db	0
  2592  0076D6                     STR_108:
  2593  0076D6  2D                 	db	45
  2594  0076D7  45                 	db	69	;'E'
  2595  0076D8  52                 	db	82	;'R'
  2596  0076D9  52                 	db	82	;'R'
  2597  0076DA  4F                 	db	79	;'O'
  2598  0076DB  52                 	db	82	;'R'
  2599  0076DC  20                 	db	32
  2600  0076DD  2D                 	db	45
  2601  0076DE  20                 	db	32
  2602  0076DF  4E                 	db	78	;'N'
  2603  0076E0  6F                 	db	111	;'o'
  2604  0076E1  20                 	db	32
  2605  0076E2  66                 	db	102	;'f'
  2606  0076E3  69                 	db	105	;'i'
  2607  0076E4  6C                 	db	108	;'l'
  2608  0076E5  74                 	db	116	;'t'
  2609  0076E6  65                 	db	101	;'e'
  2610  0076E7  72                 	db	114	;'r'
  2611  0076E8  20                 	db	32
  2612  0076E9  6E                 	db	110	;'n'
  2613  0076EA  75                 	db	117	;'u'
  2614  0076EB  6D                 	db	109	;'m'
  2615  0076EC  62                 	db	98	;'b'
  2616  0076ED  65                 	db	101	;'e'
  2617  0076EE  72                 	db	114	;'r'
  2618  0076EF  20                 	db	32
  2619  0076F0  73                 	db	115	;'s'
  2620  0076F1  70                 	db	112	;'p'
  2621  0076F2  65                 	db	101	;'e'
  2622  0076F3  63                 	db	99	;'c'
  2623  0076F4  69                 	db	105	;'i'
  2624  0076F5  66                 	db	102	;'f'
  2625  0076F6  69                 	db	105	;'i'
  2626  0076F7  65                 	db	101	;'e'
  2627  0076F8  64                 	db	100	;'d'
  2628  0076F9  2E                 	db	46
  2629  0076FA  0D                 	db	13
  2630  0076FB  0A                 	db	10
  2631  0076FC  00                 	db	0
  2632  0076FD                     STR_263:
  2633  0076FD  45                 	db	69	;'E'
  2634  0076FE  52                 	db	82	;'R'
  2635  0076FF  52                 	db	82	;'R'
  2636  007700  20                 	db	32
  2637  007701  2D                 	db	45
  2638  007702  20                 	db	32
  2639  007703  44                 	db	68	;'D'
  2640  007704  69                 	db	105	;'i'
  2641  007705  73                 	db	115	;'s'
  2642  007706  70                 	db	112	;'p'
  2643  007707  6C                 	db	108	;'l'
  2644  007708  61                 	db	97	;'a'
  2645  007709  79                 	db	121	;'y'
  2646  00770A  20                 	db	32
  2647  00770B  43                 	db	67	;'C'
  2648  00770C  41                 	db	65	;'A'
  2649  00770D  4E                 	db	78	;'N'
  2650  00770E  20                 	db	32
  2651  00770F  65                 	db	101	;'e'
  2652  007710  72                 	db	114	;'r'
  2653  007711  72                 	db	114	;'r'
  2654  007712  6F                 	db	111	;'o'
  2655  007713  72                 	db	114	;'r'
  2656  007714  20                 	db	32
  2657  007715  69                 	db	105	;'i'
  2658  007716  6E                 	db	110	;'n'
  2659  007717  66                 	db	102	;'f'
  2660  007718  6F                 	db	111	;'o'
  2661  007719  72                 	db	114	;'r'
  2662  00771A  6D                 	db	109	;'m'
  2663  00771B  61                 	db	97	;'a'
  2664  00771C  74                 	db	116	;'t'
  2665  00771D  69                 	db	105	;'i'
  2666  00771E  6F                 	db	111	;'o'
  2667  00771F  6E                 	db	110	;'n'
  2668  007720  2E                 	db	46
  2669  007721  0D                 	db	13
  2670  007722  0A                 	db	10
  2671  007723  00                 	db	0
  2672  007724                     STR_249:
  2673  007724  48                 	db	72	;'H'
  2674  007725  65                 	db	101	;'e'
  2675  007726  6C                 	db	108	;'l'
  2676  007727  70                 	db	112	;'p'
  2677  007728  20                 	db	32
  2678  007729  66                 	db	102	;'f'
  2679  00772A  6F                 	db	111	;'o'
  2680  00772B  72                 	db	114	;'r'
  2681  00772C  20                 	db	32
  2682  00772D  74                 	db	116	;'t'
  2683  00772E  68                 	db	104	;'h'
  2684  00772F  65                 	db	101	;'e'
  2685  007730  20                 	db	32
  2686  007731  46                 	db	70	;'F'
  2687  007732  72                 	db	114	;'r'
  2688  007733  61                 	db	97	;'a'
  2689  007734  6E                 	db	110	;'n'
  2690  007735  6B                 	db	107	;'k'
  2691  007736  66                 	db	102	;'f'
  2692  007737  75                 	db	117	;'u'
  2693  007738  72                 	db	114	;'r'
  2694  007739  74                 	db	116	;'t'
  2695  00773A  20                 	db	32
  2696  00773B  52                 	db	82	;'R'
  2697  00773C  53                 	db	83	;'S'
  2698  00773D  2D                 	db	45
  2699  00773E  32                 	db	50	;'2'
  2700  00773F  33                 	db	51	;'3'
  2701  007740  32                 	db	50	;'2'
  2702  007741  20                 	db	32
  2703  007742  6D                 	db	109	;'m'
  2704  007743  6F                 	db	111	;'o'
  2705  007744  64                 	db	100	;'d'
  2706  007745  75                 	db	117	;'u'
  2707  007746  6C                 	db	108	;'l'
  2708  007747  65                 	db	101	;'e'
  2709  007748  0D                 	db	13
  2710  007749  0A                 	db	10
  2711  00774A  00                 	db	0
  2712  00774B                     STR_131:
  2713  00774B  2D                 	db	45
  2714  00774C  45                 	db	69	;'E'
  2715  00774D  52                 	db	82	;'R'
  2716  00774E  52                 	db	82	;'R'
  2717  00774F  4F                 	db	79	;'O'
  2718  007750  52                 	db	82	;'R'
  2719  007751  20                 	db	32
  2720  007752  2D                 	db	45
  2721  007753  20                 	db	32
  2722  007754  6D                 	db	109	;'m'
  2723  007755  61                 	db	97	;'a'
  2724  007756  73                 	db	115	;'s'
  2725  007757  6B                 	db	107	;'k'
  2726  007758  20                 	db	32
  2727  007759  66                 	db	102	;'f'
  2728  00775A  6F                 	db	111	;'o'
  2729  00775B  72                 	db	114	;'r'
  2730  00775C  20                 	db	32
  2731  00775D  6E                 	db	110	;'n'
  2732  00775E  69                 	db	105	;'i'
  2733  00775F  64                 	db	100	;'d'
  2734  007760  65                 	db	101	;'e'
  2735  007761  20                 	db	32
  2736  007762  69                 	db	105	;'i'
  2737  007763  64                 	db	100	;'d'
  2738  007764  20                 	db	32
  2739  007765  69                 	db	105	;'i'
  2740  007766  73                 	db	115	;'s'
  2741  007767  20                 	db	32
  2742  007768  6D                 	db	109	;'m'
  2743  007769  69                 	db	105	;'i'
  2744  00776A  73                 	db	115	;'s'
  2745  00776B  73                 	db	115	;'s'
  2746  00776C  69                 	db	105	;'i'
  2747  00776D  6E                 	db	110	;'n'
  2748  00776E  67                 	db	103	;'g'
  2749  00776F  0D                 	db	13
  2750  007770  0A                 	db	10
  2751  007771  00                 	db	0
  2752  007772                     STR_112:
  2753  007772  2D                 	db	45
  2754  007773  45                 	db	69	;'E'
  2755  007774  52                 	db	82	;'R'
  2756  007775  52                 	db	82	;'R'
  2757  007776  4F                 	db	79	;'O'
  2758  007777  52                 	db	82	;'R'
  2759  007778  20                 	db	32
  2760  007779  2D                 	db	45
  2761  00777A  20                 	db	32
  2762  00777B  66                 	db	102	;'f'
  2763  00777C  69                 	db	105	;'i'
  2764  00777D  6C                 	db	108	;'l'
  2765  00777E  74                 	db	116	;'t'
  2766  00777F  65                 	db	101	;'e'
  2767  007780  72                 	db	114	;'r'
  2768  007781  20                 	db	32
  2769  007782  66                 	db	102	;'f'
  2770  007783  6F                 	db	111	;'o'
  2771  007784  72                 	db	114	;'r'
  2772  007785  20                 	db	32
  2773  007786  63                 	db	99	;'c'
  2774  007787  6C                 	db	108	;'l'
  2775  007788  61                 	db	97	;'a'
  2776  007789  73                 	db	115	;'s'
  2777  00778A  73                 	db	115	;'s'
  2778  00778B  20                 	db	32
  2779  00778C  69                 	db	105	;'i'
  2780  00778D  73                 	db	115	;'s'
  2781  00778E  20                 	db	32
  2782  00778F  6D                 	db	109	;'m'
  2783  007790  69                 	db	105	;'i'
  2784  007791  73                 	db	115	;'s'
  2785  007792  73                 	db	115	;'s'
  2786  007793  69                 	db	105	;'i'
  2787  007794  6E                 	db	110	;'n'
  2788  007795  67                 	db	103	;'g'
  2789  007796  0D                 	db	13
  2790  007797  0A                 	db	10
  2791  007798  00                 	db	0
  2792  007799                     STR_280:
  2793  007799  20                 	db	32
  2794  00779A  20                 	db	32
  2795  00779B  20                 	db	32
  2796  00779C  20                 	db	32
  2797  00779D  20                 	db	32
  2798  00779E  20                 	db	32
  2799  00779F  20                 	db	32
  2800  0077A0  20                 	db	32
  2801  0077A1  20                 	db	32
  2802  0077A2  20                 	db	32
  2803  0077A3  20                 	db	32
  2804  0077A4  4D                 	db	77	;'M'
  2805  0077A5  6F                 	db	111	;'o'
  2806  0077A6  64                 	db	100	;'d'
  2807  0077A7  65                 	db	101	;'e'
  2808  0077A8  73                 	db	115	;'s'
  2809  0077A9  3A                 	db	58	;':'
  2810  0077AA  20                 	db	32
  2811  0077AB  76                 	db	118	;'v'
  2812  0077AC  65                 	db	101	;'e'
  2813  0077AD  72                 	db	114	;'r'
  2814  0077AE  62                 	db	98	;'b'
  2815  0077AF  6F                 	db	111	;'o'
  2816  0077B0  73                 	db	115	;'s'
  2817  0077B1  65                 	db	101	;'e'
  2818  0077B2  7C                 	db	124
  2819  0077B3  76                 	db	118	;'v'
  2820  0077B4  73                 	db	115	;'s'
  2821  0077B5  63                 	db	99	;'c'
  2822  0077B6  70                 	db	112	;'p'
  2823  0077B7  7C                 	db	124
  2824  0077B8  73                 	db	115	;'s'
  2825  0077B9  6C                 	db	108	;'l'
  2826  0077BA  63                 	db	99	;'c'
  2827  0077BB  61                 	db	97	;'a'
  2828  0077BC  6E                 	db	110	;'n'
  2829  0077BD  0D                 	db	13
  2830  0077BE  0A                 	db	10
  2831  0077BF  00                 	db	0
  2832  0077C0                     STR_114:
  2833  0077C0  2D                 	db	45
  2834  0077C1  45                 	db	69	;'E'
  2835  0077C2  52                 	db	82	;'R'
  2836  0077C3  52                 	db	82	;'R'
  2837  0077C4  4F                 	db	79	;'O'
  2838  0077C5  52                 	db	82	;'R'
  2839  0077C6  20                 	db	32
  2840  0077C7  2D                 	db	45
  2841  0077C8  20                 	db	32
  2842  0077C9  66                 	db	102	;'f'
  2843  0077CA  69                 	db	105	;'i'
  2844  0077CB  6C                 	db	108	;'l'
  2845  0077CC  74                 	db	116	;'t'
  2846  0077CD  65                 	db	101	;'e'
  2847  0077CE  72                 	db	114	;'r'
  2848  0077CF  20                 	db	32
  2849  0077D0  66                 	db	102	;'f'
  2850  0077D1  6F                 	db	111	;'o'
  2851  0077D2  72                 	db	114	;'r'
  2852  0077D3  20                 	db	32
  2853  0077D4  74                 	db	116	;'t'
  2854  0077D5  79                 	db	121	;'y'
  2855  0077D6  70                 	db	112	;'p'
  2856  0077D7  65                 	db	101	;'e'
  2857  0077D8  20                 	db	32
  2858  0077D9  69                 	db	105	;'i'
  2859  0077DA  73                 	db	115	;'s'
  2860  0077DB  20                 	db	32
  2861  0077DC  6D                 	db	109	;'m'
  2862  0077DD  69                 	db	105	;'i'
  2863  0077DE  73                 	db	115	;'s'
  2864  0077DF  73                 	db	115	;'s'
  2865  0077E0  69                 	db	105	;'i'
  2866  0077E1  6E                 	db	110	;'n'
  2867  0077E2  67                 	db	103	;'g'
  2868  0077E3  0D                 	db	13
  2869  0077E4  0A                 	db	10
  2870  0077E5  00                 	db	0
  2871  0077E6                     STR_89:
  2872  0077E6  2B                 	db	43
  2873  0077E7  4F                 	db	79	;'O'
  2874  0077E8  4B                 	db	75	;'K'
  2875  0077E9  20                 	db	32
  2876  0077EA  2D                 	db	45
  2877  0077EB  20                 	db	32
  2878  0077EC  56                 	db	86	;'V'
  2879  0077ED  61                 	db	97	;'a'
  2880  0077EE  6C                 	db	108	;'l'
  2881  0077EF  75                 	db	117	;'u'
  2882  0077F0  65                 	db	101	;'e'
  2883  0077F1  20                 	db	32
  2884  0077F2  77                 	db	119	;'w'
  2885  0077F3  72                 	db	114	;'r'
  2886  0077F4  69                 	db	105	;'i'
  2887  0077F5  74                 	db	116	;'t'
  2888  0077F6  74                 	db	116	;'t'
  2889  0077F7  65                 	db	101	;'e'
  2890  0077F8  6E                 	db	110	;'n'
  2891  0077F9  20                 	db	32
  2892  0077FA  73                 	db	115	;'s'
  2893  0077FB  75                 	db	117	;'u'
  2894  0077FC  63                 	db	99	;'c'
  2895  0077FD  63                 	db	99	;'c'
  2896  0077FE  65                 	db	101	;'e'
  2897  0077FF  73                 	db	115	;'s'
  2898  007800  73                 	db	115	;'s'
  2899  007801  66                 	db	102	;'f'
  2900  007802  75                 	db	117	;'u'
  2901  007803  6C                 	db	108	;'l'
  2902  007804  6C                 	db	108	;'l'
  2903  007805  79                 	db	121	;'y'
  2904  007806  20                 	db	32
  2905  007807  66                 	db	102	;'f'
  2906  007808  6F                 	db	111	;'o'
  2907  007809  72                 	db	114	;'r'
  2908  00780A  20                 	db	32
  2909  00780B  00                 	db	0
  2910  00780C                     STR_123:
  2911  00780C  2D                 	db	45
  2912  00780D  45                 	db	69	;'E'
  2913  00780E  52                 	db	82	;'R'
  2914  00780F  52                 	db	82	;'R'
  2915  007810  4F                 	db	79	;'O'
  2916  007811  52                 	db	82	;'R'
  2917  007812  20                 	db	32
  2918  007813  2D                 	db	45
  2919  007814  20                 	db	32
  2920  007815  4E                 	db	78	;'N'
  2921  007816  6F                 	db	111	;'o'
  2922  007817  20                 	db	32
  2923  007818  6D                 	db	109	;'m'
  2924  007819  61                 	db	97	;'a'
  2925  00781A  73                 	db	115	;'s'
  2926  00781B  6B                 	db	107	;'k'
  2927  00781C  20                 	db	32
  2928  00781D  6E                 	db	110	;'n'
  2929  00781E  75                 	db	117	;'u'
  2930  00781F  6D                 	db	109	;'m'
  2931  007820  62                 	db	98	;'b'
  2932  007821  65                 	db	101	;'e'
  2933  007822  72                 	db	114	;'r'
  2934  007823  20                 	db	32
  2935  007824  73                 	db	115	;'s'
  2936  007825  70                 	db	112	;'p'
  2937  007826  65                 	db	101	;'e'
  2938  007827  63                 	db	99	;'c'
  2939  007828  69                 	db	105	;'i'
  2940  007829  66                 	db	102	;'f'
  2941  00782A  69                 	db	105	;'i'
  2942  00782B  65                 	db	101	;'e'
  2943  00782C  64                 	db	100	;'d'
  2944  00782D  2E                 	db	46
  2945  00782E  0D                 	db	13
  2946  00782F  0A                 	db	10
  2947  007830  00                 	db	0
  2948  007831                     STR_1:
  2949  007831  0D                 	db	13
  2950  007832  0A                 	db	10
  2951  007833  46                 	db	70	;'F'
  2952  007834  72                 	db	114	;'r'
  2953  007835  61                 	db	97	;'a'
  2954  007836  6E                 	db	110	;'n'
  2955  007837  6B                 	db	107	;'k'
  2956  007838  66                 	db	102	;'f'
  2957  007839  75                 	db	117	;'u'
  2958  00783A  72                 	db	114	;'r'
  2959  00783B  74                 	db	116	;'t'
  2960  00783C  20                 	db	32
  2961  00783D  52                 	db	82	;'R'
  2962  00783E  53                 	db	83	;'S'
  2963  00783F  2D                 	db	45
  2964  007840  32                 	db	50	;'2'
  2965  007841  33                 	db	51	;'3'
  2966  007842  32                 	db	50	;'2'
  2967  007843  20                 	db	32
  2968  007844  43                 	db	67	;'C'
  2969  007845  41                 	db	65	;'A'
  2970  007846  4E                 	db	78	;'N'
  2971  007847  34                 	db	52	;'4'
  2972  007848  56                 	db	86	;'V'
  2973  007849  53                 	db	83	;'S'
  2974  00784A  43                 	db	67	;'C'
  2975  00784B  50                 	db	80	;'P'
  2976  00784C  20                 	db	32
  2977  00784D  6D                 	db	109	;'m'
  2978  00784E  6F                 	db	111	;'o'
  2979  00784F  64                 	db	100	;'d'
  2980  007850  75                 	db	117	;'u'
  2981  007851  6C                 	db	108	;'l'
  2982  007852  65                 	db	101	;'e'
  2983  007853  0D                 	db	13
  2984  007854  0A                 	db	10
  2985  007855  00                 	db	0
  2986  007856                     STR_127:
  2987  007856  2D                 	db	45
  2988  007857  45                 	db	69	;'E'
  2989  007858  52                 	db	82	;'R'
  2990  007859  52                 	db	82	;'R'
  2991  00785A  4F                 	db	79	;'O'
  2992  00785B  52                 	db	82	;'R'
  2993  00785C  20                 	db	32
  2994  00785D  2D                 	db	45
  2995  00785E  20                 	db	32
  2996  00785F  6D                 	db	109	;'m'
  2997  007860  61                 	db	97	;'a'
  2998  007861  73                 	db	115	;'s'
  2999  007862  6B                 	db	107	;'k'
  3000  007863  20                 	db	32
  3001  007864  66                 	db	102	;'f'
  3002  007865  6F                 	db	111	;'o'
  3003  007866  72                 	db	114	;'r'
  3004  007867  20                 	db	32
  3005  007868  63                 	db	99	;'c'
  3006  007869  6C                 	db	108	;'l'
  3007  00786A  61                 	db	97	;'a'
  3008  00786B  73                 	db	115	;'s'
  3009  00786C  73                 	db	115	;'s'
  3010  00786D  20                 	db	32
  3011  00786E  69                 	db	105	;'i'
  3012  00786F  73                 	db	115	;'s'
  3013  007870  20                 	db	32
  3014  007871  6D                 	db	109	;'m'
  3015  007872  69                 	db	105	;'i'
  3016  007873  73                 	db	115	;'s'
  3017  007874  73                 	db	115	;'s'
  3018  007875  69                 	db	105	;'i'
  3019  007876  6E                 	db	110	;'n'
  3020  007877  67                 	db	103	;'g'
  3021  007878  0D                 	db	13
  3022  007879  0A                 	db	10
  3023  00787A  00                 	db	0
  3024  00787B                     STR_129:
  3025  00787B  2D                 	db	45
  3026  00787C  45                 	db	69	;'E'
  3027  00787D  52                 	db	82	;'R'
  3028  00787E  52                 	db	82	;'R'
  3029  00787F  4F                 	db	79	;'O'
  3030  007880  52                 	db	82	;'R'
  3031  007881  20                 	db	32
  3032  007882  2D                 	db	45
  3033  007883  20                 	db	32
  3034  007884  6D                 	db	109	;'m'
  3035  007885  61                 	db	97	;'a'
  3036  007886  73                 	db	115	;'s'
  3037  007887  6B                 	db	107	;'k'
  3038  007888  20                 	db	32
  3039  007889  66                 	db	102	;'f'
  3040  00788A  6F                 	db	111	;'o'
  3041  00788B  72                 	db	114	;'r'
  3042  00788C  20                 	db	32
  3043  00788D  74                 	db	116	;'t'
  3044  00788E  79                 	db	121	;'y'
  3045  00788F  70                 	db	112	;'p'
  3046  007890  65                 	db	101	;'e'
  3047  007891  20                 	db	32
  3048  007892  69                 	db	105	;'i'
  3049  007893  73                 	db	115	;'s'
  3050  007894  20                 	db	32
  3051  007895  6D                 	db	109	;'m'
  3052  007896  69                 	db	105	;'i'
  3053  007897  73                 	db	115	;'s'
  3054  007898  73                 	db	115	;'s'
  3055  007899  69                 	db	105	;'i'
  3056  00789A  6E                 	db	110	;'n'
  3057  00789B  67                 	db	103	;'g'
  3058  00789C  0D                 	db	13
  3059  00789D  0A                 	db	10
  3060  00789E  00                 	db	0
  3061  00789F                     STR_93:
  3062  00789F  2D                 	db	45
  3063  0078A0  45                 	db	69	;'E'
  3064  0078A1  52                 	db	82	;'R'
  3065  0078A2  52                 	db	82	;'R'
  3066  0078A3  4F                 	db	79	;'O'
  3067  0078A4  52                 	db	82	;'R'
  3068  0078A5  20                 	db	32
  3069  0078A6  2D                 	db	45
  3070  0078A7  20                 	db	32
  3071  0078A8  46                 	db	70	;'F'
  3072  0078A9  61                 	db	97	;'a'
  3073  0078AA  69                 	db	105	;'i'
  3074  0078AB  6C                 	db	108	;'l'
  3075  0078AC  65                 	db	101	;'e'
  3076  0078AD  64                 	db	100	;'d'
  3077  0078AE  20                 	db	32
  3078  0078AF  74                 	db	116	;'t'
  3079  0078B0  6F                 	db	111	;'o'
  3080  0078B1  20                 	db	32
  3081  0078B2  77                 	db	119	;'w'
  3082  0078B3  72                 	db	114	;'r'
  3083  0078B4  69                 	db	105	;'i'
  3084  0078B5  74                 	db	116	;'t'
  3085  0078B6  65                 	db	101	;'e'
  3086  0078B7  20                 	db	32
  3087  0078B8  76                 	db	118	;'v'
  3088  0078B9  61                 	db	97	;'a'
  3089  0078BA  6C                 	db	108	;'l'
  3090  0078BB  75                 	db	117	;'u'
  3091  0078BC  65                 	db	101	;'e'
  3092  0078BD  20                 	db	32
  3093  0078BE  66                 	db	102	;'f'
  3094  0078BF  6F                 	db	111	;'o'
  3095  0078C0  72                 	db	114	;'r'
  3096  0078C1  20                 	db	32
  3097  0078C2  00                 	db	0
  3098  0078C3                     STR_3:
  3099  0078C3  68                 	db	104	;'h'
  3100  0078C4  74                 	db	116	;'t'
  3101  0078C5  74                 	db	116	;'t'
  3102  0078C6  70                 	db	112	;'p'
  3103  0078C7  3A                 	db	58	;':'
  3104  0078C8  2F                 	db	47
  3105  0078C9  2F                 	db	47
  3106  0078CA  77                 	db	119	;'w'
  3107  0078CB  77                 	db	119	;'w'
  3108  0078CC  77                 	db	119	;'w'
  3109  0078CD  2E                 	db	46
  3110  0078CE  70                 	db	112	;'p'
  3111  0078CF  61                 	db	97	;'a'
  3112  0078D0  72                 	db	114	;'r'
  3113  0078D1  61                 	db	97	;'a'
  3114  0078D2  64                 	db	100	;'d'
  3115  0078D3  69                 	db	105	;'i'
  3116  0078D4  73                 	db	115	;'s'
  3117  0078D5  65                 	db	101	;'e'
  3118  0078D6  6F                 	db	111	;'o'
  3119  0078D7  66                 	db	102	;'f'
  3120  0078D8  74                 	db	116	;'t'
  3121  0078D9  68                 	db	104	;'h'
  3122  0078DA  65                 	db	101	;'e'
  3123  0078DB  66                 	db	102	;'f'
  3124  0078DC  72                 	db	114	;'r'
  3125  0078DD  6F                 	db	111	;'o'
  3126  0078DE  67                 	db	103	;'g'
  3127  0078DF  2E                 	db	46
  3128  0078E0  63                 	db	99	;'c'
  3129  0078E1  6F                 	db	111	;'o'
  3130  0078E2  6D                 	db	109	;'m'
  3131  0078E3  0D                 	db	13
  3132  0078E4  0A                 	db	10
  3133  0078E5  00                 	db	0
  3134  0078E6                     STR_166:
  3135  0078E6  2B                 	db	43
  3136  0078E7  4F                 	db	79	;'O'
  3137  0078E8  4B                 	db	75	;'K'
  3138  0078E9  20                 	db	32
  3139  0078EA  2D                 	db	45
  3140  0078EB  20                 	db	32
  3141  0078EC  4E                 	db	78	;'N'
  3142  0078ED  65                 	db	101	;'e'
  3143  0078EE  77                 	db	119	;'w'
  3144  0078EF  20                 	db	32
  3145  0078F0  62                 	db	98	;'b'
  3146  0078F1  61                 	db	97	;'a'
  3147  0078F2  75                 	db	117	;'u'
  3148  0078F3  64                 	db	100	;'d'
  3149  0078F4  72                 	db	114	;'r'
  3150  0078F5  61                 	db	97	;'a'
  3151  0078F6  74                 	db	116	;'t'
  3152  0078F7  65                 	db	101	;'e'
  3153  0078F8  20                 	db	32
  3154  0078F9  77                 	db	119	;'w'
  3155  0078FA  69                 	db	105	;'i'
  3156  0078FB  6C                 	db	108	;'l'
  3157  0078FC  6C                 	db	108	;'l'
  3158  0078FD  20                 	db	32
  3159  0078FE  62                 	db	98	;'b'
  3160  0078FF  65                 	db	101	;'e'
  3161  007900  20                 	db	32
  3162  007901  73                 	db	115	;'s'
  3163  007902  65                 	db	101	;'e'
  3164  007903  74                 	db	116	;'t'
  3165  007904  2E                 	db	46
  3166  007905  0D                 	db	13
  3167  007906  0A                 	db	10
  3168  007907  00                 	db	0
  3169  007908                     STR_273:
  3170  007908  53                 	db	83	;'S'
  3171  007909  45                 	db	69	;'E'
  3172  00790A  54                 	db	84	;'T'
  3173  00790B  20                 	db	32
  3174  00790C  2D                 	db	45
  3175  00790D  20                 	db	32
  3176  00790E  50                 	db	80	;'P'
  3177  00790F  65                 	db	101	;'e'
  3178  007910  72                 	db	114	;'r'
  3179  007911  73                 	db	115	;'s'
  3180  007912  69                 	db	105	;'i'
  3181  007913  73                 	db	115	;'s'
  3182  007914  74                 	db	116	;'t'
  3183  007915  65                 	db	101	;'e'
  3184  007916  6E                 	db	110	;'n'
  3185  007917  74                 	db	116	;'t'
  3186  007918  20                 	db	32
  3187  007919  66                 	db	102	;'f'
  3188  00791A  75                 	db	117	;'u'
  3189  00791B  6E                 	db	110	;'n'
  3190  00791C  63                 	db	99	;'c'
  3191  00791D  74                 	db	116	;'t'
  3192  00791E  69                 	db	105	;'i'
  3193  00791F  6F                 	db	111	;'o'
  3194  007920  6E                 	db	110	;'n'
  3195  007921  61                 	db	97	;'a'
  3196  007922  6C                 	db	108	;'l'
  3197  007923  69                 	db	105	;'i'
  3198  007924  74                 	db	116	;'t'
  3199  007925  79                 	db	121	;'y'
  3200  007926  2E                 	db	46
  3201  007927  0D                 	db	13
  3202  007928  0A                 	db	10
  3203  007929  00                 	db	0
  3204  00792A                     STR_262:
  3205  00792A  53                 	db	83	;'S'
  3206  00792B  54                 	db	84	;'T'
  3207  00792C  41                 	db	65	;'A'
  3208  00792D  54                 	db	84	;'T'
  3209  00792E  20                 	db	32
  3210  00792F  2D                 	db	45
  3211  007930  20                 	db	32
  3212  007931  44                 	db	68	;'D'
  3213  007932  69                 	db	105	;'i'
  3214  007933  73                 	db	115	;'s'
  3215  007934  70                 	db	112	;'p'
  3216  007935  6C                 	db	108	;'l'
  3217  007936  61                 	db	97	;'a'
  3218  007937  79                 	db	121	;'y'
  3219  007938  20                 	db	32
  3220  007939  43                 	db	67	;'C'
  3221  00793A  41                 	db	65	;'A'
  3222  00793B  4E                 	db	78	;'N'
  3223  00793C  20                 	db	32
  3224  00793D  73                 	db	115	;'s'
  3225  00793E  74                 	db	116	;'t'
  3226  00793F  61                 	db	97	;'a'
  3227  007940  74                 	db	116	;'t'
  3228  007941  69                 	db	105	;'i'
  3229  007942  73                 	db	115	;'s'
  3230  007943  74                 	db	116	;'t'
  3231  007944  69                 	db	105	;'i'
  3232  007945  63                 	db	99	;'c'
  3233  007946  73                 	db	115	;'s'
  3234  007947  2E                 	db	46
  3235  007948  0D                 	db	13
  3236  007949  0A                 	db	10
  3237  00794A  00                 	db	0
  3238  00794B                     STR_37:
  3239  00794B  2D                 	db	45
  3240  00794C  45                 	db	69	;'E'
  3241  00794D  52                 	db	82	;'R'
  3242  00794E  52                 	db	82	;'R'
  3243  00794F  4F                 	db	79	;'O'
  3244  007950  52                 	db	82	;'R'
  3245  007951  20                 	db	32
  3246  007952  2D                 	db	45
  3247  007953  20                 	db	32
  3248  007954  46                 	db	70	;'F'
  3249  007955  61                 	db	97	;'a'
  3250  007956  69                 	db	105	;'i'
  3251  007957  6C                 	db	108	;'l'
  3252  007958  65                 	db	101	;'e'
  3253  007959  64                 	db	100	;'d'
  3254  00795A  20                 	db	32
  3255  00795B  74                 	db	116	;'t'
  3256  00795C  6F                 	db	111	;'o'
  3257  00795D  20                 	db	32
  3258  00795E  73                 	db	115	;'s'
  3259  00795F  65                 	db	101	;'e'
  3260  007960  6E                 	db	110	;'n'
  3261  007961  64                 	db	100	;'d'
  3262  007962  20                 	db	32
  3263  007963  65                 	db	101	;'e'
  3264  007964  76                 	db	118	;'v'
  3265  007965  65                 	db	101	;'e'
  3266  007966  6E                 	db	110	;'n'
  3267  007967  74                 	db	116	;'t'
  3268  007968  2E                 	db	46
  3269  007969  0D                 	db	13
  3270  00796A  0A                 	db	10
  3271  00796B  00                 	db	0
  3272  00796C                     STR_170:
  3273  00796C  2D                 	db	45
  3274  00796D  45                 	db	69	;'E'
  3275  00796E  52                 	db	82	;'R'
  3276  00796F  52                 	db	82	;'R'
  3277  007970  4F                 	db	79	;'O'
  3278  007971  52                 	db	82	;'R'
  3279  007972  20                 	db	32
  3280  007973  2D                 	db	45
  3281  007974  20                 	db	32
  3282  007975  55                 	db	85	;'U'
  3283  007976  6E                 	db	110	;'n'
  3284  007977  6B                 	db	107	;'k'
  3285  007978  6E                 	db	110	;'n'
  3286  007979  6F                 	db	111	;'o'
  3287  00797A  77                 	db	119	;'w'
  3288  00797B  6E                 	db	110	;'n'
  3289  00797C  20                 	db	32
  3290  00797D  27                 	db	39
  3291  00797E  53                 	db	83	;'S'
  3292  00797F  45                 	db	69	;'E'
  3293  007980  54                 	db	84	;'T'
  3294  007981  27                 	db	39
  3295  007982  20                 	db	32
  3296  007983  63                 	db	99	;'c'
  3297  007984  6F                 	db	111	;'o'
  3298  007985  6D                 	db	109	;'m'
  3299  007986  6D                 	db	109	;'m'
  3300  007987  61                 	db	97	;'a'
  3301  007988  6E                 	db	110	;'n'
  3302  007989  64                 	db	100	;'d'
  3303  00798A  0D                 	db	13
  3304  00798B  0A                 	db	10
  3305  00798C  00                 	db	0
  3306  00798D                     STR_54:
  3307  00798D  2D                 	db	45
  3308  00798E  45                 	db	69	;'E'
  3309  00798F  52                 	db	82	;'R'
  3310  007990  52                 	db	82	;'R'
  3311  007991  4F                 	db	79	;'O'
  3312  007992  52                 	db	82	;'R'
  3313  007993  20                 	db	32
  3314  007994  2D                 	db	45
  3315  007995  20                 	db	32
  3316  007996  4E                 	db	78	;'N'
  3317  007997  65                 	db	101	;'e'
  3318  007998  65                 	db	101	;'e'
  3319  007999  64                 	db	100	;'d'
  3320  00799A  73                 	db	115	;'s'
  3321  00799B  20                 	db	32
  3322  00799C  5B                 	db	91	;'['
  3323  00799D  70                 	db	112	;'p'
  3324  00799E  61                 	db	97	;'a'
  3325  00799F  67                 	db	103	;'g'
  3326  0079A0  65                 	db	101	;'e'
  3327  0079A1  3A                 	db	58	;':'
  3328  0079A2  5D                 	db	93	;']'
  3329  0079A3  72                 	db	114	;'r'
  3330  0079A4  65                 	db	101	;'e'
  3331  0079A5  67                 	db	103	;'g'
  3332  0079A6  69                 	db	105	;'i'
  3333  0079A7  73                 	db	115	;'s'
  3334  0079A8  74                 	db	116	;'t'
  3335  0079A9  65                 	db	101	;'e'
  3336  0079AA  72                 	db	114	;'r'
  3337  0079AB  0D                 	db	13
  3338  0079AC  0A                 	db	10
  3339  0079AD  00                 	db	0
  3340  0079AE                     STR_150:
  3341  0079AE  2B                 	db	43
  3342  0079AF  4F                 	db	79	;'O'
  3343  0079B0  4B                 	db	75	;'K'
  3344  0079B1  20                 	db	32
  3345  0079B2  2D                 	db	45
  3346  0079B3  20                 	db	32
  3347  0079B4  4D                 	db	77	;'M'
  3348  0079B5  6F                 	db	111	;'o'
  3349  0079B6  64                 	db	100	;'d'
  3350  0079B7  65                 	db	101	;'e'
  3351  0079B8  20                 	db	32
  3352  0079B9  69                 	db	105	;'i'
  3353  0079BA  73                 	db	115	;'s'
  3354  0079BB  20                 	db	32
  3355  0079BC  6E                 	db	110	;'n'
  3356  0079BD  6F                 	db	111	;'o'
  3357  0079BE  77                 	db	119	;'w'
  3358  0079BF  20                 	db	32
  3359  0079C0  56                 	db	86	;'V'
  3360  0079C1  53                 	db	83	;'S'
  3361  0079C2  43                 	db	67	;'C'
  3362  0079C3  50                 	db	80	;'P'
  3363  0079C4  20                 	db	32
  3364  0079C5  44                 	db	68	;'D'
  3365  0079C6  72                 	db	114	;'r'
  3366  0079C7  69                 	db	105	;'i'
  3367  0079C8  76                 	db	118	;'v'
  3368  0079C9  65                 	db	101	;'e'
  3369  0079CA  72                 	db	114	;'r'
  3370  0079CB  0D                 	db	13
  3371  0079CC  0A                 	db	10
  3372  0079CD  00                 	db	0
  3373  0079CE                     STR_7:
  3374  0079CE  57                 	db	87	;'W'
  3375  0079CF  69                 	db	105	;'i'
  3376  0079D0  6C                 	db	108	;'l'
  3377  0079D1  6C                 	db	108	;'l'
  3378  0079D2  20                 	db	32
  3379  0079D3  65                 	db	101	;'e'
  3380  0079D4  6E                 	db	110	;'n'
  3381  0079D5  74                 	db	116	;'t'
  3382  0079D6  65                 	db	101	;'e'
  3383  0079D7  72                 	db	114	;'r'
  3384  0079D8  20                 	db	32
  3385  0079D9  62                 	db	98	;'b'
  3386  0079DA  6F                 	db	111	;'o'
  3387  0079DB  6F                 	db	111	;'o'
  3388  0079DC  74                 	db	116	;'t'
  3389  0079DD  6C                 	db	108	;'l'
  3390  0079DE  6F                 	db	111	;'o'
  3391  0079DF  61                 	db	97	;'a'
  3392  0079E0  64                 	db	100	;'d'
  3393  0079E1  65                 	db	101	;'e'
  3394  0079E2  72                 	db	114	;'r'
  3395  0079E3  20                 	db	32
  3396  0079E4  6E                 	db	110	;'n'
  3397  0079E5  6F                 	db	111	;'o'
  3398  0079E6  77                 	db	119	;'w'
  3399  0079E7  2E                 	db	46
  3400  0079E8  2E                 	db	46
  3401  0079E9  2E                 	db	46
  3402  0079EA  0D                 	db	13
  3403  0079EB  0A                 	db	10
  3404  0079EC  00                 	db	0
  3405  0079ED                     STR_256:
  3406  0079ED  43                 	db	67	;'C'
  3407  0079EE  4C                 	db	76	;'L'
  3408  0079EF  4F                 	db	79	;'O'
  3409  0079F0  53                 	db	83	;'S'
  3410  0079F1  45                 	db	69	;'E'
  3411  0079F2  20                 	db	32
  3412  0079F3  2D                 	db	45
  3413  0079F4  20                 	db	32
  3414  0079F5  43                 	db	67	;'C'
  3415  0079F6  6C                 	db	108	;'l'
  3416  0079F7  6F                 	db	111	;'o'
  3417  0079F8  73                 	db	115	;'s'
  3418  0079F9  65                 	db	101	;'e'
  3419  0079FA  20                 	db	32
  3420  0079FB  43                 	db	67	;'C'
  3421  0079FC  41                 	db	65	;'A'
  3422  0079FD  4E                 	db	78	;'N'
  3423  0079FE  20                 	db	32
  3424  0079FF  69                 	db	105	;'i'
  3425  007A00  6E                 	db	110	;'n'
  3426  007A01  74                 	db	116	;'t'
  3427  007A02  65                 	db	101	;'e'
  3428  007A03  72                 	db	114	;'r'
  3429  007A04  66                 	db	102	;'f'
  3430  007A05  61                 	db	97	;'a'
  3431  007A06  63                 	db	99	;'c'
  3432  007A07  65                 	db	101	;'e'
  3433  007A08  2E                 	db	46
  3434  007A09  0D                 	db	13
  3435  007A0A  0A                 	db	10
  3436  007A0B  00                 	db	0
  3437  007A0C                     STR_167:
  3438  007A0C  2B                 	db	43
  3439  007A0D  45                 	db	69	;'E'
  3440  007A0E  52                 	db	82	;'R'
  3441  007A0F  52                 	db	82	;'R'
  3442  007A10  4F                 	db	79	;'O'
  3443  007A11  52                 	db	82	;'R'
  3444  007A12  20                 	db	32
  3445  007A13  2D                 	db	45
  3446  007A14  20                 	db	32
  3447  007A15  49                 	db	73	;'I'
  3448  007A16  6E                 	db	110	;'n'
  3449  007A17  76                 	db	118	;'v'
  3450  007A18  61                 	db	97	;'a'
  3451  007A19  6C                 	db	108	;'l'
  3452  007A1A  69                 	db	105	;'i'
  3453  007A1B  64                 	db	100	;'d'
  3454  007A1C  20                 	db	32
  3455  007A1D  62                 	db	98	;'b'
  3456  007A1E  61                 	db	97	;'a'
  3457  007A1F  75                 	db	117	;'u'
  3458  007A20  64                 	db	100	;'d'
  3459  007A21  72                 	db	114	;'r'
  3460  007A22  61                 	db	97	;'a'
  3461  007A23  74                 	db	116	;'t'
  3462  007A24  65                 	db	101	;'e'
  3463  007A25  2E                 	db	46
  3464  007A26  0D                 	db	13
  3465  007A27  0A                 	db	10
  3466  007A28  00                 	db	0
  3467  007A29                     STR_5:
  3468  007A29  54                 	db	84	;'T'
  3469  007A2A  65                 	db	101	;'e'
  3470  007A2B  6D                 	db	109	;'m'
  3471  007A2C  70                 	db	112	;'p'
  3472  007A2D  6F                 	db	111	;'o'
  3473  007A2E  72                 	db	114	;'r'
  3474  007A2F  61                 	db	97	;'a'
  3475  007A30  72                 	db	114	;'r'
  3476  007A31  79                 	db	121	;'y'
  3477  007A32  20                 	db	32
  3478  007A33  76                 	db	118	;'v'
  3479  007A34  65                 	db	101	;'e'
  3480  007A35  72                 	db	114	;'r'
  3481  007A36  62                 	db	98	;'b'
  3482  007A37  6F                 	db	111	;'o'
  3483  007A38  73                 	db	115	;'s'
  3484  007A39  65                 	db	101	;'e'
  3485  007A3A  20                 	db	32
  3486  007A3B  6D                 	db	109	;'m'
  3487  007A3C  6F                 	db	111	;'o'
  3488  007A3D  64                 	db	100	;'d'
  3489  007A3E  65                 	db	101	;'e'
  3490  007A3F  20                 	db	32
  3491  007A40  73                 	db	115	;'s'
  3492  007A41  65                 	db	101	;'e'
  3493  007A42  74                 	db	116	;'t'
  3494  007A43  0D                 	db	13
  3495  007A44  0A                 	db	10
  3496  007A45  00                 	db	0
  3497  007A46                     STR_148:
  3498  007A46  2B                 	db	43
  3499  007A47  4F                 	db	79	;'O'
  3500  007A48  4B                 	db	75	;'K'
  3501  007A49  20                 	db	32
  3502  007A4A  2D                 	db	45
  3503  007A4B  20                 	db	32
  3504  007A4C  4D                 	db	77	;'M'
  3505  007A4D  6F                 	db	111	;'o'
  3506  007A4E  64                 	db	100	;'d'
  3507  007A4F  65                 	db	101	;'e'
  3508  007A50  20                 	db	32
  3509  007A51  69                 	db	105	;'i'
  3510  007A52  73                 	db	115	;'s'
  3511  007A53  20                 	db	32
  3512  007A54  6E                 	db	110	;'n'
  3513  007A55  6F                 	db	111	;'o'
  3514  007A56  77                 	db	119	;'w'
  3515  007A57  20                 	db	32
  3516  007A58  76                 	db	118	;'v'
  3517  007A59  65                 	db	101	;'e'
  3518  007A5A  72                 	db	114	;'r'
  3519  007A5B  62                 	db	98	;'b'
  3520  007A5C  6F                 	db	111	;'o'
  3521  007A5D  73                 	db	115	;'s'
  3522  007A5E  65                 	db	101	;'e'
  3523  007A5F  0D                 	db	13
  3524  007A60  0A                 	db	10
  3525  007A61  00                 	db	0
  3526  007A62                     STR_103:
  3527  007A62  2D                 	db	45
  3528  007A63  45                 	db	69	;'E'
  3529  007A64  52                 	db	82	;'R'
  3530  007A65  52                 	db	82	;'R'
  3531  007A66  4F                 	db	79	;'O'
  3532  007A67  52                 	db	82	;'R'
  3533  007A68  20                 	db	32
  3534  007A69  2D                 	db	45
  3535  007A6A  20                 	db	32
  3536  007A6B  4E                 	db	78	;'N'
  3537  007A6C  6F                 	db	111	;'o'
  3538  007A6D  64                 	db	100	;'d'
  3539  007A6E  65                 	db	101	;'e'
  3540  007A6F  20                 	db	32
  3541  007A70  6E                 	db	110	;'n'
  3542  007A71  6F                 	db	111	;'o'
  3543  007A72  74                 	db	116	;'t'
  3544  007A73  20                 	db	32
  3545  007A74  66                 	db	102	;'f'
  3546  007A75  6F                 	db	111	;'o'
  3547  007A76  75                 	db	117	;'u'
  3548  007A77  6E                 	db	110	;'n'
  3549  007A78  64                 	db	100	;'d'
  3550  007A79  2E                 	db	46
  3551  007A7A  0D                 	db	13
  3552  007A7B  0A                 	db	10
  3553  007A7C  00                 	db	0
  3554  007A7D                     STR_251:
  3555  007A7D  42                 	db	66	;'B'
  3556  007A7E  4F                 	db	79	;'O'
  3557  007A7F  4F                 	db	79	;'O'
  3558  007A80  54                 	db	84	;'T'
  3559  007A81  20                 	db	32
  3560  007A82  2D                 	db	45
  3561  007A83  20                 	db	32
  3562  007A84  45                 	db	69	;'E'
  3563  007A85  6E                 	db	110	;'n'
  3564  007A86  74                 	db	116	;'t'
  3565  007A87  65                 	db	101	;'e'
  3566  007A88  72                 	db	114	;'r'
  3567  007A89  20                 	db	32
  3568  007A8A  62                 	db	98	;'b'
  3569  007A8B  6F                 	db	111	;'o'
  3570  007A8C  6F                 	db	111	;'o'
  3571  007A8D  74                 	db	116	;'t'
  3572  007A8E  6C                 	db	108	;'l'
  3573  007A8F  6F                 	db	111	;'o'
  3574  007A90  61                 	db	97	;'a'
  3575  007A91  64                 	db	100	;'d'
  3576  007A92  65                 	db	101	;'e'
  3577  007A93  72                 	db	114	;'r'
  3578  007A94  2E                 	db	46
  3579  007A95  0D                 	db	13
  3580  007A96  0A                 	db	10
  3581  007A97  00                 	db	0
  3582  007A98                     STR_172:
  3583  007A98  2D                 	db	45
  3584  007A99  45                 	db	69	;'E'
  3585  007A9A  52                 	db	82	;'R'
  3586  007A9B  52                 	db	82	;'R'
  3587  007A9C  4F                 	db	79	;'O'
  3588  007A9D  52                 	db	82	;'R'
  3589  007A9E  20                 	db	32
  3590  007A9F  2D                 	db	45
  3591  007AA0  20                 	db	32
  3592  007AA1  55                 	db	85	;'U'
  3593  007AA2  6E                 	db	110	;'n'
  3594  007AA3  6B                 	db	107	;'k'
  3595  007AA4  6E                 	db	110	;'n'
  3596  007AA5  6F                 	db	111	;'o'
  3597  007AA6  77                 	db	119	;'w'
  3598  007AA7  6E                 	db	110	;'n'
  3599  007AA8  20                 	db	32
  3600  007AA9  63                 	db	99	;'c'
  3601  007AAA  6F                 	db	111	;'o'
  3602  007AAB  6D                 	db	109	;'m'
  3603  007AAC  6D                 	db	109	;'m'
  3604  007AAD  61                 	db	97	;'a'
  3605  007AAE  6E                 	db	110	;'n'
  3606  007AAF  64                 	db	100	;'d'
  3607  007AB0  0D                 	db	13
  3608  007AB1  0A                 	db	10
  3609  007AB2  00                 	db	0
  3610  007AB3                     STR_284:
  3611  007AB3  4E                 	db	78	;'N'
  3612  007AB4  6F                 	db	111	;'o'
  3613  007AB5  64                 	db	100	;'d'
  3614  007AB6  65                 	db	101	;'e'
  3615  007AB7  20                 	db	32
  3616  007AB8  66                 	db	102	;'f'
  3617  007AB9  6F                 	db	111	;'o'
  3618  007ABA  75                 	db	117	;'u'
  3619  007ABB  6E                 	db	110	;'n'
  3620  007ABC  64                 	db	100	;'d'
  3621  007ABD  20                 	db	32
  3622  007ABE  77                 	db	119	;'w'
  3623  007ABF  69                 	db	105	;'i'
  3624  007AC0  74                 	db	116	;'t'
  3625  007AC1  68                 	db	104	;'h'
  3626  007AC2  20                 	db	32
  3627  007AC3  6E                 	db	110	;'n'
  3628  007AC4  6F                 	db	111	;'o'
  3629  007AC5  64                 	db	100	;'d'
  3630  007AC6  65                 	db	101	;'e'
  3631  007AC7  20                 	db	32
  3632  007AC8  69                 	db	105	;'i'
  3633  007AC9  64                 	db	100	;'d'
  3634  007ACA  20                 	db	32
  3635  007ACB  3D                 	db	61	;'='
  3636  007ACC  20                 	db	32
  3637  007ACD  00                 	db	0
  3638  007ACE                     STR_152:
  3639  007ACE  2B                 	db	43
  3640  007ACF  4F                 	db	79	;'O'
  3641  007AD0  4B                 	db	75	;'K'
  3642  007AD1  20                 	db	32
  3643  007AD2  2D                 	db	45
  3644  007AD3  20                 	db	32
  3645  007AD4  4D                 	db	77	;'M'
  3646  007AD5  6F                 	db	111	;'o'
  3647  007AD6  64                 	db	100	;'d'
  3648  007AD7  65                 	db	101	;'e'
  3649  007AD8  20                 	db	32
  3650  007AD9  69                 	db	105	;'i'
  3651  007ADA  73                 	db	115	;'s'
  3652  007ADB  20                 	db	32
  3653  007ADC  6E                 	db	110	;'n'
  3654  007ADD  6F                 	db	111	;'o'
  3655  007ADE  77                 	db	119	;'w'
  3656  007ADF  20                 	db	32
  3657  007AE0  53                 	db	83	;'S'
  3658  007AE1  4C                 	db	76	;'L'
  3659  007AE2  43                 	db	67	;'C'
  3660  007AE3  41                 	db	65	;'A'
  3661  007AE4  4E                 	db	78	;'N'
  3662  007AE5  0D                 	db	13
  3663  007AE6  0A                 	db	10
  3664  007AE7  00                 	db	0
  3665  007AE8                     STR_25:
  3666  007AE8  2B                 	db	43
  3667  007AE9  4F                 	db	79	;'O'
  3668  007AEA  4B                 	db	75	;'K'
  3669  007AEB  20                 	db	32
  3670  007AEC  2D                 	db	45
  3671  007AED  20                 	db	32
  3672  007AEE  4C                 	db	76	;'L'
  3673  007AEF  69                 	db	105	;'i'
  3674  007AF0  73                 	db	115	;'s'
  3675  007AF1  74                 	db	116	;'t'
  3676  007AF2  65                 	db	101	;'e'
  3677  007AF3  6E                 	db	110	;'n'
  3678  007AF4  20                 	db	32
  3679  007AF5  6F                 	db	111	;'o'
  3680  007AF6  6E                 	db	110	;'n'
  3681  007AF7  6C                 	db	108	;'l'
  3682  007AF8  79                 	db	121	;'y'
  3683  007AF9  20                 	db	32
  3684  007AFA  6D                 	db	109	;'m'
  3685  007AFB  6F                 	db	111	;'o'
  3686  007AFC  64                 	db	100	;'d'
  3687  007AFD  65                 	db	101	;'e'
  3688  007AFE  0D                 	db	13
  3689  007AFF  0A                 	db	10
  3690  007B00  00                 	db	0
  3691  007B01                     STR_236:
  3692  007B01  54                 	db	84	;'T'
  3693  007B02  72                 	db	114	;'r'
  3694  007B03  61                 	db	97	;'a'
  3695  007B04  6E                 	db	110	;'n'
  3696  007B05  73                 	db	115	;'s'
  3697  007B06  6D                 	db	109	;'m'
  3698  007B07  69                 	db	105	;'i'
  3699  007B08  74                 	db	116	;'t'
  3700  007B09  20                 	db	32
  3701  007B0A  45                 	db	69	;'E'
  3702  007B0B  72                 	db	114	;'r'
  3703  007B0C  72                 	db	114	;'r'
  3704  007B0D  6F                 	db	111	;'o'
  3705  007B0E  72                 	db	114	;'r'
  3706  007B0F  20                 	db	32
  3707  007B10  43                 	db	67	;'C'
  3708  007B11  6F                 	db	111	;'o'
  3709  007B12  75                 	db	117	;'u'
  3710  007B13  6E                 	db	110	;'n'
  3711  007B14  74                 	db	116	;'t'
  3712  007B15  65                 	db	101	;'e'
  3713  007B16  72                 	db	114	;'r'
  3714  007B17  3A                 	db	58	;':'
  3715  007B18  20                 	db	32
  3716  007B19  00                 	db	0
  3717  007B1A                     STR_73:
  3718  007B1A  55                 	db	85	;'U'
  3719  007B1B  6E                 	db	110	;'n'
  3720  007B1C  61                 	db	97	;'a'
  3721  007B1D  62                 	db	98	;'b'
  3722  007B1E  6C                 	db	108	;'l'
  3723  007B1F  65                 	db	101	;'e'
  3724  007B20  20                 	db	32
  3725  007B21  74                 	db	116	;'t'
  3726  007B22  6F                 	db	111	;'o'
  3727  007B23  20                 	db	32
  3728  007B24  72                 	db	114	;'r'
  3729  007B25  65                 	db	101	;'e'
  3730  007B26  61                 	db	97	;'a'
  3731  007B27  64                 	db	100	;'d'
  3732  007B28  20                 	db	32
  3733  007B29  72                 	db	114	;'r'
  3734  007B2A  65                 	db	101	;'e'
  3735  007B2B  67                 	db	103	;'g'
  3736  007B2C  69                 	db	105	;'i'
  3737  007B2D  73                 	db	115	;'s'
  3738  007B2E  74                 	db	116	;'t'
  3739  007B2F  65                 	db	101	;'e'
  3740  007B30  72                 	db	114	;'r'
  3741  007B31  20                 	db	32
  3742  007B32  00                 	db	0
  3743  007B33                     STR_259:
  3744  007B33  54                 	db	84	;'T'
  3745  007B34  58                 	db	88	;'X'
  3746  007B35  20                 	db	32
  3747  007B36  2D                 	db	45
  3748  007B37  20                 	db	32
  3749  007B38  53                 	db	83	;'S'
  3750  007B39  65                 	db	101	;'e'
  3751  007B3A  6E                 	db	110	;'n'
  3752  007B3B  64                 	db	100	;'d'
  3753  007B3C  20                 	db	32
  3754  007B3D  43                 	db	67	;'C'
  3755  007B3E  41                 	db	65	;'A'
  3756  007B3F  4E                 	db	78	;'N'
  3757  007B40  20                 	db	32
  3758  007B41  66                 	db	102	;'f'
  3759  007B42  72                 	db	114	;'r'
  3760  007B43  61                 	db	97	;'a'
  3761  007B44  6D                 	db	109	;'m'
  3762  007B45  65                 	db	101	;'e'
  3763  007B46  20                 	db	32
  3764  007B47  2E                 	db	46
  3765  007B48  0D                 	db	13
  3766  007B49  0A                 	db	10
  3767  007B4A  00                 	db	0
  3768  007B4B                     STR_269:
  3769  007B4B  46                 	db	70	;'F'
  3770  007B4C  49                 	db	73	;'I'
  3771  007B4D  4C                 	db	76	;'L'
  3772  007B4E  54                 	db	84	;'T'
  3773  007B4F  45                 	db	69	;'E'
  3774  007B50  52                 	db	82	;'R'
  3775  007B51  20                 	db	32
  3776  007B52  2D                 	db	45
  3777  007B53  20                 	db	32
  3778  007B54  53                 	db	83	;'S'
  3779  007B55  65                 	db	101	;'e'
  3780  007B56  74                 	db	116	;'t'
  3781  007B57  20                 	db	32
  3782  007B58  66                 	db	102	;'f'
  3783  007B59  69                 	db	105	;'i'
  3784  007B5A  6C                 	db	108	;'l'
  3785  007B5B  74                 	db	116	;'t'
  3786  007B5C  65                 	db	101	;'e'
  3787  007B5D  72                 	db	114	;'r'
  3788  007B5E  20                 	db	32
  3789  007B5F  2E                 	db	46
  3790  007B60  0D                 	db	13
  3791  007B61  0A                 	db	10
  3792  007B62  00                 	db	0
  3793  007B63                     STR_52:
  3794  007B63  2D                 	db	45
  3795  007B64  45                 	db	69	;'E'
  3796  007B65  52                 	db	82	;'R'
  3797  007B66  52                 	db	82	;'R'
  3798  007B67  4F                 	db	79	;'O'
  3799  007B68  52                 	db	82	;'R'
  3800  007B69  20                 	db	32
  3801  007B6A  2D                 	db	45
  3802  007B6B  20                 	db	32
  3803  007B6C  4E                 	db	78	;'N'
  3804  007B6D  65                 	db	101	;'e'
  3805  007B6E  65                 	db	101	;'e'
  3806  007B6F  64                 	db	100	;'d'
  3807  007B70  73                 	db	115	;'s'
  3808  007B71  20                 	db	32
  3809  007B72  6E                 	db	110	;'n'
  3810  007B73  6F                 	db	111	;'o'
  3811  007B74  64                 	db	100	;'d'
  3812  007B75  65                 	db	101	;'e'
  3813  007B76  69                 	db	105	;'i'
  3814  007B77  64                 	db	100	;'d'
  3815  007B78  0D                 	db	13
  3816  007B79  0A                 	db	10
  3817  007B7A  00                 	db	0
  3818  007B7B                     STR_28:
  3819  007B7B  2D                 	db	45
  3820  007B7C  45                 	db	69	;'E'
  3821  007B7D  52                 	db	82	;'R'
  3822  007B7E  52                 	db	82	;'R'
  3823  007B7F  4F                 	db	79	;'O'
  3824  007B80  52                 	db	82	;'R'
  3825  007B81  20                 	db	32
  3826  007B82  2D                 	db	45
  3827  007B83  20                 	db	32
  3828  007B84  55                 	db	85	;'U'
  3829  007B85  6E                 	db	110	;'n'
  3830  007B86  6B                 	db	107	;'k'
  3831  007B87  6E                 	db	110	;'n'
  3832  007B88  6F                 	db	111	;'o'
  3833  007B89  77                 	db	119	;'w'
  3834  007B8A  6E                 	db	110	;'n'
  3835  007B8B  20                 	db	32
  3836  007B8C  6D                 	db	109	;'m'
  3837  007B8D  6F                 	db	111	;'o'
  3838  007B8E  64                 	db	100	;'d'
  3839  007B8F  65                 	db	101	;'e'
  3840  007B90  0D                 	db	13
  3841  007B91  0A                 	db	10
  3842  007B92  00                 	db	0
  3843  007B93                     STR_88:
  3844  007B93  2D                 	db	45
  3845  007B94  45                 	db	69	;'E'
  3846  007B95  52                 	db	82	;'R'
  3847  007B96  52                 	db	82	;'R'
  3848  007B97  4F                 	db	79	;'O'
  3849  007B98  52                 	db	82	;'R'
  3850  007B99  20                 	db	32
  3851  007B9A  2D                 	db	45
  3852  007B9B  20                 	db	32
  3853  007B9C  4E                 	db	78	;'N'
  3854  007B9D  65                 	db	101	;'e'
  3855  007B9E  65                 	db	101	;'e'
  3856  007B9F  64                 	db	100	;'d'
  3857  007BA0  20                 	db	32
  3858  007BA1  61                 	db	97	;'a'
  3859  007BA2  20                 	db	32
  3860  007BA3  76                 	db	118	;'v'
  3861  007BA4  61                 	db	97	;'a'
  3862  007BA5  6C                 	db	108	;'l'
  3863  007BA6  75                 	db	117	;'u'
  3864  007BA7  65                 	db	101	;'e'
  3865  007BA8  0D                 	db	13
  3866  007BA9  0A                 	db	10
  3867  007BAA  00                 	db	0
  3868  007BAB                     STR_243:
  3869  007BAB  52                 	db	82	;'R'
  3870  007BAC  65                 	db	101	;'e'
  3871  007BAD  63                 	db	99	;'c'
  3872  007BAE  65                 	db	101	;'e'
  3873  007BAF  69                 	db	105	;'i'
  3874  007BB0  76                 	db	118	;'v'
  3875  007BB1  65                 	db	101	;'e'
  3876  007BB2  20                 	db	32
  3877  007BB3  45                 	db	69	;'E'
  3878  007BB4  72                 	db	114	;'r'
  3879  007BB5  72                 	db	114	;'r'
  3880  007BB6  6F                 	db	111	;'o'
  3881  007BB7  72                 	db	114	;'r'
  3882  007BB8  20                 	db	32
  3883  007BB9  43                 	db	67	;'C'
  3884  007BBA  6F                 	db	111	;'o'
  3885  007BBB  75                 	db	117	;'u'
  3886  007BBC  6E                 	db	110	;'n'
  3887  007BBD  74                 	db	116	;'t'
  3888  007BBE  65                 	db	101	;'e'
  3889  007BBF  72                 	db	114	;'r'
  3890  007BC0  3A                 	db	58	;':'
  3891  007BC1  20                 	db	32
  3892  007BC2  00                 	db	0
  3893  007BC3                     STR_227:
  3894  007BC3  55                 	db	85	;'U'
  3895  007BC4  41                 	db	65	;'A'
  3896  007BC5  52                 	db	82	;'R'
  3897  007BC6  54                 	db	84	;'T'
  3898  007BC7  20                 	db	32
  3899  007BC8  52                 	db	82	;'R'
  3900  007BC9  65                 	db	101	;'e'
  3901  007BCA  63                 	db	99	;'c'
  3902  007BCB  65                 	db	101	;'e'
  3903  007BCC  69                 	db	105	;'i'
  3904  007BCD  76                 	db	118	;'v'
  3905  007BCE  65                 	db	101	;'e'
  3906  007BCF  20                 	db	32
  3907  007BD0  6F                 	db	111	;'o'
  3908  007BD1  76                 	db	118	;'v'
  3909  007BD2  65                 	db	101	;'e'
  3910  007BD3  72                 	db	114	;'r'
  3911  007BD4  72                 	db	114	;'r'
  3912  007BD5  75                 	db	117	;'u'
  3913  007BD6  6E                 	db	110	;'n'
  3914  007BD7  73                 	db	115	;'s'
  3915  007BD8  3A                 	db	58	;':'
  3916  007BD9  20                 	db	32
  3917  007BDA  00                 	db	0
  3918  007BDB                     STR_223:
  3919  007BDB  43                 	db	67	;'C'
  3920  007BDC  41                 	db	65	;'A'
  3921  007BDD  4E                 	db	78	;'N'
  3922  007BDE  20                 	db	32
  3923  007BDF  54                 	db	84	;'T'
  3924  007BE0  72                 	db	114	;'r'
  3925  007BE1  61                 	db	97	;'a'
  3926  007BE2  6E                 	db	110	;'n'
  3927  007BE3  73                 	db	115	;'s'
  3928  007BE4  6D                 	db	109	;'m'
  3929  007BE5  69                 	db	105	;'i'
  3930  007BE6  74                 	db	116	;'t'
  3931  007BE7  20                 	db	32
  3932  007BE8  6F                 	db	111	;'o'
  3933  007BE9  76                 	db	118	;'v'
  3934  007BEA  65                 	db	101	;'e'
  3935  007BEB  72                 	db	114	;'r'
  3936  007BEC  72                 	db	114	;'r'
  3937  007BED  75                 	db	117	;'u'
  3938  007BEE  6E                 	db	110	;'n'
  3939  007BEF  73                 	db	115	;'s'
  3940  007BF0  3A                 	db	58	;':'
  3941  007BF1  20                 	db	32
  3942  007BF2  00                 	db	0
  3943  007BF3                     STR_261:
  3944  007BF3  52                 	db	82	;'R'
  3945  007BF4  58                 	db	88	;'X'
  3946  007BF5  20                 	db	32
  3947  007BF6  2D                 	db	45
  3948  007BF7  20                 	db	32
  3949  007BF8  52                 	db	82	;'R'
  3950  007BF9  65                 	db	101	;'e'
  3951  007BFA  61                 	db	97	;'a'
  3952  007BFB  64                 	db	100	;'d'
  3953  007BFC  20                 	db	32
  3954  007BFD  43                 	db	67	;'C'
  3955  007BFE  41                 	db	65	;'A'
  3956  007BFF  4E                 	db	78	;'N'
  3957  007C00  20                 	db	32
  3958  007C01  66                 	db	102	;'f'
  3959  007C02  72                 	db	114	;'r'
  3960  007C03  61                 	db	97	;'a'
  3961  007C04  6D                 	db	109	;'m'
  3962  007C05  65                 	db	101	;'e'
  3963  007C06  2E                 	db	46
  3964  007C07  0D                 	db	13
  3965  007C08  0A                 	db	10
  3966  007C09  00                 	db	0
  3967  007C0A                     STR_157:
  3968  007C0A  2B                 	db	43
  3969  007C0B  4F                 	db	79	;'O'
  3970  007C0C  4B                 	db	75	;'K'
  3971  007C0D  20                 	db	32
  3972  007C0E  2D                 	db	45
  3973  007C0F  20                 	db	32
  3974  007C10  4C                 	db	76	;'L'
  3975  007C11  6F                 	db	111	;'o'
  3976  007C12  63                 	db	99	;'c'
  3977  007C13  61                 	db	97	;'a'
  3978  007C14  6C                 	db	108	;'l'
  3979  007C15  20                 	db	32
  3980  007C16  65                 	db	101	;'e'
  3981  007C17  63                 	db	99	;'c'
  3982  007C18  68                 	db	104	;'h'
  3983  007C19  6F                 	db	111	;'o'
  3984  007C1A  20                 	db	32
  3985  007C1B  6F                 	db	111	;'o'
  3986  007C1C  66                 	db	102	;'f'
  3987  007C1D  66                 	db	102	;'f'
  3988  007C1E  0D                 	db	13
  3989  007C1F  0A                 	db	10
  3990  007C20  00                 	db	0
  3991  007C21                     STR_219:
  3992  007C21  43                 	db	67	;'C'
  3993  007C22  41                 	db	65	;'A'
  3994  007C23  4E                 	db	78	;'N'
  3995  007C24  20                 	db	32
  3996  007C25  52                 	db	82	;'R'
  3997  007C26  65                 	db	101	;'e'
  3998  007C27  63                 	db	99	;'c'
  3999  007C28  65                 	db	101	;'e'
  4000  007C29  69                 	db	105	;'i'
  4001  007C2A  76                 	db	118	;'v'
  4002  007C2B  65                 	db	101	;'e'
  4003  007C2C  20                 	db	32
  4004  007C2D  6F                 	db	111	;'o'
  4005  007C2E  76                 	db	118	;'v'
  4006  007C2F  65                 	db	101	;'e'
  4007  007C30  72                 	db	114	;'r'
  4008  007C31  72                 	db	114	;'r'
  4009  007C32  75                 	db	117	;'u'
  4010  007C33  6E                 	db	110	;'n'
  4011  007C34  73                 	db	115	;'s'
  4012  007C35  3A                 	db	58	;':'
  4013  007C36  20                 	db	32
  4014  007C37  00                 	db	0
  4015  007C38                     STR_307:
  4016  007C38  55                 	db	85	;'U'
  4017  007C39  6E                 	db	110	;'n'
  4018  007C3A  6B                 	db	107	;'k'
  4019  007C3B  6E                 	db	110	;'n'
  4020  007C3C  6F                 	db	111	;'o'
  4021  007C3D  77                 	db	119	;'w'
  4022  007C3E  6E                 	db	110	;'n'
  4023  007C3F  20                 	db	32
  4024  007C40  28                 	db	40
  4025  007C41  56                 	db	86	;'V'
  4026  007C42  65                 	db	101	;'e'
  4027  007C43  72                 	db	114	;'r'
  4028  007C44  62                 	db	98	;'b'
  4029  007C45  6F                 	db	111	;'o'
  4030  007C46  73                 	db	115	;'s'
  4031  007C47  65                 	db	101	;'e'
  4032  007C48  20                 	db	32
  4033  007C49  75                 	db	117	;'u'
  4034  007C4A  73                 	db	115	;'s'
  4035  007C4B  65                 	db	101	;'e'
  4036  007C4C  64                 	db	100	;'d'
  4037  007C4D  29                 	db	41
  4038  007C4E  00                 	db	0
  4039  007C4F                     STR_24:
  4040  007C4F  2B                 	db	43
  4041  007C50  4F                 	db	79	;'O'
  4042  007C51  4B                 	db	75	;'K'
  4043  007C52  20                 	db	32
  4044  007C53  2D                 	db	45
  4045  007C54  20                 	db	32
  4046  007C55  4C                 	db	76	;'L'
  4047  007C56  6F                 	db	111	;'o'
  4048  007C57  6F                 	db	111	;'o'
  4049  007C58  70                 	db	112	;'p'
  4050  007C59  62                 	db	98	;'b'
  4051  007C5A  61                 	db	97	;'a'
  4052  007C5B  63                 	db	99	;'c'
  4053  007C5C  6B                 	db	107	;'k'
  4054  007C5D  20                 	db	32
  4055  007C5E  6D                 	db	109	;'m'
  4056  007C5F  6F                 	db	111	;'o'
  4057  007C60  64                 	db	100	;'d'
  4058  007C61  65                 	db	101	;'e'
  4059  007C62  0D                 	db	13
  4060  007C63  0A                 	db	10
  4061  007C64  00                 	db	0
  4062  007C65                     STR_163:
  4063  007C65  2B                 	db	43
  4064  007C66  4F                 	db	79	;'O'
  4065  007C67  4B                 	db	75	;'K'
  4066  007C68  20                 	db	32
  4067  007C69  2D                 	db	45
  4068  007C6A  20                 	db	32
  4069  007C6B  54                 	db	84	;'T'
  4070  007C6C  69                 	db	105	;'i'
  4071  007C6D  6D                 	db	109	;'m'
  4072  007C6E  65                 	db	101	;'e'
  4073  007C6F  73                 	db	115	;'s'
  4074  007C70  74                 	db	116	;'t'
  4075  007C71  61                 	db	97	;'a'
  4076  007C72  6D                 	db	109	;'m'
  4077  007C73  70                 	db	112	;'p'
  4078  007C74  20                 	db	32
  4079  007C75  6F                 	db	111	;'o'
  4080  007C76  66                 	db	102	;'f'
  4081  007C77  66                 	db	102	;'f'
  4082  007C78  0D                 	db	13
  4083  007C79  0A                 	db	10
  4084  007C7A  00                 	db	0
  4085  007C7B                     STR_155:
  4086  007C7B  2B                 	db	43
  4087  007C7C  4F                 	db	79	;'O'
  4088  007C7D  4B                 	db	75	;'K'
  4089  007C7E  20                 	db	32
  4090  007C7F  2D                 	db	45
  4091  007C80  20                 	db	32
  4092  007C81  4C                 	db	76	;'L'
  4093  007C82  6F                 	db	111	;'o'
  4094  007C83  63                 	db	99	;'c'
  4095  007C84  61                 	db	97	;'a'
  4096  007C85  6C                 	db	108	;'l'
  4097  007C86  20                 	db	32
  4098  007C87  65                 	db	101	;'e'
  4099  007C88  63                 	db	99	;'c'
  4100  007C89  68                 	db	104	;'h'
  4101  007C8A  6F                 	db	111	;'o'
  4102  007C8B  20                 	db	32
  4103  007C8C  6F                 	db	111	;'o'
  4104  007C8D  6E                 	db	110	;'n'
  4105  007C8E  0D                 	db	13
  4106  007C8F  0A                 	db	10
  4107  007C90  00                 	db	0
  4108  007C91                     STR_211:
  4109  007C91  52                 	db	82	;'R'
  4110  007C92  65                 	db	101	;'e'
  4111  007C93  63                 	db	99	;'c'
  4112  007C94  65                 	db	101	;'e'
  4113  007C95  69                 	db	105	;'i'
  4114  007C96  76                 	db	118	;'v'
  4115  007C97  65                 	db	101	;'e'
  4116  007C98  64                 	db	100	;'d'
  4117  007C99  20                 	db	32
  4118  007C9A  43                 	db	67	;'C'
  4119  007C9B  41                 	db	65	;'A'
  4120  007C9C  4E                 	db	78	;'N'
  4121  007C9D  20                 	db	32
  4122  007C9E  66                 	db	102	;'f'
  4123  007C9F  72                 	db	114	;'r'
  4124  007CA0  61                 	db	97	;'a'
  4125  007CA1  6D                 	db	109	;'m'
  4126  007CA2  65                 	db	101	;'e'
  4127  007CA3  73                 	db	115	;'s'
  4128  007CA4  3A                 	db	58	;':'
  4129  007CA5  20                 	db	32
  4130  007CA6  00                 	db	0
  4131  007CA7                     STR_161:
  4132  007CA7  2B                 	db	43
  4133  007CA8  4F                 	db	79	;'O'
  4134  007CA9  4B                 	db	75	;'K'
  4135  007CAA  20                 	db	32
  4136  007CAB  2D                 	db	45
  4137  007CAC  20                 	db	32
  4138  007CAD  54                 	db	84	;'T'
  4139  007CAE  69                 	db	105	;'i'
  4140  007CAF  6D                 	db	109	;'m'
  4141  007CB0  65                 	db	101	;'e'
  4142  007CB1  73                 	db	115	;'s'
  4143  007CB2  74                 	db	116	;'t'
  4144  007CB3  61                 	db	97	;'a'
  4145  007CB4  6D                 	db	109	;'m'
  4146  007CB5  70                 	db	112	;'p'
  4147  007CB6  20                 	db	32
  4148  007CB7  6F                 	db	111	;'o'
  4149  007CB8  6E                 	db	110	;'n'
  4150  007CB9  0D                 	db	13
  4151  007CBA  0A                 	db	10
  4152  007CBB  00                 	db	0
  4153  007CBC                     STR_215:
  4154  007CBC  52                 	db	82	;'R'
  4155  007CBD  65                 	db	101	;'e'
  4156  007CBE  63                 	db	99	;'c'
  4157  007CBF  65                 	db	101	;'e'
  4158  007CC0  69                 	db	105	;'i'
  4159  007CC1  76                 	db	118	;'v'
  4160  007CC2  65                 	db	101	;'e'
  4161  007CC3  64                 	db	100	;'d'
  4162  007CC4  20                 	db	32
  4163  007CC5  43                 	db	67	;'C'
  4164  007CC6  41                 	db	65	;'A'
  4165  007CC7  4E                 	db	78	;'N'
  4166  007CC8  20                 	db	32
  4167  007CC9  62                 	db	98	;'b'
  4168  007CCA  79                 	db	121	;'y'
  4169  007CCB  74                 	db	116	;'t'
  4170  007CCC  65                 	db	101	;'e'
  4171  007CCD  73                 	db	115	;'s'
  4172  007CCE  3A                 	db	58	;':'
  4173  007CCF  20                 	db	32
  4174  007CD0  00                 	db	0
  4175  007CD1                     STR_271:
  4176  007CD1  4D                 	db	77	;'M'
  4177  007CD2  41                 	db	65	;'A'
  4178  007CD3  53                 	db	83	;'S'
  4179  007CD4  4B                 	db	75	;'K'
  4180  007CD5  20                 	db	32
  4181  007CD6  2D                 	db	45
  4182  007CD7  20                 	db	32
  4183  007CD8  53                 	db	83	;'S'
  4184  007CD9  65                 	db	101	;'e'
  4185  007CDA  74                 	db	116	;'t'
  4186  007CDB  20                 	db	32
  4187  007CDC  6D                 	db	109	;'m'
  4188  007CDD  61                 	db	97	;'a'
  4189  007CDE  73                 	db	115	;'s'
  4190  007CDF  6B                 	db	107	;'k'
  4191  007CE0  20                 	db	32
  4192  007CE1  2E                 	db	46
  4193  007CE2  0D                 	db	13
  4194  007CE3  0A                 	db	10
  4195  007CE4  00                 	db	0
  4196  007CE5                     STR_173:
  4197  007CE5  4A                 	db	74	;'J'
  4198  007CE6  46                 	db	70	;'F'
  4199  007CE7  72                 	db	114	;'r'
  4200  007CE8  61                 	db	97	;'a'
  4201  007CE9  6E                 	db	110	;'n'
  4202  007CEA  6B                 	db	107	;'k'
  4203  007CEB  66                 	db	102	;'f'
  4204  007CEC  75                 	db	117	;'u'
  4205  007CED  72                 	db	114	;'r'
  4206  007CEE  74                 	db	116	;'t'
  4207  007CEF  20                 	db	32
  4208  007CF0  52                 	db	82	;'R'
  4209  007CF1  53                 	db	83	;'S'
  4210  007CF2  2D                 	db	45
  4211  007CF3  32                 	db	50	;'2'
  4212  007CF4  33                 	db	51	;'3'
  4213  007CF5  32                 	db	50	;'2'
  4214  007CF6  0D                 	db	13
  4215  007CF7  0A                 	db	10
  4216  007CF8  00                 	db	0
  4217  007CF9                     STR_26:
  4218  007CF9  2B                 	db	43
  4219  007CFA  4F                 	db	79	;'O'
  4220  007CFB  4B                 	db	75	;'K'
  4221  007CFC  20                 	db	32
  4222  007CFD  2D                 	db	45
  4223  007CFE  20                 	db	32
  4224  007CFF  43                 	db	67	;'C'
  4225  007D00  6C                 	db	108	;'l'
  4226  007D01  6F                 	db	111	;'o'
  4227  007D02  73                 	db	115	;'s'
  4228  007D03  65                 	db	101	;'e'
  4229  007D04  64                 	db	100	;'d'
  4230  007D05  20                 	db	32
  4231  007D06  6D                 	db	109	;'m'
  4232  007D07  6F                 	db	111	;'o'
  4233  007D08  64                 	db	100	;'d'
  4234  007D09  65                 	db	101	;'e'
  4235  007D0A  0D                 	db	13
  4236  007D0B  0A                 	db	10
  4237  007D0C  00                 	db	0
  4238  007D0D                     STR_21:
  4239  007D0D  2B                 	db	43
  4240  007D0E  4F                 	db	79	;'O'
  4241  007D0F  4B                 	db	75	;'K'
  4242  007D10  20                 	db	32
  4243  007D11  2D                 	db	45
  4244  007D12  20                 	db	32
  4245  007D13  4E                 	db	78	;'N'
  4246  007D14  6F                 	db	111	;'o'
  4247  007D15  72                 	db	114	;'r'
  4248  007D16  6D                 	db	109	;'m'
  4249  007D17  61                 	db	97	;'a'
  4250  007D18  6C                 	db	108	;'l'
  4251  007D19  20                 	db	32
  4252  007D1A  6D                 	db	109	;'m'
  4253  007D1B  6F                 	db	111	;'o'
  4254  007D1C  64                 	db	100	;'d'
  4255  007D1D  65                 	db	101	;'e'
  4256  007D1E  0D                 	db	13
  4257  007D1F  0A                 	db	10
  4258  007D20  00                 	db	0
  4259  007D21                     STR_22:
  4260  007D21  2B                 	db	43
  4261  007D22  4F                 	db	79	;'O'
  4262  007D23  4B                 	db	75	;'K'
  4263  007D24  20                 	db	32
  4264  007D25  2D                 	db	45
  4265  007D26  20                 	db	32
  4266  007D27  53                 	db	83	;'S'
  4267  007D28  69                 	db	105	;'i'
  4268  007D29  6C                 	db	108	;'l'
  4269  007D2A  65                 	db	101	;'e'
  4270  007D2B  6E                 	db	110	;'n'
  4271  007D2C  74                 	db	116	;'t'
  4272  007D2D  20                 	db	32
  4273  007D2E  6D                 	db	109	;'m'
  4274  007D2F  6F                 	db	111	;'o'
  4275  007D30  64                 	db	100	;'d'
  4276  007D31  65                 	db	101	;'e'
  4277  007D32  0D                 	db	13
  4278  007D33  0A                 	db	10
  4279  007D34  00                 	db	0
  4280  007D35                     STR_99:
  4281  007D35  49                 	db	73	;'I'
  4282  007D36  6E                 	db	110	;'n'
  4283  007D37  66                 	db	102	;'f'
  4284  007D38  6F                 	db	111	;'o'
  4285  007D39  20                 	db	32
  4286  007D3A  66                 	db	102	;'f'
  4287  007D3B  6F                 	db	111	;'o'
  4288  007D3C  72                 	db	114	;'r'
  4289  007D3D  20                 	db	32
  4290  007D3E  6E                 	db	110	;'n'
  4291  007D3F  6F                 	db	111	;'o'
  4292  007D40  64                 	db	100	;'d'
  4293  007D41  65                 	db	101	;'e'
  4294  007D42  20                 	db	32
  4295  007D43  69                 	db	105	;'i'
  4296  007D44  64                 	db	100	;'d'
  4297  007D45  20                 	db	32
  4298  007D46  3D                 	db	61	;'='
  4299  007D47  20                 	db	32
  4300  007D48  00                 	db	0
  4301  007D49                     STR_296:
  4302  007D49  46                 	db	70	;'F'
  4303  007D4A  69                 	db	105	;'i'
  4304  007D4B  72                 	db	114	;'r'
  4305  007D4C  6D                 	db	109	;'m'
  4306  007D4D  77                 	db	119	;'w'
  4307  007D4E  61                 	db	97	;'a'
  4308  007D4F  72                 	db	114	;'r'
  4309  007D50  65                 	db	101	;'e'
  4310  007D51  20                 	db	32
  4311  007D52  76                 	db	118	;'v'
  4312  007D53  65                 	db	101	;'e'
  4313  007D54  72                 	db	114	;'r'
  4314  007D55  73                 	db	115	;'s'
  4315  007D56  69                 	db	105	;'i'
  4316  007D57  6F                 	db	111	;'o'
  4317  007D58  6E                 	db	110	;'n'
  4318  007D59  20                 	db	32
  4319  007D5A  3D                 	db	61	;'='
  4320  007D5B  20                 	db	32
  4321  007D5C  00                 	db	0
  4322  007D5D                     STR_23:
  4323  007D5D  2B                 	db	43
  4324  007D5E  4F                 	db	79	;'O'
  4325  007D5F  4B                 	db	75	;'K'
  4326  007D60  20                 	db	32
  4327  007D61  2D                 	db	45
  4328  007D62  20                 	db	32
  4329  007D63  53                 	db	83	;'S'
  4330  007D64  6C                 	db	108	;'l'
  4331  007D65  65                 	db	101	;'e'
  4332  007D66  65                 	db	101	;'e'
  4333  007D67  70                 	db	112	;'p'
  4334  007D68  20                 	db	32
  4335  007D69  6D                 	db	109	;'m'
  4336  007D6A  6F                 	db	111	;'o'
  4337  007D6B  64                 	db	100	;'d'
  4338  007D6C  65                 	db	101	;'e'
  4339  007D6D  0D                 	db	13
  4340  007D6E  0A                 	db	10
  4341  007D6F  00                 	db	0
  4342  007D70                     STR_27:
  4343  007D70  2B                 	db	43
  4344  007D71  4F                 	db	79	;'O'
  4345  007D72  4B                 	db	75	;'K'
  4346  007D73  20                 	db	32
  4347  007D74  2D                 	db	45
  4348  007D75  20                 	db	32
  4349  007D76  42                 	db	66	;'B'
  4350  007D77  69                 	db	105	;'i'
  4351  007D78  74                 	db	116	;'t'
  4352  007D79  73                 	db	115	;'s'
  4353  007D7A  20                 	db	32
  4354  007D7B  6D                 	db	109	;'m'
  4355  007D7C  6F                 	db	111	;'o'
  4356  007D7D  64                 	db	100	;'d'
  4357  007D7E  65                 	db	101	;'e'
  4358  007D7F  0D                 	db	13
  4359  007D80  0A                 	db	10
  4360  007D81  00                 	db	0
  4361  007D82                     STR_40:
  4362  007D82  2B                 	db	43
  4363  007D83  4F                 	db	79	;'O'
  4364  007D84  4B                 	db	75	;'K'
  4365  007D85  20                 	db	32
  4366  007D86  2D                 	db	45
  4367  007D87  20                 	db	32
  4368  007D88  6E                 	db	110	;'n'
  4369  007D89  6F                 	db	111	;'o'
  4370  007D8A  20                 	db	32
  4371  007D8B  65                 	db	101	;'e'
  4372  007D8C  76                 	db	118	;'v'
  4373  007D8D  65                 	db	101	;'e'
  4374  007D8E  6E                 	db	110	;'n'
  4375  007D8F  74                 	db	116	;'t'
  4376  007D90  73                 	db	115	;'s'
  4377  007D91  0D                 	db	13
  4378  007D92  0A                 	db	10
  4379  007D93  00                 	db	0
  4380  007D94                     STR_203:
  4381  007D94  53                 	db	83	;'S'
  4382  007D95  65                 	db	101	;'e'
  4383  007D96  6E                 	db	110	;'n'
  4384  007D97  74                 	db	116	;'t'
  4385  007D98  20                 	db	32
  4386  007D99  43                 	db	67	;'C'
  4387  007D9A  41                 	db	65	;'A'
  4388  007D9B  4E                 	db	78	;'N'
  4389  007D9C  20                 	db	32
  4390  007D9D  66                 	db	102	;'f'
  4391  007D9E  72                 	db	114	;'r'
  4392  007D9F  61                 	db	97	;'a'
  4393  007DA0  6D                 	db	109	;'m'
  4394  007DA1  65                 	db	101	;'e'
  4395  007DA2  73                 	db	115	;'s'
  4396  007DA3  3A                 	db	58	;':'
  4397  007DA4  20                 	db	32
  4398  007DA5  00                 	db	0
  4399  007DA6                     STR_309:
  4400  007DA6  30                 	db	48	;'0'
  4401  007DA7  31                 	db	49	;'1'
  4402  007DA8  32                 	db	50	;'2'
  4403  007DA9  33                 	db	51	;'3'
  4404  007DAA  34                 	db	52	;'4'
  4405  007DAB  35                 	db	53	;'5'
  4406  007DAC  36                 	db	54	;'6'
  4407  007DAD  37                 	db	55	;'7'
  4408  007DAE  38                 	db	56	;'8'
  4409  007DAF  39                 	db	57	;'9'
  4410  007DB0  41                 	db	65	;'A'
  4411  007DB1  42                 	db	66	;'B'
  4412  007DB2  43                 	db	67	;'C'
  4413  007DB3  44                 	db	68	;'D'
  4414  007DB4  45                 	db	69	;'E'
  4415  007DB5  46                 	db	70	;'F'
  4416  007DB6  00                 	db	0
  4417  007DB7                     STR_310:
  4418  007DB7  30                 	db	48	;'0'
  4419  007DB8  31                 	db	49	;'1'
  4420  007DB9  32                 	db	50	;'2'
  4421  007DBA  33                 	db	51	;'3'
  4422  007DBB  34                 	db	52	;'4'
  4423  007DBC  35                 	db	53	;'5'
  4424  007DBD  36                 	db	54	;'6'
  4425  007DBE  37                 	db	55	;'7'
  4426  007DBF  38                 	db	56	;'8'
  4427  007DC0  39                 	db	57	;'9'
  4428  007DC1  61                 	db	97	;'a'
  4429  007DC2  62                 	db	98	;'b'
  4430  007DC3  63                 	db	99	;'c'
  4431  007DC4  64                 	db	100	;'d'
  4432  007DC5  65                 	db	101	;'e'
  4433  007DC6  66                 	db	102	;'f'
  4434  007DC7  00                 	db	0
  4435  007DC8                     STR_288:
  4436  007DC8  20                 	db	32
  4437  007DC9  6E                 	db	110	;'n'
  4438  007DCA  6F                 	db	111	;'o'
  4439  007DCB  64                 	db	100	;'d'
  4440  007DCC  65                 	db	101	;'e'
  4441  007DCD  28                 	db	40
  4442  007DCE  73                 	db	115	;'s'
  4443  007DCF  29                 	db	41
  4444  007DD0  20                 	db	32
  4445  007DD1  66                 	db	102	;'f'
  4446  007DD2  6F                 	db	111	;'o'
  4447  007DD3  75                 	db	117	;'u'
  4448  007DD4  6E                 	db	110	;'n'
  4449  007DD5  64                 	db	100	;'d'
  4450  007DD6  0D                 	db	13
  4451  007DD7  0A                 	db	10
  4452  007DD8  00                 	db	0
  4453  007DD9                     STR_207:
  4454  007DD9  53                 	db	83	;'S'
  4455  007DDA  65                 	db	101	;'e'
  4456  007DDB  6E                 	db	110	;'n'
  4457  007DDC  74                 	db	116	;'t'
  4458  007DDD  20                 	db	32
  4459  007DDE  43                 	db	67	;'C'
  4460  007DDF  41                 	db	65	;'A'
  4461  007DE0  4E                 	db	78	;'N'
  4462  007DE1  20                 	db	32
  4463  007DE2  62                 	db	98	;'b'
  4464  007DE3  79                 	db	121	;'y'
  4465  007DE4  74                 	db	116	;'t'
  4466  007DE5  65                 	db	101	;'e'
  4467  007DE6  73                 	db	115	;'s'
  4468  007DE7  3A                 	db	58	;':'
  4469  007DE8  20                 	db	32
  4470  007DE9  00                 	db	0
  4471  007DEA                     STR_70:
  4472  007DEA  2D                 	db	45
  4473  007DEB  45                 	db	69	;'E'
  4474  007DEC  52                 	db	82	;'R'
  4475  007DED  52                 	db	82	;'R'
  4476  007DEE  4F                 	db	79	;'O'
  4477  007DEF  52                 	db	82	;'R'
  4478  007DF0  20                 	db	32
  4479  007DF1  2D                 	db	45
  4480  007DF2  20                 	db	32
  4481  007DF3  6E                 	db	110	;'n'
  4482  007DF4  6F                 	db	111	;'o'
  4483  007DF5  64                 	db	100	;'d'
  4484  007DF6  65                 	db	101	;'e'
  4485  007DF7  69                 	db	105	;'i'
  4486  007DF8  64                 	db	100	;'d'
  4487  007DF9  3D                 	db	61	;'='
  4488  007DFA  00                 	db	0
  4489  007DFB                     STR_59:
  4490  007DFB  56                 	db	86	;'V'
  4491  007DFC  61                 	db	97	;'a'
  4492  007DFD  6C                 	db	108	;'l'
  4493  007DFE  75                 	db	117	;'u'
  4494  007DFF  65                 	db	101	;'e'
  4495  007E00  20                 	db	32
  4496  007E01  66                 	db	102	;'f'
  4497  007E02  6F                 	db	111	;'o'
  4498  007E03  72                 	db	114	;'r'
  4499  007E04  20                 	db	32
  4500  007E05  72                 	db	114	;'r'
  4501  007E06  65                 	db	101	;'e'
  4502  007E07  67                 	db	103	;'g'
  4503  007E08  20                 	db	32
  4504  007E09  00                 	db	0
  4505  007E0A                     STR_294:
  4506  007E0A  4D                 	db	77	;'M'
  4507  007E0B  44                 	db	68	;'D'
  4508  007E0C  46                 	db	70	;'F'
  4509  007E0D  20                 	db	32
  4510  007E0E  3D                 	db	61	;'='
  4511  007E0F  20                 	db	32
  4512  007E10  68                 	db	104	;'h'
  4513  007E11  74                 	db	116	;'t'
  4514  007E12  74                 	db	116	;'t'
  4515  007E13  70                 	db	112	;'p'
  4516  007E14  3A                 	db	58	;':'
  4517  007E15  2F                 	db	47
  4518  007E16  2F                 	db	47
  4519  007E17  00                 	db	0
  4520  007E18                     STR_56:
  4521  007E18  2B                 	db	43
  4522  007E19  4F                 	db	79	;'O'
  4523  007E1A  4B                 	db	75	;'K'
  4524  007E1B  20                 	db	32
  4525  007E1C  2D                 	db	45
  4526  007E1D  20                 	db	32
  4527  007E1E  6E                 	db	110	;'n'
  4528  007E1F  6F                 	db	111	;'o'
  4529  007E20  64                 	db	100	;'d'
  4530  007E21  65                 	db	101	;'e'
  4531  007E22  69                 	db	105	;'i'
  4532  007E23  64                 	db	100	;'d'
  4533  007E24  3D                 	db	61	;'='
  4534  007E25  00                 	db	0
  4535  007E26                     STR_182:
  4536  007E26  2C                 	db	44
  4537  007E27  74                 	db	116	;'t'
  4538  007E28  69                 	db	105	;'i'
  4539  007E29  6D                 	db	109	;'m'
  4540  007E2A  65                 	db	101	;'e'
  4541  007E2B  73                 	db	115	;'s'
  4542  007E2C  74                 	db	116	;'t'
  4543  007E2D  61                 	db	97	;'a'
  4544  007E2E  6D                 	db	109	;'m'
  4545  007E2F  70                 	db	112	;'p'
  4546  007E30  3D                 	db	61	;'='
  4547  007E31  00                 	db	0
  4548  007E32                     STR_304:
  4549  007E32  56                 	db	86	;'V'
  4550  007E33  53                 	db	83	;'S'
  4551  007E34  43                 	db	67	;'C'
  4552  007E35  50                 	db	80	;'P'
  4553  007E36  20                 	db	32
  4554  007E37  44                 	db	68	;'D'
  4555  007E38  72                 	db	114	;'r'
  4556  007E39  69                 	db	105	;'i'
  4557  007E3A  76                 	db	118	;'v'
  4558  007E3B  65                 	db	101	;'e'
  4559  007E3C  72                 	db	114	;'r'
  4560  007E3D  00                 	db	0
  4561  007E3E                     STR_159:
  4562  007E3E  54                 	db	84	;'T'
  4563  007E3F  49                 	db	73	;'I'
  4564  007E40  4D                 	db	77	;'M'
  4565  007E41  45                 	db	69	;'E'
  4566  007E42  53                 	db	83	;'S'
  4567  007E43  54                 	db	84	;'T'
  4568  007E44  41                 	db	65	;'A'
  4569  007E45  4D                 	db	77	;'M'
  4570  007E46  50                 	db	80	;'P'
  4571  007E47  20                 	db	32
  4572  007E48  00                 	db	0
  4573  007E49                     STR_138:
  4574  007E49  52                 	db	82	;'R'
  4575  007E4A  57                 	db	87	;'W'
  4576  007E4B  54                 	db	84	;'T'
  4577  007E4C  49                 	db	73	;'I'
  4578  007E4D  4D                 	db	77	;'M'
  4579  007E4E  45                 	db	69	;'E'
  4580  007E4F  4F                 	db	79	;'O'
  4581  007E50  55                 	db	85	;'U'
  4582  007E51  54                 	db	84	;'T'
  4583  007E52  20                 	db	32
  4584  007E53  00                 	db	0
  4585  007E54                     STR_118:
  4586  007E54  50                 	db	80	;'P'
  4587  007E55  45                 	db	69	;'E'
  4588  007E56  52                 	db	82	;'R'
  4589  007E57  53                 	db	83	;'S'
  4590  007E58  49                 	db	73	;'I'
  4591  007E59  53                 	db	83	;'S'
  4592  007E5A  54                 	db	84	;'T'
  4593  007E5B  45                 	db	69	;'E'
  4594  007E5C  4E                 	db	78	;'N'
  4595  007E5D  54                 	db	84	;'T'
  4596  007E5E  00                 	db	0
  4597  007E5F                     STR_201:
  4598  007E5F  2C                 	db	44
  4599  007E60  44                 	db	68	;'D'
  4600  007E61  61                 	db	97	;'a'
  4601  007E62  74                 	db	116	;'t'
  4602  007E63  61                 	db	97	;'a'
  4603  007E64  3D                 	db	61	;'='
  4604  007E65  6E                 	db	110	;'n'
  4605  007E66  6F                 	db	111	;'o'
  4606  007E67  6E                 	db	110	;'n'
  4607  007E68  65                 	db	101	;'e'
  4608  007E69  00                 	db	0
  4609  007E6A                     STR_57:
  4610  007E6A  30                 	db	48	;'0'
  4611  007E6B  78                 	db	120	;'x'
  4612  007E6C  25                 	db	37
  4613  007E6D  30                 	db	48	;'0'
  4614  007E6E  32                 	db	50	;'2'
  4615  007E6F  58                 	db	88	;'X'
  4616  007E70  20                 	db	32
  4617  007E71  2D                 	db	45
  4618  007E72  20                 	db	32
  4619  007E73  00                 	db	0
  4620  007E74                     STR_300:
  4621  007E74  56                 	db	86	;'V'
  4622  007E75  65                 	db	101	;'e'
  4623  007E76  72                 	db	114	;'r'
  4624  007E77  73                 	db	115	;'s'
  4625  007E78  69                 	db	105	;'i'
  4626  007E79  6F                 	db	111	;'o'
  4627  007E7A  6E                 	db	110	;'n'
  4628  007E7B  3A                 	db	58	;':'
  4629  007E7C  20                 	db	32
  4630  007E7D  00                 	db	0
  4631  007E7E                     STR_165:
  4632  007E7E  42                 	db	66	;'B'
  4633  007E7F  41                 	db	65	;'A'
  4634  007E80  55                 	db	85	;'U'
  4635  007E81  44                 	db	68	;'D'
  4636  007E82  52                 	db	82	;'R'
  4637  007E83  41                 	db	65	;'A'
  4638  007E84  54                 	db	84	;'T'
  4639  007E85  45                 	db	69	;'E'
  4640  007E86  20                 	db	32
  4641  007E87  00                 	db	0
  4642  007E88                     STR_306:
  4643  007E88  56                 	db	86	;'V'
  4644  007E89  53                 	db	83	;'S'
  4645  007E8A  43                 	db	67	;'C'
  4646  007E8B  50                 	db	80	;'P'
  4647  007E8C  20                 	db	32
  4648  007E8D  4E                 	db	78	;'N'
  4649  007E8E  6F                 	db	111	;'o'
  4650  007E8F  64                 	db	100	;'d'
  4651  007E90  65                 	db	101	;'e'
  4652  007E91  00                 	db	0
  4653  007E92                     STR_305:
  4654  007E92  53                 	db	83	;'S'
  4655  007E93  4C                 	db	76	;'L'
  4656  007E94  20                 	db	32
  4657  007E95  44                 	db	68	;'D'
  4658  007E96  72                 	db	114	;'r'
  4659  007E97  69                 	db	105	;'i'
  4660  007E98  76                 	db	118	;'v'
  4661  007E99  65                 	db	101	;'e'
  4662  007E9A  72                 	db	114	;'r'
  4663  007E9B  00                 	db	0
  4664  007E9C                     STR_140:
  4665  007E9C  53                 	db	83	;'S'
  4666  007E9D  54                 	db	84	;'T'
  4667  007E9E  41                 	db	65	;'A'
  4668  007E9F  52                 	db	82	;'R'
  4669  007EA0  54                 	db	84	;'T'
  4670  007EA1  49                 	db	73	;'I'
  4671  007EA2  46                 	db	70	;'F'
  4672  007EA3  20                 	db	32
  4673  007EA4  00                 	db	0
  4674  007EA5                     STR_191:
  4675  007EA5  2C                 	db	44
  4676  007EA6  6E                 	db	110	;'n'
  4677  007EA7  6F                 	db	111	;'o'
  4678  007EA8  64                 	db	100	;'d'
  4679  007EA9  65                 	db	101	;'e'
  4680  007EAA  69                 	db	105	;'i'
  4681  007EAB  64                 	db	100	;'d'
  4682  007EAC  3D                 	db	61	;'='
  4683  007EAD  00                 	db	0
  4684  007EAE                     STR_14:
  4685  007EAE  4C                 	db	76	;'L'
  4686  007EAF  4F                 	db	79	;'O'
  4687  007EB0  4F                 	db	79	;'O'
  4688  007EB1  50                 	db	80	;'P'
  4689  007EB2  42                 	db	66	;'B'
  4690  007EB3  41                 	db	65	;'A'
  4691  007EB4  43                 	db	67	;'C'
  4692  007EB5  4B                 	db	75	;'K'
  4693  007EB6  00                 	db	0
  4694  007EB7                     STR_168:
  4695  007EB7  44                 	db	68	;'D'
  4696  007EB8  45                 	db	69	;'E'
  4697  007EB9  46                 	db	70	;'F'
  4698  007EBA  41                 	db	65	;'A'
  4699  007EBB  55                 	db	85	;'U'
  4700  007EBC  4C                 	db	76	;'L'
  4701  007EBD  54                 	db	84	;'T'
  4702  007EBE  53                 	db	83	;'S'
  4703  007EBF  00                 	db	0
  4704  007EC0                     STR_174:
  4705  007EC0  56                 	db	86	;'V'
  4706  007EC1  31                 	db	49	;'1'
  4707  007EC2  30                 	db	48	;'0'
  4708  007EC3  31                 	db	49	;'1'
  4709  007EC4  31                 	db	49	;'1'
  4710  007EC5  0D                 	db	13
  4711  007EC6  0A                 	db	10
  4712  007EC7  00                 	db	0
  4713  007EC8                     STR_175:
  4714  007EC8  4E                 	db	78	;'N'
  4715  007EC9  31                 	db	49	;'1'
  4716  007ECA  39                 	db	57	;'9'
  4717  007ECB  37                 	db	55	;'7'
  4718  007ECC  37                 	db	55	;'7'
  4719  007ECD  0D                 	db	13
  4720  007ECE  0A                 	db	10
  4721  007ECF  00                 	db	0
  4722  007ED0                     STR_91:
  4723  007ED0  30                 	db	48	;'0'
  4724  007ED1  78                 	db	120	;'x'
  4725  007ED2  25                 	db	37
  4726  007ED3  30                 	db	48	;'0'
  4727  007ED4  32                 	db	50	;'2'
  4728  007ED5  58                 	db	88	;'X'
  4729  007ED6  0A                 	db	10
  4730  007ED7  00                 	db	0
  4731  007ED8                     STR_289:
  4732  007ED8  47                 	db	71	;'G'
  4733  007ED9  55                 	db	85	;'U'
  4734  007EDA  49                 	db	73	;'I'
  4735  007EDB  44                 	db	68	;'D'
  4736  007EDC  20                 	db	32
  4737  007EDD  3D                 	db	61	;'='
  4738  007EDE  20                 	db	32
  4739  007EDF  00                 	db	0
  4740  007EE0                     STR_185:
  4741  007EE0  2C                 	db	44
  4742  007EE1  63                 	db	99	;'c'
  4743  007EE2  6C                 	db	108	;'l'
  4744  007EE3  61                 	db	97	;'a'
  4745  007EE4  73                 	db	115	;'s'
  4746  007EE5  73                 	db	115	;'s'
  4747  007EE6  3D                 	db	61	;'='
  4748  007EE7  00                 	db	0
  4749  007EE8                     STR_147:
  4750  007EE8  56                 	db	86	;'V'
  4751  007EE9  45                 	db	69	;'E'
  4752  007EEA  52                 	db	82	;'R'
  4753  007EEB  42                 	db	66	;'B'
  4754  007EEC  4F                 	db	79	;'O'
  4755  007EED  53                 	db	83	;'S'
  4756  007EEE  45                 	db	69	;'E'
  4757  007EEF  00                 	db	0
  4758  007EF0                     STR_136:
  4759  007EF0  44                 	db	68	;'D'
  4760  007EF1  45                 	db	69	;'E'
  4761  007EF2  43                 	db	67	;'C'
  4762  007EF3  49                 	db	73	;'I'
  4763  007EF4  4D                 	db	77	;'M'
  4764  007EF5  41                 	db	65	;'A'
  4765  007EF6  4C                 	db	76	;'L'
  4766  007EF7  00                 	db	0
  4767  007EF8                     STR_18:
  4768  007EF8  56                 	db	86	;'V'
  4769  007EF9  45                 	db	69	;'E'
  4770  007EFA  52                 	db	82	;'R'
  4771  007EFB  53                 	db	83	;'S'
  4772  007EFC  49                 	db	73	;'I'
  4773  007EFD  4F                 	db	79	;'O'
  4774  007EFE  4E                 	db	78	;'N'
  4775  007EFF  00                 	db	0
  4776  007F00                     STR_183:
  4777  007F00  30                 	db	48	;'0'
  4778  007F01  78                 	db	120	;'x'
  4779  007F02  25                 	db	37
  4780  007F03  30                 	db	48	;'0'
  4781  007F04  38                 	db	56	;'8'
  4782  007F05  6C                 	db	108	;'l'
  4783  007F06  58                 	db	88	;'X'
  4784  007F07  00                 	db	0
  4785  007F08                     STR_303:
  4786  007F08  56                 	db	86	;'V'
  4787  007F09  65                 	db	101	;'e'
  4788  007F0A  72                 	db	114	;'r'
  4789  007F0B  62                 	db	98	;'b'
  4790  007F0C  6F                 	db	111	;'o'
  4791  007F0D  73                 	db	115	;'s'
  4792  007F0E  65                 	db	101	;'e'
  4793  007F0F  00                 	db	0
  4794  007F10                     STR_302:
  4795  007F10  4D                 	db	77	;'M'
  4796  007F11  6F                 	db	111	;'o'
  4797  007F12  64                 	db	100	;'d'
  4798  007F13  65                 	db	101	;'e'
  4799  007F14  3A                 	db	58	;':'
  4800  007F15  20                 	db	32
  4801  007F16  00                 	db	0
  4802  007F17                     STR_197:
  4803  007F17  2C                 	db	44
  4804  007F18  44                 	db	68	;'D'
  4805  007F19  61                 	db	97	;'a'
  4806  007F1A  74                 	db	116	;'t'
  4807  007F1B  61                 	db	97	;'a'
  4808  007F1C  3D                 	db	61	;'='
  4809  007F1D  00                 	db	0
  4810  007F1E                     STR_188:
  4811  007F1E  2C                 	db	44
  4812  007F1F  74                 	db	116	;'t'
  4813  007F20  79                 	db	121	;'y'
  4814  007F21  70                 	db	112	;'p'
  4815  007F22  65                 	db	101	;'e'
  4816  007F23  3D                 	db	61	;'='
  4817  007F24  00                 	db	0
  4818  007F25                     STR_194:
  4819  007F25  2C                 	db	44
  4820  007F26  73                 	db	115	;'s'
  4821  007F27  69                 	db	105	;'i'
  4822  007F28  7A                 	db	122	;'z'
  4823  007F29  65                 	db	101	;'e'
  4824  007F2A  3D                 	db	61	;'='
  4825  007F2B  00                 	db	0
  4826  007F2C                     STR_179:
  4827  007F2C  3C                 	db	60	;'<'
  4828  007F2D  50                 	db	80	;'P'
  4829  007F2E  72                 	db	114	;'r'
  4830  007F2F  69                 	db	105	;'i'
  4831  007F30  6F                 	db	111	;'o'
  4832  007F31  3D                 	db	61	;'='
  4833  007F32  00                 	db	0
  4834  007F33                     STR_20:
  4835  007F33  49                 	db	73	;'I'
  4836  007F34  46                 	db	70	;'F'
  4837  007F35  4D                 	db	77	;'M'
  4838  007F36  4F                 	db	79	;'O'
  4839  007F37  44                 	db	68	;'D'
  4840  007F38  45                 	db	69	;'E'
  4841  007F39  00                 	db	0
  4842  007F3A                     STR_16:
  4843  007F3A  4C                 	db	76	;'L'
  4844  007F3B  49                 	db	73	;'I'
  4845  007F3C  53                 	db	83	;'S'
  4846  007F3D  54                 	db	84	;'T'
  4847  007F3E  45                 	db	69	;'E'
  4848  007F3F  4E                 	db	78	;'N'
  4849  007F40  00                 	db	0
  4850  007F41                     STR_105:
  4851  007F41  46                 	db	70	;'F'
  4852  007F42  49                 	db	73	;'I'
  4853  007F43  4C                 	db	76	;'L'
  4854  007F44  54                 	db	84	;'T'
  4855  007F45  45                 	db	69	;'E'
  4856  007F46  52                 	db	82	;'R'
  4857  007F47  00                 	db	0
  4858  007F48                     STR_10:
  4859  007F48  53                 	db	83	;'S'
  4860  007F49  49                 	db	73	;'I'
  4861  007F4A  4C                 	db	76	;'L'
  4862  007F4B  45                 	db	69	;'E'
  4863  007F4C  4E                 	db	78	;'N'
  4864  007F4D  54                 	db	84	;'T'
  4865  007F4E  00                 	db	0
  4866  007F4F                     STR_60:
  4867  007F4F  30                 	db	48	;'0'
  4868  007F50  78                 	db	120	;'x'
  4869  007F51  25                 	db	37
  4870  007F52  30                 	db	48	;'0'
  4871  007F53  32                 	db	50	;'2'
  4872  007F54  58                 	db	88	;'X'
  4873  007F55  00                 	db	0
  4874  007F56                     STR_186:
  4875  007F56  30                 	db	48	;'0'
  4876  007F57  78                 	db	120	;'x'
  4877  007F58  25                 	db	37
  4878  007F59  30                 	db	48	;'0'
  4879  007F5A  34                 	db	52	;'4'
  4880  007F5B  58                 	db	88	;'X'
  4881  007F5C  00                 	db	0
  4882  007F5D                     STR_204:
  4883  007F5D  30                 	db	48	;'0'
  4884  007F5E  78                 	db	120	;'x'
  4885  007F5F  25                 	db	37
  4886  007F60  30                 	db	48	;'0'
  4887  007F61  38                 	db	56	;'8'
  4888  007F62  58                 	db	88	;'X'
  4889  007F63  00                 	db	0
  4890  007F64                     STR_176:
  4891  007F64  46                 	db	70	;'F'
  4892  007F65  30                 	db	48	;'0'
  4893  007F66  30                 	db	48	;'0'
  4894  007F67  0D                 	db	13
  4895  007F68  0A                 	db	10
  4896  007F69  00                 	db	0
  4897  007F6A                     STR_9:
  4898  007F6A  2B                 	db	43
  4899  007F6B  4F                 	db	79	;'O'
  4900  007F6C  4B                 	db	75	;'K'
  4901  007F6D  0D                 	db	13
  4902  007F6E  0A                 	db	10
  4903  007F6F  00                 	db	0
  4904  007F70                     STR_58:
  4905  007F70  25                 	db	37
  4906  007F71  64                 	db	100	;'d'
  4907  007F72  20                 	db	32
  4908  007F73  2D                 	db	45
  4909  007F74  20                 	db	32
  4910  007F75  00                 	db	0
  4911  007F76                     STR_146:
  4912  007F76  4D                 	db	77	;'M'
  4913  007F77  4F                 	db	79	;'O'
  4914  007F78  44                 	db	68	;'D'
  4915  007F79  45                 	db	69	;'E'
  4916  007F7A  20                 	db	32
  4917  007F7B  00                 	db	0
  4918  007F7C                     STR_153:
  4919  007F7C  45                 	db	69	;'E'
  4920  007F7D  43                 	db	67	;'C'
  4921  007F7E  48                 	db	72	;'H'
  4922  007F7F  4F                 	db	79	;'O'
  4923  007F80  20                 	db	32
  4924  007F81  00                 	db	0
  4925  007F82                     STR_12:
  4926  007F82  43                 	db	67	;'C'
  4927  007F83  4C                 	db	76	;'L'
  4928  007F84  4F                 	db	79	;'O'
  4929  007F85  53                 	db	83	;'S'
  4930  007F86  45                 	db	69	;'E'
  4931  007F87  00                 	db	0
  4932  007F88                     STR_151:
  4933  007F88  53                 	db	83	;'S'
  4934  007F89  4C                 	db	76	;'L'
  4935  007F8A  43                 	db	67	;'C'
  4936  007F8B  41                 	db	65	;'A'
  4937  007F8C  4E                 	db	78	;'N'
  4938  007F8D  00                 	db	0
  4939  007F8E                     STR_133:
  4940  007F8E  53                 	db	83	;'S'
  4941  007F8F  45                 	db	69	;'E'
  4942  007F90  54                 	db	84	;'T'
  4943  007F91  20                 	db	32
  4944  007F92  00                 	db	0
  4945  007F93                     STR_47:
  4946  007F93  46                 	db	70	;'F'
  4947  007F94  49                 	db	73	;'I'
  4948  007F95  4E                 	db	78	;'N'
  4949  007F96  44                 	db	68	;'D'
  4950  007F97  00                 	db	0
  4951  007F98                     STR_49:
  4952  007F98  52                 	db	82	;'R'
  4953  007F99  52                 	db	82	;'R'
  4954  007F9A  45                 	db	69	;'E'
  4955  007F9B  47                 	db	71	;'G'
  4956  007F9C  00                 	db	0
  4957  007F9D                     STR_81:
  4958  007F9D  57                 	db	87	;'W'
  4959  007F9E  52                 	db	82	;'R'
  4960  007F9F  45                 	db	69	;'E'
  4961  007FA0  47                 	db	71	;'G'
  4962  007FA1  00                 	db	0
  4963  007FA2                     STR_120:
  4964  007FA2  4D                 	db	77	;'M'
  4965  007FA3  41                 	db	65	;'A'
  4966  007FA4  53                 	db	83	;'S'
  4967  007FA5  4B                 	db	75	;'K'
  4968  007FA6  00                 	db	0
  4969  007FA7                     STR_8:
  4970  007FA7  4F                 	db	79	;'O'
  4971  007FA8  50                 	db	80	;'P'
  4972  007FA9  45                 	db	69	;'E'
  4973  007FAA  4E                 	db	78	;'N'
  4974  007FAB  00                 	db	0
  4975  007FAC                     STR_97:
  4976  007FAC  49                 	db	73	;'I'
  4977  007FAD  4E                 	db	78	;'N'
  4978  007FAE  46                 	db	70	;'F'
  4979  007FAF  4F                 	db	79	;'O'
  4980  007FB0  00                 	db	0
  4981  007FB1                     STR_149:
  4982  007FB1  56                 	db	86	;'V'
  4983  007FB2  53                 	db	83	;'S'
  4984  007FB3  43                 	db	67	;'C'
  4985  007FB4  50                 	db	80	;'P'
  4986  007FB5  00                 	db	0
  4987  007FB6                     STR_45:
  4988  007FB6  48                 	db	72	;'H'
  4989  007FB7  45                 	db	69	;'E'
  4990  007FB8  4C                 	db	76	;'L'
  4991  007FB9  50                 	db	80	;'P'
  4992  007FBA  00                 	db	0
  4993  007FBB                     STR_41:
  4994  007FBB  53                 	db	83	;'S'
  4995  007FBC  54                 	db	84	;'T'
  4996  007FBD  41                 	db	65	;'A'
  4997  007FBE  54                 	db	84	;'T'
  4998  007FBF  00                 	db	0
  4999  007FC0                     STR_6:
  5000  007FC0  42                 	db	66	;'B'
  5001  007FC1  4F                 	db	79	;'O'
  5002  007FC2  4F                 	db	79	;'O'
  5003  007FC3  54                 	db	84	;'T'
  5004  007FC4  00                 	db	0
  5005  007FC5                     STR_68:
  5006  007FC5  27                 	db	39
  5007  007FC6  20                 	db	32
  5008  007FC7  09                 	db	9
  5009  007FC8  00                 	db	0
  5010  007FC9                     STR_202:
  5011  007FC9  3E                 	db	62	;'>'
  5012  007FCA  0D                 	db	13
  5013  007FCB  0A                 	db	10
  5014  007FCC  00                 	db	0
  5015  007FCD                     STR_92:
  5016  007FCD  25                 	db	37
  5017  007FCE  64                 	db	100	;'d'
  5018  007FCF  0A                 	db	10
  5019  007FD0  00                 	db	0
  5020  007FD1                     STR_156:
  5021  007FD1  4F                 	db	79	;'O'
  5022  007FD2  46                 	db	70	;'F'
  5023  007FD3  46                 	db	70	;'F'
  5024  007FD4  00                 	db	0
  5025  007FD5                     STR_43:
  5026  007FD5  45                 	db	69	;'E'
  5027  007FD6  52                 	db	82	;'R'
  5028  007FD7  52                 	db	82	;'R'
  5029  007FD8  00                 	db	0
  5030  007FD9                     STR_134:
  5031  007FD9  48                 	db	72	;'H'
  5032  007FDA  45                 	db	69	;'E'
  5033  007FDB  58                 	db	88	;'X'
  5034  007FDC  00                 	db	0
  5035  007FDD                     STR_184:
  5036  007FDD  25                 	db	37
  5037  007FDE  6C                 	db	108	;'l'
  5038  007FDF  75                 	db	117	;'u'
  5039  007FE0  00                 	db	0
  5040  007FE1                     STR_67:
  5041  007FE1  09                 	db	9
  5042  007FE2  27                 	db	39
  5043  007FE3  00                 	db	0
  5044  007FE4                     STR_291:
  5045  007FE4  2D                 	db	45
  5046  007FE5  2D                 	db	45
  5047  007FE6  00                 	db	0
  5048  007FE7                     STR_38:
  5049  007FE7  52                 	db	82	;'R'
  5050  007FE8  58                 	db	88	;'X'
  5051  007FE9  00                 	db	0
  5052  007FEA                     STR_29:
  5053  007FEA  54                 	db	84	;'T'
  5054  007FEB  58                 	db	88	;'X'
  5055  007FEC  00                 	db	0
  5056  007FED                     STR_61:
  5057  007FED  25                 	db	37
  5058  007FEE  64                 	db	100	;'d'
  5059  007FEF  00                 	db	0
  5060  007FF0                     STR_178:
  5061  007FF0  07                 	db	7
  5062  007FF1  00                 	db	0
  5063  007FF2                     STR_177:
  5064  007FF2  0D                 	db	13
  5065  007FF3  00                 	db	0
  5066  007FF4                     STR_30:
  5067  007FF4  2C                 	db	44
  5068  007FF5  00                 	db	0
  5069  007FF6                     STR_298:
  5070  007FF6  2E                 	db	46
  5071  007FF7  00                 	db	0
  5072  007FF8                     STR_290:
  5073  007FF8  30                 	db	48	;'0'
  5074  007FF9  00                 	db	0
  5075  007FFA                     STR_292:
  5076  007FFA  3A                 	db	58	;':'
  5077  007FFB  00                 	db	0
  5078  007FFC                     STR_169:
  5079  007FFC  3F                 	db	63	;'?'
  5080  007FFD  00                 	db	0
  5081  007FFE                     __end_of__stringdata:
  5082                           	opt stack 0
  5083                           
  5084                           ; #config settings
  5085  007FFE  00                 	db	0	; dummy byte at the end
  5086  0000                     tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           prodh	equ	0xFF4
  5091                           prodl	equ	0xFF3
  5092                           intcon	equ	0xFF2
  5093                           indf0	equ	0xFEF
  5094                           fsr0h	equ	0xFEA
  5095                           fsr0l	equ	0xFE9
  5096                           wreg	equ	0xFE8
  5097                           indf1	equ	0xFE7
  5098                           postinc1	equ	0xFE6
  5099                           postdec1	equ	0xFE5
  5100                           fsr1h	equ	0xFE2
  5101                           fsr1l	equ	0xFE1
  5102                           indf2	equ	0xFDF
  5103                           postinc2	equ	0xFDE
  5104                           postdec2	equ	0xFDD
  5105                           plusw2	equ	0xFDB
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110                           	psect	nvCOMRAM
  5111  000041                     __pnvCOMRAM:
  5112                           	opt stack 0
  5113  000041                     _ledFunctionality:
  5114                           	opt stack 0
  5115  000041                     	ds	1
  5116                           tblptru	equ	0xFF8
  5117                           tblptrh	equ	0xFF7
  5118                           tblptrl	equ	0xFF6
  5119                           tablat	equ	0xFF5
  5120                           prodh	equ	0xFF4
  5121                           prodl	equ	0xFF3
  5122                           intcon	equ	0xFF2
  5123                           indf0	equ	0xFEF
  5124                           fsr0h	equ	0xFEA
  5125                           fsr0l	equ	0xFE9
  5126                           wreg	equ	0xFE8
  5127                           indf1	equ	0xFE7
  5128                           postinc1	equ	0xFE6
  5129                           postdec1	equ	0xFE5
  5130                           fsr1h	equ	0xFE2
  5131                           fsr1l	equ	0xFE1
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           plusw2	equ	0xFDB
  5136                           fsr2h	equ	0xFDA
  5137                           fsr2l	equ	0xFD9
  5138                           status	equ	0xFD8
  5139                           
  5140                           	psect	nvBANK0
  5141  0000FC                     __pnvBANK0:
  5142                           	opt stack 0
  5143  0000FC                     _caps:
  5144                           	opt stack 0
  5145  0000FC                     	ds	2
  5146                           tblptru	equ	0xFF8
  5147                           tblptrh	equ	0xFF7
  5148                           tblptrl	equ	0xFF6
  5149                           tablat	equ	0xFF5
  5150                           prodh	equ	0xFF4
  5151                           prodl	equ	0xFF3
  5152                           intcon	equ	0xFF2
  5153                           indf0	equ	0xFEF
  5154                           fsr0h	equ	0xFEA
  5155                           fsr0l	equ	0xFE9
  5156                           wreg	equ	0xFE8
  5157                           indf1	equ	0xFE7
  5158                           postinc1	equ	0xFE6
  5159                           postdec1	equ	0xFE5
  5160                           fsr1h	equ	0xFE2
  5161                           fsr1l	equ	0xFE1
  5162                           indf2	equ	0xFDF
  5163                           postinc2	equ	0xFDE
  5164                           postdec2	equ	0xFDD
  5165                           plusw2	equ	0xFDB
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8
  5169                           
  5170                           	psect	cinit
  5171  00631A                     __pcinit:
  5172                           	opt stack 0
  5173  00631A                     start_initialization:
  5174                           	opt stack 0
  5175  00631A                     __initialization:
  5176                           	opt stack 0
  5177                           
  5178                           ; Clear objects allocated to BIGRAM (494 bytes)
  5179  00631A  EE04  F000         	lfsr	0,__pbssBIGRAM
  5180  00631E  EE11 F0EE          	lfsr	1,494
  5181  006322                     clear_0:
  5182  006322  6AEE               	clrf	postinc0,c
  5183  006324  50E5               	movf	postdec1,w,c
  5184  006326  50E1               	movf	fsr1l,w,c
  5185  006328  E1FC               	bnz	clear_0
  5186  00632A  50E2               	movf	fsr1h,w,c
  5187  00632C  E1FA               	bnz	clear_0
  5188                           
  5189                           ; Clear objects allocated to BANK3 (256 bytes)
  5190  00632E  EE03  F000         	lfsr	0,__pbssBANK3
  5191  006332  EE11 F000          	lfsr	1,256
  5192  006336                     clear_1:
  5193  006336  6AEE               	clrf	postinc0,c
  5194  006338  50E5               	movf	postdec1,w,c
  5195  00633A  50E1               	movf	fsr1l,w,c
  5196  00633C  E1FC               	bnz	clear_1
  5197  00633E  50E2               	movf	fsr1h,w,c
  5198  006340  E1FA               	bnz	clear_1
  5199                           
  5200                           ; Clear objects allocated to BANK2 (136 bytes)
  5201  006342  EE02  F000         	lfsr	0,__pbssBANK2
  5202  006346  0E88               	movlw	136
  5203  006348                     clear_2:
  5204  006348  6AEE               	clrf	postinc0,c
  5205  00634A  06E8               	decf	wreg,f,c
  5206  00634C  E1FD               	bnz	clear_2
  5207                           
  5208                           ; Clear objects allocated to BANK1 (179 bytes)
  5209  00634E  EE01  F000         	lfsr	0,__pbssBANK1
  5210  006352  0EB3               	movlw	179
  5211  006354                     clear_3:
  5212  006354  6AEE               	clrf	postinc0,c
  5213  006356  06E8               	decf	wreg,f,c
  5214  006358  E1FD               	bnz	clear_3
  5215                           
  5216                           ; Clear objects allocated to BANK0 (54 bytes)
  5217  00635A  EE00  F0C6         	lfsr	0,__pbssBANK0
  5218  00635E  0E36               	movlw	54
  5219  006360                     clear_4:
  5220  006360  6AEE               	clrf	postinc0,c
  5221  006362  06E8               	decf	wreg,f,c
  5222  006364  E1FD               	bnz	clear_4
  5223                           
  5224                           ; Clear objects allocated to COMRAM (25 bytes)
  5225  006366  EE00  F028         	lfsr	0,__pbssCOMRAM
  5226  00636A  0E19               	movlw	25
  5227  00636C                     clear_5:
  5228  00636C  6AEE               	clrf	postinc0,c
  5229  00636E  06E8               	decf	wreg,f,c
  5230  006370  E1FD               	bnz	clear_5
  5231  006372                     end_of_initialization:
  5232                           	opt stack 0
  5233  006372                     __end_of__initialization:
  5234                           	opt stack 0
  5235  006372  0E00               	movlw	low (__Lmediumconst shr (0+16))
  5236  006374  6EF8               	movwf	tblptru,c
  5237  006376  0100               	movlb	0
  5238  006378  EF0D  F020         	goto	_main	;jump to C main() function
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           prodh	equ	0xFF4
  5244                           prodl	equ	0xFF3
  5245                           intcon	equ	0xFF2
  5246                           indf0	equ	0xFEF
  5247                           postinc0	equ	0xFEE
  5248                           fsr0h	equ	0xFEA
  5249                           fsr0l	equ	0xFE9
  5250                           wreg	equ	0xFE8
  5251                           indf1	equ	0xFE7
  5252                           postinc1	equ	0xFE6
  5253                           postdec1	equ	0xFE5
  5254                           fsr1h	equ	0xFE2
  5255                           fsr1l	equ	0xFE1
  5256                           indf2	equ	0xFDF
  5257                           postinc2	equ	0xFDE
  5258                           postdec2	equ	0xFDD
  5259                           plusw2	equ	0xFDB
  5260                           fsr2h	equ	0xFDA
  5261                           fsr2l	equ	0xFD9
  5262                           status	equ	0xFD8
  5263                           
  5264                           	psect	bssCOMRAM
  5265  000028                     __pbssCOMRAM:
  5266                           	opt stack 0
  5267  000028                     _made_table:
  5268                           	opt stack 0
  5269  000028                     	ds	2
  5270  00002A                     _status_led_cnt:
  5271                           	opt stack 0
  5272  00002A                     	ds	2
  5273  00002C                     strtok@sp:
  5274                           	opt stack 0
  5275  00002C                     	ds	2
  5276  00002E                     _USART_Status:
  5277                           	opt stack 0
  5278  00002E                     	ds	1
  5279  00002F                     __ECANRxFilterHitInfo:
  5280                           	opt stack 0
  5281  00002F                     	ds	1
  5282  000030                     _bDLE:
  5283                           	opt stack 0
  5284  000030                     	ds	1
  5285  000031                     _fifo_canrxcount:
  5286                           	opt stack 0
  5287  000031                     	ds	1
  5288  000032                     _stateVscpDriver:
  5289                           	opt stack 0
  5290  000032                     	ds	1
  5291  000033                     _canInputFifo:
  5292                           	opt stack 0
  5293  000033                     	ds	8
  5294  00003B                     _id:
  5295                           	opt stack 0
  5296  00003B                     	ds	4
  5297  00003F                     _dlc:
  5298                           	opt stack 0
  5299  00003F                     	ds	1
  5300  000040                     _flags:
  5301                           	opt stack 0
  5302  000040                     	ds	1
  5303                           tblptru	equ	0xFF8
  5304                           tblptrh	equ	0xFF7
  5305                           tblptrl	equ	0xFF6
  5306                           tablat	equ	0xFF5
  5307                           prodh	equ	0xFF4
  5308                           prodl	equ	0xFF3
  5309                           intcon	equ	0xFF2
  5310                           indf0	equ	0xFEF
  5311                           postinc0	equ	0xFEE
  5312                           fsr0h	equ	0xFEA
  5313                           fsr0l	equ	0xFE9
  5314                           wreg	equ	0xFE8
  5315                           indf1	equ	0xFE7
  5316                           postinc1	equ	0xFE6
  5317                           postdec1	equ	0xFE5
  5318                           fsr1h	equ	0xFE2
  5319                           fsr1l	equ	0xFE1
  5320                           indf2	equ	0xFDF
  5321                           postinc2	equ	0xFDE
  5322                           postdec2	equ	0xFDD
  5323                           plusw2	equ	0xFDB
  5324                           fsr2h	equ	0xFDA
  5325                           fsr2l	equ	0xFD9
  5326                           status	equ	0xFD8
  5327                           
  5328                           	psect	bssBANK0
  5329  0000C6                     __pbssBANK0:
  5330                           	opt stack 0
  5331  0000C6                     _can_receiveOverruns:
  5332                           	opt stack 0
  5333  0000C6                     	ds	4
  5334  0000CA                     _can_transmitOverruns:
  5335                           	opt stack 0
  5336  0000CA                     	ds	4
  5337  0000CE                     _cntRxBytes:
  5338                           	opt stack 0
  5339  0000CE                     	ds	4
  5340  0000D2                     _cntRxFrames:
  5341                           	opt stack 0
  5342  0000D2                     	ds	4
  5343  0000D6                     _cntTxBytes:
  5344                           	opt stack 0
  5345  0000D6                     	ds	4
  5346  0000DA                     _cntTxFrames:
  5347                           	opt stack 0
  5348  0000DA                     	ds	4
  5349  0000DE                     _timekeeper:
  5350                           	opt stack 0
  5351  0000DE                     	ds	4
  5352  0000E2                     _timer:
  5353                           	opt stack 0
  5354  0000E2                     	ds	4
  5355  0000E6                     _uart_receiveOverruns:
  5356                           	opt stack 0
  5357  0000E6                     	ds	4
  5358  0000EA                     _uart_transmitOverruns:
  5359                           	opt stack 0
  5360  0000EA                     	ds	4
  5361  0000EE                     _bInitiated:
  5362                           	opt stack 0
  5363  0000EE                     	ds	1
  5364  0000EF                     _bOpen:
  5365                           	opt stack 0
  5366  0000EF                     	ds	1
  5367  0000F0                     _bTimestamp:
  5368                           	opt stack 0
  5369  0000F0                     	ds	1
  5370  0000F1                     _mode:
  5371                           	opt stack 0
  5372  0000F1                     	ds	1
  5373  0000F2                     _nTimeStamp:
  5374                           	opt stack 0
  5375  0000F2                     	ds	1
  5376  0000F3                     _sequencyno:
  5377                           	opt stack 0
  5378  0000F3                     	ds	1
  5379  0000F4                     _serialInputFifo:
  5380                           	opt stack 0
  5381  0000F4                     	ds	8
  5382                           tblptru	equ	0xFF8
  5383                           tblptrh	equ	0xFF7
  5384                           tblptrl	equ	0xFF6
  5385                           tablat	equ	0xFF5
  5386                           prodh	equ	0xFF4
  5387                           prodl	equ	0xFF3
  5388                           intcon	equ	0xFF2
  5389                           indf0	equ	0xFEF
  5390                           postinc0	equ	0xFEE
  5391                           fsr0h	equ	0xFEA
  5392                           fsr0l	equ	0xFE9
  5393                           wreg	equ	0xFE8
  5394                           indf1	equ	0xFE7
  5395                           postinc1	equ	0xFE6
  5396                           postdec1	equ	0xFE5
  5397                           fsr1h	equ	0xFE2
  5398                           fsr1l	equ	0xFE1
  5399                           indf2	equ	0xFDF
  5400                           postinc2	equ	0xFDE
  5401                           postdec2	equ	0xFDD
  5402                           plusw2	equ	0xFDB
  5403                           fsr2h	equ	0xFDA
  5404                           fsr2l	equ	0xFD9
  5405                           status	equ	0xFD8
  5406                           
  5407                           	psect	bssBANK1
  5408  000100                     __pbssBANK1:
  5409                           	opt stack 0
  5410  000100                     _bHex:
  5411                           	opt stack 0
  5412  000100                     	ds	1
  5413  000101                     _bLocalEcho:
  5414                           	opt stack 0
  5415  000101                     	ds	1
  5416  000102                     _bSilent:
  5417                           	opt stack 0
  5418  000102                     	ds	1
  5419  000103                     _pos:
  5420                           	opt stack 0
  5421  000103                     	ds	1
  5422  000104                     _rwtimeout:
  5423                           	opt stack 0
  5424  000104                     	ds	1
  5425  000105                     _cmdbuf:
  5426                           	opt stack 0
  5427  000105                     	ds	80
  5428  000155                     _wrkbuf:
  5429                           	opt stack 0
  5430  000155                     	ds	80
  5431  0001A5                     _vscpData:
  5432                           	opt stack 0
  5433  0001A5                     	ds	8
  5434  0001AD                     _vscpClass:
  5435                           	opt stack 0
  5436  0001AD                     	ds	2
  5437  0001AF                     _vscpNodeId:
  5438                           	opt stack 0
  5439  0001AF                     	ds	1
  5440  0001B0                     _vscpPriority:
  5441                           	opt stack 0
  5442  0001B0                     	ds	1
  5443  0001B1                     _vscpSize:
  5444                           	opt stack 0
  5445  0001B1                     	ds	1
  5446  0001B2                     _vscpType:
  5447                           	opt stack 0
  5448  0001B2                     	ds	1
  5449                           tblptru	equ	0xFF8
  5450                           tblptrh	equ	0xFF7
  5451                           tblptrl	equ	0xFF6
  5452                           tablat	equ	0xFF5
  5453                           prodh	equ	0xFF4
  5454                           prodl	equ	0xFF3
  5455                           intcon	equ	0xFF2
  5456                           indf0	equ	0xFEF
  5457                           postinc0	equ	0xFEE
  5458                           fsr0h	equ	0xFEA
  5459                           fsr0l	equ	0xFE9
  5460                           wreg	equ	0xFE8
  5461                           indf1	equ	0xFE7
  5462                           postinc1	equ	0xFE6
  5463                           postdec1	equ	0xFE5
  5464                           fsr1h	equ	0xFE2
  5465                           fsr1l	equ	0xFE1
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           plusw2	equ	0xFDB
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474                           	psect	bssBANK2
  5475  000200                     __pbssBANK2:
  5476                           	opt stack 0
  5477  000200                     _serial_inputBuffer:
  5478                           	opt stack 0
  5479  000200                     	ds	128
  5480  000280                     _data:
  5481                           	opt stack 0
  5482  000280                     	ds	8
  5483                           tblptru	equ	0xFF8
  5484                           tblptrh	equ	0xFF7
  5485                           tblptrl	equ	0xFF6
  5486                           tablat	equ	0xFF5
  5487                           prodh	equ	0xFF4
  5488                           prodl	equ	0xFF3
  5489                           intcon	equ	0xFF2
  5490                           indf0	equ	0xFEF
  5491                           postinc0	equ	0xFEE
  5492                           fsr0h	equ	0xFEA
  5493                           fsr0l	equ	0xFE9
  5494                           wreg	equ	0xFE8
  5495                           indf1	equ	0xFE7
  5496                           postinc1	equ	0xFE6
  5497                           postdec1	equ	0xFE5
  5498                           fsr1h	equ	0xFE2
  5499                           fsr1l	equ	0xFE1
  5500                           indf2	equ	0xFDF
  5501                           postinc2	equ	0xFDE
  5502                           postdec2	equ	0xFDD
  5503                           plusw2	equ	0xFDB
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508                           	psect	bssBANK3
  5509  000300                     __pbssBANK3:
  5510                           	opt stack 0
  5511  000300                     _crc8_table:
  5512                           	opt stack 0
  5513  000300                     	ds	256
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           prodh	equ	0xFF4
  5519                           prodl	equ	0xFF3
  5520                           intcon	equ	0xFF2
  5521                           indf0	equ	0xFEF
  5522                           postinc0	equ	0xFEE
  5523                           fsr0h	equ	0xFEA
  5524                           fsr0l	equ	0xFE9
  5525                           wreg	equ	0xFE8
  5526                           indf1	equ	0xFE7
  5527                           postinc1	equ	0xFE6
  5528                           postdec1	equ	0xFE5
  5529                           fsr1h	equ	0xFE2
  5530                           fsr1l	equ	0xFE1
  5531                           indf2	equ	0xFDF
  5532                           postinc2	equ	0xFDE
  5533                           postdec2	equ	0xFDD
  5534                           plusw2	equ	0xFDB
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539                           	psect	bssBIGRAM
  5540  000400                     __pbssBIGRAM:
  5541                           	opt stack 0
  5542  000400                     _can_inputBuffer:
  5543                           	opt stack 0
  5544  000400                     	ds	494
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           prodh	equ	0xFF4
  5550                           prodl	equ	0xFF3
  5551                           intcon	equ	0xFF2
  5552                           indf0	equ	0xFEF
  5553                           postinc0	equ	0xFEE
  5554                           fsr0h	equ	0xFEA
  5555                           fsr0l	equ	0xFE9
  5556                           wreg	equ	0xFE8
  5557                           indf1	equ	0xFE7
  5558                           postinc1	equ	0xFE6
  5559                           postdec1	equ	0xFE5
  5560                           fsr1h	equ	0xFE2
  5561                           fsr1l	equ	0xFE1
  5562                           indf2	equ	0xFDF
  5563                           postinc2	equ	0xFDE
  5564                           postdec2	equ	0xFDD
  5565                           plusw2	equ	0xFDB
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570                           	psect	cstackBANK2
  5571  000288                     __pcstackBANK2:
  5572                           	opt stack 0
  5573  000288                     doModeVerbose@id:
  5574                           	opt stack 0
  5575                           
  5576                           ; 4 bytes @ 0x0
  5577  000288                     	ds	4
  5578  00028C                     doModeVerbose@preg:
  5579                           	opt stack 0
  5580                           
  5581                           ; 2 bytes @ 0x4
  5582  00028C                     	ds	2
  5583  00028E                     doModeVerbose@preg_1357:
  5584                           	opt stack 0
  5585                           
  5586                           ; 2 bytes @ 0x6
  5587  00028E                     	ds	2
  5588  000290                     doModeVerbose@filter_class:
  5589                           	opt stack 0
  5590                           
  5591                           ; 2 bytes @ 0x8
  5592  000290                     	ds	2
  5593  000292                     doModeVerbose@mask_class:
  5594                           	opt stack 0
  5595                           
  5596                           ; 2 bytes @ 0xA
  5597  000292                     	ds	2
  5598  000294                     doModeVerbose@filter_priority:
  5599                           	opt stack 0
  5600                           
  5601                           ; 1 bytes @ 0xC
  5602  000294                     	ds	1
  5603  000295                     doModeVerbose@filter_type:
  5604                           	opt stack 0
  5605                           
  5606                           ; 1 bytes @ 0xD
  5607  000295                     	ds	1
  5608  000296                     doModeVerbose@filter_nodeid:
  5609                           	opt stack 0
  5610                           
  5611                           ; 1 bytes @ 0xE
  5612  000296                     	ds	1
  5613  000297                     doModeVerbose@mask_priority:
  5614                           	opt stack 0
  5615                           
  5616                           ; 1 bytes @ 0xF
  5617  000297                     	ds	1
  5618  000298                     doModeVerbose@mask_type:
  5619                           	opt stack 0
  5620                           
  5621                           ; 1 bytes @ 0x10
  5622  000298                     	ds	1
  5623  000299                     doModeVerbose@mask_nodeid:
  5624                           	opt stack 0
  5625                           
  5626                           ; 1 bytes @ 0x11
  5627  000299                     	ds	2
  5628  00029B                     _doModeVerbose$1312:
  5629                           	opt stack 0
  5630                           
  5631                           ; 2 bytes @ 0x13
  5632  00029B                     	ds	2
  5633  00029D                     _doModeVerbose$1317:
  5634                           	opt stack 0
  5635                           
  5636                           ; 2 bytes @ 0x15
  5637  00029D                     	ds	2
  5638  00029F                     _doModeVerbose$1321:
  5639                           	opt stack 0
  5640                           
  5641                           ; 2 bytes @ 0x17
  5642  00029F                     	ds	2
  5643  0002A1                     _doModeVerbose$1326:
  5644                           	opt stack 0
  5645                           
  5646                           ; 2 bytes @ 0x19
  5647  0002A1                     	ds	2
  5648  0002A3                     _doModeVerbose$1334:
  5649                           	opt stack 0
  5650                           
  5651                           ; 2 bytes @ 0x1B
  5652  0002A3                     	ds	2
  5653  0002A5                     _doModeVerbose$1339:
  5654                           	opt stack 0
  5655                           
  5656                           ; 2 bytes @ 0x1D
  5657  0002A5                     	ds	2
  5658  0002A7                     _doModeVerbose$1343:
  5659                           	opt stack 0
  5660                           
  5661                           ; 2 bytes @ 0x1F
  5662  0002A7                     	ds	2
  5663  0002A9                     _doModeVerbose$1366:
  5664                           	opt stack 0
  5665                           
  5666                           ; 2 bytes @ 0x21
  5667  0002A9                     	ds	2
  5668  0002AB                     _doModeVerbose$1372:
  5669                           	opt stack 0
  5670                           
  5671                           ; 2 bytes @ 0x23
  5672  0002AB                     	ds	2
  5673  0002AD                     _doModeVerbose$1381:
  5674                           	opt stack 0
  5675                           
  5676                           ; 2 bytes @ 0x25
  5677  0002AD                     	ds	2
  5678  0002AF                     doModeVerbose@rv:
  5679                           	opt stack 0
  5680                           
  5681                           ; 1 bytes @ 0x27
  5682  0002AF                     	ds	1
  5683  0002B0                     doModeVerbose@page_1349:
  5684                           	opt stack 0
  5685                           
  5686                           ; 1 bytes @ 0x28
  5687  0002B0                     	ds	1
  5688  0002B1                     doModeVerbose@reg_1350:
  5689                           	opt stack 0
  5690                           
  5691                           ; 1 bytes @ 0x29
  5692  0002B1                     	ds	1
  5693  0002B2                     doModeVerbose@value_1375:
  5694                           	opt stack 0
  5695                           
  5696                           ; 1 bytes @ 0x2A
  5697  0002B2                     	ds	1
  5698  0002B3                     doModeVerbose@bPersistent:
  5699                           	opt stack 0
  5700                           
  5701                           ; 1 bytes @ 0x2B
  5702  0002B3                     	ds	1
  5703  0002B4                     doModeVerbose@baudcode:
  5704                           	opt stack 0
  5705                           
  5706                           ; 4 bytes @ 0x2C
  5707  0002B4                     	ds	4
  5708  0002B8                     doModeVerbose@filterno:
  5709                           	opt stack 0
  5710                           
  5711                           ; 1 bytes @ 0x30
  5712  0002B8                     	ds	1
  5713  0002B9                     doModeVerbose@i:
  5714                           	opt stack 0
  5715                           
  5716                           ; 1 bytes @ 0x31
  5717  0002B9                     	ds	1
  5718  0002BA                     doModeVerbose@value_1351:
  5719                           	opt stack 0
  5720                           
  5721                           ; 1 bytes @ 0x32
  5722  0002BA                     	ds	1
  5723  0002BB                     doModeVerbose@count:
  5724                           	opt stack 0
  5725                           
  5726                           ; 1 bytes @ 0x33
  5727  0002BB                     	ds	1
  5728  0002BC                     doModeVerbose@nodeid:
  5729                           	opt stack 0
  5730                           
  5731                           ; 1 bytes @ 0x34
  5732  0002BC                     	ds	1
  5733  0002BD                     doModeVerbose@nodeid_1348:
  5734                           	opt stack 0
  5735                           
  5736                           ; 1 bytes @ 0x35
  5737  0002BD                     	ds	1
  5738  0002BE                     doModeVerbose@maskno:
  5739                           	opt stack 0
  5740                           
  5741                           ; 1 bytes @ 0x36
  5742  0002BE                     	ds	1
  5743  0002BF                     doModeVerbose@page:
  5744                           	opt stack 0
  5745                           
  5746                           ; 1 bytes @ 0x37
  5747  0002BF                     	ds	1
  5748  0002C0                     doModeVerbose@reg:
  5749                           	opt stack 0
  5750                           
  5751                           ; 1 bytes @ 0x38
  5752  0002C0                     	ds	1
  5753  0002C1                     doModeVerbose@i_1293:
  5754                           	opt stack 0
  5755                           
  5756                           ; 1 bytes @ 0x39
  5757  0002C1                     	ds	1
  5758  0002C2                     doModeVerbose@nodeid_1374:
  5759                           	opt stack 0
  5760                           
  5761                           ; 1 bytes @ 0x3A
  5762  0002C2                     	ds	1
  5763  0002C3                     doModeVerbose@c:
  5764                           	opt stack 0
  5765                           
  5766                           ; 1 bytes @ 0x3B
  5767  0002C3                     	ds	1
  5768  0002C4                     doModeVerbose@value:
  5769                           	opt stack 0
  5770                           
  5771                           ; 1 bytes @ 0x3C
  5772  0002C4                     	ds	1
  5773  0002C5                     doModeVerbose@p_1300:
  5774                           	opt stack 0
  5775                           
  5776                           ; 2 bytes @ 0x3D
  5777  0002C5                     	ds	2
  5778  0002C7                     doModeVerbose@p_1353:
  5779                           	opt stack 0
  5780                           
  5781                           ; 2 bytes @ 0x3F
  5782  0002C7                     	ds	2
  5783  0002C9                     doModeVerbose@ifmode:
  5784                           	opt stack 0
  5785                           
  5786                           ; 1 bytes @ 0x41
  5787  0002C9                     	ds	1
  5788  0002CA                     doModeVerbose@p:
  5789                           	opt stack 0
  5790                           
  5791                           ; 2 bytes @ 0x42
  5792  0002CA                     	ds	2
  5793  0002CC                     doModeVerbose@id_1427:
  5794                           	opt stack 0
  5795                           
  5796                           ; 4 bytes @ 0x44
  5797  0002CC                     	ds	4
  5798  0002D0                     doModeVerbose@p_1415:
  5799                           	opt stack 0
  5800                           
  5801                           ; 2 bytes @ 0x48
  5802  0002D0                     	ds	2
  5803  0002D2                     doModeVerbose@p_1392:
  5804                           	opt stack 0
  5805                           
  5806                           ; 2 bytes @ 0x4A
  5807  0002D2                     	ds	2
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon	equ	0xFF2
  5815                           indf0	equ	0xFEF
  5816                           postinc0	equ	0xFEE
  5817                           fsr0h	equ	0xFEA
  5818                           fsr0l	equ	0xFE9
  5819                           wreg	equ	0xFE8
  5820                           indf1	equ	0xFE7
  5821                           postinc1	equ	0xFE6
  5822                           postdec1	equ	0xFE5
  5823                           fsr1h	equ	0xFE2
  5824                           fsr1l	equ	0xFE1
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           plusw2	equ	0xFDB
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833                           	psect	cstackBANK1
  5834  0001B3                     __pcstackBANK1:
  5835                           	opt stack 0
  5836  0001B3                     ??_doModeVerbose:
  5837                           
  5838                           ; 0 bytes @ 0x0
  5839  0001B3                     	ds	20
  5840  0001C7                     
  5841                           ; 2 bytes @ 0x14
  5842  0001C7                     	ds	2
  5843  0001C9                     
  5844                           ; 3 bytes @ 0x16
  5845  0001C9                     	ds	3
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           intcon	equ	0xFF2
  5853                           indf0	equ	0xFEF
  5854                           postinc0	equ	0xFEE
  5855                           fsr0h	equ	0xFEA
  5856                           fsr0l	equ	0xFE9
  5857                           wreg	equ	0xFE8
  5858                           indf1	equ	0xFE7
  5859                           postinc1	equ	0xFE6
  5860                           postdec1	equ	0xFE5
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           indf2	equ	0xFDF
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           plusw2	equ	0xFDB
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871                           	psect	cstackBANK0
  5872  000060                     __pcstackBANK0:
  5873                           	opt stack 0
  5874  000060                     ??_fifo_getFree:
  5875  000060                     ??_fifo_read:
  5876  000060                     ??_setFilter:
  5877  000060                     ??__CANIDToRegs:
  5878  000060                     ??_hexStringToBytes:
  5879  000060                     ?_crc8:
  5880                           	opt stack 0
  5881  000060                     ?_utoa:
  5882                           	opt stack 0
  5883  000060                     ?_strnicmp:
  5884                           	opt stack 0
  5885  000060                     ?_strspn:
  5886                           	opt stack 0
  5887  000060                     ?_strcspn:
  5888                           	opt stack 0
  5889  000060                     ___lldiv@counter:
  5890                           	opt stack 0
  5891  000060                     crc8@crc:
  5892                           	opt stack 0
  5893  000060                     utoa@buf:
  5894                           	opt stack 0
  5895  000060                     memcpy@d:
  5896                           	opt stack 0
  5897  000060                     strnicmp@s1:
  5898                           	opt stack 0
  5899  000060                     ___wmul@product:
  5900                           	opt stack 0
  5901  000060                     strcspn@s1:
  5902                           	opt stack 0
  5903  000060                     strspn@s1:
  5904                           	opt stack 0
  5905                           
  5906                           ; 2 bytes @ 0x0
  5907  000060                     	ds	1
  5908  000061                     ___lldiv@quotient:
  5909                           	opt stack 0
  5910                           
  5911                           ; 4 bytes @ 0x1
  5912  000061                     	ds	1
  5913  000062                     ?_atoi:
  5914                           	opt stack 0
  5915  000062                     __CANIDToRegs@Value:
  5916                           	opt stack 0
  5917  000062                     crc8@m:
  5918                           	opt stack 0
  5919  000062                     atoi@s:
  5920                           	opt stack 0
  5921  000062                     utoa@val:
  5922                           	opt stack 0
  5923  000062                     memcpy@s:
  5924                           	opt stack 0
  5925  000062                     strnicmp@s2:
  5926                           	opt stack 0
  5927  000062                     strcspn@s2:
  5928                           	opt stack 0
  5929  000062                     strspn@s2:
  5930                           	opt stack 0
  5931                           
  5932                           ; 2 bytes @ 0x2
  5933  000062                     	ds	1
  5934  000063                     ?_sendEscapedUartData:
  5935                           	opt stack 0
  5936  000063                     ?_calcCRC:
  5937                           	opt stack 0
  5938  000063                     ?_ECANSendMessage:
  5939                           	opt stack 0
  5940  000063                     sendEscapedUartData@pcrc:
  5941                           	opt stack 0
  5942  000063                     calcCRC@p:
  5943                           	opt stack 0
  5944  000063                     hexStringToBytes@len:
  5945                           	opt stack 0
  5946  000063                     ECANSendMessage@id:
  5947                           	opt stack 0
  5948                           
  5949                           ; 4 bytes @ 0x3
  5950  000063                     	ds	1
  5951  000064                     ??_atoi:
  5952  000064                     ?_strtok:
  5953                           	opt stack 0
  5954  000064                     fifo_read@p:
  5955                           	opt stack 0
  5956  000064                     utoa@base:
  5957                           	opt stack 0
  5958  000064                     strnicmp@len:
  5959                           	opt stack 0
  5960  000064                     strtok@s1:
  5961                           	opt stack 0
  5962                           
  5963                           ; 2 bytes @ 0x4
  5964  000064                     	ds	1
  5965  000065                     ?___llmod:
  5966                           	opt stack 0
  5967  000065                     sendEscapedUartData@c:
  5968                           	opt stack 0
  5969  000065                     calcCRC@len:
  5970                           	opt stack 0
  5971  000065                     hexStringToBytes@p:
  5972                           	opt stack 0
  5973  000065                     ___llmod@dividend:
  5974                           	opt stack 0
  5975                           
  5976                           ; 4 bytes @ 0x5
  5977  000065                     	ds	1
  5978  000066                     ?_sendVSCPDriverCommandReply:
  5979                           	opt stack 0
  5980  000066                     ?_stristr:
  5981                           	opt stack 0
  5982  000066                     sendVSCPDriverErrorFrame@errorcode:
  5983                           	opt stack 0
  5984  000066                     sendVSCPDriverAck@crc:
  5985                           	opt stack 0
  5986  000066                     sendVSCPDriverNack@crc:
  5987                           	opt stack 0
  5988  000066                     sendVSCPDriverCommandReply@cmdCode:
  5989                           	opt stack 0
  5990  000066                     sendVSCPModeCapabilities@crc:
  5991                           	opt stack 0
  5992  000066                     calcCRC@j:
  5993                           	opt stack 0
  5994  000066                     setFilter@nFilter:
  5995                           	opt stack 0
  5996  000066                     atoi@sign:
  5997                           	opt stack 0
  5998  000066                     fifo_read@i:
  5999                           	opt stack 0
  6000  000066                     utoa@v:
  6001                           	opt stack 0
  6002  000066                     stristr@s1:
  6003                           	opt stack 0
  6004  000066                     strtok@s2:
  6005                           	opt stack 0
  6006                           
  6007                           ; 2 bytes @ 0x6
  6008  000066                     	ds	1
  6009  000067                     sendVSCPDriverErrorFrame@crc:
  6010                           	opt stack 0
  6011  000067                     sendVSCPDriverCommandReply@cmdReplyCode:
  6012                           	opt stack 0
  6013  000067                     calcCRC@crc:
  6014                           	opt stack 0
  6015  000067                     setFilter@sidh:
  6016                           	opt stack 0
  6017  000067                     ECANSendMessage@data:
  6018                           	opt stack 0
  6019  000067                     hexStringToBytes@i:
  6020                           	opt stack 0
  6021  000067                     atoi@a:
  6022                           	opt stack 0
  6023                           
  6024                           ; 2 bytes @ 0x7
  6025  000067                     	ds	1
  6026  000068                     ?_getCANFrame:
  6027                           	opt stack 0
  6028  000068                     sendVSCPDriverCommandReply@crc:
  6029                           	opt stack 0
  6030  000068                     setFilter@sidl:
  6031                           	opt stack 0
  6032  000068                     utoa@c:
  6033                           	opt stack 0
  6034  000068                     getCANFrame@pdlc:
  6035                           	opt stack 0
  6036  000068                     stristr@s2:
  6037                           	opt stack 0
  6038                           
  6039                           ; 2 bytes @ 0x8
  6040  000068                     	ds	1
  6041  000069                     ?_itoa:
  6042                           	opt stack 0
  6043  000069                     setFilter@eidh:
  6044                           	opt stack 0
  6045  000069                     ECANSendMessage@dataLen:
  6046                           	opt stack 0
  6047  000069                     itoa@buf:
  6048                           	opt stack 0
  6049  000069                     ___llmod@divisor:
  6050                           	opt stack 0
  6051                           
  6052                           ; 4 bytes @ 0x9
  6053  000069                     	ds	1
  6054  00006A                     setFilter@eidl:
  6055                           	opt stack 0
  6056  00006A                     ECANSendMessage@msgFlags:
  6057                           	opt stack 0
  6058  00006A                     getCANFrame@pdata:
  6059                           	opt stack 0
  6060                           
  6061                           ; 2 bytes @ 0xA
  6062  00006A                     	ds	1
  6063  00006B                     ??_init_app_ram:
  6064  00006B                     ??_ECANSendMessage:
  6065  00006B                     itoa@val:
  6066                           	opt stack 0
  6067                           
  6068                           ; 2 bytes @ 0xB
  6069  00006B                     	ds	1
  6070  00006C                     ??_receiveSendMultiEventCANAL:
  6071  00006C                     ??_receiveSendEventCANAL:
  6072  00006C                     ?_getVSCPFrame:
  6073                           	opt stack 0
  6074  00006C                     getVSCPFrame@pvscpclass:
  6075                           	opt stack 0
  6076  00006C                     ECANSendMessage@pb:
  6077                           	opt stack 0
  6078                           
  6079                           ; 18 bytes @ 0xC
  6080  00006C                     	ds	1
  6081  00006D                     ?_sprintf:
  6082                           	opt stack 0
  6083  00006D                     ?_ultoa:
  6084                           	opt stack 0
  6085  00006D                     sprintf@sp:
  6086                           	opt stack 0
  6087  00006D                     itoa@base:
  6088                           	opt stack 0
  6089  00006D                     ultoa@buf:
  6090                           	opt stack 0
  6091                           
  6092                           ; 2 bytes @ 0xD
  6093  00006D                     	ds	1
  6094  00006E                     getVSCPFrame@pvscptype:
  6095                           	opt stack 0
  6096                           
  6097                           ; 2 bytes @ 0xE
  6098  00006E                     	ds	1
  6099  00006F                     sprintf@f:
  6100                           	opt stack 0
  6101  00006F                     ultoa@val:
  6102                           	opt stack 0
  6103  00006F                     printFirmwareVersion@wrkbuf:
  6104                           	opt stack 0
  6105                           
  6106                           ; 20 bytes @ 0xF
  6107  00006F                     	ds	1
  6108  000070                     getVSCPFrame@pNodeId:
  6109                           	opt stack 0
  6110  000070                     receiveSendEventCANAL@data:
  6111                           	opt stack 0
  6112  000070                     receiveSendMultiEventCANAL@data:
  6113                           	opt stack 0
  6114                           
  6115                           ; 8 bytes @ 0x10
  6116  000070                     	ds	2
  6117  000072                     getVSCPFrame@pPriority:
  6118                           	opt stack 0
  6119                           
  6120                           ; 2 bytes @ 0x12
  6121  000072                     	ds	1
  6122  000073                     ultoa@base:
  6123                           	opt stack 0
  6124                           
  6125                           ; 2 bytes @ 0x13
  6126  000073                     	ds	1
  6127  000074                     getVSCPFrame@pSize:
  6128                           	opt stack 0
  6129                           
  6130                           ; 2 bytes @ 0x14
  6131  000074                     	ds	1
  6132  000075                     ??_sprintf:
  6133  000075                     ultoa@v:
  6134                           	opt stack 0
  6135                           
  6136                           ; 4 bytes @ 0x15
  6137  000075                     	ds	1
  6138  000076                     getVSCPFrame@pData:
  6139                           	opt stack 0
  6140                           
  6141                           ; 2 bytes @ 0x16
  6142  000076                     	ds	2
  6143  000078                     ??_getVSCPFrame:
  6144  000078                     receiveSendEventCANAL@i:
  6145                           	opt stack 0
  6146  000078                     receiveSendMultiEventCANAL@msgcount:
  6147                           	opt stack 0
  6148  000078                     sprintf@idx:
  6149                           	opt stack 0
  6150                           
  6151                           ; 1 bytes @ 0x18
  6152  000078                     	ds	1
  6153  000079                     ultoa@c:
  6154                           	opt stack 0
  6155  000079                     _sprintf$2270:
  6156                           	opt stack 0
  6157  000079                     receiveSendEventCANAL@timestamp:
  6158                           	opt stack 0
  6159  000079                     receiveSendMultiEventCANAL@timestamp:
  6160                           	opt stack 0
  6161                           
  6162                           ; 4 bytes @ 0x19
  6163  000079                     	ds	1
  6164  00007A                     ??_receiveSendEventSLCAN:
  6165                           
  6166                           ; 0 bytes @ 0x1A
  6167  00007A                     	ds	1
  6168  00007B                     _sprintf$2271:
  6169                           	opt stack 0
  6170                           
  6171                           ; 2 bytes @ 0x1B
  6172  00007B                     	ds	1
  6173  00007C                     getVSCPFrame@id:
  6174                           	opt stack 0
  6175                           
  6176                           ; 4 bytes @ 0x1C
  6177  00007C                     	ds	1
  6178  00007D                     receiveSendMultiEventCANAL@i:
  6179                           	opt stack 0
  6180  00007D                     _sprintf$2277:
  6181                           	opt stack 0
  6182  00007D                     receiveSendEventCANAL@id:
  6183                           	opt stack 0
  6184  00007D                     receiveSendEventSLCAN@id:
  6185                           	opt stack 0
  6186                           
  6187                           ; 4 bytes @ 0x1D
  6188  00007D                     	ds	1
  6189  00007E                     ECANSendMessage@mode:
  6190                           	opt stack 0
  6191  00007E                     receiveSendMultiEventCANAL@id:
  6192                           	opt stack 0
  6193                           
  6194                           ; 4 bytes @ 0x1E
  6195  00007E                     	ds	1
  6196  00007F                     ECANSendMessage@buffers:
  6197                           	opt stack 0
  6198  00007F                     sprintf@ap:
  6199                           	opt stack 0
  6200                           
  6201                           ; 1 bytes @ 0x1F
  6202  00007F                     	ds	1
  6203  000080                     ECANSendMessage@j:
  6204                           	opt stack 0
  6205  000080                     sprintf@prec:
  6206                           	opt stack 0
  6207                           
  6208                           ; 2 bytes @ 0x20
  6209  000080                     	ds	1
  6210  000081                     receiveSendEventCANAL@dlc:
  6211                           	opt stack 0
  6212  000081                     receiveSendEventSLCAN@dlc:
  6213                           	opt stack 0
  6214  000081                     ECANSendMessage@tempBSEL0:
  6215                           	opt stack 0
  6216                           
  6217                           ; 1 bytes @ 0x21
  6218  000081                     	ds	1
  6219  000082                     receiveSendEventCANAL@crc:
  6220                           	opt stack 0
  6221  000082                     receiveSendMultiEventCANAL@dlc:
  6222                           	opt stack 0
  6223  000082                     receiveSendEventSLCAN@i:
  6224                           	opt stack 0
  6225  000082                     ECANSendMessage@tempPtr:
  6226                           	opt stack 0
  6227  000082                     sprintf@width:
  6228                           	opt stack 0
  6229                           
  6230                           ; 2 bytes @ 0x22
  6231  000082                     	ds	1
  6232  000083                     receiveSendMultiEventCANAL@crc:
  6233                           	opt stack 0
  6234                           
  6235                           ; 1 bytes @ 0x23
  6236  000083                     	ds	1
  6237  000084                     init_app_ram@i:
  6238                           	opt stack 0
  6239  000084                     receiveSendMultiEventCANAL@pos:
  6240                           	opt stack 0
  6241  000084                     ECANSendMessage@temp:
  6242                           	opt stack 0
  6243  000084                     sprintf@_val:
  6244                           	opt stack 0
  6245                           
  6246                           ; 4 bytes @ 0x24
  6247  000084                     	ds	1
  6248  000085                     ECANSendMessage@i:
  6249                           	opt stack 0
  6250                           
  6251                           ; 1 bytes @ 0x25
  6252  000085                     	ds	1
  6253  000086                     ECANSendMessage@ptr:
  6254                           	opt stack 0
  6255                           
  6256                           ; 2 bytes @ 0x26
  6257  000086                     	ds	2
  6258  000088                     ?_sendCANFrame:
  6259                           	opt stack 0
  6260  000088                     sprintf@c:
  6261                           	opt stack 0
  6262  000088                     sendCANFrame@id:
  6263                           	opt stack 0
  6264                           
  6265                           ; 4 bytes @ 0x28
  6266  000088                     	ds	1
  6267  000089                     sprintf@flag:
  6268                           	opt stack 0
  6269                           
  6270                           ; 2 bytes @ 0x29
  6271  000089                     	ds	2
  6272  00008B                     ??_receivePrintEventVerbose:
  6273  00008B                     _printStatistics$1606:
  6274                           	opt stack 0
  6275  00008B                     _printErrors$1631:
  6276                           	opt stack 0
  6277                           
  6278                           ; 2 bytes @ 0x2B
  6279  00008B                     	ds	1
  6280  00008C                     sendCANFrame@dlc:
  6281                           	opt stack 0
  6282                           
  6283                           ; 1 bytes @ 0x2C
  6284  00008C                     	ds	1
  6285  00008D                     _printStatistics$1612:
  6286                           	opt stack 0
  6287  00008D                     _printErrors$1637:
  6288                           	opt stack 0
  6289  00008D                     sendCANFrame@pdata:
  6290                           	opt stack 0
  6291                           
  6292                           ; 2 bytes @ 0x2D
  6293  00008D                     	ds	2
  6294  00008F                     ??_doModeSLCAN:
  6295  00008F                     ??_receiveVSCPModeCanalMsg:
  6296  00008F                     ?_sendVSCPFrame:
  6297                           	opt stack 0
  6298  00008F                     _printStatistics$1618:
  6299                           	opt stack 0
  6300  00008F                     _printErrors$1643:
  6301                           	opt stack 0
  6302  00008F                     sendVSCPFrame@vscpclass:
  6303                           	opt stack 0
  6304                           
  6305                           ; 2 bytes @ 0x2F
  6306  00008F                     	ds	1
  6307  000090                     _receivePrintEventVerbose$3691:
  6308                           	opt stack 0
  6309                           
  6310                           ; 4 bytes @ 0x30
  6311  000090                     	ds	1
  6312  000091                     sendVSCPFrame@vscptype:
  6313                           	opt stack 0
  6314  000091                     _printStatistics$1624:
  6315                           	opt stack 0
  6316  000091                     _printErrors$1649:
  6317                           	opt stack 0
  6318                           
  6319                           ; 2 bytes @ 0x31
  6320  000091                     	ds	1
  6321  000092                     sendVSCPFrame@nodeid:
  6322                           	opt stack 0
  6323                           
  6324                           ; 1 bytes @ 0x32
  6325  000092                     	ds	1
  6326  000093                     sendVSCPFrame@priority:
  6327                           	opt stack 0
  6328  000093                     _printErrors$1656:
  6329                           	opt stack 0
  6330                           
  6331                           ; 2 bytes @ 0x33
  6332  000093                     	ds	1
  6333  000094                     sendVSCPFrame@size:
  6334                           	opt stack 0
  6335  000094                     _receivePrintEventVerbose$1506:
  6336                           	opt stack 0
  6337                           
  6338                           ; 2 bytes @ 0x34
  6339  000094                     	ds	1
  6340  000095                     _printErrors$1665:
  6341                           	opt stack 0
  6342  000095                     sendVSCPFrame@pData:
  6343                           	opt stack 0
  6344                           
  6345                           ; 2 bytes @ 0x35
  6346  000095                     	ds	1
  6347  000096                     _receivePrintEventVerbose$1511:
  6348                           	opt stack 0
  6349  000096                     doModeSLCAN@id:
  6350                           	opt stack 0
  6351                           
  6352                           ; 4 bytes @ 0x36
  6353  000096                     	ds	1
  6354  000097                     ??_sendVSCPFrame:
  6355                           
  6356                           ; 0 bytes @ 0x37
  6357  000097                     	ds	1
  6358  000098                     _receivePrintEventVerbose$1516:
  6359                           	opt stack 0
  6360                           
  6361                           ; 2 bytes @ 0x38
  6362  000098                     	ds	2
  6363  00009A                     doModeSLCAN@dlc:
  6364                           	opt stack 0
  6365  00009A                     _receivePrintEventVerbose$1521:
  6366                           	opt stack 0
  6367                           
  6368                           ; 2 bytes @ 0x3A
  6369  00009A                     	ds	1
  6370  00009B                     doModeSLCAN@c:
  6371                           	opt stack 0
  6372                           
  6373                           ; 1 bytes @ 0x3B
  6374  00009B                     	ds	1
  6375  00009C                     doModeSLCAN@rv:
  6376                           	opt stack 0
  6377  00009C                     _receivePrintEventVerbose$1526:
  6378                           	opt stack 0
  6379                           
  6380                           ; 2 bytes @ 0x3C
  6381  00009C                     	ds	2
  6382  00009E                     _receivePrintEventVerbose$1531:
  6383                           	opt stack 0
  6384                           
  6385                           ; 2 bytes @ 0x3E
  6386  00009E                     	ds	2
  6387  0000A0                     _receivePrintEventVerbose$1536:
  6388                           	opt stack 0
  6389                           
  6390                           ; 2 bytes @ 0x40
  6391  0000A0                     	ds	2
  6392  0000A2                     receivePrintEventVerbose@i:
  6393                           	opt stack 0
  6394                           
  6395                           ; 1 bytes @ 0x42
  6396  0000A2                     	ds	1
  6397  0000A3                     receiveVSCPModeCanalMsg@data:
  6398                           	opt stack 0
  6399                           
  6400                           ; 8 bytes @ 0x43
  6401  0000A3                     	ds	8
  6402  0000AB                     receiveVSCPModeCanalMsg@id:
  6403                           	opt stack 0
  6404  0000AB                     sendVSCPFrame@id:
  6405                           	opt stack 0
  6406                           
  6407                           ; 4 bytes @ 0x4B
  6408  0000AB                     	ds	4
  6409  0000AF                     ?_readRegisterExtended:
  6410                           	opt stack 0
  6411  0000AF                     ?_writeRegisterExtended:
  6412                           	opt stack 0
  6413  0000AF                     ?_readRegister:
  6414                           	opt stack 0
  6415  0000AF                     receiveVSCPModeCanalMsg@dlc:
  6416                           	opt stack 0
  6417  0000AF                     readRegister@reg:
  6418                           	opt stack 0
  6419  0000AF                     readRegisterExtended@page:
  6420                           	opt stack 0
  6421  0000AF                     writeRegisterExtended@page:
  6422                           	opt stack 0
  6423                           
  6424                           ; 2 bytes @ 0x4F
  6425  0000AF                     	ds	1
  6426  0000B0                     ??_doModeVscp:
  6427  0000B0                     readRegister@timeout:
  6428                           	opt stack 0
  6429                           
  6430                           ; 2 bytes @ 0x50
  6431  0000B0                     	ds	1
  6432  0000B1                     readRegisterExtended@reg:
  6433                           	opt stack 0
  6434  0000B1                     writeRegisterExtended@reg:
  6435                           	opt stack 0
  6436                           
  6437                           ; 1 bytes @ 0x51
  6438  0000B1                     	ds	1
  6439  0000B2                     readRegister@value:
  6440                           	opt stack 0
  6441  0000B2                     readRegisterExtended@timeout:
  6442                           	opt stack 0
  6443  0000B2                     writeRegisterExtended@timeout:
  6444                           	opt stack 0
  6445                           
  6446                           ; 2 bytes @ 0x52
  6447  0000B2                     	ds	1
  6448  0000B3                     ??_readRegister:
  6449                           
  6450                           ; 0 bytes @ 0x53
  6451  0000B3                     	ds	1
  6452  0000B4                     doModeVscp@filter:
  6453                           	opt stack 0
  6454  0000B4                     readRegisterExtended@value:
  6455                           	opt stack 0
  6456  0000B4                     writeRegisterExtended@value:
  6457                           	opt stack 0
  6458                           
  6459                           ; 2 bytes @ 0x54
  6460  0000B4                     	ds	1
  6461  0000B5                     doModeVscp@mask:
  6462                           	opt stack 0
  6463                           
  6464                           ; 1 bytes @ 0x55
  6465  0000B5                     	ds	1
  6466  0000B6                     ??_readRegisterExtended:
  6467  0000B6                     ??_writeRegisterExtended:
  6468  0000B6                     doModeVscp@c:
  6469                           	opt stack 0
  6470                           
  6471                           ; 1 bytes @ 0x56
  6472  0000B6                     	ds	1
  6473  0000B7                     readRegister@nodeid:
  6474                           	opt stack 0
  6475                           
  6476                           ; 1 bytes @ 0x57
  6477  0000B7                     	ds	1
  6478  0000B8                     printGUID@nodeid:
  6479                           	opt stack 0
  6480  0000B8                     printMDF@nodeid:
  6481                           	opt stack 0
  6482  0000B8                     printNodeFirmwareVersion@nodeid:
  6483                           	opt stack 0
  6484                           
  6485                           ; 1 bytes @ 0x58
  6486  0000B8                     	ds	1
  6487  0000B9                     printMDF@value:
  6488                           	opt stack 0
  6489  0000B9                     printGUID@buf:
  6490                           	opt stack 0
  6491  0000B9                     printNodeFirmwareVersion@buf:
  6492                           	opt stack 0
  6493                           
  6494                           ; 3 bytes @ 0x59
  6495  0000B9                     	ds	1
  6496  0000BA                     readRegisterExtended@nodeid:
  6497                           	opt stack 0
  6498  0000BA                     writeRegisterExtended@nodeid:
  6499                           	opt stack 0
  6500  0000BA                     printMDF@p:
  6501                           	opt stack 0
  6502                           
  6503                           ; 2 bytes @ 0x5A
  6504  0000BA                     	ds	2
  6505  0000BC                     printGUID@value:
  6506                           	opt stack 0
  6507  0000BC                     printMDF@i:
  6508                           	opt stack 0
  6509  0000BC                     printNodeFirmwareVersion@value:
  6510                           	opt stack 0
  6511                           
  6512                           ; 1 bytes @ 0x5C
  6513  0000BC                     	ds	1
  6514  0000BD                     printGUID@i:
  6515                           	opt stack 0
  6516  0000BD                     printNodeFirmwareVersion@i:
  6517                           	opt stack 0
  6518                           
  6519                           ; 1 bytes @ 0x5D
  6520  0000BD                     	ds	1
  6521  0000BE                     _findNodes$1711:
  6522                           	opt stack 0
  6523                           
  6524                           ; 2 bytes @ 0x5E
  6525  0000BE                     	ds	2
  6526  0000C0                     findNodes@nFound:
  6527                           	opt stack 0
  6528                           
  6529                           ; 1 bytes @ 0x60
  6530  0000C0                     	ds	1
  6531  0000C1                     findNodes@value:
  6532                           	opt stack 0
  6533                           
  6534                           ; 1 bytes @ 0x61
  6535  0000C1                     	ds	1
  6536  0000C2                     findNodes@bDot:
  6537                           	opt stack 0
  6538                           
  6539                           ; 1 bytes @ 0x62
  6540  0000C2                     	ds	1
  6541  0000C3                     findNodes@i:
  6542                           	opt stack 0
  6543                           
  6544                           ; 1 bytes @ 0x63
  6545  0000C3                     	ds	1
  6546  0000C4                     ??_main:
  6547                           
  6548                           ; 0 bytes @ 0x64
  6549  0000C4                     	ds	1
  6550  0000C5                     main@c:
  6551                           	opt stack 0
  6552                           
  6553                           ; 1 bytes @ 0x65
  6554  0000C5                     	ds	1
  6555                           tblptru	equ	0xFF8
  6556                           tblptrh	equ	0xFF7
  6557                           tblptrl	equ	0xFF6
  6558                           tablat	equ	0xFF5
  6559                           prodh	equ	0xFF4
  6560                           prodl	equ	0xFF3
  6561                           intcon	equ	0xFF2
  6562                           indf0	equ	0xFEF
  6563                           postinc0	equ	0xFEE
  6564                           fsr0h	equ	0xFEA
  6565                           fsr0l	equ	0xFE9
  6566                           wreg	equ	0xFE8
  6567                           indf1	equ	0xFE7
  6568                           postinc1	equ	0xFE6
  6569                           postdec1	equ	0xFE5
  6570                           fsr1h	equ	0xFE2
  6571                           fsr1l	equ	0xFE1
  6572                           indf2	equ	0xFDF
  6573                           postinc2	equ	0xFDE
  6574                           postdec2	equ	0xFDD
  6575                           plusw2	equ	0xFDB
  6576                           fsr2h	equ	0xFDA
  6577                           fsr2l	equ	0xFD9
  6578                           status	equ	0xFD8
  6579                           
  6580                           	psect	cstackCOMRAM
  6581  000001                     __pcstackCOMRAM:
  6582                           	opt stack 0
  6583  000001                     ?__RegsToCANID:
  6584                           	opt stack 0
  6585  000001                     ?i1_WriteTimer0:
  6586                           	opt stack 0
  6587  000001                     ?_fifo_write:
  6588                           	opt stack 0
  6589  000001                     ?__ECANPointBuffer:
  6590                           	opt stack 0
  6591  000001                     ?i1_fifo_getFree:
  6592                           	opt stack 0
  6593  000001                     ReadUSART@data:
  6594                           	opt stack 0
  6595  000001                     __RegsToCANID@ptr:
  6596                           	opt stack 0
  6597  000001                     fifo_write@f:
  6598                           	opt stack 0
  6599  000001                     i1fifo_getFree@f:
  6600                           	opt stack 0
  6601  000001                     i1WriteTimer0@timer0:
  6602                           	opt stack 0
  6603                           
  6604                           ; 2 bytes @ 0x0
  6605  000001                     	ds	2
  6606  000003                     ??i1_fifo_getFree:
  6607  000003                     __RegsToCANID@val:
  6608                           	opt stack 0
  6609  000003                     fifo_write@buf:
  6610                           	opt stack 0
  6611  000003                     i1WriteTimer0@timer:
  6612                           	opt stack 0
  6613                           
  6614                           ; 2 bytes @ 0x2
  6615  000003                     	ds	1
  6616  000004                     __RegsToCANID@type:
  6617                           	opt stack 0
  6618  000004                     __ECANPointBuffer@b:
  6619                           	opt stack 0
  6620                           
  6621                           ; 1 bytes @ 0x3
  6622  000004                     	ds	1
  6623  000005                     ??__RegsToCANID:
  6624  000005                     __ECANPointBuffer@pt:
  6625                           	opt stack 0
  6626  000005                     fifo_write@nbytes:
  6627                           	opt stack 0
  6628                           
  6629                           ; 4 bytes @ 0x4
  6630  000005                     	ds	2
  6631  000007                     __RegsToCANID@Value:
  6632                           	opt stack 0
  6633                           
  6634                           ; 1 bytes @ 0x6
  6635  000007                     	ds	1
  6636  000008                     ?_ECANReceiveMessage:
  6637                           	opt stack 0
  6638  000008                     ECANReceiveMessage@data:
  6639                           	opt stack 0
  6640                           
  6641                           ; 2 bytes @ 0x7
  6642  000008                     	ds	1
  6643  000009                     ??_fifo_write:
  6644                           
  6645                           ; 0 bytes @ 0x8
  6646  000009                     	ds	1
  6647  00000A                     ECANReceiveMessage@dataLen:
  6648                           	opt stack 0
  6649                           
  6650                           ; 1 bytes @ 0x9
  6651  00000A                     	ds	1
  6652  00000B                     ECANReceiveMessage@msgFlags:
  6653                           	opt stack 0
  6654                           
  6655                           ; 1 bytes @ 0xA
  6656  00000B                     	ds	1
  6657  00000C                     ECANReceiveMessage@savedPtr:
  6658                           	opt stack 0
  6659                           
  6660                           ; 2 bytes @ 0xB
  6661  00000C                     	ds	1
  6662  00000D                     fifo_write@p:
  6663                           	opt stack 0
  6664                           
  6665                           ; 2 bytes @ 0xC
  6666  00000D                     	ds	1
  6667  00000E                     ECANReceiveMessage@id:
  6668                           	opt stack 0
  6669                           
  6670                           ; 1 bytes @ 0xD
  6671  00000E                     	ds	1
  6672  00000F                     ECANReceiveMessage@i:
  6673                           	opt stack 0
  6674  00000F                     fifo_write@i:
  6675                           	opt stack 0
  6676                           
  6677                           ; 4 bytes @ 0xE
  6678  00000F                     	ds	1
  6679  000010                     ECANReceiveMessage@mode:
  6680                           	opt stack 0
  6681                           
  6682                           ; 1 bytes @ 0xF
  6683  000010                     	ds	1
  6684  000011                     ECANReceiveMessage@temp:
  6685                           	opt stack 0
  6686                           
  6687                           ; 1 bytes @ 0x10
  6688  000011                     	ds	1
  6689  000012                     ECANReceiveMessage@ptr:
  6690                           	opt stack 0
  6691                           
  6692                           ; 2 bytes @ 0x11
  6693  000012                     	ds	2
  6694  000014                     ??_Interrupt:
  6695                           
  6696                           ; 0 bytes @ 0x13
  6697  000014                     	ds	9
  6698  00001D                     Interrupt@c:
  6699                           	opt stack 0
  6700                           
  6701                           ; 1 bytes @ 0x1C
  6702  00001D                     	ds	1
  6703  00001E                     Interrupt@fail:
  6704                           	opt stack 0
  6705                           
  6706                           ; 1 bytes @ 0x1D
  6707  00001E                     	ds	1
  6708  00001F                     ?_WriteTimer0:
  6709                           	opt stack 0
  6710  00001F                     ?_fifo_init:
  6711                           	opt stack 0
  6712  00001F                     ?_OpenUSART:
  6713                           	opt stack 0
  6714  00001F                     ?_WriteTimer3:
  6715                           	opt stack 0
  6716  00001F                     ?_Write_b_eep:
  6717                           	opt stack 0
  6718  00001F                     ??_isdigit:
  6719  00001F                     ?_Read_b_eep:
  6720                           	opt stack 0
  6721  00001F                     ?_fifo_getFree:
  6722                           	opt stack 0
  6723  00001F                     ?_fifo_read:
  6724                           	opt stack 0
  6725  00001F                     ?_memset:
  6726                           	opt stack 0
  6727  00001F                     ?_strcpy:
  6728                           	opt stack 0
  6729  00001F                     ?_strchr:
  6730                           	opt stack 0
  6731  00001F                     ?_strlen:
  6732                           	opt stack 0
  6733  00001F                     ?_memcpy:
  6734                           	opt stack 0
  6735  00001F                     ?_ReadTimer3:
  6736                           	opt stack 0
  6737  00001F                     ?_strcat:
  6738                           	opt stack 0
  6739  00001F                     ?___lwdiv:
  6740                           	opt stack 0
  6741  00001F                     ?___lwmod:
  6742                           	opt stack 0
  6743  00001F                     ?___lldiv:
  6744                           	opt stack 0
  6745  00001F                     ECANSetOperationMode@mode:
  6746                           	opt stack 0
  6747  00001F                     nibbleFromChar@c:
  6748                           	opt stack 0
  6749  00001F                     OpenTimer0@config:
  6750                           	opt stack 0
  6751  00001F                     OpenTimer3@config:
  6752                           	opt stack 0
  6753  00001F                     WriteUSART@data:
  6754                           	opt stack 0
  6755  00001F                     toupper@c:
  6756                           	opt stack 0
  6757  00001F                     fifo_init@f:
  6758                           	opt stack 0
  6759  00001F                     fifo_read@f:
  6760                           	opt stack 0
  6761  00001F                     fifo_getFree@f:
  6762                           	opt stack 0
  6763  00001F                     _init_crc8$2208:
  6764                           	opt stack 0
  6765  00001F                     Read_b_eep@badd:
  6766                           	opt stack 0
  6767  00001F                     Write_b_eep@badd:
  6768                           	opt stack 0
  6769  00001F                     WriteTimer0@timer0:
  6770                           	opt stack 0
  6771  00001F                     WriteTimer3@timer3:
  6772                           	opt stack 0
  6773  00001F                     OpenUSART@spbrg:
  6774                           	opt stack 0
  6775  00001F                     ___lwdiv@dividend:
  6776                           	opt stack 0
  6777  00001F                     ___lwmod@dividend:
  6778                           	opt stack 0
  6779  00001F                     memcpy@d1:
  6780                           	opt stack 0
  6781  00001F                     memset@p1:
  6782                           	opt stack 0
  6783  00001F                     strcat@to:
  6784                           	opt stack 0
  6785  00001F                     strchr@ptr:
  6786                           	opt stack 0
  6787  00001F                     strcpy@to:
  6788                           	opt stack 0
  6789  00001F                     strlen@s:
  6790                           	opt stack 0
  6791  00001F                     ___lldiv@dividend:
  6792                           	opt stack 0
  6793                           
  6794                           ; 4 bytes @ 0x1E
  6795  00001F                     	ds	1
  6796  000020                     ?_putsUSART:
  6797                           	opt stack 0
  6798  000020                     ??_printBinary:
  6799  000020                     ?_strichr:
  6800                           	opt stack 0
  6801  000020                     _isdigit$3283:
  6802                           	opt stack 0
  6803  000020                     putsUSART@data:
  6804                           	opt stack 0
  6805  000020                     strichr@ptr:
  6806                           	opt stack 0
  6807                           
  6808                           ; 2 bytes @ 0x1F
  6809  000020                     	ds	1
  6810  000021                     ?__CANIDToRegs:
  6811                           	opt stack 0
  6812  000021                     Write_b_eep@bdat:
  6813                           	opt stack 0
  6814  000021                     OpenUSART@config:
  6815                           	opt stack 0
  6816  000021                     isdigit@c:
  6817                           	opt stack 0
  6818  000021                     __CANIDToRegs@ptr:
  6819                           	opt stack 0
  6820  000021                     fifo_init@buf:
  6821                           	opt stack 0
  6822  000021                     fifo_read@buf:
  6823                           	opt stack 0
  6824  000021                     init_crc8@j:
  6825                           	opt stack 0
  6826  000021                     WriteTimer0@timer:
  6827                           	opt stack 0
  6828  000021                     ReadTimer3@timer:
  6829                           	opt stack 0
  6830  000021                     WriteTimer3@timer:
  6831                           	opt stack 0
  6832  000021                     ___lwdiv@divisor:
  6833                           	opt stack 0
  6834  000021                     ___lwmod@divisor:
  6835                           	opt stack 0
  6836  000021                     memcpy@s1:
  6837                           	opt stack 0
  6838  000021                     memset@c:
  6839                           	opt stack 0
  6840  000021                     strcat@from:
  6841                           	opt stack 0
  6842  000021                     strchr@chr:
  6843                           	opt stack 0
  6844  000021                     strcpy@from:
  6845                           	opt stack 0
  6846  000021                     strlen@cp:
  6847                           	opt stack 0
  6848                           
  6849                           ; 2 bytes @ 0x20
  6850  000021                     	ds	1
  6851  000022                     ??_putsUSART:
  6852  000022                     printBinary@value:
  6853                           	opt stack 0
  6854  000022                     changeBaudrate@nBaud:
  6855                           	opt stack 0
  6856  000022                     Write_b_eep@GIE_BIT_VAL:
  6857                           	opt stack 0
  6858  000022                     strichr@chr:
  6859                           	opt stack 0
  6860                           
  6861                           ; 2 bytes @ 0x21
  6862  000022                     	ds	1
  6863  000023                     ?_setFilter:
  6864                           	opt stack 0
  6865  000023                     ??_strchr:
  6866  000023                     ??_strnicmp:
  6867  000023                     ?_hexStringToBytes:
  6868                           	opt stack 0
  6869  000023                     ?___wmul:
  6870                           	opt stack 0
  6871  000023                     init_app_eeprom@i:
  6872                           	opt stack 0
  6873  000023                     init_crc8@crc:
  6874                           	opt stack 0
  6875  000023                     ___lwdiv@counter:
  6876                           	opt stack 0
  6877  000023                     ___lwmod@counter:
  6878                           	opt stack 0
  6879  000023                     printBinary@i:
  6880                           	opt stack 0
  6881  000023                     fifo_init@size:
  6882                           	opt stack 0
  6883  000023                     fifo_read@nbytes:
  6884                           	opt stack 0
  6885  000023                     hexStringToBytes@buf:
  6886                           	opt stack 0
  6887  000023                     memcpy@n:
  6888                           	opt stack 0
  6889  000023                     memset@n:
  6890                           	opt stack 0
  6891  000023                     strcat@cp:
  6892                           	opt stack 0
  6893  000023                     strcpy@cp:
  6894                           	opt stack 0
  6895  000023                     ___wmul@multiplier:
  6896                           	opt stack 0
  6897  000023                     setFilter@val:
  6898                           	opt stack 0
  6899  000023                     __CANIDToRegs@val:
  6900                           	opt stack 0
  6901  000023                     ___lldiv@divisor:
  6902                           	opt stack 0
  6903                           
  6904                           ; 4 bytes @ 0x22
  6905  000023                     	ds	1
  6906  000024                     init_crc8@i:
  6907                           	opt stack 0
  6908  000024                     ___lwdiv@quotient:
  6909                           	opt stack 0
  6910                           
  6911                           ; 2 bytes @ 0x23
  6912  000024                     	ds	1
  6913  000025                     getCANFrame@pid:
  6914                           	opt stack 0
  6915  000025                     hexStringToBytes@size:
  6916                           	opt stack 0
  6917  000025                     strnicmp@r:
  6918                           	opt stack 0
  6919  000025                     memset@p:
  6920                           	opt stack 0
  6921  000025                     ___wmul@multiplicand:
  6922                           	opt stack 0
  6923  000025                     strcspn@i:
  6924                           	opt stack 0
  6925  000025                     strspn@i:
  6926                           	opt stack 0
  6927                           
  6928                           ; 2 bytes @ 0x24
  6929  000025                     	ds	1
  6930  000026                     ??_crc8:
  6931  000026                     hexStringToBytes@inhex:
  6932                           	opt stack 0
  6933                           
  6934                           ; 2 bytes @ 0x25
  6935  000026                     	ds	1
  6936  000027                     setFilter@bPersistent:
  6937                           	opt stack 0
  6938  000027                     __CANIDToRegs@type:
  6939                           	opt stack 0
  6940  000027                     ___llmod@counter:
  6941                           	opt stack 0
  6942                           
  6943                           ; 1 bytes @ 0x26
  6944  000027                     	ds	1
  6945  000028                     tblptru	equ	0xFF8
  6946                           tblptrh	equ	0xFF7
  6947                           tblptrl	equ	0xFF6
  6948                           tablat	equ	0xFF5
  6949                           prodh	equ	0xFF4
  6950                           prodl	equ	0xFF3
  6951                           intcon	equ	0xFF2
  6952                           indf0	equ	0xFEF
  6953                           postinc0	equ	0xFEE
  6954                           fsr0h	equ	0xFEA
  6955                           fsr0l	equ	0xFE9
  6956                           wreg	equ	0xFE8
  6957                           indf1	equ	0xFE7
  6958                           postinc1	equ	0xFE6
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           plusw2	equ	0xFDB
  6966                           fsr2h	equ	0xFDA
  6967                           fsr2l	equ	0xFD9
  6968                           status	equ	0xFD8
  6969                           
  6970                           ; 0 bytes @ 0x27
  6971 ;;
  6972 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6973 ;;
  6974 ;; *************** function _main *****************
  6975 ;; Defined at:
  6976 ;;		line 301 in file "main.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  argc            2   20[BANK1 ] int 
  6979 ;;  argv            3   22[BANK1 ] PTR PTR unsigned char 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  c               1  101[BANK0 ] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  2   20[BANK1 ] int 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : F/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6991 ;;      Params:         0       0       5       0       0       0       0
  6992 ;;      Locals:         0       1       0       0       0       0       0
  6993 ;;      Temps:          0       1       0       0       0       0       0
  6994 ;;      Totals:         0       2       5       0       0       0       0
  6995 ;;Total ram usage:        7 bytes
  6996 ;; Hardware stack levels required when called:   11
  6997 ;; This function calls:
  6998 ;;		_fifo_getFree
  6999 ;;		_fifo_init
  7000 ;;		_init_crc8
  7001 ;;		_Read_b_eep
  7002 ;;		_vscp_restoreDefaults
  7003 ;;		_init
  7004 ;;		_putsUSART
  7005 ;;		_printFirmwareVersion
  7006 ;;		_printMode
  7007 ;;		_fifo_read
  7008 ;;		_ECANSetOperationMode
  7009 ;;		_doModeVerbose
  7010 ;;		_doModeVscp
  7011 ;;		_doModeSLCAN
  7012 ;;		_doModeVscpNode
  7013 ;; This function is called by:
  7014 ;;		Startup code after reset
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text0
  7019  00401A                     __ptext0:
  7020                           	opt stack 0
  7021  00401A                     _main:
  7022                           	opt stack 20
  7023                           
  7024                           ;main.c: 302: ledFunctionality = 1;
  7025                           
  7026                           ;incstack = 0
  7027                           ;incstack = 0
  7028  00401A  0E01               	movlw	1
  7029  00401C  6E41               	movwf	_ledFunctionality,c	;volatile
  7030                           
  7031                           ;main.c: 305: caps.maxVscpFrames = 1;
  7032  00401E  0100               	movlb	0	; () banked
  7033  004020  6FFC               	movwf	_caps& (0+255),b
  7034                           
  7035                           ;main.c: 306: caps.maxCanalFrames = 1;
  7036  004022  6FFD               	movwf	(_caps+1)& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;main.c: 311: fifo_init( &serialInputFifo, serial_inputBuffer, sizeof ( serial_inputBuff
      +                          er));
  7040  004024  0E00               	movlw	high _serialInputFifo
  7041  004026  6E20               	movwf	?_fifo_init+1,c
  7042  004028  0EF4               	movlw	low _serialInputFifo
  7043  00402A  6E1F               	movwf	?_fifo_init,c
  7044  00402C  0102               	movlb	2	; () banked
  7045  00402E  0E02               	movlw	high _serial_inputBuffer
  7046  004030  6E22               	movwf	?_fifo_init+3,c
  7047  004032  0E00               	movlw	low _serial_inputBuffer
  7048  004034  6E21               	movwf	?_fifo_init+2,c
  7049  004036  6A24               	clrf	?_fifo_init+5,c
  7050  004038  0E80               	movlw	128
  7051  00403A  6E23               	movwf	?_fifo_init+4,c
  7052  00403C  ECAE  F033         	call	_fifo_init	;wreg free
  7053                           
  7054                           ;main.c: 312: fifo_init( &canInputFifo, can_inputBuffer, sizeof ( can_inputBuffer ) );
  7055  004040  0E33               	movlw	low _canInputFifo
  7056  004042  6E1F               	movwf	?_fifo_init,c
  7057  004044  0E00               	movlw	high _canInputFifo
  7058  004046  6E20               	movwf	?_fifo_init+1,c
  7059  004048  0E0F               	movlw	15
  7060  00404A  6E20               	movwf	?_fifo_init+1,c
  7061  00404C  0E5F               	movlw	__accesstop+-1
  7062  00404E  641F               	cpfsgt	?_fifo_init,c
  7063  004050  6A20               	clrf	?_fifo_init+1,c
  7064  004052  0E04               	movlw	high _can_inputBuffer
  7065  004054  6E22               	movwf	?_fifo_init+3,c
  7066  004056  0E00               	movlw	low _can_inputBuffer
  7067  004058  6E21               	movwf	?_fifo_init+2,c
  7068  00405A  0E01               	movlw	1
  7069  00405C  6E24               	movwf	?_fifo_init+5,c
  7070  00405E  0EEE               	movlw	238
  7071  004060  6E23               	movwf	?_fifo_init+4,c
  7072  004062  ECAE  F033         	call	_fifo_init	;wreg free
  7073                           
  7074                           ;main.c: 315: init_crc8();
  7075  004066  EC24  F031         	call	_init_crc8	;wreg free
  7076                           
  7077                           ;main.c: 319: if ( ( 0x55 != Read_b_eep(0x01) ) ||
  7078                           ;main.c: 320: ( 0xaa != Read_b_eep(0x02) ) ) {
  7079  00406A  6A20               	clrf	?_Read_b_eep+1,c
  7080  00406C  0E01               	movlw	1
  7081  00406E  6E1F               	movwf	?_Read_b_eep,c
  7082  004070  EC9D  F035         	call	_Read_b_eep	;wreg free
  7083  004074  0A55               	xorlw	85
  7084  004076  E107               	bnz	l15232
  7085  004078  6A20               	clrf	?_Read_b_eep+1,c
  7086  00407A  0E02               	movlw	2
  7087  00407C  6E1F               	movwf	?_Read_b_eep,c
  7088  00407E  EC9D  F035         	call	_Read_b_eep	;wreg free
  7089  004082  0AAA               	xorlw	170
  7090  004084  A4D8               	btfss	status,2,c
  7091  004086                     l15232:
  7092                           
  7093                           ;main.c: 321: vscp_restoreDefaults();
  7094  004086  ECB8  F035         	call	_vscp_restoreDefaults	;wreg free
  7095                           
  7096                           ;main.c: 322: }
  7097                           ;main.c: 325: init();
  7098  00408A  EC1F  F032         	call	_init	;wreg free
  7099                           
  7100                           ;main.c: 329: _delay((unsigned long)((10)*(40000000/4000.0)));
  7101  00408E  0E82               	movlw	130
  7102  004090  0100               	movlb	0	; () banked
  7103  004092  6FC4               	movwf	??_main& (0+255),b
  7104  004094  0EDD               	movlw	221
  7105  004096                     u25357:
  7106  004096  2EE8               	decfsz	wreg,f,c
  7107  004098  D7FE               	goto	u25357
  7108  00409A  2FC4               	decfsz	??_main& (0+255),f,b
  7109  00409C  D7FC               	goto	u25357
  7110  00409E  D000               	nop2	
  7111                           
  7112                           ;main.c: 333: putsUSART((char*) "\r\nFrankfurt RS-232 CAN4VSCP module\r\n");
  7113  0040A0  0E78               	movlw	high STR_1
  7114  0040A2  6E21               	movwf	?_putsUSART+1,c
  7115  0040A4  0E31               	movlw	low STR_1
  7116  0040A6  6E20               	movwf	?_putsUSART,c
  7117  0040A8  ECD5  F032         	call	_putsUSART	;wreg free
  7118                           
  7119                           ;main.c: 334: putsUSART((char*) "Copyright (C) 2014-2015 Paradise of the Frog AB, Sweden
      +                          \r\n");
  7120  0040AC  0E71               	movlw	high STR_2
  7121  0040AE  6E21               	movwf	?_putsUSART+1,c
  7122  0040B0  0E57               	movlw	low STR_2
  7123  0040B2  6E20               	movwf	?_putsUSART,c
  7124  0040B4  ECD5  F032         	call	_putsUSART	;wreg free
  7125                           
  7126                           ;main.c: 335: putsUSART((char*) "http://www.paradiseofthefrog.com\r\n");
  7127  0040B8  0E78               	movlw	high STR_3
  7128  0040BA  6E21               	movwf	?_putsUSART+1,c
  7129  0040BC  0EC3               	movlw	low STR_3
  7130  0040BE  6E20               	movwf	?_putsUSART,c
  7131  0040C0  ECD5  F032         	call	_putsUSART	;wreg free
  7132                           
  7133                           ;main.c: 336: printFirmwareVersion();
  7134  0040C4  EC38  F030         	call	_printFirmwareVersion	;wreg free
  7135                           
  7136                           ;main.c: 337: printMode();
  7137  0040C8  ECEB  F030         	call	_printMode	;wreg free
  7138                           
  7139                           ;main.c: 341: if ( 0 != mode ) {
  7140  0040CC  0100               	movlb	0	; () banked
  7141  0040CE  51F1               	movf	_mode& (0+255),w,b
  7142  0040D0  E037               	bz	l15266
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;main.c: 343: uint8_t c;
  7146                           ;main.c: 345: putsUSART((char *) "Press 'v' within three seconds to enter verbose mode\r
      +                          \n");
  7147  0040D2  0E72               	movlw	high STR_4
  7148  0040D4  6E21               	movwf	?_putsUSART+1,c
  7149  0040D6  0E70               	movlw	low STR_4
  7150  0040D8  6E20               	movwf	?_putsUSART,c
  7151  0040DA  ECD5  F032         	call	_putsUSART	;wreg free
  7152                           
  7153                           ;main.c: 347: timekeeper = 0;
  7154  0040DE  0100               	movlb	0	; () banked
  7155  0040E0  6BDE               	clrf	_timekeeper& (0+255),b	;volatile
  7156  0040E2  6BDF               	clrf	(_timekeeper+1)& (0+255),b	;volatile
  7157  0040E4  6BE0               	clrf	(_timekeeper+2)& (0+255),b	;volatile
  7158  0040E6  6BE1               	clrf	(_timekeeper+3)& (0+255),b	;volatile
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;main.c: 348: ledFunctionality = 6;
  7162  0040E8  0E06               	movlw	6
  7163  0040EA  6E41               	movwf	_ledFunctionality,c	;volatile
  7164                           
  7165                           ;main.c: 349: while (timekeeper < 3000) {
  7166  0040EC  D020               	goto	l15264
  7167  0040EE                     l464:
  7168                           
  7169                           ; BSR set to: 0
  7170  0040EE  0004               	clrwdt		;# 
  7171                           
  7172                           ;main.c: 351: (INTCONbits.GIE = 0);
  7173  0040F0  9EF2               	bcf	intcon,7,c	;volatile
  7174                           
  7175                           ;main.c: 352: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
  7176  0040F2  0100               	movlb	0	; () banked
  7177  0040F4  0E00               	movlw	high _serialInputFifo
  7178  0040F6  6E20               	movwf	?_fifo_read+1,c
  7179  0040F8  0EF4               	movlw	low _serialInputFifo
  7180  0040FA  6E1F               	movwf	?_fifo_read,c
  7181  0040FC  0E00               	movlw	high main@c
  7182  0040FE  6E22               	movwf	?_fifo_read+3,c
  7183  004100  0EC5               	movlw	low main@c
  7184  004102  6E21               	movwf	?_fifo_read+2,c
  7185  004104  6A24               	clrf	?_fifo_read+5,c
  7186  004106  0E01               	movlw	1
  7187  004108  6E23               	movwf	?_fifo_read+4,c
  7188  00410A  ECA7  F029         	call	_fifo_read	;wreg free
  7189  00410E  041F               	decf	?_fifo_read,w,c
  7190  004110  1020               	iorwf	?_fifo_read+1,w,c
  7191  004112  E10C               	bnz	l465
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;main.c: 353: (INTCONbits.GIE = 1);
  7195  004114  8EF2               	bsf	intcon,7,c	;volatile
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;main.c: 354: if ('v' == c) {
  7199  004116  51C5               	movf	main@c& (0+255),w,b
  7200  004118  0A76               	xorlw	118
  7201  00411A  E108               	bnz	l465
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;main.c: 355: mode = 0;
  7205  00411C  6BF1               	clrf	_mode& (0+255),b
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;main.c: 356: putsUSART((char *) "Temporary verbose mode set\r\n");
  7209  00411E  0E7A               	movlw	high STR_5
  7210  004120  6E21               	movwf	?_putsUSART+1,c
  7211  004122  0E29               	movlw	low STR_5
  7212  004124  6E20               	movwf	?_putsUSART,c
  7213  004126  ECD5  F032         	call	_putsUSART	;wreg free
  7214                           
  7215                           ;main.c: 357: break;
  7216  00412A  D00A               	goto	l15266
  7217  00412C                     l465:
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;main.c: 358: }
  7221                           ;main.c: 359: }
  7222                           ;main.c: 360: (INTCONbits.GIE = 1);
  7223  00412C  8EF2               	bsf	intcon,7,c	;volatile
  7224  00412E                     l15264:
  7225                           
  7226                           ; BSR set to: 0
  7227  00412E  0EB8               	movlw	184
  7228  004130  5DDE               	subwf	_timekeeper& (0+255),w,b	;volatile
  7229  004132  0E0B               	movlw	11
  7230  004134  59DF               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
  7231  004136  0E00               	movlw	0
  7232  004138  59E0               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
  7233  00413A  0E00               	movlw	0
  7234  00413C  59E1               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
  7235  00413E  E3D7               	bnc	l464
  7236  004140                     l15266:
  7237                           
  7238                           ;main.c: 361: }
  7239                           ;main.c: 362: }
  7240                           ;main.c: 364: ledFunctionality = 1;
  7241  004140  0E01               	movlw	1
  7242  004142  6E41               	movwf	_ledFunctionality,c	;volatile
  7243                           
  7244                           ;main.c: 369: switch ( Read_b_eep(0x07) ) {
  7245  004144  D01D               	goto	l15282
  7246  004146                     l469:
  7247                           
  7248                           ;main.c: 372: bSilent = 0;
  7249  004146  0101               	movlb	1	; () banked
  7250  004148  6B02               	clrf	_bSilent& (0+255),b
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;main.c: 373: ECANSetOperationMode( ECAN_OP_MODE_NORMAL );
  7254  00414A  0E00               	movlw	0
  7255  00414C  EC6A  F035         	call	_ECANSetOperationMode
  7256                           
  7257                           ;main.c: 374: break;
  7258  004150  D025               	goto	l475
  7259  004152                     l15270:
  7260                           
  7261                           ;main.c: 377: bSilent = 1;
  7262  004152  0E01               	movlw	1
  7263  004154  0101               	movlb	1	; () banked
  7264  004156  6F02               	movwf	_bSilent& (0+255),b
  7265                           
  7266                           ; BSR set to: 1
  7267                           ;main.c: 378: ECANSetOperationMode( ECAN_OP_MODE_NORMAL );
  7268  004158  0E00               	movlw	0
  7269  00415A  EC6A  F035         	call	_ECANSetOperationMode
  7270                           
  7271                           ;main.c: 379: break;
  7272  00415E  D01E               	goto	l475
  7273  004160                     l472:
  7274                           
  7275                           ;main.c: 382: bSilent = 0;
  7276  004160  0101               	movlb	1	; () banked
  7277  004162  6B02               	clrf	_bSilent& (0+255),b
  7278                           
  7279                           ; BSR set to: 1
  7280                           ;main.c: 383: ECANSetOperationMode( ECAN_OP_MODE_LISTEN );
  7281  004164  0E60               	movlw	96
  7282  004166  EC6A  F035         	call	_ECANSetOperationMode
  7283                           
  7284                           ;main.c: 384: break;
  7285  00416A  D018               	goto	l475
  7286  00416C                     l473:
  7287                           
  7288                           ;main.c: 387: bSilent = 0;
  7289  00416C  0101               	movlb	1	; () banked
  7290  00416E  6B02               	clrf	_bSilent& (0+255),b
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;main.c: 388: ECANSetOperationMode( ECAN_OP_MODE_LOOP );
  7294  004170  0E40               	movlw	64
  7295  004172  EC6A  F035         	call	_ECANSetOperationMode
  7296                           
  7297                           ;main.c: 389: break;
  7298  004176  D012               	goto	l475
  7299  004178                     l15278:
  7300                           
  7301                           ;main.c: 392: ECANSetOperationMode( 0x20 );
  7302  004178  0E20               	movlw	32
  7303  00417A  EC6A  F035         	call	_ECANSetOperationMode
  7304                           
  7305                           ;main.c: 393: break;
  7306  00417E  D00E               	goto	l475
  7307  004180                     l15282:
  7308  004180  6A20               	clrf	?_Read_b_eep+1,c
  7309  004182  0E07               	movlw	7
  7310  004184  6E1F               	movwf	?_Read_b_eep,c
  7311  004186  EC9D  F035         	call	_Read_b_eep	;wreg free
  7312                           
  7313                           ; Switch size 1, requested type "space"
  7314                           ; Number of cases is 4, Range of values is 1 to 4
  7315                           ; switch strategies available:
  7316                           ; Name         Instructions Cycles
  7317                           ; simple_byte           13     7 (average)
  7318                           ;	Chosen strategy is simple_byte
  7319  00418A  0A01               	xorlw	1	; case 1
  7320  00418C  E0DC               	bz	l469
  7321  00418E  0A03               	xorlw	3	; case 2
  7322  004190  E0E0               	bz	l15270
  7323  004192  0A01               	xorlw	1	; case 3
  7324  004194  E0E5               	bz	l472
  7325  004196  0A07               	xorlw	7	; case 4
  7326  004198  E0E9               	bz	l473
  7327  00419A  D7EE               	goto	l15278
  7328  00419C                     l475:
  7329  00419C  0004               	clrwdt		;# 
  7330                           
  7331                           ;main.c: 407: if ( RCSTAbits.OERR ) {
  7332  00419E  A2AB               	btfss	4011,1,c	;volatile
  7333  0041A0  D002               	goto	l476
  7334                           
  7335                           ;main.c: 408: RCSTAbits.CREN = 0;
  7336  0041A2  98AB               	bcf	4011,4,c	;volatile
  7337                           
  7338                           ;main.c: 409: RCSTAbits.CREN = 1;
  7339  0041A4  88AB               	bsf	4011,4,c	;volatile
  7340  0041A6                     l476:
  7341                           
  7342                           ;main.c: 410: }
  7343                           ;main.c: 412: (INTCONbits.GIE = 0);
  7344  0041A6  9EF2               	bcf	intcon,7,c	;volatile
  7345                           
  7346                           ;main.c: 413: if ( fifo_getFree( &serialInputFifo ) < 100 ) {
  7347  0041A8  0100               	movlb	0	; () banked
  7348  0041AA  0E00               	movlw	high _serialInputFifo
  7349  0041AC  6E20               	movwf	?_fifo_getFree+1,c
  7350  0041AE  0EF4               	movlw	low _serialInputFifo
  7351  0041B0  6E1F               	movwf	?_fifo_getFree,c
  7352  0041B2  ECB8  F02C         	call	_fifo_getFree	;wreg free
  7353  0041B6  0E64               	movlw	100
  7354  0041B8  5C1F               	subwf	?_fifo_getFree,w,c
  7355  0041BA  0E00               	movlw	0
  7356  0041BC  5820               	subwfb	?_fifo_getFree+1,w,c
  7357  0041BE  E202               	bc	l477
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;main.c: 414: PORTCbits.RC4 = 0;
  7361  0041C0  9882               	bcf	3970,4,c	;volatile
  7362                           
  7363                           ;main.c: 415: }
  7364  0041C2  D001               	goto	l478
  7365  0041C4                     l477:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;main.c: 416: else {
  7369                           ;main.c: 417: PORTCbits.RC4 = 1;
  7370  0041C4  8882               	bsf	3970,4,c	;volatile
  7371  0041C6                     l478:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;main.c: 418: }
  7375                           ;main.c: 419: (INTCONbits.GIE = 1);
  7376  0041C6  8EF2               	bsf	intcon,7,c	;volatile
  7377                           
  7378                           ;main.c: 421: if (0 == mode) {
  7379  0041C8  67F1               	tstfsz	_mode& (0+255),b
  7380  0041CA  D003               	goto	l15292
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;main.c: 422: doModeVerbose();
  7384  0041CC  ECBF  F003         	call	_doModeVerbose	;wreg free
  7385                           
  7386                           ;main.c: 423: }
  7387  0041D0  D7E5               	goto	l475
  7388  0041D2                     l15292:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;main.c: 424: else if (1 == mode) {
  7392  0041D2  05F1               	decf	_mode& (0+255),w,b
  7393  0041D4  E103               	bnz	l15296
  7394  0041D6                     l15294:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;main.c: 425: doModeVscp();
  7398  0041D6  ECA5  F015         	call	_doModeVscp	;wreg free
  7399                           
  7400                           ;main.c: 426: }
  7401  0041DA  D7E0               	goto	l475
  7402  0041DC                     l15296:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;main.c: 427: else if (2 == mode) {
  7406  0041DC  51F1               	movf	_mode& (0+255),w,b
  7407  0041DE  0A02               	xorlw	2
  7408  0041E0  E103               	bnz	l15300
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;main.c: 428: doModeSLCAN();
  7412  0041E2  ECB8  F013         	call	_doModeSLCAN	;wreg free
  7413                           
  7414                           ;main.c: 429: }
  7415  0041E6  D7DA               	goto	l475
  7416  0041E8                     l15300:
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;main.c: 430: else if (3 == mode) {
  7420  0041E8  51F1               	movf	_mode& (0+255),w,b
  7421  0041EA  0A03               	xorlw	3
  7422  0041EC  E1F4               	bnz	l15294
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;main.c: 431: doModeVscpNode();
  7426  0041EE  ECBF  F035         	call	_doModeVscpNode	;wreg free
  7427                           
  7428                           ;main.c: 432: }
  7429  0041F2  D7D4               	goto	l475
  7430  0041F4                     __end_of_main:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           indf0	equ	0xFEF
  7440                           postinc0	equ	0xFEE
  7441                           fsr0h	equ	0xFEA
  7442                           fsr0l	equ	0xFE9
  7443                           wreg	equ	0xFE8
  7444                           indf1	equ	0xFE7
  7445                           postinc1	equ	0xFE6
  7446                           postdec1	equ	0xFE5
  7447                           fsr1h	equ	0xFE2
  7448                           fsr1l	equ	0xFE1
  7449                           indf2	equ	0xFDF
  7450                           postinc2	equ	0xFDE
  7451                           postdec2	equ	0xFDD
  7452                           plusw2	equ	0xFDB
  7453                           fsr2h	equ	0xFDA
  7454                           fsr2l	equ	0xFD9
  7455                           status	equ	0xFD8
  7456                           
  7457 ;; *************** function _doModeVscpNode *****************
  7458 ;; Defined at:
  7459 ;;		line 2005 in file "main.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;		None               void
  7466 ;; Registers used:
  7467 ;;		None
  7468 ;; Tracked objects:
  7469 ;;		On entry : F/0
  7470 ;;		On exit  : F/0
  7471 ;;		Unchanged: F/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7473 ;;      Params:         0       0       0       0       0       0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0
  7476 ;;      Totals:         0       0       0       0       0       0       0
  7477 ;;Total ram usage:        0 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    3
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_main
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text1
  7488  006B7E                     __ptext1:
  7489                           	opt stack 0
  7490  006B7E                     _doModeVscpNode:
  7491                           	opt stack 27
  7492                           
  7493                           ; BSR set to: 0
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;incstack = 0
  7497                           ;incstack = 0
  7498  006B7E  0012               	return	
  7499  006B80                     __end_of_doModeVscpNode:
  7500                           	opt stack 0
  7501                           tblptru	equ	0xFF8
  7502                           tblptrh	equ	0xFF7
  7503                           tblptrl	equ	0xFF6
  7504                           tablat	equ	0xFF5
  7505                           prodh	equ	0xFF4
  7506                           prodl	equ	0xFF3
  7507                           intcon	equ	0xFF2
  7508                           indf0	equ	0xFEF
  7509                           postinc0	equ	0xFEE
  7510                           fsr0h	equ	0xFEA
  7511                           fsr0l	equ	0xFE9
  7512                           wreg	equ	0xFE8
  7513                           indf1	equ	0xFE7
  7514                           postinc1	equ	0xFE6
  7515                           postdec1	equ	0xFE5
  7516                           fsr1h	equ	0xFE2
  7517                           fsr1l	equ	0xFE1
  7518                           indf2	equ	0xFDF
  7519                           postinc2	equ	0xFDE
  7520                           postdec2	equ	0xFDD
  7521                           plusw2	equ	0xFDB
  7522                           fsr2h	equ	0xFDA
  7523                           fsr2l	equ	0xFD9
  7524                           status	equ	0xFD8
  7525                           
  7526 ;; *************** function _doModeSLCAN *****************
  7527 ;; Defined at:
  7528 ;;		line 1787 in file "main.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  id              4   54[BANK0 ] unsigned long 
  7533 ;;  dlc             1   58[BANK0 ] unsigned char 
  7534 ;;  rv              1   60[BANK0 ] enum E15660
  7535 ;;  c               1   59[BANK0 ] unsigned char 
  7536 ;; Return value:  Size  Location     Type
  7537 ;;		None               void
  7538 ;; Registers used:
  7539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7540 ;; Tracked objects:
  7541 ;;		On entry : F/0
  7542 ;;		On exit  : E/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7545 ;;      Params:         0       0       0       0       0       0       0
  7546 ;;      Locals:         0       7       0       0       0       0       0
  7547 ;;      Temps:          0       7       0       0       0       0       0
  7548 ;;      Totals:         0      14       0       0       0       0       0
  7549 ;;Total ram usage:       14 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    7
  7552 ;; This function calls:
  7553 ;;		_putsUSART
  7554 ;;		_fifo_read
  7555 ;;		_ECANSetOperationMode
  7556 ;;		_Busy_eep
  7557 ;;		_Write_b_eep
  7558 ;;		_memset
  7559 ;;		_receiveSendEventSLCAN
  7560 ;;		_strlen
  7561 ;;		_hexStringToBytes
  7562 ;;		_memcpy
  7563 ;;		_sendCANFrame
  7564 ;; This function is called by:
  7565 ;;		_main
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text2
  7570  002770                     __ptext2:
  7571                           	opt stack 0
  7572  002770                     _doModeSLCAN:
  7573                           	opt stack 23
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;main.c: 1788: uint8_t c;
  7577                           ;main.c: 1789: BOOL rv = 0;
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;incstack = 0
  7581                           ;incstack = 0
  7582  002770  6B9C               	clrf	doModeSLCAN@rv& (0+255),b
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;main.c: 1792: receiveSendEventSLCAN();
  7586  002772  ECC6  F021         	call	_receiveSendEventSLCAN	;wreg free
  7587                           
  7588                           ;main.c: 1795: (INTCONbits.GIE = 0);
  7589  002776  9EF2               	bcf	intcon,7,c	;volatile
  7590                           
  7591                           ;main.c: 1797: if ( 1 == fifo_read( &serialInputFifo, &c, 1 ) ) {
  7592  002778  0100               	movlb	0	; () banked
  7593  00277A  0E00               	movlw	high _serialInputFifo
  7594  00277C  6E20               	movwf	?_fifo_read+1,c
  7595  00277E  0EF4               	movlw	low _serialInputFifo
  7596  002780  6E1F               	movwf	?_fifo_read,c
  7597  002782  0E00               	movlw	high doModeSLCAN@c
  7598  002784  6E22               	movwf	?_fifo_read+3,c
  7599  002786  0E9B               	movlw	low doModeSLCAN@c
  7600  002788  6E21               	movwf	?_fifo_read+2,c
  7601  00278A  6A24               	clrf	?_fifo_read+5,c
  7602  00278C  0E01               	movlw	1
  7603  00278E  6E23               	movwf	?_fifo_read+4,c
  7604  002790  ECA7  F029         	call	_fifo_read	;wreg free
  7605  002794  041F               	decf	?_fifo_read,w,c
  7606  002796  1020               	iorwf	?_fifo_read+1,w,c
  7607  002798  E001 D1C8          	bnz	l16780
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;main.c: 1800: (INTCONbits.GIE = 1);
  7611  00279C  8EF2               	bsf	intcon,7,c	;volatile
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;main.c: 1802: if (0x0d != c) {
  7615  00279E  519B               	movf	doModeSLCAN@c& (0+255),w,b
  7616  0027A0  0A0D               	xorlw	13
  7617  0027A2  E101 D17C          	bz	l16768
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;main.c: 1803: cmdbuf[ pos ] = c;
  7621  0027A6  0101               	movlb	1	; () banked
  7622  0027A8  D9C3               	call	PL52	;call to abstracted procedure
  7623  0027AA  C09B  FFDF         	movff	doModeSLCAN@c,indf2
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;main.c: 1804: pos++;
  7627  0027AE  2B03               	incf	_pos& (0+255),f,b
  7628  0027B0  D1BE               	goto	l847
  7629  0027B2                     l16640:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;main.c: 1812: if (1 == strlen(cmdbuf)) {
  7633  0027B2  0101               	movlb	1	; () banked
  7634  0027B4  0E01               	movlw	high _cmdbuf
  7635  0027B6  6E20               	movwf	?_strlen+1,c
  7636  0027B8  0E05               	movlw	low _cmdbuf
  7637  0027BA  6E1F               	movwf	?_strlen,c
  7638  0027BC  EC2B  F034         	call	_strlen	;wreg free
  7639  0027C0  041F               	decf	?_strlen,w,c
  7640  0027C2  1020               	iorwf	?_strlen+1,w,c
  7641  0027C4  E001 D198          	bnz	l16770
  7642                           
  7643                           ;main.c: 1813: putsUSART((char *) "JFrankfurt RS-232\r\n");
  7644  0027C8  0E7C               	movlw	high STR_173
  7645  0027CA  6E21               	movwf	?_putsUSART+1,c
  7646  0027CC  0EE5               	movlw	low STR_173
  7647  0027CE  6E20               	movwf	?_putsUSART,c
  7648  0027D0  ECD5  F032         	call	_putsUSART	;wreg free
  7649  0027D4  D117               	goto	L4
  7650  0027D6                     l16646:
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;main.c: 1820: if (1 == strlen(cmdbuf)) {
  7654  0027D6  0101               	movlb	1	; () banked
  7655  0027D8  0E01               	movlw	high _cmdbuf
  7656  0027DA  6E20               	movwf	?_strlen+1,c
  7657  0027DC  0E05               	movlw	low _cmdbuf
  7658  0027DE  6E1F               	movwf	?_strlen,c
  7659  0027E0  EC2B  F034         	call	_strlen	;wreg free
  7660  0027E4  041F               	decf	?_strlen,w,c
  7661  0027E6  1020               	iorwf	?_strlen+1,w,c
  7662  0027E8  E001 D186          	bnz	l16770
  7663                           
  7664                           ;main.c: 1821: putsUSART((char *) "V1011\r\n");
  7665  0027EC  0E7E               	movlw	high STR_174
  7666  0027EE  6E21               	movwf	?_putsUSART+1,c
  7667  0027F0  0EC0               	movlw	low STR_174
  7668  0027F2  6E20               	movwf	?_putsUSART,c
  7669  0027F4  ECD5  F032         	call	_putsUSART	;wreg free
  7670  0027F8  D105               	goto	L4
  7671  0027FA                     l16652:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;main.c: 1828: if (1 == strlen(cmdbuf)) {
  7675  0027FA  0101               	movlb	1	; () banked
  7676  0027FC  0E01               	movlw	high _cmdbuf
  7677  0027FE  6E20               	movwf	?_strlen+1,c
  7678  002800  0E05               	movlw	low _cmdbuf
  7679  002802  6E1F               	movwf	?_strlen,c
  7680  002804  EC2B  F034         	call	_strlen	;wreg free
  7681  002808  041F               	decf	?_strlen,w,c
  7682  00280A  1020               	iorwf	?_strlen+1,w,c
  7683  00280C  E001 D174          	bnz	l16770
  7684                           
  7685                           ;main.c: 1829: putsUSART((char *) "N1977\r\n");
  7686  002810  0E7E               	movlw	high STR_175
  7687  002812  6E21               	movwf	?_putsUSART+1,c
  7688  002814  0EC8               	movlw	low STR_175
  7689  002816  6E20               	movwf	?_putsUSART,c
  7690  002818  ECD5  F032         	call	_putsUSART	;wreg free
  7691  00281C  D0F3               	goto	L4
  7692  00281E                     l16658:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;main.c: 1838: bInitiated = 1;
  7696  00281E  0E01               	movlw	1
  7697  002820  6FEE               	movwf	_bInitiated& (0+255),b
  7698                           
  7699                           ;main.c: 1839: rv = 1;
  7700  002822  D0F2               	goto	L3
  7701  002824                     l857:
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;main.c: 1844: if (!bOpen) {
  7705  002824  67EF               	tstfsz	_bOpen& (0+255),b
  7706  002826  D003               	goto	l16662
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;main.c: 1845: bInitiated = 1;
  7710  002828  0E01               	movlw	1
  7711  00282A  6FEE               	movwf	_bInitiated& (0+255),b
  7712                           
  7713                           ;main.c: 1846: rv = 1;
  7714  00282C  6F9C               	movwf	doModeSLCAN@rv& (0+255),b
  7715  00282E                     l16662:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;main.c: 1851: if (1 == strlen(cmdbuf)) {
  7719  00282E  0101               	movlb	1	; () banked
  7720  002830  0E01               	movlw	high _cmdbuf
  7721  002832  6E20               	movwf	?_strlen+1,c
  7722  002834  0E05               	movlw	low _cmdbuf
  7723  002836  6E1F               	movwf	?_strlen,c
  7724  002838  EC2B  F034         	call	_strlen	;wreg free
  7725  00283C  041F               	decf	?_strlen,w,c
  7726  00283E  1020               	iorwf	?_strlen+1,w,c
  7727  002840  E001 D15A          	bnz	l16770
  7728                           
  7729                           ;main.c: 1852: if (!bOpen && bInitiated) {
  7730  002844  0100               	movlb	0	; () banked
  7731  002846  67EF               	tstfsz	_bOpen& (0+255),b
  7732  002848  D157               	goto	l16770
  7733                           
  7734                           ; BSR set to: 0
  7735  00284A  51EE               	movf	_bInitiated& (0+255),w,b
  7736  00284C  E101 D154          	bz	l16770
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;main.c: 1853: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  7740  002850  0E00               	movlw	0
  7741  002852  EC6A  F035         	call	_ECANSetOperationMode
  7742                           
  7743                           ;main.c: 1854: bOpen = 1;
  7744  002856  0E01               	movlw	1
  7745  002858  0100               	movlb	0	; () banked
  7746  00285A  6FEF               	movwf	_bOpen& (0+255),b
  7747  00285C  D0D3               	goto	L4
  7748  00285E                     l16674:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;main.c: 1862: if (1 == strlen(cmdbuf)) {
  7752  00285E  0101               	movlb	1	; () banked
  7753  002860  0E01               	movlw	high _cmdbuf
  7754  002862  6E20               	movwf	?_strlen+1,c
  7755  002864  0E05               	movlw	low _cmdbuf
  7756  002866  6E1F               	movwf	?_strlen,c
  7757  002868  EC2B  F034         	call	_strlen	;wreg free
  7758  00286C  041F               	decf	?_strlen,w,c
  7759  00286E  1020               	iorwf	?_strlen+1,w,c
  7760  002870  E001 D142          	bnz	l16770
  7761                           
  7762                           ;main.c: 1863: if (bOpen) {
  7763  002874  0100               	movlb	0	; () banked
  7764  002876  51EF               	movf	_bOpen& (0+255),w,b
  7765  002878  E101 D0C4          	bz	L4
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;main.c: 1864: ECANSetOperationMode(0x20);
  7769  00287C  0E20               	movlw	32
  7770  00287E  EC6A  F035         	call	_ECANSetOperationMode
  7771                           
  7772                           ;main.c: 1865: bOpen = 0;
  7773  002882  0100               	movlb	0	; () banked
  7774  002884  6BEF               	clrf	_bOpen& (0+255),b
  7775  002886  D0BE               	goto	L4
  7776  002888                     l16684:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;main.c: 1878: if (bOpen && (strlen(cmdbuf) >= 10)) {
  7780  002888  51EF               	movf	_bOpen& (0+255),w,b
  7781  00288A  E101 D135          	bz	l16770
  7782                           
  7783                           ; BSR set to: 0
  7784  00288E  0101               	movlb	1	; () banked
  7785  002890  0E01               	movlw	high _cmdbuf
  7786  002892  6E20               	movwf	?_strlen+1,c
  7787  002894  0E05               	movlw	low _cmdbuf
  7788  002896  6E1F               	movwf	?_strlen,c
  7789  002898  EC2B  F034         	call	_strlen	;wreg free
  7790  00289C  0E0A               	movlw	10
  7791  00289E  5C1F               	subwf	?_strlen,w,c
  7792  0028A0  0E00               	movlw	0
  7793  0028A2  5820               	subwfb	?_strlen+1,w,c
  7794  0028A4  E201 D128          	bnc	l16770
  7795                           
  7796                           ;main.c: 1880: uint32_t id;
  7797                           ;main.c: 1881: uint8_t dlc;
  7798                           ;main.c: 1883: if (hexStringToBytes(wrkbuf, sizeof ( wrkbuf), cmdbuf) < 5) {
  7799  0028A8  0101               	movlb	1	; () banked
  7800  0028AA  0E01               	movlw	high _wrkbuf
  7801  0028AC  6E24               	movwf	?_hexStringToBytes+1,c
  7802  0028AE  0E55               	movlw	low _wrkbuf
  7803  0028B0  6E23               	movwf	?_hexStringToBytes,c
  7804  0028B2  0E50               	movlw	80
  7805  0028B4  6E25               	movwf	?_hexStringToBytes+2,c
  7806  0028B6  0E01               	movlw	high _cmdbuf
  7807  0028B8  6E27               	movwf	?_hexStringToBytes+4,c
  7808  0028BA  0E05               	movlw	low _cmdbuf
  7809  0028BC  6E26               	movwf	?_hexStringToBytes+3,c
  7810  0028BE  EC54  F02E         	call	_hexStringToBytes	;wreg free
  7811  0028C2  6F8F               	movwf	??_doModeSLCAN& (0+255),b
  7812  0028C4  0E05               	movlw	5
  7813  0028C6  5D8F               	subwf	??_doModeSLCAN& (0+255),w,b
  7814  0028C8  E201 D116          	bnc	l16770
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;main.c: 1885: }
  7818                           ;main.c: 1887: id = (uint32_t) wrkbuf[0] << 24 + (uint32_t) wrkbuf[1] << 16 + (uint32_t)
      +                           wrkbuf[2] << 8 + wrkbuf[3];
  7819  0028CC  C158  F08F         	movff	_wrkbuf+3,??_doModeSLCAN
  7820  0028D0  0E08               	movlw	8
  7821  0028D2  278F               	addwf	??_doModeSLCAN& (0+255),f,b
  7822  0028D4  C157  F090         	movff	_wrkbuf+2,??_doModeSLCAN+1
  7823  0028D8  0E10               	movlw	16
  7824  0028DA  2790               	addwf	(??_doModeSLCAN+1)& (0+255),f,b
  7825  0028DC  C156  F091         	movff	_wrkbuf+1,??_doModeSLCAN+2
  7826  0028E0  0E18               	movlw	24
  7827  0028E2  2791               	addwf	(??_doModeSLCAN+2)& (0+255),f,b
  7828  0028E4  C155  F092         	movff	_wrkbuf,??_doModeSLCAN+3
  7829  0028E8  0100               	movlb	0	; () banked
  7830  0028EA  6B93               	clrf	(??_doModeSLCAN+4)& (0+255),b
  7831  0028EC  6B94               	clrf	(??_doModeSLCAN+5)& (0+255),b
  7832  0028EE  6B95               	clrf	(??_doModeSLCAN+6)& (0+255),b
  7833  0028F0  2B91               	incf	(??_doModeSLCAN+2)& (0+255),f,b
  7834  0028F2  D001               	goto	u21700
  7835  0028F4                     u21705:
  7836  0028F4  D924               	call	PL116	;call to abstracted procedure
  7837  0028F6                     u21700:
  7838  0028F6  2F91               	decfsz	(??_doModeSLCAN+2)& (0+255),f,b
  7839  0028F8  D7FD               	goto	u21705
  7840  0028FA  2B90               	incf	(??_doModeSLCAN+1)& (0+255),f,b
  7841  0028FC  D001               	goto	u21710
  7842  0028FE                     u21715:
  7843  0028FE  D91F               	call	PL116	;call to abstracted procedure
  7844  002900                     u21710:
  7845  002900  2F90               	decfsz	(??_doModeSLCAN+1)& (0+255),f,b
  7846  002902  D7FD               	goto	u21715
  7847  002904  2B8F               	incf	??_doModeSLCAN& (0+255),f,b
  7848  002906  D001               	goto	u21720
  7849  002908                     u21725:
  7850  002908  D91A               	call	PL116	;call to abstracted procedure
  7851  00290A                     u21720:
  7852  00290A  2F8F               	decfsz	??_doModeSLCAN& (0+255),f,b
  7853  00290C  D7FD               	goto	u21725
  7854  00290E  C095  F099         	movff	??_doModeSLCAN+6,doModeSLCAN@id+3
  7855  002912  C094  F098         	movff	??_doModeSLCAN+5,doModeSLCAN@id+2
  7856  002916  C093  F097         	movff	??_doModeSLCAN+4,doModeSLCAN@id+1
  7857  00291A  C092  F096         	movff	??_doModeSLCAN+3,doModeSLCAN@id
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;main.c: 1888: dlc = vscpData[4];
  7861  00291E  C1A9  F09A         	movff	_vscpData+4,doModeSLCAN@dlc
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;main.c: 1891: if (dlc > 8) break;
  7865  002922  0E08               	movlw	8
  7866  002924  659A               	cpfsgt	doModeSLCAN@dlc& (0+255),b
  7867  002926  D001               	goto	l16700
  7868  002928  D0E7               	goto	l16770
  7869  00292A                     l16700:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;main.c: 1892: if (strlen(cmdbuf) < (10 + 2 * dlc)) break;
  7873  00292A  90D8               	bcf	status,0,c
  7874  00292C  359A               	rlcf	doModeSLCAN@dlc& (0+255),w,b
  7875  00292E  6F8F               	movwf	??_doModeSLCAN& (0+255),b
  7876  002930  6B90               	clrf	(??_doModeSLCAN+1)& (0+255),b
  7877  002932  3790               	rlcf	(??_doModeSLCAN+1)& (0+255),f,b
  7878  002934  0E0A               	movlw	10
  7879  002936  278F               	addwf	??_doModeSLCAN& (0+255),f,b
  7880  002938  0E00               	movlw	0
  7881  00293A  2390               	addwfc	(??_doModeSLCAN+1)& (0+255),f,b
  7882  00293C  0101               	movlb	1	; () banked
  7883  00293E  0E01               	movlw	high _cmdbuf
  7884  002940  6E20               	movwf	?_strlen+1,c
  7885  002942  0E05               	movlw	low _cmdbuf
  7886  002944  6E1F               	movwf	?_strlen,c
  7887  002946  EC2B  F034         	call	_strlen	;wreg free
  7888  00294A  0100               	movlb	0	; () banked
  7889  00294C  518F               	movf	??_doModeSLCAN& (0+255),w,b
  7890  00294E  5C1F               	subwf	?_strlen,w,c
  7891  002950  5190               	movf	(??_doModeSLCAN+1)& (0+255),w,b
  7892  002952  5820               	subwfb	?_strlen+1,w,c
  7893  002954  E201 D0D0          	bnc	l16770
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;main.c: 1894: memcpy(vscpData, vscpData + 5, dlc);
  7897  002958  0E01               	movlw	high _vscpData
  7898  00295A  6E20               	movwf	?_memcpy+1,c
  7899  00295C  0EA5               	movlw	low _vscpData
  7900  00295E  6E1F               	movwf	?_memcpy,c
  7901  002960  0EAA               	movlw	low (_vscpData+5)
  7902  002962  6F8F               	movwf	??_doModeSLCAN& (0+255),b
  7903  002964  0E01               	movlw	high (_vscpData+5)
  7904  002966  6F90               	movwf	(??_doModeSLCAN+1)& (0+255),b
  7905  002968  C08F  F021         	movff	??_doModeSLCAN,?_memcpy+2
  7906  00296C  C090  F022         	movff	??_doModeSLCAN+1,?_memcpy+3
  7907  002970  C09A  F023         	movff	doModeSLCAN@dlc,?_memcpy+4
  7908  002974  6A24               	clrf	?_memcpy+5,c
  7909  002976  EC8D  F033         	call	_memcpy	;wreg free
  7910                           
  7911                           ;main.c: 1896: rv = sendCANFrame(id, dlc, vscpData);
  7912  00297A  C096  F088         	movff	doModeSLCAN@id,?_sendCANFrame
  7913  00297E  C097  F089         	movff	doModeSLCAN@id+1,?_sendCANFrame+1
  7914  002982  C098  F08A         	movff	doModeSLCAN@id+2,?_sendCANFrame+2
  7915  002986  C099  F08B         	movff	doModeSLCAN@id+3,?_sendCANFrame+3
  7916  00298A  C09A  F08C         	movff	doModeSLCAN@dlc,?_sendCANFrame+4
  7917  00298E  0E01               	movlw	high _vscpData
  7918  002990  0100               	movlb	0	; () banked
  7919  002992  6F8E               	movwf	(?_sendCANFrame+6)& (0+255),b
  7920  002994  0EA5               	movlw	low _vscpData
  7921  002996  6F8D               	movwf	(?_sendCANFrame+5)& (0+255),b
  7922  002998  EC83  F034         	call	_sendCANFrame	;wreg free
  7923  00299C  D035               	goto	L3
  7924  00299E                     l16708:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;main.c: 1911: if (bOpen && (strlen(cmdbuf) == 1)) {
  7928  00299E  51EF               	movf	_bOpen& (0+255),w,b
  7929  0029A0  E101 D0AA          	bz	l16770
  7930                           
  7931                           ; BSR set to: 0
  7932  0029A4  0101               	movlb	1	; () banked
  7933  0029A6  0E01               	movlw	high _cmdbuf
  7934  0029A8  6E20               	movwf	?_strlen+1,c
  7935  0029AA  0E05               	movlw	low _cmdbuf
  7936  0029AC  6E1F               	movwf	?_strlen,c
  7937  0029AE  EC2B  F034         	call	_strlen	;wreg free
  7938  0029B2  041F               	decf	?_strlen,w,c
  7939  0029B4  1020               	iorwf	?_strlen+1,w,c
  7940  0029B6  E001 D09F          	bnz	l16770
  7941                           
  7942                           ;main.c: 1912: putsUSART((char *) "F00\r\n");
  7943  0029BA  0E7F               	movlw	high STR_176
  7944  0029BC  6E21               	movwf	?_putsUSART+1,c
  7945  0029BE  0E64               	movlw	low STR_176
  7946  0029C0  6E20               	movwf	?_putsUSART,c
  7947  0029C2  ECD5  F032         	call	_putsUSART	;wreg free
  7948  0029C6  D098               	goto	l16770
  7949  0029C8                     l16718:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;main.c: 1928: if (2 == strlen(cmdbuf)) {
  7953  0029C8  0101               	movlb	1	; () banked
  7954  0029CA  0E01               	movlw	high _cmdbuf
  7955  0029CC  6E20               	movwf	?_strlen+1,c
  7956  0029CE  0E05               	movlw	low _cmdbuf
  7957  0029D0  6E1F               	movwf	?_strlen,c
  7958  0029D2  EC2B  F034         	call	_strlen	;wreg free
  7959  0029D6  501F               	movf	?_strlen,w,c
  7960  0029D8  0A02               	xorlw	2
  7961  0029DA  1020               	iorwf	?_strlen+1,w,c
  7962  0029DC  E001 D08C          	bnz	l16770
  7963                           
  7964                           ;main.c: 1929: if (!bOpen) {
  7965  0029E0  0100               	movlb	0	; () banked
  7966  0029E2  67EF               	tstfsz	_bOpen& (0+255),b
  7967  0029E4  D089               	goto	l16770
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;main.c: 1930: if ('0' == cmdbuf[1]) {
  7971  0029E6  0101               	movlb	1	; () banked
  7972  0029E8  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  7973  0029EA  0A30               	xorlw	48
  7974  0029EC  E10F               	bnz	l16730
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;main.c: 1931: nTimeStamp = 0;
  7978  0029EE  0100               	movlb	0	; () banked
  7979  0029F0  6BF2               	clrf	_nTimeStamp& (0+255),b
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;main.c: 1933: (Busy_eep(), Write_b_eep(0x05,0));
  7983  0029F2  ECBC  F035         	call	_Busy_eep	;wreg free
  7984  0029F6  6A20               	clrf	?_Write_b_eep+1,c
  7985  0029F8  0E05               	movlw	5
  7986  0029FA  6E1F               	movwf	?_Write_b_eep,c
  7987  0029FC  0E00               	movlw	0
  7988  0029FE  6A21               	clrf	?_Write_b_eep+2,c
  7989  002A00  ECBB  F034         	call	_Write_b_eep	;wreg free
  7990  002A04                     L4:
  7991                           
  7992                           ;main.c: 1934: rv = 1;
  7993  002A04  0E01               	movlw	1
  7994  002A06  0100               	movlb	0	; () banked
  7995  002A08                     L3:
  7996  002A08  6F9C               	movwf	doModeSLCAN@rv& (0+255),b
  7997                           
  7998                           ;main.c: 1935: } else if ('1' == cmdbuf[1]) {
  7999  002A0A  D076               	goto	l16770
  8000  002A0C                     l16730:
  8001                           
  8002                           ; BSR set to: 1
  8003  002A0C  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  8004  002A0E  0A31               	xorlw	49
  8005  002A10  E10D               	bnz	l882
  8006                           
  8007                           ; BSR set to: 1
  8008                           ;main.c: 1936: nTimeStamp = 1;
  8009  002A12  0E01               	movlw	1
  8010  002A14  0100               	movlb	0	; () banked
  8011  002A16  6FF2               	movwf	_nTimeStamp& (0+255),b
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;main.c: 1938: (Busy_eep(), Write_b_eep(0x05,1));
  8015  002A18  ECBC  F035         	call	_Busy_eep	;wreg free
  8016  002A1C  6A20               	clrf	?_Write_b_eep+1,c
  8017  002A1E  0E05               	movlw	5
  8018  002A20  6E1F               	movwf	?_Write_b_eep,c
  8019  002A22  0E01               	movlw	1
  8020  002A24  6E21               	movwf	?_Write_b_eep+2,c
  8021  002A26  ECBB  F034         	call	_Write_b_eep	;wreg free
  8022  002A2A  D7EC               	goto	L4
  8023  002A2C                     l882:
  8024                           
  8025                           ; BSR set to: 1
  8026                           ;main.c: 1942: rv = 0;
  8027  002A2C  0100               	movlb	0	; () banked
  8028  002A2E  6B9C               	clrf	doModeSLCAN@rv& (0+255),b
  8029  002A30  D063               	goto	l16770
  8030  002A32                     l16738:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;main.c: 1950: (Busy_eep(), Write_b_eep(0x01,0xFF));
  8034  002A32  ECBC  F035         	call	_Busy_eep	;wreg free
  8035  002A36  6A20               	clrf	?_Write_b_eep+1,c
  8036  002A38  0E01               	movlw	1
  8037  002A3A  6E1F               	movwf	?_Write_b_eep,c
  8038  002A3C  0EFF               	movlw	255
  8039  002A3E  6821               	setf	?_Write_b_eep+2,c
  8040  002A40  ECBB  F034         	call	_Write_b_eep	;wreg free
  8041  002A44  00FF               	reset		;# 
  8042                           
  8043                           ;main.c: 1952: break;
  8044  002A46  D058               	goto	l16770
  8045  002A48                     l16742:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;main.c: 1956: if ( 'v' == cmdbuf[1] &&
  8049                           ;main.c: 1957: 's' == cmdbuf[2] &&
  8050                           ;main.c: 1958: 'c' == cmdbuf[3] &&
  8051                           ;main.c: 1959: 'p' == cmdbuf[4] ) {
  8052  002A48  0101               	movlb	1	; () banked
  8053  002A4A  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  8054  002A4C  0A76               	xorlw	118
  8055  002A4E  E10D               	bnz	l16752
  8056                           
  8057                           ; BSR set to: 1
  8058  002A50  5107               	movf	(_cmdbuf+2)& (0+255),w,b
  8059  002A52  0A73               	xorlw	115
  8060  002A54  E10A               	bnz	l16752
  8061                           
  8062                           ; BSR set to: 1
  8063  002A56  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  8064  002A58  0A63               	xorlw	99
  8065  002A5A  E107               	bnz	l16752
  8066                           
  8067                           ; BSR set to: 1
  8068  002A5C  5109               	movf	(_cmdbuf+4)& (0+255),w,b
  8069  002A5E  0A70               	xorlw	112
  8070  002A60  E104               	bnz	l16752
  8071                           
  8072                           ; BSR set to: 1
  8073                           ;main.c: 1960: mode = 1;
  8074  002A62  0E01               	movlw	1
  8075  002A64  0100               	movlb	0	; () banked
  8076  002A66  6FF1               	movwf	_mode& (0+255),b
  8077                           
  8078                           ;main.c: 1961: }
  8079  002A68  D047               	goto	l16770
  8080  002A6A                     l16752:
  8081                           
  8082                           ; BSR set to: 1
  8083                           ;main.c: 1962: else if ( 'v' == cmdbuf[1] &&
  8084                           ;main.c: 1963: 'e' == cmdbuf[2] &&
  8085                           ;main.c: 1964: 'r' == cmdbuf[3] &&
  8086                           ;main.c: 1965: 'b' == cmdbuf[4] ) {
  8087  002A6A  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  8088  002A6C  0A76               	xorlw	118
  8089  002A6E  E144               	bnz	l16770
  8090                           
  8091                           ; BSR set to: 1
  8092  002A70  5107               	movf	(_cmdbuf+2)& (0+255),w,b
  8093  002A72  0A65               	xorlw	101
  8094  002A74  E141               	bnz	l16770
  8095                           
  8096                           ; BSR set to: 1
  8097  002A76  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  8098  002A78  0A72               	xorlw	114
  8099  002A7A  E13E               	bnz	l16770
  8100                           
  8101                           ; BSR set to: 1
  8102  002A7C  5109               	movf	(_cmdbuf+4)& (0+255),w,b
  8103  002A7E  0A62               	xorlw	98
  8104  002A80  E13B               	bnz	l16770
  8105                           
  8106                           ; BSR set to: 1
  8107                           ;main.c: 1966: mode = 0;
  8108  002A82  0100               	movlb	0	; () banked
  8109  002A84  6BF1               	clrf	_mode& (0+255),b
  8110  002A86  D038               	goto	l16770
  8111  002A88                     l16762:
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;main.c: 1971: {
  8115                           ;main.c: 1973: if (0 == strlen(cmdbuf)) {
  8116  002A88  0101               	movlb	1	; () banked
  8117  002A8A  0E01               	movlw	high _cmdbuf
  8118  002A8C  6E20               	movwf	?_strlen+1,c
  8119  002A8E  0E05               	movlw	low _cmdbuf
  8120  002A90  6E1F               	movwf	?_strlen,c
  8121  002A92  EC2B  F034         	call	_strlen	;wreg free
  8122  002A96  5020               	movf	?_strlen+1,w,c
  8123  002A98  101F               	iorwf	?_strlen,w,c
  8124  002A9A  E0B4               	bz	L4
  8125  002A9C  D02D               	goto	l16770
  8126  002A9E                     l16768:
  8127                           
  8128                           ; BSR set to: 0
  8129  002A9E  519B               	movf	doModeSLCAN@c& (0+255),w,b
  8130                           
  8131                           ; Switch size 1, requested type "space"
  8132                           ; Number of cases is 17, Range of values is 64 to 116
  8133                           ; switch strategies available:
  8134                           ; Name         Instructions Cycles
  8135                           ; simple_byte           52    27 (average)
  8136                           ;	Chosen strategy is simple_byte
  8137  002AA0  0A40               	xorlw	64	; case 64
  8138  002AA2  E0D2               	bz	l16742
  8139  002AA4  0A02               	xorlw	2	; case 66
  8140  002AA6  E0C5               	bz	l16738
  8141  002AA8  0A01               	xorlw	1	; case 67
  8142  002AAA  E101 D6D8          	bz	l16674
  8143  002AAE  0A05               	xorlw	5	; case 70
  8144  002AB0  E101 D775          	bz	l16708
  8145  002AB4  0A0C               	xorlw	12	; case 74
  8146  002AB6  E101 D67C          	bz	l16640
  8147  002ABA  0A07               	xorlw	7	; case 77
  8148  002ABC  E0A3               	bz	L4
  8149  002ABE  0A03               	xorlw	3	; case 78
  8150  002AC0  E101 D69B          	bz	l16652
  8151  002AC4  0A01               	xorlw	1	; case 79
  8152  002AC6  E101 D6B2          	bz	l16662
  8153  002ACA  0A1D               	xorlw	29	; case 82
  8154  002ACC  E015               	bz	l16770
  8155  002ACE  0A01               	xorlw	1	; case 83
  8156  002AD0  E101 D6A5          	bz	l16658
  8157  002AD4  0A07               	xorlw	7	; case 84
  8158  002AD6  E101 D6D7          	bz	l16684
  8159  002ADA  0A02               	xorlw	2	; case 86
  8160  002ADC  E101 D67B          	bz	l16646
  8161  002AE0  0A0C               	xorlw	12	; case 90
  8162  002AE2  E101 D771          	bz	l16718
  8163  002AE6  0A37               	xorlw	55	; case 109
  8164  002AE8  E08D               	bz	L4
  8165  002AEA  0A1F               	xorlw	31	; case 114
  8166  002AEC  E005               	bz	l16770
  8167  002AEE  0A01               	xorlw	1	; case 115
  8168  002AF0  E101 D698          	bz	l857
  8169  002AF4  0A07               	xorlw	7	; case 116
  8170  002AF6  E1C8               	bnz	l16762
  8171  002AF8                     l16770:
  8172                           
  8173                           ;main.c: 1981: if (rv) {
  8174  002AF8  0100               	movlb	0	; () banked
  8175  002AFA  519C               	movf	doModeSLCAN@rv& (0+255),w,b
  8176  002AFC  E007               	bz	l16774
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;main.c: 1983: putsUSART((char *) "\r");
  8180  002AFE  0E7F               	movlw	high STR_177
  8181  002B00  6E21               	movwf	?_putsUSART+1,c
  8182  002B02  0EF2               	movlw	low STR_177
  8183  002B04  6E20               	movwf	?_putsUSART,c
  8184  002B06  ECD5  F032         	call	_putsUSART	;wreg free
  8185                           
  8186                           ;main.c: 1984: }
  8187  002B0A  D006               	goto	l16776
  8188  002B0C                     l16774:
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;main.c: 1985: else {
  8192                           ;main.c: 1987: putsUSART((char *) "\a");
  8193  002B0C  0E7F               	movlw	high STR_178
  8194  002B0E  6E21               	movwf	?_putsUSART+1,c
  8195  002B10  0EF0               	movlw	low STR_178
  8196  002B12  6E20               	movwf	?_putsUSART,c
  8197  002B14  ECD5  F032         	call	_putsUSART	;wreg free
  8198  002B18                     l16776:
  8199                           
  8200                           ;main.c: 1988: }
  8201                           ;main.c: 1991: memset( cmdbuf, 0, sizeof( cmdbuf ) );
  8202  002B18  0101               	movlb	1	; () banked
  8203  002B1A  0E01               	movlw	high _cmdbuf
  8204  002B1C  6E20               	movwf	?_memset+1,c
  8205  002B1E  0E05               	movlw	low _cmdbuf
  8206  002B20  ECE8  F02E         	call	PL30	;call to abstracted procedure
  8207  002B24  EC04  F035         	call	_memset	;wreg free
  8208                           
  8209                           ;main.c: 1992: pos = 0;
  8210  002B28  0101               	movlb	1	; () banked
  8211  002B2A  6B03               	clrf	_pos& (0+255),b
  8212  002B2C                     l16780:
  8213                           
  8214                           ;main.c: 1994: }
  8215                           ;main.c: 1997: (INTCONbits.GIE = 1);
  8216  002B2C  8EF2               	bsf	intcon,7,c	;volatile
  8217  002B2E                     l847:
  8218  002B2E  0012               	return	
  8219  002B30                     __end_of_doModeSLCAN:
  8220                           	opt stack 0
  8221  002B30                     PL52:
  8222                           	opt stack 20
  8223  002B30  0E05               	movlw	low _cmdbuf
  8224  002B32  2503               	addwf	_pos& (0+255),w,b
  8225  002B34  6ED9               	movwf	fsr2l,c
  8226  002B36  6ADA               	clrf	fsr2h,c
  8227  002B38  0E01               	movlw	high _cmdbuf
  8228  002B3A  22DA               	addwfc	fsr2h,f,c
  8229  002B3C  0012               	return	
  8230  002B3E                     __end_ofPL52:
  8231                           	opt stack 0
  8232  002B3E                     PL116:
  8233                           	opt stack 23
  8234  002B3E  90D8               	bcf	status,0,c
  8235  002B40  3792               	rlcf	(??_doModeSLCAN+3)& (0+255),f,b
  8236  002B42  3793               	rlcf	(??_doModeSLCAN+4)& (0+255),f,b
  8237  002B44  3794               	rlcf	(??_doModeSLCAN+5)& (0+255),f,b
  8238  002B46  3795               	rlcf	(??_doModeSLCAN+6)& (0+255),f,b
  8239  002B48  0012               	return	
  8240  002B4A                     __end_ofPL116:
  8241                           	opt stack 0
  8242                           tblptru	equ	0xFF8
  8243                           tblptrh	equ	0xFF7
  8244                           tblptrl	equ	0xFF6
  8245                           tablat	equ	0xFF5
  8246                           prodh	equ	0xFF4
  8247                           prodl	equ	0xFF3
  8248                           intcon	equ	0xFF2
  8249                           indf0	equ	0xFEF
  8250                           postinc0	equ	0xFEE
  8251                           fsr0h	equ	0xFEA
  8252                           fsr0l	equ	0xFE9
  8253                           wreg	equ	0xFE8
  8254                           indf1	equ	0xFE7
  8255                           postinc1	equ	0xFE6
  8256                           postdec1	equ	0xFE5
  8257                           fsr1h	equ	0xFE2
  8258                           fsr1l	equ	0xFE1
  8259                           indf2	equ	0xFDF
  8260                           postinc2	equ	0xFDE
  8261                           postdec2	equ	0xFDD
  8262                           plusw2	equ	0xFDB
  8263                           fsr2h	equ	0xFDA
  8264                           fsr2l	equ	0xFD9
  8265                           status	equ	0xFD8
  8266                           
  8267 ;; *************** function _hexStringToBytes *****************
  8268 ;; Defined at:
  8269 ;;		line 35 in file "hexutils.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  buf             2   34[COMRAM] PTR unsigned char 
  8272 ;;		 -> wrkbuf(80), 
  8273 ;;  size            1   36[COMRAM] unsigned char 
  8274 ;;  inhex           2   37[COMRAM] PTR unsigned char 
  8275 ;;		 -> cmdbuf(80), 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  i               2    7[BANK0 ] int 
  8278 ;;  p               2    5[BANK0 ] PTR unsigned char 
  8279 ;;		 -> cmdbuf(80), 
  8280 ;;  len             2    3[BANK0 ] int 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      unsigned char 
  8283 ;; Registers used:
  8284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : F/1
  8287 ;;		On exit  : F/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8290 ;;      Params:         5       0       0       0       0       0       0
  8291 ;;      Locals:         0       6       0       0       0       0       0
  8292 ;;      Temps:          0       3       0       0       0       0       0
  8293 ;;      Totals:         5       9       0       0       0       0       0
  8294 ;;Total ram usage:       14 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    4
  8297 ;; This function calls:
  8298 ;;		_strlen
  8299 ;;		_nibbleFromChar
  8300 ;; This function is called by:
  8301 ;;		_doModeSLCAN
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text3
  8306  005CA8                     __ptext3:
  8307                           	opt stack 0
  8308  005CA8                     _hexStringToBytes:
  8309                           	opt stack 25
  8310                           
  8311                           ; BSR set to: 1
  8312                           ;hexutils.c: 36: uint8_t *p;
  8313                           ;hexutils.c: 37: int len, i;
  8314                           ;hexutils.c: 39: len = strlen(inhex) / 2;
  8315                           
  8316                           ;incstack = 0
  8317                           ;incstack = 0
  8318  005CA8  C026  F01F         	movff	hexStringToBytes@inhex,?_strlen
  8319  005CAC  C027  F020         	movff	hexStringToBytes@inhex+1,?_strlen+1
  8320  005CB0  EC2B  F034         	call	_strlen	;wreg free
  8321  005CB4  90D8               	bcf	status,0,c
  8322  005CB6  3020               	rrcf	?_strlen+1,w,c
  8323  005CB8  0100               	movlb	0	; () banked
  8324  005CBA  6F64               	movwf	(hexStringToBytes@len+1)& (0+255),b
  8325  005CBC  301F               	rrcf	?_strlen,w,c
  8326  005CBE  6F63               	movwf	hexStringToBytes@len& (0+255),b
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;hexutils.c: 40: if (len > size) return 0;
  8330  005CC0  5025               	movf	hexStringToBytes@size,w,c
  8331  005CC2  6F60               	movwf	??_hexStringToBytes& (0+255),b
  8332  005CC4  6B61               	clrf	(??_hexStringToBytes+1)& (0+255),b
  8333  005CC6  5161               	movf	(??_hexStringToBytes+1)& (0+255),w,b
  8334  005CC8  0A80               	xorlw	128
  8335  005CCA  6F62               	movwf	(??_hexStringToBytes+2)& (0+255),b
  8336  005CCC  5163               	movf	hexStringToBytes@len& (0+255),w,b
  8337  005CCE  5D60               	subwf	??_hexStringToBytes& (0+255),w,b
  8338  005CD0  5164               	movf	(hexStringToBytes@len+1)& (0+255),w,b
  8339  005CD2  0A80               	xorlw	128
  8340  005CD4  5962               	subwfb	(??_hexStringToBytes+2)& (0+255),w,b
  8341  005CD6  E202               	bc	l1759
  8342                           
  8343                           ; BSR set to: 0
  8344  005CD8  0E00               	movlw	0
  8345  005CDA  D033               	goto	l1760
  8346  005CDC                     l1759:
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;hexutils.c: 41: for (i = 0, p = (uint8_t *) inhex; i < len; i++) {
  8350  005CDC  6B67               	clrf	hexStringToBytes@i& (0+255),b
  8351  005CDE  6B68               	clrf	(hexStringToBytes@i+1)& (0+255),b
  8352  005CE0  C026  F065         	movff	hexStringToBytes@inhex,hexStringToBytes@p
  8353  005CE4  C027  F066         	movff	hexStringToBytes@inhex+1,hexStringToBytes@p+1
  8354  005CE8  D022               	goto	l18560
  8355  005CEA                     l18554:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;hexutils.c: 42: buf[ i ] = (nibbleFromChar(*p) << 4) | nibbleFromChar(*(p + 1));
  8359  005CEA  5167               	movf	hexStringToBytes@i& (0+255),w,b
  8360  005CEC  2423               	addwf	hexStringToBytes@buf,w,c
  8361  005CEE  6ED9               	movwf	fsr2l,c
  8362  005CF0  5168               	movf	(hexStringToBytes@i+1)& (0+255),w,b
  8363  005CF2  2024               	addwfc	hexStringToBytes@buf+1,w,c
  8364  005CF4  6EDA               	movwf	fsr2h,c
  8365  005CF6  EE10 F001          	lfsr	1,1
  8366  005CFA  5165               	movf	hexStringToBytes@p& (0+255),w,b
  8367  005CFC  26E1               	addwf	fsr1l,f,c
  8368  005CFE  5166               	movf	(hexStringToBytes@p+1)& (0+255),w,b
  8369  005D00  22E2               	addwfc	fsr1h,f,c
  8370  005D02  50E7               	movf	indf1,w,c
  8371  005D04  ECCE  F033         	call	_nibbleFromChar
  8372  005D08  6F60               	movwf	??_hexStringToBytes& (0+255),b
  8373  005D0A  C065  FFE1         	movff	hexStringToBytes@p,fsr1l
  8374  005D0E  C066  FFE2         	movff	hexStringToBytes@p+1,fsr1h
  8375  005D12  50E7               	movf	indf1,w,c
  8376  005D14  ECCE  F033         	call	_nibbleFromChar
  8377  005D18  6F61               	movwf	(??_hexStringToBytes+1)& (0+255),b
  8378  005D1A  3961               	swapf	(??_hexStringToBytes+1)& (0+255),w,b
  8379  005D1C  0BF0               	andlw	240
  8380  005D1E  1160               	iorwf	??_hexStringToBytes& (0+255),w,b
  8381  005D20  6EDF               	movwf	indf2,c
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;hexutils.c: 43: p += 2;
  8385  005D22  0E02               	movlw	2
  8386  005D24  2765               	addwf	hexStringToBytes@p& (0+255),f,b
  8387  005D26  0E00               	movlw	0
  8388  005D28  2366               	addwfc	(hexStringToBytes@p+1)& (0+255),f,b
  8389                           
  8390                           ; BSR set to: 0
  8391  005D2A  4B67               	infsnz	hexStringToBytes@i& (0+255),f,b
  8392  005D2C  2B68               	incf	(hexStringToBytes@i+1)& (0+255),f,b
  8393  005D2E                     l18560:
  8394                           
  8395                           ; BSR set to: 0
  8396  005D2E  5168               	movf	(hexStringToBytes@i+1)& (0+255),w,b
  8397  005D30  0A80               	xorlw	128
  8398  005D32  6F60               	movwf	??_hexStringToBytes& (0+255),b
  8399  005D34  5163               	movf	hexStringToBytes@len& (0+255),w,b
  8400  005D36  5D67               	subwf	hexStringToBytes@i& (0+255),w,b
  8401  005D38  5164               	movf	(hexStringToBytes@len+1)& (0+255),w,b
  8402  005D3A  0A80               	xorlw	128
  8403  005D3C  5960               	subwfb	??_hexStringToBytes& (0+255),w,b
  8404  005D3E  E3D5               	bnc	l18554
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;hexutils.c: 44: }
  8408                           ;hexutils.c: 46: return i;
  8409  005D40  5167               	movf	hexStringToBytes@i& (0+255),w,b
  8410  005D42                     l1760:
  8411                           
  8412                           ; BSR set to: 0
  8413  005D42  0012               	return	
  8414  005D44                     __end_of_hexStringToBytes:
  8415                           	opt stack 0
  8416                           tblptru	equ	0xFF8
  8417                           tblptrh	equ	0xFF7
  8418                           tblptrl	equ	0xFF6
  8419                           tablat	equ	0xFF5
  8420                           prodh	equ	0xFF4
  8421                           prodl	equ	0xFF3
  8422                           intcon	equ	0xFF2
  8423                           indf0	equ	0xFEF
  8424                           postinc0	equ	0xFEE
  8425                           fsr0h	equ	0xFEA
  8426                           fsr0l	equ	0xFE9
  8427                           wreg	equ	0xFE8
  8428                           indf1	equ	0xFE7
  8429                           postinc1	equ	0xFE6
  8430                           postdec1	equ	0xFE5
  8431                           fsr1h	equ	0xFE2
  8432                           fsr1l	equ	0xFE1
  8433                           indf2	equ	0xFDF
  8434                           postinc2	equ	0xFDE
  8435                           postdec2	equ	0xFDD
  8436                           plusw2	equ	0xFDB
  8437                           fsr2h	equ	0xFDA
  8438                           fsr2l	equ	0xFD9
  8439                           status	equ	0xFD8
  8440                           
  8441 ;; *************** function _nibbleFromChar *****************
  8442 ;; Defined at:
  8443 ;;		line 20 in file "hexutils.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  c               1    wreg     unsigned char 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  c               1   30[COMRAM] unsigned char 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      unsigned char 
  8450 ;; Registers used:
  8451 ;;		wreg, status,2, status,0
  8452 ;; Tracked objects:
  8453 ;;		On entry : F/0
  8454 ;;		On exit  : F/0
  8455 ;;		Unchanged: F/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8457 ;;      Params:         0       0       0       0       0       0       0
  8458 ;;      Locals:         1       0       0       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0
  8460 ;;      Totals:         1       0       0       0       0       0       0
  8461 ;;Total ram usage:        1 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; Hardware stack levels required when called:    3
  8464 ;; This function calls:
  8465 ;;		Nothing
  8466 ;; This function is called by:
  8467 ;;		_hexStringToBytes
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           	psect	text4
  8472  00679C                     __ptext4:
  8473                           	opt stack 0
  8474  00679C                     _nibbleFromChar:
  8475                           	opt stack 25
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;incstack = 0
  8479                           ;incstack = 0
  8480                           ;nibbleFromChar@c stored from wreg
  8481  00679C  CFE8 F01F          	movff	wreg,nibbleFromChar@c
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;hexutils.c: 21: if (c >= '0' && c <= '9') return c - '0';
  8485  0067A0  0E2F               	movlw	47
  8486  0067A2  641F               	cpfsgt	nibbleFromChar@c,c
  8487  0067A4  D006               	goto	l18838
  8488                           
  8489                           ; BSR set to: 0
  8490  0067A6  0E3A               	movlw	58
  8491  0067A8  601F               	cpfslt	nibbleFromChar@c,c
  8492  0067AA  D003               	goto	l18838
  8493                           
  8494                           ; BSR set to: 0
  8495  0067AC  501F               	movf	nibbleFromChar@c,w,c
  8496  0067AE  0FD0               	addlw	208
  8497  0067B0  D013               	goto	l1754
  8498  0067B2                     l18838:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;hexutils.c: 22: if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  8502  0067B2  0E60               	movlw	96
  8503  0067B4  641F               	cpfsgt	nibbleFromChar@c,c
  8504  0067B6  D006               	goto	l18846
  8505                           
  8506                           ; BSR set to: 0
  8507  0067B8  0E67               	movlw	103
  8508  0067BA  601F               	cpfslt	nibbleFromChar@c,c
  8509  0067BC  D003               	goto	l18846
  8510                           
  8511                           ; BSR set to: 0
  8512  0067BE  501F               	movf	nibbleFromChar@c,w,c
  8513  0067C0  0FA9               	addlw	169
  8514  0067C2  D00A               	goto	l1754
  8515  0067C4                     l18846:
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;hexutils.c: 23: if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  8519  0067C4  0E40               	movlw	64
  8520  0067C6  641F               	cpfsgt	nibbleFromChar@c,c
  8521  0067C8  D006               	goto	l18854
  8522                           
  8523                           ; BSR set to: 0
  8524  0067CA  0E47               	movlw	71
  8525  0067CC  601F               	cpfslt	nibbleFromChar@c,c
  8526  0067CE  D003               	goto	l18854
  8527                           
  8528                           ; BSR set to: 0
  8529  0067D0  501F               	movf	nibbleFromChar@c,w,c
  8530  0067D2  0FC9               	addlw	201
  8531  0067D4  D001               	goto	l1754
  8532  0067D6                     l18854:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;hexutils.c: 24: return 255;
  8536  0067D6  0EFF               	movlw	255
  8537  0067D8                     l1754:
  8538                           
  8539                           ; BSR set to: 0
  8540  0067D8  0012               	return	
  8541  0067DA                     __end_of_nibbleFromChar:
  8542                           	opt stack 0
  8543                           tblptru	equ	0xFF8
  8544                           tblptrh	equ	0xFF7
  8545                           tblptrl	equ	0xFF6
  8546                           tablat	equ	0xFF5
  8547                           prodh	equ	0xFF4
  8548                           prodl	equ	0xFF3
  8549                           intcon	equ	0xFF2
  8550                           indf0	equ	0xFEF
  8551                           postinc0	equ	0xFEE
  8552                           fsr0h	equ	0xFEA
  8553                           fsr0l	equ	0xFE9
  8554                           wreg	equ	0xFE8
  8555                           indf1	equ	0xFE7
  8556                           postinc1	equ	0xFE6
  8557                           postdec1	equ	0xFE5
  8558                           fsr1h	equ	0xFE2
  8559                           fsr1l	equ	0xFE1
  8560                           indf2	equ	0xFDF
  8561                           postinc2	equ	0xFDE
  8562                           postdec2	equ	0xFDD
  8563                           plusw2	equ	0xFDB
  8564                           fsr2h	equ	0xFDA
  8565                           fsr2l	equ	0xFD9
  8566                           status	equ	0xFD8
  8567                           
  8568 ;; *************** function _receiveSendEventSLCAN *****************
  8569 ;; Defined at:
  8570 ;;		line 2632 in file "main.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  id              4   29[BANK0 ] unsigned long 
  8575 ;;  i               2   34[BANK0 ] int 
  8576 ;;  dlc             1   33[BANK0 ] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      enum E15660
  8579 ;; Registers used:
  8580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : F/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8586 ;;      Params:         0       0       0       0       0       0       0
  8587 ;;      Locals:         0       7       0       0       0       0       0
  8588 ;;      Temps:          0       3       0       0       0       0       0
  8589 ;;      Totals:         0      10       0       0       0       0       0
  8590 ;;Total ram usage:       10 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:    6
  8593 ;; This function calls:
  8594 ;;		_putsUSART
  8595 ;;		_WriteUSART
  8596 ;;		_strlen
  8597 ;;		_getCANFrame
  8598 ;;		_ultoa
  8599 ;;		_itoa
  8600 ;; This function is called by:
  8601 ;;		_doModeSLCAN
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text5
  8606  00438C                     __ptext5:
  8607                           	opt stack 0
  8608  00438C                     _receiveSendEventSLCAN:
  8609                           	opt stack 23
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;main.c: 2633: int i;
  8613                           ;main.c: 2634: uint8_t dlc;
  8614                           ;main.c: 2635: uint32_t id;
  8615                           ;main.c: 2637: if (getCANFrame(&id, &dlc, vscpData)) {
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;incstack = 0
  8619                           ;incstack = 0
  8620  00438C  0E00               	movlw	high receiveSendEventSLCAN@dlc
  8621  00438E  6F69               	movwf	(?_getCANFrame+1)& (0+255),b
  8622  004390  0E81               	movlw	low receiveSendEventSLCAN@dlc
  8623  004392  6F68               	movwf	?_getCANFrame& (0+255),b
  8624  004394  0E01               	movlw	high _vscpData
  8625  004396  0100               	movlb	0	; () banked
  8626  004398  6F6B               	movwf	(?_getCANFrame+3)& (0+255),b
  8627  00439A  0EA5               	movlw	low _vscpData
  8628  00439C  6F6A               	movwf	(?_getCANFrame+2)& (0+255),b
  8629  00439E  0E7D               	movlw	receiveSendEventSLCAN@id& (0+255)
  8630  0043A0  EC62  F02C         	call	_getCANFrame
  8631  0043A4  0900               	iorlw	0
  8632  0043A6  E101 D0AF          	bz	l1204
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;main.c: 2640: cntRxFrames++;
  8636  0043AA  2BD2               	incf	_cntRxFrames& (0+255),f,b
  8637  0043AC  0E00               	movlw	0
  8638  0043AE  23D3               	addwfc	(_cntRxFrames+1)& (0+255),f,b
  8639  0043B0  23D4               	addwfc	(_cntRxFrames+2)& (0+255),f,b
  8640  0043B2  23D5               	addwfc	(_cntRxFrames+3)& (0+255),f,b
  8641                           
  8642                           ;main.c: 2641: cntRxBytes += dlc;
  8643  0043B4  5181               	movf	receiveSendEventSLCAN@dlc& (0+255),w,b
  8644  0043B6  27CE               	addwf	_cntRxBytes& (0+255),f,b
  8645  0043B8  0E00               	movlw	0
  8646  0043BA  23CF               	addwfc	(_cntRxBytes+1)& (0+255),f,b
  8647  0043BC  23D0               	addwfc	(_cntRxBytes+2)& (0+255),f,b
  8648  0043BE  23D1               	addwfc	(_cntRxBytes+3)& (0+255),f,b
  8649  0043C0                     l1177:
  8650                           
  8651                           ; BSR set to: 0
  8652  0043C0  A2AC               	btfss	4012,1,c	;volatile
  8653  0043C2  D7FE               	goto	l1177
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;main.c: 2644: WriteUSART('T');
  8657  0043C4  0E54               	movlw	84
  8658  0043C6  EC81  F035         	call	_WriteUSART
  8659                           
  8660                           ;main.c: 2646: ultoa(wrkbuf, id, 16);
  8661  0043CA  0E01               	movlw	high _wrkbuf
  8662  0043CC  0100               	movlb	0	; () banked
  8663  0043CE  6F6E               	movwf	(?_ultoa+1)& (0+255),b
  8664  0043D0  0E55               	movlw	low _wrkbuf
  8665  0043D2  6F6D               	movwf	?_ultoa& (0+255),b
  8666  0043D4  C07D  F06F         	movff	receiveSendEventSLCAN@id,?_ultoa+2
  8667  0043D8  C07E  F070         	movff	receiveSendEventSLCAN@id+1,?_ultoa+3
  8668  0043DC  C07F  F071         	movff	receiveSendEventSLCAN@id+2,?_ultoa+4
  8669  0043E0  C080  F072         	movff	receiveSendEventSLCAN@id+3,?_ultoa+5
  8670  0043E4  6B74               	clrf	(?_ultoa+7)& (0+255),b
  8671  0043E6  0E10               	movlw	16
  8672  0043E8  6F73               	movwf	(?_ultoa+6)& (0+255),b
  8673  0043EA  EC54  F028         	call	_ultoa	;wreg free
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;main.c: 2648: for (i = 0; i < ((uint8_t) (8 - sizeof (wrkbuf))); i++) {
  8677  0043EE  6B82               	clrf	receiveSendEventSLCAN@i& (0+255),b
  8678  0043F0  6B83               	clrf	(receiveSendEventSLCAN@i+1)& (0+255),b
  8679  0043F2                     l1182:
  8680                           
  8681                           ; BSR set to: 0
  8682  0043F2  A2AC               	btfss	4012,1,c	;volatile
  8683  0043F4  D7FE               	goto	l1182
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;main.c: 2650: WriteUSART('0');
  8687  0043F6  0E30               	movlw	48
  8688  0043F8  EC81  F035         	call	_WriteUSART
  8689                           
  8690                           ; BSR set to: 0
  8691  0043FC  D886               	call	PL122	;call to abstracted procedure
  8692  0043FE  B4D8               	btfsc	status,2,c
  8693  004400  5D82               	subwf	receiveSendEventSLCAN@i& (0+255),w,b
  8694  004402  E3F7               	bnc	l1182
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;main.c: 2651: }
  8698                           ;main.c: 2652: putsUSART(wrkbuf);
  8699  004404  0101               	movlb	1	; () banked
  8700  004406  0E01               	movlw	high _wrkbuf
  8701  004408  6E21               	movwf	?_putsUSART+1,c
  8702  00440A  0E55               	movlw	low _wrkbuf
  8703  00440C  6E20               	movwf	?_putsUSART,c
  8704  00440E  ECD5  F032         	call	_putsUSART	;wreg free
  8705                           
  8706                           ;main.c: 2655: itoa(wrkbuf, dlc, 16);
  8707  004412  0E01               	movlw	high _wrkbuf
  8708  004414  0100               	movlb	0	; () banked
  8709  004416  6F6A               	movwf	(?_itoa+1)& (0+255),b
  8710  004418  0E55               	movlw	low _wrkbuf
  8711  00441A  6F69               	movwf	?_itoa& (0+255),b
  8712  00441C  C081  F06B         	movff	receiveSendEventSLCAN@dlc,?_itoa+2
  8713  004420  6B6C               	clrf	(?_itoa+3)& (0+255),b
  8714  004422  6B6E               	clrf	(?_itoa+5)& (0+255),b
  8715  004424  0E10               	movlw	16
  8716  004426  6F6D               	movwf	(?_itoa+4)& (0+255),b
  8717  004428  EC9F  F034         	call	_itoa	;wreg free
  8718  00442C                     l1185:
  8719                           
  8720                           ; BSR set to: 0
  8721  00442C  A2AC               	btfss	4012,1,c	;volatile
  8722  00442E  D7FE               	goto	l1185
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;main.c: 2657: WriteUSART(wrkbuf[0]);
  8726  004430  0101               	movlb	1	; () banked
  8727  004432  5155               	movf	_wrkbuf& (0+255),w,b
  8728  004434  EC81  F035         	call	_WriteUSART
  8729                           
  8730                           ;main.c: 2660: for (i = 0; i < dlc; i++) {
  8731  004438  0100               	movlb	0	; () banked
  8732  00443A  6B82               	clrf	receiveSendEventSLCAN@i& (0+255),b
  8733  00443C  6B83               	clrf	(receiveSendEventSLCAN@i+1)& (0+255),b
  8734  00443E  D02D               	goto	l18512
  8735  004440                     l18500:
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;main.c: 2661: itoa(wrkbuf, vscpData[i], 16);
  8739  004440  0E01               	movlw	high _wrkbuf
  8740  004442  0100               	movlb	0	; () banked
  8741  004444  6F6A               	movwf	(?_itoa+1)& (0+255),b
  8742  004446  0E55               	movlw	low _wrkbuf
  8743  004448  6F69               	movwf	?_itoa& (0+255),b
  8744  00444A  0EA5               	movlw	low _vscpData
  8745  00444C  2582               	addwf	receiveSendEventSLCAN@i& (0+255),w,b
  8746  00444E  6ED9               	movwf	fsr2l,c
  8747  004450  0E01               	movlw	high _vscpData
  8748  004452  2183               	addwfc	(receiveSendEventSLCAN@i+1)& (0+255),w,b
  8749  004454  6EDA               	movwf	fsr2h,c
  8750  004456  50DF               	movf	indf2,w,c
  8751  004458  6F6B               	movwf	(?_itoa+2)& (0+255),b
  8752  00445A  6B6C               	clrf	(?_itoa+3)& (0+255),b
  8753  00445C  6B6E               	clrf	(?_itoa+5)& (0+255),b
  8754  00445E  0E10               	movlw	16
  8755  004460  6F6D               	movwf	(?_itoa+4)& (0+255),b
  8756  004462  EC9F  F034         	call	_itoa	;wreg free
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;main.c: 2663: if (2 != strlen(wrkbuf)) {
  8760  004466  0101               	movlb	1	; () banked
  8761  004468  0E01               	movlw	high _wrkbuf
  8762  00446A  6E20               	movwf	?_strlen+1,c
  8763  00446C  0E55               	movlw	low _wrkbuf
  8764  00446E  6E1F               	movwf	?_strlen,c
  8765  004470  EC2B  F034         	call	_strlen	;wreg free
  8766  004474  501F               	movf	?_strlen,w,c
  8767  004476  0A02               	xorlw	2
  8768  004478  1020               	iorwf	?_strlen+1,w,c
  8769  00447A  E005               	bz	l18508
  8770  00447C                     l1191:
  8771  00447C  A2AC               	btfss	4012,1,c	;volatile
  8772  00447E  D7FE               	goto	l1191
  8773                           
  8774                           ;main.c: 2665: WriteUSART('0');
  8775  004480  0E30               	movlw	48
  8776  004482  EC81  F035         	call	_WriteUSART
  8777  004486                     l18508:
  8778                           
  8779                           ;main.c: 2666: }
  8780                           ;main.c: 2668: putsUSART(wrkbuf);
  8781  004486  0101               	movlb	1	; () banked
  8782  004488  0E01               	movlw	high _wrkbuf
  8783  00448A  6E21               	movwf	?_putsUSART+1,c
  8784  00448C  0E55               	movlw	low _wrkbuf
  8785  00448E  6E20               	movwf	?_putsUSART,c
  8786  004490  ECD5  F032         	call	_putsUSART	;wreg free
  8787  004494  0100               	movlb	0	; () banked
  8788  004496  4B82               	infsnz	receiveSendEventSLCAN@i& (0+255),f,b
  8789  004498  2B83               	incf	(receiveSendEventSLCAN@i+1)& (0+255),f,b
  8790  00449A                     l18512:
  8791                           
  8792                           ; BSR set to: 0
  8793  00449A  5181               	movf	receiveSendEventSLCAN@dlc& (0+255),w,b
  8794  00449C  6F7A               	movwf	??_receiveSendEventSLCAN& (0+255),b
  8795  00449E  6B7B               	clrf	(??_receiveSendEventSLCAN+1)& (0+255),b
  8796  0044A0  5183               	movf	(receiveSendEventSLCAN@i+1)& (0+255),w,b
  8797  0044A2  0A80               	xorlw	128
  8798  0044A4  6F7C               	movwf	(??_receiveSendEventSLCAN+2)& (0+255),b
  8799  0044A6  517A               	movf	??_receiveSendEventSLCAN& (0+255),w,b
  8800  0044A8  5D82               	subwf	receiveSendEventSLCAN@i& (0+255),w,b
  8801  0044AA  517B               	movf	(??_receiveSendEventSLCAN+1)& (0+255),w,b
  8802  0044AC  0A80               	xorlw	128
  8803  0044AE  597C               	subwfb	(??_receiveSendEventSLCAN+2)& (0+255),w,b
  8804  0044B0  E3C7               	bnc	l18500
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;main.c: 2669: }
  8808                           ;main.c: 2672: if (nTimeStamp) {
  8809  0044B2  51F2               	movf	_nTimeStamp& (0+255),w,b
  8810  0044B4  E024               	bz	l1201
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;main.c: 2673: ultoa(wrkbuf, timer, 16);
  8814  0044B6  0E01               	movlw	high _wrkbuf
  8815  0044B8  0100               	movlb	0	; () banked
  8816  0044BA  6F6E               	movwf	(?_ultoa+1)& (0+255),b
  8817  0044BC  0E55               	movlw	low _wrkbuf
  8818  0044BE  6F6D               	movwf	?_ultoa& (0+255),b
  8819  0044C0  C0E2  F06F         	movff	_timer,?_ultoa+2	;volatile
  8820  0044C4  C0E3  F070         	movff	_timer+1,?_ultoa+3	;volatile
  8821  0044C8  C0E4  F071         	movff	_timer+2,?_ultoa+4	;volatile
  8822  0044CC  C0E5  F072         	movff	_timer+3,?_ultoa+5	;volatile
  8823  0044D0  6B74               	clrf	(?_ultoa+7)& (0+255),b
  8824  0044D2  0E10               	movlw	16
  8825  0044D4  6F73               	movwf	(?_ultoa+6)& (0+255),b
  8826  0044D6  EC54  F028         	call	_ultoa	;wreg free
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;main.c: 2675: for (i = 0; i < ((uint8_t) (8 - sizeof (wrkbuf))); i++) {
  8830  0044DA  6B82               	clrf	receiveSendEventSLCAN@i& (0+255),b
  8831  0044DC  6B83               	clrf	(receiveSendEventSLCAN@i+1)& (0+255),b
  8832  0044DE                     l1198:
  8833                           
  8834                           ; BSR set to: 0
  8835  0044DE  A2AC               	btfss	4012,1,c	;volatile
  8836  0044E0  D7FE               	goto	l1198
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;main.c: 2677: WriteUSART('0');
  8840  0044E2  0E30               	movlw	48
  8841  0044E4  EC81  F035         	call	_WriteUSART
  8842                           
  8843                           ; BSR set to: 0
  8844  0044E8  D810               	call	PL122	;call to abstracted procedure
  8845  0044EA  B4D8               	btfsc	status,2,c
  8846  0044EC  5D82               	subwf	receiveSendEventSLCAN@i& (0+255),w,b
  8847  0044EE  E3F7               	bnc	l1198
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;main.c: 2678: }
  8851                           ;main.c: 2679: putsUSART(wrkbuf);
  8852  0044F0  0101               	movlb	1	; () banked
  8853  0044F2  0E01               	movlw	high _wrkbuf
  8854  0044F4  6E21               	movwf	?_putsUSART+1,c
  8855  0044F6  0E55               	movlw	low _wrkbuf
  8856  0044F8  6E20               	movwf	?_putsUSART,c
  8857  0044FA  ECD5  F032         	call	_putsUSART	;wreg free
  8858  0044FE                     l1201:
  8859  0044FE  A2AC               	btfss	4012,1,c	;volatile
  8860  004500  D7FE               	goto	l1201
  8861                           
  8862                           ;main.c: 2683: WriteUSART(0x0d);
  8863  004502  0E0D               	movlw	13
  8864  004504  EC81  F035         	call	_WriteUSART
  8865  004508                     l1204:
  8866  004508  0012               	return	
  8867  00450A                     __end_of_receiveSendEventSLCAN:
  8868                           	opt stack 0
  8869  00450A                     PL122:
  8870                           	opt stack 23
  8871  00450A  0100               	movlb	0	; () banked
  8872  00450C  4B82               	infsnz	receiveSendEventSLCAN@i& (0+255),f,b
  8873  00450E  2B83               	incf	(receiveSendEventSLCAN@i+1)& (0+255),f,b
  8874  004510  5183               	movf	(receiveSendEventSLCAN@i+1)& (0+255),w,b
  8875  004512  0A80               	xorlw	128
  8876  004514  0F80               	addlw	-128
  8877  004516  0CB8               	retlw	184
  8878  004518                     __end_ofPL122:
  8879                           	opt stack 0
  8880                           tblptru	equ	0xFF8
  8881                           tblptrh	equ	0xFF7
  8882                           tblptrl	equ	0xFF6
  8883                           tablat	equ	0xFF5
  8884                           prodh	equ	0xFF4
  8885                           prodl	equ	0xFF3
  8886                           intcon	equ	0xFF2
  8887                           indf0	equ	0xFEF
  8888                           postinc0	equ	0xFEE
  8889                           fsr0h	equ	0xFEA
  8890                           fsr0l	equ	0xFE9
  8891                           wreg	equ	0xFE8
  8892                           indf1	equ	0xFE7
  8893                           postinc1	equ	0xFE6
  8894                           postdec1	equ	0xFE5
  8895                           fsr1h	equ	0xFE2
  8896                           fsr1l	equ	0xFE1
  8897                           indf2	equ	0xFDF
  8898                           postinc2	equ	0xFDE
  8899                           postdec2	equ	0xFDD
  8900                           plusw2	equ	0xFDB
  8901                           fsr2h	equ	0xFDA
  8902                           fsr2l	equ	0xFD9
  8903                           status	equ	0xFD8
  8904                           
  8905 ;; *************** function _ultoa *****************
  8906 ;; Defined at:
  8907 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ltoa.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  buf             2   13[BANK0 ] PTR unsigned char 
  8910 ;;		 -> wrkbuf(80), 
  8911 ;;  val             4   15[BANK0 ] unsigned long 
  8912 ;;  base            2   19[BANK0 ] int 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  v               4   21[BANK0 ] unsigned long 
  8915 ;;  c               1   25[BANK0 ] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  2   13[BANK0 ] PTR unsigned char 
  8918 ;; Registers used:
  8919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : F/0
  8922 ;;		On exit  : F/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8925 ;;      Params:         0       8       0       0       0       0       0
  8926 ;;      Locals:         0       5       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0
  8928 ;;      Totals:         0      13       0       0       0       0       0
  8929 ;;Total ram usage:       13 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    4
  8932 ;; This function calls:
  8933 ;;		___lldiv
  8934 ;;		___llmod
  8935 ;; This function is called by:
  8936 ;;		_receiveSendEventSLCAN
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text6
  8941  0050A8                     __ptext6:
  8942                           	opt stack 0
  8943  0050A8                     _ultoa:
  8944                           	opt stack 24
  8945                           
  8946                           ; BSR set to: 0
  8947                           
  8948                           ;incstack = 0
  8949                           ;incstack = 0
  8950  0050A8  C06F  F075         	movff	ultoa@val,ultoa@v
  8951  0050AC  C070  F076         	movff	ultoa@val+1,ultoa@v+1
  8952  0050B0  C071  F077         	movff	ultoa@val+2,ultoa@v+2
  8953  0050B4  C072  F078         	movff	ultoa@val+3,ultoa@v+3
  8954  0050B8                     l18676:
  8955                           
  8956                           ; BSR set to: 0
  8957  0050B8  C075  F01F         	movff	ultoa@v,?___lldiv
  8958  0050BC  C076  F020         	movff	ultoa@v+1,?___lldiv+1
  8959  0050C0  C077  F021         	movff	ultoa@v+2,?___lldiv+2
  8960  0050C4  C078  F022         	movff	ultoa@v+3,?___lldiv+3
  8961  0050C8  D858               	call	PL92	;call to abstracted procedure
  8962  0050CA  EC75  F030         	call	___lldiv	;wreg free
  8963  0050CE  C022  F078         	movff	?___lldiv+3,ultoa@v+3
  8964  0050D2  C021  F077         	movff	?___lldiv+2,ultoa@v+2
  8965  0050D6  C020  F076         	movff	?___lldiv+1,ultoa@v+1
  8966  0050DA  C01F  F075         	movff	?___lldiv,ultoa@v
  8967                           
  8968                           ; BSR set to: 0
  8969  0050DE  4B6D               	infsnz	ultoa@buf& (0+255),f,b
  8970  0050E0  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  0050E2  5178               	movf	(ultoa@v+3)& (0+255),w,b
  8974  0050E4  1175               	iorwf	ultoa@v& (0+255),w,b
  8975  0050E6  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
  8976  0050E8  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
  8977  0050EA  E1E6               	bnz	l18676
  8978                           
  8979                           ; BSR set to: 0
  8980  0050EC  C06D  FFD9         	movff	ultoa@buf,fsr2l
  8981  0050F0  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
  8982  0050F4  6ADF               	clrf	indf2,c
  8983                           
  8984                           ; BSR set to: 0
  8985  0050F6  076D               	decf	ultoa@buf& (0+255),f,b
  8986  0050F8  A0D8               	btfss	status,0,c
  8987  0050FA  076E               	decf	(ultoa@buf+1)& (0+255),f,b
  8988  0050FC                     l18686:
  8989                           
  8990                           ; BSR set to: 0
  8991  0050FC  C06F  F065         	movff	ultoa@val,?___llmod
  8992  005100  C070  F066         	movff	ultoa@val+1,?___llmod+1
  8993  005104  C071  F067         	movff	ultoa@val+2,?___llmod+2
  8994  005108  C072  F068         	movff	ultoa@val+3,?___llmod+3
  8995  00510C  C073  F069         	movff	ultoa@base,?___llmod+4
  8996  005110  C074  F06A         	movff	ultoa@base+1,?___llmod+5
  8997  005114  0E00               	movlw	0
  8998  005116  BF6A               	btfsc	(?___llmod+5)& (0+255),7,b
  8999  005118  0EFF               	movlw	-1
  9000  00511A  6F6B               	movwf	(?___llmod+6)& (0+255),b
  9001  00511C  6F6C               	movwf	(?___llmod+7)& (0+255),b
  9002  00511E  ECBE  F031         	call	___llmod	;wreg free
  9003  005122  5165               	movf	?___llmod& (0+255),w,b
  9004  005124  6F79               	movwf	ultoa@c& (0+255),b
  9005                           
  9006                           ; BSR set to: 0
  9007  005126  C06F  F01F         	movff	ultoa@val,?___lldiv
  9008  00512A  C070  F020         	movff	ultoa@val+1,?___lldiv+1
  9009  00512E  C071  F021         	movff	ultoa@val+2,?___lldiv+2
  9010  005132  C072  F022         	movff	ultoa@val+3,?___lldiv+3
  9011  005136  D821               	call	PL92	;call to abstracted procedure
  9012  005138  EC75  F030         	call	___lldiv	;wreg free
  9013  00513C  C022  F072         	movff	?___lldiv+3,ultoa@val+3
  9014  005140  C021  F071         	movff	?___lldiv+2,ultoa@val+2
  9015  005144  C020  F070         	movff	?___lldiv+1,ultoa@val+1
  9016  005148  C01F  F06F         	movff	?___lldiv,ultoa@val
  9017                           
  9018                           ; BSR set to: 0
  9019  00514C  0E09               	movlw	9
  9020  00514E  6579               	cpfsgt	ultoa@c& (0+255),b
  9021  005150  D002               	goto	l2621
  9022                           
  9023                           ; BSR set to: 0
  9024  005152  0E07               	movlw	7
  9025  005154  2779               	addwf	ultoa@c& (0+255),f,b
  9026  005156                     l2621:
  9027                           
  9028                           ; BSR set to: 0
  9029  005156  0E30               	movlw	48
  9030  005158  2779               	addwf	ultoa@c& (0+255),f,b
  9031                           
  9032                           ; BSR set to: 0
  9033  00515A  C06D  FFD9         	movff	ultoa@buf,fsr2l
  9034  00515E  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
  9035  005162  C079  FFDF         	movff	ultoa@c,indf2
  9036                           
  9037                           ; BSR set to: 0
  9038  005166  076D               	decf	ultoa@buf& (0+255),f,b
  9039  005168  A0D8               	btfss	status,0,c
  9040  00516A  076E               	decf	(ultoa@buf+1)& (0+255),f,b
  9041                           
  9042                           ; BSR set to: 0
  9043  00516C  5172               	movf	(ultoa@val+3)& (0+255),w,b
  9044  00516E  116F               	iorwf	ultoa@val& (0+255),w,b
  9045  005170  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
  9046  005172  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
  9047  005174  B4D8               	btfsc	status,2,c
  9048                           
  9049                           ; BSR set to: 0
  9050  005176  0012               	return	
  9051  005178  D7C1               	goto	l18686
  9052  00517A                     __end_of_ultoa:
  9053                           	opt stack 0
  9054  00517A                     PL92:
  9055                           	opt stack 24
  9056  00517A  C073  F023         	movff	ultoa@base,?___lldiv+4
  9057  00517E  C074  F024         	movff	ultoa@base+1,?___lldiv+5
  9058  005182  0E00               	movlw	0
  9059  005184  BE24               	btfsc	?___lldiv+5,7,c
  9060  005186  0EFF               	movlw	-1
  9061  005188  6E25               	movwf	?___lldiv+6,c
  9062  00518A  6E26               	movwf	?___lldiv+7,c
  9063  00518C  0012               	return	
  9064  00518E                     __end_ofPL92:
  9065                           	opt stack 0
  9066                           tblptru	equ	0xFF8
  9067                           tblptrh	equ	0xFF7
  9068                           tblptrl	equ	0xFF6
  9069                           tablat	equ	0xFF5
  9070                           prodh	equ	0xFF4
  9071                           prodl	equ	0xFF3
  9072                           intcon	equ	0xFF2
  9073                           indf0	equ	0xFEF
  9074                           postinc0	equ	0xFEE
  9075                           fsr0h	equ	0xFEA
  9076                           fsr0l	equ	0xFE9
  9077                           wreg	equ	0xFE8
  9078                           indf1	equ	0xFE7
  9079                           postinc1	equ	0xFE6
  9080                           postdec1	equ	0xFE5
  9081                           fsr1h	equ	0xFE2
  9082                           fsr1l	equ	0xFE1
  9083                           indf2	equ	0xFDF
  9084                           postinc2	equ	0xFDE
  9085                           postdec2	equ	0xFDD
  9086                           plusw2	equ	0xFDB
  9087                           fsr2h	equ	0xFDA
  9088                           fsr2l	equ	0xFD9
  9089                           status	equ	0xFD8
  9090                           
  9091 ;; *************** function _doModeVscp *****************
  9092 ;; Defined at:
  9093 ;;		line 1434 in file "main.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  mask            1   85[BANK0 ] unsigned char 
  9098 ;;  filter          1   84[BANK0 ] unsigned char 
  9099 ;;  c               1   86[BANK0 ] unsigned char 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;		None               void
  9102 ;; Registers used:
  9103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9109 ;;      Params:         0       0       0       0       0       0       0
  9110 ;;      Locals:         0       3       0       0       0       0       0
  9111 ;;      Temps:          0       4       0       0       0       0       0
  9112 ;;      Totals:         0       7       0       0       0       0       0
  9113 ;;Total ram usage:        7 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    7
  9116 ;; This function calls:
  9117 ;;		_fifo_read
  9118 ;;		_ECANSetOperationMode
  9119 ;;		_setFilter
  9120 ;;		_Busy_eep
  9121 ;;		_Write_b_eep
  9122 ;;		_changeBaudrate
  9123 ;;		_receiveSendMultiEventCANAL
  9124 ;;		_receiveSendEventCANAL
  9125 ;;		_calcCRC
  9126 ;;		_sendVSCPDriverNack
  9127 ;;		_sendVSCPDriverAck
  9128 ;;		_receiveVSCPModeCanalMsg
  9129 ;;		_receiveVSCPModeMultiCanalMsg
  9130 ;;		_sendVSCPModeCapabilities
  9131 ;;		_sendVSCPDriverCommandReply
  9132 ;;		_sendVSCPDriverErrorFrame
  9133 ;; This function is called by:
  9134 ;;		_main
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text7
  9139  002B4A                     __ptext7:
  9140                           	opt stack 0
  9141  002B4A                     _doModeVscp:
  9142                           	opt stack 23
  9143                           
  9144                           ;main.c: 1435: uint8_t c;
  9145                           ;main.c: 1438: if ( caps.maxCanalFrames > 1 ) {
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;incstack = 0
  9149                           ;incstack = 0
  9150  002B4A  0100               	movlb	0	; () banked
  9151  002B4C  EE20  F0FD         	lfsr	2,_caps+1
  9152  002B50  0E01               	movlw	1
  9153  002B52  64DF               	cpfsgt	indf2,c
  9154  002B54  D003               	goto	l16382
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;main.c: 1441: receiveSendMultiEventCANAL();
  9158  002B56  EC03  F01D         	call	_receiveSendMultiEventCANAL	;wreg free
  9159                           
  9160                           ;main.c: 1442: }
  9161  002B5A  D002               	goto	l16384
  9162  002B5C                     l16382:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;main.c: 1443: else {
  9166                           ;main.c: 1446: receiveSendEventCANAL();
  9167  002B5C  EC13  F01F         	call	_receiveSendEventCANAL	;wreg free
  9168  002B60                     l16384:
  9169                           
  9170                           ;main.c: 1447: }
  9171                           ;main.c: 1450: (INTCONbits.GIE = 0);
  9172  002B60  9EF2               	bcf	intcon,7,c	;volatile
  9173                           
  9174                           ;main.c: 1452: if ( 1 == fifo_read( &serialInputFifo, &c, 1 ) ) {
  9175  002B62  0100               	movlb	0	; () banked
  9176  002B64  0E00               	movlw	high _serialInputFifo
  9177  002B66  6E20               	movwf	?_fifo_read+1,c
  9178  002B68  0EF4               	movlw	low _serialInputFifo
  9179  002B6A  6E1F               	movwf	?_fifo_read,c
  9180  002B6C  0E00               	movlw	high doModeVscp@c
  9181  002B6E  6E22               	movwf	?_fifo_read+3,c
  9182  002B70  0EB6               	movlw	low doModeVscp@c
  9183  002B72  6E21               	movwf	?_fifo_read+2,c
  9184  002B74  6A24               	clrf	?_fifo_read+5,c
  9185  002B76  0E01               	movlw	1
  9186  002B78  6E23               	movwf	?_fifo_read+4,c
  9187  002B7A  ECA7  F029         	call	_fifo_read	;wreg free
  9188  002B7E  041F               	decf	?_fifo_read,w,c
  9189  002B80  1020               	iorwf	?_fifo_read+1,w,c
  9190  002B82  E001 D16B          	bnz	l16620
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;main.c: 1455: (INTCONbits.GIE = 1);
  9194  002B86  8EF2               	bsf	intcon,7,c	;volatile
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;main.c: 1458: if ( pos >= sizeof( cmdbuf ) ) {
  9198  002B88  0E4F               	movlw	79
  9199  002B8A  0101               	movlb	1	; () banked
  9200  002B8C  6503               	cpfsgt	_pos& (0+255),b
  9201  002B8E  D003               	goto	l764
  9202                           
  9203                           ; BSR set to: 1
  9204                           ;main.c: 1460: pos = 0;
  9205  002B90  6B03               	clrf	_pos& (0+255),b
  9206                           
  9207                           ;main.c: 1461: bDLE = 0;
  9208  002B92  6A30               	clrf	_bDLE,c
  9209                           
  9210                           ;main.c: 1462: stateVscpDriver = 0;
  9211  002B94  6A32               	clrf	_stateVscpDriver,c
  9212  002B96                     l764:
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;main.c: 1463: }
  9216                           ;main.c: 1465: if ( 0 == stateVscpDriver ) {
  9217  002B96  6632               	tstfsz	_stateVscpDriver,c
  9218  002B98  D00F               	goto	l16408
  9219                           
  9220                           ; BSR set to: 1
  9221                           ;main.c: 1467: if ( bDLE ) {
  9222  002B9A  5030               	movf	_bDLE,w,c
  9223  002B9C  E00A               	bz	l16404
  9224                           
  9225                           ; BSR set to: 1
  9226                           ;main.c: 1469: bDLE = 0;
  9227  002B9E  6A30               	clrf	_bDLE,c
  9228                           
  9229                           ; BSR set to: 1
  9230                           ;main.c: 1472: if ( 0x02 == c ) {
  9231  002BA0  0100               	movlb	0	; () banked
  9232  002BA2  51B6               	movf	doModeVscp@c& (0+255),w,b
  9233  002BA4  0A02               	xorlw	2
  9234  002BA6  E129               	bnz	l16444
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;main.c: 1473: stateVscpDriver = 1;
  9238  002BA8  0E01               	movlw	1
  9239  002BAA  6E32               	movwf	_stateVscpDriver,c
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;main.c: 1474: pos = 0;
  9243  002BAC  0101               	movlb	1	; () banked
  9244  002BAE  6B03               	clrf	_pos& (0+255),b
  9245  002BB0  D024               	goto	l16444
  9246  002BB2                     l16404:
  9247                           
  9248                           ;main.c: 1477: else {
  9249                           ;main.c: 1478: bDLE = 1;
  9250  002BB2  0E01               	movlw	1
  9251  002BB4  6E30               	movwf	_bDLE,c
  9252  002BB6  D153               	goto	l769
  9253  002BB8                     l16408:
  9254                           
  9255                           ; BSR set to: 1
  9256                           ;main.c: 1482: else if ( 1 == stateVscpDriver ) {
  9257  002BB8  0432               	decf	_stateVscpDriver,w,c
  9258  002BBA  E11F               	bnz	l16444
  9259                           
  9260                           ; BSR set to: 1
  9261                           ;main.c: 1485: if ( bDLE ) {
  9262  002BBC  5030               	movf	_bDLE,w,c
  9263  002BBE  E018               	bz	l16428
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;main.c: 1488: bDLE = 0;
  9267  002BC0  6A30               	clrf	_bDLE,c
  9268                           
  9269                           ; BSR set to: 1
  9270                           ;main.c: 1491: if ( 0x03 == c ) {
  9271  002BC2  0100               	movlb	0	; () banked
  9272  002BC4  51B6               	movf	doModeVscp@c& (0+255),w,b
  9273  002BC6  0A03               	xorlw	3
  9274  002BC8  E103               	bnz	l16418
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;main.c: 1492: stateVscpDriver = 2;
  9278  002BCA  0E02               	movlw	2
  9279  002BCC  6E32               	movwf	_stateVscpDriver,c
  9280                           
  9281                           ;main.c: 1493: }
  9282  002BCE  D015               	goto	l16444
  9283  002BD0                     l16418:
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;main.c: 1495: else if (0x10 == c) {
  9287  002BD0  51B6               	movf	doModeVscp@c& (0+255),w,b
  9288  002BD2  0A10               	xorlw	16
  9289  002BD4  E112               	bnz	l16444
  9290  002BD6                     u21070:
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;main.c: 1497: cmdbuf[ pos++ ] = c;
  9294  002BD6  0101               	movlb	1	; () banked
  9295  002BD8  EC98  F015         	call	PL52	;call to abstracted procedure
  9296  002BDC  C0B6  FFDF         	movff	doModeVscp@c,indf2
  9297                           
  9298                           ; BSR set to: 0
  9299  002BE0  2B03               	incf	_pos& (0+255),f,b
  9300                           
  9301                           ; BSR set to: 1
  9302                           ;main.c: 1498: if ( pos >= sizeof( cmdbuf ) ) {
  9303  002BE2  0E4F               	movlw	79
  9304  002BE4  6503               	cpfsgt	_pos& (0+255),b
  9305  002BE6  D13B               	goto	l769
  9306                           
  9307                           ; BSR set to: 1
  9308                           ;main.c: 1501: bDLE = 0;
  9309  002BE8  6A30               	clrf	_bDLE,c
  9310                           
  9311                           ;main.c: 1502: pos = 0;
  9312  002BEA  6B03               	clrf	_pos& (0+255),b
  9313                           
  9314                           ;main.c: 1503: stateVscpDriver = 0;
  9315  002BEC  6A32               	clrf	_stateVscpDriver,c
  9316  002BEE  D137               	goto	l769
  9317  002BF0                     l16428:
  9318                           
  9319                           ; BSR set to: 1
  9320                           ;main.c: 1508: else {
  9321                           ;main.c: 1509: if (0x10 == c) {
  9322  002BF0  0100               	movlb	0	; () banked
  9323  002BF2  51B6               	movf	doModeVscp@c& (0+255),w,b
  9324  002BF4  0A10               	xorlw	16
  9325  002BF6  E0DD               	bz	l16404
  9326  002BF8  D7EE               	goto	u21070
  9327  002BFA                     l16444:
  9328                           
  9329                           ;main.c: 1525: }
  9330                           ;main.c: 1526: }
  9331                           ;main.c: 1527: }
  9332                           ;main.c: 1529: if (2 == stateVscpDriver) {
  9333  002BFA  5032               	movf	_stateVscpDriver,w,c
  9334  002BFC  0A02               	xorlw	2
  9335  002BFE  E001 D12D          	bnz	l16620
  9336                           
  9337                           ;main.c: 1532: stateVscpDriver = 0;
  9338  002C02  6A32               	clrf	_stateVscpDriver,c
  9339                           
  9340                           ;main.c: 1544: if (calcCRC(cmdbuf, pos)) {
  9341  002C04  0E01               	movlw	high _cmdbuf
  9342  002C06  0100               	movlb	0	; () banked
  9343  002C08  6F64               	movwf	(?_calcCRC+1)& (0+255),b
  9344  002C0A  0E05               	movlw	low _cmdbuf
  9345  002C0C  6F63               	movwf	?_calcCRC& (0+255),b
  9346  002C0E  C103  F065         	movff	_pos,?_calcCRC+2
  9347  002C12  ECD5  F034         	call	_calcCRC	;wreg free
  9348  002C16  0900               	iorlw	0
  9349  002C18  E003               	bz	l782
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;main.c: 1545: sendVSCPDriverNack();
  9353  002C1A  ECB2  F02D         	call	_sendVSCPDriverNack	;wreg free
  9354  002C1E  D11F               	goto	l769
  9355  002C20                     l782:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;main.c: 1547: }
  9359                           ;main.c: 1550: if (0 ==
  9360                           ;main.c: 1551: cmdbuf[ 0 ]) {
  9361  002C20  0101               	movlb	1	; () banked
  9362  002C22  6705               	tstfsz	_cmdbuf& (0+255),b
  9363  002C24  D003               	goto	l16456
  9364  002C26                     l16454:
  9365                           
  9366                           ;main.c: 1552: sendVSCPDriverAck();
  9367  002C26  EC60  F02D         	call	_sendVSCPDriverAck	;wreg free
  9368                           
  9369                           ;main.c: 1553: }
  9370  002C2A  D115               	goto	l16616
  9371  002C2C                     l16456:
  9372                           
  9373                           ; BSR set to: 1
  9374                           ;main.c: 1555: else if (1 ==
  9375                           ;main.c: 1556: cmdbuf[ 0 ]) {
  9376  002C2C  0505               	decf	_cmdbuf& (0+255),w,b
  9377  002C2E  E103               	bnz	l16460
  9378  002C30                     l16458:
  9379                           
  9380                           ;main.c: 1557: sendVSCPDriverNack();
  9381  002C30  ECB2  F02D         	call	_sendVSCPDriverNack	;wreg free
  9382                           
  9383                           ;main.c: 1558: }
  9384  002C34  D110               	goto	l16616
  9385  002C36                     l16460:
  9386                           
  9387                           ; BSR set to: 1
  9388                           ;main.c: 1560: else if (2 ==
  9389                           ;main.c: 1561: cmdbuf[ 0 ]) {
  9390  002C36  5105               	movf	_cmdbuf& (0+255),w,b
  9391  002C38  0A02               	xorlw	2
  9392  002C3A  E105               	bnz	l16468
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;main.c: 1562: if ( receiveVSCPModeCanalMsg() ) {
  9396  002C3C  ECC7  F028         	call	_receiveVSCPModeCanalMsg	;wreg free
  9397  002C40  0900               	iorlw	0
  9398  002C42  E1F1               	bnz	l16454
  9399  002C44  D7F5               	goto	l16458
  9400  002C46                     l16468:
  9401                           
  9402                           ; BSR set to: 1
  9403                           ;main.c: 1570: else if (6 ==
  9404                           ;main.c: 1571: cmdbuf[ 0 ]) {
  9405  002C46  5105               	movf	_cmdbuf& (0+255),w,b
  9406  002C48  0A06               	xorlw	6
  9407  002C4A  E103               	bnz	l16476
  9408                           
  9409                           ; BSR set to: 1
  9410                           ;main.c: 1572: if (receiveVSCPModeMultiCanalMsg()) {
  9411  002C4C  ECC0  F035         	call	_receiveVSCPModeMultiCanalMsg	;wreg free
  9412  002C50  D7F7               	goto	L5
  9413  002C52                     l16476:
  9414                           
  9415                           ; BSR set to: 1
  9416                           ;main.c: 1580: else if (6 ==
  9417                           ;main.c: 1581: cmdbuf[ 0 ]) {
  9418  002C52  5105               	movf	_cmdbuf& (0+255),w,b
  9419  002C54  0A06               	xorlw	6
  9420  002C56  E0EC               	bz	l16458
  9421                           
  9422                           ; BSR set to: 1
  9423                           ;main.c: 1585: else if (3 ==
  9424                           ;main.c: 1586: cmdbuf[ 0 ]) {
  9425  002C58  5105               	movf	_cmdbuf& (0+255),w,b
  9426  002C5A  0A03               	xorlw	3
  9427  002C5C  E163               	bnz	l16536
  9428                           
  9429                           ; BSR set to: 1
  9430                           ;main.c: 1588: if ( cmdbuf[ 5 ] ==
  9431                           ;main.c: 1589: 0) {
  9432  002C5E  670A               	tstfsz	(_cmdbuf+5)& (0+255),b
  9433  002C60  D001               	goto	l16486
  9434  002C62  D7E1               	goto	l16454
  9435  002C64                     l16486:
  9436                           
  9437                           ; BSR set to: 1
  9438                           ;main.c: 1593: else if ( cmdbuf[ 5 ] ==
  9439                           ;main.c: 1594: 1 ) {
  9440  002C64  050A               	decf	(_cmdbuf+5)& (0+255),w,b
  9441  002C66  E11E               	bnz	l16504
  9442                           
  9443                           ; BSR set to: 1
  9444                           ;main.c: 1596: if ( 2 == ( cmdbuf[ 3 ]<<8 +
  9445                           ;main.c: 1597: cmdbuf[ 4 ] ) ) {
  9446  002C68  C109  F0B0         	movff	_cmdbuf+4,??_doModeVscp
  9447  002C6C  0E08               	movlw	8
  9448  002C6E  0100               	movlb	0	; () banked
  9449  002C70  27B0               	addwf	??_doModeVscp& (0+255),f,b
  9450  002C72  D93B               	call	PL148	;call to abstracted procedure
  9451  002C74  D001               	goto	u21234
  9452  002C76                     u21235:
  9453  002C76  D935               	call	PL144	;call to abstracted procedure
  9454  002C78                     u21234:
  9455  002C78  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9456  002C7A  D7FD               	goto	u21235
  9457  002C7C  51B1               	movf	(??_doModeVscp+1)& (0+255),w,b
  9458  002C7E  0A02               	xorlw	2
  9459  002C80  11B2               	iorwf	(??_doModeVscp+2)& (0+255),w,b
  9460  002C82  E1D6               	bnz	l16458
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;main.c: 1599: if ( cmdbuf[ 5 + 1 ] < 4 ) {
  9464  002C84  0E04               	movlw	4
  9465  002C86  0101               	movlb	1	; () banked
  9466  002C88  610B               	cpfslt	(_cmdbuf+6)& (0+255),b
  9467  002C8A  D7D2               	goto	l16458
  9468                           
  9469                           ; BSR set to: 1
  9470                           ;main.c: 1600: mode = cmdbuf[ 5 + 1 ];
  9471  002C8C  C10B  F0F1         	movff	_cmdbuf+6,_mode
  9472                           
  9473                           ; BSR set to: 1
  9474                           ;main.c: 1601: (Busy_eep(), Write_b_eep(0x03,cmdbuf[ 5 + 1 ]));
  9475  002C90  ECBC  F035         	call	_Busy_eep	;wreg free
  9476  002C94  6A20               	clrf	?_Write_b_eep+1,c
  9477  002C96  0E03               	movlw	3
  9478  002C98  6E1F               	movwf	?_Write_b_eep,c
  9479  002C9A  C10B  F021         	movff	_cmdbuf+6,?_Write_b_eep+2
  9480  002C9E  ECBB  F034         	call	_Write_b_eep	;wreg free
  9481  002CA2  D7C1               	goto	l16454
  9482  002CA4                     l16504:
  9483                           
  9484                           ; BSR set to: 1
  9485                           ;main.c: 1615: else if ( cmdbuf[ 5 ] ==
  9486                           ;main.c: 1616: 2 ) {
  9487  002CA4  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9488  002CA6  0A02               	xorlw	2
  9489  002CA8  E121               	bnz	l16520
  9490                           
  9491                           ; BSR set to: 1
  9492                           ;main.c: 1618: if ( 2 == ( cmdbuf[ 3 ]<<8 +
  9493                           ;main.c: 1619: cmdbuf[ 4 ] ) ) {
  9494  002CAA  C109  F0B0         	movff	_cmdbuf+4,??_doModeVscp
  9495  002CAE  0E08               	movlw	8
  9496  002CB0  0100               	movlb	0	; () banked
  9497  002CB2  27B0               	addwf	??_doModeVscp& (0+255),f,b
  9498  002CB4  D91A               	call	PL148	;call to abstracted procedure
  9499  002CB6  D001               	goto	u21274
  9500  002CB8                     u21275:
  9501  002CB8  D914               	call	PL144	;call to abstracted procedure
  9502  002CBA                     u21274:
  9503  002CBA  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9504  002CBC  D7FD               	goto	u21275
  9505  002CBE  51B1               	movf	(??_doModeVscp+1)& (0+255),w,b
  9506  002CC0  0A02               	xorlw	2
  9507  002CC2  11B2               	iorwf	(??_doModeVscp+2)& (0+255),w,b
  9508  002CC4  E1B5               	bnz	l16458
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;main.c: 1621: if ( cmdbuf[ 5 + 1 ] ) {
  9512  002CC6  0101               	movlb	1	; () banked
  9513  002CC8  510B               	movf	(_cmdbuf+6)& (0+255),w,b
  9514  002CCA  E004               	bz	l808
  9515                           
  9516                           ; BSR set to: 1
  9517                           ;main.c: 1622: bTimestamp = 1;
  9518  002CCC  0E01               	movlw	1
  9519  002CCE  0100               	movlb	0	; () banked
  9520  002CD0  6FF0               	movwf	_bTimestamp& (0+255),b
  9521                           
  9522                           ;main.c: 1623: }
  9523  002CD2  D002               	goto	l16512
  9524  002CD4                     l808:
  9525                           
  9526                           ; BSR set to: 1
  9527                           ;main.c: 1624: else {
  9528                           ;main.c: 1625: bTimestamp = 0;
  9529  002CD4  0100               	movlb	0	; () banked
  9530  002CD6  6BF0               	clrf	_bTimestamp& (0+255),b
  9531  002CD8                     l16512:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;main.c: 1626: }
  9535                           ;main.c: 1628: (Busy_eep(), Write_b_eep(0x66,cmdbuf[ 5 + 1 ]));
  9536  002CD8  ECBC  F035         	call	_Busy_eep	;wreg free
  9537  002CDC  6A20               	clrf	?_Write_b_eep+1,c
  9538  002CDE  0E66               	movlw	102
  9539  002CE0  6E1F               	movwf	?_Write_b_eep,c
  9540  002CE2  C10B  F021         	movff	_cmdbuf+6,?_Write_b_eep+2
  9541  002CE6  ECBB  F034         	call	_Write_b_eep	;wreg free
  9542  002CEA  D79D               	goto	l16454
  9543  002CEC                     l16520:
  9544                           
  9545                           ; BSR set to: 1
  9546                           ;main.c: 1637: else if ( cmdbuf[ 5 ] ==
  9547                           ;main.c: 1638: 3 ) {
  9548  002CEC  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9549  002CEE  0A03               	xorlw	3
  9550  002CF0  E19F               	bnz	l16458
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;main.c: 1640: if ( 2 == ( cmdbuf[ 3 ]<<8 +
  9554                           ;main.c: 1641: cmdbuf[ 4 ] ) ) {
  9555  002CF2  C109  F0B0         	movff	_cmdbuf+4,??_doModeVscp
  9556  002CF6  0E08               	movlw	8
  9557  002CF8  0100               	movlb	0	; () banked
  9558  002CFA  27B0               	addwf	??_doModeVscp& (0+255),f,b
  9559  002CFC  D8F6               	call	PL148	;call to abstracted procedure
  9560  002CFE  D001               	goto	u21314
  9561  002D00                     u21315:
  9562  002D00  D8F0               	call	PL144	;call to abstracted procedure
  9563  002D02                     u21314:
  9564  002D02  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9565  002D04  D7FD               	goto	u21315
  9566  002D06  51B1               	movf	(??_doModeVscp+1)& (0+255),w,b
  9567  002D08  0A02               	xorlw	2
  9568  002D0A  11B2               	iorwf	(??_doModeVscp+2)& (0+255),w,b
  9569  002D0C  E191               	bnz	l16458
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;main.c: 1643: if ( cmdbuf[ 5 + 1 ] < 13 ) {
  9573  002D0E  0E0D               	movlw	13
  9574  002D10  0101               	movlb	1	; () banked
  9575  002D12  610B               	cpfslt	(_cmdbuf+6)& (0+255),b
  9576  002D14  D78D               	goto	l16458
  9577                           
  9578                           ; BSR set to: 1
  9579                           ;main.c: 1644: sendVSCPDriverAck();
  9580  002D16  EC60  F02D         	call	_sendVSCPDriverAck	;wreg free
  9581                           
  9582                           ;main.c: 1645: changeBaudrate( cmdbuf[ 5 + 1 ] );
  9583  002D1A  0101               	movlb	1	; () banked
  9584  002D1C  510B               	movf	(_cmdbuf+6)& (0+255),w,b
  9585  002D1E  ECBD  F02F         	call	_changeBaudrate
  9586                           
  9587                           ;main.c: 1646: }
  9588  002D22  D099               	goto	l16616
  9589  002D24                     l16536:
  9590                           
  9591                           ; BSR set to: 1
  9592                           ;main.c: 1661: else if (4 ==
  9593                           ;main.c: 1662: cmdbuf[ 0 ]) {
  9594  002D24  5105               	movf	_cmdbuf& (0+255),w,b
  9595  002D26  0A04               	xorlw	4
  9596  002D28  E083               	bz	l16458
  9597                           
  9598                           ; BSR set to: 1
  9599                           ;main.c: 1666: else if (8 ==
  9600                           ;main.c: 1667: cmdbuf[ 0 ]) {
  9601  002D2A  5105               	movf	_cmdbuf& (0+255),w,b
  9602  002D2C  0A08               	xorlw	8
  9603  002D2E  E107               	bnz	l16546
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;main.c: 1668: caps.maxVscpFrames = cmdbuf[ 5 ];
  9607  002D30  C10A  F0FC         	movff	_cmdbuf+5,_caps
  9608                           
  9609                           ;main.c: 1669: caps.maxCanalFrames = cmdbuf[ 5 + 1 ];
  9610  002D34  C10B  F0FD         	movff	_cmdbuf+6,_caps+1
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;main.c: 1670: sendVSCPModeCapabilities();
  9614  002D38  ECA6  F02B         	call	_sendVSCPModeCapabilities	;wreg free
  9615                           
  9616                           ;main.c: 1671: }
  9617  002D3C  D08C               	goto	l16616
  9618  002D3E                     l16546:
  9619                           
  9620                           ; BSR set to: 1
  9621                           ;main.c: 1673: else if (255 ==
  9622                           ;main.c: 1674: cmdbuf[ 0 ]) {
  9623  002D3E  2905               	incf	_cmdbuf& (0+255),w,b
  9624  002D40  E001 D086          	bnz	l16614
  9625                           
  9626                           ; BSR set to: 1
  9627                           ;main.c: 1676: if (cmdbuf[ 5 ] ==
  9628                           ;main.c: 1677: 0) {
  9629  002D44  670A               	tstfsz	(_cmdbuf+5)& (0+255),b
  9630  002D46  D006               	goto	l16552
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;main.c: 1678: sendVSCPDriverCommandReply(0, 0);
  9634  002D48  0E00               	movlw	0
  9635  002D4A  0100               	movlb	0	; () banked
  9636  002D4C  6B66               	clrf	?_sendVSCPDriverCommandReply& (0+255),b
  9637  002D4E  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9638                           
  9639                           ;main.c: 1679: }
  9640  002D52  D081               	goto	l16616
  9641  002D54                     l16552:
  9642                           
  9643                           ; BSR set to: 1
  9644                           ;main.c: 1681: else if (cmdbuf[ 5 ] ==
  9645                           ;main.c: 1682: 1) {
  9646  002D54  050A               	decf	(_cmdbuf+5)& (0+255),w,b
  9647  002D56  E10A               	bnz	l16558
  9648                           
  9649                           ; BSR set to: 1
  9650                           ;main.c: 1683: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  9651  002D58  0E00               	movlw	0
  9652  002D5A  EC6A  F035         	call	_ECANSetOperationMode
  9653                           
  9654                           ;main.c: 1684: sendVSCPDriverCommandReply(0, 1);
  9655  002D5E  0E01               	movlw	1
  9656  002D60  0100               	movlb	0	; () banked
  9657  002D62  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9658  002D64  0E00               	movlw	0
  9659  002D66  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9660                           
  9661                           ;main.c: 1685: }
  9662  002D6A  D075               	goto	l16616
  9663  002D6C                     l16558:
  9664                           
  9665                           ; BSR set to: 1
  9666                           ;main.c: 1687: else if (cmdbuf[ 5 ] ==
  9667                           ;main.c: 1688: 2) {
  9668  002D6C  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9669  002D6E  0A02               	xorlw	2
  9670  002D70  E10A               	bnz	l16564
  9671                           
  9672                           ; BSR set to: 1
  9673                           ;main.c: 1689: ECANSetOperationMode(ECAN_OP_MODE_LOOP);
  9674  002D72  0E40               	movlw	64
  9675  002D74  EC6A  F035         	call	_ECANSetOperationMode
  9676                           
  9677                           ;main.c: 1690: sendVSCPDriverCommandReply(0, 2);
  9678  002D78  0E02               	movlw	2
  9679  002D7A  0100               	movlb	0	; () banked
  9680  002D7C  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9681  002D7E  0E00               	movlw	0
  9682  002D80  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9683                           
  9684                           ;main.c: 1691: }
  9685  002D84  D068               	goto	l16616
  9686  002D86                     l16564:
  9687                           
  9688                           ; BSR set to: 1
  9689                           ;main.c: 1693: else if (cmdbuf[ 5 ] ==
  9690                           ;main.c: 1694: 3) {
  9691  002D86  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9692  002D88  0A03               	xorlw	3
  9693  002D8A  E10A               	bnz	l16570
  9694                           
  9695                           ; BSR set to: 1
  9696                           ;main.c: 1695: ECANSetOperationMode(ECAN_OP_MODE_LISTEN);
  9697  002D8C  0E60               	movlw	96
  9698  002D8E  EC6A  F035         	call	_ECANSetOperationMode
  9699                           
  9700                           ;main.c: 1696: sendVSCPDriverCommandReply(0, 3);
  9701  002D92  0E03               	movlw	3
  9702  002D94  0100               	movlb	0	; () banked
  9703  002D96  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9704  002D98  0E00               	movlw	0
  9705  002D9A  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9706                           
  9707                           ;main.c: 1697: }
  9708  002D9E  D05B               	goto	l16616
  9709  002DA0                     l16570:
  9710                           
  9711                           ; BSR set to: 1
  9712                           ;main.c: 1699: else if (cmdbuf[ 5 ] ==
  9713                           ;main.c: 1700: 4) {
  9714  002DA0  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9715  002DA2  0A04               	xorlw	4
  9716  002DA4  E10A               	bnz	l16576
  9717                           
  9718                           ; BSR set to: 1
  9719                           ;main.c: 1701: ECANSetOperationMode(0x20);
  9720  002DA6  0E20               	movlw	32
  9721  002DA8  EC6A  F035         	call	_ECANSetOperationMode
  9722                           
  9723                           ;main.c: 1702: sendVSCPDriverCommandReply(0, 4);
  9724  002DAC  0E04               	movlw	4
  9725  002DAE  0100               	movlb	0	; () banked
  9726  002DB0  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9727  002DB2  0E00               	movlw	0
  9728  002DB4  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9729                           
  9730                           ;main.c: 1703: }
  9731  002DB8  D04E               	goto	l16616
  9732  002DBA                     l16576:
  9733                           
  9734                           ; BSR set to: 1
  9735                           ;main.c: 1705: else if (cmdbuf[ 5 ] ==
  9736                           ;main.c: 1706: 5) {
  9737  002DBA  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9738  002DBC  0A05               	xorlw	5
  9739  002DBE  E122               	bnz	l16594
  9740                           
  9741                           ; BSR set to: 1
  9742                           ;main.c: 1708: if ( ( ( cmdbuf[ 3 ] << 8 +
  9743                           ;main.c: 1709: cmdbuf[ 3 ] ) < 6 ) &&
  9744                           ;main.c: 1710: ( cmdbuf[ 5 + 1 ] < 16 ) ) {
  9745  002DC0  D872               	call	PL26	;call to abstracted procedure
  9746  002DC2  B4D8               	btfsc	status,2,c
  9747  002DC4  5DB1               	subwf	(??_doModeVscp+1)& (0+255),w,b
  9748  002DC6  E20B               	bc	l16584
  9749                           
  9750                           ; BSR set to: 0
  9751  002DC8  0E10               	movlw	16
  9752  002DCA  0101               	movlb	1	; () banked
  9753  002DCC  610B               	cpfslt	(_cmdbuf+6)& (0+255),b
  9754  002DCE  D007               	goto	l16584
  9755                           
  9756                           ; BSR set to: 1
  9757                           ;main.c: 1712: sendVSCPDriverCommandReply(1, 5);
  9758  002DD0  0E05               	movlw	5
  9759  002DD2  0100               	movlb	0	; () banked
  9760  002DD4  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9761  002DD6  0E01               	movlw	1
  9762  002DD8  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9763                           
  9764                           ;main.c: 1713: }
  9765  002DDC  D03C               	goto	l16616
  9766  002DDE                     l16584:
  9767                           
  9768                           ;main.c: 1714: else {
  9769                           ;main.c: 1716: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
  9770  002DDE  0E80               	movlw	128
  9771  002DE0  EC6A  F035         	call	_ECANSetOperationMode
  9772                           
  9773                           ;main.c: 1718: uint8_t filter = ((uint32_t)cmdbuf[ 5 + 2 ]) << 24 +
  9774                           ;main.c: 1719: ((uint32_t)cmdbuf[ 5 + 3 ]) << 16 +
  9775                           ;main.c: 1720: ((uint32_t)cmdbuf[ 5 + 4 ]) << 8 +
  9776                           ;main.c: 1721: cmdbuf[ 5 + 5 ];
  9777  002DE4  D83D               	call	PL14	;call to abstracted procedure
  9778  002DE6  6FB4               	movwf	doModeVscp@filter& (0+255),b
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;main.c: 1722: setFilter( cmdbuf[ 5 + 1 ],
  9782                           ;main.c: 1723: filter,
  9783                           ;main.c: 1724: cmdbuf[ 5 + 6 ] );
  9784  002DE8  51B4               	movf	doModeVscp@filter& (0+255),w,b
  9785  002DEA  D872               	call	PL104	;call to abstracted procedure
  9786  002DEC  ECD3  F01B         	call	_setFilter
  9787                           
  9788                           ;main.c: 1727: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  9789  002DF0  0E00               	movlw	0
  9790  002DF2  EC6A  F035         	call	_ECANSetOperationMode
  9791                           
  9792                           ;main.c: 1729: sendVSCPDriverCommandReply(0, 5);
  9793  002DF6  0E05               	movlw	5
  9794  002DF8  0100               	movlb	0	; () banked
  9795  002DFA  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9796  002DFC  0E00               	movlw	0
  9797  002DFE  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9798  002E02  D029               	goto	l16616
  9799  002E04                     l16594:
  9800                           
  9801                           ; BSR set to: 1
  9802                           ;main.c: 1733: else if (cmdbuf[ 5 ] ==
  9803                           ;main.c: 1734: 6) {
  9804  002E04  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9805  002E06  0A06               	xorlw	6
  9806  002E08  E001 D712          	bnz	l16458
  9807                           
  9808                           ; BSR set to: 1
  9809                           ;main.c: 1736: if ( ( ( cmdbuf[ 3 ] << 8 +
  9810                           ;main.c: 1737: cmdbuf[ 3 ] ) < 6 ) &&
  9811                           ;main.c: 1738: ( cmdbuf[ 5 + 1 ] < 2 ) ) {
  9812  002E0C  D84C               	call	PL26	;call to abstracted procedure
  9813  002E0E  B4D8               	btfsc	status,2,c
  9814  002E10  5DB1               	subwf	(??_doModeVscp+1)& (0+255),w,b
  9815  002E12  E20B               	bc	l16602
  9816                           
  9817                           ; BSR set to: 0
  9818  002E14  0E02               	movlw	2
  9819  002E16  0101               	movlb	1	; () banked
  9820  002E18  610B               	cpfslt	(_cmdbuf+6)& (0+255),b
  9821  002E1A  D007               	goto	l16602
  9822                           
  9823                           ; BSR set to: 1
  9824                           ;main.c: 1740: sendVSCPDriverCommandReply(1, 5);
  9825  002E1C  0E05               	movlw	5
  9826  002E1E  0100               	movlb	0	; () banked
  9827  002E20  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9828  002E22  0E01               	movlw	1
  9829  002E24  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9830                           
  9831                           ;main.c: 1741: }
  9832  002E28  D016               	goto	l16616
  9833  002E2A                     l16602:
  9834                           
  9835                           ;main.c: 1742: else {
  9836                           ;main.c: 1744: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
  9837  002E2A  0E80               	movlw	128
  9838  002E2C  EC6A  F035         	call	_ECANSetOperationMode
  9839                           
  9840                           ;main.c: 1746: uint8_t mask = ((uint32_t)cmdbuf[ 5 + 2 ]) << 24 +
  9841                           ;main.c: 1747: ((uint32_t)cmdbuf[ 5 + 3 ]) << 16 +
  9842                           ;main.c: 1748: ((uint32_t)cmdbuf[ 5 + 4 ]) << 8 +
  9843                           ;main.c: 1749: cmdbuf[ 5 + 5 ];
  9844  002E30  D817               	call	PL14	;call to abstracted procedure
  9845  002E32  6FB5               	movwf	doModeVscp@mask& (0+255),b
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;main.c: 1750: setFilter( cmdbuf[ 5 + 1 ],
  9849                           ;main.c: 1751: mask,
  9850                           ;main.c: 1752: cmdbuf[ 5 + 6 ] );
  9851  002E34  51B5               	movf	doModeVscp@mask& (0+255),w,b
  9852  002E36  D84C               	call	PL104	;call to abstracted procedure
  9853  002E38  ECD3  F01B         	call	_setFilter
  9854                           
  9855                           ;main.c: 1755: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  9856  002E3C  0E00               	movlw	0
  9857  002E3E  EC6A  F035         	call	_ECANSetOperationMode
  9858                           
  9859                           ;main.c: 1757: sendVSCPDriverCommandReply(1, 5);
  9860  002E42  0E05               	movlw	5
  9861  002E44  0100               	movlb	0	; () banked
  9862  002E46  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9863  002E48  0E01               	movlw	1
  9864  002E4A  EC3A  F029         	call	_sendVSCPDriverCommandReply
  9865  002E4E  D003               	goto	l16616
  9866  002E50                     l16614:
  9867                           
  9868                           ; BSR set to: 1
  9869                           ;main.c: 1765: else {
  9870                           ;main.c: 1767: sendVSCPDriverErrorFrame(2);
  9871  002E50  0E02               	movlw	2
  9872  002E52  EC44  F02B         	call	_sendVSCPDriverErrorFrame
  9873  002E56                     l16616:
  9874                           
  9875                           ;main.c: 1768: }
  9876                           ;main.c: 1771: pos = 0;
  9877  002E56  0101               	movlb	1	; () banked
  9878  002E58  6B03               	clrf	_pos& (0+255),b
  9879                           
  9880                           ; BSR set to: 1
  9881                           ;main.c: 1772: stateVscpDriver = 0;
  9882  002E5A  6A32               	clrf	_stateVscpDriver,c
  9883  002E5C                     l16620:
  9884                           
  9885                           ;main.c: 1774: }
  9886                           ;main.c: 1776: }
  9887                           ;main.c: 1779: (INTCONbits.GIE = 1);
  9888  002E5C  8EF2               	bsf	intcon,7,c	;volatile
  9889  002E5E                     l769:
  9890  002E5E  0012               	return	
  9891  002E60                     __end_of_doModeVscp:
  9892                           	opt stack 0
  9893  002E60                     PL14:
  9894                           	opt stack 23
  9895  002E60  C10F  F0B0         	movff	_cmdbuf+10,??_doModeVscp
  9896  002E64  0E08               	movlw	8
  9897  002E66  0100               	movlb	0	; () banked
  9898  002E68  27B0               	addwf	??_doModeVscp& (0+255),f,b
  9899  002E6A  C10E  F0B1         	movff	_cmdbuf+9,??_doModeVscp+1
  9900  002E6E  0E10               	movlw	16
  9901  002E70  27B1               	addwf	(??_doModeVscp+1)& (0+255),f,b
  9902  002E72  C10D  F0B2         	movff	_cmdbuf+8,??_doModeVscp+2
  9903  002E76  0E18               	movlw	24
  9904  002E78  27B2               	addwf	(??_doModeVscp+2)& (0+255),f,b
  9905  002E7A  C10C  F0B3         	movff	_cmdbuf+7,??_doModeVscp+3
  9906  002E7E  2BB2               	incf	(??_doModeVscp+2)& (0+255),f,b
  9907  002E80  D002               	goto	u21464
  9908  002E82                     u21465:
  9909  002E82  90D8               	bcf	status,0,c
  9910  002E84  37B3               	rlcf	(??_doModeVscp+3)& (0+255),f,b
  9911  002E86                     u21464:
  9912  002E86  2FB2               	decfsz	(??_doModeVscp+2)& (0+255),f,b
  9913  002E88  D7FC               	goto	u21465
  9914  002E8A  2BB1               	incf	(??_doModeVscp+1)& (0+255),f,b
  9915  002E8C  D002               	goto	u21474
  9916  002E8E                     u21475:
  9917  002E8E  90D8               	bcf	status,0,c
  9918  002E90  37B3               	rlcf	(??_doModeVscp+3)& (0+255),f,b
  9919  002E92                     u21474:
  9920  002E92  2FB1               	decfsz	(??_doModeVscp+1)& (0+255),f,b
  9921  002E94  D7FC               	goto	u21475
  9922  002E96  2BB0               	incf	??_doModeVscp& (0+255),f,b
  9923  002E98  D002               	goto	u21484
  9924  002E9A                     u21485:
  9925  002E9A  90D8               	bcf	status,0,c
  9926  002E9C  37B3               	rlcf	(??_doModeVscp+3)& (0+255),f,b
  9927  002E9E                     u21484:
  9928  002E9E  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9929  002EA0  D7FC               	goto	u21485
  9930  002EA2  51B3               	movf	(??_doModeVscp+3)& (0+255),w,b
  9931  002EA4  0012               	return	
  9932  002EA6                     __end_ofPL14:
  9933                           	opt stack 0
  9934  002EA6                     PL26:
  9935                           	opt stack 23
  9936  002EA6  C108  F0B0         	movff	_cmdbuf+3,??_doModeVscp
  9937  002EAA  0E08               	movlw	8
  9938  002EAC  0100               	movlb	0	; () banked
  9939  002EAE  27B0               	addwf	??_doModeVscp& (0+255),f,b
  9940  002EB0  0101               	movlb	1	; () banked
  9941  002EB2  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  9942  002EB4  0100               	movlb	0	; () banked
  9943  002EB6  6FB1               	movwf	(??_doModeVscp+1)& (0+255),b
  9944  002EB8  6BB2               	clrf	(??_doModeVscp+2)& (0+255),b
  9945  002EBA  2BB0               	incf	??_doModeVscp& (0+255),f,b
  9946  002EBC  D003               	goto	u21434
  9947  002EBE                     u21435:
  9948  002EBE  90D8               	bcf	status,0,c
  9949  002EC0  37B1               	rlcf	(??_doModeVscp+1)& (0+255),f,b
  9950  002EC2  37B2               	rlcf	(??_doModeVscp+2)& (0+255),f,b
  9951  002EC4                     u21434:
  9952  002EC4  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9953  002EC6  D7FB               	goto	u21435
  9954  002EC8  51B2               	movf	(??_doModeVscp+2)& (0+255),w,b
  9955  002ECA  0A80               	xorlw	128
  9956  002ECC  0F80               	addlw	-128
  9957  002ECE  0C06               	retlw	6
  9958  002ED0                     __end_ofPL26:
  9959                           	opt stack 0
  9960  002ED0                     PL104:
  9961                           	opt stack 23
  9962  002ED0  6E23               	movwf	?_setFilter,c
  9963  002ED2  6A24               	clrf	?_setFilter+1,c
  9964  002ED4  6A25               	clrf	?_setFilter+2,c
  9965  002ED6  6A26               	clrf	?_setFilter+3,c
  9966  002ED8  C110  F027         	movff	_cmdbuf+11,?_setFilter+4
  9967  002EDC  0101               	movlb	1	; () banked
  9968  002EDE  510B               	movf	(_cmdbuf+6)& (0+255),w,b
  9969  002EE0  0012               	return	
  9970  002EE2                     __end_ofPL104:
  9971                           	opt stack 0
  9972  002EE2                     PL144:
  9973                           	opt stack 23
  9974  002EE2  90D8               	bcf	status,0,c
  9975  002EE4  37B1               	rlcf	(??_doModeVscp+1)& (0+255),f,b
  9976  002EE6  37B2               	rlcf	(??_doModeVscp+2)& (0+255),f,b
  9977  002EE8  0012               	return	
  9978  002EEA                     __end_ofPL144:
  9979                           	opt stack 0
  9980  002EEA                     PL148:
  9981                           	opt stack 23
  9982  002EEA  0101               	movlb	1	; () banked
  9983  002EEC  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  9984  002EEE  0100               	movlb	0	; () banked
  9985  002EF0  6FB1               	movwf	(??_doModeVscp+1)& (0+255),b
  9986  002EF2  6BB2               	clrf	(??_doModeVscp+2)& (0+255),b
  9987  002EF4  2BB0               	incf	??_doModeVscp& (0+255),f,b
  9988  002EF6  0012               	return	
  9989  002EF8                     __end_ofPL148:
  9990                           	opt stack 0
  9991                           tblptru	equ	0xFF8
  9992                           tblptrh	equ	0xFF7
  9993                           tblptrl	equ	0xFF6
  9994                           tablat	equ	0xFF5
  9995                           prodh	equ	0xFF4
  9996                           prodl	equ	0xFF3
  9997                           intcon	equ	0xFF2
  9998                           indf0	equ	0xFEF
  9999                           postinc0	equ	0xFEE
 10000                           fsr0h	equ	0xFEA
 10001                           fsr0l	equ	0xFE9
 10002                           wreg	equ	0xFE8
 10003                           indf1	equ	0xFE7
 10004                           postinc1	equ	0xFE6
 10005                           postdec1	equ	0xFE5
 10006                           fsr1h	equ	0xFE2
 10007                           fsr1l	equ	0xFE1
 10008                           indf2	equ	0xFDF
 10009                           postinc2	equ	0xFDE
 10010                           postdec2	equ	0xFDD
 10011                           plusw2	equ	0xFDB
 10012                           fsr2h	equ	0xFDA
 10013                           fsr2l	equ	0xFD9
 10014                           status	equ	0xFD8
 10015                           
 10016 ;; *************** function _sendVSCPDriverErrorFrame *****************
 10017 ;; Defined at:
 10018 ;;		line 2040 in file "main.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  errorcode       1    wreg     unsigned char 
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;  errorcode       1    6[BANK0 ] unsigned char 
 10023 ;;  crc             1    7[BANK0 ] unsigned char 
 10024 ;; Return value:  Size  Location     Type
 10025 ;;		None               void
 10026 ;; Registers used:
 10027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : F/1
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10033 ;;      Params:         0       0       0       0       0       0       0
 10034 ;;      Locals:         0       2       0       0       0       0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0
 10036 ;;      Totals:         0       2       0       0       0       0       0
 10037 ;;Total ram usage:        2 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    6
 10040 ;; This function calls:
 10041 ;;		_WriteUSART
 10042 ;;		_sendEscapedUartData
 10043 ;;		_crc8
 10044 ;; This function is called by:
 10045 ;;		_doModeVscp
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text8
 10050  005688                     __ptext8:
 10051                           	opt stack 0
 10052  005688                     _sendVSCPDriverErrorFrame:
 10053                           	opt stack 23
 10054                           
 10055                           ;incstack = 0
 10056                           ;incstack = 0
 10057                           ;sendVSCPDriverErrorFrame@errorcode stored from wreg
 10058  005688  CFE8 F066          	movff	wreg,sendVSCPDriverErrorFrame@errorcode
 10059                           
 10060                           ; BSR set to: 1
 10061                           ;main.c: 2041: uint8_t crc = 0;
 10062  00568C  0100               	movlb	0	; () banked
 10063  00568E  6B67               	clrf	sendVSCPDriverErrorFrame@crc& (0+255),b
 10064  005690                     l914:
 10065  005690  A2AC               	btfss	4012,1,c	;volatile
 10066  005692  D7FE               	goto	l914
 10067                           
 10068                           ;main.c: 2045: WriteUSART(0x10);
 10069  005694  0E10               	movlw	16
 10070  005696  EC81  F035         	call	_WriteUSART
 10071  00569A                     l917:
 10072  00569A  A2AC               	btfss	4012,1,c	;volatile
 10073  00569C  D7FE               	goto	l917
 10074                           
 10075                           ;main.c: 2047: WriteUSART(0x02);
 10076  00569E  0E02               	movlw	2
 10077  0056A0  EC81  F035         	call	_WriteUSART
 10078  0056A4                     l920:
 10079  0056A4  A2AC               	btfss	4012,1,c	;volatile
 10080  0056A6  D7FE               	goto	l920
 10081                           
 10082                           ;main.c: 2051: WriteUSART(253);
 10083  0056A8  0EFD               	movlw	253
 10084  0056AA  EC81  F035         	call	_WriteUSART
 10085                           
 10086                           ;main.c: 2052: crc8(&crc, 253);
 10087  0056AE  0100               	movlb	0	; () banked
 10088  0056B0  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
 10089  0056B2  6F61               	movwf	(?_crc8+1)& (0+255),b
 10090  0056B4  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
 10091  0056B6  6F60               	movwf	?_crc8& (0+255),b
 10092  0056B8  0EFD               	movlw	253
 10093  0056BA  6F62               	movwf	(?_crc8+2)& (0+255),b
 10094  0056BC  EC67  F034         	call	_crc8	;wreg free
 10095  0056C0                     l923:
 10096  0056C0  A2AC               	btfss	4012,1,c	;volatile
 10097  0056C2  D7FE               	goto	l923
 10098                           
 10099                           ;main.c: 2056: WriteUSART(0);
 10100  0056C4  0E00               	movlw	0
 10101  0056C6  EC81  F035         	call	_WriteUSART
 10102                           
 10103                           ;main.c: 2057: crc8(&crc, 0);
 10104  0056CA  D839               	call	PL126	;call to abstracted procedure
 10105  0056CC  EC67  F034         	call	_crc8	;wreg free
 10106                           
 10107                           ; BSR set to: 3
 10108                           ;main.c: 2060: sendEscapedUartData(cmdbuf[ 2 ], &crc);
 10109  0056D0  0100               	movlb	0	; () banked
 10110  0056D2  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
 10111  0056D4  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10112  0056D6  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
 10113  0056D8  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10114  0056DA  0101               	movlb	1	; () banked
 10115  0056DC  5107               	movf	(_cmdbuf+2)& (0+255),w,b
 10116  0056DE  ECEF  F031         	call	_sendEscapedUartData
 10117  0056E2                     l926:
 10118  0056E2  A2AC               	btfss	4012,1,c	;volatile
 10119  0056E4  D7FE               	goto	l926
 10120                           
 10121                           ;main.c: 2064: WriteUSART(0);
 10122  0056E6  0E00               	movlw	0
 10123  0056E8  EC81  F035         	call	_WriteUSART
 10124                           
 10125                           ;main.c: 2065: crc8(&crc, 0);
 10126  0056EC  D828               	call	PL126	;call to abstracted procedure
 10127  0056EE  EC67  F034         	call	_crc8	;wreg free
 10128  0056F2                     l929:
 10129  0056F2  A2AC               	btfss	4012,1,c	;volatile
 10130  0056F4  D7FE               	goto	l929
 10131                           
 10132                           ;main.c: 2067: WriteUSART(1);
 10133  0056F6  0E01               	movlw	1
 10134  0056F8  EC81  F035         	call	_WriteUSART
 10135                           
 10136                           ;main.c: 2068: crc8(&crc, 1);
 10137  0056FC  0100               	movlb	0	; () banked
 10138  0056FE  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
 10139  005700  6F61               	movwf	(?_crc8+1)& (0+255),b
 10140  005702  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
 10141  005704  6F60               	movwf	?_crc8& (0+255),b
 10142  005706  0E01               	movlw	1
 10143  005708  6F62               	movwf	(?_crc8+2)& (0+255),b
 10144  00570A  EC67  F034         	call	_crc8	;wreg free
 10145                           
 10146                           ; BSR set to: 3
 10147                           ;main.c: 2071: sendEscapedUartData(errorcode, &crc);
 10148  00570E  0100               	movlb	0	; () banked
 10149  005710  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
 10150  005712  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10151  005714  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
 10152  005716  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10153  005718  5166               	movf	sendVSCPDriverErrorFrame@errorcode& (0+255),w,b
 10154  00571A  ECEF  F031         	call	_sendEscapedUartData
 10155                           
 10156                           ;main.c: 2074: sendEscapedUartData(crc, (0));
 10157  00571E  0100               	movlb	0	; () banked
 10158  005720  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10159  005722  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10160  005724  5167               	movf	sendVSCPDriverErrorFrame@crc& (0+255),w,b
 10161  005726  ECEF  F031         	call	_sendEscapedUartData
 10162  00572A                     l932:
 10163  00572A  A2AC               	btfss	4012,1,c	;volatile
 10164  00572C  D7FE               	goto	l932
 10165                           
 10166                           ;main.c: 2078: WriteUSART(0x10);
 10167  00572E  0E10               	movlw	16
 10168  005730  EC81  F035         	call	_WriteUSART
 10169  005734                     l935:
 10170  005734  A2AC               	btfss	4012,1,c	;volatile
 10171  005736  D7FE               	goto	l935
 10172                           
 10173                           ;main.c: 2080: WriteUSART(0x03);
 10174  005738  0E03               	movlw	3
 10175  00573A  EF81  F035         	goto	_WriteUSART
 10176  00573E                     __end_of_sendVSCPDriverErrorFrame:
 10177                           	opt stack 0
 10178  00573E                     PL126:
 10179                           	opt stack 23
 10180  00573E  0100               	movlb	0	; () banked
 10181  005740  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
 10182  005742  6F61               	movwf	(?_crc8+1)& (0+255),b
 10183  005744  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
 10184  005746  6F60               	movwf	?_crc8& (0+255),b
 10185  005748  6B62               	clrf	(?_crc8+2)& (0+255),b
 10186  00574A  0C00               	retlw	0
 10187  00574C                     __end_ofPL126:
 10188                           	opt stack 0
 10189                           tblptru	equ	0xFF8
 10190                           tblptrh	equ	0xFF7
 10191                           tblptrl	equ	0xFF6
 10192                           tablat	equ	0xFF5
 10193                           prodh	equ	0xFF4
 10194                           prodl	equ	0xFF3
 10195                           intcon	equ	0xFF2
 10196                           indf0	equ	0xFEF
 10197                           postinc0	equ	0xFEE
 10198                           fsr0h	equ	0xFEA
 10199                           fsr0l	equ	0xFE9
 10200                           wreg	equ	0xFE8
 10201                           indf1	equ	0xFE7
 10202                           postinc1	equ	0xFE6
 10203                           postdec1	equ	0xFE5
 10204                           fsr1h	equ	0xFE2
 10205                           fsr1l	equ	0xFE1
 10206                           indf2	equ	0xFDF
 10207                           postinc2	equ	0xFDE
 10208                           postdec2	equ	0xFDD
 10209                           plusw2	equ	0xFDB
 10210                           fsr2h	equ	0xFDA
 10211                           fsr2l	equ	0xFD9
 10212                           status	equ	0xFD8
 10213                           
 10214 ;; *************** function _sendVSCPDriverCommandReply *****************
 10215 ;; Defined at:
 10216 ;;		line 2177 in file "main.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  cmdReplyCode    1    wreg     unsigned char 
 10219 ;;  cmdCode         1    6[BANK0 ] unsigned char 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  cmdReplyCode    1    7[BANK0 ] unsigned char 
 10222 ;;  crc             1    8[BANK0 ] unsigned char 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;		None               void
 10225 ;; Registers used:
 10226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : F/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10232 ;;      Params:         0       1       0       0       0       0       0
 10233 ;;      Locals:         0       2       0       0       0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0
 10235 ;;      Totals:         0       3       0       0       0       0       0
 10236 ;;Total ram usage:        3 bytes
 10237 ;; Hardware stack levels used:    1
 10238 ;; Hardware stack levels required when called:    6
 10239 ;; This function calls:
 10240 ;;		_WriteUSART
 10241 ;;		_sendEscapedUartData
 10242 ;;		_crc8
 10243 ;; This function is called by:
 10244 ;;		_doModeVscp
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text9
 10249  005274                     __ptext9:
 10250                           	opt stack 0
 10251  005274                     _sendVSCPDriverCommandReply:
 10252                           	opt stack 23
 10253                           
 10254                           ;incstack = 0
 10255                           ;incstack = 0
 10256                           ;sendVSCPDriverCommandReply@cmdReplyCode stored from wreg
 10257  005274  CFE8 F067          	movff	wreg,sendVSCPDriverCommandReply@cmdReplyCode
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;main.c: 2178: uint8_t crc = 0;
 10261  005278  6B68               	clrf	sendVSCPDriverCommandReply@crc& (0+255),b
 10262  00527A                     l995:
 10263                           
 10264                           ; BSR set to: 0
 10265  00527A  A2AC               	btfss	4012,1,c	;volatile
 10266  00527C  D7FE               	goto	l995
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;main.c: 2182: WriteUSART(0x10);
 10270  00527E  0E10               	movlw	16
 10271  005280  EC81  F035         	call	_WriteUSART
 10272  005284                     l998:
 10273  005284  A2AC               	btfss	4012,1,c	;volatile
 10274  005286  D7FE               	goto	l998
 10275                           
 10276                           ;main.c: 2184: WriteUSART(0x02);
 10277  005288  0E02               	movlw	2
 10278  00528A  EC81  F035         	call	_WriteUSART
 10279  00528E                     l1001:
 10280  00528E  A2AC               	btfss	4012,1,c	;volatile
 10281  005290  D7FE               	goto	l1001
 10282                           
 10283                           ;main.c: 2188: WriteUSART(254);
 10284  005292  0EFE               	movlw	254
 10285  005294  EC81  F035         	call	_WriteUSART
 10286                           
 10287                           ;main.c: 2189: crc8(&crc, 254);
 10288  005298  0100               	movlb	0	; () banked
 10289  00529A  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10290  00529C  6F61               	movwf	(?_crc8+1)& (0+255),b
 10291  00529E  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10292  0052A0  6F60               	movwf	?_crc8& (0+255),b
 10293  0052A2  0EFE               	movlw	254
 10294  0052A4  6F62               	movwf	(?_crc8+2)& (0+255),b
 10295  0052A6  EC67  F034         	call	_crc8	;wreg free
 10296  0052AA                     l1004:
 10297  0052AA  A2AC               	btfss	4012,1,c	;volatile
 10298  0052AC  D7FE               	goto	l1004
 10299                           
 10300                           ;main.c: 2193: WriteUSART(0);
 10301  0052AE  0E00               	movlw	0
 10302  0052B0  EC81  F035         	call	_WriteUSART
 10303                           
 10304                           ;main.c: 2194: crc8(&crc, 0);
 10305  0052B4  D845               	call	PL130	;call to abstracted procedure
 10306  0052B6  EC67  F034         	call	_crc8	;wreg free
 10307                           
 10308                           ; BSR set to: 3
 10309                           ;main.c: 2197: sendEscapedUartData(cmdbuf[ 2 ], &crc);
 10310  0052BA  0100               	movlb	0	; () banked
 10311  0052BC  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10312  0052BE  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10313  0052C0  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10314  0052C2  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10315  0052C4  0101               	movlb	1	; () banked
 10316  0052C6  5107               	movf	(_cmdbuf+2)& (0+255),w,b
 10317  0052C8  ECEF  F031         	call	_sendEscapedUartData
 10318  0052CC                     l1007:
 10319  0052CC  A2AC               	btfss	4012,1,c	;volatile
 10320  0052CE  D7FE               	goto	l1007
 10321                           
 10322                           ;main.c: 2201: WriteUSART(0);
 10323  0052D0  0E00               	movlw	0
 10324  0052D2  EC81  F035         	call	_WriteUSART
 10325                           
 10326                           ;main.c: 2202: crc8(&crc, 0);
 10327  0052D6  D834               	call	PL130	;call to abstracted procedure
 10328  0052D8  EC67  F034         	call	_crc8	;wreg free
 10329  0052DC                     l1010:
 10330  0052DC  A2AC               	btfss	4012,1,c	;volatile
 10331  0052DE  D7FE               	goto	l1010
 10332                           
 10333                           ;main.c: 2204: WriteUSART(2);
 10334  0052E0  0E02               	movlw	2
 10335  0052E2  EC81  F035         	call	_WriteUSART
 10336                           
 10337                           ;main.c: 2205: crc8(&crc, 2);
 10338  0052E6  0100               	movlb	0	; () banked
 10339  0052E8  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10340  0052EA  6F61               	movwf	(?_crc8+1)& (0+255),b
 10341  0052EC  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10342  0052EE  6F60               	movwf	?_crc8& (0+255),b
 10343  0052F0  0E02               	movlw	2
 10344  0052F2  6F62               	movwf	(?_crc8+2)& (0+255),b
 10345  0052F4  EC67  F034         	call	_crc8	;wreg free
 10346  0052F8                     l1013:
 10347  0052F8  A2AC               	btfss	4012,1,c	;volatile
 10348  0052FA  D7FE               	goto	l1013
 10349                           
 10350                           ;main.c: 2209: sendEscapedUartData(cmdReplyCode, &crc);
 10351  0052FC  0100               	movlb	0	; () banked
 10352  0052FE  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10353  005300  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10354  005302  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10355  005304  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10356  005306  5167               	movf	sendVSCPDriverCommandReply@cmdReplyCode& (0+255),w,b
 10357  005308  ECEF  F031         	call	_sendEscapedUartData
 10358  00530C                     l1016:
 10359  00530C  A2AC               	btfss	4012,1,c	;volatile
 10360  00530E  D7FE               	goto	l1016
 10361                           
 10362                           ;main.c: 2213: sendEscapedUartData(cmdCode, &crc);
 10363  005310  0100               	movlb	0	; () banked
 10364  005312  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10365  005314  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10366  005316  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10367  005318  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10368  00531A  5166               	movf	sendVSCPDriverCommandReply@cmdCode& (0+255),w,b
 10369  00531C  ECEF  F031         	call	_sendEscapedUartData
 10370                           
 10371                           ;main.c: 2216: sendEscapedUartData(crc, (0));
 10372  005320  0100               	movlb	0	; () banked
 10373  005322  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10374  005324  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10375  005326  5168               	movf	sendVSCPDriverCommandReply@crc& (0+255),w,b
 10376  005328  ECEF  F031         	call	_sendEscapedUartData
 10377  00532C                     l1019:
 10378  00532C  A2AC               	btfss	4012,1,c	;volatile
 10379  00532E  D7FE               	goto	l1019
 10380                           
 10381                           ;main.c: 2220: WriteUSART(0x10);
 10382  005330  0E10               	movlw	16
 10383  005332  EC81  F035         	call	_WriteUSART
 10384  005336                     l1022:
 10385  005336  A2AC               	btfss	4012,1,c	;volatile
 10386  005338  D7FE               	goto	l1022
 10387                           
 10388                           ;main.c: 2222: WriteUSART(0x03);
 10389  00533A  0E03               	movlw	3
 10390  00533C  EF81  F035         	goto	_WriteUSART
 10391  005340                     __end_of_sendVSCPDriverCommandReply:
 10392                           	opt stack 0
 10393  005340                     PL130:
 10394                           	opt stack 23
 10395  005340  0100               	movlb	0	; () banked
 10396  005342  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10397  005344  6F61               	movwf	(?_crc8+1)& (0+255),b
 10398  005346  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10399  005348  6F60               	movwf	?_crc8& (0+255),b
 10400  00534A  6B62               	clrf	(?_crc8+2)& (0+255),b
 10401  00534C  0C00               	retlw	0
 10402  00534E                     __end_ofPL130:
 10403                           	opt stack 0
 10404                           tblptru	equ	0xFF8
 10405                           tblptrh	equ	0xFF7
 10406                           tblptrl	equ	0xFF6
 10407                           tablat	equ	0xFF5
 10408                           prodh	equ	0xFF4
 10409                           prodl	equ	0xFF3
 10410                           intcon	equ	0xFF2
 10411                           indf0	equ	0xFEF
 10412                           postinc0	equ	0xFEE
 10413                           fsr0h	equ	0xFEA
 10414                           fsr0l	equ	0xFE9
 10415                           wreg	equ	0xFE8
 10416                           indf1	equ	0xFE7
 10417                           postinc1	equ	0xFE6
 10418                           postdec1	equ	0xFE5
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           postdec2	equ	0xFDD
 10424                           plusw2	equ	0xFDB
 10425                           fsr2h	equ	0xFDA
 10426                           fsr2l	equ	0xFD9
 10427                           status	equ	0xFD8
 10428                           
 10429 ;; *************** function _sendVSCPModeCapabilities *****************
 10430 ;; Defined at:
 10431 ;;		line 2584 in file "main.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  crc             1    6[BANK0 ] unsigned char 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      enum E15660
 10438 ;; Registers used:
 10439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10440 ;; Tracked objects:
 10441 ;;		On entry : F/1
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10445 ;;      Params:         0       0       0       0       0       0       0
 10446 ;;      Locals:         0       1       0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0
 10448 ;;      Totals:         0       1       0       0       0       0       0
 10449 ;;Total ram usage:        1 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    6
 10452 ;; This function calls:
 10453 ;;		_WriteUSART
 10454 ;;		_sendEscapedUartData
 10455 ;;		_crc8
 10456 ;; This function is called by:
 10457 ;;		_doModeVscp
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text10
 10462  00574C                     __ptext10:
 10463                           	opt stack 0
 10464  00574C                     _sendVSCPModeCapabilities:
 10465                           	opt stack 23
 10466                           
 10467                           ; BSR set to: 1
 10468                           ;main.c: 2585: uint8_t crc = 0;
 10469                           
 10470                           ;incstack = 0
 10471                           ;incstack = 0
 10472  00574C  0100               	movlb	0	; () banked
 10473  00574E  6B66               	clrf	sendVSCPModeCapabilities@crc& (0+255),b
 10474  005750                     l1155:
 10475  005750  A2AC               	btfss	4012,1,c	;volatile
 10476  005752  D7FE               	goto	l1155
 10477                           
 10478                           ;main.c: 2589: WriteUSART(0x10);
 10479  005754  0E10               	movlw	16
 10480  005756  EC81  F035         	call	_WriteUSART
 10481  00575A                     l1158:
 10482  00575A  A2AC               	btfss	4012,1,c	;volatile
 10483  00575C  D7FE               	goto	l1158
 10484                           
 10485                           ;main.c: 2591: WriteUSART(0x02);
 10486  00575E  0E02               	movlw	2
 10487  005760  EC81  F035         	call	_WriteUSART
 10488  005764                     l1161:
 10489  005764  A2AC               	btfss	4012,1,c	;volatile
 10490  005766  D7FE               	goto	l1161
 10491                           
 10492                           ;main.c: 2595: WriteUSART(9);
 10493  005768  0E09               	movlw	9
 10494  00576A  EC81  F035         	call	_WriteUSART
 10495                           
 10496                           ;main.c: 2596: crc8(&crc, 9);
 10497  00576E  0100               	movlb	0	; () banked
 10498  005770  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10499  005772  6F61               	movwf	(?_crc8+1)& (0+255),b
 10500  005774  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10501  005776  6F60               	movwf	?_crc8& (0+255),b
 10502  005778  0E09               	movlw	9
 10503  00577A  6F62               	movwf	(?_crc8+2)& (0+255),b
 10504  00577C  EC67  F034         	call	_crc8	;wreg free
 10505  005780                     l1164:
 10506  005780  A2AC               	btfss	4012,1,c	;volatile
 10507  005782  D7FE               	goto	l1164
 10508                           
 10509                           ;main.c: 2600: WriteUSART(0);
 10510  005784  0E00               	movlw	0
 10511  005786  EC81  F035         	call	_WriteUSART
 10512                           
 10513                           ;main.c: 2601: crc8(&crc, 0);
 10514  00578A  0100               	movlb	0	; () banked
 10515  00578C  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10516  00578E  6F61               	movwf	(?_crc8+1)& (0+255),b
 10517  005790  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10518  005792  6F60               	movwf	?_crc8& (0+255),b
 10519  005794  0E00               	movlw	0
 10520  005796  6B62               	clrf	(?_crc8+2)& (0+255),b
 10521  005798  EC67  F034         	call	_crc8	;wreg free
 10522                           
 10523                           ; BSR set to: 3
 10524                           ;main.c: 2604: sendEscapedUartData(sequencyno, &crc );
 10525  00579C  0100               	movlb	0	; () banked
 10526  00579E  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10527  0057A0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10528  0057A2  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10529  0057A4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10530  0057A6  51F3               	movf	_sequencyno& (0+255),w,b
 10531  0057A8  ECEF  F031         	call	_sendEscapedUartData
 10532                           
 10533                           ;main.c: 2605: sequencyno++;
 10534  0057AC  0100               	movlb	0	; () banked
 10535  0057AE  2BF3               	incf	_sequencyno& (0+255),f,b
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;main.c: 2608: sendEscapedUartData( 0, &crc );
 10539  0057B0  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10540  0057B2  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10541  0057B4  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10542  0057B6  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10543  0057B8  0E00               	movlw	0
 10544  0057BA  ECEF  F031         	call	_sendEscapedUartData
 10545                           
 10546                           ;main.c: 2609: sendEscapedUartData( 2, &crc );
 10547  0057BE  0100               	movlb	0	; () banked
 10548  0057C0  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10549  0057C2  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10550  0057C4  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10551  0057C6  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10552  0057C8  0E02               	movlw	2
 10553  0057CA  ECEF  F031         	call	_sendEscapedUartData
 10554                           
 10555                           ;main.c: 2612: sendEscapedUartData( 1, &crc );
 10556  0057CE  0100               	movlb	0	; () banked
 10557  0057D0  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10558  0057D2  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10559  0057D4  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10560  0057D6  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10561  0057D8  0E01               	movlw	1
 10562  0057DA  ECEF  F031         	call	_sendEscapedUartData
 10563                           
 10564                           ;main.c: 2613: sendEscapedUartData( 0, &crc );
 10565  0057DE  0100               	movlb	0	; () banked
 10566  0057E0  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10567  0057E2  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10568  0057E4  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10569  0057E6  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10570  0057E8  0E00               	movlw	0
 10571  0057EA  ECEF  F031         	call	_sendEscapedUartData
 10572                           
 10573                           ;main.c: 2616: sendEscapedUartData(crc, (0));
 10574  0057EE  0100               	movlb	0	; () banked
 10575  0057F0  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10576  0057F2  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10577  0057F4  5166               	movf	sendVSCPModeCapabilities@crc& (0+255),w,b
 10578  0057F6  ECEF  F031         	call	_sendEscapedUartData
 10579  0057FA                     l1167:
 10580  0057FA  A2AC               	btfss	4012,1,c	;volatile
 10581  0057FC  D7FE               	goto	l1167
 10582                           
 10583                           ;main.c: 2620: WriteUSART(0x10);
 10584  0057FE  0E10               	movlw	16
 10585  005800  EC81  F035         	call	_WriteUSART
 10586  005804                     l1170:
 10587  005804  A2AC               	btfss	4012,1,c	;volatile
 10588  005806  D7FE               	goto	l1170
 10589                           
 10590                           ;main.c: 2622: WriteUSART(0x03);
 10591  005808  0E03               	movlw	3
 10592  00580A  EF81  F035         	goto	_WriteUSART
 10593  00580E                     __end_of_sendVSCPModeCapabilities:
 10594                           	opt stack 0
 10595                           tblptru	equ	0xFF8
 10596                           tblptrh	equ	0xFF7
 10597                           tblptrl	equ	0xFF6
 10598                           tablat	equ	0xFF5
 10599                           prodh	equ	0xFF4
 10600                           prodl	equ	0xFF3
 10601                           intcon	equ	0xFF2
 10602                           indf0	equ	0xFEF
 10603                           postinc0	equ	0xFEE
 10604                           fsr0h	equ	0xFEA
 10605                           fsr0l	equ	0xFE9
 10606                           wreg	equ	0xFE8
 10607                           indf1	equ	0xFE7
 10608                           postinc1	equ	0xFE6
 10609                           postdec1	equ	0xFE5
 10610                           fsr1h	equ	0xFE2
 10611                           fsr1l	equ	0xFE1
 10612                           indf2	equ	0xFDF
 10613                           postinc2	equ	0xFDE
 10614                           postdec2	equ	0xFDD
 10615                           plusw2	equ	0xFDB
 10616                           fsr2h	equ	0xFDA
 10617                           fsr2l	equ	0xFD9
 10618                           status	equ	0xFD8
 10619                           
 10620 ;; *************** function _receiveVSCPModeMultiCanalMsg *****************
 10621 ;; Defined at:
 10622 ;;		line 2720 in file "main.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      enum E15660
 10629 ;; Registers used:
 10630 ;;		wreg
 10631 ;; Tracked objects:
 10632 ;;		On entry : F/1
 10633 ;;		On exit  : F/1
 10634 ;;		Unchanged: F/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10636 ;;      Params:         0       0       0       0       0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0
 10638 ;;      Temps:          0       0       0       0       0       0       0
 10639 ;;      Totals:         0       0       0       0       0       0       0
 10640 ;;Total ram usage:        0 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    3
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_doModeVscp
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text11
 10651  006B80                     __ptext11:
 10652                           	opt stack 0
 10653  006B80                     _receiveVSCPModeMultiCanalMsg:
 10654                           	opt stack 26
 10655                           
 10656                           ; BSR set to: 1
 10657                           
 10658                           ; BSR set to: 1
 10659                           ;main.c: 2722: return 0;
 10660                           
 10661                           ;incstack = 0
 10662                           ;incstack = 0
 10663  006B80  0C00               	retlw	0
 10664  006B82                     __end_of_receiveVSCPModeMultiCanalMsg:
 10665                           	opt stack 0
 10666                           tblptru	equ	0xFF8
 10667                           tblptrh	equ	0xFF7
 10668                           tblptrl	equ	0xFF6
 10669                           tablat	equ	0xFF5
 10670                           prodh	equ	0xFF4
 10671                           prodl	equ	0xFF3
 10672                           intcon	equ	0xFF2
 10673                           indf0	equ	0xFEF
 10674                           postinc0	equ	0xFEE
 10675                           fsr0h	equ	0xFEA
 10676                           fsr0l	equ	0xFE9
 10677                           wreg	equ	0xFE8
 10678                           indf1	equ	0xFE7
 10679                           postinc1	equ	0xFE6
 10680                           postdec1	equ	0xFE5
 10681                           fsr1h	equ	0xFE2
 10682                           fsr1l	equ	0xFE1
 10683                           indf2	equ	0xFDF
 10684                           postinc2	equ	0xFDE
 10685                           postdec2	equ	0xFDD
 10686                           plusw2	equ	0xFDB
 10687                           fsr2h	equ	0xFDA
 10688                           fsr2l	equ	0xFD9
 10689                           status	equ	0xFD8
 10690                           
 10691 ;; *************** function _receiveVSCPModeCanalMsg *****************
 10692 ;; Defined at:
 10693 ;;		line 2694 in file "main.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;		None
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  data            8   67[BANK0 ] unsigned char [8]
 10698 ;;  id              4   75[BANK0 ] unsigned long 
 10699 ;;  dlc             1   79[BANK0 ] unsigned char 
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      enum E15660
 10702 ;; Registers used:
 10703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10704 ;; Tracked objects:
 10705 ;;		On entry : F/1
 10706 ;;		On exit  : F/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10709 ;;      Params:         0       0       0       0       0       0       0
 10710 ;;      Locals:         0      13       0       0       0       0       0
 10711 ;;      Temps:          0      20       0       0       0       0       0
 10712 ;;      Totals:         0      33       0       0       0       0       0
 10713 ;;Total ram usage:       33 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    6
 10716 ;; This function calls:
 10717 ;;		_memcpy
 10718 ;;		_sendCANFrame
 10719 ;; This function is called by:
 10720 ;;		_doModeVscp
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text12
 10725  00518E                     __ptext12:
 10726                           	opt stack 0
 10727  00518E                     _receiveVSCPModeCanalMsg:
 10728                           	opt stack 23
 10729                           
 10730                           ; BSR set to: 1
 10731                           ;main.c: 2695: uint32_t id;
 10732                           ;main.c: 2696: uint8_t dlc;
 10733                           ;main.c: 2697: uint8_t data[8];
 10734                           ;main.c: 2699: id = ((uint32_t) cmdbuf[5] << 26) |
 10735                           ;main.c: 2700: ((uint32_t) cmdbuf[5 + 1] << 16) |
 10736                           ;main.c: 2701: ((uint32_t) cmdbuf[5 + 2] << 8) |
 10737                           ;main.c: 2702: cmdbuf[5 + 3];
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;incstack = 0
 10741                           ;incstack = 0
 10742  00518E  C10C  F08F         	movff	_cmdbuf+7,??_receiveVSCPModeCanalMsg
 10743  005192  0100               	movlb	0	; () banked
 10744  005194  6B90               	clrf	(??_receiveVSCPModeCanalMsg+1)& (0+255),b
 10745  005196  6B91               	clrf	(??_receiveVSCPModeCanalMsg+2)& (0+255),b
 10746  005198  6B92               	clrf	(??_receiveVSCPModeCanalMsg+3)& (0+255),b
 10747  00519A  C091  F092         	movff	??_receiveVSCPModeCanalMsg+2,??_receiveVSCPModeCanalMsg+3
 10748  00519E  C090  F091         	movff	??_receiveVSCPModeCanalMsg+1,??_receiveVSCPModeCanalMsg+2
 10749  0051A2  C08F  F090         	movff	??_receiveVSCPModeCanalMsg,??_receiveVSCPModeCanalMsg+1
 10750  0051A6  6B8F               	clrf	??_receiveVSCPModeCanalMsg& (0+255),b
 10751  0051A8  C10B  F093         	movff	_cmdbuf+6,??_receiveVSCPModeCanalMsg+4
 10752  0051AC  6B94               	clrf	(??_receiveVSCPModeCanalMsg+5)& (0+255),b
 10753  0051AE  6B95               	clrf	(??_receiveVSCPModeCanalMsg+6)& (0+255),b
 10754  0051B0  6B96               	clrf	(??_receiveVSCPModeCanalMsg+7)& (0+255),b
 10755  0051B2  C094  F096         	movff	??_receiveVSCPModeCanalMsg+5,??_receiveVSCPModeCanalMsg+7
 10756  0051B6  C093  F095         	movff	??_receiveVSCPModeCanalMsg+4,??_receiveVSCPModeCanalMsg+6
 10757  0051BA  6B94               	clrf	(??_receiveVSCPModeCanalMsg+5)& (0+255),b
 10758  0051BC  6B93               	clrf	(??_receiveVSCPModeCanalMsg+4)& (0+255),b
 10759  0051BE  C10A  F097         	movff	_cmdbuf+5,??_receiveVSCPModeCanalMsg+8
 10760  0051C2  6B98               	clrf	(??_receiveVSCPModeCanalMsg+9)& (0+255),b
 10761  0051C4  6B99               	clrf	(??_receiveVSCPModeCanalMsg+10)& (0+255),b
 10762  0051C6  6B9A               	clrf	(??_receiveVSCPModeCanalMsg+11)& (0+255),b
 10763  0051C8  0E1A               	movlw	26
 10764  0051CA                     u24195:
 10765  0051CA  90D8               	bcf	status,0,c
 10766  0051CC  3797               	rlcf	(??_receiveVSCPModeCanalMsg+8)& (0+255),f,b
 10767  0051CE  3798               	rlcf	(??_receiveVSCPModeCanalMsg+9)& (0+255),f,b
 10768  0051D0  3799               	rlcf	(??_receiveVSCPModeCanalMsg+10)& (0+255),f,b
 10769  0051D2  379A               	rlcf	(??_receiveVSCPModeCanalMsg+11)& (0+255),f,b
 10770  0051D4  2EE8               	decfsz	wreg,f,c
 10771  0051D6  D7F9               	goto	u24195
 10772  0051D8  5193               	movf	(??_receiveVSCPModeCanalMsg+4)& (0+255),w,b
 10773  0051DA  1197               	iorwf	(??_receiveVSCPModeCanalMsg+8)& (0+255),w,b
 10774  0051DC  6F9B               	movwf	(??_receiveVSCPModeCanalMsg+12)& (0+255),b
 10775  0051DE  5194               	movf	(??_receiveVSCPModeCanalMsg+5)& (0+255),w,b
 10776  0051E0  1198               	iorwf	(??_receiveVSCPModeCanalMsg+9)& (0+255),w,b
 10777  0051E2  6F9C               	movwf	(??_receiveVSCPModeCanalMsg+13)& (0+255),b
 10778  0051E4  5195               	movf	(??_receiveVSCPModeCanalMsg+6)& (0+255),w,b
 10779  0051E6  1199               	iorwf	(??_receiveVSCPModeCanalMsg+10)& (0+255),w,b
 10780  0051E8  6F9D               	movwf	(??_receiveVSCPModeCanalMsg+14)& (0+255),b
 10781  0051EA  5196               	movf	(??_receiveVSCPModeCanalMsg+7)& (0+255),w,b
 10782  0051EC  119A               	iorwf	(??_receiveVSCPModeCanalMsg+11)& (0+255),w,b
 10783  0051EE  6F9E               	movwf	(??_receiveVSCPModeCanalMsg+15)& (0+255),b
 10784  0051F0  518F               	movf	??_receiveVSCPModeCanalMsg& (0+255),w,b
 10785  0051F2  119B               	iorwf	(??_receiveVSCPModeCanalMsg+12)& (0+255),w,b
 10786  0051F4  6F9F               	movwf	(??_receiveVSCPModeCanalMsg+16)& (0+255),b
 10787  0051F6  5190               	movf	(??_receiveVSCPModeCanalMsg+1)& (0+255),w,b
 10788  0051F8  119C               	iorwf	(??_receiveVSCPModeCanalMsg+13)& (0+255),w,b
 10789  0051FA  6FA0               	movwf	(??_receiveVSCPModeCanalMsg+17)& (0+255),b
 10790  0051FC  5191               	movf	(??_receiveVSCPModeCanalMsg+2)& (0+255),w,b
 10791  0051FE  119D               	iorwf	(??_receiveVSCPModeCanalMsg+14)& (0+255),w,b
 10792  005200  6FA1               	movwf	(??_receiveVSCPModeCanalMsg+18)& (0+255),b
 10793  005202  5192               	movf	(??_receiveVSCPModeCanalMsg+3)& (0+255),w,b
 10794  005204  119E               	iorwf	(??_receiveVSCPModeCanalMsg+15)& (0+255),w,b
 10795  005206  6FA2               	movwf	(??_receiveVSCPModeCanalMsg+19)& (0+255),b
 10796  005208  0101               	movlb	1	; () banked
 10797  00520A  510D               	movf	(_cmdbuf+8)& (0+255),w,b
 10798  00520C  0100               	movlb	0	; () banked
 10799  00520E  119F               	iorwf	(??_receiveVSCPModeCanalMsg+16)& (0+255),w,b
 10800  005210  6FAB               	movwf	receiveVSCPModeCanalMsg@id& (0+255),b
 10801  005212  51A0               	movf	(??_receiveVSCPModeCanalMsg+17)& (0+255),w,b
 10802  005214  6FAC               	movwf	(receiveVSCPModeCanalMsg@id+1)& (0+255),b
 10803  005216  51A1               	movf	(??_receiveVSCPModeCanalMsg+18)& (0+255),w,b
 10804  005218  6FAD               	movwf	(receiveVSCPModeCanalMsg@id+2)& (0+255),b
 10805  00521A  51A2               	movf	(??_receiveVSCPModeCanalMsg+19)& (0+255),w,b
 10806  00521C  6FAE               	movwf	(receiveVSCPModeCanalMsg@id+3)& (0+255),b
 10807                           
 10808                           ;main.c: 2704: dlc = ( cmdbuf[4] - 4 );
 10809  00521E  0101               	movlb	1	; () banked
 10810  005220  5109               	movf	(_cmdbuf+4)& (0+255),w,b
 10811  005222  0FFC               	addlw	252
 10812  005224  0100               	movlb	0	; () banked
 10813  005226  6FAF               	movwf	receiveVSCPModeCanalMsg@dlc& (0+255),b
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;main.c: 2706: if ( dlc > 8 ) {
 10817  005228  0E08               	movlw	8
 10818  00522A  65AF               	cpfsgt	receiveVSCPModeCanalMsg@dlc& (0+255),b
 10819  00522C  D001               	goto	l18364
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;main.c: 2707: dlc = 8;
 10823  00522E  6FAF               	movwf	receiveVSCPModeCanalMsg@dlc& (0+255),b
 10824  005230                     l18364:
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;main.c: 2708: }
 10828                           ;main.c: 2709: memcpy( data, cmdbuf + 5 + 4, dlc );
 10829  005230  0E00               	movlw	high receiveVSCPModeCanalMsg@data
 10830  005232  6E20               	movwf	?_memcpy+1,c
 10831  005234  0EA3               	movlw	low receiveVSCPModeCanalMsg@data
 10832  005236  6E1F               	movwf	?_memcpy,c
 10833  005238  0E0E               	movlw	low (_cmdbuf+9)
 10834  00523A  6F8F               	movwf	??_receiveVSCPModeCanalMsg& (0+255),b
 10835  00523C  0E01               	movlw	high (_cmdbuf+9)
 10836  00523E  6F90               	movwf	(??_receiveVSCPModeCanalMsg+1)& (0+255),b
 10837  005240  C08F  F021         	movff	??_receiveVSCPModeCanalMsg,?_memcpy+2
 10838  005244  C090  F022         	movff	??_receiveVSCPModeCanalMsg+1,?_memcpy+3
 10839  005248  C0AF  F023         	movff	receiveVSCPModeCanalMsg@dlc,?_memcpy+4
 10840  00524C  6A24               	clrf	?_memcpy+5,c
 10841  00524E  EC8D  F033         	call	_memcpy	;wreg free
 10842                           
 10843                           ;main.c: 2711: return sendCANFrame(id, dlc, data);
 10844  005252  C0AB  F088         	movff	receiveVSCPModeCanalMsg@id,?_sendCANFrame
 10845  005256  C0AC  F089         	movff	receiveVSCPModeCanalMsg@id+1,?_sendCANFrame+1
 10846  00525A  C0AD  F08A         	movff	receiveVSCPModeCanalMsg@id+2,?_sendCANFrame+2
 10847  00525E  C0AE  F08B         	movff	receiveVSCPModeCanalMsg@id+3,?_sendCANFrame+3
 10848  005262  C0AF  F08C         	movff	receiveVSCPModeCanalMsg@dlc,?_sendCANFrame+4
 10849  005266  0100               	movlb	0	; () banked
 10850  005268  0E00               	movlw	high receiveVSCPModeCanalMsg@data
 10851  00526A  6F8E               	movwf	(?_sendCANFrame+6)& (0+255),b
 10852  00526C  0EA3               	movlw	low receiveVSCPModeCanalMsg@data
 10853  00526E  6F8D               	movwf	(?_sendCANFrame+5)& (0+255),b
 10854  005270  EF83  F034         	goto	_sendCANFrame	;wreg free
 10855  005274                     __end_of_receiveVSCPModeCanalMsg:
 10856                           	opt stack 0
 10857                           tblptru	equ	0xFF8
 10858                           tblptrh	equ	0xFF7
 10859                           tblptrl	equ	0xFF6
 10860                           tablat	equ	0xFF5
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           indf0	equ	0xFEF
 10865                           postinc0	equ	0xFEE
 10866                           fsr0h	equ	0xFEA
 10867                           fsr0l	equ	0xFE9
 10868                           wreg	equ	0xFE8
 10869                           indf1	equ	0xFE7
 10870                           postinc1	equ	0xFE6
 10871                           postdec1	equ	0xFE5
 10872                           fsr1h	equ	0xFE2
 10873                           fsr1l	equ	0xFE1
 10874                           indf2	equ	0xFDF
 10875                           postinc2	equ	0xFDE
 10876                           postdec2	equ	0xFDD
 10877                           plusw2	equ	0xFDB
 10878                           fsr2h	equ	0xFDA
 10879                           fsr2l	equ	0xFD9
 10880                           status	equ	0xFD8
 10881                           
 10882 ;; *************** function _memcpy *****************
 10883 ;; Defined at:
 10884 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memcpy.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;  d1              2   30[COMRAM] PTR void 
 10887 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 10888 ;;  s1              2   32[COMRAM] PTR const void 
 10889 ;;		 -> vscpData(8), cmdbuf(80), 
 10890 ;;  n               2   34[COMRAM] unsigned int 
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;  s               2    2[BANK0 ] PTR const unsigned char 
 10893 ;;		 -> vscpData(8), cmdbuf(80), 
 10894 ;;  d               2    0[BANK0 ] PTR unsigned char 
 10895 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  2   30[COMRAM] PTR void 
 10898 ;; Registers used:
 10899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10900 ;; Tracked objects:
 10901 ;;		On entry : F/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10905 ;;      Params:         6       0       0       0       0       0       0
 10906 ;;      Locals:         0       4       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0
 10908 ;;      Totals:         6       4       0       0       0       0       0
 10909 ;;Total ram usage:       10 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    3
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_doModeSLCAN
 10916 ;;		_receiveVSCPModeCanalMsg
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text13
 10921  00671A                     __ptext13:
 10922                           	opt stack 0
 10923  00671A                     _memcpy:
 10924                           	opt stack 26
 10925                           
 10926                           ; BSR set to: 0
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;incstack = 0
 10930                           ;incstack = 0
 10931  00671A  C021  F062         	movff	memcpy@s1,memcpy@s
 10932  00671E  C022  F063         	movff	memcpy@s1+1,memcpy@s+1
 10933  006722  C01F  F060         	movff	memcpy@d1,memcpy@d
 10934  006726  C020  F061         	movff	memcpy@d1+1,memcpy@d+1
 10935  00672A  D00F               	goto	l18574
 10936  00672C                     l18568:
 10937  00672C  C062  FFD9         	movff	memcpy@s,fsr2l
 10938  006730  C063  FFDA         	movff	memcpy@s+1,fsr2h
 10939  006734  C060  FFE1         	movff	memcpy@d,fsr1l
 10940  006738  C061  FFE2         	movff	memcpy@d+1,fsr1h
 10941  00673C  CFDF FFE7          	movff	indf2,indf1
 10942  006740  0100               	movlb	0	; () banked
 10943  006742  4B62               	infsnz	memcpy@s& (0+255),f,b
 10944  006744  2B63               	incf	(memcpy@s+1)& (0+255),f,b
 10945                           
 10946                           ; BSR set to: 0
 10947  006746  4B60               	infsnz	memcpy@d& (0+255),f,b
 10948  006748  2B61               	incf	(memcpy@d+1)& (0+255),f,b
 10949  00674A                     l18574:
 10950                           
 10951                           ; BSR set to: 0
 10952  00674A  0623               	decf	memcpy@n,f,c
 10953  00674C  A0D8               	btfss	status,0,c
 10954  00674E  0624               	decf	memcpy@n+1,f,c
 10955  006750  2823               	incf	memcpy@n& (0+255),w,c
 10956  006752  B4D8               	btfsc	status,2,c
 10957  006754  2824               	incf	(memcpy@n+1)& (0+255),w,c
 10958  006756  B4D8               	btfsc	status,2,c
 10959  006758  0012               	return	
 10960  00675A  D7E8               	goto	l18568
 10961  00675C                     __end_of_memcpy:
 10962                           	opt stack 0
 10963                           tblptru	equ	0xFF8
 10964                           tblptrh	equ	0xFF7
 10965                           tblptrl	equ	0xFF6
 10966                           tablat	equ	0xFF5
 10967                           prodh	equ	0xFF4
 10968                           prodl	equ	0xFF3
 10969                           intcon	equ	0xFF2
 10970                           indf0	equ	0xFEF
 10971                           postinc0	equ	0xFEE
 10972                           fsr0h	equ	0xFEA
 10973                           fsr0l	equ	0xFE9
 10974                           wreg	equ	0xFE8
 10975                           indf1	equ	0xFE7
 10976                           postinc1	equ	0xFE6
 10977                           postdec1	equ	0xFE5
 10978                           fsr1h	equ	0xFE2
 10979                           fsr1l	equ	0xFE1
 10980                           indf2	equ	0xFDF
 10981                           postinc2	equ	0xFDE
 10982                           postdec2	equ	0xFDD
 10983                           plusw2	equ	0xFDB
 10984                           fsr2h	equ	0xFDA
 10985                           fsr2l	equ	0xFD9
 10986                           status	equ	0xFD8
 10987                           
 10988 ;; *************** function _sendVSCPDriverAck *****************
 10989 ;; Defined at:
 10990 ;;		line 2088 in file "main.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  crc             1    6[BANK0 ] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;		None               void
 10997 ;; Registers used:
 10998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/1
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11004 ;;      Params:         0       0       0       0       0       0       0
 11005 ;;      Locals:         0       1       0       0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0
 11007 ;;      Totals:         0       1       0       0       0       0       0
 11008 ;;Total ram usage:        1 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    6
 11011 ;; This function calls:
 11012 ;;		_WriteUSART
 11013 ;;		_sendEscapedUartData
 11014 ;;		_crc8
 11015 ;; This function is called by:
 11016 ;;		_doModeVscp
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text14
 11021  005AC0                     __ptext14:
 11022                           	opt stack 0
 11023  005AC0                     _sendVSCPDriverAck:
 11024                           	opt stack 23
 11025                           
 11026                           ;main.c: 2089: uint8_t crc = 0;
 11027                           
 11028                           ;incstack = 0
 11029                           ;incstack = 0
 11030  005AC0  0100               	movlb	0	; () banked
 11031  005AC2  6B66               	clrf	sendVSCPDriverAck@crc& (0+255),b
 11032  005AC4                     l941:
 11033  005AC4  A2AC               	btfss	4012,1,c	;volatile
 11034  005AC6  D7FE               	goto	l941
 11035                           
 11036                           ;main.c: 2093: WriteUSART(0x10);
 11037  005AC8  0E10               	movlw	16
 11038  005ACA  EC81  F035         	call	_WriteUSART
 11039  005ACE                     l944:
 11040  005ACE  A2AC               	btfss	4012,1,c	;volatile
 11041  005AD0  D7FE               	goto	l944
 11042                           
 11043                           ;main.c: 2095: WriteUSART(0x02);
 11044  005AD2  0E02               	movlw	2
 11045  005AD4  EC81  F035         	call	_WriteUSART
 11046  005AD8                     l947:
 11047  005AD8  A2AC               	btfss	4012,1,c	;volatile
 11048  005ADA  D7FE               	goto	l947
 11049                           
 11050                           ;main.c: 2099: WriteUSART(251);
 11051  005ADC  0EFB               	movlw	251
 11052  005ADE  EC81  F035         	call	_WriteUSART
 11053                           
 11054                           ;main.c: 2100: crc8(&crc, 251);
 11055  005AE2  0100               	movlb	0	; () banked
 11056  005AE4  0E00               	movlw	high sendVSCPDriverAck@crc
 11057  005AE6  6F61               	movwf	(?_crc8+1)& (0+255),b
 11058  005AE8  0E66               	movlw	low sendVSCPDriverAck@crc
 11059  005AEA  6F60               	movwf	?_crc8& (0+255),b
 11060  005AEC  0EFB               	movlw	251
 11061  005AEE  6F62               	movwf	(?_crc8+2)& (0+255),b
 11062  005AF0  EC67  F034         	call	_crc8	;wreg free
 11063  005AF4                     l950:
 11064  005AF4  A2AC               	btfss	4012,1,c	;volatile
 11065  005AF6  D7FE               	goto	l950
 11066                           
 11067                           ;main.c: 2104: WriteUSART(0);
 11068  005AF8  0E00               	movlw	0
 11069  005AFA  EC81  F035         	call	_WriteUSART
 11070                           
 11071                           ;main.c: 2105: crc8(&crc, 0);
 11072  005AFE  D82B               	call	PL68	;call to abstracted procedure
 11073  005B00  EC67  F034         	call	_crc8	;wreg free
 11074                           
 11075                           ; BSR set to: 3
 11076                           ;main.c: 2108: sendEscapedUartData(cmdbuf[ 2 ], &crc);
 11077  005B04  0100               	movlb	0	; () banked
 11078  005B06  0E00               	movlw	high sendVSCPDriverAck@crc
 11079  005B08  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11080  005B0A  0E66               	movlw	low sendVSCPDriverAck@crc
 11081  005B0C  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11082  005B0E  0101               	movlb	1	; () banked
 11083  005B10  5107               	movf	(_cmdbuf+2)& (0+255),w,b
 11084  005B12  ECEF  F031         	call	_sendEscapedUartData
 11085  005B16                     l953:
 11086  005B16  A2AC               	btfss	4012,1,c	;volatile
 11087  005B18  D7FE               	goto	l953
 11088                           
 11089                           ;main.c: 2112: WriteUSART(0);
 11090  005B1A  0E00               	movlw	0
 11091  005B1C  EC81  F035         	call	_WriteUSART
 11092                           
 11093                           ;main.c: 2113: crc8(&crc, 0);
 11094  005B20  D81A               	call	PL68	;call to abstracted procedure
 11095  005B22  EC67  F034         	call	_crc8	;wreg free
 11096  005B26                     l956:
 11097  005B26  A2AC               	btfss	4012,1,c	;volatile
 11098  005B28  D7FE               	goto	l956
 11099                           
 11100                           ;main.c: 2115: WriteUSART(0);
 11101  005B2A  0E00               	movlw	0
 11102  005B2C  EC81  F035         	call	_WriteUSART
 11103                           
 11104                           ;main.c: 2116: crc8(&crc, 0);
 11105  005B30  D812               	call	PL68	;call to abstracted procedure
 11106  005B32  EC67  F034         	call	_crc8	;wreg free
 11107                           
 11108                           ; BSR set to: 3
 11109                           ;main.c: 2119: sendEscapedUartData(crc, (0));
 11110  005B36  0100               	movlb	0	; () banked
 11111  005B38  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 11112  005B3A  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 11113  005B3C  5166               	movf	sendVSCPDriverAck@crc& (0+255),w,b
 11114  005B3E  ECEF  F031         	call	_sendEscapedUartData
 11115  005B42                     l959:
 11116  005B42  A2AC               	btfss	4012,1,c	;volatile
 11117  005B44  D7FE               	goto	l959
 11118                           
 11119                           ;main.c: 2123: WriteUSART(0x10);
 11120  005B46  0E10               	movlw	16
 11121  005B48  EC81  F035         	call	_WriteUSART
 11122  005B4C                     l962:
 11123  005B4C  A2AC               	btfss	4012,1,c	;volatile
 11124  005B4E  D7FE               	goto	l962
 11125                           
 11126                           ;main.c: 2125: WriteUSART(0x03);
 11127  005B50  0E03               	movlw	3
 11128  005B52  EF81  F035         	goto	_WriteUSART
 11129  005B56                     __end_of_sendVSCPDriverAck:
 11130                           	opt stack 0
 11131  005B56                     PL68:
 11132                           	opt stack 23
 11133  005B56  0100               	movlb	0	; () banked
 11134  005B58  0E00               	movlw	high sendVSCPDriverAck@crc
 11135  005B5A  6F61               	movwf	(?_crc8+1)& (0+255),b
 11136  005B5C  0E66               	movlw	low sendVSCPDriverAck@crc
 11137  005B5E  6F60               	movwf	?_crc8& (0+255),b
 11138  005B60  6B62               	clrf	(?_crc8+2)& (0+255),b
 11139  005B62  0C00               	retlw	0
 11140  005B64                     __end_ofPL68:
 11141                           	opt stack 0
 11142                           tblptru	equ	0xFF8
 11143                           tblptrh	equ	0xFF7
 11144                           tblptrl	equ	0xFF6
 11145                           tablat	equ	0xFF5
 11146                           prodh	equ	0xFF4
 11147                           prodl	equ	0xFF3
 11148                           intcon	equ	0xFF2
 11149                           indf0	equ	0xFEF
 11150                           postinc0	equ	0xFEE
 11151                           fsr0h	equ	0xFEA
 11152                           fsr0l	equ	0xFE9
 11153                           wreg	equ	0xFE8
 11154                           indf1	equ	0xFE7
 11155                           postinc1	equ	0xFE6
 11156                           postdec1	equ	0xFE5
 11157                           fsr1h	equ	0xFE2
 11158                           fsr1l	equ	0xFE1
 11159                           indf2	equ	0xFDF
 11160                           postinc2	equ	0xFDE
 11161                           postdec2	equ	0xFDD
 11162                           plusw2	equ	0xFDB
 11163                           fsr2h	equ	0xFDA
 11164                           fsr2l	equ	0xFD9
 11165                           status	equ	0xFD8
 11166                           
 11167 ;; *************** function _sendVSCPDriverNack *****************
 11168 ;; Defined at:
 11169 ;;		line 2132 in file "main.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;		None
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;  crc             1    6[BANK0 ] unsigned char 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;		None               void
 11176 ;; Registers used:
 11177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11178 ;; Tracked objects:
 11179 ;;		On entry : E/0
 11180 ;;		On exit  : 0/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11183 ;;      Params:         0       0       0       0       0       0       0
 11184 ;;      Locals:         0       1       0       0       0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0
 11186 ;;      Totals:         0       1       0       0       0       0       0
 11187 ;;Total ram usage:        1 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:    6
 11190 ;; This function calls:
 11191 ;;		_WriteUSART
 11192 ;;		_sendEscapedUartData
 11193 ;;		_crc8
 11194 ;; This function is called by:
 11195 ;;		_doModeVscp
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text15
 11200  005B64                     __ptext15:
 11201                           	opt stack 0
 11202  005B64                     _sendVSCPDriverNack:
 11203                           	opt stack 23
 11204                           
 11205                           ;main.c: 2133: uint8_t crc = 0;
 11206                           
 11207                           ;incstack = 0
 11208                           ;incstack = 0
 11209  005B64  0100               	movlb	0	; () banked
 11210  005B66  6B66               	clrf	sendVSCPDriverNack@crc& (0+255),b
 11211  005B68                     l968:
 11212  005B68  A2AC               	btfss	4012,1,c	;volatile
 11213  005B6A  D7FE               	goto	l968
 11214                           
 11215                           ;main.c: 2137: WriteUSART(0x10);
 11216  005B6C  0E10               	movlw	16
 11217  005B6E  EC81  F035         	call	_WriteUSART
 11218  005B72                     l971:
 11219  005B72  A2AC               	btfss	4012,1,c	;volatile
 11220  005B74  D7FE               	goto	l971
 11221                           
 11222                           ;main.c: 2139: WriteUSART(0x02);
 11223  005B76  0E02               	movlw	2
 11224  005B78  EC81  F035         	call	_WriteUSART
 11225  005B7C                     l974:
 11226  005B7C  A2AC               	btfss	4012,1,c	;volatile
 11227  005B7E  D7FE               	goto	l974
 11228                           
 11229                           ;main.c: 2143: WriteUSART(252);
 11230  005B80  0EFC               	movlw	252
 11231  005B82  EC81  F035         	call	_WriteUSART
 11232                           
 11233                           ;main.c: 2144: crc8(&crc, 252);
 11234  005B86  0100               	movlb	0	; () banked
 11235  005B88  0E00               	movlw	high sendVSCPDriverNack@crc
 11236  005B8A  6F61               	movwf	(?_crc8+1)& (0+255),b
 11237  005B8C  0E66               	movlw	low sendVSCPDriverNack@crc
 11238  005B8E  6F60               	movwf	?_crc8& (0+255),b
 11239  005B90  0EFC               	movlw	252
 11240  005B92  6F62               	movwf	(?_crc8+2)& (0+255),b
 11241  005B94  EC67  F034         	call	_crc8	;wreg free
 11242  005B98                     l977:
 11243  005B98  A2AC               	btfss	4012,1,c	;volatile
 11244  005B9A  D7FE               	goto	l977
 11245                           
 11246                           ;main.c: 2148: WriteUSART(0);
 11247  005B9C  0E00               	movlw	0
 11248  005B9E  EC81  F035         	call	_WriteUSART
 11249                           
 11250                           ;main.c: 2149: crc8(&crc, 0);
 11251  005BA2  D82B               	call	PL64	;call to abstracted procedure
 11252  005BA4  EC67  F034         	call	_crc8	;wreg free
 11253                           
 11254                           ; BSR set to: 3
 11255                           ;main.c: 2152: sendEscapedUartData(cmdbuf[ 2 ], &crc);
 11256  005BA8  0100               	movlb	0	; () banked
 11257  005BAA  0E00               	movlw	high sendVSCPDriverNack@crc
 11258  005BAC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11259  005BAE  0E66               	movlw	low sendVSCPDriverNack@crc
 11260  005BB0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11261  005BB2  0101               	movlb	1	; () banked
 11262  005BB4  5107               	movf	(_cmdbuf+2)& (0+255),w,b
 11263  005BB6  ECEF  F031         	call	_sendEscapedUartData
 11264  005BBA                     l980:
 11265  005BBA  A2AC               	btfss	4012,1,c	;volatile
 11266  005BBC  D7FE               	goto	l980
 11267                           
 11268                           ;main.c: 2156: WriteUSART(0);
 11269  005BBE  0E00               	movlw	0
 11270  005BC0  EC81  F035         	call	_WriteUSART
 11271                           
 11272                           ;main.c: 2157: crc8(&crc, 0);
 11273  005BC4  D81A               	call	PL64	;call to abstracted procedure
 11274  005BC6  EC67  F034         	call	_crc8	;wreg free
 11275  005BCA                     l983:
 11276  005BCA  A2AC               	btfss	4012,1,c	;volatile
 11277  005BCC  D7FE               	goto	l983
 11278                           
 11279                           ;main.c: 2159: WriteUSART(0);
 11280  005BCE  0E00               	movlw	0
 11281  005BD0  EC81  F035         	call	_WriteUSART
 11282                           
 11283                           ;main.c: 2160: crc8(&crc, 0);
 11284  005BD4  D812               	call	PL64	;call to abstracted procedure
 11285  005BD6  EC67  F034         	call	_crc8	;wreg free
 11286                           
 11287                           ; BSR set to: 3
 11288                           ;main.c: 2163: sendEscapedUartData(crc, (0));
 11289  005BDA  0100               	movlb	0	; () banked
 11290  005BDC  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 11291  005BDE  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 11292  005BE0  5166               	movf	sendVSCPDriverNack@crc& (0+255),w,b
 11293  005BE2  ECEF  F031         	call	_sendEscapedUartData
 11294  005BE6                     l986:
 11295  005BE6  A2AC               	btfss	4012,1,c	;volatile
 11296  005BE8  D7FE               	goto	l986
 11297                           
 11298                           ;main.c: 2167: WriteUSART(0x10);
 11299  005BEA  0E10               	movlw	16
 11300  005BEC  EC81  F035         	call	_WriteUSART
 11301  005BF0                     l989:
 11302  005BF0  A2AC               	btfss	4012,1,c	;volatile
 11303  005BF2  D7FE               	goto	l989
 11304                           
 11305                           ;main.c: 2169: WriteUSART(0x03);
 11306  005BF4  0E03               	movlw	3
 11307  005BF6  EF81  F035         	goto	_WriteUSART
 11308  005BFA                     __end_of_sendVSCPDriverNack:
 11309                           	opt stack 0
 11310  005BFA                     PL64:
 11311                           	opt stack 23
 11312  005BFA  0100               	movlb	0	; () banked
 11313  005BFC  0E00               	movlw	high sendVSCPDriverNack@crc
 11314  005BFE  6F61               	movwf	(?_crc8+1)& (0+255),b
 11315  005C00  0E66               	movlw	low sendVSCPDriverNack@crc
 11316  005C02  6F60               	movwf	?_crc8& (0+255),b
 11317  005C04  6B62               	clrf	(?_crc8+2)& (0+255),b
 11318  005C06  0C00               	retlw	0
 11319  005C08                     __end_ofPL64:
 11320                           	opt stack 0
 11321                           tblptru	equ	0xFF8
 11322                           tblptrh	equ	0xFF7
 11323                           tblptrl	equ	0xFF6
 11324                           tablat	equ	0xFF5
 11325                           prodh	equ	0xFF4
 11326                           prodl	equ	0xFF3
 11327                           intcon	equ	0xFF2
 11328                           indf0	equ	0xFEF
 11329                           postinc0	equ	0xFEE
 11330                           fsr0h	equ	0xFEA
 11331                           fsr0l	equ	0xFE9
 11332                           wreg	equ	0xFE8
 11333                           indf1	equ	0xFE7
 11334                           postinc1	equ	0xFE6
 11335                           postdec1	equ	0xFE5
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           postdec2	equ	0xFDD
 11341                           plusw2	equ	0xFDB
 11342                           fsr2h	equ	0xFDA
 11343                           fsr2l	equ	0xFD9
 11344                           status	equ	0xFD8
 11345                           
 11346 ;; *************** function _calcCRC *****************
 11347 ;; Defined at:
 11348 ;;		line 2936 in file "main.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;  p               2    3[BANK0 ] PTR unsigned char 
 11351 ;;		 -> cmdbuf(80), 
 11352 ;;  len             1    5[BANK0 ] unsigned char 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  crc             1    7[BANK0 ] unsigned char 
 11355 ;;  j               1    6[BANK0 ] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      unsigned char 
 11358 ;; Registers used:
 11359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : F/0
 11362 ;;		On exit  : F/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11365 ;;      Params:         0       3       0       0       0       0       0
 11366 ;;      Locals:         0       2       0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0
 11368 ;;      Totals:         0       5       0       0       0       0       0
 11369 ;;Total ram usage:        5 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    5
 11372 ;; This function calls:
 11373 ;;		_crc8
 11374 ;; This function is called by:
 11375 ;;		_doModeVscp
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           	psect	text16
 11380  0069AA                     __ptext16:
 11381                           	opt stack 0
 11382  0069AA                     _calcCRC:
 11383                           	opt stack 24
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;main.c: 2937: uint8_t j;
 11387                           ;main.c: 2938: uint8_t crc = 0;
 11388                           
 11389                           ;incstack = 0
 11390                           ;incstack = 0
 11391  0069AA  6B67               	clrf	calcCRC@crc& (0+255),b
 11392                           
 11393                           ;main.c: 2940: for (j = 0; j < len; j++) {
 11394  0069AC  6B66               	clrf	calcCRC@j& (0+255),b
 11395  0069AE  D010               	goto	l18292
 11396  0069B0                     l18288:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;main.c: 2941: crc8(&crc, p[j]);
 11400  0069B0  0E00               	movlw	high calcCRC@crc
 11401  0069B2  6F61               	movwf	(?_crc8+1)& (0+255),b
 11402  0069B4  0E67               	movlw	low calcCRC@crc
 11403  0069B6  6F60               	movwf	?_crc8& (0+255),b
 11404  0069B8  5166               	movf	calcCRC@j& (0+255),w,b
 11405  0069BA  2563               	addwf	calcCRC@p& (0+255),w,b
 11406  0069BC  6ED9               	movwf	fsr2l,c
 11407  0069BE  0E00               	movlw	0
 11408  0069C0  2164               	addwfc	(calcCRC@p+1)& (0+255),w,b
 11409  0069C2  6EDA               	movwf	fsr2h,c
 11410  0069C4  50DF               	movf	indf2,w,c
 11411  0069C6  6F62               	movwf	(?_crc8+2)& (0+255),b
 11412  0069C8  EC67  F034         	call	_crc8	;wreg free
 11413                           
 11414                           ; BSR set to: 3
 11415  0069CC  0100               	movlb	0	; () banked
 11416  0069CE  2B66               	incf	calcCRC@j& (0+255),f,b
 11417  0069D0                     l18292:
 11418                           
 11419                           ; BSR set to: 0
 11420  0069D0  5165               	movf	calcCRC@len& (0+255),w,b
 11421  0069D2  5D66               	subwf	calcCRC@j& (0+255),w,b
 11422  0069D4  E3ED               	bnc	l18288
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;main.c: 2942: }
 11426                           ;main.c: 2944: return crc;
 11427  0069D6  5167               	movf	calcCRC@crc& (0+255),w,b
 11428                           
 11429                           ; BSR set to: 0
 11430  0069D8  0012               	return	
 11431  0069DA                     __end_of_calcCRC:
 11432                           	opt stack 0
 11433                           tblptru	equ	0xFF8
 11434                           tblptrh	equ	0xFF7
 11435                           tblptrl	equ	0xFF6
 11436                           tablat	equ	0xFF5
 11437                           prodh	equ	0xFF4
 11438                           prodl	equ	0xFF3
 11439                           intcon	equ	0xFF2
 11440                           indf0	equ	0xFEF
 11441                           postinc0	equ	0xFEE
 11442                           fsr0h	equ	0xFEA
 11443                           fsr0l	equ	0xFE9
 11444                           wreg	equ	0xFE8
 11445                           indf1	equ	0xFE7
 11446                           postinc1	equ	0xFE6
 11447                           postdec1	equ	0xFE5
 11448                           fsr1h	equ	0xFE2
 11449                           fsr1l	equ	0xFE1
 11450                           indf2	equ	0xFDF
 11451                           postinc2	equ	0xFDE
 11452                           postdec2	equ	0xFDD
 11453                           plusw2	equ	0xFDB
 11454                           fsr2h	equ	0xFDA
 11455                           fsr2l	equ	0xFD9
 11456                           status	equ	0xFD8
 11457                           
 11458 ;; *************** function _receiveSendEventCANAL *****************
 11459 ;; Defined at:
 11460 ;;		line 2289 in file "main.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;		None
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;  timestamp       4   25[BANK0 ] unsigned long 
 11465 ;;  crc             1   34[BANK0 ] unsigned char 
 11466 ;;  data            8   16[BANK0 ] unsigned char [8]
 11467 ;;  id              4   29[BANK0 ] unsigned long 
 11468 ;;  dlc             1   33[BANK0 ] unsigned char 
 11469 ;;  i               1   24[BANK0 ] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      enum E15660
 11472 ;; Registers used:
 11473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11474 ;; Tracked objects:
 11475 ;;		On entry : F/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11479 ;;      Params:         0       0       0       0       0       0       0
 11480 ;;      Locals:         0      19       0       0       0       0       0
 11481 ;;      Temps:          0       4       0       0       0       0       0
 11482 ;;      Totals:         0      23       0       0       0       0       0
 11483 ;;Total ram usage:       23 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:    6
 11486 ;; This function calls:
 11487 ;;		_WriteUSART
 11488 ;;		_sendEscapedUartData
 11489 ;;		_crc8
 11490 ;;		_ReadTimer3
 11491 ;;		_getCANFrame
 11492 ;;		___wmul
 11493 ;; This function is called by:
 11494 ;;		_doModeVscp
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           	psect	text17
 11499  003E26                     __ptext17:
 11500                           	opt stack 0
 11501  003E26                     _receiveSendEventCANAL:
 11502                           	opt stack 23
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;main.c: 2290: uint8_t i;
 11506                           ;main.c: 2291: uint32_t id;
 11507                           ;main.c: 2292: uint8_t dlc;
 11508                           ;main.c: 2293: uint8_t data[8];
 11509                           ;main.c: 2295: if ( getCANFrame( &id, &dlc, &data ) ) {
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;incstack = 0
 11513                           ;incstack = 0
 11514  003E26  0E00               	movlw	high receiveSendEventCANAL@dlc
 11515  003E28  6F69               	movwf	(?_getCANFrame+1)& (0+255),b
 11516  003E2A  0E81               	movlw	low receiveSendEventCANAL@dlc
 11517  003E2C  6F68               	movwf	?_getCANFrame& (0+255),b
 11518  003E2E  0E00               	movlw	high receiveSendEventCANAL@data
 11519  003E30  6F6B               	movwf	(?_getCANFrame+3)& (0+255),b
 11520  003E32  0E70               	movlw	low receiveSendEventCANAL@data
 11521  003E34  6F6A               	movwf	(?_getCANFrame+2)& (0+255),b
 11522  003E36  0E7D               	movlw	receiveSendEventCANAL@id& (0+255)
 11523  003E38  EC62  F02C         	call	_getCANFrame
 11524  003E3C  0900               	iorlw	0
 11525  003E3E  E101 D0E4          	bz	l1092
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;main.c: 2297: uint8_t crc = 0;
 11529  003E42  6B82               	clrf	receiveSendEventCANAL@crc& (0+255),b
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;main.c: 2300: cntRxFrames++;
 11533  003E44  2BD2               	incf	_cntRxFrames& (0+255),f,b
 11534  003E46  0E00               	movlw	0
 11535  003E48  23D3               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 11536  003E4A  23D4               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 11537  003E4C  23D5               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 11538                           
 11539                           ;main.c: 2301: cntRxBytes += dlc;
 11540  003E4E  5181               	movf	receiveSendEventCANAL@dlc& (0+255),w,b
 11541  003E50  27CE               	addwf	_cntRxBytes& (0+255),f,b
 11542  003E52  0E00               	movlw	0
 11543  003E54  23CF               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 11544  003E56  23D0               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 11545  003E58  23D1               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 11546  003E5A                     l1068:
 11547                           
 11548                           ; BSR set to: 0
 11549  003E5A  A2AC               	btfss	4012,1,c	;volatile
 11550  003E5C  D7FE               	goto	l1068
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;main.c: 2305: WriteUSART(0x10);
 11554  003E5E  0E10               	movlw	16
 11555  003E60  EC81  F035         	call	_WriteUSART
 11556  003E64                     l1071:
 11557  003E64  A2AC               	btfss	4012,1,c	;volatile
 11558  003E66  D7FE               	goto	l1071
 11559                           
 11560                           ;main.c: 2307: WriteUSART(0x02);
 11561  003E68  0E02               	movlw	2
 11562  003E6A  EC81  F035         	call	_WriteUSART
 11563  003E6E                     l1074:
 11564  003E6E  A2AC               	btfss	4012,1,c	;volatile
 11565  003E70  D7FE               	goto	l1074
 11566                           
 11567                           ;main.c: 2311: if ( bTimestamp ) {
 11568  003E72  0100               	movlb	0	; () banked
 11569  003E74  51F0               	movf	_bTimestamp& (0+255),w,b
 11570  003E76  E00D               	bz	l18232
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;main.c: 2312: WriteUSART( 11 );
 11574  003E78  0E0B               	movlw	11
 11575  003E7A  EC81  F035         	call	_WriteUSART
 11576                           
 11577                           ;main.c: 2313: crc8(&crc, 11 );
 11578  003E7E  0100               	movlb	0	; () banked
 11579  003E80  0E00               	movlw	high receiveSendEventCANAL@crc
 11580  003E82  6F61               	movwf	(?_crc8+1)& (0+255),b
 11581  003E84  0E82               	movlw	low receiveSendEventCANAL@crc
 11582  003E86  6F60               	movwf	?_crc8& (0+255),b
 11583  003E88  0E0B               	movlw	11
 11584  003E8A  6F62               	movwf	(?_crc8+2)& (0+255),b
 11585  003E8C  EC67  F034         	call	_crc8	;wreg free
 11586                           
 11587                           ;main.c: 2314: }
 11588  003E90  D00C               	goto	l1079
 11589  003E92                     l18232:
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;main.c: 2315: else {
 11593                           ;main.c: 2316: WriteUSART(2);
 11594  003E92  0E02               	movlw	2
 11595  003E94  EC81  F035         	call	_WriteUSART
 11596                           
 11597                           ;main.c: 2317: crc8(&crc, 2);
 11598  003E98  0100               	movlb	0	; () banked
 11599  003E9A  0E00               	movlw	high receiveSendEventCANAL@crc
 11600  003E9C  6F61               	movwf	(?_crc8+1)& (0+255),b
 11601  003E9E  0E82               	movlw	low receiveSendEventCANAL@crc
 11602  003EA0  6F60               	movwf	?_crc8& (0+255),b
 11603  003EA2  0E02               	movlw	2
 11604  003EA4  6F62               	movwf	(?_crc8+2)& (0+255),b
 11605  003EA6  EC67  F034         	call	_crc8	;wreg free
 11606  003EAA                     l1079:
 11607  003EAA  A2AC               	btfss	4012,1,c	;volatile
 11608  003EAC  D7FE               	goto	l1079
 11609                           
 11610                           ;main.c: 2322: WriteUSART(0);
 11611  003EAE  0E00               	movlw	0
 11612  003EB0  EC81  F035         	call	_WriteUSART
 11613                           
 11614                           ;main.c: 2323: crc8(&crc, 0);
 11615  003EB4  0100               	movlb	0	; () banked
 11616  003EB6  0E00               	movlw	high receiveSendEventCANAL@crc
 11617  003EB8  6F61               	movwf	(?_crc8+1)& (0+255),b
 11618  003EBA  0E82               	movlw	low receiveSendEventCANAL@crc
 11619  003EBC  6F60               	movwf	?_crc8& (0+255),b
 11620  003EBE  0E00               	movlw	0
 11621  003EC0  6B62               	clrf	(?_crc8+2)& (0+255),b
 11622  003EC2  EC67  F034         	call	_crc8	;wreg free
 11623                           
 11624                           ; BSR set to: 3
 11625                           ;main.c: 2326: sendEscapedUartData(sequencyno, &crc);
 11626  003EC6  0100               	movlb	0	; () banked
 11627  003EC8  0E00               	movlw	high receiveSendEventCANAL@crc
 11628  003ECA  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11629  003ECC  0E82               	movlw	low receiveSendEventCANAL@crc
 11630  003ECE  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11631  003ED0  51F3               	movf	_sequencyno& (0+255),w,b
 11632  003ED2  ECEF  F031         	call	_sendEscapedUartData
 11633                           
 11634                           ;main.c: 2327: sequencyno++;
 11635  003ED6  0100               	movlb	0	; () banked
 11636  003ED8  2BF3               	incf	_sequencyno& (0+255),f,b
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;main.c: 2330: sendEscapedUartData(0, &crc);
 11640  003EDA  0E00               	movlw	high receiveSendEventCANAL@crc
 11641  003EDC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11642  003EDE  0E82               	movlw	low receiveSendEventCANAL@crc
 11643  003EE0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11644  003EE2  0E00               	movlw	0
 11645  003EE4  ECEF  F031         	call	_sendEscapedUartData
 11646                           
 11647                           ;main.c: 2331: sendEscapedUartData(5 + dlc, &crc);
 11648  003EE8  D891               	call	PL138	;call to abstracted procedure
 11649  003EEA  0F05               	addlw	5
 11650  003EEC  ECEF  F031         	call	_sendEscapedUartData
 11651                           
 11652                           ;main.c: 2337: sendEscapedUartData( ((id >> 24) & 0xff), &crc);
 11653  003EF0  0100               	movlb	0	; () banked
 11654  003EF2  0E00               	movlw	high receiveSendEventCANAL@crc
 11655  003EF4  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11656  003EF6  0E82               	movlw	low receiveSendEventCANAL@crc
 11657  003EF8  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11658  003EFA  5180               	movf	(receiveSendEventCANAL@id+3)& (0+255),w,b
 11659  003EFC  ECEF  F031         	call	_sendEscapedUartData
 11660                           
 11661                           ;main.c: 2338: sendEscapedUartData(((id >> 16) & 0xff), &crc);
 11662  003F00  0100               	movlb	0	; () banked
 11663  003F02  0E00               	movlw	high receiveSendEventCANAL@crc
 11664  003F04  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11665  003F06  0E82               	movlw	low receiveSendEventCANAL@crc
 11666  003F08  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11667  003F0A  517F               	movf	(receiveSendEventCANAL@id+2)& (0+255),w,b
 11668  003F0C  ECEF  F031         	call	_sendEscapedUartData
 11669                           
 11670                           ;main.c: 2339: sendEscapedUartData(((id >> 8) & 0xff), &crc);
 11671  003F10  0100               	movlb	0	; () banked
 11672  003F12  0E00               	movlw	high receiveSendEventCANAL@crc
 11673  003F14  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11674  003F16  0E82               	movlw	low receiveSendEventCANAL@crc
 11675  003F18  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11676  003F1A  517E               	movf	(receiveSendEventCANAL@id+1)& (0+255),w,b
 11677  003F1C  ECEF  F031         	call	_sendEscapedUartData
 11678                           
 11679                           ;main.c: 2340: sendEscapedUartData((id & 0xff), &crc);
 11680  003F20  0100               	movlb	0	; () banked
 11681  003F22  0E00               	movlw	high receiveSendEventCANAL@crc
 11682  003F24  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11683  003F26  0E82               	movlw	low receiveSendEventCANAL@crc
 11684  003F28  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11685  003F2A  517D               	movf	receiveSendEventCANAL@id& (0+255),w,b
 11686  003F2C  ECEF  F031         	call	_sendEscapedUartData
 11687                           
 11688                           ;main.c: 2343: if ( bTimestamp ) {
 11689  003F30  0100               	movlb	0	; () banked
 11690  003F32  51F0               	movf	_bTimestamp& (0+255),w,b
 11691  003F34  E045               	bz	l18268
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;main.c: 2344: uint32_t timestamp = (timer<<16) | ReadTimer3()*10;
 11695  003F36  EC8B  F035         	call	_ReadTimer3	;wreg free
 11696  003F3A  C01F  F023         	movff	?_ReadTimer3,?___wmul
 11697  003F3E  C020  F024         	movff	?_ReadTimer3+1,?___wmul+1
 11698  003F42  6A26               	clrf	?___wmul+3,c
 11699  003F44  0E0A               	movlw	10
 11700  003F46  6E25               	movwf	?___wmul+2,c
 11701  003F48  EC49  F034         	call	___wmul	;wreg free
 11702  003F4C  C0E2  F06C         	movff	_timer,??_receiveSendEventCANAL	;volatile
 11703  003F50  C0E3  F06D         	movff	_timer+1,??_receiveSendEventCANAL+1	;volatile
 11704  003F54  C0E4  F06E         	movff	_timer+2,??_receiveSendEventCANAL+2	;volatile
 11705  003F58  C0E5  F06F         	movff	_timer+3,??_receiveSendEventCANAL+3	;volatile
 11706  003F5C  C06D  F06F         	movff	??_receiveSendEventCANAL+1,??_receiveSendEventCANAL+3
 11707  003F60  C06C  F06E         	movff	??_receiveSendEventCANAL,??_receiveSendEventCANAL+2
 11708  003F64  6B6D               	clrf	(??_receiveSendEventCANAL+1)& (0+255),b
 11709  003F66  6B6C               	clrf	??_receiveSendEventCANAL& (0+255),b
 11710  003F68  5123               	movf	?___wmul& (0+255),w,b
 11711  003F6A  116C               	iorwf	??_receiveSendEventCANAL& (0+255),w,b
 11712  003F6C  6F79               	movwf	receiveSendEventCANAL@timestamp& (0+255),b
 11713  003F6E  5124               	movf	(?___wmul+1)& (0+255),w,b
 11714  003F70  116D               	iorwf	(??_receiveSendEventCANAL+1)& (0+255),w,b
 11715  003F72  6F7A               	movwf	(receiveSendEventCANAL@timestamp+1)& (0+255),b
 11716  003F74  0E00               	movlw	0
 11717  003F76  116E               	iorwf	(??_receiveSendEventCANAL+2)& (0+255),w,b
 11718  003F78  6F7B               	movwf	(receiveSendEventCANAL@timestamp+2)& (0+255),b
 11719  003F7A  0E00               	movlw	0
 11720  003F7C  116F               	iorwf	(??_receiveSendEventCANAL+3)& (0+255),w,b
 11721  003F7E  6F7C               	movwf	(receiveSendEventCANAL@timestamp+3)& (0+255),b
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;main.c: 2345: sendEscapedUartData( ((timestamp >> 24) & 0xff), &crc);
 11725  003F80  0E00               	movlw	high receiveSendEventCANAL@crc
 11726  003F82  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11727  003F84  0E82               	movlw	low receiveSendEventCANAL@crc
 11728  003F86  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11729  003F88  0100               	movlb	0	; () banked
 11730  003F8A  517C               	movf	(receiveSendEventCANAL@timestamp+3)& (0+255),w,b
 11731  003F8C  ECEF  F031         	call	_sendEscapedUartData
 11732                           
 11733                           ;main.c: 2346: sendEscapedUartData(((timestamp >> 16) & 0xff), &crc);
 11734  003F90  0100               	movlb	0	; () banked
 11735  003F92  0E00               	movlw	high receiveSendEventCANAL@crc
 11736  003F94  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11737  003F96  0E82               	movlw	low receiveSendEventCANAL@crc
 11738  003F98  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11739  003F9A  517B               	movf	(receiveSendEventCANAL@timestamp+2)& (0+255),w,b
 11740  003F9C  ECEF  F031         	call	_sendEscapedUartData
 11741                           
 11742                           ;main.c: 2347: sendEscapedUartData(((timestamp >> 8) & 0xff), &crc);
 11743  003FA0  0100               	movlb	0	; () banked
 11744  003FA2  0E00               	movlw	high receiveSendEventCANAL@crc
 11745  003FA4  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11746  003FA6  0E82               	movlw	low receiveSendEventCANAL@crc
 11747  003FA8  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11748  003FAA  517A               	movf	(receiveSendEventCANAL@timestamp+1)& (0+255),w,b
 11749  003FAC  ECEF  F031         	call	_sendEscapedUartData
 11750                           
 11751                           ;main.c: 2348: sendEscapedUartData((timestamp & 0xff), &crc);
 11752  003FB0  0100               	movlb	0	; () banked
 11753  003FB2  0E00               	movlw	high receiveSendEventCANAL@crc
 11754  003FB4  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11755  003FB6  0E82               	movlw	low receiveSendEventCANAL@crc
 11756  003FB8  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11757  003FBA  5179               	movf	receiveSendEventCANAL@timestamp& (0+255),w,b
 11758  003FBC  ECEF  F031         	call	_sendEscapedUartData
 11759  003FC0                     l18268:
 11760                           
 11761                           ;main.c: 2349: }
 11762                           ;main.c: 2352: sendEscapedUartData(dlc, &crc);
 11763  003FC0  D825               	call	PL138	;call to abstracted procedure
 11764  003FC2  ECEF  F031         	call	_sendEscapedUartData
 11765                           
 11766                           ;main.c: 2355: for (i = 0; i < dlc; i++) {
 11767  003FC6  0100               	movlb	0	; () banked
 11768  003FC8  6B78               	clrf	receiveSendEventCANAL@i& (0+255),b
 11769  003FCA  D00D               	goto	l18276
 11770  003FCC                     l18272:
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;main.c: 2356: sendEscapedUartData( data[ i ], &crc );
 11774  003FCC  0E00               	movlw	high receiveSendEventCANAL@crc
 11775  003FCE  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11776  003FD0  0E82               	movlw	low receiveSendEventCANAL@crc
 11777  003FD2  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11778  003FD4  5178               	movf	receiveSendEventCANAL@i& (0+255),w,b
 11779  003FD6  0F70               	addlw	low receiveSendEventCANAL@data
 11780  003FD8  6ED9               	movwf	fsr2l,c
 11781  003FDA  6ADA               	clrf	fsr2h,c
 11782  003FDC  50DF               	movf	indf2,w,c
 11783  003FDE  ECEF  F031         	call	_sendEscapedUartData
 11784  003FE2  0100               	movlb	0	; () banked
 11785  003FE4  2B78               	incf	receiveSendEventCANAL@i& (0+255),f,b
 11786  003FE6                     l18276:
 11787                           
 11788                           ; BSR set to: 0
 11789  003FE6  5181               	movf	receiveSendEventCANAL@dlc& (0+255),w,b
 11790  003FE8  5D78               	subwf	receiveSendEventCANAL@i& (0+255),w,b
 11791  003FEA  E3F0               	bnc	l18272
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;main.c: 2357: }
 11795                           ;main.c: 2362: sendEscapedUartData(crc, (0));
 11796  003FEC  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 11797  003FEE  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 11798  003FF0  5182               	movf	receiveSendEventCANAL@crc& (0+255),w,b
 11799  003FF2  ECEF  F031         	call	_sendEscapedUartData
 11800  003FF6                     l1086:
 11801  003FF6  A2AC               	btfss	4012,1,c	;volatile
 11802  003FF8  D7FE               	goto	l1086
 11803                           
 11804                           ;main.c: 2366: WriteUSART(0x10);
 11805  003FFA  0E10               	movlw	16
 11806  003FFC  EC81  F035         	call	_WriteUSART
 11807  004000                     l1089:
 11808  004000  A2AC               	btfss	4012,1,c	;volatile
 11809  004002  D7FE               	goto	l1089
 11810                           
 11811                           ;main.c: 2368: WriteUSART(0x03);
 11812  004004  0E03               	movlw	3
 11813  004006  EC81  F035         	call	_WriteUSART
 11814  00400A                     l1092:
 11815  00400A  0012               	return	
 11816  00400C                     __end_of_receiveSendEventCANAL:
 11817                           	opt stack 0
 11818  00400C                     PL138:
 11819                           	opt stack 23
 11820  00400C  0100               	movlb	0	; () banked
 11821  00400E  0E00               	movlw	high receiveSendEventCANAL@crc
 11822  004010  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11823  004012  0E82               	movlw	low receiveSendEventCANAL@crc
 11824  004014  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11825  004016  5181               	movf	receiveSendEventCANAL@dlc& (0+255),w,b
 11826  004018  0012               	return	
 11827  00401A                     __end_ofPL138:
 11828                           	opt stack 0
 11829                           tblptru	equ	0xFF8
 11830                           tblptrh	equ	0xFF7
 11831                           tblptrl	equ	0xFF6
 11832                           tablat	equ	0xFF5
 11833                           prodh	equ	0xFF4
 11834                           prodl	equ	0xFF3
 11835                           intcon	equ	0xFF2
 11836                           indf0	equ	0xFEF
 11837                           postinc0	equ	0xFEE
 11838                           fsr0h	equ	0xFEA
 11839                           fsr0l	equ	0xFE9
 11840                           wreg	equ	0xFE8
 11841                           indf1	equ	0xFE7
 11842                           postinc1	equ	0xFE6
 11843                           postdec1	equ	0xFE5
 11844                           fsr1h	equ	0xFE2
 11845                           fsr1l	equ	0xFE1
 11846                           indf2	equ	0xFDF
 11847                           postinc2	equ	0xFDE
 11848                           postdec2	equ	0xFDD
 11849                           plusw2	equ	0xFDB
 11850                           fsr2h	equ	0xFDA
 11851                           fsr2l	equ	0xFD9
 11852                           status	equ	0xFD8
 11853                           
 11854 ;; *************** function _receiveSendMultiEventCANAL *****************
 11855 ;; Defined at:
 11856 ;;		line 2381 in file "main.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;		None
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  timestamp       4   25[BANK0 ] unsigned long 
 11861 ;;  crc             1   35[BANK0 ] unsigned char 
 11862 ;;  data            8   16[BANK0 ] unsigned char [8]
 11863 ;;  id              4   30[BANK0 ] unsigned long 
 11864 ;;  pos             1   36[BANK0 ] unsigned char 
 11865 ;;  dlc             1   34[BANK0 ] unsigned char 
 11866 ;;  i               1   29[BANK0 ] unsigned char 
 11867 ;;  msgcount        1   24[BANK0 ] unsigned char 
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      enum E15660
 11870 ;; Registers used:
 11871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11872 ;; Tracked objects:
 11873 ;;		On entry : F/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11877 ;;      Params:         0       0       0       0       0       0       0
 11878 ;;      Locals:         0      21       0       0       0       0       0
 11879 ;;      Temps:          0       4       0       0       0       0       0
 11880 ;;      Totals:         0      25       0       0       0       0       0
 11881 ;;Total ram usage:       25 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; Hardware stack levels required when called:    6
 11884 ;; This function calls:
 11885 ;;		_WriteUSART
 11886 ;;		_sendEscapedUartData
 11887 ;;		_crc8
 11888 ;;		_ReadTimer3
 11889 ;;		_getCANFrame
 11890 ;;		___wmul
 11891 ;; This function is called by:
 11892 ;;		_doModeVscp
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text18
 11897  003A06                     __ptext18:
 11898                           	opt stack 0
 11899  003A06                     _receiveSendMultiEventCANAL:
 11900                           	opt stack 23
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;main.c: 2382: uint8_t i;
 11904                           ;main.c: 2383: uint8_t pos=0;
 11905                           
 11906                           ;incstack = 0
 11907                           ;incstack = 0
 11908  003A06  6B84               	clrf	receiveSendMultiEventCANAL@pos& (0+255),b
 11909                           
 11910                           ;main.c: 2384: uint8_t msgcount=0;
 11911  003A08  6B78               	clrf	receiveSendMultiEventCANAL@msgcount& (0+255),b
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;main.c: 2385: uint32_t id;
 11915                           ;main.c: 2386: uint8_t dlc;
 11916                           ;main.c: 2387: uint8_t data[8];
 11917                           ;main.c: 2389: if ( getCANFrame( &id, &dlc, &data ) ) {
 11918  003A0A  0E00               	movlw	high receiveSendMultiEventCANAL@dlc
 11919  003A0C  D8FD               	call	PL100	;call to abstracted procedure
 11920  003A0E  EC62  F02C         	call	_getCANFrame
 11921  003A12  0900               	iorlw	0
 11922  003A14  E101 D0E7          	bz	l1127
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;main.c: 2391: uint8_t crc = 0;
 11926  003A18  6B83               	clrf	receiveSendMultiEventCANAL@crc& (0+255),b
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;main.c: 2394: cntRxFrames++;
 11930  003A1A  2BD2               	incf	_cntRxFrames& (0+255),f,b
 11931  003A1C  0E00               	movlw	0
 11932  003A1E  23D3               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 11933  003A20  23D4               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 11934  003A22  23D5               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 11935                           
 11936                           ;main.c: 2395: cntRxBytes += dlc;
 11937  003A24  5182               	movf	receiveSendMultiEventCANAL@dlc& (0+255),w,b
 11938  003A26  27CE               	addwf	_cntRxBytes& (0+255),f,b
 11939  003A28  0E00               	movlw	0
 11940  003A2A  23CF               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 11941  003A2C  23D0               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 11942  003A2E  23D1               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 11943  003A30                     l1096:
 11944                           
 11945                           ; BSR set to: 0
 11946  003A30  A2AC               	btfss	4012,1,c	;volatile
 11947  003A32  D7FE               	goto	l1096
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;main.c: 2399: WriteUSART(0x10);
 11951  003A34  0E10               	movlw	16
 11952  003A36  EC81  F035         	call	_WriteUSART
 11953  003A3A                     l1099:
 11954  003A3A  A2AC               	btfss	4012,1,c	;volatile
 11955  003A3C  D7FE               	goto	l1099
 11956                           
 11957                           ;main.c: 2401: WriteUSART(0x02);
 11958  003A3E  0E02               	movlw	2
 11959  003A40  EC81  F035         	call	_WriteUSART
 11960  003A44                     l1102:
 11961  003A44  A2AC               	btfss	4012,1,c	;volatile
 11962  003A46  D7FE               	goto	l1102
 11963                           
 11964                           ;main.c: 2405: if ( bTimestamp ) {
 11965  003A48  0100               	movlb	0	; () banked
 11966  003A4A  51F0               	movf	_bTimestamp& (0+255),w,b
 11967  003A4C  E00D               	bz	l18128
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;main.c: 2406: WriteUSART( 12 );
 11971  003A4E  0E0C               	movlw	12
 11972  003A50  EC81  F035         	call	_WriteUSART
 11973                           
 11974                           ;main.c: 2407: crc8(&crc, 12 );
 11975  003A54  0100               	movlb	0	; () banked
 11976  003A56  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11977  003A58  6F61               	movwf	(?_crc8+1)& (0+255),b
 11978  003A5A  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 11979  003A5C  6F60               	movwf	?_crc8& (0+255),b
 11980  003A5E  0E0C               	movlw	12
 11981  003A60  6F62               	movwf	(?_crc8+2)& (0+255),b
 11982  003A62  EC67  F034         	call	_crc8	;wreg free
 11983                           
 11984                           ;main.c: 2408: }
 11985  003A66  D00C               	goto	l1107
 11986  003A68                     l18128:
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;main.c: 2409: else {
 11990                           ;main.c: 2410: WriteUSART( 6 );
 11991  003A68  0E06               	movlw	6
 11992  003A6A  EC81  F035         	call	_WriteUSART
 11993                           
 11994                           ;main.c: 2411: crc8(&crc, 6 );
 11995  003A6E  0100               	movlb	0	; () banked
 11996  003A70  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11997  003A72  6F61               	movwf	(?_crc8+1)& (0+255),b
 11998  003A74  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 11999  003A76  6F60               	movwf	?_crc8& (0+255),b
 12000  003A78  0E06               	movlw	6
 12001  003A7A  6F62               	movwf	(?_crc8+2)& (0+255),b
 12002  003A7C  EC67  F034         	call	_crc8	;wreg free
 12003  003A80                     l1107:
 12004  003A80  A2AC               	btfss	4012,1,c	;volatile
 12005  003A82  D7FE               	goto	l1107
 12006                           
 12007                           ;main.c: 2416: WriteUSART(0);
 12008  003A84  0E00               	movlw	0
 12009  003A86  EC81  F035         	call	_WriteUSART
 12010                           
 12011                           ;main.c: 2417: crc8(&crc, 0);
 12012  003A8A  0100               	movlb	0	; () banked
 12013  003A8C  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 12014  003A8E  6F61               	movwf	(?_crc8+1)& (0+255),b
 12015  003A90  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 12016  003A92  6F60               	movwf	?_crc8& (0+255),b
 12017  003A94  0E00               	movlw	0
 12018  003A96  6B62               	clrf	(?_crc8+2)& (0+255),b
 12019  003A98  EC67  F034         	call	_crc8	;wreg free
 12020                           
 12021                           ; BSR set to: 3
 12022                           ;main.c: 2420: sendEscapedUartData(sequencyno, &crc);
 12023  003A9C  0100               	movlb	0	; () banked
 12024  003A9E  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 12025  003AA0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 12026  003AA2  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 12027  003AA4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 12028  003AA6  51F3               	movf	_sequencyno& (0+255),w,b
 12029  003AA8  ECEF  F031         	call	_sendEscapedUartData
 12030                           
 12031                           ;main.c: 2421: sequencyno++;
 12032  003AAC  0100               	movlb	0	; () banked
 12033  003AAE  2BF3               	incf	_sequencyno& (0+255),f,b
 12034  003AB0                     l18140:
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;main.c: 2431: wrkbuf[ pos ] = (id >> 24) & 0xff;
 12038  003AB0  D8A3               	call	PL70	;call to abstracted procedure
 12039  003AB2  C081  FFDF         	movff	receiveSendMultiEventCANAL@id+3,indf2
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;main.c: 2432: pos++;
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;main.c: 2433: wrkbuf[ pos ] = (id >> 16) & 0xff;
 12046  003AB6  D898               	call	PL18	;call to abstracted procedure
 12047  003AB8  C080  FFDF         	movff	receiveSendMultiEventCANAL@id+2,indf2
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;main.c: 2434: pos++;
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;main.c: 2435: wrkbuf[ pos ] = (id >> 8) & 0xff;
 12054  003ABC  D895               	call	PL18	;call to abstracted procedure
 12055  003ABE  C07F  FFDF         	movff	receiveSendMultiEventCANAL@id+1,indf2
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;main.c: 2436: pos++;
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;main.c: 2437: wrkbuf[ pos ] = id & 0xff;
 12062  003AC2  D892               	call	PL18	;call to abstracted procedure
 12063  003AC4  C07E  FFDF         	movff	receiveSendMultiEventCANAL@id,indf2
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;main.c: 2438: pos++;
 12067  003AC8  2B84               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;main.c: 2440: if ( bTimestamp ) {
 12071  003ACA  51F0               	movf	_bTimestamp& (0+255),w,b
 12072  003ACC  E032               	bz	l18176
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;main.c: 2441: uint32_t timestamp = (timer<<16) | ReadTimer3()*10;
 12076  003ACE  EC8B  F035         	call	_ReadTimer3	;wreg free
 12077  003AD2  C01F  F023         	movff	?_ReadTimer3,?___wmul
 12078  003AD6  C020  F024         	movff	?_ReadTimer3+1,?___wmul+1
 12079  003ADA  6A26               	clrf	?___wmul+3,c
 12080  003ADC  0E0A               	movlw	10
 12081  003ADE  6E25               	movwf	?___wmul+2,c
 12082  003AE0  EC49  F034         	call	___wmul	;wreg free
 12083  003AE4  C0E2  F06C         	movff	_timer,??_receiveSendMultiEventCANAL	;volatile
 12084  003AE8  C0E3  F06D         	movff	_timer+1,??_receiveSendMultiEventCANAL+1	;volatile
 12085  003AEC  C0E4  F06E         	movff	_timer+2,??_receiveSendMultiEventCANAL+2	;volatile
 12086  003AF0  C0E5  F06F         	movff	_timer+3,??_receiveSendMultiEventCANAL+3	;volatile
 12087  003AF4  C06D  F06F         	movff	??_receiveSendMultiEventCANAL+1,??_receiveSendMultiEventCANAL+3
 12088  003AF8  C06C  F06E         	movff	??_receiveSendMultiEventCANAL,??_receiveSendMultiEventCANAL+2
 12089  003AFC  6B6D               	clrf	(??_receiveSendMultiEventCANAL+1)& (0+255),b
 12090  003AFE  6B6C               	clrf	??_receiveSendMultiEventCANAL& (0+255),b
 12091  003B00  5123               	movf	?___wmul& (0+255),w,b
 12092  003B02  116C               	iorwf	??_receiveSendMultiEventCANAL& (0+255),w,b
 12093  003B04  6F79               	movwf	receiveSendMultiEventCANAL@timestamp& (0+255),b
 12094  003B06  5124               	movf	(?___wmul+1)& (0+255),w,b
 12095  003B08  116D               	iorwf	(??_receiveSendMultiEventCANAL+1)& (0+255),w,b
 12096  003B0A  6F7A               	movwf	(receiveSendMultiEventCANAL@timestamp+1)& (0+255),b
 12097  003B0C  0E00               	movlw	0
 12098  003B0E  116E               	iorwf	(??_receiveSendMultiEventCANAL+2)& (0+255),w,b
 12099  003B10  6F7B               	movwf	(receiveSendMultiEventCANAL@timestamp+2)& (0+255),b
 12100  003B12  0E00               	movlw	0
 12101  003B14  116F               	iorwf	(??_receiveSendMultiEventCANAL+3)& (0+255),w,b
 12102  003B16  6F7C               	movwf	(receiveSendMultiEventCANAL@timestamp+3)& (0+255),b
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;main.c: 2442: wrkbuf[ pos ] = (timestamp >> 24) & 0xff;
 12106  003B18  D86F               	call	PL70	;call to abstracted procedure
 12107  003B1A  C07C  FFDF         	movff	receiveSendMultiEventCANAL@timestamp+3,indf2
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;main.c: 2443: pos++;
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;main.c: 2444: wrkbuf[ pos ] = (timestamp >> 16) & 0xff;
 12114  003B1E  D864               	call	PL18	;call to abstracted procedure
 12115  003B20  C07B  FFDF         	movff	receiveSendMultiEventCANAL@timestamp+2,indf2
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;main.c: 2445: pos++;
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;main.c: 2446: wrkbuf[ pos ] = (timestamp >> 8) & 0xff;
 12122  003B24  D861               	call	PL18	;call to abstracted procedure
 12123  003B26  C07A  FFDF         	movff	receiveSendMultiEventCANAL@timestamp+1,indf2
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;main.c: 2447: pos++;
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;main.c: 2448: wrkbuf[ pos ] = timestamp & 0xff;
 12130  003B2A  D85E               	call	PL18	;call to abstracted procedure
 12131  003B2C  C079  FFDF         	movff	receiveSendMultiEventCANAL@timestamp,indf2
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;main.c: 2449: pos++;
 12135  003B30  2B84               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 12136  003B32                     l18176:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;main.c: 2450: }
 12140                           ;main.c: 2453: wrkbuf[ pos ] = dlc;
 12141  003B32  D862               	call	PL70	;call to abstracted procedure
 12142  003B34  C082  FFDF         	movff	receiveSendMultiEventCANAL@dlc,indf2
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;main.c: 2454: pos++;
 12146  003B38  2B84               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;main.c: 2457: for (i = 0; i < dlc; i++) {
 12150  003B3A  6B7D               	clrf	receiveSendMultiEventCANAL@i& (0+255),b
 12151  003B3C  D00F               	goto	l18188
 12152  003B3E                     l18182:
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;main.c: 2458: wrkbuf[ pos ] = data[ i ];
 12156  003B3E  517D               	movf	receiveSendMultiEventCANAL@i& (0+255),w,b
 12157  003B40  0F70               	addlw	low receiveSendMultiEventCANAL@data
 12158  003B42  6ED9               	movwf	fsr2l,c
 12159  003B44  6ADA               	clrf	fsr2h,c
 12160  003B46  0E55               	movlw	low _wrkbuf
 12161  003B48  0100               	movlb	0	; () banked
 12162  003B4A  2584               	addwf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 12163  003B4C  6EE1               	movwf	fsr1l,c
 12164  003B4E  6AE2               	clrf	fsr1h,c
 12165  003B50  0E01               	movlw	high _wrkbuf
 12166  003B52  22E2               	addwfc	fsr1h,f,c
 12167  003B54  CFDF FFE7          	movff	indf2,indf1
 12168                           
 12169                           ; BSR set to: 1
 12170                           ;main.c: 2459: pos++;
 12171  003B58  2B84               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 12172                           
 12173                           ; BSR set to: 0
 12174  003B5A  2B7D               	incf	receiveSendMultiEventCANAL@i& (0+255),f,b
 12175  003B5C                     l18188:
 12176                           
 12177                           ; BSR set to: 0
 12178  003B5C  5182               	movf	receiveSendMultiEventCANAL@dlc& (0+255),w,b
 12179  003B5E  5D7D               	subwf	receiveSendMultiEventCANAL@i& (0+255),w,b
 12180  003B60  E3EE               	bnc	l18182
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;main.c: 2460: }
 12184                           ;main.c: 2462: msgcount++;
 12185  003B62  2B78               	incf	receiveSendMultiEventCANAL@msgcount& (0+255),f,b
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;main.c: 2464: } while ( ( msgcount < caps.maxCanalFrames ) &&
 12189                           ;main.c: 2465: ( msgcount < 5 ) &&
 12190                           ;main.c: 2466: getCANFrame( &id, &dlc, &data ) );
 12191  003B64  51FD               	movf	(_caps+1)& (0+255),w,b
 12192  003B66  6178               	cpfslt	receiveSendMultiEventCANAL@msgcount& (0+255),b
 12193  003B68  D009               	goto	l18198
 12194                           
 12195                           ; BSR set to: 0
 12196  003B6A  0E05               	movlw	5
 12197  003B6C  6178               	cpfslt	receiveSendMultiEventCANAL@msgcount& (0+255),b
 12198  003B6E  D006               	goto	l18198
 12199                           
 12200                           ; BSR set to: 0
 12201  003B70  0E00               	movlw	high receiveSendMultiEventCANAL@dlc
 12202  003B72  D84A               	call	PL100	;call to abstracted procedure
 12203  003B74  EC62  F02C         	call	_getCANFrame
 12204  003B78  0900               	iorlw	0
 12205  003B7A  E19A               	bnz	l18140
 12206  003B7C                     l18198:
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;main.c: 2471: sendEscapedUartData(0, &crc);
 12210  003B7C  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 12211  003B7E  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 12212  003B80  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 12213  003B82  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 12214  003B84  0E00               	movlw	0
 12215  003B86  ECEF  F031         	call	_sendEscapedUartData
 12216                           
 12217                           ;main.c: 2472: sendEscapedUartData(pos, &crc);
 12218  003B8A  0100               	movlb	0	; () banked
 12219  003B8C  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 12220  003B8E  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 12221  003B90  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 12222  003B92  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 12223  003B94  5184               	movf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 12224  003B96  ECEF  F031         	call	_sendEscapedUartData
 12225                           
 12226                           ;main.c: 2475: for (i = 0; i < pos; i++) {
 12227  003B9A  0100               	movlb	0	; () banked
 12228  003B9C  6B7D               	clrf	receiveSendMultiEventCANAL@i& (0+255),b
 12229  003B9E  D011               	goto	l18206
 12230  003BA0                     l18202:
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;main.c: 2476: sendEscapedUartData( wrkbuf[ i ], &crc);
 12234  003BA0  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 12235  003BA2  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 12236  003BA4  0E83               	movlw	low receiveSendMultiEventCANAL@crc
 12237  003BA6  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 12238  003BA8  0E55               	movlw	low _wrkbuf
 12239  003BAA  0100               	movlb	0	; () banked
 12240  003BAC  257D               	addwf	receiveSendMultiEventCANAL@i& (0+255),w,b
 12241  003BAE  6ED9               	movwf	fsr2l,c
 12242  003BB0  6ADA               	clrf	fsr2h,c
 12243  003BB2  0101               	movlb	1	; () banked
 12244  003BB4  0E01               	movlw	high _wrkbuf
 12245  003BB6  22DA               	addwfc	fsr2h,f,c
 12246  003BB8  50DF               	movf	indf2,w,c
 12247  003BBA  ECEF  F031         	call	_sendEscapedUartData
 12248  003BBE  0100               	movlb	0	; () banked
 12249  003BC0  2B7D               	incf	receiveSendMultiEventCANAL@i& (0+255),f,b
 12250  003BC2                     l18206:
 12251                           
 12252                           ; BSR set to: 0
 12253  003BC2  5184               	movf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 12254  003BC4  5D7D               	subwf	receiveSendMultiEventCANAL@i& (0+255),w,b
 12255  003BC6  E3EC               	bnc	l18202
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;main.c: 2477: }
 12259                           ;main.c: 2480: sendEscapedUartData(crc, (0));
 12260  003BC8  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 12261  003BCA  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 12262  003BCC  5183               	movf	receiveSendMultiEventCANAL@crc& (0+255),w,b
 12263  003BCE  ECEF  F031         	call	_sendEscapedUartData
 12264  003BD2                     l1121:
 12265  003BD2  A2AC               	btfss	4012,1,c	;volatile
 12266  003BD4  D7FE               	goto	l1121
 12267                           
 12268                           ;main.c: 2484: WriteUSART(0x10);
 12269  003BD6  0E10               	movlw	16
 12270  003BD8  EC81  F035         	call	_WriteUSART
 12271  003BDC                     l1124:
 12272  003BDC  A2AC               	btfss	4012,1,c	;volatile
 12273  003BDE  D7FE               	goto	l1124
 12274                           
 12275                           ;main.c: 2486: WriteUSART(0x03);
 12276  003BE0  0E03               	movlw	3
 12277  003BE2  EC81  F035         	call	_WriteUSART
 12278  003BE6                     l1127:
 12279  003BE6  0012               	return	
 12280  003BE8                     __end_of_receiveSendMultiEventCANAL:
 12281                           	opt stack 0
 12282  003BE8                     PL18:
 12283                           	opt stack 23
 12284  003BE8  2B84               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 12285  003BEA  0E55               	movlw	low _wrkbuf
 12286  003BEC  2584               	addwf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 12287  003BEE  6ED9               	movwf	fsr2l,c
 12288  003BF0  6ADA               	clrf	fsr2h,c
 12289  003BF2  0E01               	movlw	high _wrkbuf
 12290  003BF4  22DA               	addwfc	fsr2h,f,c
 12291  003BF6  0012               	return	
 12292  003BF8                     __end_ofPL18:
 12293                           	opt stack 0
 12294  003BF8                     PL70:
 12295                           	opt stack 23
 12296  003BF8  0E55               	movlw	low _wrkbuf
 12297  003BFA  0100               	movlb	0	; () banked
 12298  003BFC  2584               	addwf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 12299  003BFE  6ED9               	movwf	fsr2l,c
 12300  003C00  6ADA               	clrf	fsr2h,c
 12301  003C02  0E01               	movlw	high _wrkbuf
 12302  003C04  22DA               	addwfc	fsr2h,f,c
 12303  003C06  0012               	return	
 12304  003C08                     __end_ofPL70:
 12305                           	opt stack 0
 12306  003C08                     PL100:
 12307                           	opt stack 23
 12308  003C08  6F69               	movwf	(?_getCANFrame+1)& (0+255),b
 12309  003C0A  0E82               	movlw	low receiveSendMultiEventCANAL@dlc
 12310  003C0C  6F68               	movwf	?_getCANFrame& (0+255),b
 12311  003C0E  0E00               	movlw	high receiveSendMultiEventCANAL@data
 12312  003C10  6F6B               	movwf	(?_getCANFrame+3)& (0+255),b
 12313  003C12  0E70               	movlw	low receiveSendMultiEventCANAL@data
 12314  003C14  6F6A               	movwf	(?_getCANFrame+2)& (0+255),b
 12315  003C16  0E7E               	movlw	receiveSendMultiEventCANAL@id& (0+255)
 12316  003C18  0012               	return	
 12317  003C1A                     __end_ofPL100:
 12318                           	opt stack 0
 12319                           tblptru	equ	0xFF8
 12320                           tblptrh	equ	0xFF7
 12321                           tblptrl	equ	0xFF6
 12322                           tablat	equ	0xFF5
 12323                           prodh	equ	0xFF4
 12324                           prodl	equ	0xFF3
 12325                           intcon	equ	0xFF2
 12326                           indf0	equ	0xFEF
 12327                           postinc0	equ	0xFEE
 12328                           fsr0h	equ	0xFEA
 12329                           fsr0l	equ	0xFE9
 12330                           wreg	equ	0xFE8
 12331                           indf1	equ	0xFE7
 12332                           postinc1	equ	0xFE6
 12333                           postdec1	equ	0xFE5
 12334                           fsr1h	equ	0xFE2
 12335                           fsr1l	equ	0xFE1
 12336                           indf2	equ	0xFDF
 12337                           postinc2	equ	0xFDE
 12338                           postdec2	equ	0xFDD
 12339                           plusw2	equ	0xFDB
 12340                           fsr2h	equ	0xFDA
 12341                           fsr2l	equ	0xFD9
 12342                           status	equ	0xFD8
 12343                           
 12344 ;; *************** function _sendEscapedUartData *****************
 12345 ;; Defined at:
 12346 ;;		line 2014 in file "main.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;  c               1    wreg     unsigned char 
 12349 ;;  pcrc            2    3[BANK0 ] PTR unsigned char 
 12350 ;;		 -> sendVSCPModeCapabilities@crc(1), receiveSendEventVSCP@crc(1), receiveSendMultiEventCANAL@crc(1), receiveSendEven
      +tCANAL@crc(1), 
 12351 ;;		 -> sendVSCPDriverCommandReply@crc(1), sendVSCPDriverNack@crc(1), sendVSCPDriverAck@crc(1), sendVSCPDriverErrorFrame
      +@crc(1), 
 12352 ;;		 -> NULL(0), 
 12353 ;; Auto vars:     Size  Location     Type
 12354 ;;  c               1    5[BANK0 ] unsigned char 
 12355 ;; Return value:  Size  Location     Type
 12356 ;;		None               void
 12357 ;; Registers used:
 12358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12359 ;; Tracked objects:
 12360 ;;		On entry : E/1
 12361 ;;		On exit  : C/0
 12362 ;;		Unchanged: 0/0
 12363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12364 ;;      Params:         0       2       0       0       0       0       0
 12365 ;;      Locals:         0       1       0       0       0       0       0
 12366 ;;      Temps:          0       0       0       0       0       0       0
 12367 ;;      Totals:         0       3       0       0       0       0       0
 12368 ;;Total ram usage:        3 bytes
 12369 ;; Hardware stack levels used:    1
 12370 ;; Hardware stack levels required when called:    5
 12371 ;; This function calls:
 12372 ;;		_WriteUSART
 12373 ;;		_crc8
 12374 ;; This function is called by:
 12375 ;;		_sendVSCPDriverErrorFrame
 12376 ;;		_sendVSCPDriverAck
 12377 ;;		_sendVSCPDriverNack
 12378 ;;		_sendVSCPDriverCommandReply
 12379 ;;		_receiveSendEventCANAL
 12380 ;;		_receiveSendMultiEventCANAL
 12381 ;;		_sendVSCPModeCapabilities
 12382 ;; This function uses a non-reentrant model
 12383 ;;
 12384                           
 12385                           	psect	text19
 12386  0063DE                     __ptext19:
 12387                           	opt stack 0
 12388  0063DE                     _sendEscapedUartData:
 12389                           	opt stack 23
 12390                           
 12391                           ;incstack = 0
 12392                           ;incstack = 0
 12393                           ;sendEscapedUartData@c stored from wreg
 12394  0063DE  CFE8 F065          	movff	wreg,sendEscapedUartData@c
 12395                           
 12396                           ;main.c: 2015: if (0x10 == c) {
 12397  0063E2  0100               	movlb	0	; () banked
 12398  0063E4  5165               	movf	sendEscapedUartData@c& (0+255),w,b
 12399  0063E6  0A10               	xorlw	16
 12400  0063E8  E117               	bnz	l907
 12401  0063EA                     l899:
 12402  0063EA  A2AC               	btfss	4012,1,c	;volatile
 12403  0063EC  D7FE               	goto	l899
 12404                           
 12405                           ;main.c: 2018: WriteUSART(0x10);
 12406  0063EE  0E10               	movlw	16
 12407  0063F0  EC81  F035         	call	_WriteUSART
 12408  0063F4                     l902:
 12409  0063F4  A2AC               	btfss	4012,1,c	;volatile
 12410  0063F6  D7FE               	goto	l902
 12411                           
 12412                           ;main.c: 2022: WriteUSART(0x10);
 12413  0063F8  0E10               	movlw	16
 12414  0063FA  EC81  F035         	call	_WriteUSART
 12415                           
 12416                           ;main.c: 2023: if ((0) != pcrc) crc8(pcrc, 0x10);
 12417  0063FE  0100               	movlb	0	; () banked
 12418  006400  5164               	movf	(sendEscapedUartData@pcrc+1)& (0+255),w,b
 12419  006402  1163               	iorwf	sendEscapedUartData@pcrc& (0+255),w,b
 12420  006404  E01B               	bz	l911
 12421                           
 12422                           ; BSR set to: 0
 12423  006406  C063  F060         	movff	sendEscapedUartData@pcrc,?_crc8
 12424  00640A  C064  F061         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 12425  00640E  0E10               	movlw	16
 12426  006410  6F62               	movwf	(?_crc8+2)& (0+255),b
 12427  006412  EC67  F034         	call	_crc8	;wreg free
 12428  006416  D012               	goto	l911
 12429  006418                     l907:
 12430  006418  A2AC               	btfss	4012,1,c	;volatile
 12431  00641A  D7FE               	goto	l907
 12432                           
 12433                           ;main.c: 2029: WriteUSART(c);
 12434  00641C  0100               	movlb	0	; () banked
 12435  00641E  5165               	movf	sendEscapedUartData@c& (0+255),w,b
 12436  006420  EC81  F035         	call	_WriteUSART
 12437                           
 12438                           ;main.c: 2030: if ((0) != pcrc) crc8(pcrc, c);
 12439  006424  0100               	movlb	0	; () banked
 12440  006426  5164               	movf	(sendEscapedUartData@pcrc+1)& (0+255),w,b
 12441  006428  1163               	iorwf	sendEscapedUartData@pcrc& (0+255),w,b
 12442  00642A  E008               	bz	l911
 12443                           
 12444                           ; BSR set to: 0
 12445  00642C  C063  F060         	movff	sendEscapedUartData@pcrc,?_crc8
 12446  006430  C064  F061         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 12447  006434  C065  F062         	movff	sendEscapedUartData@c,?_crc8+2
 12448  006438  EC67  F034         	call	_crc8	;wreg free
 12449  00643C                     l911:
 12450  00643C  0012               	return	
 12451  00643E                     __end_of_sendEscapedUartData:
 12452                           	opt stack 0
 12453                           tblptru	equ	0xFF8
 12454                           tblptrh	equ	0xFF7
 12455                           tblptrl	equ	0xFF6
 12456                           tablat	equ	0xFF5
 12457                           prodh	equ	0xFF4
 12458                           prodl	equ	0xFF3
 12459                           intcon	equ	0xFF2
 12460                           indf0	equ	0xFEF
 12461                           postinc0	equ	0xFEE
 12462                           fsr0h	equ	0xFEA
 12463                           fsr0l	equ	0xFE9
 12464                           wreg	equ	0xFE8
 12465                           indf1	equ	0xFE7
 12466                           postinc1	equ	0xFE6
 12467                           postdec1	equ	0xFE5
 12468                           fsr1h	equ	0xFE2
 12469                           fsr1l	equ	0xFE1
 12470                           indf2	equ	0xFDF
 12471                           postinc2	equ	0xFDE
 12472                           postdec2	equ	0xFDD
 12473                           plusw2	equ	0xFDB
 12474                           fsr2h	equ	0xFDA
 12475                           fsr2l	equ	0xFD9
 12476                           status	equ	0xFD8
 12477                           
 12478 ;; *************** function _crc8 *****************
 12479 ;; Defined at:
 12480 ;;		line 47 in file "crc8.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;  crc             2    0[BANK0 ] PTR unsigned char 
 12483 ;;		 -> calcCRC@crc(1), sendVSCPModeCapabilities@crc(1), receiveSendEventVSCP@crc(1), receiveSendMultiEventCANAL@crc(1), 
 12484 ;;		 -> receiveSendEventCANAL@crc(1), sendVSCPDriverCommandReply@crc(1), sendVSCPDriverNack@crc(1), sendVSCPDriverAck@cr
      +c(1), 
 12485 ;;		 -> sendVSCPDriverErrorFrame@crc(1), NULL(0), 
 12486 ;;  m               1    2[BANK0 ] unsigned char 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;		None               void
 12491 ;; Registers used:
 12492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12493 ;; Tracked objects:
 12494 ;;		On entry : F/0
 12495 ;;		On exit  : F/3
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12498 ;;      Params:         0       3       0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0
 12500 ;;      Temps:          2       0       0       0       0       0       0
 12501 ;;      Totals:         2       3       0       0       0       0       0
 12502 ;;Total ram usage:        5 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; Hardware stack levels required when called:    4
 12505 ;; This function calls:
 12506 ;;		_init_crc8
 12507 ;; This function is called by:
 12508 ;;		_sendEscapedUartData
 12509 ;;		_sendVSCPDriverErrorFrame
 12510 ;;		_sendVSCPDriverAck
 12511 ;;		_sendVSCPDriverNack
 12512 ;;		_sendVSCPDriverCommandReply
 12513 ;;		_receiveSendEventCANAL
 12514 ;;		_receiveSendMultiEventCANAL
 12515 ;;		_sendVSCPModeCapabilities
 12516 ;;		_calcCRC
 12517 ;; This function uses a non-reentrant model
 12518 ;;
 12519                           
 12520                           	psect	text20
 12521  0068CE                     __ptext20:
 12522                           	opt stack 0
 12523  0068CE                     _crc8:
 12524                           	opt stack 24
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;crc8.c: 48: if ( !made_table ) {
 12528                           
 12529                           ;incstack = 0
 12530                           ;incstack = 0
 12531  0068CE  5029               	movf	_made_table+1,w,c
 12532  0068D0  1028               	iorwf	_made_table,w,c
 12533  0068D2  B4D8               	btfsc	status,2,c
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;crc8.c: 49: init_crc8();
 12537  0068D4  EC24  F031         	call	_init_crc8	;wreg free
 12538                           
 12539                           ;crc8.c: 50: }
 12540                           ;crc8.c: 52: *crc = crc8_table[(*crc) ^ m];
 12541  0068D8  C060  FFD9         	movff	crc8@crc,fsr2l
 12542  0068DC  C061  FFDA         	movff	crc8@crc+1,fsr2h
 12543  0068E0  50DF               	movf	indf2,w,c
 12544  0068E2  0100               	movlb	0	; () banked
 12545  0068E4  1962               	xorwf	crc8@m& (0+255),w,b
 12546  0068E6  6E26               	movwf	??_crc8& (0+255),c
 12547  0068E8  6A27               	clrf	(??_crc8+1)& (0+255),c
 12548  0068EA  0103               	movlb	3	; () banked
 12549  0068EC  0E00               	movlw	low _crc8_table
 12550  0068EE  2426               	addwf	??_crc8,w,c
 12551  0068F0  6ED9               	movwf	fsr2l,c
 12552  0068F2  0E03               	movlw	high _crc8_table
 12553  0068F4  2027               	addwfc	??_crc8+1,w,c
 12554  0068F6  6EDA               	movwf	fsr2h,c
 12555  0068F8  C060  FFE1         	movff	crc8@crc,fsr1l
 12556  0068FC  C061  FFE2         	movff	crc8@crc+1,fsr1h
 12557  006900  CFDF FFE7          	movff	indf2,indf1
 12558                           
 12559                           ; BSR set to: 3
 12560  006904  0012               	return	
 12561  006906                     __end_of_crc8:
 12562                           	opt stack 0
 12563                           tblptru	equ	0xFF8
 12564                           tblptrh	equ	0xFF7
 12565                           tblptrl	equ	0xFF6
 12566                           tablat	equ	0xFF5
 12567                           prodh	equ	0xFF4
 12568                           prodl	equ	0xFF3
 12569                           intcon	equ	0xFF2
 12570                           indf0	equ	0xFEF
 12571                           postinc0	equ	0xFEE
 12572                           fsr0h	equ	0xFEA
 12573                           fsr0l	equ	0xFE9
 12574                           wreg	equ	0xFE8
 12575                           indf1	equ	0xFE7
 12576                           postinc1	equ	0xFE6
 12577                           postdec1	equ	0xFE5
 12578                           fsr1h	equ	0xFE2
 12579                           fsr1l	equ	0xFE1
 12580                           indf2	equ	0xFDF
 12581                           postinc2	equ	0xFDE
 12582                           postdec2	equ	0xFDD
 12583                           plusw2	equ	0xFDB
 12584                           fsr2h	equ	0xFDA
 12585                           fsr2l	equ	0xFD9
 12586                           status	equ	0xFD8
 12587                           
 12588 ;; *************** function _init_crc8 *****************
 12589 ;; Defined at:
 12590 ;;		line 25 in file "crc8.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;  i               2   35[COMRAM] int 
 12595 ;;  j               2   32[COMRAM] int 
 12596 ;;  crc             1   34[COMRAM] unsigned char 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;		None               void
 12599 ;; Registers used:
 12600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12606 ;;      Params:         0       0       0       0       0       0       0
 12607 ;;      Locals:         7       0       0       0       0       0       0
 12608 ;;      Temps:          0       0       0       0       0       0       0
 12609 ;;      Totals:         7       0       0       0       0       0       0
 12610 ;;Total ram usage:        7 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:    3
 12613 ;; This function calls:
 12614 ;;		Nothing
 12615 ;; This function is called by:
 12616 ;;		_main
 12617 ;;		_crc8
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           	psect	text21
 12622  006248                     __ptext21:
 12623                           	opt stack 0
 12624  006248                     _init_crc8:
 12625                           	opt stack 24
 12626                           
 12627                           ;crc8.c: 26: int i,j;
 12628                           ;crc8.c: 27: unsigned char crc;
 12629                           ;crc8.c: 29: if (!made_table) {
 12630                           
 12631                           ; BSR set to: 3
 12632                           ;incstack = 0
 12633                           ;incstack = 0
 12634  006248  5029               	movf	_made_table+1,w,c
 12635  00624A  1028               	iorwf	_made_table,w,c
 12636  00624C  E131               	bnz	l1740
 12637                           
 12638                           ;crc8.c: 30: for ( i=0; i<256; i++ ) {
 12639  00624E  6A24               	clrf	init_crc8@i,c
 12640  006250  6A25               	clrf	init_crc8@i+1,c
 12641  006252                     l1732:
 12642                           
 12643                           ;crc8.c: 31: crc = i;
 12644  006252  C024  F023         	movff	init_crc8@i,init_crc8@crc
 12645                           
 12646                           ;crc8.c: 32: for (j=0; j<8; j++) {
 12647  006256  6A21               	clrf	init_crc8@j,c
 12648  006258  6A22               	clrf	init_crc8@j+1,c
 12649  00625A                     l1734:
 12650                           
 12651                           ;crc8.c: 33: crc = (crc << 1) ^ ((crc & 0x80) ? 0x07 : 0);
 12652  00625A  BE23               	btfsc	init_crc8@crc,7,c
 12653  00625C  D003               	goto	l15324
 12654  00625E  6A1F               	clrf	_init_crc8$2208,c
 12655  006260  6A20               	clrf	_init_crc8$2208+1,c
 12656  006262  D003               	goto	l15326
 12657  006264                     l15324:
 12658  006264  6A20               	clrf	_init_crc8$2208+1,c
 12659  006266  0E07               	movlw	7
 12660  006268  6E1F               	movwf	_init_crc8$2208,c
 12661  00626A                     l15326:
 12662  00626A  5023               	movf	init_crc8@crc,w,c
 12663  00626C  2423               	addwf	init_crc8@crc,w,c
 12664  00626E  181F               	xorwf	_init_crc8$2208,w,c
 12665  006270  6E23               	movwf	init_crc8@crc,c
 12666  006272  4A21               	infsnz	init_crc8@j,f,c
 12667  006274  2A22               	incf	init_crc8@j+1,f,c
 12668  006276  5022               	movf	init_crc8@j+1,w,c
 12669  006278  0A80               	xorlw	128
 12670  00627A  0F80               	addlw	-128
 12671  00627C  0E08               	movlw	8
 12672  00627E  B4D8               	btfsc	status,2,c
 12673  006280  5C21               	subwf	init_crc8@j,w,c
 12674  006282  E3EB               	bnc	l1734
 12675                           
 12676                           ;crc8.c: 34: }
 12677                           ;crc8.c: 35: crc8_table[i] = crc & 0xFF;
 12678  006284  0103               	movlb	3	; () banked
 12679  006286  0E00               	movlw	low _crc8_table
 12680  006288  2424               	addwf	init_crc8@i,w,c
 12681  00628A  6ED9               	movwf	fsr2l,c
 12682  00628C  0E03               	movlw	high _crc8_table
 12683  00628E  2025               	addwfc	init_crc8@i+1,w,c
 12684  006290  6EDA               	movwf	fsr2h,c
 12685  006292  C023  FFDF         	movff	init_crc8@crc,indf2
 12686                           
 12687                           ; BSR set to: 3
 12688  006296  4A24               	infsnz	init_crc8@i,f,c
 12689  006298  2A25               	incf	init_crc8@i+1,f,c
 12690                           
 12691                           ; BSR set to: 3
 12692  00629A  5025               	movf	init_crc8@i+1,w,c
 12693  00629C  0A80               	xorlw	128
 12694  00629E  0F7F               	addlw	-129
 12695  0062A0  0E00               	movlw	0
 12696  0062A2  B4D8               	btfsc	status,2,c
 12697  0062A4  5C24               	subwf	init_crc8@i,w,c
 12698  0062A6  E3D5               	bnc	l1732
 12699                           
 12700                           ; BSR set to: 3
 12701                           ;crc8.c: 37: }
 12702                           ;crc8.c: 38: made_table=1;
 12703  0062A8  0E00               	movlw	0
 12704  0062AA  6E29               	movwf	_made_table+1,c
 12705  0062AC  0E01               	movlw	1
 12706  0062AE  6E28               	movwf	_made_table,c
 12707  0062B0                     l1740:
 12708  0062B0  0012               	return	
 12709  0062B2                     __end_of_init_crc8:
 12710                           	opt stack 0
 12711                           tblptru	equ	0xFF8
 12712                           tblptrh	equ	0xFF7
 12713                           tblptrl	equ	0xFF6
 12714                           tablat	equ	0xFF5
 12715                           prodh	equ	0xFF4
 12716                           prodl	equ	0xFF3
 12717                           intcon	equ	0xFF2
 12718                           indf0	equ	0xFEF
 12719                           postinc0	equ	0xFEE
 12720                           fsr0h	equ	0xFEA
 12721                           fsr0l	equ	0xFE9
 12722                           wreg	equ	0xFE8
 12723                           indf1	equ	0xFE7
 12724                           postinc1	equ	0xFE6
 12725                           postdec1	equ	0xFE5
 12726                           fsr1h	equ	0xFE2
 12727                           fsr1l	equ	0xFE1
 12728                           indf2	equ	0xFDF
 12729                           postinc2	equ	0xFDE
 12730                           postdec2	equ	0xFDD
 12731                           plusw2	equ	0xFDB
 12732                           fsr2h	equ	0xFDA
 12733                           fsr2l	equ	0xFD9
 12734                           status	equ	0xFD8
 12735                           
 12736 ;; *************** function _doModeVerbose *****************
 12737 ;; Defined at:
 12738 ;;		line 639 in file "main.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;		None
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;  baudcode        4   44[BANK2 ] unsigned long 
 12743 ;;  preg            2    6[BANK2 ] PTR unsigned char 
 12744 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 12745 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 12746 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 12747 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 12748 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 12749 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 12750 ;;		 -> cmdbuf(80), 
 12751 ;;  preg            2    4[BANK2 ] PTR unsigned char 
 12752 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 12753 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 12754 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 12755 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 12756 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 12757 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 12758 ;;		 -> cmdbuf(80), 
 12759 ;;  id              4   68[BANK2 ] unsigned long 
 12760 ;;  p               2   72[BANK2 ] PTR unsigned char 
 12761 ;;		 -> NULL(0), cmdbuf(80), 
 12762 ;;  mask_class      2   10[BANK2 ] unsigned short 
 12763 ;;  maskno          1   54[BANK2 ] unsigned char 
 12764 ;;  bPersistent     1    0        enum E15660
 12765 ;;  mask_nodeid     1   17[BANK2 ] unsigned char 
 12766 ;;  mask_type       1   16[BANK2 ] unsigned char 
 12767 ;;  mask_priorit    1   15[BANK2 ] unsigned char 
 12768 ;;  id              4    0[BANK2 ] unsigned long 
 12769 ;;  p               2   74[BANK2 ] PTR unsigned char 
 12770 ;;		 -> NULL(0), cmdbuf(80), 
 12771 ;;  filter_class    2    8[BANK2 ] unsigned short 
 12772 ;;  filterno        1   48[BANK2 ] unsigned char 
 12773 ;;  bPersistent     1   43[BANK2 ] enum E15660
 12774 ;;  filter_nodei    1   14[BANK2 ] unsigned char 
 12775 ;;  filter_type     1   13[BANK2 ] unsigned char 
 12776 ;;  filter_prior    1   12[BANK2 ] unsigned char 
 12777 ;;  nodeid          1   58[BANK2 ] unsigned char 
 12778 ;;  value           1   42[BANK2 ] unsigned char 
 12779 ;;  p               2   63[BANK2 ] PTR unsigned char 
 12780 ;;		 -> NULL(0), cmdbuf(80), 
 12781 ;;  nodeid          1   53[BANK2 ] unsigned char 
 12782 ;;  value           1   50[BANK2 ] unsigned char 
 12783 ;;  reg             1   41[BANK2 ] unsigned char 
 12784 ;;  page            1   40[BANK2 ] unsigned char 
 12785 ;;  p               2   61[BANK2 ] PTR unsigned char 
 12786 ;;		 -> NULL(0), cmdbuf(80), 
 12787 ;;  value           1   60[BANK2 ] unsigned char 
 12788 ;;  i               1   57[BANK2 ] unsigned char 
 12789 ;;  reg             1   56[BANK2 ] unsigned char 
 12790 ;;  page            1   55[BANK2 ] unsigned char 
 12791 ;;  nodeid          1   52[BANK2 ] unsigned char 
 12792 ;;  count           1   51[BANK2 ] unsigned char 
 12793 ;;  rv              1   39[BANK2 ] enum E15660
 12794 ;;  p               2   66[BANK2 ] PTR unsigned char 
 12795 ;;		 -> NULL(0), cmdbuf(80), 
 12796 ;;  ifmode          1   65[BANK2 ] enum E16362
 12797 ;;  c               1   59[BANK2 ] unsigned char 
 12798 ;;  i               1   49[BANK2 ] unsigned char 
 12799 ;; Return value:  Size  Location     Type
 12800 ;;		None               void
 12801 ;; Registers used:
 12802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12803 ;; Tracked objects:
 12804 ;;		On entry : F/0
 12805 ;;		On exit  : C/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12808 ;;      Params:         0       0       0       0       0       0       0
 12809 ;;      Locals:         0       0       0      76       0       0       0
 12810 ;;      Temps:          0       0      20       0       0       0       0
 12811 ;;      Totals:         0       0      20      76       0       0       0
 12812 ;;Total ram usage:       96 bytes
 12813 ;; Hardware stack levels used:    1
 12814 ;; Hardware stack levels required when called:   10
 12815 ;; This function calls:
 12816 ;;		_vscp_restoreDefaults
 12817 ;;		_putsUSART
 12818 ;;		_printFirmwareVersion
 12819 ;;		_fifo_read
 12820 ;;		_ECANSetOperationMode
 12821 ;;		_setFilter
 12822 ;;		__CANIDToRegs
 12823 ;;		_Busy_eep
 12824 ;;		_Write_b_eep
 12825 ;;		_receivePrintEventVerbose
 12826 ;;		_WriteUSART
 12827 ;;		_stristr
 12828 ;;		_strtok
 12829 ;;		_atoi
 12830 ;;		_memset
 12831 ;;		_sendVSCPFrame
 12832 ;;		_printStatistics
 12833 ;;		_printErrors
 12834 ;;		_printHelp
 12835 ;;		_findNodes
 12836 ;;		_strcpy
 12837 ;;		_strchr
 12838 ;;		_readRegisterExtended
 12839 ;;		_sprintf
 12840 ;;		_printBinary
 12841 ;;		_writeRegisterExtended
 12842 ;;		_printNodeFirmwareVersion
 12843 ;;		_printGUID
 12844 ;;		_printMDF
 12845 ;;		_changeBaudrate
 12846 ;; This function is called by:
 12847 ;;		_main
 12848 ;; This function uses a non-reentrant model
 12849 ;;
 12850                           
 12851                           	psect	text22
 12852  00077E                     __ptext22:
 12853                           	opt stack 0
 12854  00077E                     _doModeVerbose:
 12855                           	opt stack 20
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;main.c: 640: uint8_t c;
 12859                           ;main.c: 641: uint8_t i;
 12860                           ;main.c: 644: if (!bSilent) {
 12861                           
 12862                           ;incstack = 0
 12863                           ;incstack = 0
 12864  00077E  0101               	movlb	1	; () banked
 12865  000780  6702               	tstfsz	_bSilent& (0+255),b
 12866  000782  D002               	goto	l15472
 12867                           
 12868                           ; BSR set to: 1
 12869                           ;main.c: 645: receivePrintEventVerbose();
 12870  000784  EC7C  F017         	call	_receivePrintEventVerbose	;wreg free
 12871  000788                     l15472:
 12872                           
 12873                           ;main.c: 646: }
 12874                           ;main.c: 649: (INTCONbits.GIE = 0);
 12875  000788  9EF2               	bcf	intcon,7,c	;volatile
 12876                           
 12877                           ;main.c: 651: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
 12878  00078A  0E00               	movlw	high _serialInputFifo
 12879  00078C  6E20               	movwf	?_fifo_read+1,c
 12880  00078E  0EF4               	movlw	low _serialInputFifo
 12881  000790  6E1F               	movwf	?_fifo_read,c
 12882  000792  0102               	movlb	2	; () banked
 12883  000794  0E02               	movlw	high doModeVerbose@c
 12884  000796  6E22               	movwf	?_fifo_read+3,c
 12885  000798  0EC3               	movlw	low doModeVerbose@c
 12886  00079A  6E21               	movwf	?_fifo_read+2,c
 12887  00079C  6A24               	clrf	?_fifo_read+5,c
 12888  00079E  0E01               	movlw	1
 12889  0007A0  6E23               	movwf	?_fifo_read+4,c
 12890  0007A2  ECA7  F029         	call	_fifo_read	;wreg free
 12891  0007A6  041F               	decf	?_fifo_read,w,c
 12892  0007A8  1020               	iorwf	?_fifo_read+1,w,c
 12893  0007AA  E002 EF25  F00F    	bnz	l16376
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;main.c: 654: (INTCONbits.GIE = 1);
 12897  0007B0  8EF2               	bsf	intcon,7,c	;volatile
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;main.c: 657: if ( bLocalEcho ) {
 12901  0007B2  0101               	movlb	1	; () banked
 12902  0007B4  5101               	movf	_bLocalEcho& (0+255),w,b
 12903  0007B6  E00F               	bz	l15486
 12904                           
 12905                           ; BSR set to: 1
 12906                           ;main.c: 658: WriteUSART( c );
 12907  0007B8  0102               	movlb	2	; () banked
 12908  0007BA  51C3               	movf	doModeVerbose@c& (0+255),w,b
 12909  0007BC  EC81  F035         	call	_WriteUSART
 12910  0007C0                     l521:
 12911  0007C0  A2AC               	btfss	4012,1,c	;volatile
 12912  0007C2  D7FE               	goto	l521
 12913                           
 12914                           ;main.c: 660: if ( 0x0d == c ) {
 12915  0007C4  0102               	movlb	2	; () banked
 12916  0007C6  51C3               	movf	doModeVerbose@c& (0+255),w,b
 12917  0007C8  0A0D               	xorlw	13
 12918  0007CA  E105               	bnz	l15486
 12919                           
 12920                           ; BSR set to: 2
 12921                           ;main.c: 661: WriteUSART( 0x0a );
 12922  0007CC  0E0A               	movlw	10
 12923  0007CE  EC81  F035         	call	_WriteUSART
 12924  0007D2                     l525:
 12925  0007D2  A2AC               	btfss	4012,1,c	;volatile
 12926  0007D4  D7FE               	goto	l525
 12927  0007D6                     l15486:
 12928                           
 12929                           ;main.c: 663: }
 12930                           ;main.c: 664: }
 12931                           ;main.c: 667: cmdbuf[ pos++ ] = c;
 12932  0007D6  0101               	movlb	1	; () banked
 12933  0007D8  EC98  F015         	call	PL52	;call to abstracted procedure
 12934  0007DC  C2C3  FFDF         	movff	doModeVerbose@c,indf2
 12935                           
 12936                           ; BSR set to: 2
 12937  0007E0  2B03               	incf	_pos& (0+255),f,b
 12938                           
 12939                           ; BSR set to: 1
 12940                           ;main.c: 668: if (pos >= sizeof( cmdbuf ) ) {
 12941  0007E2  0E4F               	movlw	79
 12942  0007E4  6503               	cpfsgt	_pos& (0+255),b
 12943  0007E6  D001               	goto	l15494
 12944                           
 12945                           ; BSR set to: 1
 12946                           ;main.c: 671: pos = 0;
 12947  0007E8  6B03               	clrf	_pos& (0+255),b
 12948  0007EA                     l15494:
 12949                           
 12950                           ; BSR set to: 1
 12951                           ;main.c: 672: }
 12952                           ;main.c: 675: if (0x0d == c) {
 12953  0007EA  0102               	movlb	2	; () banked
 12954  0007EC  51C3               	movf	doModeVerbose@c& (0+255),w,b
 12955  0007EE  0A0D               	xorlw	13
 12956  0007F0  E002 EF25  F00F    	bnz	l16376
 12957                           
 12958                           ; BSR set to: 2
 12959                           ;main.c: 677: cmdbuf[ pos ] = 0;
 12960  0007F6  0101               	movlb	1	; () banked
 12961  0007F8  EC98  F015         	call	PL52	;call to abstracted procedure
 12962  0007FC  6ADF               	clrf	indf2,c
 12963                           
 12964                           ; BSR set to: 1
 12965                           ;main.c: 680: if (cmdbuf == stristr(cmdbuf, "BOOT")) {
 12966  0007FE  0100               	movlb	0	; () banked
 12967  000800  6F67               	movwf	(?_stristr+1)& (0+255),b
 12968  000802  0E05               	movlw	low _cmdbuf
 12969  000804  6F66               	movwf	?_stristr& (0+255),b
 12970  000806  0E7F               	movlw	high STR_6
 12971  000808  6F69               	movwf	(?_stristr+3)& (0+255),b
 12972  00080A  0EC0               	movlw	low STR_6
 12973  00080C  6F68               	movwf	(?_stristr+2)& (0+255),b
 12974  00080E  ECFB  F02F         	call	_stristr	;wreg free
 12975  000812  EC27  F00F         	call	PL2	;call to abstracted procedure
 12976  000816  E104               	bnz	u19865
 12977  000818  0100               	movlb	0	; () banked
 12978  00081A  5166               	movf	?_stristr& (0+255),w,b
 12979  00081C  0101               	movlb	1	; () banked
 12980  00081E  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 12981  000820                     u19865:
 12982  000820  E111               	bnz	l15506
 12983                           
 12984                           ; BSR set to: 1
 12985                           ;main.c: 681: putsUSART((char *) "Will enter bootloader now...\r\n");
 12986  000822  0E79               	movlw	high STR_7
 12987  000824  6E21               	movwf	?_putsUSART+1,c
 12988  000826  0ECE               	movlw	low STR_7
 12989  000828  6E20               	movwf	?_putsUSART,c
 12990  00082A  ECD5  F032         	call	_putsUSART	;wreg free
 12991                           
 12992                           ;main.c: 682: (Busy_eep(), Write_b_eep(0x00,0xFF));
 12993  00082E  ECBC  F035         	call	_Busy_eep	;wreg free
 12994  000832  6A20               	clrf	?_Write_b_eep+1,c
 12995  000834  6A1F               	clrf	?_Write_b_eep,c
 12996  000836  0EFF               	movlw	255
 12997  000838  6821               	setf	?_Write_b_eep+2,c
 12998  00083A  ECBB  F034         	call	_Write_b_eep	;wreg free
 12999  00083E  00FF               	reset		;# 
 13000                           
 13001                           ;main.c: 684: }
 13002  000840  EF1B  F00F         	goto	l16372
 13003  000844                     l15506:
 13004                           
 13005                           ; BSR set to: 1
 13006                           ;main.c: 686: else if (cmdbuf == stristr(cmdbuf, "OPEN")) {
 13007  000844  ECD9  F00F         	call	PL84	;call to abstracted procedure
 13008  000848  ECFB  F02F         	call	_stristr	;wreg free
 13009  00084C  EC27  F00F         	call	PL2	;call to abstracted procedure
 13010  000850  E104               	bnz	u19875
 13011  000852  0100               	movlb	0	; () banked
 13012  000854  5166               	movf	?_stristr& (0+255),w,b
 13013  000856  0101               	movlb	1	; () banked
 13014  000858  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13015  00085A                     u19875:
 13016  00085A  E10C               	bnz	l15514
 13017                           
 13018                           ; BSR set to: 1
 13019                           ;main.c: 687: bSilent = 0;
 13020  00085C  6B02               	clrf	_bSilent& (0+255),b
 13021                           
 13022                           ; BSR set to: 1
 13023                           ;main.c: 688: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 13024  00085E  0E00               	movlw	0
 13025  000860  EC6A  F035         	call	_ECANSetOperationMode
 13026                           
 13027                           ;main.c: 689: putsUSART((char *) "+OK\r\n");
 13028  000864  0E7F               	movlw	high STR_9
 13029  000866  6E21               	movwf	?_putsUSART+1,c
 13030  000868  0E6A               	movlw	low STR_9
 13031  00086A  6E20               	movwf	?_putsUSART,c
 13032  00086C  ECD5  F032         	call	_putsUSART	;wreg free
 13033                           
 13034                           ;main.c: 690: }
 13035  000870  EF1B  F00F         	goto	l16372
 13036  000874                     l15514:
 13037                           
 13038                           ; BSR set to: 1
 13039                           ;main.c: 692: else if (cmdbuf == stristr(cmdbuf, "SILENT")) {
 13040  000874  0E01               	movlw	high _cmdbuf
 13041  000876  ECE3  F00F         	call	PL112	;call to abstracted procedure
 13042  00087A  ECFB  F02F         	call	_stristr	;wreg free
 13043  00087E  EC27  F00F         	call	PL2	;call to abstracted procedure
 13044  000882  E104               	bnz	u19885
 13045  000884  0100               	movlb	0	; () banked
 13046  000886  5166               	movf	?_stristr& (0+255),w,b
 13047  000888  0101               	movlb	1	; () banked
 13048  00088A  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13049  00088C                     u19885:
 13050  00088C  E10D               	bnz	l15522
 13051                           
 13052                           ; BSR set to: 1
 13053                           ;main.c: 693: bSilent = 1;
 13054  00088E  0E01               	movlw	1
 13055  000890  6F02               	movwf	_bSilent& (0+255),b
 13056                           
 13057                           ; BSR set to: 1
 13058                           ;main.c: 694: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 13059  000892  0E00               	movlw	0
 13060  000894  EC6A  F035         	call	_ECANSetOperationMode
 13061                           
 13062                           ;main.c: 695: putsUSART((char *) "+OK\r\n");
 13063  000898  0E7F               	movlw	high STR_9
 13064  00089A  6E21               	movwf	?_putsUSART+1,c
 13065  00089C  0E6A               	movlw	low STR_9
 13066  00089E  6E20               	movwf	?_putsUSART,c
 13067  0008A0  ECD5  F032         	call	_putsUSART	;wreg free
 13068                           
 13069                           ;main.c: 696: }
 13070  0008A4  EF1B  F00F         	goto	l16372
 13071  0008A8                     l15522:
 13072                           
 13073                           ; BSR set to: 1
 13074                           ;main.c: 698: else if (cmdbuf == stristr(cmdbuf, "CLOSE")) {
 13075  0008A8  0E01               	movlw	high _cmdbuf
 13076  0008AA  0100               	movlb	0	; () banked
 13077  0008AC  EC0C  F010         	call	PL132	;call to abstracted procedure
 13078  0008B0  ECFB  F02F         	call	_stristr	;wreg free
 13079  0008B4  EC27  F00F         	call	PL2	;call to abstracted procedure
 13080  0008B8  E104               	bnz	u19895
 13081  0008BA  0100               	movlb	0	; () banked
 13082  0008BC  5166               	movf	?_stristr& (0+255),w,b
 13083  0008BE  0101               	movlb	1	; () banked
 13084  0008C0  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13085  0008C2                     u19895:
 13086  0008C2  E10D               	bnz	l15530
 13087                           
 13088                           ; BSR set to: 1
 13089                           ;main.c: 699: bSilent = 1;
 13090  0008C4  0E01               	movlw	1
 13091  0008C6  6F02               	movwf	_bSilent& (0+255),b
 13092                           
 13093                           ; BSR set to: 1
 13094                           ;main.c: 700: ECANSetOperationMode( ECAN_OP_MODE_CONFIG );
 13095  0008C8  0E80               	movlw	128
 13096  0008CA  EC6A  F035         	call	_ECANSetOperationMode
 13097                           
 13098                           ;main.c: 701: putsUSART((char *) "+OK\r\n");
 13099  0008CE  0E7F               	movlw	high STR_9
 13100  0008D0  6E21               	movwf	?_putsUSART+1,c
 13101  0008D2  0E6A               	movlw	low STR_9
 13102  0008D4  6E20               	movwf	?_putsUSART,c
 13103  0008D6  ECD5  F032         	call	_putsUSART	;wreg free
 13104                           
 13105                           ;main.c: 702: }
 13106  0008DA  EF1B  F00F         	goto	l16372
 13107  0008DE                     l15530:
 13108                           
 13109                           ; BSR set to: 1
 13110                           ;main.c: 704: else if (cmdbuf == stristr(cmdbuf, "LOOPBACK")) {
 13111  0008DE  0E01               	movlw	high _cmdbuf
 13112  0008E0  0100               	movlb	0	; () banked
 13113  0008E2  EC04  F010         	call	PL128	;call to abstracted procedure
 13114  0008E6  ECFB  F02F         	call	_stristr	;wreg free
 13115  0008EA  EC27  F00F         	call	PL2	;call to abstracted procedure
 13116  0008EE  E104               	bnz	u19905
 13117  0008F0  0100               	movlb	0	; () banked
 13118  0008F2  5166               	movf	?_stristr& (0+255),w,b
 13119  0008F4  0101               	movlb	1	; () banked
 13120  0008F6  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13121  0008F8                     u19905:
 13122  0008F8  E10C               	bnz	l15538
 13123                           
 13124                           ; BSR set to: 1
 13125                           ;main.c: 705: bSilent = 0;
 13126  0008FA  6B02               	clrf	_bSilent& (0+255),b
 13127                           
 13128                           ; BSR set to: 1
 13129                           ;main.c: 706: ECANSetOperationMode(ECAN_OP_MODE_LOOP);
 13130  0008FC  0E40               	movlw	64
 13131  0008FE  EC6A  F035         	call	_ECANSetOperationMode
 13132                           
 13133                           ;main.c: 707: putsUSART((char *) "+OK\r\n");
 13134  000902  0E7F               	movlw	high STR_9
 13135  000904  6E21               	movwf	?_putsUSART+1,c
 13136  000906  0E6A               	movlw	low STR_9
 13137  000908  6E20               	movwf	?_putsUSART,c
 13138  00090A  ECD5  F032         	call	_putsUSART	;wreg free
 13139                           
 13140                           ;main.c: 708: }
 13141  00090E  EF1B  F00F         	goto	l16372
 13142  000912                     l15538:
 13143                           
 13144                           ; BSR set to: 1
 13145                           ;main.c: 710: else if (cmdbuf == stristr(cmdbuf, "LISTEN")) {
 13146  000912  0E01               	movlw	high _cmdbuf
 13147  000914  0100               	movlb	0	; () banked
 13148  000916  ECFC  F00F         	call	PL124	;call to abstracted procedure
 13149  00091A  ECFB  F02F         	call	_stristr	;wreg free
 13150  00091E  EC27  F00F         	call	PL2	;call to abstracted procedure
 13151  000922  E104               	bnz	u19915
 13152  000924  0100               	movlb	0	; () banked
 13153  000926  5166               	movf	?_stristr& (0+255),w,b
 13154  000928  0101               	movlb	1	; () banked
 13155  00092A  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13156  00092C                     u19915:
 13157  00092C  E10C               	bnz	l15546
 13158                           
 13159                           ; BSR set to: 1
 13160                           ;main.c: 711: bSilent = 0;
 13161  00092E  6B02               	clrf	_bSilent& (0+255),b
 13162                           
 13163                           ; BSR set to: 1
 13164                           ;main.c: 712: ECANSetOperationMode(ECAN_OP_MODE_LISTEN);
 13165  000930  0E60               	movlw	96
 13166  000932  EC6A  F035         	call	_ECANSetOperationMode
 13167                           
 13168                           ;main.c: 713: putsUSART((char *) "+OK\r\n");
 13169  000936  0E7F               	movlw	high STR_9
 13170  000938  6E21               	movwf	?_putsUSART+1,c
 13171  00093A  0E6A               	movlw	low STR_9
 13172  00093C  6E20               	movwf	?_putsUSART,c
 13173  00093E  ECD5  F032         	call	_putsUSART	;wreg free
 13174                           
 13175                           ;main.c: 714: }
 13176  000942  EF1B  F00F         	goto	l16372
 13177  000946                     l15546:
 13178                           
 13179                           ; BSR set to: 1
 13180                           ;main.c: 716: else if (cmdbuf == stristr(cmdbuf, "VERSION")) {
 13181  000946  0E01               	movlw	high _cmdbuf
 13182  000948  0100               	movlb	0	; () banked
 13183  00094A  6F67               	movwf	(?_stristr+1)& (0+255),b
 13184  00094C  0E05               	movlw	low _cmdbuf
 13185  00094E  6F66               	movwf	?_stristr& (0+255),b
 13186  000950  0E7E               	movlw	high STR_18
 13187  000952  6F69               	movwf	(?_stristr+3)& (0+255),b
 13188  000954  0EF8               	movlw	low STR_18
 13189  000956  6F68               	movwf	(?_stristr+2)& (0+255),b
 13190  000958  ECFB  F02F         	call	_stristr	;wreg free
 13191  00095C  EC27  F00F         	call	PL2	;call to abstracted procedure
 13192  000960  E104               	bnz	u19925
 13193  000962  0100               	movlb	0	; () banked
 13194  000964  5166               	movf	?_stristr& (0+255),w,b
 13195  000966  0101               	movlb	1	; () banked
 13196  000968  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13197  00096A                     u19925:
 13198  00096A  E10A               	bnz	l15552
 13199                           
 13200                           ; BSR set to: 1
 13201                           ;main.c: 717: printFirmwareVersion();
 13202  00096C  EC38  F030         	call	_printFirmwareVersion	;wreg free
 13203                           
 13204                           ;main.c: 718: putsUSART((char *) "+OK\r\n");
 13205  000970  0E7F               	movlw	high STR_9
 13206  000972  6E21               	movwf	?_putsUSART+1,c
 13207  000974  0E6A               	movlw	low STR_9
 13208  000976  6E20               	movwf	?_putsUSART,c
 13209  000978  ECD5  F032         	call	_putsUSART	;wreg free
 13210                           
 13211                           ;main.c: 719: }
 13212  00097C  EF1B  F00F         	goto	l16372
 13213  000980                     l15552:
 13214                           
 13215                           ; BSR set to: 1
 13216                           ;main.c: 721: else if (cmdbuf == stristr(cmdbuf, "IFMODE")) {
 13217  000980  0E01               	movlw	high _cmdbuf
 13218  000982  0100               	movlb	0	; () banked
 13219  000984  6F67               	movwf	(?_stristr+1)& (0+255),b
 13220  000986  0E05               	movlw	low _cmdbuf
 13221  000988  6F66               	movwf	?_stristr& (0+255),b
 13222  00098A  0E7F               	movlw	high STR_20
 13223  00098C  6F69               	movwf	(?_stristr+3)& (0+255),b
 13224  00098E  0E33               	movlw	low STR_20
 13225  000990  6F68               	movwf	(?_stristr+2)& (0+255),b
 13226  000992  ECFB  F02F         	call	_stristr	;wreg free
 13227  000996  EC27  F00F         	call	PL2	;call to abstracted procedure
 13228  00099A  E104               	bnz	u19935
 13229  00099C  0100               	movlb	0	; () banked
 13230  00099E  5166               	movf	?_stristr& (0+255),w,b
 13231  0009A0  0101               	movlb	1	; () banked
 13232  0009A2  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13233  0009A4                     u19935:
 13234  0009A4  E161               	bnz	l15588
 13235                           
 13236                           ; BSR set to: 1
 13237                           ;main.c: 722: ECAN_OP_MODE ifmode = (CANCON & ECAN_OP_MODE_BITS);
 13238  0009A6  506F               	movf	3951,w,c	;volatile
 13239  0009A8  0BE0               	andlw	224
 13240  0009AA  0102               	movlb	2	; () banked
 13241  0009AC  6FC9               	movwf	doModeVerbose@ifmode& (0+255),b
 13242                           
 13243                           ; BSR set to: 2
 13244                           ;main.c: 723: if ((ECAN_OP_MODE_NORMAL == ifmode) & !bSilent) {
 13245  0009AE  67C9               	tstfsz	doModeVerbose@ifmode& (0+255),b
 13246  0009B0  D00B               	goto	l15562
 13247                           
 13248                           ; BSR set to: 2
 13249  0009B2  0101               	movlb	1	; () banked
 13250  0009B4  6702               	tstfsz	_bSilent& (0+255),b
 13251  0009B6  D008               	goto	l15562
 13252                           
 13253                           ; BSR set to: 1
 13254                           ;main.c: 724: putsUSART((char *) "+OK - Normal mode\r\n");
 13255  0009B8  0E7D               	movlw	high STR_21
 13256  0009BA  6E21               	movwf	?_putsUSART+1,c
 13257  0009BC  0E0D               	movlw	low STR_21
 13258  0009BE  6E20               	movwf	?_putsUSART,c
 13259  0009C0  ECD5  F032         	call	_putsUSART	;wreg free
 13260                           
 13261                           ;main.c: 725: }
 13262  0009C4  EF1B  F00F         	goto	l16372
 13263  0009C8                     l15562:
 13264                           
 13265                           ;main.c: 726: else if ((ECAN_OP_MODE_NORMAL == ifmode) & bSilent) {
 13266  0009C8  0102               	movlb	2	; () banked
 13267  0009CA  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13268  0009CC  0E01               	movlw	1
 13269  0009CE  A4D8               	btfss	status,2,c
 13270  0009D0  0E00               	movlw	0
 13271  0009D2  0101               	movlb	1	; () banked
 13272  0009D4  1502               	andwf	_bSilent& (0+255),w,b
 13273  0009D6  E008               	bz	l15566
 13274                           
 13275                           ; BSR set to: 1
 13276                           ;main.c: 727: putsUSART((char *) "+OK - Silent mode\r\n");
 13277  0009D8  0E7D               	movlw	high STR_22
 13278  0009DA  6E21               	movwf	?_putsUSART+1,c
 13279  0009DC  0E21               	movlw	low STR_22
 13280  0009DE  6E20               	movwf	?_putsUSART,c
 13281  0009E0  ECD5  F032         	call	_putsUSART	;wreg free
 13282                           
 13283                           ;main.c: 728: }
 13284  0009E4  EF1B  F00F         	goto	l16372
 13285  0009E8                     l15566:
 13286                           
 13287                           ; BSR set to: 1
 13288                           ;main.c: 729: else if (ECAN_OP_MODE_SLEEP == ifmode) {
 13289  0009E8  0102               	movlb	2	; () banked
 13290  0009EA  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13291  0009EC  0A20               	xorlw	32
 13292  0009EE  E108               	bnz	l15570
 13293                           
 13294                           ; BSR set to: 2
 13295                           ;main.c: 730: putsUSART((char *) "+OK - Sleep mode\r\n");
 13296  0009F0  0E7D               	movlw	high STR_23
 13297  0009F2  6E21               	movwf	?_putsUSART+1,c
 13298  0009F4  0E5D               	movlw	low STR_23
 13299  0009F6  6E20               	movwf	?_putsUSART,c
 13300  0009F8  ECD5  F032         	call	_putsUSART	;wreg free
 13301                           
 13302                           ;main.c: 731: }
 13303  0009FC  EF1B  F00F         	goto	l16372
 13304  000A00                     l15570:
 13305                           
 13306                           ; BSR set to: 2
 13307                           ;main.c: 732: else if (ECAN_OP_MODE_LOOP == ifmode) {
 13308  000A00  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13309  000A02  0A40               	xorlw	64
 13310  000A04  E108               	bnz	l15574
 13311                           
 13312                           ; BSR set to: 2
 13313                           ;main.c: 733: putsUSART((char *) "+OK - Loopback mode\r\n");
 13314  000A06  0E7C               	movlw	high STR_24
 13315  000A08  6E21               	movwf	?_putsUSART+1,c
 13316  000A0A  0E4F               	movlw	low STR_24
 13317  000A0C  6E20               	movwf	?_putsUSART,c
 13318  000A0E  ECD5  F032         	call	_putsUSART	;wreg free
 13319                           
 13320                           ;main.c: 734: }
 13321  000A12  EF1B  F00F         	goto	l16372
 13322  000A16                     l15574:
 13323                           
 13324                           ; BSR set to: 2
 13325                           ;main.c: 735: else if (ECAN_OP_MODE_LISTEN == ifmode) {
 13326  000A16  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13327  000A18  0A60               	xorlw	96
 13328  000A1A  E108               	bnz	l15578
 13329                           
 13330                           ; BSR set to: 2
 13331                           ;main.c: 736: putsUSART((char *) "+OK - Listen only mode\r\n");
 13332  000A1C  0E7A               	movlw	high STR_25
 13333  000A1E  6E21               	movwf	?_putsUSART+1,c
 13334  000A20  0EE8               	movlw	low STR_25
 13335  000A22  6E20               	movwf	?_putsUSART,c
 13336  000A24  ECD5  F032         	call	_putsUSART	;wreg free
 13337                           
 13338                           ;main.c: 737: }
 13339  000A28  EF1B  F00F         	goto	l16372
 13340  000A2C                     l15578:
 13341                           
 13342                           ; BSR set to: 2
 13343                           ;main.c: 738: else if (ECAN_OP_MODE_CONFIG == ifmode) {
 13344  000A2C  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13345  000A2E  0A80               	xorlw	128
 13346  000A30  E108               	bnz	l15582
 13347                           
 13348                           ; BSR set to: 2
 13349                           ;main.c: 739: putsUSART((char *) "+OK - Closed mode\r\n");
 13350  000A32  0E7C               	movlw	high STR_26
 13351  000A34  6E21               	movwf	?_putsUSART+1,c
 13352  000A36  0EF9               	movlw	low STR_26
 13353  000A38  6E20               	movwf	?_putsUSART,c
 13354  000A3A  ECD5  F032         	call	_putsUSART	;wreg free
 13355                           
 13356                           ;main.c: 740: }
 13357  000A3E  EF1B  F00F         	goto	l16372
 13358  000A42                     l15582:
 13359                           
 13360                           ; BSR set to: 2
 13361                           ;main.c: 741: else if (ECAN_OP_MODE_BITS == ifmode) {
 13362  000A42  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13363  000A44  0AE0               	xorlw	224
 13364  000A46  E108               	bnz	l15586
 13365                           
 13366                           ; BSR set to: 2
 13367                           ;main.c: 742: putsUSART((char *) "+OK - Bits mode\r\n");
 13368  000A48  0E7D               	movlw	high STR_27
 13369  000A4A  6E21               	movwf	?_putsUSART+1,c
 13370  000A4C  0E70               	movlw	low STR_27
 13371  000A4E  6E20               	movwf	?_putsUSART,c
 13372  000A50  ECD5  F032         	call	_putsUSART	;wreg free
 13373                           
 13374                           ;main.c: 743: }
 13375  000A54  EF1B  F00F         	goto	l16372
 13376  000A58                     l15586:
 13377                           
 13378                           ; BSR set to: 2
 13379                           ;main.c: 744: else {
 13380                           ;main.c: 745: putsUSART((char *) "-ERROR - Unknown mode\r\n");
 13381  000A58  0E7B               	movlw	high STR_28
 13382  000A5A  6E21               	movwf	?_putsUSART+1,c
 13383  000A5C  0E7B               	movlw	low STR_28
 13384  000A5E  6E20               	movwf	?_putsUSART,c
 13385  000A60  ECD5  F032         	call	_putsUSART	;wreg free
 13386  000A64  EF1B  F00F         	goto	l16372
 13387  000A68                     l15588:
 13388                           
 13389                           ; BSR set to: 1
 13390                           ;main.c: 750: else if (cmdbuf == stristr(cmdbuf, "TX")) {
 13391  000A68  0E01               	movlw	high _cmdbuf
 13392  000A6A  0100               	movlb	0	; () banked
 13393  000A6C  6F67               	movwf	(?_stristr+1)& (0+255),b
 13394  000A6E  0E05               	movlw	low _cmdbuf
 13395  000A70  6F66               	movwf	?_stristr& (0+255),b
 13396  000A72  0E7F               	movlw	high STR_29
 13397  000A74  6F69               	movwf	(?_stristr+3)& (0+255),b
 13398  000A76  0EEA               	movlw	low STR_29
 13399  000A78  6F68               	movwf	(?_stristr+2)& (0+255),b
 13400  000A7A  ECFB  F02F         	call	_stristr	;wreg free
 13401  000A7E  EC27  F00F         	call	PL2	;call to abstracted procedure
 13402  000A82  E104               	bnz	u20035
 13403  000A84  0100               	movlb	0	; () banked
 13404  000A86  5166               	movf	?_stristr& (0+255),w,b
 13405  000A88  0101               	movlb	1	; () banked
 13406  000A8A  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13407  000A8C                     u20035:
 13408  000A8C  E001 D0D9          	bnz	l15642
 13409                           
 13410                           ; BSR set to: 1
 13411                           ;main.c: 752: char *p = strtok(cmdbuf, ",");
 13412  000A90  EC88  F00F         	call	PL40	;call to abstracted procedure
 13413  000A94  ECEF  F02E         	call	_strtok	;wreg free
 13414  000A98  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13415  000A9C  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;main.c: 755: vscpPriority = 3;
 13419  000AA0  0E03               	movlw	3
 13420  000AA2  0101               	movlb	1	; () banked
 13421  000AA4  6FB0               	movwf	_vscpPriority& (0+255),b
 13422                           
 13423                           ; BSR set to: 1
 13424                           ;main.c: 756: if ((0) != p) {
 13425  000AA6  0102               	movlb	2	; () banked
 13426  000AA8  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13427  000AAA  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13428  000AAC  E009               	bz	l15598
 13429                           
 13430                           ; BSR set to: 2
 13431                           ;main.c: 757: vscpPriority = atoi(p);
 13432  000AAE  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13433  000AB2  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13434  000AB6  ECD1  F026         	call	_atoi	;wreg free
 13435  000ABA  5162               	movf	?_atoi& (0+255),w,b
 13436  000ABC  0101               	movlb	1	; () banked
 13437  000ABE  6FB0               	movwf	_vscpPriority& (0+255),b
 13438  000AC0                     l15598:
 13439                           
 13440                           ;main.c: 758: }
 13441                           ;main.c: 761: vscpClass = 0;
 13442  000AC0  0101               	movlb	1	; () banked
 13443  000AC2  6BAD               	clrf	_vscpClass& (0+255),b
 13444  000AC4  6BAE               	clrf	(_vscpClass+1)& (0+255),b
 13445                           
 13446                           ; BSR set to: 1
 13447                           ;main.c: 762: if ((0) != (p = strtok((0), ","))) {
 13448  000AC6  EC31  F00F         	call	PL4	;call to abstracted procedure
 13449  000ACA  ECEF  F02E         	call	_strtok	;wreg free
 13450  000ACE  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13451  000AD2  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13452  000AD6  0102               	movlb	2	; () banked
 13453  000AD8  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13454  000ADA  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13455  000ADC  E00A               	bz	l15604
 13456                           
 13457                           ; BSR set to: 2
 13458                           ;main.c: 763: vscpClass = atoi(p);
 13459  000ADE  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13460  000AE2  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13461  000AE6  ECD1  F026         	call	_atoi	;wreg free
 13462  000AEA  C062  F1AD         	movff	?_atoi,_vscpClass
 13463  000AEE  C063  F1AE         	movff	?_atoi+1,_vscpClass+1
 13464  000AF2                     l15604:
 13465                           
 13466                           ;main.c: 764: }
 13467                           ;main.c: 767: vscpType = 0;
 13468  000AF2  0101               	movlb	1	; () banked
 13469  000AF4  6BB2               	clrf	_vscpType& (0+255),b
 13470                           
 13471                           ; BSR set to: 1
 13472                           ;main.c: 768: if ((0) != (p = strtok((0), ","))) {
 13473  000AF6  EC31  F00F         	call	PL4	;call to abstracted procedure
 13474  000AFA  ECEF  F02E         	call	_strtok	;wreg free
 13475  000AFE  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13476  000B02  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13477  000B06  0102               	movlb	2	; () banked
 13478  000B08  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13479  000B0A  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13480  000B0C  E009               	bz	l15610
 13481                           
 13482                           ; BSR set to: 2
 13483                           ;main.c: 769: vscpType = atoi(p);
 13484  000B0E  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13485  000B12  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13486  000B16  ECD1  F026         	call	_atoi	;wreg free
 13487  000B1A  5162               	movf	?_atoi& (0+255),w,b
 13488  000B1C  0101               	movlb	1	; () banked
 13489  000B1E  6FB2               	movwf	_vscpType& (0+255),b
 13490  000B20                     l15610:
 13491                           
 13492                           ;main.c: 770: }
 13493                           ;main.c: 773: vscpNodeId = 0;
 13494  000B20  0101               	movlb	1	; () banked
 13495  000B22  6BAF               	clrf	_vscpNodeId& (0+255),b
 13496                           
 13497                           ; BSR set to: 1
 13498                           ;main.c: 774: if ((0) != (p = strtok((0), ","))) {
 13499  000B24  EC31  F00F         	call	PL4	;call to abstracted procedure
 13500  000B28  ECEF  F02E         	call	_strtok	;wreg free
 13501  000B2C  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13502  000B30  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13503  000B34  0102               	movlb	2	; () banked
 13504  000B36  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13505  000B38  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13506  000B3A  E009               	bz	l15616
 13507                           
 13508                           ; BSR set to: 2
 13509                           ;main.c: 775: vscpNodeId = atoi(p);
 13510  000B3C  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13511  000B40  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13512  000B44  ECD1  F026         	call	_atoi	;wreg free
 13513  000B48  5162               	movf	?_atoi& (0+255),w,b
 13514  000B4A  0101               	movlb	1	; () banked
 13515  000B4C  6FAF               	movwf	_vscpNodeId& (0+255),b
 13516  000B4E                     l15616:
 13517                           
 13518                           ;main.c: 776: }
 13519                           ;main.c: 779: vscpSize = 0;
 13520  000B4E  0101               	movlb	1	; () banked
 13521  000B50  6BB1               	clrf	_vscpSize& (0+255),b
 13522                           
 13523                           ; BSR set to: 1
 13524                           ;main.c: 780: if ((0) != (p = strtok((0), ","))) {
 13525  000B52  EC31  F00F         	call	PL4	;call to abstracted procedure
 13526  000B56  ECEF  F02E         	call	_strtok	;wreg free
 13527  000B5A  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13528  000B5E  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13529  000B62  0102               	movlb	2	; () banked
 13530  000B64  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13531  000B66  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13532  000B68  E009               	bz	l15622
 13533                           
 13534                           ; BSR set to: 2
 13535                           ;main.c: 781: vscpSize = atoi(p);
 13536  000B6A  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13537  000B6E  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13538  000B72  ECD1  F026         	call	_atoi	;wreg free
 13539  000B76  5162               	movf	?_atoi& (0+255),w,b
 13540  000B78  0101               	movlb	1	; () banked
 13541  000B7A  6FB1               	movwf	_vscpSize& (0+255),b
 13542  000B7C                     l15622:
 13543                           
 13544                           ;main.c: 782: }
 13545                           ;main.c: 784: memset( vscpData, 0, 8 );
 13546  000B7C  0101               	movlb	1	; () banked
 13547  000B7E  0E01               	movlw	high _vscpData
 13548  000B80  6E20               	movwf	?_memset+1,c
 13549  000B82  0EA5               	movlw	low _vscpData
 13550  000B84  6E1F               	movwf	?_memset,c
 13551  000B86  6A22               	clrf	?_memset+3,c
 13552  000B88  6A21               	clrf	?_memset+2,c
 13553  000B8A  6A24               	clrf	?_memset+5,c
 13554  000B8C  0E08               	movlw	8
 13555  000B8E  6E23               	movwf	?_memset+4,c
 13556  000B90  EC04  F035         	call	_memset	;wreg free
 13557                           
 13558                           ;main.c: 785: for (i = 0; i < vscpSize; i++) {
 13559  000B94  0102               	movlb	2	; () banked
 13560  000B96  6BB9               	clrf	doModeVerbose@i& (0+255),b
 13561  000B98  D01D               	goto	l15632
 13562  000B9A                     l15626:
 13563                           
 13564                           ; BSR set to: 2
 13565                           ;main.c: 786: if ((0) != (p = strtok((0), ","))) {
 13566  000B9A  EC31  F00F         	call	PL4	;call to abstracted procedure
 13567  000B9E  ECEF  F02E         	call	_strtok	;wreg free
 13568  000BA2  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13569  000BA6  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13570  000BAA  0102               	movlb	2	; () banked
 13571  000BAC  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13572  000BAE  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13573  000BB0  E016               	bz	l15634
 13574                           
 13575                           ; BSR set to: 2
 13576                           ;main.c: 787: vscpData[ i ] = atoi(p);
 13577  000BB2  0EA5               	movlw	low _vscpData
 13578  000BB4  25B9               	addwf	doModeVerbose@i& (0+255),w,b
 13579  000BB6  6ED9               	movwf	fsr2l,c
 13580  000BB8  6ADA               	clrf	fsr2h,c
 13581  000BBA  0101               	movlb	1	; () banked
 13582  000BBC  0E01               	movlw	high _vscpData
 13583  000BBE  22DA               	addwfc	fsr2h,f,c
 13584  000BC0  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13585  000BC4  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13586  000BC8  ECD1  F026         	call	_atoi	;wreg free
 13587  000BCC  5162               	movf	?_atoi& (0+255),w,b
 13588  000BCE  6EDF               	movwf	indf2,c
 13589                           
 13590                           ; BSR set to: 0
 13591                           
 13592                           ;main.c: 788: }
 13593  000BD0  0102               	movlb	2	; () banked
 13594  000BD2  2BB9               	incf	doModeVerbose@i& (0+255),f,b
 13595  000BD4                     l15632:
 13596                           
 13597                           ; BSR set to: 2
 13598  000BD4  0101               	movlb	1	; () banked
 13599  000BD6  51B1               	movf	_vscpSize& (0+255),w,b
 13600  000BD8  0102               	movlb	2	; () banked
 13601  000BDA  5DB9               	subwf	doModeVerbose@i& (0+255),w,b
 13602  000BDC  E3DE               	bnc	l15626
 13603  000BDE                     l15634:
 13604                           
 13605                           ; BSR set to: 2
 13606                           ;main.c: 791: }
 13607                           ;main.c: 792: }
 13608                           ;main.c: 794: if ( sendVSCPFrame(vscpClass,
 13609                           ;main.c: 795: vscpType,
 13610                           ;main.c: 796: vscpNodeId,
 13611                           ;main.c: 797: vscpPriority,
 13612                           ;main.c: 798: vscpSize,
 13613                           ;main.c: 799: vscpData ) ) {
 13614  000BDE  C1AD  F08F         	movff	_vscpClass,?_sendVSCPFrame
 13615  000BE2  C1AE  F090         	movff	_vscpClass+1,?_sendVSCPFrame+1
 13616  000BE6  C1B2  F091         	movff	_vscpType,?_sendVSCPFrame+2
 13617  000BEA  C1AF  F092         	movff	_vscpNodeId,?_sendVSCPFrame+3
 13618  000BEE  C1B0  F093         	movff	_vscpPriority,?_sendVSCPFrame+4
 13619  000BF2  C1B1  F094         	movff	_vscpSize,?_sendVSCPFrame+5
 13620  000BF6  0E01               	movlw	high _vscpData
 13621  000BF8  0100               	movlb	0	; () banked
 13622  000BFA  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 13623  000BFC  0EA5               	movlw	low _vscpData
 13624  000BFE  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 13625  000C00  EC07  F02C         	call	_sendVSCPFrame	;wreg free
 13626  000C04  0900               	iorlw	0
 13627  000C06  E015               	bz	l15640
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;main.c: 801: cntTxFrames++;
 13631  000C08  2BDA               	incf	_cntTxFrames& (0+255),f,b
 13632  000C0A  0E00               	movlw	0
 13633  000C0C  23DB               	addwfc	(_cntTxFrames+1)& (0+255),f,b
 13634  000C0E  23DC               	addwfc	(_cntTxFrames+2)& (0+255),f,b
 13635  000C10  23DD               	addwfc	(_cntTxFrames+3)& (0+255),f,b
 13636                           
 13637                           ;main.c: 802: cntTxBytes += vscpSize;
 13638  000C12  0101               	movlb	1	; () banked
 13639  000C14  51B1               	movf	_vscpSize& (0+255),w,b
 13640  000C16  0100               	movlb	0	; () banked
 13641  000C18  27D6               	addwf	_cntTxBytes& (0+255),f,b
 13642  000C1A  0E00               	movlw	0
 13643  000C1C  23D7               	addwfc	(_cntTxBytes+1)& (0+255),f,b
 13644  000C1E  23D8               	addwfc	(_cntTxBytes+2)& (0+255),f,b
 13645  000C20  23D9               	addwfc	(_cntTxBytes+3)& (0+255),f,b
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;main.c: 803: putsUSART((char *) "+OK\r\n");
 13649  000C22  0E7F               	movlw	high STR_9
 13650  000C24  6E21               	movwf	?_putsUSART+1,c
 13651  000C26  0E6A               	movlw	low STR_9
 13652  000C28  6E20               	movwf	?_putsUSART,c
 13653  000C2A  ECD5  F032         	call	_putsUSART	;wreg free
 13654                           
 13655                           ;main.c: 804: }
 13656  000C2E  EF1B  F00F         	goto	l16372
 13657  000C32                     l15640:
 13658                           
 13659                           ; BSR set to: 0
 13660                           ;main.c: 805: else {
 13661                           ;main.c: 806: putsUSART((char *) "-ERROR - Failed to send event.\r\n");
 13662  000C32  0E79               	movlw	high STR_37
 13663  000C34  6E21               	movwf	?_putsUSART+1,c
 13664  000C36  0E4B               	movlw	low STR_37
 13665  000C38  6E20               	movwf	?_putsUSART,c
 13666  000C3A  ECD5  F032         	call	_putsUSART	;wreg free
 13667  000C3E  EF1B  F00F         	goto	l16372
 13668  000C42                     l15642:
 13669                           
 13670                           ; BSR set to: 1
 13671                           ;main.c: 810: else if (cmdbuf == stristr(cmdbuf, "RX")) {
 13672  000C42  0E01               	movlw	high _cmdbuf
 13673  000C44  0100               	movlb	0	; () banked
 13674  000C46  6F67               	movwf	(?_stristr+1)& (0+255),b
 13675  000C48  0E05               	movlw	low _cmdbuf
 13676  000C4A  6F66               	movwf	?_stristr& (0+255),b
 13677  000C4C  0E7F               	movlw	high STR_38
 13678  000C4E  6F69               	movwf	(?_stristr+3)& (0+255),b
 13679  000C50  0EE7               	movlw	low STR_38
 13680  000C52  6F68               	movwf	(?_stristr+2)& (0+255),b
 13681  000C54  ECFB  F02F         	call	_stristr	;wreg free
 13682  000C58  EC27  F00F         	call	PL2	;call to abstracted procedure
 13683  000C5C  E104               	bnz	u20125
 13684  000C5E  0100               	movlb	0	; () banked
 13685  000C60  5166               	movf	?_stristr& (0+255),w,b
 13686  000C62  0101               	movlb	1	; () banked
 13687  000C64  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13688  000C66                     u20125:
 13689  000C66  E114               	bnz	l15650
 13690                           
 13691                           ; BSR set to: 1
 13692                           ;main.c: 811: if (receivePrintEventVerbose()) {
 13693  000C68  EC7C  F017         	call	_receivePrintEventVerbose	;wreg free
 13694  000C6C  0900               	iorlw	0
 13695  000C6E  E008               	bz	l15648
 13696                           
 13697                           ;main.c: 812: putsUSART((char *) "+OK\r\n");
 13698  000C70  0E7F               	movlw	high STR_9
 13699  000C72  6E21               	movwf	?_putsUSART+1,c
 13700  000C74  0E6A               	movlw	low STR_9
 13701  000C76  6E20               	movwf	?_putsUSART,c
 13702  000C78  ECD5  F032         	call	_putsUSART	;wreg free
 13703                           
 13704                           ;main.c: 813: }
 13705  000C7C  EF1B  F00F         	goto	l16372
 13706  000C80                     l15648:
 13707                           
 13708                           ;main.c: 814: else {
 13709                           ;main.c: 815: putsUSART((char *) "+OK - no events\r\n");
 13710  000C80  0E7D               	movlw	high STR_40
 13711  000C82  6E21               	movwf	?_putsUSART+1,c
 13712  000C84  0E82               	movlw	low STR_40
 13713  000C86  6E20               	movwf	?_putsUSART,c
 13714  000C88  ECD5  F032         	call	_putsUSART	;wreg free
 13715  000C8C  EF1B  F00F         	goto	l16372
 13716  000C90                     l15650:
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;main.c: 819: else if (cmdbuf == stristr(cmdbuf, "STAT")) {
 13720  000C90  0E01               	movlw	high _cmdbuf
 13721  000C92  0100               	movlb	0	; () banked
 13722  000C94  6F67               	movwf	(?_stristr+1)& (0+255),b
 13723  000C96  0E05               	movlw	low _cmdbuf
 13724  000C98  6F66               	movwf	?_stristr& (0+255),b
 13725  000C9A  0E7F               	movlw	high STR_41
 13726  000C9C  6F69               	movwf	(?_stristr+3)& (0+255),b
 13727  000C9E  0EBB               	movlw	low STR_41
 13728  000CA0  6F68               	movwf	(?_stristr+2)& (0+255),b
 13729  000CA2  ECFB  F02F         	call	_stristr	;wreg free
 13730  000CA6  EC27  F00F         	call	PL2	;call to abstracted procedure
 13731  000CAA  E104               	bnz	u20145
 13732  000CAC  0100               	movlb	0	; () banked
 13733  000CAE  5166               	movf	?_stristr& (0+255),w,b
 13734  000CB0  0101               	movlb	1	; () banked
 13735  000CB2  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13736  000CB4                     u20145:
 13737  000CB4  E10A               	bnz	l15656
 13738                           
 13739                           ; BSR set to: 1
 13740                           ;main.c: 820: printStatistics();
 13741  000CB6  ECFA  F020         	call	_printStatistics	;wreg free
 13742                           
 13743                           ;main.c: 821: putsUSART((char *) "+OK\r\n");
 13744  000CBA  0E7F               	movlw	high STR_9
 13745  000CBC  6E21               	movwf	?_putsUSART+1,c
 13746  000CBE  0E6A               	movlw	low STR_9
 13747  000CC0  6E20               	movwf	?_putsUSART,c
 13748  000CC2  ECD5  F032         	call	_putsUSART	;wreg free
 13749                           
 13750                           ;main.c: 822: }
 13751  000CC6  EF1B  F00F         	goto	l16372
 13752  000CCA                     l15656:
 13753                           
 13754                           ; BSR set to: 1
 13755                           ;main.c: 824: else if (cmdbuf == stristr(cmdbuf, "ERR")) {
 13756  000CCA  0E01               	movlw	high _cmdbuf
 13757  000CCC  0100               	movlb	0	; () banked
 13758  000CCE  6F67               	movwf	(?_stristr+1)& (0+255),b
 13759  000CD0  0E05               	movlw	low _cmdbuf
 13760  000CD2  6F66               	movwf	?_stristr& (0+255),b
 13761  000CD4  0E7F               	movlw	high STR_43
 13762  000CD6  6F69               	movwf	(?_stristr+3)& (0+255),b
 13763  000CD8  0ED5               	movlw	low STR_43
 13764  000CDA  6F68               	movwf	(?_stristr+2)& (0+255),b
 13765  000CDC  ECFB  F02F         	call	_stristr	;wreg free
 13766  000CE0  EC27  F00F         	call	PL2	;call to abstracted procedure
 13767  000CE4  E104               	bnz	u20155
 13768  000CE6  0100               	movlb	0	; () banked
 13769  000CE8  5166               	movf	?_stristr& (0+255),w,b
 13770  000CEA  0101               	movlb	1	; () banked
 13771  000CEC  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13772  000CEE                     u20155:
 13773  000CEE  E10A               	bnz	l15662
 13774                           
 13775                           ; BSR set to: 1
 13776                           ;main.c: 825: printErrors();
 13777  000CF0  EC2B  F019         	call	_printErrors	;wreg free
 13778                           
 13779                           ;main.c: 826: putsUSART((char *) "+OK\r\n");
 13780  000CF4  0E7F               	movlw	high STR_9
 13781  000CF6  6E21               	movwf	?_putsUSART+1,c
 13782  000CF8  0E6A               	movlw	low STR_9
 13783  000CFA  6E20               	movwf	?_putsUSART,c
 13784  000CFC  ECD5  F032         	call	_putsUSART	;wreg free
 13785                           
 13786                           ;main.c: 827: }
 13787  000D00  EF1B  F00F         	goto	l16372
 13788  000D04                     l15662:
 13789                           
 13790                           ; BSR set to: 1
 13791                           ;main.c: 829: else if (cmdbuf == stristr(cmdbuf, "HELP")) {
 13792  000D04  0E01               	movlw	high _cmdbuf
 13793  000D06  0100               	movlb	0	; () banked
 13794  000D08  6F67               	movwf	(?_stristr+1)& (0+255),b
 13795  000D0A  0E05               	movlw	low _cmdbuf
 13796  000D0C  6F66               	movwf	?_stristr& (0+255),b
 13797  000D0E  0E7F               	movlw	high STR_45
 13798  000D10  6F69               	movwf	(?_stristr+3)& (0+255),b
 13799  000D12  0EB6               	movlw	low STR_45
 13800  000D14  6F68               	movwf	(?_stristr+2)& (0+255),b
 13801  000D16  ECFB  F02F         	call	_stristr	;wreg free
 13802  000D1A  EC27  F00F         	call	PL2	;call to abstracted procedure
 13803  000D1E  E104               	bnz	u20165
 13804  000D20  0100               	movlb	0	; () banked
 13805  000D22  5166               	movf	?_stristr& (0+255),w,b
 13806  000D24  0101               	movlb	1	; () banked
 13807  000D26  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13808  000D28                     u20165:
 13809  000D28  E10A               	bnz	l15666
 13810                           
 13811                           ; BSR set to: 1
 13812                           ;main.c: 830: printHelp();
 13813  000D2A  EC8C  F022         	call	_printHelp	;wreg free
 13814                           
 13815                           ;main.c: 831: putsUSART((char *) "+OK\r\n");
 13816  000D2E  0E7F               	movlw	high STR_9
 13817  000D30  6E21               	movwf	?_putsUSART+1,c
 13818  000D32  0E6A               	movlw	low STR_9
 13819  000D34  6E20               	movwf	?_putsUSART,c
 13820  000D36  ECD5  F032         	call	_putsUSART	;wreg free
 13821                           
 13822                           ;main.c: 832: }
 13823  000D3A  EF1B  F00F         	goto	l16372
 13824  000D3E                     l15666:
 13825                           
 13826                           ; BSR set to: 1
 13827                           ;main.c: 834: else if (cmdbuf == stristr(cmdbuf, "FIND")) {
 13828  000D3E  0E01               	movlw	high _cmdbuf
 13829  000D40  0100               	movlb	0	; () banked
 13830  000D42  6F67               	movwf	(?_stristr+1)& (0+255),b
 13831  000D44  0E05               	movlw	low _cmdbuf
 13832  000D46  6F66               	movwf	?_stristr& (0+255),b
 13833  000D48  0E7F               	movlw	high STR_47
 13834  000D4A  6F69               	movwf	(?_stristr+3)& (0+255),b
 13835  000D4C  0E93               	movlw	low STR_47
 13836  000D4E  6F68               	movwf	(?_stristr+2)& (0+255),b
 13837  000D50  ECFB  F02F         	call	_stristr	;wreg free
 13838  000D54  EC27  F00F         	call	PL2	;call to abstracted procedure
 13839  000D58  E104               	bnz	u20175
 13840  000D5A  0100               	movlb	0	; () banked
 13841  000D5C  5166               	movf	?_stristr& (0+255),w,b
 13842  000D5E  0101               	movlb	1	; () banked
 13843  000D60  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13844  000D62                     u20175:
 13845  000D62  E10A               	bnz	l15672
 13846                           
 13847                           ; BSR set to: 1
 13848                           ;main.c: 835: findNodes();
 13849  000D64  EC03  F024         	call	_findNodes	;wreg free
 13850                           
 13851                           ;main.c: 836: putsUSART((char *) "+OK\r\n");
 13852  000D68  0E7F               	movlw	high STR_9
 13853  000D6A  6E21               	movwf	?_putsUSART+1,c
 13854  000D6C  0E6A               	movlw	low STR_9
 13855  000D6E  6E20               	movwf	?_putsUSART,c
 13856  000D70  ECD5  F032         	call	_putsUSART	;wreg free
 13857                           
 13858                           ;main.c: 837: }
 13859  000D74  EF1B  F00F         	goto	l16372
 13860  000D78                     l15672:
 13861                           
 13862                           ; BSR set to: 1
 13863                           ;main.c: 840: else if (cmdbuf == stristr(cmdbuf, "RREG")) {
 13864  000D78  0E01               	movlw	high _cmdbuf
 13865  000D7A  0100               	movlb	0	; () banked
 13866  000D7C  6F67               	movwf	(?_stristr+1)& (0+255),b
 13867  000D7E  0E05               	movlw	low _cmdbuf
 13868  000D80  6F66               	movwf	?_stristr& (0+255),b
 13869  000D82  0E7F               	movlw	high STR_49
 13870  000D84  6F69               	movwf	(?_stristr+3)& (0+255),b
 13871  000D86  0E98               	movlw	low STR_49
 13872  000D88  6F68               	movwf	(?_stristr+2)& (0+255),b
 13873  000D8A  ECFB  F02F         	call	_stristr	;wreg free
 13874  000D8E  EC27  F00F         	call	PL2	;call to abstracted procedure
 13875  000D92  E104               	bnz	u20185
 13876  000D94  0100               	movlb	0	; () banked
 13877  000D96  5166               	movf	?_stristr& (0+255),w,b
 13878  000D98  0101               	movlb	1	; () banked
 13879  000D9A  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 13880  000D9C                     u20185:
 13881  000D9C  E001 D213          	bnz	l15840
 13882                           
 13883                           ; BSR set to: 1
 13884                           ;main.c: 842: uint8_t i;
 13885                           ;main.c: 843: uint8_t nodeid;
 13886                           ;main.c: 844: uint8_t page = 0;
 13887  000DA0  0102               	movlb	2	; () banked
 13888  000DA2  6BBF               	clrf	doModeVerbose@page& (0+255),b
 13889                           
 13890                           ; BSR set to: 2
 13891                           ;main.c: 845: uint8_t reg;
 13892                           ;main.c: 846: uint8_t value;
 13893                           ;main.c: 847: uint8_t count = 1;
 13894  000DA4  0E01               	movlw	1
 13895  000DA6  6FBB               	movwf	doModeVerbose@count& (0+255),b
 13896                           
 13897                           ; BSR set to: 2
 13898                           ;main.c: 849: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 13899  000DA8  506F               	movf	3951,w,c	;volatile
 13900  000DAA  0BE0               	andlw	224
 13901  000DAC  E012               	bz	l15688
 13902                           
 13903                           ; BSR set to: 2
 13904                           ;main.c: 850: putsUSART( (char *)"-ERROR - Command only works if interface is open.\r\n"
      +                           );
 13905  000DAE  0E73               	movlw	high STR_50
 13906  000DB0  6E21               	movwf	?_putsUSART+1,c
 13907  000DB2  0E13               	movlw	low STR_50
 13908  000DB4  6E20               	movwf	?_putsUSART,c
 13909  000DB6  ECD5  F032         	call	_putsUSART	;wreg free
 13910  000DBA                     l15682:
 13911                           
 13912                           ;main.c: 851: memset( cmdbuf, 0, sizeof( cmdbuf ) );
 13913  000DBA  0101               	movlb	1	; () banked
 13914  000DBC  0E01               	movlw	high _cmdbuf
 13915  000DBE  6E20               	movwf	?_memset+1,c
 13916  000DC0  0E05               	movlw	low _cmdbuf
 13917  000DC2  ECE8  F02E         	call	PL30	;call to abstracted procedure
 13918  000DC6  EC04  F035         	call	_memset	;wreg free
 13919                           
 13920                           ;main.c: 852: pos = 0;
 13921  000DCA  0101               	movlb	1	; () banked
 13922  000DCC  6B03               	clrf	_pos& (0+255),b
 13923  000DCE  EF26  F00F         	goto	l588
 13924  000DD2                     l15688:
 13925                           
 13926                           ; BSR set to: 2
 13927                           ;main.c: 854: }
 13928                           ;main.c: 856: strcpy(cmdbuf, cmdbuf + 5);
 13929  000DD2  0101               	movlb	1	; () banked
 13930  000DD4  EC40  F00F         	call	PL8	;call to abstracted procedure
 13931  000DD8  ECED  F034         	call	_strcpy	;wreg free
 13932                           
 13933                           ; BSR set to: 1
 13934                           ;main.c: 857: char *p = strtok(cmdbuf, " ");
 13935  000DDC  0E01               	movlw	high _cmdbuf
 13936  000DDE  EC92  F00F         	call	PL50	;call to abstracted procedure
 13937  000DE2  ECEF  F02E         	call	_strtok	;wreg free
 13938  000DE6  C064  F2C5         	movff	?_strtok,doModeVerbose@p_1300
 13939  000DEA  C065  F2C6         	movff	?_strtok+1,doModeVerbose@p_1300+1
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;main.c: 858: if ((0) != p) {
 13943  000DEE  0102               	movlb	2	; () banked
 13944  000DF0  51C6               	movf	(doModeVerbose@p_1300+1)& (0+255),w,b
 13945  000DF2  11C5               	iorwf	doModeVerbose@p_1300& (0+255),w,b
 13946  000DF4  E00A               	bz	l15696
 13947                           
 13948                           ; BSR set to: 2
 13949                           ;main.c: 859: nodeid = atoi(p);
 13950  000DF6  C2C5  F062         	movff	doModeVerbose@p_1300,?_atoi
 13951  000DFA  C2C6  F063         	movff	doModeVerbose@p_1300+1,?_atoi+1
 13952  000DFE  ECD1  F026         	call	_atoi	;wreg free
 13953  000E02  5162               	movf	?_atoi& (0+255),w,b
 13954  000E04  0102               	movlb	2	; () banked
 13955  000E06  6FBC               	movwf	doModeVerbose@nodeid& (0+255),b
 13956                           
 13957                           ;main.c: 860: }
 13958  000E08  D007               	goto	l15704
 13959  000E0A                     l15696:
 13960                           
 13961                           ; BSR set to: 2
 13962                           ;main.c: 861: else {
 13963                           ;main.c: 862: putsUSART((char *) "-ERROR - Needs nodeid\r\n");
 13964  000E0A  0E7B               	movlw	high STR_52
 13965  000E0C  6E21               	movwf	?_putsUSART+1,c
 13966  000E0E  0E63               	movlw	low STR_52
 13967  000E10  6E20               	movwf	?_putsUSART,c
 13968  000E12  ECD5  F032         	call	_putsUSART	;wreg free
 13969  000E16  D7D1               	goto	l15682
 13970  000E18                     l15704:
 13971                           
 13972                           ; BSR set to: 2
 13973                           ;main.c: 866: }
 13974                           ;main.c: 868: if ((0) != (p = strtok((0), " "))) {
 13975  000E18  EC80  F00F         	call	PL38	;call to abstracted procedure
 13976  000E1C  ECEF  F02E         	call	_strtok	;wreg free
 13977  000E20  C064  F2C5         	movff	?_strtok,doModeVerbose@p_1300
 13978  000E24  C065  F2C6         	movff	?_strtok+1,doModeVerbose@p_1300+1
 13979  000E28  0102               	movlb	2	; () banked
 13980  000E2A  51C6               	movf	(doModeVerbose@p_1300+1)& (0+255),w,b
 13981  000E2C  11C5               	iorwf	doModeVerbose@p_1300& (0+255),w,b
 13982  000E2E  E033               	bz	l15712
 13983                           
 13984                           ; BSR set to: 2
 13985                           ;main.c: 870: char *preg;
 13986                           ;main.c: 871: if (preg = strchr(p, ':')) {
 13987  000E30  C2C5  F01F         	movff	doModeVerbose@p_1300,?_strchr
 13988  000E34  C2C6  F020         	movff	doModeVerbose@p_1300+1,?_strchr+1
 13989  000E38  6A22               	clrf	?_strchr+3,c
 13990  000E3A  0E3A               	movlw	58
 13991  000E3C  6E21               	movwf	?_strchr+2,c
 13992  000E3E  EC4E  F032         	call	_strchr	;wreg free
 13993  000E42  C01F  F28C         	movff	?_strchr,doModeVerbose@preg
 13994  000E46  C020  F28D         	movff	?_strchr+1,doModeVerbose@preg+1
 13995  000E4A  0102               	movlb	2	; () banked
 13996  000E4C  518D               	movf	(doModeVerbose@preg+1)& (0+255),w,b
 13997  000E4E  118C               	iorwf	doModeVerbose@preg& (0+255),w,b
 13998  000E50  E018               	bz	l15710
 13999                           
 14000                           ; BSR set to: 2
 14001                           ;main.c: 872: page = atoi(p);
 14002  000E52  C2C5  F062         	movff	doModeVerbose@p_1300,?_atoi
 14003  000E56  C2C6  F063         	movff	doModeVerbose@p_1300+1,?_atoi+1
 14004  000E5A  ECD1  F026         	call	_atoi	;wreg free
 14005  000E5E  5162               	movf	?_atoi& (0+255),w,b
 14006  000E60  0102               	movlb	2	; () banked
 14007  000E62  6FBF               	movwf	doModeVerbose@page& (0+255),b
 14008                           
 14009                           ;main.c: 873: reg = atoi(preg + 1);
 14010  000E64  298C               	incf	doModeVerbose@preg& (0+255),w,b
 14011  000E66  0101               	movlb	1	; () banked
 14012  000E68  6FB3               	movwf	??_doModeVerbose& (0+255),b
 14013  000E6A  0E00               	movlw	0
 14014  000E6C  0102               	movlb	2	; () banked
 14015  000E6E  218D               	addwfc	(doModeVerbose@preg+1)& (0+255),w,b
 14016  000E70  0101               	movlb	1	; () banked
 14017  000E72  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 14018  000E74  C1B3  F062         	movff	??_doModeVerbose,?_atoi
 14019  000E78  C1B4  F063         	movff	??_doModeVerbose+1,?_atoi+1
 14020  000E7C  ECD1  F026         	call	_atoi	;wreg free
 14021  000E80  D006               	goto	L7
 14022  000E82                     l15710:
 14023                           
 14024                           ; BSR set to: 2
 14025                           ;main.c: 875: else {
 14026                           ;main.c: 876: reg = atoi(p);
 14027  000E82  C2C5  F062         	movff	doModeVerbose@p_1300,?_atoi
 14028  000E86  C2C6  F063         	movff	doModeVerbose@p_1300+1,?_atoi+1
 14029  000E8A  ECD1  F026         	call	_atoi	;wreg free
 14030  000E8E                     L7:
 14031  000E8E  5162               	movf	?_atoi& (0+255),w,b
 14032  000E90  0102               	movlb	2	; () banked
 14033  000E92  6FC0               	movwf	doModeVerbose@reg& (0+255),b
 14034  000E94  D007               	goto	l15720
 14035  000E96                     l15712:
 14036                           
 14037                           ; BSR set to: 2
 14038                           ;main.c: 880: else {
 14039                           ;main.c: 881: putsUSART((char *) "-ERROR - Needs [page:]register\r\n");
 14040  000E96  0E79               	movlw	high STR_54
 14041  000E98  6E21               	movwf	?_putsUSART+1,c
 14042  000E9A  0E8D               	movlw	low STR_54
 14043  000E9C  6E20               	movwf	?_putsUSART,c
 14044  000E9E  ECD5  F032         	call	_putsUSART	;wreg free
 14045  000EA2  D78B               	goto	l15682
 14046  000EA4                     l15720:
 14047                           
 14048                           ; BSR set to: 2
 14049                           ;main.c: 885: }
 14050                           ;main.c: 888: if ((0) != (p = strtok((0), " "))) {
 14051  000EA4  EC80  F00F         	call	PL38	;call to abstracted procedure
 14052  000EA8  ECEF  F02E         	call	_strtok	;wreg free
 14053  000EAC  C064  F2C5         	movff	?_strtok,doModeVerbose@p_1300
 14054  000EB0  C065  F2C6         	movff	?_strtok+1,doModeVerbose@p_1300+1
 14055  000EB4  0102               	movlb	2	; () banked
 14056  000EB6  51C6               	movf	(doModeVerbose@p_1300+1)& (0+255),w,b
 14057  000EB8  11C5               	iorwf	doModeVerbose@p_1300& (0+255),w,b
 14058  000EBA  E00D               	bz	l595
 14059                           
 14060                           ; BSR set to: 2
 14061                           ;main.c: 889: count = atoi(p);
 14062  000EBC  C2C5  F062         	movff	doModeVerbose@p_1300,?_atoi
 14063  000EC0  C2C6  F063         	movff	doModeVerbose@p_1300+1,?_atoi+1
 14064  000EC4  ECD1  F026         	call	_atoi	;wreg free
 14065  000EC8  5162               	movf	?_atoi& (0+255),w,b
 14066  000ECA  0102               	movlb	2	; () banked
 14067  000ECC  6FBB               	movwf	doModeVerbose@count& (0+255),b
 14068                           
 14069                           ; BSR set to: 2
 14070                           ;main.c: 890: if (0 == count) count = 1;
 14071  000ECE  67BB               	tstfsz	doModeVerbose@count& (0+255),b
 14072  000ED0  D002               	goto	l595
 14073                           
 14074                           ; BSR set to: 2
 14075  000ED2  0E01               	movlw	1
 14076  000ED4  6FBB               	movwf	doModeVerbose@count& (0+255),b
 14077  000ED6                     l595:
 14078                           
 14079                           ; BSR set to: 2
 14080                           ;main.c: 891: }
 14081                           ;main.c: 893: BOOL rv = 1;
 14082  000ED6  0E01               	movlw	1
 14083  000ED8  6FAF               	movwf	doModeVerbose@rv& (0+255),b
 14084                           
 14085                           ; BSR set to: 2
 14086                           ;main.c: 894: for ( i = 0; i < count; i++ ) {
 14087  000EDA  6BC1               	clrf	doModeVerbose@i_1293& (0+255),b
 14088  000EDC  D15E               	goto	l15832
 14089  000EDE                     l15730:
 14090                           
 14091                           ; BSR set to: 2
 14092                           ;main.c: 896: if ( readRegisterExtended( nodeid,
 14093                           ;main.c: 897: page,
 14094                           ;main.c: 898: (reg + i) & 0xff,
 14095                           ;main.c: 899: rwtimeout,
 14096                           ;main.c: 900: &value ) ) {
 14097  000EDE  0100               	movlb	0	; () banked
 14098  000EE0  C2BF  F0AF         	movff	doModeVerbose@page,?_readRegisterExtended
 14099  000EE4  6BB0               	clrf	(?_readRegisterExtended+1)& (0+255),b
 14100  000EE6  0102               	movlb	2	; () banked
 14101  000EE8  51C0               	movf	doModeVerbose@reg& (0+255),w,b
 14102  000EEA  25C1               	addwf	doModeVerbose@i_1293& (0+255),w,b
 14103  000EEC  0100               	movlb	0	; () banked
 14104  000EEE  6FB1               	movwf	(?_readRegisterExtended+2)& (0+255),b
 14105  000EF0  C104  F0B2         	movff	_rwtimeout,?_readRegisterExtended+3
 14106  000EF4  6BB3               	clrf	(?_readRegisterExtended+4)& (0+255),b
 14107  000EF6  0E02               	movlw	high doModeVerbose@value
 14108  000EF8  6FB5               	movwf	(?_readRegisterExtended+6)& (0+255),b
 14109  000EFA  0EC4               	movlw	low doModeVerbose@value
 14110  000EFC  6FB4               	movwf	(?_readRegisterExtended+5)& (0+255),b
 14111  000EFE  0102               	movlb	2	; () banked
 14112  000F00  51BC               	movf	doModeVerbose@nodeid& (0+255),w,b
 14113  000F02  EC55  F027         	call	_readRegisterExtended
 14114  000F06  0900               	iorlw	0
 14115  000F08  E101 D0C7          	bz	l599
 14116                           
 14117                           ;main.c: 901: putsUSART((char *) "+OK - nodeid=");
 14118  000F0C  0E7E               	movlw	high STR_56
 14119  000F0E  6E21               	movwf	?_putsUSART+1,c
 14120  000F10  0E18               	movlw	low STR_56
 14121  000F12  6E20               	movwf	?_putsUSART,c
 14122  000F14  ECD5  F032         	call	_putsUSART	;wreg free
 14123                           
 14124                           ;main.c: 902: sprintf(wrkbuf, bHex ? "0x%02X - " : "%d - ", nodeid);
 14125  000F18  0101               	movlb	1	; () banked
 14126  000F1A  6700               	tstfsz	_bHex& (0+255),b
 14127  000F1C  D005               	goto	l15738
 14128                           
 14129                           ; BSR set to: 1
 14130  000F1E  0E7F               	movlw	high STR_58
 14131  000F20  0102               	movlb	2	; () banked
 14132  000F22  6F9C               	movwf	(_doModeVerbose$1312+1)& (0+255),b
 14133  000F24  0E70               	movlw	low STR_58
 14134  000F26  D004               	goto	L8
 14135  000F28                     l15738:
 14136                           
 14137                           ; BSR set to: 1
 14138  000F28  0E7E               	movlw	high STR_57
 14139  000F2A  0102               	movlb	2	; () banked
 14140  000F2C  6F9C               	movwf	(_doModeVerbose$1312+1)& (0+255),b
 14141  000F2E  0E6A               	movlw	low STR_57
 14142  000F30                     L8:
 14143  000F30  6F9B               	movwf	_doModeVerbose$1312& (0+255),b
 14144                           
 14145                           ; BSR set to: 2
 14146  000F32  0E01               	movlw	high _wrkbuf
 14147  000F34  0100               	movlb	0	; () banked
 14148  000F36  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14149  000F38  0E55               	movlw	low _wrkbuf
 14150  000F3A  6F6D               	movwf	?_sprintf& (0+255),b
 14151  000F3C  C29B  F06F         	movff	_doModeVerbose$1312,?_sprintf+2
 14152  000F40  C29C  F070         	movff	_doModeVerbose$1312+1,?_sprintf+3
 14153  000F44  C2BC  F071         	movff	doModeVerbose@nodeid,?_sprintf+4
 14154  000F48  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14155  000F4A  EC14  F010         	call	_sprintf	;wreg free
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;main.c: 903: putsUSART(wrkbuf);
 14159  000F4E  0101               	movlb	1	; () banked
 14160  000F50  0E01               	movlw	high _wrkbuf
 14161  000F52  6E21               	movwf	?_putsUSART+1,c
 14162  000F54  0E55               	movlw	low _wrkbuf
 14163  000F56  6E20               	movwf	?_putsUSART,c
 14164  000F58  ECD5  F032         	call	_putsUSART	;wreg free
 14165                           
 14166                           ;main.c: 904: putsUSART((char *) "Value for reg ");
 14167  000F5C  0E7D               	movlw	high STR_59
 14168  000F5E  6E21               	movwf	?_putsUSART+1,c
 14169  000F60  0EFB               	movlw	low STR_59
 14170  000F62  6E20               	movwf	?_putsUSART,c
 14171  000F64  ECD5  F032         	call	_putsUSART	;wreg free
 14172                           
 14173                           ;main.c: 905: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", page);
 14174  000F68  0101               	movlb	1	; () banked
 14175  000F6A  6700               	tstfsz	_bHex& (0+255),b
 14176  000F6C  D005               	goto	l15750
 14177                           
 14178                           ; BSR set to: 1
 14179  000F6E  0E7F               	movlw	high STR_61
 14180  000F70  0102               	movlb	2	; () banked
 14181  000F72  6F9E               	movwf	(_doModeVerbose$1317+1)& (0+255),b
 14182  000F74  0EED               	movlw	low STR_61
 14183  000F76  D004               	goto	L9
 14184  000F78                     l15750:
 14185                           
 14186                           ; BSR set to: 1
 14187  000F78  0E7F               	movlw	high STR_60
 14188  000F7A  0102               	movlb	2	; () banked
 14189  000F7C  6F9E               	movwf	(_doModeVerbose$1317+1)& (0+255),b
 14190  000F7E  0E4F               	movlw	low STR_60
 14191  000F80                     L9:
 14192  000F80  6F9D               	movwf	_doModeVerbose$1317& (0+255),b
 14193                           
 14194                           ; BSR set to: 2
 14195  000F82  0E01               	movlw	high _wrkbuf
 14196  000F84  0100               	movlb	0	; () banked
 14197  000F86  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14198  000F88  0E55               	movlw	low _wrkbuf
 14199  000F8A  6F6D               	movwf	?_sprintf& (0+255),b
 14200  000F8C  C29D  F06F         	movff	_doModeVerbose$1317,?_sprintf+2
 14201  000F90  C29E  F070         	movff	_doModeVerbose$1317+1,?_sprintf+3
 14202  000F94  C2BF  F071         	movff	doModeVerbose@page,?_sprintf+4
 14203  000F98  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14204  000F9A  EC14  F010         	call	_sprintf	;wreg free
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;main.c: 906: putsUSART(wrkbuf);
 14208  000F9E  0101               	movlb	1	; () banked
 14209  000FA0  0E01               	movlw	high _wrkbuf
 14210  000FA2  6E21               	movwf	?_putsUSART+1,c
 14211  000FA4  0E55               	movlw	low _wrkbuf
 14212  000FA6  6E20               	movwf	?_putsUSART,c
 14213  000FA8  ECD5  F032         	call	_putsUSART	;wreg free
 14214                           
 14215                           ;main.c: 907: WriteUSART(':');
 14216  000FAC  0E3A               	movlw	58
 14217  000FAE  EC81  F035         	call	_WriteUSART
 14218  000FB2                     l608:
 14219  000FB2  A2AC               	btfss	4012,1,c	;volatile
 14220  000FB4  D7FE               	goto	l608
 14221                           
 14222                           ;main.c: 909: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", (reg + i) & 0xff);
 14223  000FB6  0101               	movlb	1	; () banked
 14224  000FB8  6700               	tstfsz	_bHex& (0+255),b
 14225  000FBA  D005               	goto	l15760
 14226                           
 14227                           ; BSR set to: 1
 14228  000FBC  0E7F               	movlw	high STR_61
 14229  000FBE  0102               	movlb	2	; () banked
 14230  000FC0  6FA0               	movwf	(_doModeVerbose$1321+1)& (0+255),b
 14231  000FC2  0EED               	movlw	low STR_61
 14232  000FC4  D004               	goto	L10
 14233  000FC6                     l15760:
 14234                           
 14235                           ; BSR set to: 1
 14236  000FC6  0E7F               	movlw	high STR_60
 14237  000FC8  0102               	movlb	2	; () banked
 14238  000FCA  6FA0               	movwf	(_doModeVerbose$1321+1)& (0+255),b
 14239  000FCC  0E4F               	movlw	low STR_60
 14240  000FCE                     L10:
 14241  000FCE  6F9F               	movwf	_doModeVerbose$1321& (0+255),b
 14242                           
 14243                           ; BSR set to: 2
 14244  000FD0  0E01               	movlw	high _wrkbuf
 14245  000FD2  0100               	movlb	0	; () banked
 14246  000FD4  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14247  000FD6  0E55               	movlw	low _wrkbuf
 14248  000FD8  6F6D               	movwf	?_sprintf& (0+255),b
 14249  000FDA  C29F  F06F         	movff	_doModeVerbose$1321,?_sprintf+2
 14250  000FDE  C2A0  F070         	movff	_doModeVerbose$1321+1,?_sprintf+3
 14251  000FE2  EC9B  F00F         	call	PL56	;call to abstracted procedure
 14252  000FE6  EC14  F010         	call	_sprintf	;wreg free
 14253                           
 14254                           ; BSR set to: 0
 14255                           ;main.c: 910: putsUSART(wrkbuf);
 14256  000FEA  0101               	movlb	1	; () banked
 14257  000FEC  0E01               	movlw	high _wrkbuf
 14258  000FEE  6E21               	movwf	?_putsUSART+1,c
 14259  000FF0  0E55               	movlw	low _wrkbuf
 14260  000FF2  6E20               	movwf	?_putsUSART,c
 14261  000FF4  ECD5  F032         	call	_putsUSART	;wreg free
 14262                           
 14263                           ;main.c: 911: putsUSART((char *) " = ");
 14264  000FF8  0E7E               	movlw	high (STR_289+4)
 14265  000FFA  6E21               	movwf	?_putsUSART+1,c
 14266  000FFC  0EDC               	movlw	low (STR_289+4)
 14267  000FFE  6E20               	movwf	?_putsUSART,c
 14268  001000  ECD5  F032         	call	_putsUSART	;wreg free
 14269                           
 14270                           ;main.c: 912: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", value);
 14271  001004  0101               	movlb	1	; () banked
 14272  001006  6700               	tstfsz	_bHex& (0+255),b
 14273  001008  D005               	goto	l15772
 14274                           
 14275                           ; BSR set to: 1
 14276  00100A  0E7F               	movlw	high STR_61
 14277  00100C  0102               	movlb	2	; () banked
 14278  00100E  6FA2               	movwf	(_doModeVerbose$1326+1)& (0+255),b
 14279  001010  0EED               	movlw	low STR_61
 14280  001012  D004               	goto	L11
 14281  001014                     l15772:
 14282                           
 14283                           ; BSR set to: 1
 14284  001014  0E7F               	movlw	high STR_60
 14285  001016  0102               	movlb	2	; () banked
 14286  001018  6FA2               	movwf	(_doModeVerbose$1326+1)& (0+255),b
 14287  00101A  0E4F               	movlw	low STR_60
 14288  00101C                     L11:
 14289  00101C  6FA1               	movwf	_doModeVerbose$1326& (0+255),b
 14290                           
 14291                           ; BSR set to: 2
 14292  00101E  0E01               	movlw	high _wrkbuf
 14293  001020  0100               	movlb	0	; () banked
 14294  001022  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14295  001024  0E55               	movlw	low _wrkbuf
 14296  001026  6F6D               	movwf	?_sprintf& (0+255),b
 14297  001028  C2A1  F06F         	movff	_doModeVerbose$1326,?_sprintf+2
 14298  00102C  C2A2  F070         	movff	_doModeVerbose$1326+1,?_sprintf+3
 14299  001030  C2C4  F071         	movff	doModeVerbose@value,?_sprintf+4
 14300  001034  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14301  001036  EC14  F010         	call	_sprintf	;wreg free
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;main.c: 913: putsUSART(wrkbuf);
 14305  00103A  0101               	movlb	1	; () banked
 14306  00103C  0E01               	movlw	high _wrkbuf
 14307  00103E  6E21               	movwf	?_putsUSART+1,c
 14308  001040  0E55               	movlw	low _wrkbuf
 14309  001042  6E20               	movwf	?_putsUSART,c
 14310  001044  ECD5  F032         	call	_putsUSART	;wreg free
 14311  001048                     l619:
 14312  001048  A2AC               	btfss	4012,1,c	;volatile
 14313  00104A  D7FE               	goto	l619
 14314                           
 14315                           ;main.c: 915: putsUSART((char *)"\t\'");
 14316  00104C  0E7F               	movlw	high STR_67
 14317  00104E  6E21               	movwf	?_putsUSART+1,c
 14318  001050  0EE1               	movlw	low STR_67
 14319  001052  6E20               	movwf	?_putsUSART,c
 14320  001054  ECD5  F032         	call	_putsUSART	;wreg free
 14321                           
 14322                           ;main.c: 916: if ((value > 32) && (value < 127)) {
 14323  001058  0E20               	movlw	32
 14324  00105A  0102               	movlb	2	; () banked
 14325  00105C  65C4               	cpfsgt	doModeVerbose@value& (0+255),b
 14326  00105E  D007               	goto	l15786
 14327                           
 14328                           ; BSR set to: 2
 14329  001060  0E7F               	movlw	127
 14330  001062  61C4               	cpfslt	doModeVerbose@value& (0+255),b
 14331  001064  D004               	goto	l15786
 14332                           
 14333                           ; BSR set to: 2
 14334                           ;main.c: 917: WriteUSART(value);
 14335  001066  51C4               	movf	doModeVerbose@value& (0+255),w,b
 14336  001068  EC81  F035         	call	_WriteUSART
 14337                           
 14338                           ;main.c: 918: }
 14339  00106C  D003               	goto	l624
 14340  00106E                     l15786:
 14341                           
 14342                           ; BSR set to: 2
 14343                           ;main.c: 919: else {
 14344                           ;main.c: 920: WriteUSART('.');
 14345  00106E  0E2E               	movlw	46
 14346  001070  EC81  F035         	call	_WriteUSART
 14347  001074                     l624:
 14348  001074  A2AC               	btfss	4012,1,c	;volatile
 14349  001076  D7FE               	goto	l624
 14350                           
 14351                           ;main.c: 923: putsUSART((char *)"\' \t");
 14352  001078  0E7F               	movlw	high STR_68
 14353  00107A  6E21               	movwf	?_putsUSART+1,c
 14354  00107C  0EC5               	movlw	low STR_68
 14355  00107E  6E20               	movwf	?_putsUSART,c
 14356  001080  ECD5  F032         	call	_putsUSART	;wreg free
 14357                           
 14358                           ;main.c: 924: printBinary(value);
 14359  001084  0102               	movlb	2	; () banked
 14360  001086  51C4               	movf	doModeVerbose@value& (0+255),w,b
 14361  001088  EC24  F033         	call	_printBinary
 14362                           
 14363                           ;main.c: 925: putsUSART((char *) "\r\n");
 14364  00108C  0E72               	movlw	high (STR_241+51)
 14365  00108E  6E21               	movwf	?_putsUSART+1,c
 14366  001090  0EDA               	movlw	low (STR_241+51)
 14367  001092  6E20               	movwf	?_putsUSART,c
 14368  001094  ECD5  F032         	call	_putsUSART	;wreg free
 14369                           
 14370                           ;main.c: 926: }
 14371  001098  D07E               	goto	l15830
 14372  00109A                     l599:
 14373                           
 14374                           ;main.c: 927: else {
 14375                           ;main.c: 928: rv = 0;
 14376  00109A  0102               	movlb	2	; () banked
 14377  00109C  6BAF               	clrf	doModeVerbose@rv& (0+255),b
 14378                           
 14379                           ; BSR set to: 2
 14380                           ;main.c: 929: putsUSART((char *) "-ERROR - nodeid=");
 14381  00109E  0E7D               	movlw	high STR_70
 14382  0010A0  6E21               	movwf	?_putsUSART+1,c
 14383  0010A2  0EEA               	movlw	low STR_70
 14384  0010A4  6E20               	movwf	?_putsUSART,c
 14385  0010A6  ECD5  F032         	call	_putsUSART	;wreg free
 14386                           
 14387                           ;main.c: 930: sprintf(wrkbuf, bHex ? "0x%02X - " : "%d - ", nodeid);
 14388  0010AA  0101               	movlb	1	; () banked
 14389  0010AC  6700               	tstfsz	_bHex& (0+255),b
 14390  0010AE  D005               	goto	l15800
 14391                           
 14392                           ; BSR set to: 1
 14393  0010B0  0E7F               	movlw	high STR_58
 14394  0010B2  0102               	movlb	2	; () banked
 14395  0010B4  6FA4               	movwf	(_doModeVerbose$1334+1)& (0+255),b
 14396  0010B6  0E70               	movlw	low STR_58
 14397  0010B8  D004               	goto	L12
 14398  0010BA                     l15800:
 14399                           
 14400                           ; BSR set to: 1
 14401  0010BA  0E7E               	movlw	high STR_57
 14402  0010BC  0102               	movlb	2	; () banked
 14403  0010BE  6FA4               	movwf	(_doModeVerbose$1334+1)& (0+255),b
 14404  0010C0  0E6A               	movlw	low STR_57
 14405  0010C2                     L12:
 14406  0010C2  6FA3               	movwf	_doModeVerbose$1334& (0+255),b
 14407                           
 14408                           ; BSR set to: 2
 14409  0010C4  0E01               	movlw	high _wrkbuf
 14410  0010C6  0100               	movlb	0	; () banked
 14411  0010C8  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14412  0010CA  0E55               	movlw	low _wrkbuf
 14413  0010CC  6F6D               	movwf	?_sprintf& (0+255),b
 14414  0010CE  C2A3  F06F         	movff	_doModeVerbose$1334,?_sprintf+2
 14415  0010D2  C2A4  F070         	movff	_doModeVerbose$1334+1,?_sprintf+3
 14416  0010D6  C2BC  F071         	movff	doModeVerbose@nodeid,?_sprintf+4
 14417  0010DA  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14418  0010DC  EC14  F010         	call	_sprintf	;wreg free
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;main.c: 931: putsUSART(wrkbuf);
 14422  0010E0  0101               	movlb	1	; () banked
 14423  0010E2  0E01               	movlw	high _wrkbuf
 14424  0010E4  6E21               	movwf	?_putsUSART+1,c
 14425  0010E6  0E55               	movlw	low _wrkbuf
 14426  0010E8  6E20               	movwf	?_putsUSART,c
 14427  0010EA  ECD5  F032         	call	_putsUSART	;wreg free
 14428                           
 14429                           ;main.c: 932: putsUSART((char *) "Unable to read register ");
 14430  0010EE  0E7B               	movlw	high STR_73
 14431  0010F0  6E21               	movwf	?_putsUSART+1,c
 14432  0010F2  0E1A               	movlw	low STR_73
 14433  0010F4  6E20               	movwf	?_putsUSART,c
 14434  0010F6  ECD5  F032         	call	_putsUSART	;wreg free
 14435  0010FA                     l632:
 14436  0010FA  A2AC               	btfss	4012,1,c	;volatile
 14437  0010FC  D7FE               	goto	l632
 14438                           
 14439                           ;main.c: 934: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", page);
 14440  0010FE  0101               	movlb	1	; () banked
 14441  001100  6700               	tstfsz	_bHex& (0+255),b
 14442  001102  D005               	goto	l15810
 14443                           
 14444                           ; BSR set to: 1
 14445  001104  0E7F               	movlw	high STR_61
 14446  001106  0102               	movlb	2	; () banked
 14447  001108  6FA6               	movwf	(_doModeVerbose$1339+1)& (0+255),b
 14448  00110A  0EED               	movlw	low STR_61
 14449  00110C  D004               	goto	L13
 14450  00110E                     l15810:
 14451                           
 14452                           ; BSR set to: 1
 14453  00110E  0E7F               	movlw	high STR_60
 14454  001110  0102               	movlb	2	; () banked
 14455  001112  6FA6               	movwf	(_doModeVerbose$1339+1)& (0+255),b
 14456  001114  0E4F               	movlw	low STR_60
 14457  001116                     L13:
 14458  001116  6FA5               	movwf	_doModeVerbose$1339& (0+255),b
 14459                           
 14460                           ; BSR set to: 2
 14461  001118  0E01               	movlw	high _wrkbuf
 14462  00111A  0100               	movlb	0	; () banked
 14463  00111C  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14464  00111E  0E55               	movlw	low _wrkbuf
 14465  001120  6F6D               	movwf	?_sprintf& (0+255),b
 14466  001122  C2A5  F06F         	movff	_doModeVerbose$1339,?_sprintf+2
 14467  001126  C2A6  F070         	movff	_doModeVerbose$1339+1,?_sprintf+3
 14468  00112A  C2BF  F071         	movff	doModeVerbose@page,?_sprintf+4
 14469  00112E  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14470  001130  EC14  F010         	call	_sprintf	;wreg free
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;main.c: 935: putsUSART(wrkbuf);
 14474  001134  0101               	movlb	1	; () banked
 14475  001136  0E01               	movlw	high _wrkbuf
 14476  001138  6E21               	movwf	?_putsUSART+1,c
 14477  00113A  0E55               	movlw	low _wrkbuf
 14478  00113C  6E20               	movwf	?_putsUSART,c
 14479  00113E  ECD5  F032         	call	_putsUSART	;wreg free
 14480                           
 14481                           ;main.c: 936: WriteUSART(':');
 14482  001142  0E3A               	movlw	58
 14483  001144  EC81  F035         	call	_WriteUSART
 14484                           
 14485                           ;main.c: 937: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", (reg + i) & 0xff);
 14486  001148  0101               	movlb	1	; () banked
 14487  00114A  6700               	tstfsz	_bHex& (0+255),b
 14488  00114C  D005               	goto	l15822
 14489                           
 14490                           ; BSR set to: 1
 14491  00114E  0E7F               	movlw	high STR_61
 14492  001150  0102               	movlb	2	; () banked
 14493  001152  6FA8               	movwf	(_doModeVerbose$1343+1)& (0+255),b
 14494  001154  0EED               	movlw	low STR_61
 14495  001156  D004               	goto	L14
 14496  001158                     l15822:
 14497                           
 14498                           ; BSR set to: 1
 14499  001158  0E7F               	movlw	high STR_60
 14500  00115A  0102               	movlb	2	; () banked
 14501  00115C  6FA8               	movwf	(_doModeVerbose$1343+1)& (0+255),b
 14502  00115E  0E4F               	movlw	low STR_60
 14503  001160                     L14:
 14504  001160  6FA7               	movwf	_doModeVerbose$1343& (0+255),b
 14505                           
 14506                           ; BSR set to: 2
 14507  001162  0E01               	movlw	high _wrkbuf
 14508  001164  0100               	movlb	0	; () banked
 14509  001166  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14510  001168  0E55               	movlw	low _wrkbuf
 14511  00116A  6F6D               	movwf	?_sprintf& (0+255),b
 14512  00116C  C2A7  F06F         	movff	_doModeVerbose$1343,?_sprintf+2
 14513  001170  C2A8  F070         	movff	_doModeVerbose$1343+1,?_sprintf+3
 14514  001174  EC9B  F00F         	call	PL56	;call to abstracted procedure
 14515  001178  EC14  F010         	call	_sprintf	;wreg free
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;main.c: 938: putsUSART(wrkbuf);
 14519  00117C  0101               	movlb	1	; () banked
 14520  00117E  0E01               	movlw	high _wrkbuf
 14521  001180  6E21               	movwf	?_putsUSART+1,c
 14522  001182  0E55               	movlw	low _wrkbuf
 14523  001184  6E20               	movwf	?_putsUSART,c
 14524  001186  ECD5  F032         	call	_putsUSART	;wreg free
 14525                           
 14526                           ;main.c: 940: putsUSART((char *) "\r\n");
 14527  00118A  0E72               	movlw	high (STR_241+51)
 14528  00118C  6E21               	movwf	?_putsUSART+1,c
 14529  00118E  0EDA               	movlw	low (STR_241+51)
 14530  001190  6E20               	movwf	?_putsUSART,c
 14531  001192  ECD5  F032         	call	_putsUSART	;wreg free
 14532  001196                     l15830:
 14533  001196  0102               	movlb	2	; () banked
 14534  001198  2BC1               	incf	doModeVerbose@i_1293& (0+255),f,b
 14535  00119A                     l15832:
 14536                           
 14537                           ; BSR set to: 2
 14538  00119A  51BB               	movf	doModeVerbose@count& (0+255),w,b
 14539  00119C  5DC1               	subwf	doModeVerbose@i_1293& (0+255),w,b
 14540  00119E  E201 D69E          	bnc	l15730
 14541                           
 14542                           ; BSR set to: 2
 14543                           ;main.c: 941: }
 14544                           ;main.c: 942: }
 14545                           ;main.c: 944: if (rv) {
 14546  0011A2  51AF               	movf	doModeVerbose@rv& (0+255),w,b
 14547  0011A4  E008               	bz	l15838
 14548                           
 14549                           ; BSR set to: 2
 14550                           ;main.c: 945: putsUSART((char *) "+OK\r\n");
 14551  0011A6  0E7F               	movlw	high STR_9
 14552  0011A8  6E21               	movwf	?_putsUSART+1,c
 14553  0011AA  0E6A               	movlw	low STR_9
 14554  0011AC  6E20               	movwf	?_putsUSART,c
 14555  0011AE  ECD5  F032         	call	_putsUSART	;wreg free
 14556                           
 14557                           ;main.c: 946: }
 14558  0011B2  EF1B  F00F         	goto	l16372
 14559  0011B6                     l15838:
 14560                           
 14561                           ; BSR set to: 2
 14562                           ;main.c: 947: else {
 14563                           ;main.c: 948: putsUSART((char *) "-ERROR - One or more register(s) could not be read.\r\
      +                          n");
 14564  0011B6  0E72               	movlw	high STR_80
 14565  0011B8  6E21               	movwf	?_putsUSART+1,c
 14566  0011BA  0EDD               	movlw	low STR_80
 14567  0011BC  6E20               	movwf	?_putsUSART,c
 14568  0011BE  ECD5  F032         	call	_putsUSART	;wreg free
 14569  0011C2  EF1B  F00F         	goto	l16372
 14570  0011C6                     l15840:
 14571                           
 14572                           ; BSR set to: 1
 14573                           ;main.c: 954: else if (cmdbuf == stristr(cmdbuf, "WREG")) {
 14574  0011C6  0E01               	movlw	high _cmdbuf
 14575  0011C8  0100               	movlb	0	; () banked
 14576  0011CA  6F67               	movwf	(?_stristr+1)& (0+255),b
 14577  0011CC  0E05               	movlw	low _cmdbuf
 14578  0011CE  6F66               	movwf	?_stristr& (0+255),b
 14579  0011D0  0E7F               	movlw	high STR_81
 14580  0011D2  6F69               	movwf	(?_stristr+3)& (0+255),b
 14581  0011D4  0E9D               	movlw	low STR_81
 14582  0011D6  6F68               	movwf	(?_stristr+2)& (0+255),b
 14583  0011D8  ECFB  F02F         	call	_stristr	;wreg free
 14584  0011DC  EC27  F00F         	call	PL2	;call to abstracted procedure
 14585  0011E0  E104               	bnz	u20415
 14586  0011E2  0100               	movlb	0	; () banked
 14587  0011E4  5166               	movf	?_stristr& (0+255),w,b
 14588  0011E6  0101               	movlb	1	; () banked
 14589  0011E8  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 14590  0011EA                     u20415:
 14591  0011EA  E001 D0FE          	bnz	l15922
 14592                           
 14593                           ; BSR set to: 1
 14594                           ;main.c: 956: uint8_t nodeid;
 14595                           ;main.c: 957: uint8_t page = 0;
 14596  0011EE  0102               	movlb	2	; () banked
 14597  0011F0  6BB0               	clrf	doModeVerbose@page_1349& (0+255),b
 14598                           
 14599                           ; BSR set to: 2
 14600                           ;main.c: 958: uint8_t reg;
 14601                           ;main.c: 959: uint8_t value;
 14602                           ;main.c: 961: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 14603  0011F2  506F               	movf	3951,w,c	;volatile
 14604  0011F4  0BE0               	andlw	224
 14605  0011F6  E007               	bz	l15854
 14606                           
 14607                           ; BSR set to: 2
 14608                           ;main.c: 962: putsUSART( (char *)"-ERROR - Command only works if interface is open.\r\n"
      +                           );
 14609  0011F8  0E73               	movlw	high STR_50
 14610  0011FA  6E21               	movwf	?_putsUSART+1,c
 14611  0011FC  0E13               	movlw	low STR_50
 14612  0011FE  6E20               	movwf	?_putsUSART,c
 14613  001200  ECD5  F032         	call	_putsUSART	;wreg free
 14614  001204  D5DA               	goto	l15682
 14615  001206                     l15854:
 14616                           
 14617                           ; BSR set to: 2
 14618                           ;main.c: 966: }
 14619                           ;main.c: 968: strcpy(cmdbuf, cmdbuf + 5);
 14620  001206  0101               	movlb	1	; () banked
 14621  001208  EC40  F00F         	call	PL8	;call to abstracted procedure
 14622  00120C  ECED  F034         	call	_strcpy	;wreg free
 14623                           
 14624                           ; BSR set to: 1
 14625                           ;main.c: 969: char *p = strtok(cmdbuf, " ");
 14626  001210  0E01               	movlw	high _cmdbuf
 14627  001212  EC92  F00F         	call	PL50	;call to abstracted procedure
 14628  001216  ECEF  F02E         	call	_strtok	;wreg free
 14629  00121A  C064  F2C7         	movff	?_strtok,doModeVerbose@p_1353
 14630  00121E  C065  F2C8         	movff	?_strtok+1,doModeVerbose@p_1353+1
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;main.c: 970: if ((0) != p) {
 14634  001222  0102               	movlb	2	; () banked
 14635  001224  51C8               	movf	(doModeVerbose@p_1353+1)& (0+255),w,b
 14636  001226  11C7               	iorwf	doModeVerbose@p_1353& (0+255),w,b
 14637  001228  E00A               	bz	l15862
 14638                           
 14639                           ; BSR set to: 2
 14640                           ;main.c: 971: nodeid = atoi(p);
 14641  00122A  C2C7  F062         	movff	doModeVerbose@p_1353,?_atoi
 14642  00122E  C2C8  F063         	movff	doModeVerbose@p_1353+1,?_atoi+1
 14643  001232  ECD1  F026         	call	_atoi	;wreg free
 14644  001236  5162               	movf	?_atoi& (0+255),w,b
 14645  001238  0102               	movlb	2	; () banked
 14646  00123A  6FBD               	movwf	doModeVerbose@nodeid_1348& (0+255),b
 14647                           
 14648                           ;main.c: 972: }
 14649  00123C  D007               	goto	l15870
 14650  00123E                     l15862:
 14651                           
 14652                           ; BSR set to: 2
 14653                           ;main.c: 973: else {
 14654                           ;main.c: 974: putsUSART((char *) "-ERROR - Needs nodeid\r\n");
 14655  00123E  0E7B               	movlw	high STR_52
 14656  001240  6E21               	movwf	?_putsUSART+1,c
 14657  001242  0E63               	movlw	low STR_52
 14658  001244  6E20               	movwf	?_putsUSART,c
 14659  001246  ECD5  F032         	call	_putsUSART	;wreg free
 14660  00124A  D5B7               	goto	l15682
 14661  00124C                     l15870:
 14662                           
 14663                           ; BSR set to: 2
 14664                           ;main.c: 978: }
 14665                           ;main.c: 980: if ( (0) != ( p = strtok((0), " ") ) ) {
 14666  00124C  EC80  F00F         	call	PL38	;call to abstracted procedure
 14667  001250  ECEF  F02E         	call	_strtok	;wreg free
 14668  001254  C064  F2C7         	movff	?_strtok,doModeVerbose@p_1353
 14669  001258  C065  F2C8         	movff	?_strtok+1,doModeVerbose@p_1353+1
 14670  00125C  0102               	movlb	2	; () banked
 14671  00125E  51C8               	movf	(doModeVerbose@p_1353+1)& (0+255),w,b
 14672  001260  11C7               	iorwf	doModeVerbose@p_1353& (0+255),w,b
 14673  001262  E033               	bz	l15878
 14674                           
 14675                           ; BSR set to: 2
 14676                           ;main.c: 982: char *preg;
 14677                           ;main.c: 983: if (preg = strchr(p, ':')) {
 14678  001264  C2C7  F01F         	movff	doModeVerbose@p_1353,?_strchr
 14679  001268  C2C8  F020         	movff	doModeVerbose@p_1353+1,?_strchr+1
 14680  00126C  6A22               	clrf	?_strchr+3,c
 14681  00126E  0E3A               	movlw	58
 14682  001270  6E21               	movwf	?_strchr+2,c
 14683  001272  EC4E  F032         	call	_strchr	;wreg free
 14684  001276  C01F  F28E         	movff	?_strchr,doModeVerbose@preg_1357
 14685  00127A  C020  F28F         	movff	?_strchr+1,doModeVerbose@preg_1357+1
 14686  00127E  0102               	movlb	2	; () banked
 14687  001280  518F               	movf	(doModeVerbose@preg_1357+1)& (0+255),w,b
 14688  001282  118E               	iorwf	doModeVerbose@preg_1357& (0+255),w,b
 14689  001284  E018               	bz	l15876
 14690                           
 14691                           ; BSR set to: 2
 14692                           ;main.c: 984: page = atoi(p);
 14693  001286  C2C7  F062         	movff	doModeVerbose@p_1353,?_atoi
 14694  00128A  C2C8  F063         	movff	doModeVerbose@p_1353+1,?_atoi+1
 14695  00128E  ECD1  F026         	call	_atoi	;wreg free
 14696  001292  5162               	movf	?_atoi& (0+255),w,b
 14697  001294  0102               	movlb	2	; () banked
 14698  001296  6FB0               	movwf	doModeVerbose@page_1349& (0+255),b
 14699                           
 14700                           ;main.c: 985: reg = atoi(preg + 1);
 14701  001298  298E               	incf	doModeVerbose@preg_1357& (0+255),w,b
 14702  00129A  0101               	movlb	1	; () banked
 14703  00129C  6FB3               	movwf	??_doModeVerbose& (0+255),b
 14704  00129E  0E00               	movlw	0
 14705  0012A0  0102               	movlb	2	; () banked
 14706  0012A2  218F               	addwfc	(doModeVerbose@preg_1357+1)& (0+255),w,b
 14707  0012A4  0101               	movlb	1	; () banked
 14708  0012A6  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 14709  0012A8  C1B3  F062         	movff	??_doModeVerbose,?_atoi
 14710  0012AC  C1B4  F063         	movff	??_doModeVerbose+1,?_atoi+1
 14711  0012B0  ECD1  F026         	call	_atoi	;wreg free
 14712  0012B4  D006               	goto	L15
 14713  0012B6                     l15876:
 14714                           
 14715                           ; BSR set to: 2
 14716                           ;main.c: 987: else {
 14717                           ;main.c: 988: reg = atoi(p);
 14718  0012B6  C2C7  F062         	movff	doModeVerbose@p_1353,?_atoi
 14719  0012BA  C2C8  F063         	movff	doModeVerbose@p_1353+1,?_atoi+1
 14720  0012BE  ECD1  F026         	call	_atoi	;wreg free
 14721  0012C2                     L15:
 14722  0012C2  5162               	movf	?_atoi& (0+255),w,b
 14723  0012C4  0102               	movlb	2	; () banked
 14724  0012C6  6FB1               	movwf	doModeVerbose@reg_1350& (0+255),b
 14725  0012C8  D007               	goto	l15886
 14726  0012CA                     l15878:
 14727                           
 14728                           ; BSR set to: 2
 14729                           ;main.c: 992: else {
 14730                           ;main.c: 993: putsUSART((char *) "-ERROR - Needs [page:]register\r\n");
 14731  0012CA  0E79               	movlw	high STR_54
 14732  0012CC  6E21               	movwf	?_putsUSART+1,c
 14733  0012CE  0E8D               	movlw	low STR_54
 14734  0012D0  6E20               	movwf	?_putsUSART,c
 14735  0012D2  ECD5  F032         	call	_putsUSART	;wreg free
 14736  0012D6  D571               	goto	l15682
 14737  0012D8                     l15886:
 14738                           
 14739                           ; BSR set to: 2
 14740                           ;main.c: 997: }
 14741                           ;main.c: 1000: if ((0) != (p = strtok((0), " "))) {
 14742  0012D8  EC80  F00F         	call	PL38	;call to abstracted procedure
 14743  0012DC  ECEF  F02E         	call	_strtok	;wreg free
 14744  0012E0  C064  F2C7         	movff	?_strtok,doModeVerbose@p_1353
 14745  0012E4  C065  F2C8         	movff	?_strtok+1,doModeVerbose@p_1353+1
 14746  0012E8  0102               	movlb	2	; () banked
 14747  0012EA  51C8               	movf	(doModeVerbose@p_1353+1)& (0+255),w,b
 14748  0012EC  11C7               	iorwf	doModeVerbose@p_1353& (0+255),w,b
 14749  0012EE  E00A               	bz	l15890
 14750                           
 14751                           ; BSR set to: 2
 14752                           ;main.c: 1001: value = atoi(p);
 14753  0012F0  C2C7  F062         	movff	doModeVerbose@p_1353,?_atoi
 14754  0012F4  C2C8  F063         	movff	doModeVerbose@p_1353+1,?_atoi+1
 14755  0012F8  ECD1  F026         	call	_atoi	;wreg free
 14756  0012FC  5162               	movf	?_atoi& (0+255),w,b
 14757  0012FE  0102               	movlb	2	; () banked
 14758  001300  6FBA               	movwf	doModeVerbose@value_1351& (0+255),b
 14759                           
 14760                           ;main.c: 1002: }
 14761  001302  D007               	goto	l15898
 14762  001304                     l15890:
 14763                           
 14764                           ; BSR set to: 2
 14765                           ;main.c: 1003: else {
 14766                           ;main.c: 1004: putsUSART((char *) "-ERROR - Need a value\r\n");
 14767  001304  0E7B               	movlw	high STR_88
 14768  001306  6E21               	movwf	?_putsUSART+1,c
 14769  001308  0E93               	movlw	low STR_88
 14770  00130A  6E20               	movwf	?_putsUSART,c
 14771  00130C  ECD5  F032         	call	_putsUSART	;wreg free
 14772  001310  D554               	goto	l15682
 14773  001312                     l15898:
 14774                           
 14775                           ; BSR set to: 2
 14776                           ;main.c: 1008: }
 14777                           ;main.c: 1010: if (writeRegisterExtended(nodeid,
 14778                           ;main.c: 1011: page,
 14779                           ;main.c: 1012: reg,
 14780                           ;main.c: 1013: rwtimeout,
 14781                           ;main.c: 1014: &value)) {
 14782  001312  0100               	movlb	0	; () banked
 14783  001314  C2B0  F0AF         	movff	doModeVerbose@page_1349,?_writeRegisterExtended
 14784  001318  6BB0               	clrf	(?_writeRegisterExtended+1)& (0+255),b
 14785  00131A  C2B1  F0B1         	movff	doModeVerbose@reg_1350,?_writeRegisterExtended+2
 14786  00131E  C104  F0B2         	movff	_rwtimeout,?_writeRegisterExtended+3
 14787  001322  6BB3               	clrf	(?_writeRegisterExtended+4)& (0+255),b
 14788  001324  0E02               	movlw	high doModeVerbose@value_1351
 14789  001326  6FB5               	movwf	(?_writeRegisterExtended+6)& (0+255),b
 14790  001328  0EBA               	movlw	low doModeVerbose@value_1351
 14791  00132A  6FB4               	movwf	(?_writeRegisterExtended+5)& (0+255),b
 14792  00132C  0102               	movlb	2	; () banked
 14793  00132E  51BD               	movf	doModeVerbose@nodeid_1348& (0+255),w,b
 14794  001330  EC4C  F026         	call	_writeRegisterExtended
 14795  001334  0900               	iorlw	0
 14796  001336  E030               	bz	l15912
 14797                           
 14798                           ;main.c: 1015: putsUSART((char *) "+OK - Value written successfully for ");
 14799  001338  0E77               	movlw	high STR_89
 14800  00133A  6E21               	movwf	?_putsUSART+1,c
 14801  00133C  0EE6               	movlw	low STR_89
 14802  00133E  6E20               	movwf	?_putsUSART,c
 14803  001340  ECD5  F032         	call	_putsUSART	;wreg free
 14804                           
 14805                           ;main.c: 1016: putsUSART((char *) "nodeid=");
 14806  001344  0E7E               	movlw	high (STR_56+6)
 14807  001346  6E21               	movwf	?_putsUSART+1,c
 14808  001348  0E1E               	movlw	low (STR_56+6)
 14809  00134A  6E20               	movwf	?_putsUSART,c
 14810  00134C  ECD5  F032         	call	_putsUSART	;wreg free
 14811                           
 14812                           ;main.c: 1017: sprintf(wrkbuf, bHex ? "0x%02X\n" : "%d\n", nodeid);
 14813  001350  0101               	movlb	1	; () banked
 14814  001352  6700               	tstfsz	_bHex& (0+255),b
 14815  001354  D005               	goto	l15906
 14816                           
 14817                           ; BSR set to: 1
 14818  001356  0E7F               	movlw	high STR_92
 14819  001358  0102               	movlb	2	; () banked
 14820  00135A  6FAA               	movwf	(_doModeVerbose$1366+1)& (0+255),b
 14821  00135C  0ECD               	movlw	low STR_92
 14822  00135E  D004               	goto	L16
 14823  001360                     l15906:
 14824                           
 14825                           ; BSR set to: 1
 14826  001360  0E7E               	movlw	high STR_91
 14827  001362  0102               	movlb	2	; () banked
 14828  001364  6FAA               	movwf	(_doModeVerbose$1366+1)& (0+255),b
 14829  001366  0ED0               	movlw	low STR_91
 14830  001368                     L16:
 14831  001368  6FA9               	movwf	_doModeVerbose$1366& (0+255),b
 14832                           
 14833                           ; BSR set to: 2
 14834  00136A  0E01               	movlw	high _wrkbuf
 14835  00136C  0100               	movlb	0	; () banked
 14836  00136E  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14837  001370  0E55               	movlw	low _wrkbuf
 14838  001372  6F6D               	movwf	?_sprintf& (0+255),b
 14839  001374  C2A9  F06F         	movff	_doModeVerbose$1366,?_sprintf+2
 14840  001378  C2AA  F070         	movff	_doModeVerbose$1366+1,?_sprintf+3
 14841  00137C  C2BD  F071         	movff	doModeVerbose@nodeid_1348,?_sprintf+4
 14842  001380  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14843  001382  EC14  F010         	call	_sprintf	;wreg free
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;main.c: 1018: putsUSART(wrkbuf);
 14847  001386  0101               	movlb	1	; () banked
 14848  001388  0E01               	movlw	high _wrkbuf
 14849  00138A  6E21               	movwf	?_putsUSART+1,c
 14850  00138C  0E55               	movlw	low _wrkbuf
 14851  00138E  6E20               	movwf	?_putsUSART,c
 14852  001390  ECD5  F032         	call	_putsUSART	;wreg free
 14853                           
 14854                           ;main.c: 1019: }
 14855  001394  EF1B  F00F         	goto	l16372
 14856  001398                     l15912:
 14857                           
 14858                           ;main.c: 1020: else {
 14859                           ;main.c: 1021: putsUSART((char *) "-ERROR - Failed to write value for ");
 14860  001398  0E78               	movlw	high STR_93
 14861  00139A  6E21               	movwf	?_putsUSART+1,c
 14862  00139C  0E9F               	movlw	low STR_93
 14863  00139E  6E20               	movwf	?_putsUSART,c
 14864  0013A0  ECD5  F032         	call	_putsUSART	;wreg free
 14865                           
 14866                           ;main.c: 1022: putsUSART((char *) "nodeid=");
 14867  0013A4  0E7E               	movlw	high (STR_56+6)
 14868  0013A6  6E21               	movwf	?_putsUSART+1,c
 14869  0013A8  0E1E               	movlw	low (STR_56+6)
 14870  0013AA  6E20               	movwf	?_putsUSART,c
 14871  0013AC  ECD5  F032         	call	_putsUSART	;wreg free
 14872                           
 14873                           ;main.c: 1023: sprintf(wrkbuf, bHex ? "0x%02X\n" : "%d\n", nodeid);
 14874  0013B0  0101               	movlb	1	; () banked
 14875  0013B2  6700               	tstfsz	_bHex& (0+255),b
 14876  0013B4  D005               	goto	l15918
 14877                           
 14878                           ; BSR set to: 1
 14879  0013B6  0E7F               	movlw	high STR_92
 14880  0013B8  0102               	movlb	2	; () banked
 14881  0013BA  6FAC               	movwf	(_doModeVerbose$1372+1)& (0+255),b
 14882  0013BC  0ECD               	movlw	low STR_92
 14883  0013BE  D004               	goto	L17
 14884  0013C0                     l15918:
 14885                           
 14886                           ; BSR set to: 1
 14887  0013C0  0E7E               	movlw	high STR_91
 14888  0013C2  0102               	movlb	2	; () banked
 14889  0013C4  6FAC               	movwf	(_doModeVerbose$1372+1)& (0+255),b
 14890  0013C6  0ED0               	movlw	low STR_91
 14891  0013C8                     L17:
 14892  0013C8  6FAB               	movwf	_doModeVerbose$1372& (0+255),b
 14893                           
 14894                           ; BSR set to: 2
 14895  0013CA  0E01               	movlw	high _wrkbuf
 14896  0013CC  0100               	movlb	0	; () banked
 14897  0013CE  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14898  0013D0  0E55               	movlw	low _wrkbuf
 14899  0013D2  6F6D               	movwf	?_sprintf& (0+255),b
 14900  0013D4  C2AB  F06F         	movff	_doModeVerbose$1372,?_sprintf+2
 14901  0013D8  C2AC  F070         	movff	_doModeVerbose$1372+1,?_sprintf+3
 14902  0013DC  C2BD  F071         	movff	doModeVerbose@nodeid_1348,?_sprintf+4
 14903  0013E0  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14904  0013E2  EC14  F010         	call	_sprintf	;wreg free
 14905  0013E6  EF1B  F00F         	goto	l16372
 14906  0013EA                     l15922:
 14907                           
 14908                           ; BSR set to: 1
 14909                           ;main.c: 1029: else if (cmdbuf == stristr(cmdbuf, "INFO")) {
 14910  0013EA  0E01               	movlw	high _cmdbuf
 14911  0013EC  0100               	movlb	0	; () banked
 14912  0013EE  6F67               	movwf	(?_stristr+1)& (0+255),b
 14913  0013F0  0E05               	movlw	low _cmdbuf
 14914  0013F2  6F66               	movwf	?_stristr& (0+255),b
 14915  0013F4  0E7F               	movlw	high STR_97
 14916  0013F6  6F69               	movwf	(?_stristr+3)& (0+255),b
 14917  0013F8  0EAC               	movlw	low STR_97
 14918  0013FA  6F68               	movwf	(?_stristr+2)& (0+255),b
 14919  0013FC  ECFB  F02F         	call	_stristr	;wreg free
 14920  001400  EC27  F00F         	call	PL2	;call to abstracted procedure
 14921  001404  E104               	bnz	u20505
 14922  001406  0100               	movlb	0	; () banked
 14923  001408  5166               	movf	?_stristr& (0+255),w,b
 14924  00140A  0101               	movlb	1	; () banked
 14925  00140C  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 14926  00140E                     u20505:
 14927  00140E  E173               	bnz	l15966
 14928                           
 14929                           ; BSR set to: 1
 14930                           ;main.c: 1031: uint8_t nodeid;
 14931                           ;main.c: 1032: uint8_t value;
 14932                           ;main.c: 1034: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 14933  001410  506F               	movf	3951,w,c	;volatile
 14934  001412  0BE0               	andlw	224
 14935  001414  E007               	bz	l15934
 14936                           
 14937                           ; BSR set to: 1
 14938                           ;main.c: 1035: putsUSART( (char *)"-ERROR - Command only works if interface is open.\r\n
      +                          " );
 14939  001416  0E73               	movlw	high STR_50
 14940  001418  6E21               	movwf	?_putsUSART+1,c
 14941  00141A  0E13               	movlw	low STR_50
 14942  00141C  6E20               	movwf	?_putsUSART,c
 14943  00141E  ECD5  F032         	call	_putsUSART	;wreg free
 14944  001422  D4CB               	goto	l15682
 14945  001424                     l15934:
 14946                           
 14947                           ; BSR set to: 1
 14948                           ;main.c: 1039: }
 14949                           ;main.c: 1041: strcpy(cmdbuf, cmdbuf + 5);
 14950  001424  EC40  F00F         	call	PL8	;call to abstracted procedure
 14951  001428  ECED  F034         	call	_strcpy	;wreg free
 14952                           
 14953                           ; BSR set to: 1
 14954                           ;main.c: 1042: nodeid = atoi(cmdbuf);
 14955  00142C  0E01               	movlw	high _cmdbuf
 14956  00142E  0100               	movlb	0	; () banked
 14957  001430  6F63               	movwf	(?_atoi+1)& (0+255),b
 14958  001432  0E05               	movlw	low _cmdbuf
 14959  001434  6F62               	movwf	?_atoi& (0+255),b
 14960  001436  ECD1  F026         	call	_atoi	;wreg free
 14961  00143A  5162               	movf	?_atoi& (0+255),w,b
 14962  00143C  0102               	movlb	2	; () banked
 14963  00143E  6FC2               	movwf	doModeVerbose@nodeid_1374& (0+255),b
 14964                           
 14965                           ; BSR set to: 2
 14966                           ;main.c: 1044: putsUSART((char *) "Info for node id = ");
 14967  001440  0E7D               	movlw	high STR_99
 14968  001442  6E21               	movwf	?_putsUSART+1,c
 14969  001444  0E35               	movlw	low STR_99
 14970  001446  6E20               	movwf	?_putsUSART,c
 14971  001448  ECD5  F032         	call	_putsUSART	;wreg free
 14972                           
 14973                           ;main.c: 1045: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", nodeid);
 14974  00144C  0101               	movlb	1	; () banked
 14975  00144E  6700               	tstfsz	_bHex& (0+255),b
 14976  001450  D005               	goto	l15944
 14977                           
 14978                           ; BSR set to: 1
 14979  001452  0E7F               	movlw	high STR_61
 14980  001454  0102               	movlb	2	; () banked
 14981  001456  6FAE               	movwf	(_doModeVerbose$1381+1)& (0+255),b
 14982  001458  0EED               	movlw	low STR_61
 14983  00145A  D004               	goto	L18
 14984  00145C                     l15944:
 14985                           
 14986                           ; BSR set to: 1
 14987  00145C  0E7F               	movlw	high STR_60
 14988  00145E  0102               	movlb	2	; () banked
 14989  001460  6FAE               	movwf	(_doModeVerbose$1381+1)& (0+255),b
 14990  001462  0E4F               	movlw	low STR_60
 14991  001464                     L18:
 14992  001464  6FAD               	movwf	_doModeVerbose$1381& (0+255),b
 14993                           
 14994                           ; BSR set to: 2
 14995  001466  0E01               	movlw	high _wrkbuf
 14996  001468  0100               	movlb	0	; () banked
 14997  00146A  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14998  00146C  0E55               	movlw	low _wrkbuf
 14999  00146E  6F6D               	movwf	?_sprintf& (0+255),b
 15000  001470  C2AD  F06F         	movff	_doModeVerbose$1381,?_sprintf+2
 15001  001474  C2AE  F070         	movff	_doModeVerbose$1381+1,?_sprintf+3
 15002  001478  C2C2  F071         	movff	doModeVerbose@nodeid_1374,?_sprintf+4
 15003  00147C  6B72               	clrf	(?_sprintf+5)& (0+255),b
 15004  00147E  EC14  F010         	call	_sprintf	;wreg free
 15005                           
 15006                           ; BSR set to: 0
 15007                           ;main.c: 1046: putsUSART(wrkbuf);
 15008  001482  0101               	movlb	1	; () banked
 15009  001484  0E01               	movlw	high _wrkbuf
 15010  001486  6E21               	movwf	?_putsUSART+1,c
 15011  001488  0E55               	movlw	low _wrkbuf
 15012  00148A  6E20               	movwf	?_putsUSART,c
 15013  00148C  ECD5  F032         	call	_putsUSART	;wreg free
 15014                           
 15015                           ;main.c: 1047: putsUSART((char *) "\r\n");
 15016  001490  0E72               	movlw	high (STR_241+51)
 15017  001492  6E21               	movwf	?_putsUSART+1,c
 15018  001494  0EDA               	movlw	low (STR_241+51)
 15019  001496  6E20               	movwf	?_putsUSART,c
 15020  001498  ECD5  F032         	call	_putsUSART	;wreg free
 15021                           
 15022                           ;main.c: 1049: if (!readRegisterExtended(nodeid,
 15023                           ;main.c: 1050: 0,
 15024                           ;main.c: 1051: 0xd0,
 15025                           ;main.c: 1052: rwtimeout,
 15026                           ;main.c: 1053: &value)) {
 15027  00149C  0100               	movlb	0	; () banked
 15028  00149E  6BB0               	clrf	(?_readRegisterExtended+1)& (0+255),b
 15029  0014A0  6BAF               	clrf	?_readRegisterExtended& (0+255),b
 15030  0014A2  0ED0               	movlw	208
 15031  0014A4  6FB1               	movwf	(?_readRegisterExtended+2)& (0+255),b
 15032  0014A6  C104  F0B2         	movff	_rwtimeout,?_readRegisterExtended+3
 15033  0014AA  6BB3               	clrf	(?_readRegisterExtended+4)& (0+255),b
 15034  0014AC  0E02               	movlw	high doModeVerbose@value_1375
 15035  0014AE  6FB5               	movwf	(?_readRegisterExtended+6)& (0+255),b
 15036  0014B0  0EB2               	movlw	low doModeVerbose@value_1375
 15037  0014B2  6FB4               	movwf	(?_readRegisterExtended+5)& (0+255),b
 15038  0014B4  0102               	movlb	2	; () banked
 15039  0014B6  51C2               	movf	doModeVerbose@nodeid_1374& (0+255),w,b
 15040  0014B8  EC55  F027         	call	_readRegisterExtended
 15041  0014BC  0900               	iorlw	0
 15042  0014BE  E107               	bnz	l15962
 15043                           
 15044                           ;main.c: 1054: putsUSART((char *) "-ERROR - Node not found.\r\n");
 15045  0014C0  0E7A               	movlw	high STR_103
 15046  0014C2  6E21               	movwf	?_putsUSART+1,c
 15047  0014C4  0E62               	movlw	low STR_103
 15048  0014C6  6E20               	movwf	?_putsUSART,c
 15049  0014C8  ECD5  F032         	call	_putsUSART	;wreg free
 15050  0014CC  D476               	goto	l15682
 15051  0014CE                     l15962:
 15052                           
 15053                           ;main.c: 1058: }
 15054                           ;main.c: 1060: printNodeFirmwareVersion(nodeid);
 15055  0014CE  0102               	movlb	2	; () banked
 15056  0014D0  51C2               	movf	doModeVerbose@nodeid_1374& (0+255),w,b
 15057  0014D2  EC7A  F02A         	call	_printNodeFirmwareVersion
 15058                           
 15059                           ;main.c: 1061: printGUID(nodeid);
 15060  0014D6  0102               	movlb	2	; () banked
 15061  0014D8  51C2               	movf	doModeVerbose@nodeid_1374& (0+255),w,b
 15062  0014DA  ECD5  F027         	call	_printGUID
 15063                           
 15064                           ;main.c: 1062: printMDF(nodeid);
 15065  0014DE  0102               	movlb	2	; () banked
 15066  0014E0  51C2               	movf	doModeVerbose@nodeid_1374& (0+255),w,b
 15067  0014E2  ECA2  F02E         	call	_printMDF
 15068                           
 15069                           ;main.c: 1063: putsUSART((char *) "+OK\r\n");
 15070  0014E6  0E7F               	movlw	high STR_9
 15071  0014E8  6E21               	movwf	?_putsUSART+1,c
 15072  0014EA  0E6A               	movlw	low STR_9
 15073  0014EC  6E20               	movwf	?_putsUSART,c
 15074  0014EE  ECD5  F032         	call	_putsUSART	;wreg free
 15075                           
 15076                           ;main.c: 1064: }
 15077  0014F2  EF1B  F00F         	goto	l16372
 15078  0014F6                     l15966:
 15079                           
 15080                           ; BSR set to: 1
 15081                           ;main.c: 1068: else if (cmdbuf == stristr(cmdbuf, "FILTER")) {
 15082  0014F6  0E01               	movlw	high _cmdbuf
 15083  0014F8  0100               	movlb	0	; () banked
 15084  0014FA  6F67               	movwf	(?_stristr+1)& (0+255),b
 15085  0014FC  0E05               	movlw	low _cmdbuf
 15086  0014FE  6F66               	movwf	?_stristr& (0+255),b
 15087  001500  0E7F               	movlw	high STR_105
 15088  001502  6F69               	movwf	(?_stristr+3)& (0+255),b
 15089  001504  0E41               	movlw	low STR_105
 15090  001506  6F68               	movwf	(?_stristr+2)& (0+255),b
 15091  001508  ECFB  F02F         	call	_stristr	;wreg free
 15092  00150C  EC27  F00F         	call	PL2	;call to abstracted procedure
 15093  001510  E104               	bnz	u20545
 15094  001512  0100               	movlb	0	; () banked
 15095  001514  5166               	movf	?_stristr& (0+255),w,b
 15096  001516  0101               	movlb	1	; () banked
 15097  001518  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 15098  00151A                     u20545:
 15099  00151A  E001 D0F4          	bnz	l16066
 15100                           
 15101                           ; BSR set to: 1
 15102                           ;main.c: 1071: uint8_t filterno;
 15103                           ;main.c: 1072: uint8_t filter_priority;
 15104                           ;main.c: 1073: uint16_t filter_class;
 15105                           ;main.c: 1074: uint8_t filter_type;
 15106                           ;main.c: 1075: uint8_t filter_nodeid;
 15107                           ;main.c: 1076: BOOL bPersistent = 0;
 15108  00151E  0102               	movlb	2	; () banked
 15109  001520  6BB3               	clrf	doModeVerbose@bPersistent& (0+255),b
 15110                           
 15111                           ; BSR set to: 2
 15112                           ;main.c: 1078: strcpy(cmdbuf, cmdbuf + 8);
 15113  001522  EC72  F00F         	call	PL22	;call to abstracted procedure
 15114  001526  ECED  F034         	call	_strcpy	;wreg free
 15115                           
 15116                           ; BSR set to: 1
 15117                           ;main.c: 1079: char *p = strtok(cmdbuf, ",");
 15118  00152A  EC88  F00F         	call	PL40	;call to abstracted procedure
 15119  00152E  ECEF  F02E         	call	_strtok	;wreg free
 15120  001532  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1392
 15121  001536  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1392+1
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;main.c: 1080: if ((0) != p) {
 15125  00153A  0102               	movlb	2	; () banked
 15126  00153C  51D3               	movf	(doModeVerbose@p_1392+1)& (0+255),w,b
 15127  00153E  11D2               	iorwf	doModeVerbose@p_1392& (0+255),w,b
 15128  001540  E013               	bz	l15988
 15129                           
 15130                           ; BSR set to: 2
 15131                           ;main.c: 1081: filterno = atoi(p);
 15132  001542  C2D2  F062         	movff	doModeVerbose@p_1392,?_atoi
 15133  001546  C2D3  F063         	movff	doModeVerbose@p_1392+1,?_atoi+1
 15134  00154A  ECD1  F026         	call	_atoi	;wreg free
 15135  00154E  5162               	movf	?_atoi& (0+255),w,b
 15136  001550  0102               	movlb	2	; () banked
 15137  001552  6FB8               	movwf	doModeVerbose@filterno& (0+255),b
 15138                           
 15139                           ; BSR set to: 2
 15140                           ;main.c: 1082: if (filterno > 15) {
 15141  001554  0E0F               	movlw	15
 15142  001556  65B8               	cpfsgt	doModeVerbose@filterno& (0+255),b
 15143  001558  D00E               	goto	l15996
 15144                           
 15145                           ; BSR set to: 2
 15146                           ;main.c: 1083: putsUSART((char *) "-ERROR - Filter number can only be set to a value bet
      +                          ween 0-15.\r\n");
 15147  00155A  0E70               	movlw	high STR_107
 15148  00155C  6E21               	movwf	?_putsUSART+1,c
 15149  00155E  0E62               	movlw	low STR_107
 15150  001560  6E20               	movwf	?_putsUSART,c
 15151  001562  ECD5  F032         	call	_putsUSART	;wreg free
 15152  001566  D429               	goto	l15682
 15153  001568                     l15988:
 15154                           
 15155                           ; BSR set to: 2
 15156                           ;main.c: 1089: else {
 15157                           ;main.c: 1090: putsUSART((char *) "-ERROR - No filter number specified.\r\n");
 15158  001568  0E76               	movlw	high STR_108
 15159  00156A  6E21               	movwf	?_putsUSART+1,c
 15160  00156C  0ED6               	movlw	low STR_108
 15161  00156E  6E20               	movwf	?_putsUSART,c
 15162  001570  ECD5  F032         	call	_putsUSART	;wreg free
 15163  001574  D422               	goto	l15682
 15164  001576                     l15996:
 15165                           
 15166                           ; BSR set to: 2
 15167                           ;main.c: 1094: }
 15168                           ;main.c: 1097: p = strtok((0), ",");
 15169  001576  EC31  F00F         	call	PL4	;call to abstracted procedure
 15170  00157A  ECEF  F02E         	call	_strtok	;wreg free
 15171  00157E  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1392
 15172  001582  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1392+1
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;main.c: 1098: if ((0) != p) {
 15176  001586  0102               	movlb	2	; () banked
 15177  001588  51D3               	movf	(doModeVerbose@p_1392+1)& (0+255),w,b
 15178  00158A  11D2               	iorwf	doModeVerbose@p_1392& (0+255),w,b
 15179  00158C  E00A               	bz	l16002
 15180                           
 15181                           ; BSR set to: 2
 15182                           ;main.c: 1099: filter_priority = atoi(p);
 15183  00158E  C2D2  F062         	movff	doModeVerbose@p_1392,?_atoi
 15184  001592  C2D3  F063         	movff	doModeVerbose@p_1392+1,?_atoi+1
 15185  001596  ECD1  F026         	call	_atoi	;wreg free
 15186  00159A  5162               	movf	?_atoi& (0+255),w,b
 15187  00159C  0102               	movlb	2	; () banked
 15188  00159E  6F94               	movwf	doModeVerbose@filter_priority& (0+255),b
 15189                           
 15190                           ;main.c: 1100: }
 15191  0015A0  D007               	goto	l16010
 15192  0015A2                     l16002:
 15193                           
 15194                           ; BSR set to: 2
 15195                           ;main.c: 1101: else {
 15196                           ;main.c: 1102: putsUSART((char *) "-ERROR - filter for priority is missing\r\n");
 15197  0015A2  0E75               	movlw	high STR_110
 15198  0015A4  6E21               	movwf	?_putsUSART+1,c
 15199  0015A6  0EE2               	movlw	low STR_110
 15200  0015A8  6E20               	movwf	?_putsUSART,c
 15201  0015AA  ECD5  F032         	call	_putsUSART	;wreg free
 15202  0015AE  D405               	goto	l15682
 15203  0015B0                     l16010:
 15204                           
 15205                           ; BSR set to: 2
 15206                           ;main.c: 1106: }
 15207                           ;main.c: 1109: p = strtok((0), ",");
 15208  0015B0  EC31  F00F         	call	PL4	;call to abstracted procedure
 15209  0015B4  ECEF  F02E         	call	_strtok	;wreg free
 15210  0015B8  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1392
 15211  0015BC  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1392+1
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;main.c: 1110: if ((0) != p) {
 15215  0015C0  0102               	movlb	2	; () banked
 15216  0015C2  51D3               	movf	(doModeVerbose@p_1392+1)& (0+255),w,b
 15217  0015C4  11D2               	iorwf	doModeVerbose@p_1392& (0+255),w,b
 15218  0015C6  E00B               	bz	l16016
 15219                           
 15220                           ; BSR set to: 2
 15221                           ;main.c: 1111: filter_class = atoi(p);
 15222  0015C8  C2D2  F062         	movff	doModeVerbose@p_1392,?_atoi
 15223  0015CC  C2D3  F063         	movff	doModeVerbose@p_1392+1,?_atoi+1
 15224  0015D0  ECD1  F026         	call	_atoi	;wreg free
 15225  0015D4  C062  F290         	movff	?_atoi,doModeVerbose@filter_class
 15226  0015D8  C063  F291         	movff	?_atoi+1,doModeVerbose@filter_class+1
 15227                           
 15228                           ;main.c: 1112: }
 15229  0015DC  D008               	goto	l16024
 15230  0015DE                     l16016:
 15231                           
 15232                           ; BSR set to: 2
 15233                           ;main.c: 1113: else {
 15234                           ;main.c: 1114: putsUSART((char *) "-ERROR - filter for class is missing\r\n");
 15235  0015DE  0E77               	movlw	high STR_112
 15236  0015E0  6E21               	movwf	?_putsUSART+1,c
 15237  0015E2  0E72               	movlw	low STR_112
 15238  0015E4  6E20               	movwf	?_putsUSART,c
 15239  0015E6  ECD5  F032         	call	_putsUSART	;wreg free
 15240  0015EA  EFDD  F006         	goto	l15682
 15241  0015EE                     l16024:
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;main.c: 1118: }
 15245                           ;main.c: 1121: p = strtok((0), ",");
 15246  0015EE  EC39  F00F         	call	PL6	;call to abstracted procedure
 15247  0015F2  ECEF  F02E         	call	_strtok	;wreg free
 15248  0015F6  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1392
 15249  0015FA  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1392+1
 15250                           
 15251                           ; BSR set to: 0
 15252                           ;main.c: 1122: if ((0) != p) {
 15253  0015FE  0102               	movlb	2	; () banked
 15254  001600  51D3               	movf	(doModeVerbose@p_1392+1)& (0+255),w,b
 15255  001602  11D2               	iorwf	doModeVerbose@p_1392& (0+255),w,b
 15256  001604  E00A               	bz	l16030
 15257                           
 15258                           ; BSR set to: 2
 15259                           ;main.c: 1123: filter_type = atoi(p);
 15260  001606  C2D2  F062         	movff	doModeVerbose@p_1392,?_atoi
 15261  00160A  C2D3  F063         	movff	doModeVerbose@p_1392+1,?_atoi+1
 15262  00160E  ECD1  F026         	call	_atoi	;wreg free
 15263  001612  5162               	movf	?_atoi& (0+255),w,b
 15264  001614  0102               	movlb	2	; () banked
 15265  001616  6F95               	movwf	doModeVerbose@filter_type& (0+255),b
 15266                           
 15267                           ;main.c: 1124: }
 15268  001618  D008               	goto	l16038
 15269  00161A                     l16030:
 15270                           
 15271                           ; BSR set to: 2
 15272                           ;main.c: 1125: else {
 15273                           ;main.c: 1126: putsUSART((char *) "-ERROR - filter for type is missing\r\n");
 15274  00161A  0E77               	movlw	high STR_114
 15275  00161C  6E21               	movwf	?_putsUSART+1,c
 15276  00161E  0EC0               	movlw	low STR_114
 15277  001620  6E20               	movwf	?_putsUSART,c
 15278  001622  ECD5  F032         	call	_putsUSART	;wreg free
 15279  001626  EFDD  F006         	goto	l15682
 15280  00162A                     l16038:
 15281                           
 15282                           ; BSR set to: 2
 15283                           ;main.c: 1130: }
 15284                           ;main.c: 1133: p = strtok((0), ",");
 15285  00162A  EC31  F00F         	call	PL4	;call to abstracted procedure
 15286  00162E  ECEF  F02E         	call	_strtok	;wreg free
 15287  001632  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1392
 15288  001636  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1392+1
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;main.c: 1134: if ((0) != p) {
 15292  00163A  0102               	movlb	2	; () banked
 15293  00163C  51D3               	movf	(doModeVerbose@p_1392+1)& (0+255),w,b
 15294  00163E  11D2               	iorwf	doModeVerbose@p_1392& (0+255),w,b
 15295  001640  E00A               	bz	l16044
 15296                           
 15297                           ; BSR set to: 2
 15298                           ;main.c: 1135: filter_nodeid = atoi(p);
 15299  001642  C2D2  F062         	movff	doModeVerbose@p_1392,?_atoi
 15300  001646  C2D3  F063         	movff	doModeVerbose@p_1392+1,?_atoi+1
 15301  00164A  ECD1  F026         	call	_atoi	;wreg free
 15302  00164E  5162               	movf	?_atoi& (0+255),w,b
 15303  001650  0102               	movlb	2	; () banked
 15304  001652  6F96               	movwf	doModeVerbose@filter_nodeid& (0+255),b
 15305                           
 15306                           ;main.c: 1136: }
 15307  001654  D008               	goto	l16052
 15308  001656                     l16044:
 15309                           
 15310                           ; BSR set to: 2
 15311                           ;main.c: 1137: else {
 15312                           ;main.c: 1138: putsUSART((char *) "-ERROR - filter for nide id is missing\r\n");
 15313  001656  0E76               	movlw	high STR_116
 15314  001658  6E21               	movwf	?_putsUSART+1,c
 15315  00165A  0E35               	movlw	low STR_116
 15316  00165C  6E20               	movwf	?_putsUSART,c
 15317  00165E  ECD5  F032         	call	_putsUSART	;wreg free
 15318  001662  EFDD  F006         	goto	l15682
 15319  001666                     l16052:
 15320                           
 15321                           ; BSR set to: 2
 15322                           ;main.c: 1142: }
 15323                           ;main.c: 1145: p = strtok((0), ",");
 15324  001666  DBFD               	call	PL4	;call to abstracted procedure
 15325  001668  ECEF  F02E         	call	_strtok	;wreg free
 15326  00166C  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1392
 15327  001670  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1392+1
 15328                           
 15329                           ;main.c: 1146: if ( (0) != stristr(p, "PERSISTENT") ) {
 15330  001674  C2D2  F066         	movff	doModeVerbose@p_1392,?_stristr
 15331  001678  C2D3  F067         	movff	doModeVerbose@p_1392+1,?_stristr+1
 15332  00167C  0E7E               	movlw	high STR_118
 15333  00167E  6F69               	movwf	(?_stristr+3)& (0+255),b
 15334  001680  0E54               	movlw	low STR_118
 15335  001682  6F68               	movwf	(?_stristr+2)& (0+255),b
 15336  001684  ECFB  F02F         	call	_stristr	;wreg free
 15337  001688  5167               	movf	(?_stristr+1)& (0+255),w,b
 15338  00168A  1166               	iorwf	?_stristr& (0+255),w,b
 15339  00168C  E003               	bz	l16056
 15340                           
 15341                           ; BSR set to: 0
 15342                           ;main.c: 1147: bPersistent = 1;
 15343  00168E  0E01               	movlw	1
 15344  001690  0102               	movlb	2	; () banked
 15345  001692  6FB3               	movwf	doModeVerbose@bPersistent& (0+255),b
 15346  001694                     l16056:
 15347                           
 15348                           ;main.c: 1148: }
 15349                           ;main.c: 1151: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 15350  001694  0E80               	movlw	128
 15351  001696  EC6A  F035         	call	_ECANSetOperationMode
 15352                           
 15353                           ;main.c: 1153: uint32_t id = ((uint32_t) filter_priority << 26) |
 15354                           ;main.c: 1154: ((uint32_t) filter_class << 16) |
 15355                           ;main.c: 1155: ((uint32_t) filter_type << 8) |
 15356                           ;main.c: 1156: filter_nodeid;
 15357  00169A  C295  F1B3         	movff	doModeVerbose@filter_type,??_doModeVerbose
 15358  00169E  ECA9  F00F         	call	PL60	;call to abstracted procedure
 15359  0016A2  5190               	movf	doModeVerbose@filter_class& (0+255),w,b
 15360  0016A4  0101               	movlb	1	; () banked
 15361  0016A6  6FB7               	movwf	(??_doModeVerbose+4)& (0+255),b
 15362  0016A8  0102               	movlb	2	; () banked
 15363  0016AA  5191               	movf	(doModeVerbose@filter_class+1)& (0+255),w,b
 15364  0016AC  ECCE  F00F         	call	PL80	;call to abstracted procedure
 15365  0016B0  C294  F1BB         	movff	doModeVerbose@filter_priority,??_doModeVerbose+8
 15366  0016B4  DBF2               	call	PL12	;call to abstracted procedure
 15367  0016B6  5196               	movf	doModeVerbose@filter_nodeid& (0+255),w,b
 15368  0016B8  0101               	movlb	1	; () banked
 15369  0016BA  11C3               	iorwf	(??_doModeVerbose+16)& (0+255),w,b
 15370  0016BC  0102               	movlb	2	; () banked
 15371  0016BE  6F88               	movwf	doModeVerbose@id& (0+255),b
 15372  0016C0  0101               	movlb	1	; () banked
 15373  0016C2  51C4               	movf	(??_doModeVerbose+17)& (0+255),w,b
 15374  0016C4  0102               	movlb	2	; () banked
 15375  0016C6  6F89               	movwf	(doModeVerbose@id+1)& (0+255),b
 15376  0016C8  0101               	movlb	1	; () banked
 15377  0016CA  51C5               	movf	(??_doModeVerbose+18)& (0+255),w,b
 15378  0016CC  0102               	movlb	2	; () banked
 15379  0016CE  6F8A               	movwf	(doModeVerbose@id+2)& (0+255),b
 15380  0016D0  0101               	movlb	1	; () banked
 15381  0016D2  51C6               	movf	(??_doModeVerbose+19)& (0+255),w,b
 15382  0016D4  0102               	movlb	2	; () banked
 15383  0016D6  6F8B               	movwf	(doModeVerbose@id+3)& (0+255),b
 15384                           
 15385                           ; BSR set to: 2
 15386                           ;main.c: 1158: setFilter(filterno, id, bPersistent );
 15387  0016D8  C288  F023         	movff	doModeVerbose@id,?_setFilter
 15388  0016DC  C289  F024         	movff	doModeVerbose@id+1,?_setFilter+1
 15389  0016E0  C28A  F025         	movff	doModeVerbose@id+2,?_setFilter+2
 15390  0016E4  C28B  F026         	movff	doModeVerbose@id+3,?_setFilter+3
 15391  0016E8  C2B3  F027         	movff	doModeVerbose@bPersistent,?_setFilter+4
 15392  0016EC  51B8               	movf	doModeVerbose@filterno& (0+255),w,b
 15393  0016EE  ECD3  F01B         	call	_setFilter
 15394                           
 15395                           ;main.c: 1161: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 15396  0016F2  0E00               	movlw	0
 15397  0016F4  EC6A  F035         	call	_ECANSetOperationMode
 15398                           
 15399                           ;main.c: 1163: putsUSART((char *) "+OK\r\n");
 15400  0016F8  0E7F               	movlw	high STR_9
 15401  0016FA  6E21               	movwf	?_putsUSART+1,c
 15402  0016FC  0E6A               	movlw	low STR_9
 15403  0016FE  6E20               	movwf	?_putsUSART,c
 15404  001700  ECD5  F032         	call	_putsUSART	;wreg free
 15405                           
 15406                           ;main.c: 1164: }
 15407  001704  D398               	goto	l16372
 15408  001706                     l16066:
 15409                           
 15410                           ; BSR set to: 1
 15411                           ;main.c: 1168: else if (cmdbuf == stristr(cmdbuf, "MASK")) {
 15412  001706  0E01               	movlw	high _cmdbuf
 15413  001708  0100               	movlb	0	; () banked
 15414  00170A  6F67               	movwf	(?_stristr+1)& (0+255),b
 15415  00170C  0E05               	movlw	low _cmdbuf
 15416  00170E  6F66               	movwf	?_stristr& (0+255),b
 15417  001710  0E7F               	movlw	high STR_120
 15418  001712  6F69               	movwf	(?_stristr+3)& (0+255),b
 15419  001714  0EA2               	movlw	low STR_120
 15420  001716  6F68               	movwf	(?_stristr+2)& (0+255),b
 15421  001718  ECFB  F02F         	call	_stristr	;wreg free
 15422  00171C  DB98               	call	PL2	;call to abstracted procedure
 15423  00171E  E104               	bnz	u20635
 15424  001720  0100               	movlb	0	; () banked
 15425  001722  5166               	movf	?_stristr& (0+255),w,b
 15426  001724  0101               	movlb	1	; () banked
 15427  001726  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 15428  001728                     u20635:
 15429  001728  E001 D0E6          	bnz	l16194
 15430                           
 15431                           ; BSR set to: 1
 15432                           ;main.c: 1177: strcpy(cmdbuf, cmdbuf + 8);
 15433                           
 15434                           ; BSR set to: 1
 15435  00172C  0E01               	movlw	high _cmdbuf
 15436  00172E  6E20               	movwf	?_strcpy+1,c
 15437  001730  0E05               	movlw	low _cmdbuf
 15438  001732  6E1F               	movwf	?_strcpy,c
 15439  001734  0E0D               	movlw	low (_cmdbuf+8)
 15440  001736  6FB3               	movwf	??_doModeVerbose& (0+255),b
 15441  001738  0E01               	movlw	high (_cmdbuf+8)
 15442  00173A  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 15443  00173C  C1B3  F021         	movff	??_doModeVerbose,?_strcpy+2
 15444  001740  C1B4  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 15445  001744  ECED  F034         	call	_strcpy	;wreg free
 15446                           
 15447                           ; BSR set to: 1
 15448                           ;main.c: 1178: char *p = strtok(cmdbuf, ",");
 15449  001748  DBE3               	call	PL40	;call to abstracted procedure
 15450  00174A  ECEF  F02E         	call	_strtok	;wreg free
 15451  00174E  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1415
 15452  001752  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1415+1
 15453                           
 15454                           ; BSR set to: 0
 15455                           ;main.c: 1179: if ((0) != p) {
 15456  001756  0102               	movlb	2	; () banked
 15457  001758  51D1               	movf	(doModeVerbose@p_1415+1)& (0+255),w,b
 15458  00175A  11D0               	iorwf	doModeVerbose@p_1415& (0+255),w,b
 15459  00175C  E014               	bz	l16088
 15460                           
 15461                           ; BSR set to: 2
 15462                           ;main.c: 1180: maskno = atoi(p);
 15463  00175E  C2D0  F062         	movff	doModeVerbose@p_1415,?_atoi
 15464  001762  C2D1  F063         	movff	doModeVerbose@p_1415+1,?_atoi+1
 15465  001766  ECD1  F026         	call	_atoi	;wreg free
 15466  00176A  5162               	movf	?_atoi& (0+255),w,b
 15467  00176C  0102               	movlb	2	; () banked
 15468  00176E  6FBE               	movwf	doModeVerbose@maskno& (0+255),b
 15469                           
 15470                           ; BSR set to: 2
 15471                           ;main.c: 1181: if (maskno > 1) {
 15472  001770  0E01               	movlw	1
 15473  001772  65BE               	cpfsgt	doModeVerbose@maskno& (0+255),b
 15474  001774  D010               	goto	l16096
 15475                           
 15476                           ; BSR set to: 2
 15477                           ;main.c: 1182: putsUSART((char *) "-ERROR - Mask number can only be set as 0 or 1.\r\n");
 15478  001776  0E73               	movlw	high STR_122
 15479  001778  6E21               	movwf	?_putsUSART+1,c
 15480  00177A  0EAE               	movlw	low STR_122
 15481  00177C  6E20               	movwf	?_putsUSART,c
 15482  00177E  ECD5  F032         	call	_putsUSART	;wreg free
 15483  001782  EFDD  F006         	goto	l15682
 15484  001786                     l16088:
 15485                           
 15486                           ; BSR set to: 2
 15487                           ;main.c: 1188: else {
 15488                           ;main.c: 1189: putsUSART((char *) "-ERROR - No mask number specified.\r\n");
 15489  001786  0E78               	movlw	high STR_123
 15490  001788  6E21               	movwf	?_putsUSART+1,c
 15491  00178A  0E0C               	movlw	low STR_123
 15492  00178C  6E20               	movwf	?_putsUSART,c
 15493  00178E  ECD5  F032         	call	_putsUSART	;wreg free
 15494  001792  EFDD  F006         	goto	l15682
 15495  001796                     l16096:
 15496                           
 15497                           ; BSR set to: 2
 15498                           ;main.c: 1193: }
 15499                           ;main.c: 1196: p = strtok((0), ",");
 15500  001796  DB65               	call	PL4	;call to abstracted procedure
 15501  001798  ECEF  F02E         	call	_strtok	;wreg free
 15502  00179C  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1415
 15503  0017A0  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1415+1
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;main.c: 1197: if ((0) != p) {
 15507  0017A4  0102               	movlb	2	; () banked
 15508  0017A6  51D1               	movf	(doModeVerbose@p_1415+1)& (0+255),w,b
 15509  0017A8  11D0               	iorwf	doModeVerbose@p_1415& (0+255),w,b
 15510  0017AA  E00A               	bz	l16102
 15511                           
 15512                           ; BSR set to: 2
 15513                           ;main.c: 1198: mask_priority = atoi(p);
 15514  0017AC  C2D0  F062         	movff	doModeVerbose@p_1415,?_atoi
 15515  0017B0  C2D1  F063         	movff	doModeVerbose@p_1415+1,?_atoi+1
 15516  0017B4  ECD1  F026         	call	_atoi	;wreg free
 15517  0017B8  5162               	movf	?_atoi& (0+255),w,b
 15518  0017BA  0102               	movlb	2	; () banked
 15519  0017BC  6F97               	movwf	doModeVerbose@mask_priority& (0+255),b
 15520                           
 15521                           ;main.c: 1199: }
 15522  0017BE  D008               	goto	l16110
 15523  0017C0                     l16102:
 15524                           
 15525                           ; BSR set to: 2
 15526                           ;main.c: 1200: else {
 15527                           ;main.c: 1201: putsUSART((char *) "-ERROR - mask for priority is missing\r\n");
 15528  0017C0  0E76               	movlw	high STR_125
 15529  0017C2  6E21               	movwf	?_putsUSART+1,c
 15530  0017C4  0E86               	movlw	low STR_125
 15531  0017C6  6E20               	movwf	?_putsUSART,c
 15532  0017C8  ECD5  F032         	call	_putsUSART	;wreg free
 15533  0017CC  EFDD  F006         	goto	l15682
 15534  0017D0                     l16110:
 15535                           
 15536                           ; BSR set to: 2
 15537                           ;main.c: 1205: }
 15538                           ;main.c: 1208: p = strtok((0), ",");
 15539  0017D0  DB48               	call	PL4	;call to abstracted procedure
 15540  0017D2  ECEF  F02E         	call	_strtok	;wreg free
 15541  0017D6  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1415
 15542  0017DA  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1415+1
 15543                           
 15544                           ; BSR set to: 0
 15545                           ;main.c: 1209: if ((0) != p) {
 15546  0017DE  0102               	movlb	2	; () banked
 15547  0017E0  51D1               	movf	(doModeVerbose@p_1415+1)& (0+255),w,b
 15548  0017E2  11D0               	iorwf	doModeVerbose@p_1415& (0+255),w,b
 15549  0017E4  E00B               	bz	l16116
 15550                           
 15551                           ; BSR set to: 2
 15552                           ;main.c: 1210: mask_class = atoi(p);
 15553  0017E6  C2D0  F062         	movff	doModeVerbose@p_1415,?_atoi
 15554  0017EA  C2D1  F063         	movff	doModeVerbose@p_1415+1,?_atoi+1
 15555  0017EE  ECD1  F026         	call	_atoi	;wreg free
 15556  0017F2  C062  F292         	movff	?_atoi,doModeVerbose@mask_class
 15557  0017F6  C063  F293         	movff	?_atoi+1,doModeVerbose@mask_class+1
 15558                           
 15559                           ;main.c: 1211: }
 15560  0017FA  D008               	goto	l16124
 15561  0017FC                     l16116:
 15562                           
 15563                           ; BSR set to: 2
 15564                           ;main.c: 1212: else {
 15565                           ;main.c: 1213: putsUSART((char *) "-ERROR - mask for class is missing\r\n");
 15566  0017FC  0E78               	movlw	high STR_127
 15567  0017FE  6E21               	movwf	?_putsUSART+1,c
 15568  001800  0E56               	movlw	low STR_127
 15569  001802  6E20               	movwf	?_putsUSART,c
 15570  001804  ECD5  F032         	call	_putsUSART	;wreg free
 15571  001808  EFDD  F006         	goto	l15682
 15572  00180C                     l16124:
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;main.c: 1217: }
 15576                           ;main.c: 1220: p = strtok((0), ",");
 15577  00180C  DB32               	call	PL6	;call to abstracted procedure
 15578  00180E  ECEF  F02E         	call	_strtok	;wreg free
 15579  001812  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1415
 15580  001816  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1415+1
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;main.c: 1221: if ((0) != p) {
 15584  00181A  0102               	movlb	2	; () banked
 15585  00181C  51D1               	movf	(doModeVerbose@p_1415+1)& (0+255),w,b
 15586  00181E  11D0               	iorwf	doModeVerbose@p_1415& (0+255),w,b
 15587  001820  E00A               	bz	l16130
 15588                           
 15589                           ; BSR set to: 2
 15590                           ;main.c: 1222: mask_type = atoi(p);
 15591  001822  C2D0  F062         	movff	doModeVerbose@p_1415,?_atoi
 15592  001826  C2D1  F063         	movff	doModeVerbose@p_1415+1,?_atoi+1
 15593  00182A  ECD1  F026         	call	_atoi	;wreg free
 15594  00182E  5162               	movf	?_atoi& (0+255),w,b
 15595  001830  0102               	movlb	2	; () banked
 15596  001832  6F98               	movwf	doModeVerbose@mask_type& (0+255),b
 15597                           
 15598                           ;main.c: 1223: }
 15599  001834  D008               	goto	l16138
 15600  001836                     l16130:
 15601                           
 15602                           ; BSR set to: 2
 15603                           ;main.c: 1224: else {
 15604                           ;main.c: 1225: putsUSART((char *) "-ERROR - mask for type is missing\r\n");
 15605  001836  0E78               	movlw	high STR_129
 15606  001838  6E21               	movwf	?_putsUSART+1,c
 15607  00183A  0E7B               	movlw	low STR_129
 15608  00183C  6E20               	movwf	?_putsUSART,c
 15609  00183E  ECD5  F032         	call	_putsUSART	;wreg free
 15610  001842  EFDD  F006         	goto	l15682
 15611  001846                     l16138:
 15612                           
 15613                           ; BSR set to: 2
 15614                           ;main.c: 1229: }
 15615                           ;main.c: 1232: p = strtok((0), ",");
 15616  001846  DB0D               	call	PL4	;call to abstracted procedure
 15617  001848  ECEF  F02E         	call	_strtok	;wreg free
 15618  00184C  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1415
 15619  001850  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1415+1
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;main.c: 1233: if ((0) != p) {
 15623  001854  0102               	movlb	2	; () banked
 15624  001856  51D1               	movf	(doModeVerbose@p_1415+1)& (0+255),w,b
 15625  001858  11D0               	iorwf	doModeVerbose@p_1415& (0+255),w,b
 15626  00185A  E00A               	bz	l16144
 15627                           
 15628                           ; BSR set to: 2
 15629                           ;main.c: 1234: mask_nodeid = atoi(p);
 15630  00185C  C2D0  F062         	movff	doModeVerbose@p_1415,?_atoi
 15631  001860  C2D1  F063         	movff	doModeVerbose@p_1415+1,?_atoi+1
 15632  001864  ECD1  F026         	call	_atoi	;wreg free
 15633  001868  5162               	movf	?_atoi& (0+255),w,b
 15634  00186A  0102               	movlb	2	; () banked
 15635  00186C  6F99               	movwf	doModeVerbose@mask_nodeid& (0+255),b
 15636                           
 15637                           ;main.c: 1235: }
 15638  00186E  D008               	goto	l16152
 15639  001870                     l16144:
 15640                           
 15641                           ; BSR set to: 2
 15642                           ;main.c: 1236: else {
 15643                           ;main.c: 1237: putsUSART((char *) "-ERROR - mask for nide id is missing\r\n");
 15644  001870  0E77               	movlw	high STR_131
 15645  001872  6E21               	movwf	?_putsUSART+1,c
 15646  001874  0E4B               	movlw	low STR_131
 15647  001876  6E20               	movwf	?_putsUSART,c
 15648  001878  ECD5  F032         	call	_putsUSART	;wreg free
 15649  00187C  EFDD  F006         	goto	l15682
 15650  001880                     l16152:
 15651                           
 15652                           ; BSR set to: 2
 15653                           ;main.c: 1241: }
 15654                           ;main.c: 1242: uint32_t id = ((uint32_t) mask_priority << 26) |
 15655                           ;main.c: 1243: ((uint32_t) mask_class << 16) |
 15656                           ;main.c: 1244: ((uint32_t) mask_type << 8) |
 15657                           ;main.c: 1245: mask_nodeid;
 15658  001880  C298  F1B3         	movff	doModeVerbose@mask_type,??_doModeVerbose
 15659  001884  DB66               	call	PL60	;call to abstracted procedure
 15660  001886  5192               	movf	doModeVerbose@mask_class& (0+255),w,b
 15661  001888  0101               	movlb	1	; () banked
 15662  00188A  6FB7               	movwf	(??_doModeVerbose+4)& (0+255),b
 15663  00188C  0102               	movlb	2	; () banked
 15664  00188E  5193               	movf	(doModeVerbose@mask_class+1)& (0+255),w,b
 15665  001890  DB85               	call	PL80	;call to abstracted procedure
 15666  001892  C297  F1BB         	movff	doModeVerbose@mask_priority,??_doModeVerbose+8
 15667  001896  DB01               	call	PL12	;call to abstracted procedure
 15668  001898  5199               	movf	doModeVerbose@mask_nodeid& (0+255),w,b
 15669  00189A  0101               	movlb	1	; () banked
 15670  00189C  11C3               	iorwf	(??_doModeVerbose+16)& (0+255),w,b
 15671  00189E  0102               	movlb	2	; () banked
 15672  0018A0  6FCC               	movwf	doModeVerbose@id_1427& (0+255),b
 15673  0018A2  0101               	movlb	1	; () banked
 15674  0018A4  51C4               	movf	(??_doModeVerbose+17)& (0+255),w,b
 15675  0018A6  0102               	movlb	2	; () banked
 15676  0018A8  6FCD               	movwf	(doModeVerbose@id_1427+1)& (0+255),b
 15677  0018AA  0101               	movlb	1	; () banked
 15678  0018AC  51C5               	movf	(??_doModeVerbose+18)& (0+255),w,b
 15679  0018AE  0102               	movlb	2	; () banked
 15680  0018B0  6FCE               	movwf	(doModeVerbose@id_1427+2)& (0+255),b
 15681  0018B2  0101               	movlb	1	; () banked
 15682  0018B4  51C6               	movf	(??_doModeVerbose+19)& (0+255),w,b
 15683  0018B6  0102               	movlb	2	; () banked
 15684  0018B8  6FCF               	movwf	(doModeVerbose@id_1427+3)& (0+255),b
 15685                           
 15686                           ; BSR set to: 2
 15687                           ;main.c: 1248: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 15688  0018BA  0E80               	movlw	128
 15689  0018BC  EC6A  F035         	call	_ECANSetOperationMode
 15690                           
 15691                           ;main.c: 1250: maskno ? _CANIDToRegs((BYTE*)&RXM0SIDH, id, 1) :
 15692                           ;main.c: 1251: _CANIDToRegs((BYTE*)&RXM1SIDH, id, 1);
 15693  0018C0  0102               	movlb	2	; () banked
 15694  0018C2  51BE               	movf	doModeVerbose@maskno& (0+255),w,b
 15695  0018C4  E008               	bz	l16160
 15696                           
 15697                           ; BSR set to: 2
 15698  0018C6  010F               	movlb	15	; () banked
 15699  0018C8  0E0F               	movlw	15	;volatile
 15700  0018CA  6E22               	movwf	?__CANIDToRegs+1,c
 15701  0018CC  0E18               	movlw	24	;volatile
 15702  0018CE  DB4E               	call	PL72	;call to abstracted procedure
 15703  0018D0  ECC2  F025         	call	__CANIDToRegs	;wreg free
 15704  0018D4  D007               	goto	l16162
 15705  0018D6                     l16160:
 15706                           
 15707                           ; BSR set to: 2
 15708  0018D6  010F               	movlb	15	; () banked
 15709  0018D8  0E0F               	movlw	15	;volatile
 15710  0018DA  6E22               	movwf	?__CANIDToRegs+1,c
 15711  0018DC  0E1C               	movlw	28	;volatile
 15712  0018DE  DB46               	call	PL72	;call to abstracted procedure
 15713  0018E0  ECC2  F025         	call	__CANIDToRegs	;wreg free
 15714  0018E4                     l16162:
 15715                           
 15716                           ; BSR set to: 0
 15717                           ;main.c: 1254: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 15718  0018E4  0E00               	movlw	0
 15719  0018E6  EC6A  F035         	call	_ECANSetOperationMode
 15720                           
 15721                           ;main.c: 1268: }
 15722                           ;main.c: 1269: }
 15723                           ;main.c: 1271: putsUSART((char *) "+OK\r\n");
 15724  0018EA  0E7F               	movlw	high STR_9
 15725  0018EC  6E21               	movwf	?_putsUSART+1,c
 15726  0018EE  0E6A               	movlw	low STR_9
 15727  0018F0  6E20               	movwf	?_putsUSART,c
 15728  0018F2  ECD5  F032         	call	_putsUSART	;wreg free
 15729                           
 15730                           ;main.c: 1273: }
 15731  0018F6  D29F               	goto	l16372
 15732  0018F8                     l16194:
 15733                           
 15734                           ; BSR set to: 1
 15735                           ;main.c: 1285: else if (cmdbuf == stristr(cmdbuf, "SET ")) {
 15736  0018F8  0E01               	movlw	high _cmdbuf
 15737  0018FA  0100               	movlb	0	; () banked
 15738  0018FC  6F67               	movwf	(?_stristr+1)& (0+255),b
 15739  0018FE  0E05               	movlw	low _cmdbuf
 15740  001900  6F66               	movwf	?_stristr& (0+255),b
 15741  001902  0E7F               	movlw	high STR_133
 15742  001904  6F69               	movwf	(?_stristr+3)& (0+255),b
 15743  001906  0E8E               	movlw	low STR_133
 15744  001908  6F68               	movwf	(?_stristr+2)& (0+255),b
 15745  00190A  ECFB  F02F         	call	_stristr	;wreg free
 15746  00190E  DA9F               	call	PL2	;call to abstracted procedure
 15747  001910  E104               	bnz	u20725
 15748  001912  0100               	movlb	0	; () banked
 15749  001914  5166               	movf	?_stristr& (0+255),w,b
 15750  001916  0101               	movlb	1	; () banked
 15751  001918  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 15752  00191A                     u20725:
 15753  00191A  E001 D27C          	bnz	l16366
 15754                           
 15755                           ; BSR set to: 1
 15756                           ;main.c: 1288: strcpy(cmdbuf, cmdbuf + 4);
 15757  00191E  0E01               	movlw	high _cmdbuf
 15758  001920  6E20               	movwf	?_strcpy+1,c
 15759  001922  0E05               	movlw	low _cmdbuf
 15760  001924  6E1F               	movwf	?_strcpy,c
 15761  001926  0E09               	movlw	low (_cmdbuf+4)
 15762  001928  6FB3               	movwf	??_doModeVerbose& (0+255),b
 15763  00192A  0E01               	movlw	high (_cmdbuf+4)
 15764  00192C  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 15765  00192E  C1B3  F021         	movff	??_doModeVerbose,?_strcpy+2
 15766  001932  C1B4  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 15767  001936  ECED  F034         	call	_strcpy	;wreg free
 15768                           
 15769                           ; BSR set to: 1
 15770                           ;main.c: 1291: if (cmdbuf == stristr(cmdbuf, "HEX")) {
 15771  00193A  0E01               	movlw	high _cmdbuf
 15772  00193C  0100               	movlb	0	; () banked
 15773  00193E  6F67               	movwf	(?_stristr+1)& (0+255),b
 15774  001940  0E05               	movlw	low _cmdbuf
 15775  001942  6F66               	movwf	?_stristr& (0+255),b
 15776  001944  0E7F               	movlw	high STR_134
 15777  001946  6F69               	movwf	(?_stristr+3)& (0+255),b
 15778  001948  0ED9               	movlw	low STR_134
 15779  00194A  6F68               	movwf	(?_stristr+2)& (0+255),b
 15780  00194C  ECFB  F02F         	call	_stristr	;wreg free
 15781  001950  DA7E               	call	PL2	;call to abstracted procedure
 15782  001952  E104               	bnz	u20735
 15783  001954  0100               	movlb	0	; () banked
 15784  001956  5166               	movf	?_stristr& (0+255),w,b
 15785  001958  0101               	movlb	1	; () banked
 15786  00195A  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 15787  00195C                     u20735:
 15788  00195C  E112               	bnz	l16206
 15789                           
 15790                           ; BSR set to: 1
 15791                           ;main.c: 1292: bHex = 1;
 15792  00195E  0E01               	movlw	1
 15793  001960  6F00               	movwf	_bHex& (0+255),b
 15794                           
 15795                           ; BSR set to: 1
 15796                           ;main.c: 1293: (Busy_eep(), Write_b_eep(0x06,1));
 15797  001962  ECBC  F035         	call	_Busy_eep	;wreg free
 15798  001966  6A20               	clrf	?_Write_b_eep+1,c
 15799  001968  0E06               	movlw	6
 15800  00196A  6E1F               	movwf	?_Write_b_eep,c
 15801  00196C  0E01               	movlw	1
 15802  00196E  6E21               	movwf	?_Write_b_eep+2,c
 15803  001970  ECBB  F034         	call	_Write_b_eep	;wreg free
 15804                           
 15805                           ;main.c: 1294: putsUSART((char *) "+OK - Numerical output now in hexadecimal\r\n");
 15806  001974  0E75               	movlw	high STR_135
 15807  001976  6E21               	movwf	?_putsUSART+1,c
 15808  001978  0EB6               	movlw	low STR_135
 15809  00197A  6E20               	movwf	?_putsUSART,c
 15810  00197C  ECD5  F032         	call	_putsUSART	;wreg free
 15811                           
 15812                           ;main.c: 1295: }
 15813  001980  D25A               	goto	l16372
 15814  001982                     l16206:
 15815                           
 15816                           ; BSR set to: 1
 15817                           ;main.c: 1297: else if (cmdbuf == stristr(cmdbuf, "DECIMAL")) {
 15818  001982  0E01               	movlw	high _cmdbuf
 15819  001984  0100               	movlb	0	; () banked
 15820  001986  6F67               	movwf	(?_stristr+1)& (0+255),b
 15821  001988  0E05               	movlw	low _cmdbuf
 15822  00198A  6F66               	movwf	?_stristr& (0+255),b
 15823  00198C  0E7E               	movlw	high STR_136
 15824  00198E  6F69               	movwf	(?_stristr+3)& (0+255),b
 15825  001990  0EF0               	movlw	low STR_136
 15826  001992  6F68               	movwf	(?_stristr+2)& (0+255),b
 15827  001994  ECFB  F02F         	call	_stristr	;wreg free
 15828  001998  DA5A               	call	PL2	;call to abstracted procedure
 15829  00199A  E104               	bnz	u20745
 15830  00199C  0100               	movlb	0	; () banked
 15831  00199E  5166               	movf	?_stristr& (0+255),w,b
 15832  0019A0  0101               	movlb	1	; () banked
 15833  0019A2  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 15834  0019A4                     u20745:
 15835  0019A4  E111               	bnz	l16216
 15836                           
 15837                           ; BSR set to: 1
 15838                           ;main.c: 1298: bHex = 0;
 15839  0019A6  6B00               	clrf	_bHex& (0+255),b
 15840                           
 15841                           ; BSR set to: 1
 15842                           ;main.c: 1299: (Busy_eep(), Write_b_eep(0x06,0));
 15843  0019A8  ECBC  F035         	call	_Busy_eep	;wreg free
 15844  0019AC  6A20               	clrf	?_Write_b_eep+1,c
 15845  0019AE  0E06               	movlw	6
 15846  0019B0  6E1F               	movwf	?_Write_b_eep,c
 15847  0019B2  0E00               	movlw	0
 15848  0019B4  6A21               	clrf	?_Write_b_eep+2,c
 15849  0019B6  ECBB  F034         	call	_Write_b_eep	;wreg free
 15850                           
 15851                           ;main.c: 1300: putsUSART((char *) "+OK - Numerical output now in decimal\r\n");
 15852  0019BA  0E76               	movlw	high STR_137
 15853  0019BC  6E21               	movwf	?_putsUSART+1,c
 15854  0019BE  0EAE               	movlw	low STR_137
 15855  0019C0  6E20               	movwf	?_putsUSART,c
 15856  0019C2  ECD5  F032         	call	_putsUSART	;wreg free
 15857                           
 15858                           ;main.c: 1301: }
 15859  0019C6  D237               	goto	l16372
 15860  0019C8                     l16216:
 15861                           
 15862                           ; BSR set to: 1
 15863                           ;main.c: 1302: else if (0 != stristr(cmdbuf, "RWTIMEOUT ")) {
 15864  0019C8  0E01               	movlw	high _cmdbuf
 15865  0019CA  0100               	movlb	0	; () banked
 15866  0019CC  6F67               	movwf	(?_stristr+1)& (0+255),b
 15867  0019CE  0E05               	movlw	low _cmdbuf
 15868  0019D0  6F66               	movwf	?_stristr& (0+255),b
 15869  0019D2  0E7E               	movlw	high STR_138
 15870  0019D4  6F69               	movwf	(?_stristr+3)& (0+255),b
 15871  0019D6  0E49               	movlw	low STR_138
 15872  0019D8  6F68               	movwf	(?_stristr+2)& (0+255),b
 15873  0019DA  ECFB  F02F         	call	_stristr	;wreg free
 15874  0019DE  5167               	movf	(?_stristr+1)& (0+255),w,b
 15875  0019E0  1166               	iorwf	?_stristr& (0+255),w,b
 15876  0019E2  E023               	bz	l16230
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;main.c: 1303: strcpy(cmdbuf, cmdbuf + 10);
 15880  0019E4  0101               	movlb	1	; () banked
 15881  0019E6  0E01               	movlw	high _cmdbuf
 15882  0019E8  DACD               	call	PL74	;call to abstracted procedure
 15883  0019EA  ECED  F034         	call	_strcpy	;wreg free
 15884                           
 15885                           ; BSR set to: 1
 15886                           ;main.c: 1304: rwtimeout = atoi(cmdbuf);
 15887  0019EE  0E01               	movlw	high _cmdbuf
 15888  0019F0  0100               	movlb	0	; () banked
 15889  0019F2  6F63               	movwf	(?_atoi+1)& (0+255),b
 15890  0019F4  0E05               	movlw	low _cmdbuf
 15891  0019F6  6F62               	movwf	?_atoi& (0+255),b
 15892  0019F8  ECD1  F026         	call	_atoi	;wreg free
 15893  0019FC  5162               	movf	?_atoi& (0+255),w,b
 15894  0019FE  0101               	movlb	1	; () banked
 15895  001A00  6F04               	movwf	_rwtimeout& (0+255),b
 15896                           
 15897                           ; BSR set to: 1
 15898                           ;main.c: 1305: if (rwtimeout < 20u) {
 15899  001A02  0E14               	movlw	20
 15900  001A04  6104               	cpfslt	_rwtimeout& (0+255),b
 15901  001A06  D001               	goto	l16226
 15902                           
 15903                           ; BSR set to: 1
 15904                           ;main.c: 1306: rwtimeout = 20u;
 15905  001A08  6F04               	movwf	_rwtimeout& (0+255),b
 15906  001A0A                     l16226:
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;main.c: 1307: }
 15910                           ;main.c: 1308: (Busy_eep(), Write_b_eep(0x09,rwtimeout));
 15911  001A0A  ECBC  F035         	call	_Busy_eep	;wreg free
 15912  001A0E  6A20               	clrf	?_Write_b_eep+1,c
 15913  001A10  0E09               	movlw	9
 15914  001A12  6E1F               	movwf	?_Write_b_eep,c
 15915  001A14  C104  F021         	movff	_rwtimeout,?_Write_b_eep+2
 15916  001A18  ECBB  F034         	call	_Write_b_eep	;wreg free
 15917                           
 15918                           ;main.c: 1309: putsUSART((char *) "+OK\r\n");
 15919  001A1C  0E7F               	movlw	high STR_9
 15920  001A1E  6E21               	movwf	?_putsUSART+1,c
 15921  001A20  0E6A               	movlw	low STR_9
 15922  001A22  6E20               	movwf	?_putsUSART,c
 15923  001A24  ECD5  F032         	call	_putsUSART	;wreg free
 15924                           
 15925                           ;main.c: 1310: }
 15926  001A28  D206               	goto	l16372
 15927  001A2A                     l16230:
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;main.c: 1312: else if (0 != stristr(cmdbuf, "STARTIF ")) {
 15931  001A2A  0E01               	movlw	high _cmdbuf
 15932  001A2C  0100               	movlb	0	; () banked
 15933  001A2E  6F67               	movwf	(?_stristr+1)& (0+255),b
 15934  001A30  0E05               	movlw	low _cmdbuf
 15935  001A32  6F66               	movwf	?_stristr& (0+255),b
 15936  001A34  0E7E               	movlw	high STR_140
 15937  001A36  6F69               	movwf	(?_stristr+3)& (0+255),b
 15938  001A38  0E9C               	movlw	low STR_140
 15939  001A3A  6F68               	movwf	(?_stristr+2)& (0+255),b
 15940  001A3C  ECFB  F02F         	call	_stristr	;wreg free
 15941  001A40  5167               	movf	(?_stristr+1)& (0+255),w,b
 15942  001A42  1166               	iorwf	?_stristr& (0+255),w,b
 15943  001A44  E05B               	bz	l16264
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;main.c: 1313: strcpy(cmdbuf, cmdbuf + 8);
 15947  001A46  DA4E               	call	PL22	;call to abstracted procedure
 15948  001A48  ECED  F034         	call	_strcpy	;wreg free
 15949                           
 15950                           ; BSR set to: 1
 15951                           ;main.c: 1314: if (0 != stristr(cmdbuf, "CLOSE")) {
 15952  001A4C  0E01               	movlw	high _cmdbuf
 15953  001A4E  0100               	movlb	0	; () banked
 15954  001A50  DAE3               	call	PL132	;call to abstracted procedure
 15955  001A52  ECFB  F02F         	call	_stristr	;wreg free
 15956  001A56  5167               	movf	(?_stristr+1)& (0+255),w,b
 15957  001A58  1166               	iorwf	?_stristr& (0+255),w,b
 15958  001A5A  E00A               	bz	l16240
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;main.c: 1315: (Busy_eep(), Write_b_eep(0x07,0));
 15962  001A5C  ECBC  F035         	call	_Busy_eep	;wreg free
 15963  001A60  6A20               	clrf	?_Write_b_eep+1,c
 15964  001A62  0E07               	movlw	7
 15965  001A64  6E1F               	movwf	?_Write_b_eep,c
 15966  001A66  0E00               	movlw	0
 15967  001A68  6A21               	clrf	?_Write_b_eep+2,c
 15968  001A6A  ECBB  F034         	call	_Write_b_eep	;wreg free
 15969                           
 15970                           ;main.c: 1316: }
 15971  001A6E  D1E3               	goto	l16372
 15972  001A70                     l16240:
 15973                           
 15974                           ; BSR set to: 0
 15975                           ;main.c: 1317: else if (0 != stristr(cmdbuf, "OPEN")) {
 15976  001A70  DAA0               	call	PL84	;call to abstracted procedure
 15977  001A72  ECFB  F02F         	call	_stristr	;wreg free
 15978  001A76  5167               	movf	(?_stristr+1)& (0+255),w,b
 15979  001A78  1166               	iorwf	?_stristr& (0+255),w,b
 15980  001A7A  E00A               	bz	l16246
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;main.c: 1318: (Busy_eep(), Write_b_eep(0x07,1));
 15984  001A7C  ECBC  F035         	call	_Busy_eep	;wreg free
 15985  001A80  6A20               	clrf	?_Write_b_eep+1,c
 15986  001A82  0E07               	movlw	7
 15987  001A84  6E1F               	movwf	?_Write_b_eep,c
 15988  001A86  0E01               	movlw	1
 15989  001A88  6E21               	movwf	?_Write_b_eep+2,c
 15990  001A8A  ECBB  F034         	call	_Write_b_eep	;wreg free
 15991                           
 15992                           ;main.c: 1319: }
 15993  001A8E  D1D3               	goto	l16372
 15994  001A90                     l16246:
 15995                           
 15996                           ; BSR set to: 0
 15997                           ;main.c: 1320: else if (0 != stristr(cmdbuf, "SILENT")) {
 15998  001A90  0E01               	movlw	high _cmdbuf
 15999  001A92  DA99               	call	PL112	;call to abstracted procedure
 16000  001A94  ECFB  F02F         	call	_stristr	;wreg free
 16001  001A98  5167               	movf	(?_stristr+1)& (0+255),w,b
 16002  001A9A  1166               	iorwf	?_stristr& (0+255),w,b
 16003  001A9C  E00A               	bz	l16252
 16004                           
 16005                           ; BSR set to: 0
 16006                           ;main.c: 1321: (Busy_eep(), Write_b_eep(0x07,2));
 16007  001A9E  ECBC  F035         	call	_Busy_eep	;wreg free
 16008  001AA2  6A20               	clrf	?_Write_b_eep+1,c
 16009  001AA4  0E07               	movlw	7
 16010  001AA6  6E1F               	movwf	?_Write_b_eep,c
 16011  001AA8  0E02               	movlw	2
 16012  001AAA  6E21               	movwf	?_Write_b_eep+2,c
 16013  001AAC  ECBB  F034         	call	_Write_b_eep	;wreg free
 16014                           
 16015                           ;main.c: 1322: }
 16016  001AB0  D1C2               	goto	l16372
 16017  001AB2                     l16252:
 16018                           
 16019                           ; BSR set to: 0
 16020                           ;main.c: 1323: else if (0 != stristr(cmdbuf, "LISTEN")) {
 16021  001AB2  0E01               	movlw	high _cmdbuf
 16022  001AB4  0100               	movlb	0	; () banked
 16023  001AB6  DAA0               	call	PL124	;call to abstracted procedure
 16024  001AB8  ECFB  F02F         	call	_stristr	;wreg free
 16025  001ABC  5167               	movf	(?_stristr+1)& (0+255),w,b
 16026  001ABE  1166               	iorwf	?_stristr& (0+255),w,b
 16027  001AC0  E00A               	bz	l16258
 16028                           
 16029                           ; BSR set to: 0
 16030                           ;main.c: 1324: (Busy_eep(), Write_b_eep(0x07,3));
 16031  001AC2  ECBC  F035         	call	_Busy_eep	;wreg free
 16032  001AC6  6A20               	clrf	?_Write_b_eep+1,c
 16033  001AC8  0E07               	movlw	7
 16034  001ACA  6E1F               	movwf	?_Write_b_eep,c
 16035  001ACC  0E03               	movlw	3
 16036  001ACE  6E21               	movwf	?_Write_b_eep+2,c
 16037  001AD0  ECBB  F034         	call	_Write_b_eep	;wreg free
 16038                           
 16039                           ;main.c: 1325: }
 16040  001AD4  D1B0               	goto	l16372
 16041  001AD6                     l16258:
 16042                           
 16043                           ; BSR set to: 0
 16044                           ;main.c: 1326: else if (0 != stristr(cmdbuf, "LOOPBACK")) {
 16045  001AD6  0E01               	movlw	high _cmdbuf
 16046  001AD8  0100               	movlb	0	; () banked
 16047  001ADA  DA96               	call	PL128	;call to abstracted procedure
 16048  001ADC  ECFB  F02F         	call	_stristr	;wreg free
 16049  001AE0  5167               	movf	(?_stristr+1)& (0+255),w,b
 16050  001AE2  1166               	iorwf	?_stristr& (0+255),w,b
 16051  001AE4  E101 D1A7          	bz	l16372
 16052                           
 16053                           ; BSR set to: 0
 16054                           ;main.c: 1327: (Busy_eep(), Write_b_eep(0x07,4));
 16055  001AE8  ECBC  F035         	call	_Busy_eep	;wreg free
 16056  001AEC  6A20               	clrf	?_Write_b_eep+1,c
 16057  001AEE  0E07               	movlw	7
 16058  001AF0  6E1F               	movwf	?_Write_b_eep,c
 16059  001AF2  0E04               	movlw	4
 16060  001AF4  6E21               	movwf	?_Write_b_eep+2,c
 16061  001AF6  ECBB  F034         	call	_Write_b_eep	;wreg free
 16062                           
 16063                           ; BSR set to: 0
 16064  001AFA  D19D               	goto	l16372
 16065  001AFC                     l16264:
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;main.c: 1330: else if (0 != stristr(cmdbuf, "MODE ")) {
 16069  001AFC  0E01               	movlw	high _cmdbuf
 16070  001AFE  0100               	movlb	0	; () banked
 16071  001B00  6F67               	movwf	(?_stristr+1)& (0+255),b
 16072  001B02  0E05               	movlw	low _cmdbuf
 16073  001B04  6F66               	movwf	?_stristr& (0+255),b
 16074  001B06  0E7F               	movlw	high STR_146
 16075  001B08  6F69               	movwf	(?_stristr+3)& (0+255),b
 16076  001B0A  0E76               	movlw	low STR_146
 16077  001B0C  6F68               	movwf	(?_stristr+2)& (0+255),b
 16078  001B0E  ECFB  F02F         	call	_stristr	;wreg free
 16079  001B12  5167               	movf	(?_stristr+1)& (0+255),w,b
 16080  001B14  1166               	iorwf	?_stristr& (0+255),w,b
 16081  001B16  E064               	bz	l16294
 16082                           
 16083                           ; BSR set to: 0
 16084                           ;main.c: 1331: strcpy(cmdbuf, cmdbuf + 5);
 16085  001B18  0101               	movlb	1	; () banked
 16086  001B1A  D9B2               	call	PL8	;call to abstracted procedure
 16087  001B1C  ECED  F034         	call	_strcpy	;wreg free
 16088                           
 16089                           ; BSR set to: 1
 16090                           ;main.c: 1332: if (0 != stristr(cmdbuf, "VERBOSE")) {
 16091  001B20  0E01               	movlw	high _cmdbuf
 16092  001B22  0100               	movlb	0	; () banked
 16093  001B24  6F67               	movwf	(?_stristr+1)& (0+255),b
 16094  001B26  0E05               	movlw	low _cmdbuf
 16095  001B28  6F66               	movwf	?_stristr& (0+255),b
 16096  001B2A  0E7E               	movlw	high STR_147
 16097  001B2C  6F69               	movwf	(?_stristr+3)& (0+255),b
 16098  001B2E  0EE8               	movlw	low STR_147
 16099  001B30  6F68               	movwf	(?_stristr+2)& (0+255),b
 16100  001B32  ECFB  F02F         	call	_stristr	;wreg free
 16101  001B36  5167               	movf	(?_stristr+1)& (0+255),w,b
 16102  001B38  1166               	iorwf	?_stristr& (0+255),w,b
 16103  001B3A  E011               	bz	l16278
 16104                           
 16105                           ; BSR set to: 0
 16106                           ;main.c: 1333: mode = 0;
 16107  001B3C  6BF1               	clrf	_mode& (0+255),b
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;main.c: 1334: (Busy_eep(), Write_b_eep(0x03,0));
 16111  001B3E  ECBC  F035         	call	_Busy_eep	;wreg free
 16112  001B42  6A20               	clrf	?_Write_b_eep+1,c
 16113  001B44  0E03               	movlw	3
 16114  001B46  6E1F               	movwf	?_Write_b_eep,c
 16115  001B48  0E00               	movlw	0
 16116  001B4A  6A21               	clrf	?_Write_b_eep+2,c
 16117  001B4C  ECBB  F034         	call	_Write_b_eep	;wreg free
 16118                           
 16119                           ;main.c: 1335: putsUSART((char *) "+OK - Mode is now verbose\r\n");
 16120  001B50  0E7A               	movlw	high STR_148
 16121  001B52  6E21               	movwf	?_putsUSART+1,c
 16122  001B54  0E46               	movlw	low STR_148
 16123  001B56  6E20               	movwf	?_putsUSART,c
 16124  001B58  ECD5  F032         	call	_putsUSART	;wreg free
 16125                           
 16126                           ;main.c: 1336: }
 16127  001B5C  D16C               	goto	l16372
 16128  001B5E                     l16278:
 16129                           
 16130                           ; BSR set to: 0
 16131                           ;main.c: 1337: else if (0 != stristr(cmdbuf, "VSCP")) {
 16132  001B5E  0E01               	movlw	high _cmdbuf
 16133  001B60  0100               	movlb	0	; () banked
 16134  001B62  6F67               	movwf	(?_stristr+1)& (0+255),b
 16135  001B64  0E05               	movlw	low _cmdbuf
 16136  001B66  6F66               	movwf	?_stristr& (0+255),b
 16137  001B68  0E7F               	movlw	high STR_149
 16138  001B6A  6F69               	movwf	(?_stristr+3)& (0+255),b
 16139  001B6C  0EB1               	movlw	low STR_149
 16140  001B6E  6F68               	movwf	(?_stristr+2)& (0+255),b
 16141  001B70  ECFB  F02F         	call	_stristr	;wreg free
 16142  001B74  5167               	movf	(?_stristr+1)& (0+255),w,b
 16143  001B76  1166               	iorwf	?_stristr& (0+255),w,b
 16144  001B78  E012               	bz	l16286
 16145                           
 16146                           ; BSR set to: 0
 16147                           ;main.c: 1338: mode = 1;
 16148  001B7A  0E01               	movlw	1
 16149  001B7C  6FF1               	movwf	_mode& (0+255),b
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;main.c: 1339: (Busy_eep(), Write_b_eep(0x03,1));
 16153  001B7E  ECBC  F035         	call	_Busy_eep	;wreg free
 16154  001B82  6A20               	clrf	?_Write_b_eep+1,c
 16155  001B84  0E03               	movlw	3
 16156  001B86  6E1F               	movwf	?_Write_b_eep,c
 16157  001B88  0E01               	movlw	1
 16158  001B8A  6E21               	movwf	?_Write_b_eep+2,c
 16159  001B8C  ECBB  F034         	call	_Write_b_eep	;wreg free
 16160                           
 16161                           ;main.c: 1340: putsUSART((char *) "+OK - Mode is now VSCP Driver\r\n");
 16162  001B90  0E79               	movlw	high STR_150
 16163  001B92  6E21               	movwf	?_putsUSART+1,c
 16164  001B94  0EAE               	movlw	low STR_150
 16165  001B96  6E20               	movwf	?_putsUSART,c
 16166  001B98  ECD5  F032         	call	_putsUSART	;wreg free
 16167                           
 16168                           ;main.c: 1341: }
 16169  001B9C  D14C               	goto	l16372
 16170  001B9E                     l16286:
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;main.c: 1342: else if (0 != stristr(cmdbuf, "SLCAN")) {
 16174  001B9E  0E01               	movlw	high _cmdbuf
 16175  001BA0  0100               	movlb	0	; () banked
 16176  001BA2  6F67               	movwf	(?_stristr+1)& (0+255),b
 16177  001BA4  0E05               	movlw	low _cmdbuf
 16178  001BA6  6F66               	movwf	?_stristr& (0+255),b
 16179  001BA8  0E7F               	movlw	high STR_151
 16180  001BAA  6F69               	movwf	(?_stristr+3)& (0+255),b
 16181  001BAC  0E88               	movlw	low STR_151
 16182  001BAE  6F68               	movwf	(?_stristr+2)& (0+255),b
 16183  001BB0  ECFB  F02F         	call	_stristr	;wreg free
 16184  001BB4  5167               	movf	(?_stristr+1)& (0+255),w,b
 16185  001BB6  1166               	iorwf	?_stristr& (0+255),w,b
 16186  001BB8  E101 D13D          	bz	l16372
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;main.c: 1343: mode = 2;
 16190  001BBC  0E02               	movlw	2
 16191  001BBE  6FF1               	movwf	_mode& (0+255),b
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;main.c: 1344: (Busy_eep(), Write_b_eep(0x03,2));
 16195  001BC0  ECBC  F035         	call	_Busy_eep	;wreg free
 16196  001BC4  6A20               	clrf	?_Write_b_eep+1,c
 16197  001BC6  0E03               	movlw	3
 16198  001BC8  6E1F               	movwf	?_Write_b_eep,c
 16199  001BCA  0E02               	movlw	2
 16200  001BCC  6E21               	movwf	?_Write_b_eep+2,c
 16201  001BCE  ECBB  F034         	call	_Write_b_eep	;wreg free
 16202                           
 16203                           ;main.c: 1345: putsUSART((char *) "+OK - Mode is now SLCAN\r\n");
 16204  001BD2  0E7A               	movlw	high STR_152
 16205  001BD4  6E21               	movwf	?_putsUSART+1,c
 16206  001BD6  0ECE               	movlw	low STR_152
 16207  001BD8  6E20               	movwf	?_putsUSART,c
 16208  001BDA  ECD5  F032         	call	_putsUSART	;wreg free
 16209  001BDE  D12B               	goto	l16372
 16210  001BE0                     l16294:
 16211                           
 16212                           ; BSR set to: 0
 16213                           ;main.c: 1349: else if (cmdbuf == stristr(cmdbuf, "ECHO ")) {
 16214  001BE0  0E01               	movlw	high _cmdbuf
 16215  001BE2  0100               	movlb	0	; () banked
 16216  001BE4  6F67               	movwf	(?_stristr+1)& (0+255),b
 16217  001BE6  0E05               	movlw	low _cmdbuf
 16218  001BE8  6F66               	movwf	?_stristr& (0+255),b
 16219  001BEA  0E7F               	movlw	high STR_153
 16220  001BEC  6F69               	movwf	(?_stristr+3)& (0+255),b
 16221  001BEE  0E7C               	movlw	low STR_153
 16222  001BF0  6F68               	movwf	(?_stristr+2)& (0+255),b
 16223  001BF2  ECFB  F02F         	call	_stristr	;wreg free
 16224  001BF6  D92B               	call	PL2	;call to abstracted procedure
 16225  001BF8  E104               	bnz	u20875
 16226  001BFA  0100               	movlb	0	; () banked
 16227  001BFC  5166               	movf	?_stristr& (0+255),w,b
 16228  001BFE  0101               	movlb	1	; () banked
 16229  001C00  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 16230  001C02                     u20875:
 16231  001C02  E13F               	bnz	l16318
 16232                           
 16233                           ; BSR set to: 1
 16234                           ;main.c: 1350: strcpy(cmdbuf, cmdbuf + 5);
 16235  001C04  D93D               	call	PL8	;call to abstracted procedure
 16236  001C06  ECED  F034         	call	_strcpy	;wreg free
 16237                           
 16238                           ; BSR set to: 1
 16239                           ;main.c: 1351: if (0 != stristr(cmdbuf, "ON")) {
 16240  001C0A  0E01               	movlw	high _cmdbuf
 16241  001C0C  0100               	movlb	0	; () banked
 16242  001C0E  D9EC               	call	PL120	;call to abstracted procedure
 16243  001C10  ECFB  F02F         	call	_stristr	;wreg free
 16244  001C14  5167               	movf	(?_stristr+1)& (0+255),w,b
 16245  001C16  1166               	iorwf	?_stristr& (0+255),w,b
 16246  001C18  E013               	bz	l16306
 16247                           
 16248                           ; BSR set to: 0
 16249                           ;main.c: 1352: bLocalEcho = 1;
 16250  001C1A  0E01               	movlw	1
 16251  001C1C  0101               	movlb	1	; () banked
 16252  001C1E  6F01               	movwf	_bLocalEcho& (0+255),b
 16253                           
 16254                           ; BSR set to: 1
 16255                           ;main.c: 1353: (Busy_eep(), Write_b_eep(0x65,1));
 16256  001C20  ECBC  F035         	call	_Busy_eep	;wreg free
 16257  001C24  6A20               	clrf	?_Write_b_eep+1,c
 16258  001C26  0E65               	movlw	101
 16259  001C28  6E1F               	movwf	?_Write_b_eep,c
 16260  001C2A  0E01               	movlw	1
 16261  001C2C  6E21               	movwf	?_Write_b_eep+2,c
 16262  001C2E  ECBB  F034         	call	_Write_b_eep	;wreg free
 16263                           
 16264                           ;main.c: 1354: putsUSART((char *) "+OK - Local echo on\r\n");
 16265  001C32  0E7C               	movlw	high STR_155
 16266  001C34  6E21               	movwf	?_putsUSART+1,c
 16267  001C36  0E7B               	movlw	low STR_155
 16268  001C38  6E20               	movwf	?_putsUSART,c
 16269  001C3A  ECD5  F032         	call	_putsUSART	;wreg free
 16270                           
 16271                           ;main.c: 1355: }
 16272  001C3E  D0FB               	goto	l16372
 16273  001C40                     l16306:
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;main.c: 1356: else if (0 != stristr(cmdbuf, "OFF")) {
 16277  001C40  0E01               	movlw	high _cmdbuf
 16278  001C42  0100               	movlb	0	; () banked
 16279  001C44  D9C9               	call	PL118	;call to abstracted procedure
 16280  001C46  ECFB  F02F         	call	_stristr	;wreg free
 16281  001C4A  5167               	movf	(?_stristr+1)& (0+255),w,b
 16282  001C4C  1166               	iorwf	?_stristr& (0+255),w,b
 16283  001C4E  E012               	bz	l16316
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;main.c: 1357: bLocalEcho = 0;
 16287  001C50  0101               	movlb	1	; () banked
 16288  001C52  6B01               	clrf	_bLocalEcho& (0+255),b
 16289                           
 16290                           ; BSR set to: 1
 16291                           ;main.c: 1358: (Busy_eep(), Write_b_eep(0x65,0));
 16292  001C54  ECBC  F035         	call	_Busy_eep	;wreg free
 16293  001C58  6A20               	clrf	?_Write_b_eep+1,c
 16294  001C5A  0E65               	movlw	101
 16295  001C5C  6E1F               	movwf	?_Write_b_eep,c
 16296  001C5E  0E00               	movlw	0
 16297  001C60  6A21               	clrf	?_Write_b_eep+2,c
 16298  001C62  ECBB  F034         	call	_Write_b_eep	;wreg free
 16299                           
 16300                           ;main.c: 1359: putsUSART((char *) "+OK - Local echo off\r\n");
 16301  001C66  0E7C               	movlw	high STR_157
 16302  001C68  6E21               	movwf	?_putsUSART+1,c
 16303  001C6A  0E0A               	movlw	low STR_157
 16304  001C6C  6E20               	movwf	?_putsUSART,c
 16305  001C6E  ECD5  F032         	call	_putsUSART	;wreg free
 16306                           
 16307                           ;main.c: 1360: }
 16308  001C72  D0E1               	goto	l16372
 16309  001C74                     l16316:
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;main.c: 1361: else {
 16313                           ;main.c: 1362: putsUSART((char *) "+ERROR - Wrong argument to 'set echo'.\r\n");
 16314  001C74  0E76               	movlw	high STR_158
 16315  001C76  6E21               	movwf	?_putsUSART+1,c
 16316  001C78  0E0C               	movlw	low STR_158
 16317  001C7A  6E20               	movwf	?_putsUSART,c
 16318  001C7C  ECD5  F032         	call	_putsUSART	;wreg free
 16319  001C80  D0DA               	goto	l16372
 16320  001C82                     l16318:
 16321                           
 16322                           ; BSR set to: 1
 16323                           ;main.c: 1366: else if (cmdbuf == stristr(cmdbuf, "TIMESTAMP ")) {
 16324  001C82  0E01               	movlw	high _cmdbuf
 16325  001C84  0100               	movlb	0	; () banked
 16326  001C86  6F67               	movwf	(?_stristr+1)& (0+255),b
 16327  001C88  0E05               	movlw	low _cmdbuf
 16328  001C8A  6F66               	movwf	?_stristr& (0+255),b
 16329  001C8C  0E7E               	movlw	high STR_159
 16330  001C8E  6F69               	movwf	(?_stristr+3)& (0+255),b
 16331  001C90  0E3E               	movlw	low STR_159
 16332  001C92  6F68               	movwf	(?_stristr+2)& (0+255),b
 16333  001C94  ECFB  F02F         	call	_stristr	;wreg free
 16334  001C98  D8DA               	call	PL2	;call to abstracted procedure
 16335  001C9A  E104               	bnz	u20905
 16336  001C9C  0100               	movlb	0	; () banked
 16337  001C9E  5166               	movf	?_stristr& (0+255),w,b
 16338  001CA0  0101               	movlb	1	; () banked
 16339  001CA2  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 16340  001CA4                     u20905:
 16341  001CA4  E13E               	bnz	l16342
 16342                           
 16343                           ; BSR set to: 1
 16344                           ;main.c: 1367: strcpy(cmdbuf, cmdbuf + 10);
 16345  001CA6  0E01               	movlw	high _cmdbuf
 16346  001CA8  D96D               	call	PL74	;call to abstracted procedure
 16347  001CAA  ECED  F034         	call	_strcpy	;wreg free
 16348                           
 16349                           ; BSR set to: 1
 16350                           ;main.c: 1368: if (0 != stristr(cmdbuf, "ON")) {
 16351  001CAE  0E01               	movlw	high _cmdbuf
 16352  001CB0  0100               	movlb	0	; () banked
 16353  001CB2  D99A               	call	PL120	;call to abstracted procedure
 16354  001CB4  ECFB  F02F         	call	_stristr	;wreg free
 16355  001CB8  5167               	movf	(?_stristr+1)& (0+255),w,b
 16356  001CBA  1166               	iorwf	?_stristr& (0+255),w,b
 16357  001CBC  E012               	bz	l16330
 16358                           
 16359                           ; BSR set to: 0
 16360                           ;main.c: 1369: bTimestamp = 1;
 16361  001CBE  0E01               	movlw	1
 16362  001CC0  6FF0               	movwf	_bTimestamp& (0+255),b
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;main.c: 1370: (Busy_eep(), Write_b_eep(0x66,1));
 16366  001CC2  ECBC  F035         	call	_Busy_eep	;wreg free
 16367  001CC6  6A20               	clrf	?_Write_b_eep+1,c
 16368  001CC8  0E66               	movlw	102
 16369  001CCA  6E1F               	movwf	?_Write_b_eep,c
 16370  001CCC  0E01               	movlw	1
 16371  001CCE  6E21               	movwf	?_Write_b_eep+2,c
 16372  001CD0  ECBB  F034         	call	_Write_b_eep	;wreg free
 16373                           
 16374                           ;main.c: 1371: putsUSART((char *) "+OK - Timestamp on\r\n");
 16375  001CD4  0E7C               	movlw	high STR_161
 16376  001CD6  6E21               	movwf	?_putsUSART+1,c
 16377  001CD8  0EA7               	movlw	low STR_161
 16378  001CDA  6E20               	movwf	?_putsUSART,c
 16379  001CDC  ECD5  F032         	call	_putsUSART	;wreg free
 16380                           
 16381                           ;main.c: 1372: }
 16382  001CE0  D0AA               	goto	l16372
 16383  001CE2                     l16330:
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;main.c: 1373: else if (0 != stristr(cmdbuf, "OFF")) {
 16387  001CE2  0E01               	movlw	high _cmdbuf
 16388  001CE4  0100               	movlb	0	; () banked
 16389  001CE6  D978               	call	PL118	;call to abstracted procedure
 16390  001CE8  ECFB  F02F         	call	_stristr	;wreg free
 16391  001CEC  5167               	movf	(?_stristr+1)& (0+255),w,b
 16392  001CEE  1166               	iorwf	?_stristr& (0+255),w,b
 16393  001CF0  E011               	bz	l16340
 16394                           
 16395                           ; BSR set to: 0
 16396                           ;main.c: 1374: bTimestamp = 0;
 16397  001CF2  6BF0               	clrf	_bTimestamp& (0+255),b
 16398                           
 16399                           ; BSR set to: 0
 16400                           ;main.c: 1375: (Busy_eep(), Write_b_eep(0x66,0));
 16401  001CF4  ECBC  F035         	call	_Busy_eep	;wreg free
 16402  001CF8  6A20               	clrf	?_Write_b_eep+1,c
 16403  001CFA  0E66               	movlw	102
 16404  001CFC  6E1F               	movwf	?_Write_b_eep,c
 16405  001CFE  0E00               	movlw	0
 16406  001D00  6A21               	clrf	?_Write_b_eep+2,c
 16407  001D02  ECBB  F034         	call	_Write_b_eep	;wreg free
 16408                           
 16409                           ;main.c: 1376: putsUSART((char *) "+OK - Timestamp off\r\n");
 16410  001D06  0E7C               	movlw	high STR_163
 16411  001D08  6E21               	movwf	?_putsUSART+1,c
 16412  001D0A  0E65               	movlw	low STR_163
 16413  001D0C  6E20               	movwf	?_putsUSART,c
 16414  001D0E  ECD5  F032         	call	_putsUSART	;wreg free
 16415                           
 16416                           ;main.c: 1377: }
 16417  001D12  D091               	goto	l16372
 16418  001D14                     l16340:
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;main.c: 1378: else {
 16422                           ;main.c: 1379: putsUSART((char *) "+ERROR - Wrong argument to 'set timestamp'.\r\n");
 16423  001D14  0E75               	movlw	high STR_164
 16424  001D16  6E21               	movwf	?_putsUSART+1,c
 16425  001D18  0E02               	movlw	low STR_164
 16426  001D1A  6E20               	movwf	?_putsUSART,c
 16427  001D1C  ECD5  F032         	call	_putsUSART	;wreg free
 16428  001D20  D08A               	goto	l16372
 16429  001D22                     l16342:
 16430                           
 16431                           ; BSR set to: 1
 16432                           ;main.c: 1383: else if (cmdbuf == stristr(cmdbuf, "BAUDRATE ")) {
 16433  001D22  0E01               	movlw	high _cmdbuf
 16434  001D24  0100               	movlb	0	; () banked
 16435  001D26  6F67               	movwf	(?_stristr+1)& (0+255),b
 16436  001D28  0E05               	movlw	low _cmdbuf
 16437  001D2A  6F66               	movwf	?_stristr& (0+255),b
 16438  001D2C  0E7E               	movlw	high STR_165
 16439  001D2E  6F69               	movwf	(?_stristr+3)& (0+255),b
 16440  001D30  0E7E               	movlw	low STR_165
 16441  001D32  6F68               	movwf	(?_stristr+2)& (0+255),b
 16442  001D34  ECFB  F02F         	call	_stristr	;wreg free
 16443  001D38  D88A               	call	PL2	;call to abstracted procedure
 16444  001D3A  E104               	bnz	u20935
 16445  001D3C  0100               	movlb	0	; () banked
 16446  001D3E  5166               	movf	?_stristr& (0+255),w,b
 16447  001D40  0101               	movlb	1	; () banked
 16448  001D42  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 16449  001D44                     u20935:
 16450  001D44  E13A               	bnz	l16356
 16451                           
 16452                           ; BSR set to: 1
 16453                           ;main.c: 1385: uint32_t baudcode;
 16454                           ;main.c: 1386: strcpy( cmdbuf, cmdbuf + 9 );
 16455  001D46  0E01               	movlw	high _cmdbuf
 16456  001D48  6E20               	movwf	?_strcpy+1,c
 16457  001D4A  0E05               	movlw	low _cmdbuf
 16458  001D4C  6E1F               	movwf	?_strcpy,c
 16459  001D4E  0E0E               	movlw	low (_cmdbuf+9)
 16460  001D50  6FB3               	movwf	??_doModeVerbose& (0+255),b
 16461  001D52  0E01               	movlw	high (_cmdbuf+9)
 16462  001D54  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 16463  001D56  C1B3  F021         	movff	??_doModeVerbose,?_strcpy+2
 16464  001D5A  C1B4  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16465  001D5E  ECED  F034         	call	_strcpy	;wreg free
 16466                           
 16467                           ; BSR set to: 1
 16468                           ;main.c: 1388: baudcode = atoi( cmdbuf );
 16469  001D62  0E01               	movlw	high _cmdbuf
 16470  001D64  0100               	movlb	0	; () banked
 16471  001D66  6F63               	movwf	(?_atoi+1)& (0+255),b
 16472  001D68  0E05               	movlw	low _cmdbuf
 16473  001D6A  6F62               	movwf	?_atoi& (0+255),b
 16474  001D6C  ECD1  F026         	call	_atoi	;wreg free
 16475  001D70  C062  F2B4         	movff	?_atoi,doModeVerbose@baudcode
 16476  001D74  0102               	movlb	2	; () banked
 16477  001D76  C063  F2B5         	movff	?_atoi+1,doModeVerbose@baudcode+1
 16478  001D7A  0E00               	movlw	0
 16479  001D7C  BFB5               	btfsc	(doModeVerbose@baudcode+1)& (0+255),7,b
 16480  001D7E  0EFF               	movlw	-1
 16481  001D80  6FB6               	movwf	(doModeVerbose@baudcode+2)& (0+255),b
 16482  001D82  6FB7               	movwf	(doModeVerbose@baudcode+3)& (0+255),b
 16483                           
 16484                           ; BSR set to: 2
 16485                           ;main.c: 1389: if ( baudcode < 13 ) {
 16486  001D84  0E0D               	movlw	13
 16487  001D86  5DB4               	subwf	doModeVerbose@baudcode& (0+255),w,b
 16488  001D88  0E00               	movlw	0
 16489  001D8A  59B5               	subwfb	(doModeVerbose@baudcode+1)& (0+255),w,b
 16490  001D8C  0E00               	movlw	0
 16491  001D8E  59B6               	subwfb	(doModeVerbose@baudcode+2)& (0+255),w,b
 16492  001D90  0E00               	movlw	0
 16493  001D92  59B7               	subwfb	(doModeVerbose@baudcode+3)& (0+255),w,b
 16494  001D94  E20B               	bc	l16354
 16495                           
 16496                           ; BSR set to: 2
 16497                           ;main.c: 1390: putsUSART((char *) "+OK - New baudrate will be set.\r\n");
 16498  001D96  0E78               	movlw	high STR_166
 16499  001D98  6E21               	movwf	?_putsUSART+1,c
 16500  001D9A  0EE6               	movlw	low STR_166
 16501  001D9C  6E20               	movwf	?_putsUSART,c
 16502  001D9E  ECD5  F032         	call	_putsUSART	;wreg free
 16503                           
 16504                           ;main.c: 1391: changeBaudrate( baudcode );
 16505  001DA2  0102               	movlb	2	; () banked
 16506  001DA4  51B4               	movf	doModeVerbose@baudcode& (0+255),w,b
 16507  001DA6  ECBD  F02F         	call	_changeBaudrate
 16508                           
 16509                           ;main.c: 1392: }
 16510  001DAA  D045               	goto	l16372
 16511  001DAC                     l16354:
 16512                           
 16513                           ; BSR set to: 2
 16514                           ;main.c: 1393: else {
 16515                           ;main.c: 1394: putsUSART((char *) "+ERROR - Invalid baudrate.\r\n");
 16516  001DAC  0E7A               	movlw	high STR_167
 16517  001DAE  6E21               	movwf	?_putsUSART+1,c
 16518  001DB0  0E0C               	movlw	low STR_167
 16519  001DB2  6E20               	movwf	?_putsUSART,c
 16520  001DB4  ECD5  F032         	call	_putsUSART	;wreg free
 16521  001DB8  D03E               	goto	l16372
 16522  001DBA                     l16356:
 16523                           
 16524                           ; BSR set to: 1
 16525                           ;main.c: 1399: else if (cmdbuf == stristr(cmdbuf, "DEFAULTS")) {
 16526  001DBA  0E01               	movlw	high _cmdbuf
 16527  001DBC  0100               	movlb	0	; () banked
 16528  001DBE  6F67               	movwf	(?_stristr+1)& (0+255),b
 16529  001DC0  0E05               	movlw	low _cmdbuf
 16530  001DC2  6F66               	movwf	?_stristr& (0+255),b
 16531  001DC4  0E7E               	movlw	high STR_168
 16532  001DC6  6F69               	movwf	(?_stristr+3)& (0+255),b
 16533  001DC8  0EB7               	movlw	low STR_168
 16534  001DCA  6F68               	movwf	(?_stristr+2)& (0+255),b
 16535  001DCC  ECFB  F02F         	call	_stristr	;wreg free
 16536  001DD0  D83E               	call	PL2	;call to abstracted procedure
 16537  001DD2  E104               	bnz	u20955
 16538  001DD4  0100               	movlb	0	; () banked
 16539  001DD6  5166               	movf	?_stristr& (0+255),w,b
 16540  001DD8  0101               	movlb	1	; () banked
 16541  001DDA  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 16542  001DDC                     u20955:
 16543  001DDC  E103               	bnz	l16360
 16544                           
 16545                           ; BSR set to: 1
 16546                           ;main.c: 1400: vscp_restoreDefaults();
 16547  001DDE  ECB8  F035         	call	_vscp_restoreDefaults	;wreg free
 16548                           
 16549                           ;main.c: 1401: }
 16550  001DE2  D029               	goto	l16372
 16551  001DE4                     l16360:
 16552                           
 16553                           ; BSR set to: 1
 16554                           ;main.c: 1403: else if (cmdbuf == stristr(cmdbuf, "?")) {
 16555  001DE4  0E01               	movlw	high _cmdbuf
 16556  001DE6  0100               	movlb	0	; () banked
 16557  001DE8  6F67               	movwf	(?_stristr+1)& (0+255),b
 16558  001DEA  0E05               	movlw	low _cmdbuf
 16559  001DEC  6F66               	movwf	?_stristr& (0+255),b
 16560  001DEE  0E7F               	movlw	high STR_169
 16561  001DF0  6F69               	movwf	(?_stristr+3)& (0+255),b
 16562  001DF2  0EFC               	movlw	low STR_169
 16563  001DF4  6F68               	movwf	(?_stristr+2)& (0+255),b
 16564  001DF6  ECFB  F02F         	call	_stristr	;wreg free
 16565  001DFA  D829               	call	PL2	;call to abstracted procedure
 16566  001DFC  E104               	bnz	u20965
 16567  001DFE  0100               	movlb	0	; () banked
 16568  001E00  5166               	movf	?_stristr& (0+255),w,b
 16569  001E02  0101               	movlb	1	; () banked
 16570  001E04  19B3               	xorwf	??_doModeVerbose& (0+255),w,b
 16571  001E06                     u20965:
 16572  001E06  E017               	bz	l16372
 16573                           
 16574                           ; BSR set to: 1
 16575                           ;main.c: 1406: else {
 16576                           ;main.c: 1407: putsUSART((char *) "-ERROR - Unknown 'SET' command\r\n");
 16577  001E08  0E79               	movlw	high STR_170
 16578  001E0A  6E21               	movwf	?_putsUSART+1,c
 16579  001E0C  0E6C               	movlw	low STR_170
 16580  001E0E  6E20               	movwf	?_putsUSART,c
 16581  001E10  ECD5  F032         	call	_putsUSART	;wreg free
 16582  001E14  D010               	goto	l16372
 16583  001E16                     l16366:
 16584                           
 16585                           ; BSR set to: 1
 16586                           ;main.c: 1411: else {
 16587                           ;main.c: 1412: if ( 0x0d == cmdbuf[ 0 ] ) {
 16588  001E16  5105               	movf	_cmdbuf& (0+255),w,b
 16589  001E18  0A0D               	xorlw	13
 16590  001E1A  E107               	bnz	l16370
 16591                           
 16592                           ; BSR set to: 1
 16593                           ;main.c: 1413: putsUSART((char *) "+OK\r\n");
 16594  001E1C  0E7F               	movlw	high STR_9
 16595  001E1E  6E21               	movwf	?_putsUSART+1,c
 16596  001E20  0E6A               	movlw	low STR_9
 16597  001E22  6E20               	movwf	?_putsUSART,c
 16598  001E24  ECD5  F032         	call	_putsUSART	;wreg free
 16599                           
 16600                           ;main.c: 1414: }
 16601  001E28  D006               	goto	l16372
 16602  001E2A                     l16370:
 16603                           
 16604                           ; BSR set to: 1
 16605                           ;main.c: 1415: else {
 16606                           ;main.c: 1416: putsUSART((char *) "-ERROR - Unknown command\r\n");
 16607  001E2A  0E7A               	movlw	high STR_172
 16608  001E2C  6E21               	movwf	?_putsUSART+1,c
 16609  001E2E  0E98               	movlw	low STR_172
 16610  001E30  6E20               	movwf	?_putsUSART,c
 16611  001E32  ECD5  F032         	call	_putsUSART	;wreg free
 16612  001E36                     l16372:
 16613                           
 16614                           ;main.c: 1417: }
 16615                           ;main.c: 1418: }
 16616                           ;main.c: 1420: memset( cmdbuf, 0, sizeof( cmdbuf ) );
 16617  001E36  0101               	movlb	1	; () banked
 16618  001E38  0E01               	movlw	high _cmdbuf
 16619  001E3A  6E20               	movwf	?_memset+1,c
 16620  001E3C  0E05               	movlw	low _cmdbuf
 16621  001E3E  ECE8  F02E         	call	PL30	;call to abstracted procedure
 16622  001E42  EC04  F035         	call	_memset	;wreg free
 16623                           
 16624                           ;main.c: 1421: pos = 0;
 16625  001E46  0101               	movlb	1	; () banked
 16626  001E48  6B03               	clrf	_pos& (0+255),b
 16627  001E4A                     l16376:
 16628                           
 16629                           ;main.c: 1422: }
 16630                           ;main.c: 1423: }
 16631                           ;main.c: 1426: (INTCONbits.GIE = 1);
 16632  001E4A  8EF2               	bsf	intcon,7,c	;volatile
 16633  001E4C                     l588:
 16634  001E4C  0012               	return	
 16635  001E4E                     __end_of_doModeVerbose:
 16636                           	opt stack 0
 16637  001E4E                     PL2:
 16638                           	opt stack 20
 16639  001E4E  0E05               	movlw	low _cmdbuf
 16640  001E50  0101               	movlb	1	; () banked
 16641  001E52  6FB3               	movwf	??_doModeVerbose& (0+255),b
 16642  001E54  0E01               	movlw	high _cmdbuf
 16643  001E56  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 16644  001E58  0100               	movlb	0	; () banked
 16645  001E5A  5167               	movf	(?_stristr+1)& (0+255),w,b
 16646  001E5C  0101               	movlb	1	; () banked
 16647  001E5E  19B4               	xorwf	(??_doModeVerbose+1)& (0+255),w,b
 16648  001E60  0012               	return	
 16649  001E62                     __end_ofPL2:
 16650                           	opt stack 0
 16651  001E62                     PL4:
 16652                           	opt stack 20
 16653  001E62  0100               	movlb	0	; () banked
 16654  001E64  6B65               	clrf	(?_strtok+1)& (0+255),b
 16655  001E66  6B64               	clrf	?_strtok& (0+255),b
 16656  001E68  0E7F               	movlw	high STR_30
 16657  001E6A  6F67               	movwf	(?_strtok+3)& (0+255),b
 16658  001E6C  0EF4               	movlw	low STR_30
 16659  001E6E  6F66               	movwf	(?_strtok+2)& (0+255),b
 16660  001E70  0012               	return	
 16661  001E72                     __end_ofPL4:
 16662                           	opt stack 0
 16663  001E72                     PL6:
 16664                           	opt stack 20
 16665  001E72  6B65               	clrf	(?_strtok+1)& (0+255),b
 16666  001E74  6B64               	clrf	?_strtok& (0+255),b
 16667  001E76  0E7F               	movlw	high STR_30
 16668  001E78  6F67               	movwf	(?_strtok+3)& (0+255),b
 16669  001E7A  0EF4               	movlw	low STR_30
 16670  001E7C  6F66               	movwf	(?_strtok+2)& (0+255),b
 16671  001E7E  0012               	return	
 16672  001E80                     __end_ofPL6:
 16673                           	opt stack 0
 16674  001E80                     PL8:
 16675                           	opt stack 20
 16676  001E80  0E01               	movlw	high _cmdbuf
 16677  001E82  6E20               	movwf	?_strcpy+1,c
 16678  001E84  0E05               	movlw	low _cmdbuf
 16679  001E86  6E1F               	movwf	?_strcpy,c
 16680  001E88  0E0A               	movlw	low (_cmdbuf+5)
 16681  001E8A  6FB3               	movwf	??_doModeVerbose& (0+255),b
 16682  001E8C  0E01               	movlw	high (_cmdbuf+5)
 16683  001E8E  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 16684  001E90  C1B3  F021         	movff	??_doModeVerbose,?_strcpy+2
 16685  001E94  C1B4  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16686  001E98  0012               	return	
 16687  001E9A                     __end_ofPL8:
 16688                           	opt stack 0
 16689  001E9A                     PL12:
 16690                           	opt stack 20
 16691  001E9A  6BBC               	clrf	(??_doModeVerbose+9)& (0+255),b
 16692  001E9C  6BBD               	clrf	(??_doModeVerbose+10)& (0+255),b
 16693  001E9E  6BBE               	clrf	(??_doModeVerbose+11)& (0+255),b
 16694  001EA0  0E1A               	movlw	26
 16695  001EA2                     u20625:
 16696  001EA2  90D8               	bcf	status,0,c
 16697  001EA4  37BB               	rlcf	(??_doModeVerbose+8)& (0+255),f,b
 16698  001EA6  37BC               	rlcf	(??_doModeVerbose+9)& (0+255),f,b
 16699  001EA8  37BD               	rlcf	(??_doModeVerbose+10)& (0+255),f,b
 16700  001EAA  37BE               	rlcf	(??_doModeVerbose+11)& (0+255),f,b
 16701  001EAC  2EE8               	decfsz	wreg,f,c
 16702  001EAE  D7F9               	goto	u20625
 16703  001EB0  51B7               	movf	(??_doModeVerbose+4)& (0+255),w,b
 16704  001EB2  11BB               	iorwf	(??_doModeVerbose+8)& (0+255),w,b
 16705  001EB4  6FBF               	movwf	(??_doModeVerbose+12)& (0+255),b
 16706  001EB6  51B8               	movf	(??_doModeVerbose+5)& (0+255),w,b
 16707  001EB8  11BC               	iorwf	(??_doModeVerbose+9)& (0+255),w,b
 16708  001EBA  6FC0               	movwf	(??_doModeVerbose+13)& (0+255),b
 16709  001EBC  51B9               	movf	(??_doModeVerbose+6)& (0+255),w,b
 16710  001EBE  11BD               	iorwf	(??_doModeVerbose+10)& (0+255),w,b
 16711  001EC0  6FC1               	movwf	(??_doModeVerbose+14)& (0+255),b
 16712  001EC2  51BA               	movf	(??_doModeVerbose+7)& (0+255),w,b
 16713  001EC4  11BE               	iorwf	(??_doModeVerbose+11)& (0+255),w,b
 16714  001EC6  6FC2               	movwf	(??_doModeVerbose+15)& (0+255),b
 16715  001EC8  51B3               	movf	??_doModeVerbose& (0+255),w,b
 16716  001ECA  11BF               	iorwf	(??_doModeVerbose+12)& (0+255),w,b
 16717  001ECC  6FC3               	movwf	(??_doModeVerbose+16)& (0+255),b
 16718  001ECE  51B4               	movf	(??_doModeVerbose+1)& (0+255),w,b
 16719  001ED0  11C0               	iorwf	(??_doModeVerbose+13)& (0+255),w,b
 16720  001ED2  6FC4               	movwf	(??_doModeVerbose+17)& (0+255),b
 16721  001ED4  51B5               	movf	(??_doModeVerbose+2)& (0+255),w,b
 16722  001ED6  11C1               	iorwf	(??_doModeVerbose+14)& (0+255),w,b
 16723  001ED8  6FC5               	movwf	(??_doModeVerbose+18)& (0+255),b
 16724  001EDA  51B6               	movf	(??_doModeVerbose+3)& (0+255),w,b
 16725  001EDC  11C2               	iorwf	(??_doModeVerbose+15)& (0+255),w,b
 16726  001EDE  6FC6               	movwf	(??_doModeVerbose+19)& (0+255),b
 16727  001EE0  0102               	movlb	2	; () banked
 16728  001EE2  0012               	return	
 16729  001EE4                     __end_ofPL12:
 16730                           	opt stack 0
 16731  001EE4                     PL22:
 16732                           	opt stack 20
 16733  001EE4  0101               	movlb	1	; () banked
 16734  001EE6  0E01               	movlw	high _cmdbuf
 16735  001EE8  6E20               	movwf	?_strcpy+1,c
 16736  001EEA  0E05               	movlw	low _cmdbuf
 16737  001EEC  6E1F               	movwf	?_strcpy,c
 16738  001EEE  0E0D               	movlw	low (_cmdbuf+8)
 16739  001EF0  6FB3               	movwf	??_doModeVerbose& (0+255),b
 16740  001EF2  0E01               	movlw	high (_cmdbuf+8)
 16741  001EF4  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 16742  001EF6  C1B3  F021         	movff	??_doModeVerbose,?_strcpy+2
 16743  001EFA  C1B4  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16744  001EFE  0012               	return	
 16745  001F00                     __end_ofPL22:
 16746                           	opt stack 0
 16747  001F00                     PL38:
 16748                           	opt stack 20
 16749  001F00  0100               	movlb	0	; () banked
 16750  001F02  6B65               	clrf	(?_strtok+1)& (0+255),b
 16751  001F04  6B64               	clrf	?_strtok& (0+255),b
 16752  001F06  0E7E               	movlw	high (STR_57+8)
 16753  001F08  6F67               	movwf	(?_strtok+3)& (0+255),b
 16754  001F0A  0E72               	movlw	low (STR_57+8)
 16755  001F0C  6F66               	movwf	(?_strtok+2)& (0+255),b
 16756  001F0E  0012               	return	
 16757  001F10                     __end_ofPL38:
 16758                           	opt stack 0
 16759  001F10                     PL40:
 16760                           	opt stack 20
 16761  001F10  0E01               	movlw	high _cmdbuf
 16762  001F12  0100               	movlb	0	; () banked
 16763  001F14  6F65               	movwf	(?_strtok+1)& (0+255),b
 16764  001F16  0E05               	movlw	low _cmdbuf
 16765  001F18  6F64               	movwf	?_strtok& (0+255),b
 16766  001F1A  0E7F               	movlw	high STR_30
 16767  001F1C  6F67               	movwf	(?_strtok+3)& (0+255),b
 16768  001F1E  0EF4               	movlw	low STR_30
 16769  001F20  6F66               	movwf	(?_strtok+2)& (0+255),b
 16770  001F22  0012               	return	
 16771  001F24                     __end_ofPL40:
 16772                           	opt stack 0
 16773  001F24                     PL50:
 16774                           	opt stack 20
 16775  001F24  0100               	movlb	0	; () banked
 16776  001F26  6F65               	movwf	(?_strtok+1)& (0+255),b
 16777  001F28  0E05               	movlw	low _cmdbuf
 16778  001F2A  6F64               	movwf	?_strtok& (0+255),b
 16779  001F2C  0E7E               	movlw	high (STR_57+8)
 16780  001F2E  6F67               	movwf	(?_strtok+3)& (0+255),b
 16781  001F30  0E72               	movlw	low (STR_57+8)
 16782  001F32  6F66               	movwf	(?_strtok+2)& (0+255),b
 16783  001F34  0012               	return	
 16784  001F36                     __end_ofPL50:
 16785                           	opt stack 0
 16786  001F36                     PL56:
 16787                           	opt stack 20
 16788  001F36  0102               	movlb	2	; () banked
 16789  001F38  51C1               	movf	doModeVerbose@i_1293& (0+255),w,b
 16790  001F3A  C2C0  F1B3         	movff	doModeVerbose@reg,??_doModeVerbose
 16791  001F3E  0101               	movlb	1	; () banked
 16792  001F40  6BB4               	clrf	(??_doModeVerbose+1)& (0+255),b
 16793  001F42  27B3               	addwf	??_doModeVerbose& (0+255),f,b
 16794  001F44  0E00               	movlw	0
 16795  001F46  23B4               	addwfc	(??_doModeVerbose+1)& (0+255),f,b
 16796  001F48  51B3               	movf	??_doModeVerbose& (0+255),w,b
 16797  001F4A  0100               	movlb	0	; () banked
 16798  001F4C  6F71               	movwf	(?_sprintf+4)& (0+255),b
 16799  001F4E  6B72               	clrf	(?_sprintf+5)& (0+255),b
 16800  001F50  0012               	return	
 16801  001F52                     __end_ofPL56:
 16802                           	opt stack 0
 16803  001F52                     PL60:
 16804                           	opt stack 20
 16805  001F52  0101               	movlb	1	; () banked
 16806  001F54  6BB4               	clrf	(??_doModeVerbose+1)& (0+255),b
 16807  001F56  6BB5               	clrf	(??_doModeVerbose+2)& (0+255),b
 16808  001F58  6BB6               	clrf	(??_doModeVerbose+3)& (0+255),b
 16809  001F5A  C1B5  F1B6         	movff	??_doModeVerbose+2,??_doModeVerbose+3
 16810  001F5E  C1B4  F1B5         	movff	??_doModeVerbose+1,??_doModeVerbose+2
 16811  001F62  C1B3  F1B4         	movff	??_doModeVerbose,??_doModeVerbose+1
 16812  001F66  6BB3               	clrf	??_doModeVerbose& (0+255),b
 16813  001F68  0102               	movlb	2	; () banked
 16814  001F6A  0012               	return	
 16815  001F6C                     __end_ofPL60:
 16816                           	opt stack 0
 16817  001F6C                     PL72:
 16818                           	opt stack 20
 16819  001F6C  6E21               	movwf	?__CANIDToRegs,c
 16820  001F6E  C2CC  F023         	movff	doModeVerbose@id_1427,?__CANIDToRegs+2
 16821  001F72  C2CD  F024         	movff	doModeVerbose@id_1427+1,?__CANIDToRegs+3
 16822  001F76  C2CE  F025         	movff	doModeVerbose@id_1427+2,?__CANIDToRegs+4
 16823  001F7A  C2CF  F026         	movff	doModeVerbose@id_1427+3,?__CANIDToRegs+5
 16824  001F7E  0E01               	movlw	1
 16825  001F80  6E27               	movwf	?__CANIDToRegs+6,c
 16826  001F82  0C01               	retlw	1
 16827  001F84                     __end_ofPL72:
 16828                           	opt stack 0
 16829  001F84                     PL74:
 16830                           	opt stack 20
 16831  001F84  6E20               	movwf	?_strcpy+1,c
 16832  001F86  0E05               	movlw	low _cmdbuf
 16833  001F88  6E1F               	movwf	?_strcpy,c
 16834  001F8A  0E0F               	movlw	low (_cmdbuf+10)
 16835  001F8C  6FB3               	movwf	??_doModeVerbose& (0+255),b
 16836  001F8E  0E01               	movlw	high (_cmdbuf+10)
 16837  001F90  6FB4               	movwf	(??_doModeVerbose+1)& (0+255),b
 16838  001F92  C1B3  F021         	movff	??_doModeVerbose,?_strcpy+2
 16839  001F96  C1B4  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16840  001F9A  0012               	return	
 16841  001F9C                     __end_ofPL74:
 16842                           	opt stack 0
 16843  001F9C                     PL80:
 16844                           	opt stack 20
 16845  001F9C  0101               	movlb	1	; () banked
 16846  001F9E  6FB8               	movwf	(??_doModeVerbose+5)& (0+255),b
 16847  001FA0  6BB9               	clrf	(??_doModeVerbose+6)& (0+255),b
 16848  001FA2  6BBA               	clrf	(??_doModeVerbose+7)& (0+255),b
 16849  001FA4  C1B8  F1BA         	movff	??_doModeVerbose+5,??_doModeVerbose+7
 16850  001FA8  C1B7  F1B9         	movff	??_doModeVerbose+4,??_doModeVerbose+6
 16851  001FAC  6BB8               	clrf	(??_doModeVerbose+5)& (0+255),b
 16852  001FAE  6BB7               	clrf	(??_doModeVerbose+4)& (0+255),b
 16853  001FB0  0012               	return	
 16854  001FB2                     __end_ofPL80:
 16855                           	opt stack 0
 16856  001FB2                     PL84:
 16857                           	opt stack 20
 16858  001FB2  0E01               	movlw	high _cmdbuf
 16859  001FB4  0100               	movlb	0	; () banked
 16860  001FB6  6F67               	movwf	(?_stristr+1)& (0+255),b
 16861  001FB8  0E05               	movlw	low _cmdbuf
 16862  001FBA  6F66               	movwf	?_stristr& (0+255),b
 16863  001FBC  0E7F               	movlw	high STR_8
 16864  001FBE  6F69               	movwf	(?_stristr+3)& (0+255),b
 16865  001FC0  0EA7               	movlw	low STR_8
 16866  001FC2  6F68               	movwf	(?_stristr+2)& (0+255),b
 16867  001FC4  0012               	return	
 16868  001FC6                     __end_ofPL84:
 16869                           	opt stack 0
 16870  001FC6                     PL112:
 16871                           	opt stack 20
 16872  001FC6  0100               	movlb	0	; () banked
 16873  001FC8  6F67               	movwf	(?_stristr+1)& (0+255),b
 16874  001FCA  0E05               	movlw	low _cmdbuf
 16875  001FCC  6F66               	movwf	?_stristr& (0+255),b
 16876  001FCE  0E7F               	movlw	high STR_10
 16877  001FD0  6F69               	movwf	(?_stristr+3)& (0+255),b
 16878  001FD2  0E48               	movlw	low STR_10
 16879  001FD4  6F68               	movwf	(?_stristr+2)& (0+255),b
 16880  001FD6  0012               	return	
 16881  001FD8                     __end_ofPL112:
 16882                           	opt stack 0
 16883  001FD8                     PL118:
 16884                           	opt stack 20
 16885  001FD8  6F67               	movwf	(?_stristr+1)& (0+255),b
 16886  001FDA  0E05               	movlw	low _cmdbuf
 16887  001FDC  6F66               	movwf	?_stristr& (0+255),b
 16888  001FDE  0E7F               	movlw	high STR_156
 16889  001FE0  6F69               	movwf	(?_stristr+3)& (0+255),b
 16890  001FE2  0ED1               	movlw	low STR_156
 16891  001FE4  6F68               	movwf	(?_stristr+2)& (0+255),b
 16892  001FE6  0012               	return	
 16893  001FE8                     __end_ofPL118:
 16894                           	opt stack 0
 16895  001FE8                     PL120:
 16896                           	opt stack 20
 16897  001FE8  6F67               	movwf	(?_stristr+1)& (0+255),b
 16898  001FEA  0E05               	movlw	low _cmdbuf
 16899  001FEC  6F66               	movwf	?_stristr& (0+255),b
 16900  001FEE  0E7E               	movlw	high (STR_18+5)
 16901  001FF0  6F69               	movwf	(?_stristr+3)& (0+255),b
 16902  001FF2  0EFD               	movlw	low (STR_18+5)
 16903  001FF4  6F68               	movwf	(?_stristr+2)& (0+255),b
 16904  001FF6  0012               	return	
 16905  001FF8                     __end_ofPL120:
 16906                           	opt stack 0
 16907  001FF8                     PL124:
 16908                           	opt stack 20
 16909  001FF8  6F67               	movwf	(?_stristr+1)& (0+255),b
 16910  001FFA  0E05               	movlw	low _cmdbuf
 16911  001FFC  6F66               	movwf	?_stristr& (0+255),b
 16912  001FFE  0E7F               	movlw	high STR_16
 16913  002000  6F69               	movwf	(?_stristr+3)& (0+255),b
 16914  002002  0E3A               	movlw	low STR_16
 16915  002004  6F68               	movwf	(?_stristr+2)& (0+255),b
 16916  002006  0012               	return	
 16917  002008                     __end_ofPL124:
 16918                           	opt stack 0
 16919  002008                     PL128:
 16920                           	opt stack 20
 16921  002008  6F67               	movwf	(?_stristr+1)& (0+255),b
 16922  00200A  0E05               	movlw	low _cmdbuf
 16923  00200C  6F66               	movwf	?_stristr& (0+255),b
 16924  00200E  0E7E               	movlw	high STR_14
 16925  002010  6F69               	movwf	(?_stristr+3)& (0+255),b
 16926  002012  0EAE               	movlw	low STR_14
 16927  002014  6F68               	movwf	(?_stristr+2)& (0+255),b
 16928  002016  0012               	return	
 16929  002018                     __end_ofPL128:
 16930                           	opt stack 0
 16931  002018                     PL132:
 16932                           	opt stack 20
 16933  002018  6F67               	movwf	(?_stristr+1)& (0+255),b
 16934  00201A  0E05               	movlw	low _cmdbuf
 16935  00201C  6F66               	movwf	?_stristr& (0+255),b
 16936  00201E  0E7F               	movlw	high STR_12
 16937  002020  6F69               	movwf	(?_stristr+3)& (0+255),b
 16938  002022  0E82               	movlw	low STR_12
 16939  002024  6F68               	movwf	(?_stristr+2)& (0+255),b
 16940  002026  0012               	return	
 16941  002028                     __end_ofPL132:
 16942                           	opt stack 0
 16943                           tblptru	equ	0xFF8
 16944                           tblptrh	equ	0xFF7
 16945                           tblptrl	equ	0xFF6
 16946                           tablat	equ	0xFF5
 16947                           prodh	equ	0xFF4
 16948                           prodl	equ	0xFF3
 16949                           intcon	equ	0xFF2
 16950                           indf0	equ	0xFEF
 16951                           postinc0	equ	0xFEE
 16952                           fsr0h	equ	0xFEA
 16953                           fsr0l	equ	0xFE9
 16954                           wreg	equ	0xFE8
 16955                           indf1	equ	0xFE7
 16956                           postinc1	equ	0xFE6
 16957                           postdec1	equ	0xFE5
 16958                           fsr1h	equ	0xFE2
 16959                           fsr1l	equ	0xFE1
 16960                           indf2	equ	0xFDF
 16961                           postinc2	equ	0xFDE
 16962                           postdec2	equ	0xFDD
 16963                           plusw2	equ	0xFDB
 16964                           fsr2h	equ	0xFDA
 16965                           fsr2l	equ	0xFD9
 16966                           status	equ	0xFD8
 16967                           
 16968 ;; *************** function _changeBaudrate *****************
 16969 ;; Defined at:
 16970 ;;		line 3504 in file "main.c"
 16971 ;; Parameters:    Size  Location     Type
 16972 ;;  nBaud           1    wreg     unsigned char 
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;  nBaud           1   33[COMRAM] unsigned char 
 16975 ;; Return value:  Size  Location     Type
 16976 ;;		None               void
 16977 ;; Registers used:
 16978 ;;		wreg, status,2, status,0, cstack
 16979 ;; Tracked objects:
 16980 ;;		On entry : C/1
 16981 ;;		On exit  : 0/0
 16982 ;;		Unchanged: 0/0
 16983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16984 ;;      Params:         0       0       0       0       0       0       0
 16985 ;;      Locals:         1       0       0       0       0       0       0
 16986 ;;      Temps:          0       0       0       0       0       0       0
 16987 ;;      Totals:         1       0       0       0       0       0       0
 16988 ;;Total ram usage:        1 bytes
 16989 ;; Hardware stack levels used:    1
 16990 ;; Hardware stack levels required when called:    4
 16991 ;; This function calls:
 16992 ;;		_OpenUSART
 16993 ;; This function is called by:
 16994 ;;		_doModeVerbose
 16995 ;;		_doModeVscp
 16996 ;; This function uses a non-reentrant model
 16997 ;;
 16998                           
 16999                           	psect	text23
 17000  005F7A                     __ptext23:
 17001                           	opt stack 0
 17002  005F7A                     _changeBaudrate:
 17003                           	opt stack 25
 17004                           
 17005                           ;incstack = 0
 17006                           ;incstack = 0
 17007                           ;changeBaudrate@nBaud stored from wreg
 17008  005F7A  CFE8 F022          	movff	wreg,changeBaudrate@nBaud
 17009                           
 17010                           ;main.c: 3505: switch( nBaud ) {
 17011  005F7E  D015               	goto	l18102
 17012  005F80                     l18074:
 17013                           
 17014                           ;main.c: 3508: nBaud = 19;
 17015  005F80  0E13               	movlw	19
 17016  005F82  D011               	goto	L27
 17017  005F84                     l18076:
 17018                           
 17019                           ;main.c: 3512: nBaud = 10;
 17020  005F84  0E0A               	movlw	10
 17021  005F86  D00F               	goto	L27
 17022  005F88                     l18078:
 17023                           
 17024                           ;main.c: 3516: nBaud = 9;
 17025  005F88  0E09               	movlw	9
 17026  005F8A  D00D               	goto	L27
 17027  005F8C                     l18080:
 17028                           
 17029                           ;main.c: 3520: nBaud = 4;
 17030  005F8C  0E04               	movlw	4
 17031  005F8E  D00B               	goto	L27
 17032  005F90                     l18084:
 17033                           
 17034                           ;main.c: 3528: nBaud = 3;
 17035  005F90  0E03               	movlw	3
 17036  005F92  D009               	goto	L27
 17037  005F94                     l18086:
 17038                           
 17039                           ;main.c: 3532: nBaud = 2;
 17040  005F94  0E02               	movlw	2
 17041  005F96  D007               	goto	L27
 17042  005F98                     l18090:
 17043                           
 17044                           ;main.c: 3540: nBaud = 64;
 17045  005F98  0E40               	movlw	64
 17046  005F9A  D005               	goto	L27
 17047  005F9C                     l18092:
 17048                           
 17049                           ;main.c: 3544: nBaud = 128;
 17050  005F9C  0E80               	movlw	128
 17051  005F9E  D003               	goto	L27
 17052  005FA0                     l18096:
 17053                           
 17054                           ;main.c: 3552: nBaud = 42;
 17055  005FA0  0E2A               	movlw	42
 17056  005FA2  D001               	goto	L27
 17057  005FA4                     l18098:
 17058                           
 17059                           ;main.c: 3557: nBaud = 21;
 17060  005FA4  0E15               	movlw	21
 17061  005FA6                     L27:
 17062  005FA6  6E22               	movwf	changeBaudrate@nBaud,c
 17063                           
 17064                           ;main.c: 3558: break;
 17065  005FA8  D01B               	goto	l18104
 17066  005FAA                     l18102:
 17067  005FAA  5022               	movf	changeBaudrate@nBaud,w,c
 17068                           
 17069                           ; Switch size 1, requested type "space"
 17070                           ; Number of cases is 13, Range of values is 0 to 12
 17071                           ; switch strategies available:
 17072                           ; Name         Instructions Cycles
 17073                           ; simple_byte           40    21 (average)
 17074                           ;	Chosen strategy is simple_byte
 17075  005FAC  E0FB               	bz	l18098
 17076  005FAE  0A01               	xorlw	1	; case 1
 17077  005FB0  E0E7               	bz	l18074
 17078  005FB2  0A03               	xorlw	3	; case 2
 17079  005FB4  E0E7               	bz	l18076
 17080  005FB6  0A01               	xorlw	1	; case 3
 17081  005FB8  E0E7               	bz	l18078
 17082  005FBA  0A07               	xorlw	7	; case 4
 17083  005FBC  E0E7               	bz	l18080
 17084  005FBE  0A01               	xorlw	1	; case 5
 17085  005FC0  E0E5               	bz	l18080
 17086  005FC2  0A03               	xorlw	3	; case 6
 17087  005FC4  E0E5               	bz	l18084
 17088  005FC6  0A01               	xorlw	1	; case 7
 17089  005FC8  E0E5               	bz	l18086
 17090  005FCA  0A0F               	xorlw	15	; case 8
 17091  005FCC  E0E3               	bz	l18086
 17092  005FCE  0A01               	xorlw	1	; case 9
 17093  005FD0  E0E3               	bz	l18090
 17094  005FD2  0A03               	xorlw	3	; case 10
 17095  005FD4  E0E3               	bz	l18092
 17096  005FD6  0A01               	xorlw	1	; case 11
 17097  005FD8  E0DF               	bz	l18090
 17098  005FDA  0A07               	xorlw	7	; case 12
 17099  005FDC  E0E1               	bz	l18096
 17100  005FDE  D7E2               	goto	l18098
 17101  005FE0                     l18104:
 17102                           
 17103                           ;main.c: 3561: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 17104  005FE0  0E4F               	movlw	79
 17105  005FE2  16AB               	andwf	4011,f,c	;volatile
 17106  005FE4  9AAC               	bcf	4012,5,c	;volatile
 17107  005FE6  0ECF               	movlw	207
 17108  005FE8  169D               	andwf	3997,f,c	;volatile
 17109                           
 17110                           ;main.c: 3562: OpenUSART( 0b01111111 &
 17111                           ;main.c: 3563: 0b11111111 &
 17112                           ;main.c: 3564: 0b11111110 &
 17113                           ;main.c: 3565: 0b11111101 &
 17114                           ;main.c: 3566: 0b11111111,
 17115                           ;main.c: 3567: nBaud );
 17116  005FEA  C022  F01F         	movff	changeBaudrate@nBaud,?_OpenUSART
 17117  005FEE  6A20               	clrf	?_OpenUSART+1,c
 17118  005FF0  0E7C               	movlw	124
 17119  005FF2  EF7C  F032         	goto	_OpenUSART
 17120  005FF6                     __end_of_changeBaudrate:
 17121                           	opt stack 0
 17122                           tblptru	equ	0xFF8
 17123                           tblptrh	equ	0xFF7
 17124                           tblptrl	equ	0xFF6
 17125                           tablat	equ	0xFF5
 17126                           prodh	equ	0xFF4
 17127                           prodl	equ	0xFF3
 17128                           intcon	equ	0xFF2
 17129                           indf0	equ	0xFEF
 17130                           postinc0	equ	0xFEE
 17131                           fsr0h	equ	0xFEA
 17132                           fsr0l	equ	0xFE9
 17133                           wreg	equ	0xFE8
 17134                           indf1	equ	0xFE7
 17135                           postinc1	equ	0xFE6
 17136                           postdec1	equ	0xFE5
 17137                           fsr1h	equ	0xFE2
 17138                           fsr1l	equ	0xFE1
 17139                           indf2	equ	0xFDF
 17140                           postinc2	equ	0xFDE
 17141                           postdec2	equ	0xFDD
 17142                           plusw2	equ	0xFDB
 17143                           fsr2h	equ	0xFDA
 17144                           fsr2l	equ	0xFD9
 17145                           status	equ	0xFD8
 17146                           
 17147 ;; *************** function _writeRegisterExtended *****************
 17148 ;; Defined at:
 17149 ;;		line 2884 in file "main.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  nodeid          1    wreg     unsigned char 
 17152 ;;  page            2   79[BANK0 ] unsigned short 
 17153 ;;  reg             1   81[BANK0 ] unsigned char 
 17154 ;;  timeout         2   82[BANK0 ] unsigned short 
 17155 ;;  value           2   84[BANK0 ] PTR unsigned char 
 17156 ;;		 -> doModeVerbose@value_1351(1), 
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;  nodeid          1   90[BANK0 ] unsigned char 
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1    wreg      enum E15660
 17161 ;; Registers used:
 17162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17163 ;; Tracked objects:
 17164 ;;		On entry : F/2
 17165 ;;		On exit  : E/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17168 ;;      Params:         0       7       0       0       0       0       0
 17169 ;;      Locals:         0       1       0       0       0       0       0
 17170 ;;      Temps:          0       4       0       0       0       0       0
 17171 ;;      Totals:         0      12       0       0       0       0       0
 17172 ;;Total ram usage:       12 bytes
 17173 ;; Hardware stack levels used:    1
 17174 ;; Hardware stack levels required when called:    7
 17175 ;; This function calls:
 17176 ;;		_checkCANBusState
 17177 ;;		_sendVSCPFrame
 17178 ;;		_getVSCPFrame
 17179 ;; This function is called by:
 17180 ;;		_doModeVerbose
 17181 ;; This function uses a non-reentrant model
 17182 ;;
 17183                           
 17184                           	psect	text24
 17185  004C98                     __ptext24:
 17186                           	opt stack 0
 17187  004C98                     _writeRegisterExtended:
 17188                           	opt stack 22
 17189                           
 17190                           ;incstack = 0
 17191                           ;incstack = 0
 17192                           ;writeRegisterExtended@nodeid stored from wreg
 17193  004C98  CFE8 F0BA          	movff	wreg,writeRegisterExtended@nodeid
 17194                           
 17195                           ; BSR set to: 2
 17196                           ;main.c: 2885: vscpData[ 0 ] = nodeid;
 17197  004C9C  C0BA  F1A5         	movff	writeRegisterExtended@nodeid,_vscpData
 17198                           
 17199                           ; BSR set to: 2
 17200                           ;main.c: 2886: vscpData[ 1 ] = page >> 8;
 17201  004CA0  0100               	movlb	0	; () banked
 17202  004CA2  51B0               	movf	(writeRegisterExtended@page+1)& (0+255),w,b
 17203  004CA4  0101               	movlb	1	; () banked
 17204  004CA6  6FA6               	movwf	(_vscpData+1)& (0+255),b
 17205                           
 17206                           ; BSR set to: 1
 17207                           ;main.c: 2887: vscpData[ 2 ] = page & 0xff;
 17208  004CA8  C0AF  F1A7         	movff	writeRegisterExtended@page,_vscpData+2
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;main.c: 2888: vscpData[ 3 ] = reg;
 17212  004CAC  C0B1  F1A8         	movff	writeRegisterExtended@reg,_vscpData+3
 17213                           
 17214                           ; BSR set to: 1
 17215                           ;main.c: 2889: vscpData[ 4 ] = *value;
 17216  004CB0  C0B4  FFD9         	movff	writeRegisterExtended@value,fsr2l
 17217  004CB4  C0B5  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 17218  004CB8  50DF               	movf	indf2,w,c
 17219  004CBA  6FA9               	movwf	(_vscpData+4)& (0+255),b
 17220                           
 17221                           ; BSR set to: 1
 17222                           ;main.c: 2891: if (sendVSCPFrame(0,
 17223                           ;main.c: 2892: 38,
 17224                           ;main.c: 2893: 0,
 17225                           ;main.c: 2894: 0,
 17226                           ;main.c: 2895: 5,
 17227                           ;main.c: 2896: vscpData)) {
 17228  004CBC  0100               	movlb	0	; () banked
 17229  004CBE  6B90               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 17230  004CC0  6B8F               	clrf	?_sendVSCPFrame& (0+255),b
 17231  004CC2  0E26               	movlw	38
 17232  004CC4  6F91               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 17233  004CC6  6B92               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 17234  004CC8  6B93               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 17235  004CCA  0E05               	movlw	5
 17236  004CCC  6F94               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 17237  004CCE  0E01               	movlw	high _vscpData
 17238  004CD0  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 17239  004CD2  0EA5               	movlw	low _vscpData
 17240  004CD4  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 17241  004CD6  EC07  F02C         	call	_sendVSCPFrame	;wreg free
 17242  004CDA  0900               	iorlw	0
 17243  004CDC  E060               	bz	l17980
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;main.c: 2898: timekeeper = 0;
 17247  004CDE  6BDE               	clrf	_timekeeper& (0+255),b	;volatile
 17248  004CE0  6BDF               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 17249  004CE2  6BE0               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 17250  004CE4  6BE1               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 17251                           
 17252                           ;main.c: 2899: while (timekeeper < timeout) {
 17253  004CE6  D04B               	goto	l17978
 17254  004CE8                     l1243:
 17255                           
 17256                           ; BSR set to: 0
 17257  004CE8  0004               	clrwdt		;# 
 17258                           
 17259                           ;main.c: 2902: checkCANBusState();
 17260  004CEA  EC2E  F035         	call	_checkCANBusState	;wreg free
 17261                           
 17262                           ;main.c: 2904: if (getVSCPFrame(&vscpClass,
 17263                           ;main.c: 2905: &vscpType,
 17264                           ;main.c: 2906: &vscpNodeId,
 17265                           ;main.c: 2907: &vscpPriority,
 17266                           ;main.c: 2908: &vscpSize,
 17267                           ;main.c: 2909: vscpData)) {
 17268  004CEE  0E01               	movlw	high _vscpClass
 17269  004CF0  0100               	movlb	0	; () banked
 17270  004CF2  6F6D               	movwf	(?_getVSCPFrame+1)& (0+255),b
 17271  004CF4  0EAD               	movlw	low _vscpClass
 17272  004CF6  6F6C               	movwf	?_getVSCPFrame& (0+255),b
 17273  004CF8  0E01               	movlw	high _vscpType
 17274  004CFA  6F6F               	movwf	(?_getVSCPFrame+3)& (0+255),b
 17275  004CFC  0EB2               	movlw	low _vscpType
 17276  004CFE  6F6E               	movwf	(?_getVSCPFrame+2)& (0+255),b
 17277  004D00  0E01               	movlw	high _vscpNodeId
 17278  004D02  6F71               	movwf	(?_getVSCPFrame+5)& (0+255),b
 17279  004D04  0EAF               	movlw	low _vscpNodeId
 17280  004D06  6F70               	movwf	(?_getVSCPFrame+4)& (0+255),b
 17281  004D08  0E01               	movlw	high _vscpPriority
 17282  004D0A  6F73               	movwf	(?_getVSCPFrame+7)& (0+255),b
 17283  004D0C  0EB0               	movlw	low _vscpPriority
 17284  004D0E  6F72               	movwf	(?_getVSCPFrame+6)& (0+255),b
 17285  004D10  0E01               	movlw	high _vscpSize
 17286  004D12  6F75               	movwf	(?_getVSCPFrame+9)& (0+255),b
 17287  004D14  0EB1               	movlw	low _vscpSize
 17288  004D16  6F74               	movwf	(?_getVSCPFrame+8)& (0+255),b
 17289  004D18  0E01               	movlw	high _vscpData
 17290  004D1A  6F77               	movwf	(?_getVSCPFrame+11)& (0+255),b
 17291  004D1C  0EA5               	movlw	low _vscpData
 17292  004D1E  6F76               	movwf	(?_getVSCPFrame+10)& (0+255),b
 17293  004D20  EC3A  F02F         	call	_getVSCPFrame	;wreg free
 17294  004D24  0900               	iorlw	0
 17295  004D26  E02B               	bz	l17978
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;main.c: 2911: if ((nodeid == vscpNodeId) &&
 17299                           ;main.c: 2912: (5 == vscpSize) &&
 17300                           ;main.c: 2913: (0 == vscpData[ 0 ]) &&
 17301                           ;main.c: 2914: ((page >> 8) == vscpData[ 1 ]) &&
 17302                           ;main.c: 2915: ((page & 0xff) == vscpData[ 2 ]) &&
 17303                           ;main.c: 2916: (reg == vscpData[ 3 ]) &&
 17304                           ;main.c: 2917: (*value == vscpData[ 4 ])) {
 17305  004D28  0101               	movlb	1	; () banked
 17306  004D2A  51AF               	movf	_vscpNodeId& (0+255),w,b
 17307  004D2C  0100               	movlb	0	; () banked
 17308  004D2E  63BA               	cpfseq	writeRegisterExtended@nodeid& (0+255),b
 17309  004D30  D026               	goto	l17978
 17310                           
 17311                           ; BSR set to: 0
 17312  004D32  0101               	movlb	1	; () banked
 17313  004D34  51B1               	movf	_vscpSize& (0+255),w,b
 17314  004D36  0A05               	xorlw	5
 17315  004D38  E122               	bnz	l17978
 17316                           
 17317                           ; BSR set to: 1
 17318  004D3A  67A5               	tstfsz	_vscpData& (0+255),b
 17319  004D3C  D020               	goto	l17978
 17320                           
 17321                           ; BSR set to: 1
 17322  004D3E  0100               	movlb	0	; () banked
 17323  004D40  51B0               	movf	(writeRegisterExtended@page+1)& (0+255),w,b
 17324  004D42  0101               	movlb	1	; () banked
 17325  004D44  19A6               	xorwf	(_vscpData+1)& (0+255),w,b
 17326  004D46  E11B               	bnz	l17978
 17327                           
 17328                           ; BSR set to: 1
 17329  004D48  0100               	movlb	0	; () banked
 17330  004D4A  51AF               	movf	writeRegisterExtended@page& (0+255),w,b
 17331  004D4C  EE21  F0A7         	lfsr	2,_vscpData+2
 17332  004D50  62DF               	cpfseq	indf2,c
 17333  004D52  D015               	goto	l17978
 17334                           
 17335                           ; BSR set to: 1
 17336  004D54  51B1               	movf	writeRegisterExtended@reg& (0+255),w,b
 17337  004D56  0101               	movlb	1	; () banked
 17338  004D58  EE21  F0A8         	lfsr	2,_vscpData+3
 17339  004D5C  62DF               	cpfseq	indf2,c
 17340  004D5E  D00F               	goto	l17978
 17341                           
 17342                           ; BSR set to: 1
 17343  004D60  51A9               	movf	(_vscpData+4)& (0+255),w,b
 17344  004D62  C0B4  FFD9         	movff	writeRegisterExtended@value,fsr2l
 17345  004D66  C0B5  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 17346  004D6A  62DF               	cpfseq	indf2,c
 17347  004D6C  D008               	goto	l17978
 17348                           
 17349                           ; BSR set to: 1
 17350                           ;main.c: 2918: *value = vscpData[ 1 ];
 17351  004D6E  C0B4  FFD9         	movff	writeRegisterExtended@value,fsr2l
 17352  004D72  C0B5  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 17353  004D76  C1A6  FFDF         	movff	_vscpData+1,indf2
 17354                           
 17355                           ; BSR set to: 1
 17356                           ;main.c: 2919: return 1;
 17357  004D7A  0E01               	movlw	1
 17358  004D7C  D011               	goto	l1246
 17359  004D7E                     l17978:
 17360  004D7E  0100               	movlb	0	; () banked
 17361  004D80  51B2               	movf	writeRegisterExtended@timeout& (0+255),w,b
 17362  004D82  6FB6               	movwf	??_writeRegisterExtended& (0+255),b
 17363  004D84  51B3               	movf	(writeRegisterExtended@timeout+1)& (0+255),w,b
 17364  004D86  6FB7               	movwf	(??_writeRegisterExtended+1)& (0+255),b
 17365  004D88  6BB8               	clrf	(??_writeRegisterExtended+2)& (0+255),b
 17366  004D8A  6BB9               	clrf	(??_writeRegisterExtended+3)& (0+255),b
 17367  004D8C  51B6               	movf	??_writeRegisterExtended& (0+255),w,b
 17368  004D8E  5DDE               	subwf	_timekeeper& (0+255),w,b	;volatile
 17369  004D90  51B7               	movf	(??_writeRegisterExtended+1)& (0+255),w,b
 17370  004D92  59DF               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 17371  004D94  51B8               	movf	(??_writeRegisterExtended+2)& (0+255),w,b
 17372  004D96  59E0               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 17373  004D98  51B9               	movf	(??_writeRegisterExtended+3)& (0+255),w,b
 17374  004D9A  59E1               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 17375  004D9C  E3A5               	bnc	l1243
 17376  004D9E                     l17980:
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;main.c: 2920: }
 17380                           ;main.c: 2922: }
 17381                           ;main.c: 2924: }
 17382                           ;main.c: 2926: }
 17383                           ;main.c: 2928: return 0;
 17384  004D9E  0E00               	movlw	0
 17385  004DA0                     l1246:
 17386  004DA0  0012               	return	
 17387  004DA2                     __end_of_writeRegisterExtended:
 17388                           	opt stack 0
 17389                           tblptru	equ	0xFF8
 17390                           tblptrh	equ	0xFF7
 17391                           tblptrl	equ	0xFF6
 17392                           tablat	equ	0xFF5
 17393                           prodh	equ	0xFF4
 17394                           prodl	equ	0xFF3
 17395                           intcon	equ	0xFF2
 17396                           indf0	equ	0xFEF
 17397                           postinc0	equ	0xFEE
 17398                           fsr0h	equ	0xFEA
 17399                           fsr0l	equ	0xFE9
 17400                           wreg	equ	0xFE8
 17401                           indf1	equ	0xFE7
 17402                           postinc1	equ	0xFE6
 17403                           postdec1	equ	0xFE5
 17404                           fsr1h	equ	0xFE2
 17405                           fsr1l	equ	0xFE1
 17406                           indf2	equ	0xFDF
 17407                           postinc2	equ	0xFDE
 17408                           postdec2	equ	0xFDD
 17409                           plusw2	equ	0xFDB
 17410                           fsr2h	equ	0xFDA
 17411                           fsr2l	equ	0xFD9
 17412                           status	equ	0xFD8
 17413                           
 17414 ;; *************** function _printBinary *****************
 17415 ;; Defined at:
 17416 ;;		line 2972 in file "main.c"
 17417 ;; Parameters:    Size  Location     Type
 17418 ;;  value           1    wreg     unsigned char 
 17419 ;; Auto vars:     Size  Location     Type
 17420 ;;  value           1   33[COMRAM] unsigned char 
 17421 ;;  i               2   34[COMRAM] int 
 17422 ;; Return value:  Size  Location     Type
 17423 ;;		None               void
 17424 ;; Registers used:
 17425 ;;		wreg, status,2, status,0, cstack
 17426 ;; Tracked objects:
 17427 ;;		On entry : F/2
 17428 ;;		On exit  : 0/0
 17429 ;;		Unchanged: 0/0
 17430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17431 ;;      Params:         0       0       0       0       0       0       0
 17432 ;;      Locals:         3       0       0       0       0       0       0
 17433 ;;      Temps:          2       0       0       0       0       0       0
 17434 ;;      Totals:         5       0       0       0       0       0       0
 17435 ;;Total ram usage:        5 bytes
 17436 ;; Hardware stack levels used:    1
 17437 ;; Hardware stack levels required when called:    4
 17438 ;; This function calls:
 17439 ;;		_WriteUSART
 17440 ;; This function is called by:
 17441 ;;		_doModeVerbose
 17442 ;; This function uses a non-reentrant model
 17443 ;;
 17444                           
 17445                           	psect	text25
 17446  006648                     __ptext25:
 17447                           	opt stack 0
 17448  006648                     _printBinary:
 17449                           	opt stack 25
 17450                           
 17451                           ;incstack = 0
 17452                           ;incstack = 0
 17453                           ;printBinary@value stored from wreg
 17454  006648  CFE8 F022          	movff	wreg,printBinary@value
 17455                           
 17456                           ; BSR set to: 2
 17457                           ;main.c: 2973: int i;
 17458                           ;main.c: 2975: for (i = 7; i >= 0; i--) {
 17459  00664C  6A24               	clrf	printBinary@i+1,c
 17460  00664E  0E07               	movlw	7
 17461  006650  6E23               	movwf	printBinary@i,c
 17462  006652                     l17928:
 17463                           
 17464                           ;main.c: 2976: if (value & (1 << i)) {
 17465  006652  C023  F020         	movff	printBinary@i,??_printBinary
 17466  006656  0E01               	movlw	1
 17467  006658  6E21               	movwf	(??_printBinary+1)& (0+255),c
 17468  00665A  2A20               	incf	??_printBinary,f,c
 17469  00665C  D002               	goto	u23544
 17470  00665E                     u23545:
 17471  00665E  90D8               	bcf	status,0,c
 17472  006660  3621               	rlcf	??_printBinary+1,f,c
 17473  006662                     u23544:
 17474  006662  2E20               	decfsz	??_printBinary,f,c
 17475  006664  D7FC               	goto	u23545
 17476  006666  5021               	movf	??_printBinary+1,w,c
 17477  006668  1422               	andwf	printBinary@value,w,c
 17478  00666A  E006               	bz	l1266
 17479  00666C                     l1262:
 17480  00666C  A2AC               	btfss	4012,1,c	;volatile
 17481  00666E  D7FE               	goto	l1262
 17482                           
 17483                           ;main.c: 2978: WriteUSART('1');
 17484  006670  0E31               	movlw	49
 17485  006672  EC81  F035         	call	_WriteUSART
 17486                           
 17487                           ;main.c: 2979: } else {
 17488  006676  D005               	goto	l17936
 17489  006678                     l1266:
 17490  006678  A2AC               	btfss	4012,1,c	;volatile
 17491  00667A  D7FE               	goto	l1266
 17492                           
 17493                           ;main.c: 2981: WriteUSART('0');
 17494  00667C  0E30               	movlw	48
 17495  00667E  EC81  F035         	call	_WriteUSART
 17496  006682                     l17936:
 17497  006682  0623               	decf	printBinary@i,f,c
 17498  006684  A0D8               	btfss	status,0,c
 17499  006686  0624               	decf	printBinary@i+1,f,c
 17500  006688  BE24               	btfsc	printBinary@i+1,7,c
 17501  00668A  0012               	return	
 17502  00668C  D7E2               	goto	l17928
 17503  00668E                     __end_of_printBinary:
 17504                           	opt stack 0
 17505                           tblptru	equ	0xFF8
 17506                           tblptrh	equ	0xFF7
 17507                           tblptrl	equ	0xFF6
 17508                           tablat	equ	0xFF5
 17509                           prodh	equ	0xFF4
 17510                           prodl	equ	0xFF3
 17511                           intcon	equ	0xFF2
 17512                           indf0	equ	0xFEF
 17513                           postinc0	equ	0xFEE
 17514                           fsr0h	equ	0xFEA
 17515                           fsr0l	equ	0xFE9
 17516                           wreg	equ	0xFE8
 17517                           indf1	equ	0xFE7
 17518                           postinc1	equ	0xFE6
 17519                           postdec1	equ	0xFE5
 17520                           fsr1h	equ	0xFE2
 17521                           fsr1l	equ	0xFE1
 17522                           indf2	equ	0xFDF
 17523                           postinc2	equ	0xFDE
 17524                           postdec2	equ	0xFDD
 17525                           plusw2	equ	0xFDB
 17526                           fsr2h	equ	0xFDA
 17527                           fsr2l	equ	0xFD9
 17528                           status	equ	0xFD8
 17529                           
 17530 ;; *************** function _readRegisterExtended *****************
 17531 ;; Defined at:
 17532 ;;		line 2781 in file "main.c"
 17533 ;; Parameters:    Size  Location     Type
 17534 ;;  nodeid          1    wreg     unsigned char 
 17535 ;;  page            2   79[BANK0 ] unsigned short 
 17536 ;;  reg             1   81[BANK0 ] unsigned char 
 17537 ;;  timeout         2   82[BANK0 ] unsigned short 
 17538 ;;  value           2   84[BANK0 ] PTR unsigned char 
 17539 ;;		 -> doModeVerbose@value_1375(1), doModeVerbose@value(1), 
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;  nodeid          1   90[BANK0 ] unsigned char 
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  1    wreg      enum E15660
 17544 ;; Registers used:
 17545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17546 ;; Tracked objects:
 17547 ;;		On entry : F/2
 17548 ;;		On exit  : E/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17551 ;;      Params:         0       7       0       0       0       0       0
 17552 ;;      Locals:         0       1       0       0       0       0       0
 17553 ;;      Temps:          0       4       0       0       0       0       0
 17554 ;;      Totals:         0      12       0       0       0       0       0
 17555 ;;Total ram usage:       12 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; Hardware stack levels required when called:    7
 17558 ;; This function calls:
 17559 ;;		_checkCANBusState
 17560 ;;		_sendVSCPFrame
 17561 ;;		_getVSCPFrame
 17562 ;; This function is called by:
 17563 ;;		_doModeVerbose
 17564 ;; This function uses a non-reentrant model
 17565 ;;
 17566                           
 17567                           	psect	text26
 17568  004EAA                     __ptext26:
 17569                           	opt stack 0
 17570  004EAA                     _readRegisterExtended:
 17571                           	opt stack 22
 17572                           
 17573                           ;incstack = 0
 17574                           ;incstack = 0
 17575                           ;readRegisterExtended@nodeid stored from wreg
 17576  004EAA  CFE8 F0BA          	movff	wreg,readRegisterExtended@nodeid
 17577                           
 17578                           ; BSR set to: 2
 17579                           ;main.c: 2782: vscpData[ 0 ] = nodeid;
 17580  004EAE  C0BA  F1A5         	movff	readRegisterExtended@nodeid,_vscpData
 17581                           
 17582                           ; BSR set to: 2
 17583                           ;main.c: 2783: vscpData[ 1 ] = page >> 8;
 17584  004EB2  0100               	movlb	0	; () banked
 17585  004EB4  51B0               	movf	(readRegisterExtended@page+1)& (0+255),w,b
 17586  004EB6  0101               	movlb	1	; () banked
 17587  004EB8  6FA6               	movwf	(_vscpData+1)& (0+255),b
 17588                           
 17589                           ; BSR set to: 1
 17590                           ;main.c: 2784: vscpData[ 2 ] = page & 0xff;
 17591  004EBA  C0AF  F1A7         	movff	readRegisterExtended@page,_vscpData+2
 17592                           
 17593                           ; BSR set to: 1
 17594                           ;main.c: 2785: vscpData[ 3 ] = reg;
 17595  004EBE  C0B1  F1A8         	movff	readRegisterExtended@reg,_vscpData+3
 17596                           
 17597                           ; BSR set to: 1
 17598                           ;main.c: 2786: vscpData[ 4 ] = 1;
 17599  004EC2  0E01               	movlw	1
 17600  004EC4  6FA9               	movwf	(_vscpData+4)& (0+255),b
 17601                           
 17602                           ; BSR set to: 1
 17603                           ;main.c: 2788: if ( sendVSCPFrame(0,
 17604                           ;main.c: 2789: 37,
 17605                           ;main.c: 2790: 0,
 17606                           ;main.c: 2791: 0,
 17607                           ;main.c: 2792: 5,
 17608                           ;main.c: 2793: vscpData ) ) {
 17609  004EC6  0100               	movlb	0	; () banked
 17610  004EC8  6B90               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 17611  004ECA  6B8F               	clrf	?_sendVSCPFrame& (0+255),b
 17612  004ECC  0E25               	movlw	37
 17613  004ECE  6F91               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 17614  004ED0  6B92               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 17615  004ED2  6B93               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 17616  004ED4  0E05               	movlw	5
 17617  004ED6  6F94               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 17618  004ED8  0E01               	movlw	high _vscpData
 17619  004EDA  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 17620  004EDC  0EA5               	movlw	low _vscpData
 17621  004EDE  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 17622  004EE0  EC07  F02C         	call	_sendVSCPFrame	;wreg free
 17623  004EE4  0900               	iorlw	0
 17624  004EE6  E05F               	bz	l17576
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;main.c: 2795: timekeeper = 0;
 17628  004EE8  6BDE               	clrf	_timekeeper& (0+255),b	;volatile
 17629  004EEA  6BDF               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 17630  004EEC  6BE0               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 17631  004EEE  6BE1               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 17632                           
 17633                           ;main.c: 2796: while (timekeeper < timeout) {
 17634  004EF0  D04A               	goto	l17574
 17635  004EF2                     l1225:
 17636                           
 17637                           ; BSR set to: 0
 17638  004EF2  0004               	clrwdt		;# 
 17639                           
 17640                           ;main.c: 2799: checkCANBusState();
 17641  004EF4  EC2E  F035         	call	_checkCANBusState	;wreg free
 17642                           
 17643                           ;main.c: 2801: if ( getVSCPFrame( &vscpClass,
 17644                           ;main.c: 2802: &vscpType,
 17645                           ;main.c: 2803: &vscpNodeId,
 17646                           ;main.c: 2804: &vscpPriority,
 17647                           ;main.c: 2805: &vscpSize,
 17648                           ;main.c: 2806: vscpData ) ) {
 17649  004EF8  0E01               	movlw	high _vscpClass
 17650  004EFA  0100               	movlb	0	; () banked
 17651  004EFC  6F6D               	movwf	(?_getVSCPFrame+1)& (0+255),b
 17652  004EFE  0EAD               	movlw	low _vscpClass
 17653  004F00  6F6C               	movwf	?_getVSCPFrame& (0+255),b
 17654  004F02  0E01               	movlw	high _vscpType
 17655  004F04  6F6F               	movwf	(?_getVSCPFrame+3)& (0+255),b
 17656  004F06  0EB2               	movlw	low _vscpType
 17657  004F08  6F6E               	movwf	(?_getVSCPFrame+2)& (0+255),b
 17658  004F0A  0E01               	movlw	high _vscpNodeId
 17659  004F0C  6F71               	movwf	(?_getVSCPFrame+5)& (0+255),b
 17660  004F0E  0EAF               	movlw	low _vscpNodeId
 17661  004F10  6F70               	movwf	(?_getVSCPFrame+4)& (0+255),b
 17662  004F12  0E01               	movlw	high _vscpPriority
 17663  004F14  6F73               	movwf	(?_getVSCPFrame+7)& (0+255),b
 17664  004F16  0EB0               	movlw	low _vscpPriority
 17665  004F18  6F72               	movwf	(?_getVSCPFrame+6)& (0+255),b
 17666  004F1A  0E01               	movlw	high _vscpSize
 17667  004F1C  6F75               	movwf	(?_getVSCPFrame+9)& (0+255),b
 17668  004F1E  0EB1               	movlw	low _vscpSize
 17669  004F20  6F74               	movwf	(?_getVSCPFrame+8)& (0+255),b
 17670  004F22  0E01               	movlw	high _vscpData
 17671  004F24  6F77               	movwf	(?_getVSCPFrame+11)& (0+255),b
 17672  004F26  0EA5               	movlw	low _vscpData
 17673  004F28  6F76               	movwf	(?_getVSCPFrame+10)& (0+255),b
 17674  004F2A  EC3A  F02F         	call	_getVSCPFrame	;wreg free
 17675  004F2E  0900               	iorlw	0
 17676  004F30  E02A               	bz	l17574
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;main.c: 2807: if ( ( nodeid == vscpNodeId ) &&
 17680                           ;main.c: 2808: ( 0 == vscpClass ) &&
 17681                           ;main.c: 2809: ( 39 == vscpType ) &&
 17682                           ;main.c: 2810: ( 5 == vscpSize ) &&
 17683                           ;main.c: 2811: ( 0 == vscpData[ 0 ] ) &&
 17684                           ;main.c: 2812: ( (page >> 8) == vscpData[ 1 ] ) &&
 17685                           ;main.c: 2813: ( (page & 0xff) == vscpData[ 2 ] ) &&
 17686                           ;main.c: 2814: ( reg == vscpData[ 3 ] ) ) {
 17687  004F32  0101               	movlb	1	; () banked
 17688  004F34  51AF               	movf	_vscpNodeId& (0+255),w,b
 17689  004F36  0100               	movlb	0	; () banked
 17690  004F38  63BA               	cpfseq	readRegisterExtended@nodeid& (0+255),b
 17691  004F3A  D025               	goto	l17574
 17692                           
 17693                           ; BSR set to: 0
 17694  004F3C  0101               	movlb	1	; () banked
 17695  004F3E  51AE               	movf	(_vscpClass+1)& (0+255),w,b
 17696  004F40  11AD               	iorwf	_vscpClass& (0+255),w,b
 17697  004F42  E121               	bnz	l17574
 17698                           
 17699                           ; BSR set to: 1
 17700  004F44  51B2               	movf	_vscpType& (0+255),w,b
 17701  004F46  0A27               	xorlw	39
 17702  004F48  E11E               	bnz	l17574
 17703                           
 17704                           ; BSR set to: 1
 17705  004F4A  51B1               	movf	_vscpSize& (0+255),w,b
 17706  004F4C  0A05               	xorlw	5
 17707  004F4E  E11B               	bnz	l17574
 17708                           
 17709                           ; BSR set to: 1
 17710  004F50  67A5               	tstfsz	_vscpData& (0+255),b
 17711  004F52  D019               	goto	l17574
 17712                           
 17713                           ; BSR set to: 1
 17714  004F54  0100               	movlb	0	; () banked
 17715  004F56  51B0               	movf	(readRegisterExtended@page+1)& (0+255),w,b
 17716  004F58  0101               	movlb	1	; () banked
 17717  004F5A  19A6               	xorwf	(_vscpData+1)& (0+255),w,b
 17718  004F5C  E114               	bnz	l17574
 17719                           
 17720                           ; BSR set to: 1
 17721  004F5E  0100               	movlb	0	; () banked
 17722  004F60  51AF               	movf	readRegisterExtended@page& (0+255),w,b
 17723  004F62  EE21  F0A7         	lfsr	2,_vscpData+2
 17724  004F66  62DF               	cpfseq	indf2,c
 17725  004F68  D00E               	goto	l17574
 17726                           
 17727                           ; BSR set to: 1
 17728  004F6A  51B1               	movf	readRegisterExtended@reg& (0+255),w,b
 17729  004F6C  0101               	movlb	1	; () banked
 17730  004F6E  EE21  F0A8         	lfsr	2,_vscpData+3
 17731  004F72  62DF               	cpfseq	indf2,c
 17732  004F74  D008               	goto	l17574
 17733                           
 17734                           ; BSR set to: 1
 17735                           ;main.c: 2815: *value = vscpData[ 4 ];
 17736  004F76  C0B4  FFD9         	movff	readRegisterExtended@value,fsr2l
 17737  004F7A  C0B5  FFDA         	movff	readRegisterExtended@value+1,fsr2h
 17738  004F7E  C1A9  FFDF         	movff	_vscpData+4,indf2
 17739                           
 17740                           ; BSR set to: 1
 17741                           ;main.c: 2816: return 1;
 17742  004F82  0E01               	movlw	1
 17743  004F84  D011               	goto	l1228
 17744  004F86                     l17574:
 17745  004F86  0100               	movlb	0	; () banked
 17746  004F88  51B2               	movf	readRegisterExtended@timeout& (0+255),w,b
 17747  004F8A  6FB6               	movwf	??_readRegisterExtended& (0+255),b
 17748  004F8C  51B3               	movf	(readRegisterExtended@timeout+1)& (0+255),w,b
 17749  004F8E  6FB7               	movwf	(??_readRegisterExtended+1)& (0+255),b
 17750  004F90  6BB8               	clrf	(??_readRegisterExtended+2)& (0+255),b
 17751  004F92  6BB9               	clrf	(??_readRegisterExtended+3)& (0+255),b
 17752  004F94  51B6               	movf	??_readRegisterExtended& (0+255),w,b
 17753  004F96  5DDE               	subwf	_timekeeper& (0+255),w,b	;volatile
 17754  004F98  51B7               	movf	(??_readRegisterExtended+1)& (0+255),w,b
 17755  004F9A  59DF               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 17756  004F9C  51B8               	movf	(??_readRegisterExtended+2)& (0+255),w,b
 17757  004F9E  59E0               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 17758  004FA0  51B9               	movf	(??_readRegisterExtended+3)& (0+255),w,b
 17759  004FA2  59E1               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 17760  004FA4  E3A6               	bnc	l1225
 17761  004FA6                     l17576:
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;main.c: 2817: }
 17765                           ;main.c: 2818: }
 17766                           ;main.c: 2819: }
 17767                           ;main.c: 2820: }
 17768                           ;main.c: 2822: return 0;
 17769  004FA6  0E00               	movlw	0
 17770  004FA8                     l1228:
 17771  004FA8  0012               	return	
 17772  004FAA                     __end_of_readRegisterExtended:
 17773                           	opt stack 0
 17774                           tblptru	equ	0xFF8
 17775                           tblptrh	equ	0xFF7
 17776                           tblptrl	equ	0xFF6
 17777                           tablat	equ	0xFF5
 17778                           prodh	equ	0xFF4
 17779                           prodl	equ	0xFF3
 17780                           intcon	equ	0xFF2
 17781                           indf0	equ	0xFEF
 17782                           postinc0	equ	0xFEE
 17783                           fsr0h	equ	0xFEA
 17784                           fsr0l	equ	0xFE9
 17785                           wreg	equ	0xFE8
 17786                           indf1	equ	0xFE7
 17787                           postinc1	equ	0xFE6
 17788                           postdec1	equ	0xFE5
 17789                           fsr1h	equ	0xFE2
 17790                           fsr1l	equ	0xFE1
 17791                           indf2	equ	0xFDF
 17792                           postinc2	equ	0xFDE
 17793                           postdec2	equ	0xFDD
 17794                           plusw2	equ	0xFDB
 17795                           fsr2h	equ	0xFDA
 17796                           fsr2l	equ	0xFD9
 17797                           status	equ	0xFD8
 17798                           
 17799 ;; *************** function _strcpy *****************
 17800 ;; Defined at:
 17801 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcpy.c"
 17802 ;; Parameters:    Size  Location     Type
 17803 ;;  to              2   30[COMRAM] PTR unsigned char 
 17804 ;;		 -> cmdbuf(80), 
 17805 ;;  from            2   32[COMRAM] PTR const unsigned char 
 17806 ;;		 -> cmdbuf(80), 
 17807 ;; Auto vars:     Size  Location     Type
 17808 ;;  cp              2   34[COMRAM] PTR unsigned char 
 17809 ;;		 -> cmdbuf(80), 
 17810 ;; Return value:  Size  Location     Type
 17811 ;;                  2   30[COMRAM] PTR unsigned char 
 17812 ;; Registers used:
 17813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17814 ;; Tracked objects:
 17815 ;;		On entry : F/1
 17816 ;;		On exit  : F/1
 17817 ;;		Unchanged: F/0
 17818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17819 ;;      Params:         4       0       0       0       0       0       0
 17820 ;;      Locals:         2       0       0       0       0       0       0
 17821 ;;      Temps:          0       0       0       0       0       0       0
 17822 ;;      Totals:         6       0       0       0       0       0       0
 17823 ;;Total ram usage:        6 bytes
 17824 ;; Hardware stack levels used:    1
 17825 ;; Hardware stack levels required when called:    3
 17826 ;; This function calls:
 17827 ;;		Nothing
 17828 ;; This function is called by:
 17829 ;;		_doModeVerbose
 17830 ;; This function uses a non-reentrant model
 17831 ;;
 17832                           
 17833                           	psect	text27
 17834  0069DA                     __ptext27:
 17835                           	opt stack 0
 17836  0069DA                     _strcpy:
 17837                           	opt stack 26
 17838                           
 17839                           ; BSR set to: 1
 17840                           
 17841                           ;incstack = 0
 17842                           ;incstack = 0
 17843  0069DA  C01F  F023         	movff	strcpy@to,strcpy@cp
 17844  0069DE  C020  F024         	movff	strcpy@to+1,strcpy@cp+1
 17845  0069E2  D004               	goto	l17526
 17846  0069E4                     l17524:
 17847                           
 17848                           ; BSR set to: 1
 17849  0069E4  4A23               	infsnz	strcpy@cp,f,c
 17850  0069E6  2A24               	incf	strcpy@cp+1,f,c
 17851  0069E8  4A21               	infsnz	strcpy@from,f,c
 17852  0069EA  2A22               	incf	strcpy@from+1,f,c
 17853  0069EC                     l17526:
 17854                           
 17855                           ; BSR set to: 1
 17856  0069EC  C021  FFD9         	movff	strcpy@from,fsr2l
 17857  0069F0  C022  FFDA         	movff	strcpy@from+1,fsr2h
 17858  0069F4  C023  FFE1         	movff	strcpy@cp,fsr1l
 17859  0069F8  C024  FFE2         	movff	strcpy@cp+1,fsr1h
 17860  0069FC  CFDF FFE7          	movff	indf2,indf1
 17861  006A00  50E7               	movf	indf1,w,c
 17862  006A02  B4D8               	btfsc	status,2,c
 17863                           
 17864                           ; BSR set to: 1
 17865  006A04  0012               	return	
 17866  006A06  D7EE               	goto	l17524
 17867  006A08                     __end_of_strcpy:
 17868                           	opt stack 0
 17869                           tblptru	equ	0xFF8
 17870                           tblptrh	equ	0xFF7
 17871                           tblptrl	equ	0xFF6
 17872                           tablat	equ	0xFF5
 17873                           prodh	equ	0xFF4
 17874                           prodl	equ	0xFF3
 17875                           intcon	equ	0xFF2
 17876                           indf0	equ	0xFEF
 17877                           postinc0	equ	0xFEE
 17878                           fsr0h	equ	0xFEA
 17879                           fsr0l	equ	0xFE9
 17880                           wreg	equ	0xFE8
 17881                           indf1	equ	0xFE7
 17882                           postinc1	equ	0xFE6
 17883                           postdec1	equ	0xFE5
 17884                           fsr1h	equ	0xFE2
 17885                           fsr1l	equ	0xFE1
 17886                           indf2	equ	0xFDF
 17887                           postinc2	equ	0xFDE
 17888                           postdec2	equ	0xFDD
 17889                           plusw2	equ	0xFDB
 17890                           fsr2h	equ	0xFDA
 17891                           fsr2l	equ	0xFD9
 17892                           status	equ	0xFD8
 17893                           
 17894 ;; *************** function _findNodes *****************
 17895 ;; Defined at:
 17896 ;;		line 3122 in file "main.c"
 17897 ;; Parameters:    Size  Location     Type
 17898 ;;		None
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;  i               1   99[BANK0 ] unsigned char 
 17901 ;;  bDot            1   98[BANK0 ] enum E15660
 17902 ;;  value           1   97[BANK0 ] unsigned char 
 17903 ;;  nFound          1   96[BANK0 ] unsigned char 
 17904 ;; Return value:  Size  Location     Type
 17905 ;;		None               void
 17906 ;; Registers used:
 17907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17908 ;; Tracked objects:
 17909 ;;		On entry : F/1
 17910 ;;		On exit  : 0/0
 17911 ;;		Unchanged: 0/0
 17912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17913 ;;      Params:         0       0       0       0       0       0       0
 17914 ;;      Locals:         0       6       0       0       0       0       0
 17915 ;;      Temps:          0       0       0       0       0       0       0
 17916 ;;      Totals:         0       6       0       0       0       0       0
 17917 ;;Total ram usage:        6 bytes
 17918 ;; Hardware stack levels used:    1
 17919 ;; Hardware stack levels required when called:    9
 17920 ;; This function calls:
 17921 ;;		_putsUSART
 17922 ;;		_WriteUSART
 17923 ;;		_printNodeFirmwareVersion
 17924 ;;		_printGUID
 17925 ;;		_printMDF
 17926 ;;		_itoa
 17927 ;;		_readRegister
 17928 ;; This function is called by:
 17929 ;;		_doModeVerbose
 17930 ;; This function uses a non-reentrant model
 17931 ;;
 17932                           
 17933                           	psect	text28
 17934  004806                     __ptext28:
 17935                           	opt stack 0
 17936  004806                     _findNodes:
 17937                           	opt stack 20
 17938                           
 17939                           ; BSR set to: 1
 17940                           ;main.c: 3123: uint8_t nFound = 0;
 17941                           
 17942                           ; BSR set to: 1
 17943                           ;incstack = 0
 17944                           ;incstack = 0
 17945  004806  0100               	movlb	0	; () banked
 17946  004808  6BC0               	clrf	findNodes@nFound& (0+255),b
 17947                           
 17948                           ;main.c: 3124: uint8_t i;
 17949                           ;main.c: 3125: uint8_t value;
 17950                           ;main.c: 3126: BOOL bDot = 0;
 17951  00480A  6BC2               	clrf	findNodes@bDot& (0+255),b
 17952                           
 17953                           ; BSR set to: 0
 17954                           ;main.c: 3128: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 17955  00480C  506F               	movf	3951,w,c	;volatile
 17956  00480E  0BE0               	andlw	224
 17957  004810  E007               	bz	l17468
 17958                           
 17959                           ; BSR set to: 0
 17960                           ;main.c: 3129: putsUSART( (char *)"-ERROR - Command only works if interface is open.\r\n
      +                          " );
 17961  004812  0E73               	movlw	high STR_50
 17962  004814  6E21               	movwf	?_putsUSART+1,c
 17963  004816  0E13               	movlw	low STR_50
 17964  004818  6E20               	movwf	?_putsUSART,c
 17965  00481A  ECD5  F032         	call	_putsUSART	;wreg free
 17966  00481E  D08C               	goto	l1328
 17967  004820                     l17468:
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;main.c: 3131: }
 17971                           ;main.c: 3133: putsUSART((char *) "-----------------------------------------------------
      +                          -----------\r\n");
 17972  004820  0E6F               	movlw	high STR_282
 17973  004822  6E21               	movwf	?_putsUSART+1,c
 17974  004824  0EDC               	movlw	low STR_282
 17975  004826  6E20               	movwf	?_putsUSART,c
 17976  004828  ECD5  F032         	call	_putsUSART	;wreg free
 17977                           
 17978                           ;main.c: 3135: for (i = 1; i != 0; i++) {
 17979  00482C  0E01               	movlw	1
 17980  00482E  0100               	movlb	0	; () banked
 17981  004830  6FC3               	movwf	findNodes@i& (0+255),b
 17982  004832                     l1329:
 17983                           
 17984                           ; BSR set to: 0
 17985  004832  0004               	clrwdt		;# 
 17986                           
 17987                           ;main.c: 3139: if (readRegister( i,
 17988                           ;main.c: 3140: 0xE0,
 17989                           ;main.c: 3141: rwtimeout,
 17990                           ;main.c: 3142: &value ) ) {
 17991  004834  0EE0               	movlw	224
 17992  004836  0100               	movlb	0	; () banked
 17993  004838  6FAF               	movwf	?_readRegister& (0+255),b
 17994  00483A  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 17995  00483E  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 17996  004840  0EC1               	movlw	low findNodes@value
 17997  004842  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 17998  004844  51C3               	movf	findNodes@i& (0+255),w,b
 17999  004846  EC11  F02A         	call	_readRegister
 18000  00484A  0900               	iorlw	0
 18001  00484C  E04A               	bz	l17504
 18002                           
 18003                           ;main.c: 3143: if ( bDot ) {
 18004  00484E  0100               	movlb	0	; () banked
 18005  004850  51C2               	movf	findNodes@bDot& (0+255),w,b
 18006  004852  E006               	bz	l1332
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;main.c: 3144: putsUSART((char *) "\r\n");
 18010  004854  0E72               	movlw	high (STR_241+51)
 18011  004856  6E21               	movwf	?_putsUSART+1,c
 18012  004858  0EDA               	movlw	low (STR_241+51)
 18013  00485A  6E20               	movwf	?_putsUSART,c
 18014  00485C  ECD5  F032         	call	_putsUSART	;wreg free
 18015  004860                     l1332:
 18016                           
 18017                           ;main.c: 3145: }
 18018                           ;main.c: 3146: putsUSART((char *) "Node found with node id = ");
 18019  004860  0E7A               	movlw	high STR_284
 18020  004862  6E21               	movwf	?_putsUSART+1,c
 18021  004864  0EB3               	movlw	low STR_284
 18022  004866  6E20               	movwf	?_putsUSART,c
 18023  004868  ECD5  F032         	call	_putsUSART	;wreg free
 18024                           
 18025                           ;main.c: 3147: itoa(wrkbuf, vscpNodeId, bHex ? 16 : 10);
 18026  00486C  0101               	movlb	1	; () banked
 18027  00486E  6700               	tstfsz	_bHex& (0+255),b
 18028  004870  D004               	goto	l17486
 18029                           
 18030                           ; BSR set to: 1
 18031  004872  0100               	movlb	0	; () banked
 18032  004874  6BBF               	clrf	(_findNodes$1711+1)& (0+255),b
 18033  004876  0E0A               	movlw	10
 18034  004878  D003               	goto	L28
 18035  00487A                     l17486:
 18036                           
 18037                           ; BSR set to: 1
 18038  00487A  0100               	movlb	0	; () banked
 18039  00487C  6BBF               	clrf	(_findNodes$1711+1)& (0+255),b
 18040  00487E  0E10               	movlw	16
 18041  004880                     L28:
 18042  004880  6FBE               	movwf	_findNodes$1711& (0+255),b
 18043                           
 18044                           ; BSR set to: 0
 18045  004882  0E01               	movlw	high _wrkbuf
 18046  004884  0100               	movlb	0	; () banked
 18047  004886  6F6A               	movwf	(?_itoa+1)& (0+255),b
 18048  004888  0E55               	movlw	low _wrkbuf
 18049  00488A  6F69               	movwf	?_itoa& (0+255),b
 18050  00488C  C1AF  F06B         	movff	_vscpNodeId,?_itoa+2
 18051  004890  6B6C               	clrf	(?_itoa+3)& (0+255),b
 18052  004892  C0BE  F06D         	movff	_findNodes$1711,?_itoa+4
 18053  004896  C0BF  F06E         	movff	_findNodes$1711+1,?_itoa+5
 18054  00489A  EC9F  F034         	call	_itoa	;wreg free
 18055                           
 18056                           ; BSR set to: 0
 18057                           ;main.c: 3148: putsUSART(wrkbuf);
 18058  00489E  0101               	movlb	1	; () banked
 18059  0048A0  0E01               	movlw	high _wrkbuf
 18060  0048A2  6E21               	movwf	?_putsUSART+1,c
 18061  0048A4  0E55               	movlw	low _wrkbuf
 18062  0048A6  6E20               	movwf	?_putsUSART,c
 18063  0048A8  ECD5  F032         	call	_putsUSART	;wreg free
 18064                           
 18065                           ;main.c: 3149: putsUSART((char *) "\r\n");
 18066  0048AC  0E72               	movlw	high (STR_241+51)
 18067  0048AE  6E21               	movwf	?_putsUSART+1,c
 18068  0048B0  0EDA               	movlw	low (STR_241+51)
 18069  0048B2  6E20               	movwf	?_putsUSART,c
 18070  0048B4  ECD5  F032         	call	_putsUSART	;wreg free
 18071                           
 18072                           ;main.c: 3150: printNodeFirmwareVersion(i);
 18073  0048B8  0100               	movlb	0	; () banked
 18074  0048BA  51C3               	movf	findNodes@i& (0+255),w,b
 18075  0048BC  EC7A  F02A         	call	_printNodeFirmwareVersion
 18076                           
 18077                           ;main.c: 3151: printGUID(i);
 18078  0048C0  0100               	movlb	0	; () banked
 18079  0048C2  51C3               	movf	findNodes@i& (0+255),w,b
 18080  0048C4  ECD5  F027         	call	_printGUID
 18081                           
 18082                           ;main.c: 3152: printMDF(i);
 18083  0048C8  0100               	movlb	0	; () banked
 18084  0048CA  51C3               	movf	findNodes@i& (0+255),w,b
 18085  0048CC  ECA2  F02E         	call	_printMDF
 18086                           
 18087                           ;main.c: 3153: putsUSART((char *) "-----------------------------------------------------
      +                          -----------\r\n");
 18088  0048D0  0E6F               	movlw	high STR_282
 18089  0048D2  6E21               	movwf	?_putsUSART+1,c
 18090  0048D4  0EDC               	movlw	low STR_282
 18091  0048D6  6E20               	movwf	?_putsUSART,c
 18092  0048D8  ECD5  F032         	call	_putsUSART	;wreg free
 18093                           
 18094                           ;main.c: 3154: nFound++;
 18095  0048DC  0100               	movlb	0	; () banked
 18096  0048DE  2BC0               	incf	findNodes@nFound& (0+255),f,b
 18097                           
 18098                           ;main.c: 3155: }
 18099  0048E0  D007               	goto	l17510
 18100  0048E2                     l17504:
 18101                           
 18102                           ;main.c: 3156: else {
 18103                           ;main.c: 3157: bDot = 1;
 18104  0048E2  0E01               	movlw	1
 18105  0048E4  0100               	movlb	0	; () banked
 18106  0048E6  6FC2               	movwf	findNodes@bDot& (0+255),b
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;main.c: 3158: WriteUSART('.');
 18110  0048E8  0E2E               	movlw	46
 18111  0048EA  EC81  F035         	call	_WriteUSART
 18112                           
 18113                           ;main.c: 3159: (!TXSTAbits.TRMT);
 18114  0048EE  50AC               	movf	4012,w,c	;volatile
 18115  0048F0                     l17510:
 18116  0048F0  0100               	movlb	0	; () banked
 18117  0048F2  2BC3               	incf	findNodes@i& (0+255),f,b
 18118                           
 18119                           ; BSR set to: 0
 18120  0048F4  67C3               	tstfsz	findNodes@i& (0+255),b
 18121  0048F6  D79D               	goto	l1329
 18122                           
 18123                           ; BSR set to: 0
 18124                           ;main.c: 3160: }
 18125                           ;main.c: 3162: }
 18126                           ;main.c: 3164: putsUSART((char *) "\r\n");
 18127  0048F8  0E72               	movlw	high (STR_241+51)
 18128  0048FA  6E21               	movwf	?_putsUSART+1,c
 18129  0048FC  0EDA               	movlw	low (STR_241+51)
 18130  0048FE  6E20               	movwf	?_putsUSART,c
 18131  004900  ECD5  F032         	call	_putsUSART	;wreg free
 18132                           
 18133                           ;main.c: 3165: itoa(wrkbuf, nFound, 10);
 18134  004904  0E01               	movlw	high _wrkbuf
 18135  004906  0100               	movlb	0	; () banked
 18136  004908  6F6A               	movwf	(?_itoa+1)& (0+255),b
 18137  00490A  0E55               	movlw	low _wrkbuf
 18138  00490C  6F69               	movwf	?_itoa& (0+255),b
 18139  00490E  C0C0  F06B         	movff	findNodes@nFound,?_itoa+2
 18140  004912  6B6C               	clrf	(?_itoa+3)& (0+255),b
 18141  004914  6B6E               	clrf	(?_itoa+5)& (0+255),b
 18142  004916  0E0A               	movlw	10
 18143  004918  6F6D               	movwf	(?_itoa+4)& (0+255),b
 18144  00491A  EC9F  F034         	call	_itoa	;wreg free
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;main.c: 3166: putsUSART(wrkbuf);
 18148  00491E  0101               	movlb	1	; () banked
 18149  004920  0E01               	movlw	high _wrkbuf
 18150  004922  6E21               	movwf	?_putsUSART+1,c
 18151  004924  0E55               	movlw	low _wrkbuf
 18152  004926  6E20               	movwf	?_putsUSART,c
 18153  004928  ECD5  F032         	call	_putsUSART	;wreg free
 18154                           
 18155                           ;main.c: 3167: putsUSART((char *) " node(s) found\r\n");
 18156  00492C  0E7D               	movlw	high STR_288
 18157  00492E  6E21               	movwf	?_putsUSART+1,c
 18158  004930  0EC8               	movlw	low STR_288
 18159  004932  6E20               	movwf	?_putsUSART,c
 18160  004934  ECD5  F032         	call	_putsUSART	;wreg free
 18161  004938                     l1328:
 18162  004938  0012               	return	
 18163  00493A                     __end_of_findNodes:
 18164                           	opt stack 0
 18165                           tblptru	equ	0xFF8
 18166                           tblptrh	equ	0xFF7
 18167                           tblptrl	equ	0xFF6
 18168                           tablat	equ	0xFF5
 18169                           prodh	equ	0xFF4
 18170                           prodl	equ	0xFF3
 18171                           intcon	equ	0xFF2
 18172                           indf0	equ	0xFEF
 18173                           postinc0	equ	0xFEE
 18174                           fsr0h	equ	0xFEA
 18175                           fsr0l	equ	0xFE9
 18176                           wreg	equ	0xFE8
 18177                           indf1	equ	0xFE7
 18178                           postinc1	equ	0xFE6
 18179                           postdec1	equ	0xFE5
 18180                           fsr1h	equ	0xFE2
 18181                           fsr1l	equ	0xFE1
 18182                           indf2	equ	0xFDF
 18183                           postinc2	equ	0xFDE
 18184                           postdec2	equ	0xFDD
 18185                           plusw2	equ	0xFDB
 18186                           fsr2h	equ	0xFDA
 18187                           fsr2l	equ	0xFD9
 18188                           status	equ	0xFD8
 18189                           
 18190 ;; *************** function _printMDF *****************
 18191 ;; Defined at:
 18192 ;;		line 3218 in file "main.c"
 18193 ;; Parameters:    Size  Location     Type
 18194 ;;  nodeid          1    wreg     unsigned char 
 18195 ;; Auto vars:     Size  Location     Type
 18196 ;;  nodeid          1   88[BANK0 ] unsigned char 
 18197 ;;  p               2   90[BANK0 ] PTR unsigned char 
 18198 ;;		 -> wrkbuf(80), 
 18199 ;;  i               1   92[BANK0 ] unsigned char 
 18200 ;;  value           1   89[BANK0 ] unsigned char 
 18201 ;; Return value:  Size  Location     Type
 18202 ;;		None               void
 18203 ;; Registers used:
 18204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18205 ;; Tracked objects:
 18206 ;;		On entry : D/2
 18207 ;;		On exit  : 0/0
 18208 ;;		Unchanged: 0/0
 18209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18210 ;;      Params:         0       0       0       0       0       0       0
 18211 ;;      Locals:         0       5       0       0       0       0       0
 18212 ;;      Temps:          0       0       0       0       0       0       0
 18213 ;;      Totals:         0       5       0       0       0       0       0
 18214 ;;Total ram usage:        5 bytes
 18215 ;; Hardware stack levels used:    1
 18216 ;; Hardware stack levels required when called:    8
 18217 ;; This function calls:
 18218 ;;		_putsUSART
 18219 ;;		_memset
 18220 ;;		_readRegister
 18221 ;; This function is called by:
 18222 ;;		_doModeVerbose
 18223 ;;		_findNodes
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           	psect	text29
 18228  005D44                     __ptext29:
 18229                           	opt stack 0
 18230  005D44                     _printMDF:
 18231                           	opt stack 21
 18232                           
 18233                           ;incstack = 0
 18234                           ;incstack = 0
 18235                           ;printMDF@nodeid stored from wreg
 18236  005D44  CFE8 F0B8          	movff	wreg,printMDF@nodeid
 18237                           
 18238                           ;main.c: 3219: uint8_t i;
 18239                           ;main.c: 3220: uint8_t value;
 18240                           ;main.c: 3221: char *p = wrkbuf;
 18241  005D48  0E01               	movlw	high _wrkbuf
 18242  005D4A  0100               	movlb	0	; () banked
 18243  005D4C  6FBB               	movwf	(printMDF@p+1)& (0+255),b
 18244  005D4E  0E55               	movlw	low _wrkbuf
 18245  005D50  6FBA               	movwf	printMDF@p& (0+255),b
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;main.c: 3222: memset( wrkbuf, 0, sizeof( wrkbuf ) );
 18249  005D52  0101               	movlb	1	; () banked
 18250  005D54  0E01               	movlw	high _wrkbuf
 18251  005D56  6E20               	movwf	?_memset+1,c
 18252  005D58  0E55               	movlw	low _wrkbuf
 18253  005D5A  D83A               	call	PL30	;call to abstracted procedure
 18254  005D5C  EC04  F035         	call	_memset	;wreg free
 18255                           
 18256                           ;main.c: 3223: putsUSART((char *) "MDF = http://");
 18257  005D60  0E7E               	movlw	high STR_294
 18258  005D62  6E21               	movwf	?_putsUSART+1,c
 18259  005D64  0E0A               	movlw	low STR_294
 18260  005D66  6E20               	movwf	?_putsUSART,c
 18261  005D68  ECD5  F032         	call	_putsUSART	;wreg free
 18262                           
 18263                           ;main.c: 3225: for (i = 0; i < 32; i++) {
 18264  005D6C  0100               	movlb	0	; () banked
 18265  005D6E  6BBC               	clrf	printMDF@i& (0+255),b
 18266  005D70                     l18056:
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;main.c: 3226: if (readRegister(nodeid,
 18270                           ;main.c: 3227: 0xE0 + i,
 18271                           ;main.c: 3228: rwtimeout,
 18272                           ;main.c: 3229: &value)) {
 18273  005D70  51BC               	movf	printMDF@i& (0+255),w,b
 18274  005D72  0FE0               	addlw	224
 18275  005D74  6FAF               	movwf	?_readRegister& (0+255),b
 18276  005D76  0100               	movlb	0	; () banked
 18277  005D78  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 18278  005D7C  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 18279  005D7E  0EB9               	movlw	low printMDF@value
 18280  005D80  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 18281  005D82  51B8               	movf	printMDF@nodeid& (0+255),w,b
 18282  005D84  EC11  F02A         	call	_readRegister
 18283  005D88  0900               	iorlw	0
 18284  005D8A  E00A               	bz	l18062
 18285                           
 18286                           ;main.c: 3230: *p = value;
 18287  005D8C  C0BA  FFD9         	movff	printMDF@p,fsr2l
 18288  005D90  C0BB  FFDA         	movff	printMDF@p+1,fsr2h
 18289  005D94  C0B9  FFDF         	movff	printMDF@value,indf2
 18290  005D98                     l18060:
 18291                           
 18292                           ;main.c: 3231: p++;
 18293  005D98  0100               	movlb	0	; () banked
 18294  005D9A  4BBA               	infsnz	printMDF@p& (0+255),f,b
 18295  005D9C  2BBB               	incf	(printMDF@p+1)& (0+255),f,b
 18296                           
 18297                           ;main.c: 3233: }
 18298  005D9E  D007               	goto	l18066
 18299  005DA0                     l18062:
 18300                           
 18301                           ;main.c: 3234: else {
 18302                           ;main.c: 3235: *p = '?';
 18303  005DA0  C0BA  FFD9         	movff	printMDF@p,fsr2l
 18304  005DA4  C0BB  FFDA         	movff	printMDF@p+1,fsr2h
 18305  005DA8  0E3F               	movlw	63
 18306  005DAA  6EDF               	movwf	indf2,c
 18307  005DAC  D7F5               	goto	l18060
 18308  005DAE                     l18066:
 18309                           
 18310                           ; BSR set to: 0
 18311  005DAE  2BBC               	incf	printMDF@i& (0+255),f,b
 18312                           
 18313                           ; BSR set to: 0
 18314  005DB0  0E1F               	movlw	31
 18315  005DB2  65BC               	cpfsgt	printMDF@i& (0+255),b
 18316  005DB4  D7DD               	goto	l18056
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;main.c: 3237: }
 18320                           ;main.c: 3238: }
 18321                           ;main.c: 3240: putsUSART(wrkbuf);
 18322  005DB6  0101               	movlb	1	; () banked
 18323  005DB8  0E01               	movlw	high _wrkbuf
 18324  005DBA  6E21               	movwf	?_putsUSART+1,c
 18325  005DBC  0E55               	movlw	low _wrkbuf
 18326  005DBE  6E20               	movwf	?_putsUSART,c
 18327  005DC0  ECD5  F032         	call	_putsUSART	;wreg free
 18328                           
 18329                           ;main.c: 3241: putsUSART((char *) "\r\n");
 18330  005DC4  0E72               	movlw	high (STR_241+51)
 18331  005DC6  6E21               	movwf	?_putsUSART+1,c
 18332  005DC8  0EDA               	movlw	low (STR_241+51)
 18333  005DCA  6E20               	movwf	?_putsUSART,c
 18334  005DCC  EFD5  F032         	goto	_putsUSART	;wreg free
 18335  005DD0                     __end_of_printMDF:
 18336                           	opt stack 0
 18337  005DD0                     PL30:
 18338                           	opt stack 20
 18339  005DD0  6E1F               	movwf	?_memset,c
 18340  005DD2  6A22               	clrf	?_memset+3,c
 18341  005DD4  6A21               	clrf	?_memset+2,c
 18342  005DD6  6A24               	clrf	?_memset+5,c
 18343  005DD8  0E50               	movlw	80
 18344  005DDA  6E23               	movwf	?_memset+4,c
 18345  005DDC  0C50               	retlw	80
 18346  005DDE                     __end_ofPL30:
 18347                           	opt stack 0
 18348                           tblptru	equ	0xFF8
 18349                           tblptrh	equ	0xFF7
 18350                           tblptrl	equ	0xFF6
 18351                           tablat	equ	0xFF5
 18352                           prodh	equ	0xFF4
 18353                           prodl	equ	0xFF3
 18354                           intcon	equ	0xFF2
 18355                           indf0	equ	0xFEF
 18356                           postinc0	equ	0xFEE
 18357                           fsr0h	equ	0xFEA
 18358                           fsr0l	equ	0xFE9
 18359                           wreg	equ	0xFE8
 18360                           indf1	equ	0xFE7
 18361                           postinc1	equ	0xFE6
 18362                           postdec1	equ	0xFE5
 18363                           fsr1h	equ	0xFE2
 18364                           fsr1l	equ	0xFE1
 18365                           indf2	equ	0xFDF
 18366                           postinc2	equ	0xFDE
 18367                           postdec2	equ	0xFDD
 18368                           plusw2	equ	0xFDB
 18369                           fsr2h	equ	0xFDA
 18370                           fsr2l	equ	0xFD9
 18371                           status	equ	0xFD8
 18372                           
 18373 ;; *************** function _printGUID *****************
 18374 ;; Defined at:
 18375 ;;		line 3177 in file "main.c"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;  nodeid          1    wreg     unsigned char 
 18378 ;; Auto vars:     Size  Location     Type
 18379 ;;  nodeid          1   88[BANK0 ] unsigned char 
 18380 ;;  buf             3   89[BANK0 ] unsigned char [3]
 18381 ;;  i               1   93[BANK0 ] unsigned char 
 18382 ;;  value           1   92[BANK0 ] unsigned char 
 18383 ;; Return value:  Size  Location     Type
 18384 ;;		None               void
 18385 ;; Registers used:
 18386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18387 ;; Tracked objects:
 18388 ;;		On entry : D/2
 18389 ;;		On exit  : 0/0
 18390 ;;		Unchanged: 0/0
 18391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18392 ;;      Params:         0       0       0       0       0       0       0
 18393 ;;      Locals:         0       6       0       0       0       0       0
 18394 ;;      Temps:          0       0       0       0       0       0       0
 18395 ;;      Totals:         0       6       0       0       0       0       0
 18396 ;;Total ram usage:        6 bytes
 18397 ;; Hardware stack levels used:    1
 18398 ;; Hardware stack levels required when called:    8
 18399 ;; This function calls:
 18400 ;;		_putsUSART
 18401 ;;		_memset
 18402 ;;		_strlen
 18403 ;;		_itoa
 18404 ;;		_readRegister
 18405 ;;		_strcat
 18406 ;; This function is called by:
 18407 ;;		_doModeVerbose
 18408 ;;		_findNodes
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text30
 18413  004FAA                     __ptext30:
 18414                           	opt stack 0
 18415  004FAA                     _printGUID:
 18416                           	opt stack 21
 18417                           
 18418                           ;incstack = 0
 18419                           ;incstack = 0
 18420                           ;printGUID@nodeid stored from wreg
 18421  004FAA  CFE8 F0B8          	movff	wreg,printGUID@nodeid
 18422                           
 18423                           ;main.c: 3178: uint8_t i;
 18424                           ;main.c: 3179: uint8_t value;
 18425                           ;main.c: 3180: char buf[3];
 18426                           ;main.c: 3182: memset( wrkbuf, 0, sizeof( wrkbuf ) );
 18427  004FAE  0101               	movlb	1	; () banked
 18428  004FB0  0E01               	movlw	high _wrkbuf
 18429  004FB2  6E20               	movwf	?_memset+1,c
 18430  004FB4  0E55               	movlw	low _wrkbuf
 18431  004FB6  ECE8  F02E         	call	PL30	;call to abstracted procedure
 18432  004FBA  EC04  F035         	call	_memset	;wreg free
 18433                           
 18434                           ;main.c: 3183: putsUSART((char *) "GUID = ");
 18435  004FBE  0E7E               	movlw	high STR_289
 18436  004FC0  6E21               	movwf	?_putsUSART+1,c
 18437  004FC2  0ED8               	movlw	low STR_289
 18438  004FC4  6E20               	movwf	?_putsUSART,c
 18439  004FC6  ECD5  F032         	call	_putsUSART	;wreg free
 18440                           
 18441                           ;main.c: 3185: for (i = 0; i < 16; i++) {
 18442  004FCA  0100               	movlb	0	; () banked
 18443  004FCC  6BBD               	clrf	printGUID@i& (0+255),b
 18444  004FCE                     l18022:
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;main.c: 3186: if (readRegister(nodeid,
 18448                           ;main.c: 3187: 0xD0 + i,
 18449                           ;main.c: 3188: rwtimeout,
 18450                           ;main.c: 3189: &value)) {
 18451  004FCE  51BD               	movf	printGUID@i& (0+255),w,b
 18452  004FD0  0FD0               	addlw	208
 18453  004FD2  6FAF               	movwf	?_readRegister& (0+255),b
 18454  004FD4  0100               	movlb	0	; () banked
 18455  004FD6  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 18456  004FDA  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 18457  004FDC  0EBC               	movlw	low printGUID@value
 18458  004FDE  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 18459  004FE0  51B8               	movf	printGUID@nodeid& (0+255),w,b
 18460  004FE2  EC11  F02A         	call	_readRegister
 18461  004FE6  0900               	iorlw	0
 18462  004FE8  E029               	bz	l18032
 18463                           
 18464                           ;main.c: 3190: itoa(buf, value, 16);
 18465  004FEA  0100               	movlb	0	; () banked
 18466  004FEC  0E00               	movlw	high printGUID@buf
 18467  004FEE  6F6A               	movwf	(?_itoa+1)& (0+255),b
 18468  004FF0  0EB9               	movlw	low printGUID@buf
 18469  004FF2  6F69               	movwf	?_itoa& (0+255),b
 18470  004FF4  C0BC  F06B         	movff	printGUID@value,?_itoa+2
 18471  004FF8  6B6C               	clrf	(?_itoa+3)& (0+255),b
 18472  004FFA  6B6E               	clrf	(?_itoa+5)& (0+255),b
 18473  004FFC  0E10               	movlw	16
 18474  004FFE  6F6D               	movwf	(?_itoa+4)& (0+255),b
 18475  005000  EC9F  F034         	call	_itoa	;wreg free
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;main.c: 3191: if (1 == strlen(buf)) {
 18479  005004  0E00               	movlw	high printGUID@buf
 18480  005006  6E20               	movwf	?_strlen+1,c
 18481  005008  0EB9               	movlw	low printGUID@buf
 18482  00500A  6E1F               	movwf	?_strlen,c
 18483  00500C  EC2B  F034         	call	_strlen	;wreg free
 18484  005010  041F               	decf	?_strlen,w,c
 18485  005012  1020               	iorwf	?_strlen+1,w,c
 18486  005014  E10F               	bnz	l18030
 18487                           
 18488                           ;main.c: 3192: strcat(wrkbuf, "0");
 18489  005016  0101               	movlb	1	; () banked
 18490  005018  0E01               	movlw	high _wrkbuf
 18491  00501A  6E20               	movwf	?_strcat+1,c
 18492  00501C  0E55               	movlw	low _wrkbuf
 18493  00501E  6E1F               	movwf	?_strcat,c
 18494  005020  0E7F               	movlw	high STR_290
 18495  005022  6E22               	movwf	?_strcat+3,c
 18496  005024  0EF8               	movlw	low STR_290
 18497  005026  6E21               	movwf	?_strcat+2,c
 18498  005028  ECAA  F032         	call	_strcat	;wreg free
 18499                           
 18500                           ;main.c: 3193: strcat(wrkbuf, buf);
 18501  00502C  D833               	call	PL96	;call to abstracted procedure
 18502  00502E  ECAA  F032         	call	_strcat	;wreg free
 18503                           
 18504                           ;main.c: 3194: } else {
 18505  005032  D00F               	goto	l18034
 18506  005034                     l18030:
 18507                           
 18508                           ;main.c: 3195: strcat(wrkbuf, buf);
 18509  005034  D82F               	call	PL96	;call to abstracted procedure
 18510  005036  ECAA  F032         	call	_strcat	;wreg free
 18511  00503A  D00B               	goto	l18034
 18512  00503C                     l18032:
 18513                           
 18514                           ;main.c: 3199: strcat(wrkbuf, "--");
 18515  00503C  0101               	movlb	1	; () banked
 18516  00503E  0E01               	movlw	high _wrkbuf
 18517  005040  6E20               	movwf	?_strcat+1,c
 18518  005042  0E55               	movlw	low _wrkbuf
 18519  005044  6E1F               	movwf	?_strcat,c
 18520  005046  0E7F               	movlw	high STR_291
 18521  005048  6E22               	movwf	?_strcat+3,c
 18522  00504A  0EE4               	movlw	low STR_291
 18523  00504C  6E21               	movwf	?_strcat+2,c
 18524  00504E  ECAA  F032         	call	_strcat	;wreg free
 18525  005052                     l18034:
 18526                           
 18527                           ;main.c: 3200: }
 18528                           ;main.c: 3202: if (i < 15) {
 18529  005052  0E0F               	movlw	15
 18530  005054  0100               	movlb	0	; () banked
 18531  005056  61BD               	cpfslt	printGUID@i& (0+255),b
 18532  005058  D00B               	goto	l18038
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;main.c: 3203: strcat(wrkbuf, ":");
 18536  00505A  0101               	movlb	1	; () banked
 18537  00505C  0E01               	movlw	high _wrkbuf
 18538  00505E  6E20               	movwf	?_strcat+1,c
 18539  005060  0E55               	movlw	low _wrkbuf
 18540  005062  6E1F               	movwf	?_strcat,c
 18541  005064  0E7F               	movlw	high STR_292
 18542  005066  6E22               	movwf	?_strcat+3,c
 18543  005068  0EFA               	movlw	low STR_292
 18544  00506A  6E21               	movwf	?_strcat+2,c
 18545  00506C  ECAA  F032         	call	_strcat	;wreg free
 18546  005070                     l18038:
 18547  005070  0100               	movlb	0	; () banked
 18548  005072  2BBD               	incf	printGUID@i& (0+255),f,b
 18549                           
 18550                           ; BSR set to: 0
 18551  005074  0E0F               	movlw	15
 18552  005076  65BD               	cpfsgt	printGUID@i& (0+255),b
 18553  005078  D7AA               	goto	l18022
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;main.c: 3204: }
 18557                           ;main.c: 3206: }
 18558                           ;main.c: 3208: putsUSART(wrkbuf);
 18559  00507A  0101               	movlb	1	; () banked
 18560  00507C  0E01               	movlw	high _wrkbuf
 18561  00507E  6E21               	movwf	?_putsUSART+1,c
 18562  005080  0E55               	movlw	low _wrkbuf
 18563  005082  6E20               	movwf	?_putsUSART,c
 18564  005084  ECD5  F032         	call	_putsUSART	;wreg free
 18565                           
 18566                           ;main.c: 3209: putsUSART((char *) "\r\n");
 18567  005088  0E72               	movlw	high (STR_241+51)
 18568  00508A  6E21               	movwf	?_putsUSART+1,c
 18569  00508C  0EDA               	movlw	low (STR_241+51)
 18570  00508E  6E20               	movwf	?_putsUSART,c
 18571  005090  EFD5  F032         	goto	_putsUSART	;wreg free
 18572  005094                     __end_of_printGUID:
 18573                           	opt stack 0
 18574  005094                     PL96:
 18575                           	opt stack 21
 18576  005094  0E01               	movlw	high _wrkbuf
 18577  005096  6E20               	movwf	?_strcat+1,c
 18578  005098  0E55               	movlw	low _wrkbuf
 18579  00509A  6E1F               	movwf	?_strcat,c
 18580  00509C  0100               	movlb	0	; () banked
 18581  00509E  0E00               	movlw	high printGUID@buf
 18582  0050A0  6E22               	movwf	?_strcat+3,c
 18583  0050A2  0EB9               	movlw	low printGUID@buf
 18584  0050A4  6E21               	movwf	?_strcat+2,c
 18585  0050A6  0012               	return	
 18586  0050A8                     __end_ofPL96:
 18587                           	opt stack 0
 18588                           tblptru	equ	0xFF8
 18589                           tblptrh	equ	0xFF7
 18590                           tblptrl	equ	0xFF6
 18591                           tablat	equ	0xFF5
 18592                           prodh	equ	0xFF4
 18593                           prodl	equ	0xFF3
 18594                           intcon	equ	0xFF2
 18595                           indf0	equ	0xFEF
 18596                           postinc0	equ	0xFEE
 18597                           fsr0h	equ	0xFEA
 18598                           fsr0l	equ	0xFE9
 18599                           wreg	equ	0xFE8
 18600                           indf1	equ	0xFE7
 18601                           postinc1	equ	0xFE6
 18602                           postdec1	equ	0xFE5
 18603                           fsr1h	equ	0xFE2
 18604                           fsr1l	equ	0xFE1
 18605                           indf2	equ	0xFDF
 18606                           postinc2	equ	0xFDE
 18607                           postdec2	equ	0xFDD
 18608                           plusw2	equ	0xFDB
 18609                           fsr2h	equ	0xFDA
 18610                           fsr2l	equ	0xFD9
 18611                           status	equ	0xFD8
 18612                           
 18613 ;; *************** function _printNodeFirmwareVersion *****************
 18614 ;; Defined at:
 18615 ;;		line 3249 in file "main.c"
 18616 ;; Parameters:    Size  Location     Type
 18617 ;;  nodeid          1    wreg     unsigned char 
 18618 ;; Auto vars:     Size  Location     Type
 18619 ;;  nodeid          1   88[BANK0 ] unsigned char 
 18620 ;;  buf             3   89[BANK0 ] unsigned char [3]
 18621 ;;  i               1   93[BANK0 ] unsigned char 
 18622 ;;  value           1   92[BANK0 ] unsigned char 
 18623 ;; Return value:  Size  Location     Type
 18624 ;;		None               void
 18625 ;; Registers used:
 18626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18627 ;; Tracked objects:
 18628 ;;		On entry : D/2
 18629 ;;		On exit  : 0/0
 18630 ;;		Unchanged: 0/0
 18631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18632 ;;      Params:         0       0       0       0       0       0       0
 18633 ;;      Locals:         0       6       0       0       0       0       0
 18634 ;;      Temps:          0       0       0       0       0       0       0
 18635 ;;      Totals:         0       6       0       0       0       0       0
 18636 ;;Total ram usage:        6 bytes
 18637 ;; Hardware stack levels used:    1
 18638 ;; Hardware stack levels required when called:    8
 18639 ;; This function calls:
 18640 ;;		_putsUSART
 18641 ;;		_memset
 18642 ;;		_itoa
 18643 ;;		_readRegister
 18644 ;;		_strcat
 18645 ;; This function is called by:
 18646 ;;		_doModeVerbose
 18647 ;;		_findNodes
 18648 ;; This function uses a non-reentrant model
 18649 ;;
 18650                           
 18651                           	psect	text31
 18652  0054F4                     __ptext31:
 18653                           	opt stack 0
 18654  0054F4                     _printNodeFirmwareVersion:
 18655                           	opt stack 21
 18656                           
 18657                           ;incstack = 0
 18658                           ;incstack = 0
 18659                           ;printNodeFirmwareVersion@nodeid stored from wreg
 18660  0054F4  CFE8 F0B8          	movff	wreg,printNodeFirmwareVersion@nodeid
 18661                           
 18662                           ;main.c: 3250: uint8_t i;
 18663                           ;main.c: 3251: uint8_t value;
 18664                           ;main.c: 3252: char buf[3];
 18665                           ;main.c: 3254: memset( wrkbuf, 0, sizeof(wrkbuf) );
 18666  0054F8  0101               	movlb	1	; () banked
 18667  0054FA  0E01               	movlw	high _wrkbuf
 18668  0054FC  6E20               	movwf	?_memset+1,c
 18669  0054FE  0E55               	movlw	low _wrkbuf
 18670  005500  ECE8  F02E         	call	PL30	;call to abstracted procedure
 18671  005504  EC04  F035         	call	_memset	;wreg free
 18672                           
 18673                           ;main.c: 3255: putsUSART((char *) "Firmware version = ");
 18674  005508  0E7D               	movlw	high STR_296
 18675  00550A  6E21               	movwf	?_putsUSART+1,c
 18676  00550C  0E49               	movlw	low STR_296
 18677  00550E  6E20               	movwf	?_putsUSART,c
 18678  005510  ECD5  F032         	call	_putsUSART	;wreg free
 18679                           
 18680                           ;main.c: 3257: for (i = 0; i < 3; i++) {
 18681  005514  0100               	movlb	0	; () banked
 18682  005516  6BBD               	clrf	printNodeFirmwareVersion@i& (0+255),b
 18683  005518                     l17994:
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;main.c: 3258: if (readRegister(nodeid,
 18687                           ;main.c: 3259: 0x94 + i,
 18688                           ;main.c: 3260: rwtimeout,
 18689                           ;main.c: 3261: &value)) {
 18690  005518  51BD               	movf	printNodeFirmwareVersion@i& (0+255),w,b
 18691  00551A  0F94               	addlw	148
 18692  00551C  6FAF               	movwf	?_readRegister& (0+255),b
 18693  00551E  0100               	movlb	0	; () banked
 18694  005520  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 18695  005524  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 18696  005526  0EBC               	movlw	low printNodeFirmwareVersion@value
 18697  005528  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 18698  00552A  51B8               	movf	printNodeFirmwareVersion@nodeid& (0+255),w,b
 18699  00552C  EC11  F02A         	call	_readRegister
 18700  005530  0900               	iorlw	0
 18701  005532  E019               	bz	l18000
 18702                           
 18703                           ;main.c: 3262: itoa(buf, value, 16);
 18704  005534  0100               	movlb	0	; () banked
 18705  005536  0E00               	movlw	high printNodeFirmwareVersion@buf
 18706  005538  6F6A               	movwf	(?_itoa+1)& (0+255),b
 18707  00553A  0EB9               	movlw	low printNodeFirmwareVersion@buf
 18708  00553C  6F69               	movwf	?_itoa& (0+255),b
 18709  00553E  C0BC  F06B         	movff	printNodeFirmwareVersion@value,?_itoa+2
 18710  005542  6B6C               	clrf	(?_itoa+3)& (0+255),b
 18711  005544  6B6E               	clrf	(?_itoa+5)& (0+255),b
 18712  005546  0E10               	movlw	16
 18713  005548  6F6D               	movwf	(?_itoa+4)& (0+255),b
 18714  00554A  EC9F  F034         	call	_itoa	;wreg free
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;main.c: 3263: strcat(wrkbuf, buf);
 18718  00554E  0E01               	movlw	high _wrkbuf
 18719  005550  6E20               	movwf	?_strcat+1,c
 18720  005552  0E55               	movlw	low _wrkbuf
 18721  005554  6E1F               	movwf	?_strcat,c
 18722  005556  0100               	movlb	0	; () banked
 18723  005558  0E00               	movlw	high printNodeFirmwareVersion@buf
 18724  00555A  6E22               	movwf	?_strcat+3,c
 18725  00555C  0EB9               	movlw	low printNodeFirmwareVersion@buf
 18726  00555E  6E21               	movwf	?_strcat+2,c
 18727  005560  ECAA  F032         	call	_strcat	;wreg free
 18728                           
 18729                           ;main.c: 3264: }
 18730  005564  D00B               	goto	l18002
 18731  005566                     l18000:
 18732                           
 18733                           ;main.c: 3265: else {
 18734                           ;main.c: 3266: strcat(wrkbuf, "?");
 18735  005566  0101               	movlb	1	; () banked
 18736  005568  0E01               	movlw	high _wrkbuf
 18737  00556A  6E20               	movwf	?_strcat+1,c
 18738  00556C  0E55               	movlw	low _wrkbuf
 18739  00556E  6E1F               	movwf	?_strcat,c
 18740  005570  0E7F               	movlw	high STR_169
 18741  005572  6E22               	movwf	?_strcat+3,c
 18742  005574  0EFC               	movlw	low STR_169
 18743  005576  6E21               	movwf	?_strcat+2,c
 18744  005578  ECAA  F032         	call	_strcat	;wreg free
 18745  00557C                     l18002:
 18746                           
 18747                           ;main.c: 3267: }
 18748                           ;main.c: 3269: if (i < 2) {
 18749  00557C  0E02               	movlw	2
 18750  00557E  0100               	movlb	0	; () banked
 18751  005580  61BD               	cpfslt	printNodeFirmwareVersion@i& (0+255),b
 18752  005582  D00B               	goto	l18006
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;main.c: 3270: strcat(wrkbuf, ".");
 18756  005584  0101               	movlb	1	; () banked
 18757  005586  0E01               	movlw	high _wrkbuf
 18758  005588  6E20               	movwf	?_strcat+1,c
 18759  00558A  0E55               	movlw	low _wrkbuf
 18760  00558C  6E1F               	movwf	?_strcat,c
 18761  00558E  0E7F               	movlw	high STR_298
 18762  005590  6E22               	movwf	?_strcat+3,c
 18763  005592  0EF6               	movlw	low STR_298
 18764  005594  6E21               	movwf	?_strcat+2,c
 18765  005596  ECAA  F032         	call	_strcat	;wreg free
 18766  00559A                     l18006:
 18767  00559A  0100               	movlb	0	; () banked
 18768  00559C  2BBD               	incf	printNodeFirmwareVersion@i& (0+255),f,b
 18769                           
 18770                           ; BSR set to: 0
 18771  00559E  0E02               	movlw	2
 18772  0055A0  65BD               	cpfsgt	printNodeFirmwareVersion@i& (0+255),b
 18773  0055A2  D7BA               	goto	l17994
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;main.c: 3271: }
 18777                           ;main.c: 3273: }
 18778                           ;main.c: 3275: putsUSART(wrkbuf);
 18779  0055A4  0101               	movlb	1	; () banked
 18780  0055A6  0E01               	movlw	high _wrkbuf
 18781  0055A8  6E21               	movwf	?_putsUSART+1,c
 18782  0055AA  0E55               	movlw	low _wrkbuf
 18783  0055AC  6E20               	movwf	?_putsUSART,c
 18784  0055AE  ECD5  F032         	call	_putsUSART	;wreg free
 18785                           
 18786                           ;main.c: 3276: putsUSART((char *) "\r\n");
 18787  0055B2  0E72               	movlw	high (STR_241+51)
 18788  0055B4  6E21               	movwf	?_putsUSART+1,c
 18789  0055B6  0EDA               	movlw	low (STR_241+51)
 18790  0055B8  6E20               	movwf	?_putsUSART,c
 18791  0055BA  EFD5  F032         	goto	_putsUSART	;wreg free
 18792  0055BE                     __end_of_printNodeFirmwareVersion:
 18793                           	opt stack 0
 18794                           tblptru	equ	0xFF8
 18795                           tblptrh	equ	0xFF7
 18796                           tblptrl	equ	0xFF6
 18797                           tablat	equ	0xFF5
 18798                           prodh	equ	0xFF4
 18799                           prodl	equ	0xFF3
 18800                           intcon	equ	0xFF2
 18801                           indf0	equ	0xFEF
 18802                           postinc0	equ	0xFEE
 18803                           fsr0h	equ	0xFEA
 18804                           fsr0l	equ	0xFE9
 18805                           wreg	equ	0xFE8
 18806                           indf1	equ	0xFE7
 18807                           postinc1	equ	0xFE6
 18808                           postdec1	equ	0xFE5
 18809                           fsr1h	equ	0xFE2
 18810                           fsr1l	equ	0xFE1
 18811                           indf2	equ	0xFDF
 18812                           postinc2	equ	0xFDE
 18813                           postdec2	equ	0xFDD
 18814                           plusw2	equ	0xFDB
 18815                           fsr2h	equ	0xFDA
 18816                           fsr2l	equ	0xFD9
 18817                           status	equ	0xFD8
 18818                           
 18819 ;; *************** function _strcat *****************
 18820 ;; Defined at:
 18821 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcat.c"
 18822 ;; Parameters:    Size  Location     Type
 18823 ;;  to              2   30[COMRAM] PTR unsigned char 
 18824 ;;		 -> wrkbuf(80), 
 18825 ;;  from            2   32[COMRAM] PTR const unsigned char 
 18826 ;;		 -> STR_298(2), STR_297(2), printNodeFirmwareVersion@buf(3), STR_292(2), 
 18827 ;;		 -> STR_291(3), STR_290(2), printGUID@buf(3), 
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;  cp              2   34[COMRAM] PTR unsigned char 
 18830 ;;		 -> wrkbuf(80), 
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  2   30[COMRAM] PTR unsigned char 
 18833 ;; Registers used:
 18834 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18835 ;; Tracked objects:
 18836 ;;		On entry : E/1
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18840 ;;      Params:         4       0       0       0       0       0       0
 18841 ;;      Locals:         2       0       0       0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0
 18843 ;;      Totals:         6       0       0       0       0       0       0
 18844 ;;Total ram usage:        6 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    3
 18847 ;; This function calls:
 18848 ;;		Nothing
 18849 ;; This function is called by:
 18850 ;;		_printGUID
 18851 ;;		_printNodeFirmwareVersion
 18852 ;; This function uses a non-reentrant model
 18853 ;;
 18854                           
 18855                           	psect	text32
 18856  006554                     __ptext32:
 18857                           	opt stack 0
 18858  006554                     _strcat:
 18859                           	opt stack 25
 18860                           
 18861                           ;incstack = 0
 18862                           ;incstack = 0
 18863  006554  C01F  F023         	movff	strcat@to,strcat@cp
 18864  006558  C020  F024         	movff	strcat@to+1,strcat@cp+1
 18865  00655C  D002               	goto	l18750
 18866  00655E                     l18748:
 18867  00655E  4A23               	infsnz	strcat@cp,f,c
 18868  006560  2A24               	incf	strcat@cp+1,f,c
 18869  006562                     l18750:
 18870  006562  C023  FFD9         	movff	strcat@cp,fsr2l
 18871  006566  C024  FFDA         	movff	strcat@cp+1,fsr2h
 18872  00656A  50DF               	movf	indf2,w,c
 18873  00656C  E005               	bz	l18754
 18874  00656E  D7F7               	goto	l18748
 18875  006570                     l18752:
 18876  006570  4A23               	infsnz	strcat@cp,f,c
 18877  006572  2A24               	incf	strcat@cp+1,f,c
 18878  006574  4A21               	infsnz	strcat@from,f,c
 18879  006576  2A22               	incf	strcat@from+1,f,c
 18880  006578                     l18754:
 18881  006578  C021  FFF6         	movff	strcat@from,tblptrl
 18882  00657C  C022  FFF7         	movff	strcat@from+1,tblptrh
 18883  006580  6AF8               	clrf	tblptru,c
 18884  006582  C023  FFD9         	movff	strcat@cp,fsr2l
 18885  006586  C024  FFDA         	movff	strcat@cp+1,fsr2h
 18886  00658A  0E05               	movlw	(high __ramtop+-1)
 18887  00658C  64F7               	cpfsgt	tblptrh,c
 18888  00658E  D003               	bra	u24907
 18889  006590  0008               	tblrd		*
 18890  006592  50F5               	movf	tablat,w,c
 18891  006594  D005               	bra	u24900
 18892  006596                     u24907:
 18893  006596  CFF6 FFE9          	movff	tblptrl,fsr0l
 18894  00659A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18895  00659E  50EF               	movf	indf0,w,c
 18896  0065A0                     u24900:
 18897  0065A0  6EDF               	movwf	indf2,c
 18898  0065A2  50DF               	movf	indf2,w,c
 18899  0065A4  B4D8               	btfsc	status,2,c
 18900  0065A6  0012               	return	
 18901  0065A8  D7E3               	goto	l18752
 18902  0065AA                     __end_of_strcat:
 18903                           	opt stack 0
 18904                           tblptru	equ	0xFF8
 18905                           tblptrh	equ	0xFF7
 18906                           tblptrl	equ	0xFF6
 18907                           tablat	equ	0xFF5
 18908                           prodh	equ	0xFF4
 18909                           prodl	equ	0xFF3
 18910                           intcon	equ	0xFF2
 18911                           indf0	equ	0xFEF
 18912                           postinc0	equ	0xFEE
 18913                           fsr0h	equ	0xFEA
 18914                           fsr0l	equ	0xFE9
 18915                           wreg	equ	0xFE8
 18916                           indf1	equ	0xFE7
 18917                           postinc1	equ	0xFE6
 18918                           postdec1	equ	0xFE5
 18919                           fsr1h	equ	0xFE2
 18920                           fsr1l	equ	0xFE1
 18921                           indf2	equ	0xFDF
 18922                           postinc2	equ	0xFDE
 18923                           postdec2	equ	0xFDD
 18924                           plusw2	equ	0xFDB
 18925                           fsr2h	equ	0xFDA
 18926                           fsr2l	equ	0xFD9
 18927                           status	equ	0xFD8
 18928                           
 18929 ;; *************** function _readRegister *****************
 18930 ;; Defined at:
 18931 ;;		line 2734 in file "main.c"
 18932 ;; Parameters:    Size  Location     Type
 18933 ;;  nodeid          1    wreg     unsigned char 
 18934 ;;  reg             1   79[BANK0 ] unsigned char 
 18935 ;;  timeout         2   80[BANK0 ] unsigned short 
 18936 ;;  value           1   82[BANK0 ] PTR unsigned char 
 18937 ;;		 -> printNodeFirmwareVersion@value(1), printMDF@value(1), printGUID@value(1), findNodes@value(1), 
 18938 ;; Auto vars:     Size  Location     Type
 18939 ;;  nodeid          1   87[BANK0 ] unsigned char 
 18940 ;; Return value:  Size  Location     Type
 18941 ;;                  1    wreg      enum E15660
 18942 ;; Registers used:
 18943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : F/0
 18946 ;;		On exit  : E/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18949 ;;      Params:         0       4       0       0       0       0       0
 18950 ;;      Locals:         0       1       0       0       0       0       0
 18951 ;;      Temps:          0       4       0       0       0       0       0
 18952 ;;      Totals:         0       9       0       0       0       0       0
 18953 ;;Total ram usage:        9 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:    7
 18956 ;; This function calls:
 18957 ;;		_checkCANBusState
 18958 ;;		_sendVSCPFrame
 18959 ;;		_getVSCPFrame
 18960 ;; This function is called by:
 18961 ;;		_findNodes
 18962 ;;		_printGUID
 18963 ;;		_printMDF
 18964 ;;		_printNodeFirmwareVersion
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           	psect	text33
 18969  005422                     __ptext33:
 18970                           	opt stack 0
 18971  005422                     _readRegister:
 18972                           	opt stack 21
 18973                           
 18974                           ;incstack = 0
 18975                           ;incstack = 0
 18976                           ;readRegister@nodeid stored from wreg
 18977  005422  CFE8 F0B7          	movff	wreg,readRegister@nodeid
 18978                           
 18979                           ; BSR set to: 0
 18980                           ;main.c: 2735: vscpData[ 0 ] = nodeid;
 18981  005426  C0B7  F1A5         	movff	readRegister@nodeid,_vscpData
 18982                           
 18983                           ; BSR set to: 0
 18984                           ;main.c: 2736: vscpData[ 1 ] = reg;
 18985  00542A  C0AF  F1A6         	movff	readRegister@reg,_vscpData+1
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;main.c: 2738: if (sendVSCPFrame(0,
 18989                           ;main.c: 2739: 9,
 18990                           ;main.c: 2740: 0,
 18991                           ;main.c: 2741: 0,
 18992                           ;main.c: 2742: 2,
 18993                           ;main.c: 2743: vscpData)) {
 18994  00542E  6B90               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 18995  005430  6B8F               	clrf	?_sendVSCPFrame& (0+255),b
 18996  005432  0E09               	movlw	9
 18997  005434  6F91               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 18998  005436  6B92               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 18999  005438  6B93               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 19000  00543A  0E02               	movlw	2
 19001  00543C  6F94               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 19002  00543E  0E01               	movlw	high _vscpData
 19003  005440  0100               	movlb	0	; () banked
 19004  005442  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 19005  005444  0EA5               	movlw	low _vscpData
 19006  005446  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 19007  005448  EC07  F02C         	call	_sendVSCPFrame	;wreg free
 19008  00544C  0900               	iorlw	0
 19009  00544E  E050               	bz	l18742
 19010                           
 19011                           ; BSR set to: 0
 19012                           ;main.c: 2745: timekeeper = 0;
 19013  005450  6BDE               	clrf	_timekeeper& (0+255),b	;volatile
 19014  005452  6BDF               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 19015  005454  6BE0               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 19016  005456  6BE1               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 19017                           
 19018                           ;main.c: 2746: while (timekeeper < timeout) {
 19019  005458  D03B               	goto	l18740
 19020  00545A                     l1216:
 19021                           
 19022                           ; BSR set to: 0
 19023  00545A  0004               	clrwdt		;# 
 19024                           
 19025                           ;main.c: 2749: checkCANBusState();
 19026  00545C  EC2E  F035         	call	_checkCANBusState	;wreg free
 19027                           
 19028                           ;main.c: 2751: if (getVSCPFrame(&vscpClass,
 19029                           ;main.c: 2752: &vscpType,
 19030                           ;main.c: 2753: &vscpNodeId,
 19031                           ;main.c: 2754: &vscpPriority,
 19032                           ;main.c: 2755: &vscpSize,
 19033                           ;main.c: 2756: vscpData)) {
 19034  005460  0E01               	movlw	high _vscpClass
 19035  005462  0100               	movlb	0	; () banked
 19036  005464  6F6D               	movwf	(?_getVSCPFrame+1)& (0+255),b
 19037  005466  0EAD               	movlw	low _vscpClass
 19038  005468  6F6C               	movwf	?_getVSCPFrame& (0+255),b
 19039  00546A  0E01               	movlw	high _vscpType
 19040  00546C  6F6F               	movwf	(?_getVSCPFrame+3)& (0+255),b
 19041  00546E  0EB2               	movlw	low _vscpType
 19042  005470  6F6E               	movwf	(?_getVSCPFrame+2)& (0+255),b
 19043  005472  0E01               	movlw	high _vscpNodeId
 19044  005474  6F71               	movwf	(?_getVSCPFrame+5)& (0+255),b
 19045  005476  0EAF               	movlw	low _vscpNodeId
 19046  005478  6F70               	movwf	(?_getVSCPFrame+4)& (0+255),b
 19047  00547A  0E01               	movlw	high _vscpPriority
 19048  00547C  6F73               	movwf	(?_getVSCPFrame+7)& (0+255),b
 19049  00547E  0EB0               	movlw	low _vscpPriority
 19050  005480  6F72               	movwf	(?_getVSCPFrame+6)& (0+255),b
 19051  005482  0E01               	movlw	high _vscpSize
 19052  005484  6F75               	movwf	(?_getVSCPFrame+9)& (0+255),b
 19053  005486  0EB1               	movlw	low _vscpSize
 19054  005488  6F74               	movwf	(?_getVSCPFrame+8)& (0+255),b
 19055  00548A  0E01               	movlw	high _vscpData
 19056  00548C  6F77               	movwf	(?_getVSCPFrame+11)& (0+255),b
 19057  00548E  0EA5               	movlw	low _vscpData
 19058  005490  6F76               	movwf	(?_getVSCPFrame+10)& (0+255),b
 19059  005492  EC3A  F02F         	call	_getVSCPFrame	;wreg free
 19060  005496  0900               	iorlw	0
 19061  005498  E01B               	bz	l18740
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;main.c: 2757: if ((nodeid == vscpNodeId) &&
 19065                           ;main.c: 2758: (0 == vscpClass) &&
 19066                           ;main.c: 2759: (10 == vscpType) &&
 19067                           ;main.c: 2760: (2 == vscpSize) &&
 19068                           ;main.c: 2761: (reg == vscpData[ 0 ])) {
 19069  00549A  0101               	movlb	1	; () banked
 19070  00549C  51AF               	movf	_vscpNodeId& (0+255),w,b
 19071  00549E  0100               	movlb	0	; () banked
 19072  0054A0  63B7               	cpfseq	readRegister@nodeid& (0+255),b
 19073  0054A2  D016               	goto	l18740
 19074                           
 19075                           ; BSR set to: 0
 19076  0054A4  0101               	movlb	1	; () banked
 19077  0054A6  51AE               	movf	(_vscpClass+1)& (0+255),w,b
 19078  0054A8  11AD               	iorwf	_vscpClass& (0+255),w,b
 19079  0054AA  E112               	bnz	l18740
 19080                           
 19081                           ; BSR set to: 1
 19082  0054AC  51B2               	movf	_vscpType& (0+255),w,b
 19083  0054AE  0A0A               	xorlw	10
 19084  0054B0  E10F               	bnz	l18740
 19085                           
 19086                           ; BSR set to: 1
 19087  0054B2  51B1               	movf	_vscpSize& (0+255),w,b
 19088  0054B4  0A02               	xorlw	2
 19089  0054B6  E10C               	bnz	l18740
 19090                           
 19091                           ; BSR set to: 1
 19092  0054B8  51A5               	movf	_vscpData& (0+255),w,b
 19093  0054BA  0100               	movlb	0	; () banked
 19094  0054BC  63AF               	cpfseq	readRegister@reg& (0+255),b
 19095  0054BE  D008               	goto	l18740
 19096                           
 19097                           ; BSR set to: 0
 19098                           ;main.c: 2762: *value = vscpData[ 1 ];
 19099  0054C0  51B2               	movf	readRegister@value& (0+255),w,b
 19100  0054C2  6ED9               	movwf	fsr2l,c
 19101  0054C4  6ADA               	clrf	fsr2h,c
 19102  0054C6  0101               	movlb	1	; () banked
 19103  0054C8  C1A6  FFDF         	movff	_vscpData+1,indf2
 19104                           
 19105                           ; BSR set to: 1
 19106                           ;main.c: 2763: return 1;
 19107  0054CC  0E01               	movlw	1
 19108  0054CE  D011               	goto	l1219
 19109  0054D0                     l18740:
 19110  0054D0  0100               	movlb	0	; () banked
 19111  0054D2  51B0               	movf	readRegister@timeout& (0+255),w,b
 19112  0054D4  6FB3               	movwf	??_readRegister& (0+255),b
 19113  0054D6  51B1               	movf	(readRegister@timeout+1)& (0+255),w,b
 19114  0054D8  6FB4               	movwf	(??_readRegister+1)& (0+255),b
 19115  0054DA  6BB5               	clrf	(??_readRegister+2)& (0+255),b
 19116  0054DC  6BB6               	clrf	(??_readRegister+3)& (0+255),b
 19117  0054DE  51B3               	movf	??_readRegister& (0+255),w,b
 19118  0054E0  5DDE               	subwf	_timekeeper& (0+255),w,b	;volatile
 19119  0054E2  51B4               	movf	(??_readRegister+1)& (0+255),w,b
 19120  0054E4  59DF               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 19121  0054E6  51B5               	movf	(??_readRegister+2)& (0+255),w,b
 19122  0054E8  59E0               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 19123  0054EA  51B6               	movf	(??_readRegister+3)& (0+255),w,b
 19124  0054EC  59E1               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 19125  0054EE  E3B5               	bnc	l1216
 19126  0054F0                     l18742:
 19127                           
 19128                           ; BSR set to: 0
 19129                           ;main.c: 2764: }
 19130                           ;main.c: 2765: }
 19131                           ;main.c: 2766: }
 19132                           ;main.c: 2767: }
 19133                           ;main.c: 2769: return 0;
 19134  0054F0  0E00               	movlw	0
 19135  0054F2                     l1219:
 19136  0054F2  0012               	return	
 19137  0054F4                     __end_of_readRegister:
 19138                           	opt stack 0
 19139                           tblptru	equ	0xFF8
 19140                           tblptrh	equ	0xFF7
 19141                           tblptrl	equ	0xFF6
 19142                           tablat	equ	0xFF5
 19143                           prodh	equ	0xFF4
 19144                           prodl	equ	0xFF3
 19145                           intcon	equ	0xFF2
 19146                           indf0	equ	0xFEF
 19147                           postinc0	equ	0xFEE
 19148                           fsr0h	equ	0xFEA
 19149                           fsr0l	equ	0xFE9
 19150                           wreg	equ	0xFE8
 19151                           indf1	equ	0xFE7
 19152                           postinc1	equ	0xFE6
 19153                           postdec1	equ	0xFE5
 19154                           fsr1h	equ	0xFE2
 19155                           fsr1l	equ	0xFE1
 19156                           indf2	equ	0xFDF
 19157                           postinc2	equ	0xFDE
 19158                           postdec2	equ	0xFDD
 19159                           plusw2	equ	0xFDB
 19160                           fsr2h	equ	0xFDA
 19161                           fsr2l	equ	0xFD9
 19162                           status	equ	0xFD8
 19163                           
 19164 ;; *************** function _sendVSCPFrame *****************
 19165 ;; Defined at:
 19166 ;;		line 3580 in file "main.c"
 19167 ;; Parameters:    Size  Location     Type
 19168 ;;  vscpclass       2   47[BANK0 ] unsigned short 
 19169 ;;  vscptype        1   49[BANK0 ] unsigned char 
 19170 ;;  nodeid          1   50[BANK0 ] unsigned char 
 19171 ;;  priority        1   51[BANK0 ] unsigned char 
 19172 ;;  size            1   52[BANK0 ] unsigned char 
 19173 ;;  pData           2   53[BANK0 ] PTR unsigned char 
 19174 ;;		 -> vscpData(8), 
 19175 ;; Auto vars:     Size  Location     Type
 19176 ;;  id              4   75[BANK0 ] unsigned long 
 19177 ;; Return value:  Size  Location     Type
 19178 ;;                  1    wreg      unsigned char 
 19179 ;; Registers used:
 19180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19181 ;; Tracked objects:
 19182 ;;		On entry : F/0
 19183 ;;		On exit  : F/0
 19184 ;;		Unchanged: 0/0
 19185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19186 ;;      Params:         0       8       0       0       0       0       0
 19187 ;;      Locals:         0       4       0       0       0       0       0
 19188 ;;      Temps:          0      20       0       0       0       0       0
 19189 ;;      Totals:         0      32       0       0       0       0       0
 19190 ;;Total ram usage:       32 bytes
 19191 ;; Hardware stack levels used:    1
 19192 ;; Hardware stack levels required when called:    6
 19193 ;; This function calls:
 19194 ;;		_sendCANFrame
 19195 ;; This function is called by:
 19196 ;;		_doModeVerbose
 19197 ;;		_readRegister
 19198 ;;		_readRegisterExtended
 19199 ;;		_writeRegisterExtended
 19200 ;; This function uses a non-reentrant model
 19201 ;;
 19202                           
 19203                           	psect	text34
 19204  00580E                     __ptext34:
 19205                           	opt stack 0
 19206  00580E                     _sendVSCPFrame:
 19207                           	opt stack 21
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;main.c: 3581: uint32_t id = ((uint32_t) priority << 26) |
 19211                           ;main.c: 3582: ((uint32_t) vscpclass << 16) |
 19212                           ;main.c: 3583: ((uint32_t) vscptype << 8) |
 19213                           ;main.c: 3584: nodeid;
 19214                           
 19215                           ;incstack = 0
 19216                           ;incstack = 0
 19217  00580E  C091  F097         	movff	sendVSCPFrame@vscptype,??_sendVSCPFrame
 19218  005812  6B98               	clrf	(??_sendVSCPFrame+1)& (0+255),b
 19219  005814  6B99               	clrf	(??_sendVSCPFrame+2)& (0+255),b
 19220  005816  6B9A               	clrf	(??_sendVSCPFrame+3)& (0+255),b
 19221  005818  C099  F09A         	movff	??_sendVSCPFrame+2,??_sendVSCPFrame+3
 19222  00581C  C098  F099         	movff	??_sendVSCPFrame+1,??_sendVSCPFrame+2
 19223  005820  C097  F098         	movff	??_sendVSCPFrame,??_sendVSCPFrame+1
 19224  005824  6B97               	clrf	??_sendVSCPFrame& (0+255),b
 19225  005826  518F               	movf	sendVSCPFrame@vscpclass& (0+255),w,b
 19226  005828  6F9B               	movwf	(??_sendVSCPFrame+4)& (0+255),b
 19227  00582A  5190               	movf	(sendVSCPFrame@vscpclass+1)& (0+255),w,b
 19228  00582C  6F9C               	movwf	(??_sendVSCPFrame+5)& (0+255),b
 19229  00582E  6B9D               	clrf	(??_sendVSCPFrame+6)& (0+255),b
 19230  005830  6B9E               	clrf	(??_sendVSCPFrame+7)& (0+255),b
 19231  005832  C09C  F09E         	movff	??_sendVSCPFrame+5,??_sendVSCPFrame+7
 19232  005836  C09B  F09D         	movff	??_sendVSCPFrame+4,??_sendVSCPFrame+6
 19233  00583A  6B9C               	clrf	(??_sendVSCPFrame+5)& (0+255),b
 19234  00583C  6B9B               	clrf	(??_sendVSCPFrame+4)& (0+255),b
 19235  00583E  C093  F09F         	movff	sendVSCPFrame@priority,??_sendVSCPFrame+8
 19236  005842  6BA0               	clrf	(??_sendVSCPFrame+9)& (0+255),b
 19237  005844  6BA1               	clrf	(??_sendVSCPFrame+10)& (0+255),b
 19238  005846  6BA2               	clrf	(??_sendVSCPFrame+11)& (0+255),b
 19239  005848  0E1A               	movlw	26
 19240  00584A                     u22555:
 19241  00584A  90D8               	bcf	status,0,c
 19242  00584C  379F               	rlcf	(??_sendVSCPFrame+8)& (0+255),f,b
 19243  00584E  37A0               	rlcf	(??_sendVSCPFrame+9)& (0+255),f,b
 19244  005850  37A1               	rlcf	(??_sendVSCPFrame+10)& (0+255),f,b
 19245  005852  37A2               	rlcf	(??_sendVSCPFrame+11)& (0+255),f,b
 19246  005854  2EE8               	decfsz	wreg,f,c
 19247  005856  D7F9               	goto	u22555
 19248  005858  519B               	movf	(??_sendVSCPFrame+4)& (0+255),w,b
 19249  00585A  119F               	iorwf	(??_sendVSCPFrame+8)& (0+255),w,b
 19250  00585C  6FA3               	movwf	(??_sendVSCPFrame+12)& (0+255),b
 19251  00585E  519C               	movf	(??_sendVSCPFrame+5)& (0+255),w,b
 19252  005860  11A0               	iorwf	(??_sendVSCPFrame+9)& (0+255),w,b
 19253  005862  6FA4               	movwf	(??_sendVSCPFrame+13)& (0+255),b
 19254  005864  519D               	movf	(??_sendVSCPFrame+6)& (0+255),w,b
 19255  005866  11A1               	iorwf	(??_sendVSCPFrame+10)& (0+255),w,b
 19256  005868  6FA5               	movwf	(??_sendVSCPFrame+14)& (0+255),b
 19257  00586A  519E               	movf	(??_sendVSCPFrame+7)& (0+255),w,b
 19258  00586C  11A2               	iorwf	(??_sendVSCPFrame+11)& (0+255),w,b
 19259  00586E  6FA6               	movwf	(??_sendVSCPFrame+15)& (0+255),b
 19260  005870  5197               	movf	??_sendVSCPFrame& (0+255),w,b
 19261  005872  11A3               	iorwf	(??_sendVSCPFrame+12)& (0+255),w,b
 19262  005874  6FA7               	movwf	(??_sendVSCPFrame+16)& (0+255),b
 19263  005876  5198               	movf	(??_sendVSCPFrame+1)& (0+255),w,b
 19264  005878  11A4               	iorwf	(??_sendVSCPFrame+13)& (0+255),w,b
 19265  00587A  6FA8               	movwf	(??_sendVSCPFrame+17)& (0+255),b
 19266  00587C  5199               	movf	(??_sendVSCPFrame+2)& (0+255),w,b
 19267  00587E  11A5               	iorwf	(??_sendVSCPFrame+14)& (0+255),w,b
 19268  005880  6FA9               	movwf	(??_sendVSCPFrame+18)& (0+255),b
 19269  005882  519A               	movf	(??_sendVSCPFrame+3)& (0+255),w,b
 19270  005884  11A6               	iorwf	(??_sendVSCPFrame+15)& (0+255),w,b
 19271  005886  6FAA               	movwf	(??_sendVSCPFrame+19)& (0+255),b
 19272  005888  5192               	movf	sendVSCPFrame@nodeid& (0+255),w,b
 19273  00588A  11A7               	iorwf	(??_sendVSCPFrame+16)& (0+255),w,b
 19274  00588C  6FAB               	movwf	sendVSCPFrame@id& (0+255),b
 19275  00588E  51A8               	movf	(??_sendVSCPFrame+17)& (0+255),w,b
 19276  005890  6FAC               	movwf	(sendVSCPFrame@id+1)& (0+255),b
 19277  005892  51A9               	movf	(??_sendVSCPFrame+18)& (0+255),w,b
 19278  005894  6FAD               	movwf	(sendVSCPFrame@id+2)& (0+255),b
 19279  005896  51AA               	movf	(??_sendVSCPFrame+19)& (0+255),w,b
 19280  005898  6FAE               	movwf	(sendVSCPFrame@id+3)& (0+255),b
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;main.c: 3586: if (!sendCANFrame(id, size, pData)) {
 19284  00589A  C0AB  F088         	movff	sendVSCPFrame@id,?_sendCANFrame
 19285  00589E  C0AC  F089         	movff	sendVSCPFrame@id+1,?_sendCANFrame+1
 19286  0058A2  C0AD  F08A         	movff	sendVSCPFrame@id+2,?_sendCANFrame+2
 19287  0058A6  C0AE  F08B         	movff	sendVSCPFrame@id+3,?_sendCANFrame+3
 19288  0058AA  C094  F08C         	movff	sendVSCPFrame@size,?_sendCANFrame+4
 19289  0058AE  C095  F08D         	movff	sendVSCPFrame@pData,?_sendCANFrame+5
 19290  0058B2  C096  F08E         	movff	sendVSCPFrame@pData+1,?_sendCANFrame+6
 19291  0058B6  EC83  F034         	call	_sendCANFrame	;wreg free
 19292  0058BA  0900               	iorlw	0
 19293                           
 19294                           ; BSR set to: 0
 19295                           ;main.c: 3588: return 0;
 19296  0058BC  0E00               	movlw	0
 19297  0058BE  A4D8               	btfss	status,2,c
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;main.c: 3589: }
 19301                           ;main.c: 3591: return 1;
 19302  0058C0  0E01               	movlw	1
 19303                           
 19304                           ; BSR set to: 0
 19305  0058C2  0012               	return	
 19306  0058C4                     __end_of_sendVSCPFrame:
 19307                           	opt stack 0
 19308                           tblptru	equ	0xFF8
 19309                           tblptrh	equ	0xFF7
 19310                           tblptrl	equ	0xFF6
 19311                           tablat	equ	0xFF5
 19312                           prodh	equ	0xFF4
 19313                           prodl	equ	0xFF3
 19314                           intcon	equ	0xFF2
 19315                           indf0	equ	0xFEF
 19316                           postinc0	equ	0xFEE
 19317                           fsr0h	equ	0xFEA
 19318                           fsr0l	equ	0xFE9
 19319                           wreg	equ	0xFE8
 19320                           indf1	equ	0xFE7
 19321                           postinc1	equ	0xFE6
 19322                           postdec1	equ	0xFE5
 19323                           fsr1h	equ	0xFE2
 19324                           fsr1l	equ	0xFE1
 19325                           indf2	equ	0xFDF
 19326                           postinc2	equ	0xFDE
 19327                           postdec2	equ	0xFDD
 19328                           plusw2	equ	0xFDB
 19329                           fsr2h	equ	0xFDA
 19330                           fsr2l	equ	0xFD9
 19331                           status	equ	0xFD8
 19332                           
 19333 ;; *************** function _sendCANFrame *****************
 19334 ;; Defined at:
 19335 ;;		line 3626 in file "main.c"
 19336 ;; Parameters:    Size  Location     Type
 19337 ;;  id              4   40[BANK0 ] unsigned long 
 19338 ;;  dlc             1   44[BANK0 ] unsigned char 
 19339 ;;  pdata           2   45[BANK0 ] PTR unsigned char 
 19340 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 19341 ;; Auto vars:     Size  Location     Type
 19342 ;;		None
 19343 ;; Return value:  Size  Location     Type
 19344 ;;                  1    wreg      unsigned char 
 19345 ;; Registers used:
 19346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19347 ;; Tracked objects:
 19348 ;;		On entry : F/0
 19349 ;;		On exit  : F/0
 19350 ;;		Unchanged: 0/0
 19351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19352 ;;      Params:         0       7       0       0       0       0       0
 19353 ;;      Locals:         0       0       0       0       0       0       0
 19354 ;;      Temps:          0       0       0       0       0       0       0
 19355 ;;      Totals:         0       7       0       0       0       0       0
 19356 ;;Total ram usage:        7 bytes
 19357 ;; Hardware stack levels used:    1
 19358 ;; Hardware stack levels required when called:    5
 19359 ;; This function calls:
 19360 ;;		_ECANSendMessage
 19361 ;; This function is called by:
 19362 ;;		_doModeSLCAN
 19363 ;;		_receiveVSCPModeCanalMsg
 19364 ;;		_sendVSCPFrame
 19365 ;; This function uses a non-reentrant model
 19366 ;;
 19367                           
 19368                           	psect	text35
 19369  006906                     __ptext35:
 19370                           	opt stack 0
 19371  006906                     _sendCANFrame:
 19372                           	opt stack 24
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;main.c: 3627: if (!ECANSendMessage(id, pdata, dlc, ECAN_TX_XTD_FRAME)) {
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;incstack = 0
 19379                           ;incstack = 0
 19380  006906  C088  F063         	movff	sendCANFrame@id,?_ECANSendMessage
 19381  00690A  C089  F064         	movff	sendCANFrame@id+1,?_ECANSendMessage+1
 19382  00690E  C08A  F065         	movff	sendCANFrame@id+2,?_ECANSendMessage+2
 19383  006912  C08B  F066         	movff	sendCANFrame@id+3,?_ECANSendMessage+3
 19384  006916  C08D  F067         	movff	sendCANFrame@pdata,?_ECANSendMessage+4
 19385  00691A  C08E  F068         	movff	sendCANFrame@pdata+1,?_ECANSendMessage+5
 19386  00691E  C08C  F069         	movff	sendCANFrame@dlc,?_ECANSendMessage+6
 19387  006922  0E20               	movlw	32
 19388  006924  6F6A               	movwf	(?_ECANSendMessage+7)& (0+255),b
 19389  006926  EC4C  F023         	call	_ECANSendMessage	;wreg free
 19390  00692A  0900               	iorlw	0
 19391  00692C  E106               	bnz	l18584
 19392                           
 19393                           ; BSR set to: 0
 19394                           ;main.c: 3629: can_transmitOverruns++;
 19395  00692E  2BCA               	incf	_can_transmitOverruns& (0+255),f,b
 19396  006930  0E00               	movlw	0
 19397  006932  23CB               	addwfc	(_can_transmitOverruns+1)& (0+255),f,b
 19398  006934  23CC               	addwfc	(_can_transmitOverruns+2)& (0+255),f,b
 19399  006936  23CD               	addwfc	(_can_transmitOverruns+3)& (0+255),f,b
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;main.c: 3630: return 0;
 19403  006938  D001               	goto	l1448
 19404  00693A                     l18584:
 19405                           
 19406                           ; BSR set to: 0
 19407                           ;main.c: 3631: }
 19408                           ;main.c: 3633: return 1;
 19409  00693A  0E01               	movlw	1
 19410  00693C                     l1448:
 19411                           
 19412                           ; BSR set to: 0
 19413  00693C  0012               	return	
 19414  00693E                     __end_of_sendCANFrame:
 19415                           	opt stack 0
 19416                           tblptru	equ	0xFF8
 19417                           tblptrh	equ	0xFF7
 19418                           tblptrl	equ	0xFF6
 19419                           tablat	equ	0xFF5
 19420                           prodh	equ	0xFF4
 19421                           prodl	equ	0xFF3
 19422                           intcon	equ	0xFF2
 19423                           indf0	equ	0xFEF
 19424                           postinc0	equ	0xFEE
 19425                           fsr0h	equ	0xFEA
 19426                           fsr0l	equ	0xFE9
 19427                           wreg	equ	0xFE8
 19428                           indf1	equ	0xFE7
 19429                           postinc1	equ	0xFE6
 19430                           postdec1	equ	0xFE5
 19431                           fsr1h	equ	0xFE2
 19432                           fsr1l	equ	0xFE1
 19433                           indf2	equ	0xFDF
 19434                           postinc2	equ	0xFDE
 19435                           postdec2	equ	0xFDD
 19436                           plusw2	equ	0xFDB
 19437                           fsr2h	equ	0xFDA
 19438                           fsr2l	equ	0xFD9
 19439                           status	equ	0xFD8
 19440                           
 19441 ;; *************** function _ECANSendMessage *****************
 19442 ;; Defined at:
 19443 ;;		line 617 in file "ECAN.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;  id              4    3[BANK0 ] unsigned long 
 19446 ;;  data            2    7[BANK0 ] PTR unsigned char 
 19447 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 19448 ;;  dataLen         1    9[BANK0 ] unsigned char 
 19449 ;;  msgFlags        1   10[BANK0 ] enum E16306
 19450 ;; Auto vars:     Size  Location     Type
 19451 ;;  pb             18   12[BANK0 ] PTR unsigned char [9]
 19452 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19453 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19454 ;;		 -> B0CON(1), 
 19455 ;;  ptr             2   38[BANK0 ] PTR unsigned char 
 19456 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19457 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19458 ;;		 -> B0CON(1), 
 19459 ;;  tempPtr         2   34[BANK0 ] PTR unsigned char 
 19460 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19461 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19462 ;;		 -> B0CON(1), 
 19463 ;;  i               1   37[BANK0 ] unsigned char 
 19464 ;;  temp            1   36[BANK0 ] unsigned char 
 19465 ;;  tempBSEL0       1   33[BANK0 ] struct .
 19466 ;;  j               1   32[BANK0 ] unsigned char 
 19467 ;;  buffers         1   31[BANK0 ] unsigned char 
 19468 ;;  mode            1   30[BANK0 ] unsigned char 
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  1    wreg      enum E15660
 19471 ;; Registers used:
 19472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : F/0
 19475 ;;		On exit  : F/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19478 ;;      Params:         0       8       0       0       0       0       0
 19479 ;;      Locals:         0      28       0       0       0       0       0
 19480 ;;      Temps:          0       1       0       0       0       0       0
 19481 ;;      Totals:         0      37       0       0       0       0       0
 19482 ;;Total ram usage:       37 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:    4
 19485 ;; This function calls:
 19486 ;;		__CANIDToRegs
 19487 ;; This function is called by:
 19488 ;;		_sendCANFrame
 19489 ;; This function uses a non-reentrant model
 19490 ;;
 19491                           
 19492                           	psect	text36
 19493  004698                     __ptext36:
 19494                           	opt stack 0
 19495  004698                     _ECANSendMessage:
 19496                           	opt stack 24
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;ECAN.c: 619: BYTE mode;
 19500                           ;ECAN.c: 620: BYTE buffers;
 19501                           ;ECAN.c: 628: BYTE i,j;
 19502                           ;ECAN.c: 629: BYTE *ptr, *tempPtr;
 19503                           ;ECAN.c: 630: BYTE* pb[9];
 19504                           ;ECAN.c: 631: BYTE temp;
 19505                           ;ECAN.c: 634: BYTE_VAL tempBSEL0;
 19506                           ;ECAN.c: 641: pb[0]=(BYTE*)&TXB0CON;
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;incstack = 0
 19510                           ;incstack = 0
 19511  004698  0E0F               	movlw	15	;volatile
 19512  00469A  0100               	movlb	0	; () banked
 19513  00469C  6F6D               	movwf	(ECANSendMessage@pb+1)& (0+255),b
 19514  00469E  0E40               	movlw	64	;volatile
 19515  0046A0  6F6C               	movwf	ECANSendMessage@pb& (0+255),b
 19516                           
 19517                           ;ECAN.c: 642: pb[1]=(BYTE*)&TXB1CON;
 19518  0046A2  0E0F               	movlw	15	;volatile
 19519  0046A4  6F6F               	movwf	(ECANSendMessage@pb+3)& (0+255),b
 19520  0046A6  0E30               	movlw	48	;volatile
 19521  0046A8  6F6E               	movwf	(ECANSendMessage@pb+2)& (0+255),b
 19522                           
 19523                           ;ECAN.c: 643: pb[2]=(BYTE*)&TXB2CON;
 19524  0046AA  0E0F               	movlw	15	;volatile
 19525  0046AC  6F71               	movwf	(ECANSendMessage@pb+5)& (0+255),b
 19526  0046AE  0E20               	movlw	32	;volatile
 19527  0046B0  6F70               	movwf	(ECANSendMessage@pb+4)& (0+255),b
 19528                           
 19529                           ;ECAN.c: 650: pb[3]=(BYTE*)&B0CON;
 19530  0046B2  0E0E               	movlw	14	;volatile
 19531  0046B4  6F73               	movwf	(ECANSendMessage@pb+7)& (0+255),b
 19532  0046B6  0E20               	movlw	32	;volatile
 19533  0046B8  6F72               	movwf	(ECANSendMessage@pb+6)& (0+255),b
 19534                           
 19535                           ;ECAN.c: 651: pb[4]=(BYTE*)&B1CON;
 19536  0046BA  0E0E               	movlw	14	;volatile
 19537  0046BC  6F75               	movwf	(ECANSendMessage@pb+9)& (0+255),b
 19538  0046BE  0E30               	movlw	48	;volatile
 19539  0046C0  6F74               	movwf	(ECANSendMessage@pb+8)& (0+255),b
 19540                           
 19541                           ;ECAN.c: 652: pb[5]=(BYTE*)&B2CON;
 19542  0046C2  0E0E               	movlw	14	;volatile
 19543  0046C4  6F77               	movwf	(ECANSendMessage@pb+11)& (0+255),b
 19544  0046C6  0E40               	movlw	64	;volatile
 19545  0046C8  6F76               	movwf	(ECANSendMessage@pb+10)& (0+255),b
 19546                           
 19547                           ;ECAN.c: 653: pb[6]=(BYTE*)&B3CON;
 19548  0046CA  0E0E               	movlw	14	;volatile
 19549  0046CC  6F79               	movwf	(ECANSendMessage@pb+13)& (0+255),b
 19550  0046CE  0E50               	movlw	80	;volatile
 19551  0046D0  6F78               	movwf	(ECANSendMessage@pb+12)& (0+255),b
 19552                           
 19553                           ;ECAN.c: 654: pb[7]=(BYTE*)&B4CON;
 19554  0046D2  0E0E               	movlw	14	;volatile
 19555  0046D4  6F7B               	movwf	(ECANSendMessage@pb+15)& (0+255),b
 19556  0046D6  0E60               	movlw	96	;volatile
 19557  0046D8  6F7A               	movwf	(ECANSendMessage@pb+14)& (0+255),b
 19558                           
 19559                           ;ECAN.c: 655: pb[8]=(BYTE*)&B5CON;
 19560  0046DA  0E0E               	movlw	14	;volatile
 19561  0046DC  6F7D               	movwf	(ECANSendMessage@pb+17)& (0+255),b
 19562  0046DE  0E70               	movlw	112	;volatile
 19563  0046E0  6F7C               	movwf	(ECANSendMessage@pb+16)& (0+255),b
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;ECAN.c: 659: mode = ECANCON&0xC0;
 19567  0046E2  5077               	movf	3959,w,c	;volatile
 19568  0046E4  0BC0               	andlw	192
 19569  0046E6  6F7E               	movwf	ECANSendMessage@mode& (0+255),b
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;ECAN.c: 660: if ( mode == 0x00 )
 19573  0046E8  677E               	tstfsz	ECANSendMessage@mode& (0+255),b
 19574  0046EA  D002               	goto	l18764
 19575                           
 19576                           ; BSR set to: 0
 19577                           ;ECAN.c: 661: buffers = 2;
 19578  0046EC  0E02               	movlw	2
 19579  0046EE  D001               	goto	L29
 19580  0046F0                     l18764:
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;ECAN.c: 662: else
 19584                           ;ECAN.c: 663: buffers = 8;
 19585  0046F0  0E08               	movlw	8
 19586  0046F2                     L29:
 19587  0046F2  6F7F               	movwf	ECANSendMessage@buffers& (0+255),b
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;ECAN.c: 684: tempBSEL0.Val = BSEL0 >> 1;
 19591  0046F4  010D               	movlb	13	; () banked
 19592  0046F6  90D8               	bcf	status,0,c
 19593  0046F8  31F8               	rrcf	248,w,b	;volatile
 19594  0046FA  0100               	movlb	0	; () banked
 19595  0046FC  6F81               	movwf	ECANSendMessage@tempBSEL0& (0+255),b
 19596                           
 19597                           ; BSR set to: 0
 19598                           ;ECAN.c: 686: for ( i = 0; i < buffers; i++ )
 19599  0046FE  6B85               	clrf	ECANSendMessage@i& (0+255),b
 19600  004700  D07D               	goto	l18824
 19601  004702                     l18770:
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;ECAN.c: 688: {
 19605                           ;ECAN.c: 693: ptr = pb[i];
 19606  004702  5185               	movf	ECANSendMessage@i& (0+255),w,b
 19607  004704  0D02               	mullw	2
 19608  004706  50F3               	movf	prodl,w,c
 19609  004708  0F6C               	addlw	low ECANSendMessage@pb
 19610  00470A  6ED9               	movwf	fsr2l,c
 19611  00470C  6ADA               	clrf	fsr2h,c
 19612  00470E  CFDE F086          	movff	postinc2,ECANSendMessage@ptr
 19613  004712  CFDD F087          	movff	postdec2,ECANSendMessage@ptr+1
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;ECAN.c: 694: tempPtr = ptr;
 19617  004716  C086  F082         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
 19618  00471A  C087  F083         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
 19619                           
 19620                           ; BSR set to: 0
 19621                           ;ECAN.c: 702: if ( i > 2 )
 19622  00471E  0E02               	movlw	2
 19623  004720  6585               	cpfsgt	ECANSendMessage@i& (0+255),b
 19624  004722  D004               	goto	l18782
 19625                           
 19626                           ; BSR set to: 0
 19627                           ;ECAN.c: 703: {
 19628                           ;ECAN.c: 707: tempBSEL0.Val >>= 1;
 19629  004724  90D8               	bcf	status,0,c
 19630  004726  3381               	rrcf	ECANSendMessage@tempBSEL0& (0+255),f,b
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;ECAN.c: 712: if ( !tempBSEL0.bits.b0 )
 19634  004728  A181               	btfss	ECANSendMessage@tempBSEL0& (0+255),0,b
 19635  00472A  D067               	goto	l18822
 19636  00472C                     l18782:
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;ECAN.c: 714: }
 19640                           ;ECAN.c: 720: if ( !(*ptr & 0x08) )
 19641  00472C  C086  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19642  004730  C087  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19643  004734  50DF               	movf	indf2,w,c
 19644  004736  6F6B               	movwf	??_ECANSendMessage& (0+255),b
 19645  004738  B76B               	btfsc	??_ECANSendMessage& (0+255),3,b
 19646  00473A  D05F               	goto	l18822
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;ECAN.c: 721: {
 19650                           ;ECAN.c: 723: *ptr &= ~ECAN_TX_PRIORITY_BITS;
 19651  00473C  C086  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19652  004740  C087  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19653  004744  0EFC               	movlw	252
 19654  004746  16DF               	andwf	indf2,f,c
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;ECAN.c: 724: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
 19658  004748  C06A  F06B         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
 19659  00474C  0E03               	movlw	3
 19660  00474E  176B               	andwf	??_ECANSendMessage& (0+255),f,b
 19661  004750  C086  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19662  004754  C087  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19663  004758  516B               	movf	??_ECANSendMessage& (0+255),w,b
 19664  00475A  12DF               	iorwf	indf2,f,c
 19665                           
 19666                           ; BSR set to: 0
 19667                           ;ECAN.c: 727: if ( msgFlags & ECAN_TX_RTR_BIT )
 19668  00475C  AD6A               	btfss	ECANSendMessage@msgFlags& (0+255),6,b
 19669  00475E  D004               	goto	l1616
 19670                           
 19671                           ; BSR set to: 0
 19672                           ;ECAN.c: 728: temp = 0x40 | dataLen;
 19673  004760  5169               	movf	ECANSendMessage@dataLen& (0+255),w,b
 19674  004762  0940               	iorlw	64
 19675  004764  6F84               	movwf	ECANSendMessage@temp& (0+255),b
 19676  004766  D002               	goto	l18792
 19677  004768                     l1616:
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;ECAN.c: 729: else
 19681                           ;ECAN.c: 730: temp = dataLen;
 19682  004768  C069  F084         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
 19683  00476C                     l18792:
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;ECAN.c: 732: *(ptr+5) = temp;
 19687  00476C  EE20 F005          	lfsr	2,5
 19688  004770  5186               	movf	ECANSendMessage@ptr& (0+255),w,b
 19689  004772  26D9               	addwf	fsr2l,f,c
 19690  004774  5187               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
 19691  004776  22DA               	addwfc	fsr2h,f,c
 19692  004778  C084  FFDF         	movff	ECANSendMessage@temp,indf2
 19693                           
 19694                           ; BSR set to: 0
 19695                           ;ECAN.c: 735: if ( msgFlags & ECAN_TX_FRAME_BIT )
 19696  00477C  AB6A               	btfss	ECANSendMessage@msgFlags& (0+255),5,b
 19697  00477E  D003               	goto	l1618
 19698                           
 19699                           ; BSR set to: 0
 19700                           ;ECAN.c: 736: temp = 1;
 19701  004780  0E01               	movlw	1
 19702  004782  6F84               	movwf	ECANSendMessage@temp& (0+255),b
 19703  004784  D001               	goto	l18798
 19704  004786                     l1618:
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;ECAN.c: 738: else
 19708                           ;ECAN.c: 739: temp = 0;
 19709  004786  6B84               	clrf	ECANSendMessage@temp& (0+255),b
 19710  004788                     l18798:
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;ECAN.c: 742: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
 19714  004788  2986               	incf	ECANSendMessage@ptr& (0+255),w,b
 19715  00478A  6E21               	movwf	?__CANIDToRegs,c
 19716  00478C  0E00               	movlw	0
 19717  00478E  2187               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
 19718  004790  6E22               	movwf	?__CANIDToRegs+1,c
 19719  004792  C063  F023         	movff	ECANSendMessage@id,?__CANIDToRegs+2
 19720  004796  C064  F024         	movff	ECANSendMessage@id+1,?__CANIDToRegs+3
 19721  00479A  C065  F025         	movff	ECANSendMessage@id+2,?__CANIDToRegs+4
 19722  00479E  C066  F026         	movff	ECANSendMessage@id+3,?__CANIDToRegs+5
 19723  0047A2  C084  F027         	movff	ECANSendMessage@temp,?__CANIDToRegs+6
 19724  0047A6  ECC2  F025         	call	__CANIDToRegs	;wreg free
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;ECAN.c: 745: ptr += 6;
 19728  0047AA  0E06               	movlw	6
 19729  0047AC  2786               	addwf	ECANSendMessage@ptr& (0+255),f,b
 19730  0047AE  0E00               	movlw	0
 19731  0047B0  2387               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;ECAN.c: 747: for ( j = 0 ; j < dataLen; j++ )
 19735  0047B2  6B80               	clrf	ECANSendMessage@j& (0+255),b
 19736  0047B4  D00F               	goto	l18812
 19737  0047B6                     l18804:
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;ECAN.c: 748: *ptr++ = *data++;
 19741  0047B6  C067  FFD9         	movff	ECANSendMessage@data,fsr2l
 19742  0047BA  C068  FFDA         	movff	ECANSendMessage@data+1,fsr2h
 19743  0047BE  C086  FFE1         	movff	ECANSendMessage@ptr,fsr1l
 19744  0047C2  C087  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
 19745  0047C6  CFDF FFE7          	movff	indf2,indf1
 19746                           
 19747                           ; BSR set to: 0
 19748  0047CA  4B67               	infsnz	ECANSendMessage@data& (0+255),f,b
 19749  0047CC  2B68               	incf	(ECANSendMessage@data+1)& (0+255),f,b
 19750                           
 19751                           ; BSR set to: 0
 19752  0047CE  4B86               	infsnz	ECANSendMessage@ptr& (0+255),f,b
 19753  0047D0  2B87               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
 19754                           
 19755                           ; BSR set to: 0
 19756  0047D2  2B80               	incf	ECANSendMessage@j& (0+255),f,b
 19757  0047D4                     l18812:
 19758                           
 19759                           ; BSR set to: 0
 19760  0047D4  5169               	movf	ECANSendMessage@dataLen& (0+255),w,b
 19761  0047D6  5D80               	subwf	ECANSendMessage@j& (0+255),w,b
 19762  0047D8  E3EE               	bnc	l18804
 19763                           
 19764                           ; BSR set to: 0
 19765                           ;ECAN.c: 752: if ( !(*tempPtr & 0x04) )
 19766  0047DA  C082  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 19767  0047DE  C083  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 19768  0047E2  50DF               	movf	indf2,w,c
 19769  0047E4  6F6B               	movwf	??_ECANSendMessage& (0+255),b
 19770  0047E6  B56B               	btfsc	??_ECANSendMessage& (0+255),2,b
 19771  0047E8  D006               	goto	l18818
 19772                           
 19773                           ; BSR set to: 0
 19774                           ;ECAN.c: 753: *tempPtr |= 0x08;
 19775  0047EA  C082  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 19776  0047EE  C083  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 19777  0047F2  0E00               	movlw	0
 19778  0047F4  86DB               	bsf	plusw2,3,c
 19779  0047F6                     l18818:
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;ECAN.c: 755: return TRUE;
 19783  0047F6  0E01               	movlw	1
 19784  0047F8  D005               	goto	l1624
 19785  0047FA                     l18822:
 19786                           
 19787                           ; BSR set to: 0
 19788  0047FA  2B85               	incf	ECANSendMessage@i& (0+255),f,b
 19789  0047FC                     l18824:
 19790                           
 19791                           ; BSR set to: 0
 19792  0047FC  517F               	movf	ECANSendMessage@buffers& (0+255),w,b
 19793  0047FE  5D85               	subwf	ECANSendMessage@i& (0+255),w,b
 19794  004800  E380               	bnc	l18770
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;ECAN.c: 756: }
 19798                           ;ECAN.c: 757: }
 19799                           ;ECAN.c: 760: return FALSE;
 19800  004802  0E00               	movlw	0
 19801  004804                     l1624:
 19802                           
 19803                           ; BSR set to: 0
 19804  004804  0012               	return	
 19805  004806                     __end_of_ECANSendMessage:
 19806                           	opt stack 0
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           indf0	equ	0xFEF
 19815                           postinc0	equ	0xFEE
 19816                           fsr0h	equ	0xFEA
 19817                           fsr0l	equ	0xFE9
 19818                           wreg	equ	0xFE8
 19819                           indf1	equ	0xFE7
 19820                           postinc1	equ	0xFE6
 19821                           postdec1	equ	0xFE5
 19822                           fsr1h	equ	0xFE2
 19823                           fsr1l	equ	0xFE1
 19824                           indf2	equ	0xFDF
 19825                           postinc2	equ	0xFDE
 19826                           postdec2	equ	0xFDD
 19827                           plusw2	equ	0xFDB
 19828                           fsr2h	equ	0xFDA
 19829                           fsr2l	equ	0xFD9
 19830                           status	equ	0xFD8
 19831                           
 19832 ;; *************** function _checkCANBusState *****************
 19833 ;; Defined at:
 19834 ;;		line 613 in file "main.c"
 19835 ;; Parameters:    Size  Location     Type
 19836 ;;		None
 19837 ;; Auto vars:     Size  Location     Type
 19838 ;;		None
 19839 ;; Return value:  Size  Location     Type
 19840 ;;		None               void
 19841 ;; Registers used:
 19842 ;;		wreg, status,2
 19843 ;; Tracked objects:
 19844 ;;		On entry : 0/0
 19845 ;;		On exit  : 0/0
 19846 ;;		Unchanged: 0/0
 19847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19848 ;;      Params:         0       0       0       0       0       0       0
 19849 ;;      Locals:         0       0       0       0       0       0       0
 19850 ;;      Temps:          0       0       0       0       0       0       0
 19851 ;;      Totals:         0       0       0       0       0       0       0
 19852 ;;Total ram usage:        0 bytes
 19853 ;; Hardware stack levels used:    1
 19854 ;; Hardware stack levels required when called:    3
 19855 ;; This function calls:
 19856 ;;		Nothing
 19857 ;; This function is called by:
 19858 ;;		_readRegister
 19859 ;;		_readRegisterExtended
 19860 ;;		_writeRegisterExtended
 19861 ;; This function uses a non-reentrant model
 19862 ;;
 19863                           
 19864                           	psect	text37
 19865  006A5C                     __ptext37:
 19866                           	opt stack 0
 19867  006A5C                     _checkCANBusState:
 19868                           	opt stack 24
 19869                           
 19870                           ;main.c: 615: if ( COMSTATbits.TXBO ) {
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;incstack = 0
 19874                           ;incstack = 0
 19875  006A5C  AA74               	btfss	3956,5,c	;volatile
 19876  006A5E  D002               	goto	l507
 19877                           
 19878                           ;main.c: 617: ledFunctionality = 6;
 19879  006A60  0E06               	movlw	6
 19880  006A62  D009               	goto	L30
 19881  006A64                     l507:
 19882                           
 19883                           ;main.c: 619: else if ( COMSTATbits.TXBP || COMSTATbits.RXBP ) {
 19884  006A64  B874               	btfsc	3956,4,c	;volatile
 19885  006A66  D002               	goto	l17092
 19886  006A68  A674               	btfss	3956,3,c	;volatile
 19887  006A6A  D002               	goto	l509
 19888  006A6C                     l17092:
 19889                           
 19890                           ;main.c: 621: ledFunctionality = 5;
 19891  006A6C  0E05               	movlw	5
 19892  006A6E  D003               	goto	L30
 19893  006A70                     l509:
 19894                           
 19895                           ;main.c: 625: ledFunctionality = 4;
 19896  006A70  0E04               	movlw	4
 19897                           
 19898                           ;main.c: 623: else if ( COMSTATbits.EWARN ) {
 19899  006A72  A074               	btfss	3956,0,c	;volatile
 19900                           
 19901                           ;main.c: 627: else {
 19902                           ;main.c: 629: ledFunctionality = 1;
 19903                           
 19904                           ;main.c: 626: }
 19905  006A74  0E01               	movlw	1
 19906  006A76                     L30:
 19907  006A76  6E41               	movwf	_ledFunctionality,c	;volatile
 19908  006A78  0012               	return	
 19909  006A7A                     __end_of_checkCANBusState:
 19910                           	opt stack 0
 19911                           tblptru	equ	0xFF8
 19912                           tblptrh	equ	0xFF7
 19913                           tblptrl	equ	0xFF6
 19914                           tablat	equ	0xFF5
 19915                           prodh	equ	0xFF4
 19916                           prodl	equ	0xFF3
 19917                           intcon	equ	0xFF2
 19918                           indf0	equ	0xFEF
 19919                           postinc0	equ	0xFEE
 19920                           fsr0h	equ	0xFEA
 19921                           fsr0l	equ	0xFE9
 19922                           wreg	equ	0xFE8
 19923                           indf1	equ	0xFE7
 19924                           postinc1	equ	0xFE6
 19925                           postdec1	equ	0xFE5
 19926                           fsr1h	equ	0xFE2
 19927                           fsr1l	equ	0xFE1
 19928                           indf2	equ	0xFDF
 19929                           postinc2	equ	0xFDE
 19930                           postdec2	equ	0xFDD
 19931                           plusw2	equ	0xFDB
 19932                           fsr2h	equ	0xFDA
 19933                           fsr2l	equ	0xFD9
 19934                           status	equ	0xFD8
 19935                           
 19936 ;; *************** function _memset *****************
 19937 ;; Defined at:
 19938 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memset.c"
 19939 ;; Parameters:    Size  Location     Type
 19940 ;;  p1              2   30[COMRAM] PTR void 
 19941 ;;		 -> wrkbuf(80), vscpData(8), cmdbuf(80), 
 19942 ;;  c               2   32[COMRAM] int 
 19943 ;;  n               2   34[COMRAM] unsigned int 
 19944 ;; Auto vars:     Size  Location     Type
 19945 ;;  p               2   36[COMRAM] PTR unsigned char 
 19946 ;;		 -> wrkbuf(80), vscpData(8), cmdbuf(80), 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  2   30[COMRAM] PTR void 
 19949 ;; Registers used:
 19950 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19951 ;; Tracked objects:
 19952 ;;		On entry : F/1
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19956 ;;      Params:         6       0       0       0       0       0       0
 19957 ;;      Locals:         2       0       0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0
 19959 ;;      Totals:         8       0       0       0       0       0       0
 19960 ;;Total ram usage:        8 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:    3
 19963 ;; This function calls:
 19964 ;;		Nothing
 19965 ;; This function is called by:
 19966 ;;		_doModeVerbose
 19967 ;;		_doModeSLCAN
 19968 ;;		_printGUID
 19969 ;;		_printMDF
 19970 ;;		_printNodeFirmwareVersion
 19971 ;; This function uses a non-reentrant model
 19972 ;;
 19973                           
 19974                           	psect	text38
 19975  006A08                     __ptext38:
 19976                           	opt stack 0
 19977  006A08                     _memset:
 19978                           	opt stack 26
 19979                           
 19980                           ; BSR set to: 1
 19981                           
 19982                           ;incstack = 0
 19983                           ;incstack = 0
 19984  006A08  C01F  F025         	movff	memset@p1,memset@p
 19985  006A0C  C020  F026         	movff	memset@p1+1,memset@p+1
 19986  006A10  D008               	goto	l17284
 19987  006A12                     l17280:
 19988  006A12  C025  FFD9         	movff	memset@p,fsr2l
 19989  006A16  C026  FFDA         	movff	memset@p+1,fsr2h
 19990  006A1A  C021  FFDF         	movff	memset@c,indf2
 19991  006A1E  4A25               	infsnz	memset@p,f,c
 19992  006A20  2A26               	incf	memset@p+1,f,c
 19993  006A22                     l17284:
 19994  006A22  0623               	decf	memset@n,f,c
 19995  006A24  A0D8               	btfss	status,0,c
 19996  006A26  0624               	decf	memset@n+1,f,c
 19997  006A28  2823               	incf	memset@n& (0+255),w,c
 19998  006A2A  B4D8               	btfsc	status,2,c
 19999  006A2C  2824               	incf	(memset@n+1)& (0+255),w,c
 20000  006A2E  B4D8               	btfsc	status,2,c
 20001  006A30  0012               	return	
 20002  006A32  D7EF               	goto	l17280
 20003  006A34                     __end_of_memset:
 20004                           	opt stack 0
 20005                           tblptru	equ	0xFF8
 20006                           tblptrh	equ	0xFF7
 20007                           tblptrl	equ	0xFF6
 20008                           tablat	equ	0xFF5
 20009                           prodh	equ	0xFF4
 20010                           prodl	equ	0xFF3
 20011                           intcon	equ	0xFF2
 20012                           indf0	equ	0xFEF
 20013                           postinc0	equ	0xFEE
 20014                           fsr0h	equ	0xFEA
 20015                           fsr0l	equ	0xFE9
 20016                           wreg	equ	0xFE8
 20017                           indf1	equ	0xFE7
 20018                           postinc1	equ	0xFE6
 20019                           postdec1	equ	0xFE5
 20020                           fsr1h	equ	0xFE2
 20021                           fsr1l	equ	0xFE1
 20022                           indf2	equ	0xFDF
 20023                           postinc2	equ	0xFDE
 20024                           postdec2	equ	0xFDD
 20025                           plusw2	equ	0xFDB
 20026                           fsr2h	equ	0xFDA
 20027                           fsr2l	equ	0xFD9
 20028                           status	equ	0xFD8
 20029                           
 20030 ;; *************** function _printHelp *****************
 20031 ;; Defined at:
 20032 ;;		line 3081 in file "main.c"
 20033 ;; Parameters:    Size  Location     Type
 20034 ;;		None
 20035 ;; Auto vars:     Size  Location     Type
 20036 ;;		None
 20037 ;; Return value:  Size  Location     Type
 20038 ;;		None               void
 20039 ;; Registers used:
 20040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20041 ;; Tracked objects:
 20042 ;;		On entry : F/1
 20043 ;;		On exit  : 0/0
 20044 ;;		Unchanged: 0/0
 20045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20046 ;;      Params:         0       0       0       0       0       0       0
 20047 ;;      Locals:         0       0       0       0       0       0       0
 20048 ;;      Temps:          0       0       0       0       0       0       0
 20049 ;;      Totals:         0       0       0       0       0       0       0
 20050 ;;Total ram usage:        0 bytes
 20051 ;; Hardware stack levels used:    1
 20052 ;; Hardware stack levels required when called:    5
 20053 ;; This function calls:
 20054 ;;		_putsUSART
 20055 ;; This function is called by:
 20056 ;;		_doModeVerbose
 20057 ;; This function uses a non-reentrant model
 20058 ;;
 20059                           
 20060                           	psect	text39
 20061  004518                     __ptext39:
 20062                           	opt stack 0
 20063  004518                     _printHelp:
 20064                           	opt stack 24
 20065                           
 20066                           ; BSR set to: 1
 20067                           ;main.c: 3082: putsUSART((char *) "Help for the Frankfurt RS-232 module\r\n");
 20068                           
 20069                           ;incstack = 0
 20070                           ;incstack = 0
 20071  004518  0E77               	movlw	high STR_249
 20072  00451A  6E21               	movwf	?_putsUSART+1,c
 20073  00451C  0E24               	movlw	low STR_249
 20074  00451E  6E20               	movwf	?_putsUSART,c
 20075  004520  ECD5  F032         	call	_putsUSART	;wreg free
 20076                           
 20077                           ;main.c: 3083: putsUSART((char *) "------------------------------------\r\n");
 20078  004524  0E6F               	movlw	high (STR_282+28)
 20079  004526  6E21               	movwf	?_putsUSART+1,c
 20080  004528  0EF8               	movlw	low (STR_282+28)
 20081  00452A  6E20               	movwf	?_putsUSART,c
 20082  00452C  ECD5  F032         	call	_putsUSART	;wreg free
 20083                           
 20084                           ;main.c: 3084: putsUSART((char *) "BOOT - Enter bootloader.\r\n");
 20085  004530  0E7A               	movlw	high STR_251
 20086  004532  6E21               	movwf	?_putsUSART+1,c
 20087  004534  0E7D               	movlw	low STR_251
 20088  004536  6E20               	movwf	?_putsUSART,c
 20089  004538  ECD5  F032         	call	_putsUSART	;wreg free
 20090                           
 20091                           ;main.c: 3085: putsUSART((char *) "OPEN - Open CAN interface in normal mode.\r\n");
 20092  00453C  0E75               	movlw	high STR_252
 20093  00453E  6E21               	movwf	?_putsUSART+1,c
 20094  004540  0E8A               	movlw	low STR_252
 20095  004542  6E20               	movwf	?_putsUSART,c
 20096  004544  ECD5  F032         	call	_putsUSART	;wreg free
 20097                           
 20098                           ;main.c: 3086: putsUSART((char *) "SILENT - Open CAN interface in silent mode.\r\n");
 20099  004548  0E75               	movlw	high STR_253
 20100  00454A  6E21               	movwf	?_putsUSART+1,c
 20101  00454C  0E30               	movlw	low STR_253
 20102  00454E  6E20               	movwf	?_putsUSART,c
 20103  004550  ECD5  F032         	call	_putsUSART	;wreg free
 20104                           
 20105                           ;main.c: 3087: putsUSART((char *) "LISTEN - Open CAN interface in listen only mode.\r\n"
      +                          );
 20106  004554  0E73               	movlw	high STR_254
 20107  004556  6E21               	movwf	?_putsUSART+1,c
 20108  004558  0E7B               	movlw	low STR_254
 20109  00455A  6E20               	movwf	?_putsUSART,c
 20110  00455C  ECD5  F032         	call	_putsUSART	;wreg free
 20111                           
 20112                           ;main.c: 3088: putsUSART((char *) "LOOPBACK - Open CAN interface in loopback mode.\r\n");
 20113  004560  0E73               	movlw	high STR_255
 20114  004562  6E21               	movwf	?_putsUSART+1,c
 20115  004564  0EE0               	movlw	low STR_255
 20116  004566  6E20               	movwf	?_putsUSART,c
 20117  004568  ECD5  F032         	call	_putsUSART	;wreg free
 20118                           
 20119                           ;main.c: 3089: putsUSART((char *) "CLOSE - Close CAN interface.\r\n");
 20120  00456C  0E79               	movlw	high STR_256
 20121  00456E  6E21               	movwf	?_putsUSART+1,c
 20122  004570  0EED               	movlw	low STR_256
 20123  004572  6E20               	movwf	?_putsUSART,c
 20124  004574  ECD5  F032         	call	_putsUSART	;wreg free
 20125                           
 20126                           ;main.c: 3090: putsUSART((char *) "VERSION - Display firmware version information.\r\n");
 20127  004578  0E74               	movlw	high STR_257
 20128  00457A  6E21               	movwf	?_putsUSART+1,c
 20129  00457C  0E12               	movlw	low STR_257
 20130  00457E  6E20               	movwf	?_putsUSART,c
 20131  004580  ECD5  F032         	call	_putsUSART	;wreg free
 20132                           
 20133                           ;main.c: 3091: putsUSART((char *) "IFMODE - Display selected interface mode.\r\n");
 20134  004584  0E75               	movlw	high STR_258
 20135  004586  6E21               	movwf	?_putsUSART+1,c
 20136  004588  0E5E               	movlw	low STR_258
 20137  00458A  6E20               	movwf	?_putsUSART,c
 20138  00458C  ECD5  F032         	call	_putsUSART	;wreg free
 20139                           
 20140                           ;main.c: 3092: putsUSART((char *) "TX - Send CAN frame .\r\n");
 20141  004590  0E7B               	movlw	high STR_259
 20142  004592  6E21               	movwf	?_putsUSART+1,c
 20143  004594  0E33               	movlw	low STR_259
 20144  004596  6E20               	movwf	?_putsUSART,c
 20145  004598  ECD5  F032         	call	_putsUSART	;wreg free
 20146                           
 20147                           ;main.c: 3093: putsUSART((char *) "     Format: priority,class,type,nodeid,count,data,,,
      +                          \r\n");
 20148  00459C  0E71               	movlw	high STR_260
 20149  00459E  6E21               	movwf	?_putsUSART+1,c
 20150  0045A0  0ECA               	movlw	low STR_260
 20151  0045A2  6E20               	movwf	?_putsUSART,c
 20152  0045A4  ECD5  F032         	call	_putsUSART	;wreg free
 20153                           
 20154                           ;main.c: 3094: putsUSART((char *) "RX - Read CAN frame.\r\n");
 20155  0045A8  0E7B               	movlw	high STR_261
 20156  0045AA  6E21               	movwf	?_putsUSART+1,c
 20157  0045AC  0EF3               	movlw	low STR_261
 20158  0045AE  6E20               	movwf	?_putsUSART,c
 20159  0045B0  ECD5  F032         	call	_putsUSART	;wreg free
 20160                           
 20161                           ;main.c: 3095: putsUSART((char *) "STAT - Display CAN statistics.\r\n");
 20162  0045B4  0E79               	movlw	high STR_262
 20163  0045B6  6E21               	movwf	?_putsUSART+1,c
 20164  0045B8  0E2A               	movlw	low STR_262
 20165  0045BA  6E20               	movwf	?_putsUSART,c
 20166  0045BC  ECD5  F032         	call	_putsUSART	;wreg free
 20167                           
 20168                           ;main.c: 3096: putsUSART((char *) "ERR - Display CAN error information.\r\n");
 20169  0045C0  0E76               	movlw	high STR_263
 20170  0045C2  6E21               	movwf	?_putsUSART+1,c
 20171  0045C4  0EFD               	movlw	low STR_263
 20172  0045C6  6E20               	movwf	?_putsUSART,c
 20173  0045C8  ECD5  F032         	call	_putsUSART	;wreg free
 20174                           
 20175                           ;main.c: 3097: putsUSART((char *) "HELP - Display this help information.\r\n");
 20176  0045CC  0E76               	movlw	high STR_264
 20177  0045CE  6E21               	movwf	?_putsUSART+1,c
 20178  0045D0  0E5E               	movlw	low STR_264
 20179  0045D2  6E20               	movwf	?_putsUSART,c
 20180  0045D4  ECD5  F032         	call	_putsUSART	;wreg free
 20181                           
 20182                           ;main.c: 3098: putsUSART((char *) "FIND - Find available CAN4VSCP nodes on bus.\r\n");
 20183  0045D8  0E74               	movlw	high STR_265
 20184  0045DA  6E21               	movwf	?_putsUSART+1,c
 20185  0045DC  0ED3               	movlw	low STR_265
 20186  0045DE  6E20               	movwf	?_putsUSART,c
 20187  0045E0  ECD5  F032         	call	_putsUSART	;wreg free
 20188                           
 20189                           ;main.c: 3099: putsUSART((char *) "RREG - Read register(s) of node (Format: rreg nodeid 
      +                          [page:]reg [count]).\r\n");
 20190  0045E4  0E6E               	movlw	high STR_266
 20191  0045E6  6E21               	movwf	?_putsUSART+1,c
 20192  0045E8  0EFF               	movlw	low STR_266
 20193  0045EA  6E20               	movwf	?_putsUSART,c
 20194  0045EC  ECD5  F032         	call	_putsUSART	;wreg free
 20195                           
 20196                           ;main.c: 3100: putsUSART((char *) "WREG - Write register of node (Format: wreg nodeid [p
      +                          age:]reg content).\r\n");
 20197  0045F0  0E6F               	movlw	high STR_267
 20198  0045F2  6E21               	movwf	?_putsUSART+1,c
 20199  0045F4  0E4B               	movlw	low STR_267
 20200  0045F6  6E20               	movwf	?_putsUSART,c
 20201  0045F8  ECD5  F032         	call	_putsUSART	;wreg free
 20202                           
 20203                           ;main.c: 3101: putsUSART((char *) "INFO - Get info about an existent node on the bus (Fo
      +                          rmat: info nickname).\r\n");
 20204  0045FC  0E6E               	movlw	high STR_268
 20205  0045FE  6E21               	movwf	?_putsUSART+1,c
 20206  004600  0EB2               	movlw	low STR_268
 20207  004602  6E20               	movwf	?_putsUSART,c
 20208  004604  ECD5  F032         	call	_putsUSART	;wreg free
 20209                           
 20210                           ;main.c: 3102: putsUSART((char *) "FILTER - Set filter .\r\n");
 20211  004608  0E7B               	movlw	high STR_269
 20212  00460A  6E21               	movwf	?_putsUSART+1,c
 20213  00460C  0E4B               	movlw	low STR_269
 20214  00460E  6E20               	movwf	?_putsUSART,c
 20215  004610  ECD5  F032         	call	_putsUSART	;wreg free
 20216                           
 20217                           ;main.c: 3103: putsUSART((char *) "         Format: filter filterno,prio,class,type,node
      +                          id  (filterno = 0-15).\r\n");
 20218  004614  0E6E               	movlw	high STR_270
 20219  004616  6E21               	movwf	?_putsUSART+1,c
 20220  004618  0E64               	movlw	low STR_270
 20221  00461A  6E20               	movwf	?_putsUSART,c
 20222  00461C  ECD5  F032         	call	_putsUSART	;wreg free
 20223                           
 20224                           ;main.c: 3104: putsUSART((char *) "MASK - Set mask .\r\n");
 20225  004620  0E7C               	movlw	high STR_271
 20226  004622  6E21               	movwf	?_putsUSART+1,c
 20227  004624  0ED1               	movlw	low STR_271
 20228  004626  6E20               	movwf	?_putsUSART,c
 20229  004628  ECD5  F032         	call	_putsUSART	;wreg free
 20230                           
 20231                           ;main.c: 3105: putsUSART((char *) "       Format: mask maskno,prio,class,type,nodeid (ma
      +                          skno = 0 or 1).\r\n");
 20232  00462C  0E6F               	movlw	high STR_272
 20233  00462E  6E21               	movwf	?_putsUSART+1,c
 20234  004630  0E95               	movlw	low STR_272
 20235  004632  6E20               	movwf	?_putsUSART,c
 20236  004634  ECD5  F032         	call	_putsUSART	;wreg free
 20237                           
 20238                           ;main.c: 3106: putsUSART((char *) "SET - Persistent functionality.\r\n");
 20239  004638  0E79               	movlw	high STR_273
 20240  00463A  6E21               	movwf	?_putsUSART+1,c
 20241  00463C  0E08               	movlw	low STR_273
 20242  00463E  6E20               	movwf	?_putsUSART,c
 20243  004640  ECD5  F032         	call	_putsUSART	;wreg free
 20244                           
 20245                           ;main.c: 3107: putsUSART((char *) "    HEX - Display numericals in hexadecimal.\r\n");
 20246  004644  0E74               	movlw	high STR_274
 20247  004646  6E21               	movwf	?_putsUSART+1,c
 20248  004648  0EA4               	movlw	low STR_274
 20249  00464A  6E20               	movwf	?_putsUSART,c
 20250  00464C  ECD5  F032         	call	_putsUSART	;wreg free
 20251                           
 20252                           ;main.c: 3108: putsUSART((char *) "    DECIMAL - Display numericals in decimal.\r\n");
 20253  004650  0E74               	movlw	high STR_275
 20254  004652  6E21               	movwf	?_putsUSART+1,c
 20255  004654  0E75               	movlw	low STR_275
 20256  004656  6E20               	movwf	?_putsUSART,c
 20257  004658  ECD5  F032         	call	_putsUSART	;wreg free
 20258                           
 20259                           ;main.c: 3109: putsUSART((char *) "    RWTIMEOUT - Set register read/write timeout. Defa
      +                          ult=20 ms .\r\n");
 20260  00465C  0E70               	movlw	high STR_276
 20261  00465E  6E21               	movwf	?_putsUSART+1,c
 20262  004660  0E1F               	movlw	low STR_276
 20263  004662  6E20               	movwf	?_putsUSART,c
 20264  004664  ECD5  F032         	call	_putsUSART	;wreg free
 20265                           
 20266                           ;main.c: 3110: putsUSART((char *) "                Format: set rwtimeout timeout.\r\n");
 20267  004668  0E74               	movlw	high STR_277
 20268  00466A  6E21               	movwf	?_putsUSART+1,c
 20269  00466C  0E44               	movlw	low STR_277
 20270  00466E  6E20               	movwf	?_putsUSART,c
 20271  004670  ECD5  F032         	call	_putsUSART	;wreg free
 20272                           
 20273                           ;main.c: 3111: putsUSART((char *) "    STARTIF - Set interface state to use on startup.\
      +                          r\n");
 20274  004674  0E72               	movlw	high STR_278
 20275  004676  6E21               	movwf	?_putsUSART+1,c
 20276  004678  0E39               	movlw	low STR_278
 20277  00467A  6E20               	movwf	?_putsUSART,c
 20278  00467C  ECD5  F032         	call	_putsUSART	;wreg free
 20279                           
 20280                           ;main.c: 3112: putsUSART((char *) "    MODE - Set adapter mode that should be used on st
      +                          artup.\r\n");
 20281  004680  0E70               	movlw	high STR_279
 20282  004682  6E21               	movwf	?_putsUSART+1,c
 20283  004684  0EA4               	movlw	low STR_279
 20284  004686  6E20               	movwf	?_putsUSART,c
 20285  004688  ECD5  F032         	call	_putsUSART	;wreg free
 20286                           
 20287                           ;main.c: 3113: putsUSART((char *) "           Modes: verbose|vscp|slcan\r\n");
 20288  00468C  0E77               	movlw	high STR_280
 20289  00468E  6E21               	movwf	?_putsUSART+1,c
 20290  004690  0E99               	movlw	low STR_280
 20291  004692  6E20               	movwf	?_putsUSART,c
 20292  004694  EFD5  F032         	goto	_putsUSART	;wreg free
 20293  004698                     __end_of_printHelp:
 20294                           	opt stack 0
 20295                           tblptru	equ	0xFF8
 20296                           tblptrh	equ	0xFF7
 20297                           tblptrl	equ	0xFF6
 20298                           tablat	equ	0xFF5
 20299                           prodh	equ	0xFF4
 20300                           prodl	equ	0xFF3
 20301                           intcon	equ	0xFF2
 20302                           indf0	equ	0xFEF
 20303                           postinc0	equ	0xFEE
 20304                           fsr0h	equ	0xFEA
 20305                           fsr0l	equ	0xFE9
 20306                           wreg	equ	0xFE8
 20307                           indf1	equ	0xFE7
 20308                           postinc1	equ	0xFE6
 20309                           postdec1	equ	0xFE5
 20310                           fsr1h	equ	0xFE2
 20311                           fsr1l	equ	0xFE1
 20312                           indf2	equ	0xFDF
 20313                           postinc2	equ	0xFDE
 20314                           postdec2	equ	0xFDD
 20315                           plusw2	equ	0xFDB
 20316                           fsr2h	equ	0xFDA
 20317                           fsr2l	equ	0xFD9
 20318                           status	equ	0xFD8
 20319                           
 20320 ;; *************** function _printErrors *****************
 20321 ;; Defined at:
 20322 ;;		line 3018 in file "main.c"
 20323 ;; Parameters:    Size  Location     Type
 20324 ;;		None
 20325 ;; Auto vars:     Size  Location     Type
 20326 ;;		None
 20327 ;; Return value:  Size  Location     Type
 20328 ;;		None               void
 20329 ;; Registers used:
 20330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20331 ;; Tracked objects:
 20332 ;;		On entry : F/1
 20333 ;;		On exit  : 0/0
 20334 ;;		Unchanged: 0/0
 20335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20336 ;;      Params:         0       0       0       0       0       0       0
 20337 ;;      Locals:         0      12       0       0       0       0       0
 20338 ;;      Temps:          0       0       0       0       0       0       0
 20339 ;;      Totals:         0      12       0       0       0       0       0
 20340 ;;Total ram usage:       12 bytes
 20341 ;; Hardware stack levels used:    1
 20342 ;; Hardware stack levels required when called:    5
 20343 ;; This function calls:
 20344 ;;		_putsUSART
 20345 ;;		_sprintf
 20346 ;; This function is called by:
 20347 ;;		_doModeVerbose
 20348 ;; This function uses a non-reentrant model
 20349 ;;
 20350                           
 20351                           	psect	text40
 20352  003256                     __ptext40:
 20353                           	opt stack 0
 20354  003256                     _printErrors:
 20355                           	opt stack 24
 20356                           
 20357                           ; BSR set to: 1
 20358                           ;main.c: 3019: putsUSART((char *) "CAN Receive overruns: ");
 20359                           
 20360                           ;incstack = 0
 20361                           ;incstack = 0
 20362  003256  0E7C               	movlw	high STR_219
 20363  003258  6E21               	movwf	?_putsUSART+1,c
 20364  00325A  0E21               	movlw	low STR_219
 20365  00325C  6E20               	movwf	?_putsUSART,c
 20366  00325E  ECD5  F032         	call	_putsUSART	;wreg free
 20367                           
 20368                           ;main.c: 3020: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", can_receiveOverruns);
 20369  003262  0101               	movlb	1	; () banked
 20370  003264  6700               	tstfsz	_bHex& (0+255),b
 20371  003266  D005               	goto	l17360
 20372                           
 20373                           ; BSR set to: 1
 20374  003268  0E7F               	movlw	high STR_184
 20375  00326A  0100               	movlb	0	; () banked
 20376  00326C  6F8C               	movwf	(_printErrors$1631+1)& (0+255),b
 20377  00326E  0EDD               	movlw	low STR_184
 20378  003270  D004               	goto	L31
 20379  003272                     l17360:
 20380                           
 20381                           ; BSR set to: 1
 20382  003272  0E7F               	movlw	high STR_183
 20383  003274  0100               	movlb	0	; () banked
 20384  003276  6F8C               	movwf	(_printErrors$1631+1)& (0+255),b
 20385  003278  0E00               	movlw	low STR_183
 20386  00327A                     L31:
 20387  00327A  6F8B               	movwf	_printErrors$1631& (0+255),b
 20388                           
 20389                           ; BSR set to: 0
 20390  00327C  0E01               	movlw	high _wrkbuf
 20391  00327E  0100               	movlb	0	; () banked
 20392  003280  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20393  003282  0E55               	movlw	low _wrkbuf
 20394  003284  6F6D               	movwf	?_sprintf& (0+255),b
 20395  003286  C08B  F06F         	movff	_printErrors$1631,?_sprintf+2
 20396  00328A  C08C  F070         	movff	_printErrors$1631+1,?_sprintf+3
 20397  00328E  C0C6  F071         	movff	_can_receiveOverruns,?_sprintf+4
 20398  003292  C0C7  F072         	movff	_can_receiveOverruns+1,?_sprintf+5
 20399  003296  C0C8  F073         	movff	_can_receiveOverruns+2,?_sprintf+6
 20400  00329A  C0C9  F074         	movff	_can_receiveOverruns+3,?_sprintf+7
 20401  00329E  EC14  F010         	call	_sprintf	;wreg free
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;main.c: 3021: putsUSART(wrkbuf);
 20405  0032A2  0101               	movlb	1	; () banked
 20406  0032A4  0E01               	movlw	high _wrkbuf
 20407  0032A6  6E21               	movwf	?_putsUSART+1,c
 20408  0032A8  0E55               	movlw	low _wrkbuf
 20409  0032AA  6E20               	movwf	?_putsUSART,c
 20410  0032AC  ECD5  F032         	call	_putsUSART	;wreg free
 20411                           
 20412                           ;main.c: 3022: putsUSART((char *) "\r\n");
 20413  0032B0  0E72               	movlw	high (STR_241+51)
 20414  0032B2  6E21               	movwf	?_putsUSART+1,c
 20415  0032B4  0EDA               	movlw	low (STR_241+51)
 20416  0032B6  6E20               	movwf	?_putsUSART,c
 20417  0032B8  ECD5  F032         	call	_putsUSART	;wreg free
 20418                           
 20419                           ;main.c: 3024: putsUSART((char *) "CAN Transmit overruns: ");
 20420  0032BC  0E7B               	movlw	high STR_223
 20421  0032BE  6E21               	movwf	?_putsUSART+1,c
 20422  0032C0  0EDB               	movlw	low STR_223
 20423  0032C2  6E20               	movwf	?_putsUSART,c
 20424  0032C4  ECD5  F032         	call	_putsUSART	;wreg free
 20425                           
 20426                           ;main.c: 3025: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", can_transmitOverruns);
 20427  0032C8  0101               	movlb	1	; () banked
 20428  0032CA  6700               	tstfsz	_bHex& (0+255),b
 20429  0032CC  D005               	goto	l17374
 20430                           
 20431                           ; BSR set to: 1
 20432  0032CE  0E7F               	movlw	high STR_184
 20433  0032D0  0100               	movlb	0	; () banked
 20434  0032D2  6F8E               	movwf	(_printErrors$1637+1)& (0+255),b
 20435  0032D4  0EDD               	movlw	low STR_184
 20436  0032D6  D004               	goto	L32
 20437  0032D8                     l17374:
 20438                           
 20439                           ; BSR set to: 1
 20440  0032D8  0E7F               	movlw	high STR_183
 20441  0032DA  0100               	movlb	0	; () banked
 20442  0032DC  6F8E               	movwf	(_printErrors$1637+1)& (0+255),b
 20443  0032DE  0E00               	movlw	low STR_183
 20444  0032E0                     L32:
 20445  0032E0  6F8D               	movwf	_printErrors$1637& (0+255),b
 20446                           
 20447                           ; BSR set to: 0
 20448  0032E2  0E01               	movlw	high _wrkbuf
 20449  0032E4  0100               	movlb	0	; () banked
 20450  0032E6  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20451  0032E8  0E55               	movlw	low _wrkbuf
 20452  0032EA  6F6D               	movwf	?_sprintf& (0+255),b
 20453  0032EC  C08D  F06F         	movff	_printErrors$1637,?_sprintf+2
 20454  0032F0  C08E  F070         	movff	_printErrors$1637+1,?_sprintf+3
 20455  0032F4  C0CA  F071         	movff	_can_transmitOverruns,?_sprintf+4
 20456  0032F8  C0CB  F072         	movff	_can_transmitOverruns+1,?_sprintf+5
 20457  0032FC  C0CC  F073         	movff	_can_transmitOverruns+2,?_sprintf+6
 20458  003300  C0CD  F074         	movff	_can_transmitOverruns+3,?_sprintf+7
 20459  003304  EC14  F010         	call	_sprintf	;wreg free
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;main.c: 3026: putsUSART(wrkbuf);
 20463  003308  0101               	movlb	1	; () banked
 20464  00330A  0E01               	movlw	high _wrkbuf
 20465  00330C  6E21               	movwf	?_putsUSART+1,c
 20466  00330E  0E55               	movlw	low _wrkbuf
 20467  003310  6E20               	movwf	?_putsUSART,c
 20468  003312  ECD5  F032         	call	_putsUSART	;wreg free
 20469                           
 20470                           ;main.c: 3027: putsUSART((char *) "\r\n");
 20471  003316  0E72               	movlw	high (STR_241+51)
 20472  003318  6E21               	movwf	?_putsUSART+1,c
 20473  00331A  0EDA               	movlw	low (STR_241+51)
 20474  00331C  6E20               	movwf	?_putsUSART,c
 20475  00331E  ECD5  F032         	call	_putsUSART	;wreg free
 20476                           
 20477                           ;main.c: 3029: putsUSART((char *) "UART Receive overruns: ");
 20478  003322  0E7B               	movlw	high STR_227
 20479  003324  6E21               	movwf	?_putsUSART+1,c
 20480  003326  0EC3               	movlw	low STR_227
 20481  003328  6E20               	movwf	?_putsUSART,c
 20482  00332A  ECD5  F032         	call	_putsUSART	;wreg free
 20483                           
 20484                           ;main.c: 3030: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", uart_receiveOverruns);
 20485  00332E  0101               	movlb	1	; () banked
 20486  003330  6700               	tstfsz	_bHex& (0+255),b
 20487  003332  D005               	goto	l17388
 20488                           
 20489                           ; BSR set to: 1
 20490  003334  0E7F               	movlw	high STR_184
 20491  003336  0100               	movlb	0	; () banked
 20492  003338  6F90               	movwf	(_printErrors$1643+1)& (0+255),b
 20493  00333A  0EDD               	movlw	low STR_184
 20494  00333C  D004               	goto	L33
 20495  00333E                     l17388:
 20496                           
 20497                           ; BSR set to: 1
 20498  00333E  0E7F               	movlw	high STR_183
 20499  003340  0100               	movlb	0	; () banked
 20500  003342  6F90               	movwf	(_printErrors$1643+1)& (0+255),b
 20501  003344  0E00               	movlw	low STR_183
 20502  003346                     L33:
 20503  003346  6F8F               	movwf	_printErrors$1643& (0+255),b
 20504                           
 20505                           ; BSR set to: 0
 20506  003348  0E01               	movlw	high _wrkbuf
 20507  00334A  0100               	movlb	0	; () banked
 20508  00334C  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20509  00334E  0E55               	movlw	low _wrkbuf
 20510  003350  6F6D               	movwf	?_sprintf& (0+255),b
 20511  003352  C08F  F06F         	movff	_printErrors$1643,?_sprintf+2
 20512  003356  C090  F070         	movff	_printErrors$1643+1,?_sprintf+3
 20513  00335A  C0E6  F071         	movff	_uart_receiveOverruns,?_sprintf+4
 20514  00335E  C0E7  F072         	movff	_uart_receiveOverruns+1,?_sprintf+5
 20515  003362  C0E8  F073         	movff	_uart_receiveOverruns+2,?_sprintf+6
 20516  003366  C0E9  F074         	movff	_uart_receiveOverruns+3,?_sprintf+7
 20517  00336A  EC14  F010         	call	_sprintf	;wreg free
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;main.c: 3031: putsUSART(wrkbuf);
 20521  00336E  0101               	movlb	1	; () banked
 20522  003370  0E01               	movlw	high _wrkbuf
 20523  003372  6E21               	movwf	?_putsUSART+1,c
 20524  003374  0E55               	movlw	low _wrkbuf
 20525  003376  6E20               	movwf	?_putsUSART,c
 20526  003378  ECD5  F032         	call	_putsUSART	;wreg free
 20527                           
 20528                           ;main.c: 3032: putsUSART((char *) "\r\n");
 20529  00337C  0E72               	movlw	high (STR_241+51)
 20530  00337E  6E21               	movwf	?_putsUSART+1,c
 20531  003380  0EDA               	movlw	low (STR_241+51)
 20532  003382  6E20               	movwf	?_putsUSART,c
 20533  003384  ECD5  F032         	call	_putsUSART	;wreg free
 20534                           
 20535                           ;main.c: 3034: putsUSART((char *) "UART Receive overruns: ");
 20536  003388  0E7B               	movlw	high STR_227
 20537  00338A  6E21               	movwf	?_putsUSART+1,c
 20538  00338C  0EC3               	movlw	low STR_227
 20539  00338E  6E20               	movwf	?_putsUSART,c
 20540  003390  ECD5  F032         	call	_putsUSART	;wreg free
 20541                           
 20542                           ;main.c: 3035: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", uart_transmitOverruns);
 20543  003394  0101               	movlb	1	; () banked
 20544  003396  6700               	tstfsz	_bHex& (0+255),b
 20545  003398  D005               	goto	l17402
 20546                           
 20547                           ; BSR set to: 1
 20548  00339A  0E7F               	movlw	high STR_184
 20549  00339C  0100               	movlb	0	; () banked
 20550  00339E  6F92               	movwf	(_printErrors$1649+1)& (0+255),b
 20551  0033A0  0EDD               	movlw	low STR_184
 20552  0033A2  D004               	goto	L34
 20553  0033A4                     l17402:
 20554                           
 20555                           ; BSR set to: 1
 20556  0033A4  0E7F               	movlw	high STR_183
 20557  0033A6  0100               	movlb	0	; () banked
 20558  0033A8  6F92               	movwf	(_printErrors$1649+1)& (0+255),b
 20559  0033AA  0E00               	movlw	low STR_183
 20560  0033AC                     L34:
 20561  0033AC  6F91               	movwf	_printErrors$1649& (0+255),b
 20562                           
 20563                           ; BSR set to: 0
 20564  0033AE  0E01               	movlw	high _wrkbuf
 20565  0033B0  0100               	movlb	0	; () banked
 20566  0033B2  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20567  0033B4  0E55               	movlw	low _wrkbuf
 20568  0033B6  6F6D               	movwf	?_sprintf& (0+255),b
 20569  0033B8  C091  F06F         	movff	_printErrors$1649,?_sprintf+2
 20570  0033BC  C092  F070         	movff	_printErrors$1649+1,?_sprintf+3
 20571  0033C0  C0EA  F071         	movff	_uart_transmitOverruns,?_sprintf+4
 20572  0033C4  C0EB  F072         	movff	_uart_transmitOverruns+1,?_sprintf+5
 20573  0033C8  C0EC  F073         	movff	_uart_transmitOverruns+2,?_sprintf+6
 20574  0033CC  C0ED  F074         	movff	_uart_transmitOverruns+3,?_sprintf+7
 20575  0033D0  EC14  F010         	call	_sprintf	;wreg free
 20576                           
 20577                           ; BSR set to: 0
 20578                           ;main.c: 3036: putsUSART(wrkbuf);
 20579  0033D4  0101               	movlb	1	; () banked
 20580  0033D6  0E01               	movlw	high _wrkbuf
 20581  0033D8  6E21               	movwf	?_putsUSART+1,c
 20582  0033DA  0E55               	movlw	low _wrkbuf
 20583  0033DC  6E20               	movwf	?_putsUSART,c
 20584  0033DE  ECD5  F032         	call	_putsUSART	;wreg free
 20585                           
 20586                           ;main.c: 3037: putsUSART((char *) "\r\n");
 20587  0033E2  0E72               	movlw	high (STR_241+51)
 20588  0033E4  6E21               	movwf	?_putsUSART+1,c
 20589  0033E6  0EDA               	movlw	low (STR_241+51)
 20590  0033E8  6E20               	movwf	?_putsUSART,c
 20591  0033EA  ECD5  F032         	call	_putsUSART	;wreg free
 20592                           
 20593                           ;main.c: 3039: if (COMSTATbits.EWARN) {
 20594  0033EE  A074               	btfss	3956,0,c	;volatile
 20595  0033F0  D006               	goto	l1307
 20596                           
 20597                           ;main.c: 3040: putsUSART((char *) "Transmitter or Receiver is in Error State Warning\r\n
      +                          ");
 20598  0033F2  0E73               	movlw	high STR_235
 20599  0033F4  6E21               	movwf	?_putsUSART+1,c
 20600  0033F6  0E47               	movlw	low STR_235
 20601  0033F8  6E20               	movwf	?_putsUSART,c
 20602  0033FA  ECD5  F032         	call	_putsUSART	;wreg free
 20603  0033FE                     l1307:
 20604                           
 20605                           ;main.c: 3041: }
 20606                           ;main.c: 3043: putsUSART((char *) "Transmit Error Counter: ");
 20607  0033FE  0E7B               	movlw	high STR_236
 20608  003400  6E21               	movwf	?_putsUSART+1,c
 20609  003402  0E01               	movlw	low STR_236
 20610  003404  6E20               	movwf	?_putsUSART,c
 20611  003406  ECD5  F032         	call	_putsUSART	;wreg free
 20612                           
 20613                           ;main.c: 3044: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", TXERRCNT);
 20614  00340A  0101               	movlb	1	; () banked
 20615  00340C  6700               	tstfsz	_bHex& (0+255),b
 20616  00340E  D005               	goto	l17418
 20617                           
 20618                           ; BSR set to: 1
 20619  003410  0E7F               	movlw	high STR_61
 20620  003412  0100               	movlb	0	; () banked
 20621  003414  6F94               	movwf	(_printErrors$1656+1)& (0+255),b
 20622  003416  0EED               	movlw	low STR_61
 20623  003418  D004               	goto	L35
 20624  00341A                     l17418:
 20625                           
 20626                           ; BSR set to: 1
 20627  00341A  0E7F               	movlw	high STR_60
 20628  00341C  0100               	movlb	0	; () banked
 20629  00341E  6F94               	movwf	(_printErrors$1656+1)& (0+255),b
 20630  003420  0E4F               	movlw	low STR_60
 20631  003422                     L35:
 20632  003422  6F93               	movwf	_printErrors$1656& (0+255),b
 20633                           
 20634                           ; BSR set to: 0
 20635  003424  0E01               	movlw	high _wrkbuf
 20636  003426  0100               	movlb	0	; () banked
 20637  003428  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20638  00342A  0E55               	movlw	low _wrkbuf
 20639  00342C  6F6D               	movwf	?_sprintf& (0+255),b
 20640  00342E  C093  F06F         	movff	_printErrors$1656,?_sprintf+2
 20641  003432  C094  F070         	movff	_printErrors$1656+1,?_sprintf+3
 20642  003436  CF76 F071          	movff	3958,?_sprintf+4	;volatile
 20643  00343A  6B72               	clrf	(?_sprintf+5)& (0+255),b
 20644  00343C  EC14  F010         	call	_sprintf	;wreg free
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;main.c: 3045: putsUSART(wrkbuf);
 20648  003440  0101               	movlb	1	; () banked
 20649  003442  0E01               	movlw	high _wrkbuf
 20650  003444  6E21               	movwf	?_putsUSART+1,c
 20651  003446  0E55               	movlw	low _wrkbuf
 20652  003448  6E20               	movwf	?_putsUSART,c
 20653  00344A  ECD5  F032         	call	_putsUSART	;wreg free
 20654                           
 20655                           ;main.c: 3046: putsUSART((char *) "\r\n");
 20656  00344E  0E72               	movlw	high (STR_241+51)
 20657  003450  6E21               	movwf	?_putsUSART+1,c
 20658  003452  0EDA               	movlw	low (STR_241+51)
 20659  003454  6E20               	movwf	?_putsUSART,c
 20660  003456  ECD5  F032         	call	_putsUSART	;wreg free
 20661                           
 20662                           ;main.c: 3048: if (COMSTATbits.TXWARN) {
 20663  00345A  A474               	btfss	3956,2,c	;volatile
 20664  00345C  D006               	goto	l17430
 20665                           
 20666                           ;main.c: 3049: putsUSART((char *) "Transmitter in Error State Warning (128 > TXERRCNT > 
      +                          96)\r\n");
 20667  00345E  0E70               	movlw	high STR_240
 20668  003460  6E21               	movwf	?_putsUSART+1,c
 20669  003462  0EE2               	movlw	low STR_240
 20670  003464  6E20               	movwf	?_putsUSART,c
 20671  003466  ECD5  F032         	call	_putsUSART	;wreg free
 20672  00346A                     l17430:
 20673                           
 20674                           ;main.c: 3050: }
 20675                           ;main.c: 3052: if (COMSTATbits.TXBO) {
 20676  00346A  AA74               	btfss	3956,5,c	;volatile
 20677  00346C  D006               	goto	l17434
 20678                           
 20679                           ;main.c: 3053: putsUSART((char *) "Transmitter in Error State Bus OFF (TXERRCNT ? 256)\r
      +                          \n");
 20680  00346E  0E72               	movlw	high STR_241
 20681  003470  6E21               	movwf	?_putsUSART+1,c
 20682  003472  0EA7               	movlw	low STR_241
 20683  003474  6E20               	movwf	?_putsUSART,c
 20684  003476  ECD5  F032         	call	_putsUSART	;wreg free
 20685  00347A                     l17434:
 20686                           
 20687                           ;main.c: 3054: }
 20688                           ;main.c: 3056: if (COMSTATbits.TXBP) {
 20689  00347A  A874               	btfss	3956,4,c	;volatile
 20690  00347C  D006               	goto	l1314
 20691                           
 20692                           ;main.c: 3057: putsUSART((char *) "Transmitter in Error State Bus Passive (TXERRCNT ? 12
      +                          8)\r\n");
 20693  00347E  0E71               	movlw	high STR_242
 20694  003480  6E21               	movwf	?_putsUSART+1,c
 20695  003482  0E1D               	movlw	low STR_242
 20696  003484  6E20               	movwf	?_putsUSART,c
 20697  003486  ECD5  F032         	call	_putsUSART	;wreg free
 20698  00348A                     l1314:
 20699                           
 20700                           ;main.c: 3058: }
 20701                           ;main.c: 3060: putsUSART((char *) "Receive Error Counter: ");
 20702  00348A  0E7B               	movlw	high STR_243
 20703  00348C  6E21               	movwf	?_putsUSART+1,c
 20704  00348E  0EAB               	movlw	low STR_243
 20705  003490  6E20               	movwf	?_putsUSART,c
 20706  003492  ECD5  F032         	call	_putsUSART	;wreg free
 20707                           
 20708                           ;main.c: 3061: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", RXERRCNT);
 20709  003496  0101               	movlb	1	; () banked
 20710  003498  6700               	tstfsz	_bHex& (0+255),b
 20711  00349A  D005               	goto	l17442
 20712                           
 20713                           ; BSR set to: 1
 20714  00349C  0E7F               	movlw	high STR_61
 20715  00349E  0100               	movlb	0	; () banked
 20716  0034A0  6F96               	movwf	(_printErrors$1665+1)& (0+255),b
 20717  0034A2  0EED               	movlw	low STR_61
 20718  0034A4  D004               	goto	L36
 20719  0034A6                     l17442:
 20720                           
 20721                           ; BSR set to: 1
 20722  0034A6  0E7F               	movlw	high STR_60
 20723  0034A8  0100               	movlb	0	; () banked
 20724  0034AA  6F96               	movwf	(_printErrors$1665+1)& (0+255),b
 20725  0034AC  0E4F               	movlw	low STR_60
 20726  0034AE                     L36:
 20727  0034AE  6F95               	movwf	_printErrors$1665& (0+255),b
 20728                           
 20729                           ; BSR set to: 0
 20730  0034B0  0E01               	movlw	high _wrkbuf
 20731  0034B2  0100               	movlb	0	; () banked
 20732  0034B4  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20733  0034B6  0E55               	movlw	low _wrkbuf
 20734  0034B8  6F6D               	movwf	?_sprintf& (0+255),b
 20735  0034BA  C095  F06F         	movff	_printErrors$1665,?_sprintf+2
 20736  0034BE  C096  F070         	movff	_printErrors$1665+1,?_sprintf+3
 20737  0034C2  CF75 F071          	movff	3957,?_sprintf+4	;volatile
 20738  0034C6  6B72               	clrf	(?_sprintf+5)& (0+255),b
 20739  0034C8  EC14  F010         	call	_sprintf	;wreg free
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;main.c: 3062: putsUSART(wrkbuf);
 20743  0034CC  0101               	movlb	1	; () banked
 20744  0034CE  0E01               	movlw	high _wrkbuf
 20745  0034D0  6E21               	movwf	?_putsUSART+1,c
 20746  0034D2  0E55               	movlw	low _wrkbuf
 20747  0034D4  6E20               	movwf	?_putsUSART,c
 20748  0034D6  ECD5  F032         	call	_putsUSART	;wreg free
 20749                           
 20750                           ;main.c: 3063: putsUSART((char *) "\r\n");
 20751  0034DA  0E72               	movlw	high (STR_241+51)
 20752  0034DC  6E21               	movwf	?_putsUSART+1,c
 20753  0034DE  0EDA               	movlw	low (STR_241+51)
 20754  0034E0  6E20               	movwf	?_putsUSART,c
 20755  0034E2  ECD5  F032         	call	_putsUSART	;wreg free
 20756                           
 20757                           ;main.c: 3065: if (COMSTATbits.RXBP) {
 20758  0034E6  A674               	btfss	3956,3,c	;volatile
 20759  0034E8  D006               	goto	l17454
 20760                           
 20761                           ;main.c: 3066: putsUSART((char *) "Receiver in Error State Bus Passive (RXERRCNT > 127)\
      +                          r\n");
 20762  0034EA  0E72               	movlw	high STR_247
 20763  0034EC  6E21               	movwf	?_putsUSART+1,c
 20764  0034EE  0E02               	movlw	low STR_247
 20765  0034F0  6E20               	movwf	?_putsUSART,c
 20766  0034F2  ECD5  F032         	call	_putsUSART	;wreg free
 20767  0034F6                     l17454:
 20768                           
 20769                           ;main.c: 3067: }
 20770                           ;main.c: 3069: if (COMSTATbits.RXWARN) {
 20771  0034F6  A274               	btfss	3956,1,c	;volatile
 20772  0034F8  D006               	goto	l1321
 20773                           
 20774                           ;main.c: 3070: putsUSART((char *) "Receiver  in Error State Warning (128 > RXERRCNT > 96
      +                          )\r\n");
 20775  0034FA  0E71               	movlw	high STR_248
 20776  0034FC  6E21               	movwf	?_putsUSART+1,c
 20777  0034FE  0E91               	movlw	low STR_248
 20778  003500  6E20               	movwf	?_putsUSART,c
 20779  003502  ECD5  F032         	call	_putsUSART	;wreg free
 20780  003506                     l1321:
 20781  003506  0012               	return	
 20782  003508                     __end_of_printErrors:
 20783                           	opt stack 0
 20784                           tblptru	equ	0xFF8
 20785                           tblptrh	equ	0xFF7
 20786                           tblptrl	equ	0xFF6
 20787                           tablat	equ	0xFF5
 20788                           prodh	equ	0xFF4
 20789                           prodl	equ	0xFF3
 20790                           intcon	equ	0xFF2
 20791                           indf0	equ	0xFEF
 20792                           postinc0	equ	0xFEE
 20793                           fsr0h	equ	0xFEA
 20794                           fsr0l	equ	0xFE9
 20795                           wreg	equ	0xFE8
 20796                           indf1	equ	0xFE7
 20797                           postinc1	equ	0xFE6
 20798                           postdec1	equ	0xFE5
 20799                           fsr1h	equ	0xFE2
 20800                           fsr1l	equ	0xFE1
 20801                           indf2	equ	0xFDF
 20802                           postinc2	equ	0xFDE
 20803                           postdec2	equ	0xFDD
 20804                           plusw2	equ	0xFDB
 20805                           fsr2h	equ	0xFDA
 20806                           fsr2l	equ	0xFD9
 20807                           status	equ	0xFD8
 20808                           
 20809 ;; *************** function _printStatistics *****************
 20810 ;; Defined at:
 20811 ;;		line 2991 in file "main.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;		None
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;		None
 20816 ;; Return value:  Size  Location     Type
 20817 ;;		None               void
 20818 ;; Registers used:
 20819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20820 ;; Tracked objects:
 20821 ;;		On entry : F/1
 20822 ;;		On exit  : 0/0
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20825 ;;      Params:         0       0       0       0       0       0       0
 20826 ;;      Locals:         0       8       0       0       0       0       0
 20827 ;;      Temps:          0       0       0       0       0       0       0
 20828 ;;      Totals:         0       8       0       0       0       0       0
 20829 ;;Total ram usage:        8 bytes
 20830 ;; Hardware stack levels used:    1
 20831 ;; Hardware stack levels required when called:    5
 20832 ;; This function calls:
 20833 ;;		_putsUSART
 20834 ;;		_sprintf
 20835 ;; This function is called by:
 20836 ;;		_doModeVerbose
 20837 ;; This function uses a non-reentrant model
 20838 ;;
 20839                           
 20840                           	psect	text41
 20841  0041F4                     __ptext41:
 20842                           	opt stack 0
 20843  0041F4                     _printStatistics:
 20844                           	opt stack 24
 20845                           
 20846                           ; BSR set to: 1
 20847                           ;main.c: 2992: putsUSART((char *) "Sent CAN frames: ");
 20848                           
 20849                           ;incstack = 0
 20850                           ;incstack = 0
 20851  0041F4  0E7D               	movlw	high STR_203
 20852  0041F6  6E21               	movwf	?_putsUSART+1,c
 20853  0041F8  0E94               	movlw	low STR_203
 20854  0041FA  6E20               	movwf	?_putsUSART,c
 20855  0041FC  ECD5  F032         	call	_putsUSART	;wreg free
 20856                           
 20857                           ;main.c: 2993: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntTxFrames);
 20858  004200  0101               	movlb	1	; () banked
 20859  004202  6700               	tstfsz	_bHex& (0+255),b
 20860  004204  D005               	goto	l17304
 20861                           
 20862                           ; BSR set to: 1
 20863  004206  0E7F               	movlw	high STR_184
 20864  004208  0100               	movlb	0	; () banked
 20865  00420A  6F8C               	movwf	(_printStatistics$1606+1)& (0+255),b
 20866  00420C  0EDD               	movlw	low STR_184
 20867  00420E  D004               	goto	L37
 20868  004210                     l17304:
 20869                           
 20870                           ; BSR set to: 1
 20871  004210  0E7F               	movlw	high STR_204
 20872  004212  0100               	movlb	0	; () banked
 20873  004214  6F8C               	movwf	(_printStatistics$1606+1)& (0+255),b
 20874  004216  0E5D               	movlw	low STR_204
 20875  004218                     L37:
 20876  004218  6F8B               	movwf	_printStatistics$1606& (0+255),b
 20877                           
 20878                           ; BSR set to: 0
 20879  00421A  0E01               	movlw	high _wrkbuf
 20880  00421C  0100               	movlb	0	; () banked
 20881  00421E  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20882  004220  0E55               	movlw	low _wrkbuf
 20883  004222  6F6D               	movwf	?_sprintf& (0+255),b
 20884  004224  C08B  F06F         	movff	_printStatistics$1606,?_sprintf+2
 20885  004228  C08C  F070         	movff	_printStatistics$1606+1,?_sprintf+3
 20886  00422C  C0DA  F071         	movff	_cntTxFrames,?_sprintf+4
 20887  004230  C0DB  F072         	movff	_cntTxFrames+1,?_sprintf+5
 20888  004234  C0DC  F073         	movff	_cntTxFrames+2,?_sprintf+6
 20889  004238  C0DD  F074         	movff	_cntTxFrames+3,?_sprintf+7
 20890  00423C  EC14  F010         	call	_sprintf	;wreg free
 20891                           
 20892                           ; BSR set to: 0
 20893                           ;main.c: 2994: putsUSART(wrkbuf);
 20894  004240  0101               	movlb	1	; () banked
 20895  004242  0E01               	movlw	high _wrkbuf
 20896  004244  6E21               	movwf	?_putsUSART+1,c
 20897  004246  0E55               	movlw	low _wrkbuf
 20898  004248  6E20               	movwf	?_putsUSART,c
 20899  00424A  ECD5  F032         	call	_putsUSART	;wreg free
 20900                           
 20901                           ;main.c: 2995: putsUSART((char *) "\r\n");
 20902  00424E  0E72               	movlw	high (STR_241+51)
 20903  004250  6E21               	movwf	?_putsUSART+1,c
 20904  004252  0EDA               	movlw	low (STR_241+51)
 20905  004254  6E20               	movwf	?_putsUSART,c
 20906  004256  ECD5  F032         	call	_putsUSART	;wreg free
 20907                           
 20908                           ;main.c: 2997: putsUSART((char *) "Sent CAN bytes: ");
 20909  00425A  0E7D               	movlw	high STR_207
 20910  00425C  6E21               	movwf	?_putsUSART+1,c
 20911  00425E  0ED9               	movlw	low STR_207
 20912  004260  6E20               	movwf	?_putsUSART,c
 20913  004262  ECD5  F032         	call	_putsUSART	;wreg free
 20914                           
 20915                           ;main.c: 2998: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntTxBytes);
 20916  004266  0101               	movlb	1	; () banked
 20917  004268  6700               	tstfsz	_bHex& (0+255),b
 20918  00426A  D005               	goto	l17318
 20919                           
 20920                           ; BSR set to: 1
 20921  00426C  0E7F               	movlw	high STR_184
 20922  00426E  0100               	movlb	0	; () banked
 20923  004270  6F8E               	movwf	(_printStatistics$1612+1)& (0+255),b
 20924  004272  0EDD               	movlw	low STR_184
 20925  004274  D004               	goto	L38
 20926  004276                     l17318:
 20927                           
 20928                           ; BSR set to: 1
 20929  004276  0E7F               	movlw	high STR_204
 20930  004278  0100               	movlb	0	; () banked
 20931  00427A  6F8E               	movwf	(_printStatistics$1612+1)& (0+255),b
 20932  00427C  0E5D               	movlw	low STR_204
 20933  00427E                     L38:
 20934  00427E  6F8D               	movwf	_printStatistics$1612& (0+255),b
 20935                           
 20936                           ; BSR set to: 0
 20937  004280  0E01               	movlw	high _wrkbuf
 20938  004282  0100               	movlb	0	; () banked
 20939  004284  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20940  004286  0E55               	movlw	low _wrkbuf
 20941  004288  6F6D               	movwf	?_sprintf& (0+255),b
 20942  00428A  C08D  F06F         	movff	_printStatistics$1612,?_sprintf+2
 20943  00428E  C08E  F070         	movff	_printStatistics$1612+1,?_sprintf+3
 20944  004292  C0D6  F071         	movff	_cntTxBytes,?_sprintf+4
 20945  004296  C0D7  F072         	movff	_cntTxBytes+1,?_sprintf+5
 20946  00429A  C0D8  F073         	movff	_cntTxBytes+2,?_sprintf+6
 20947  00429E  C0D9  F074         	movff	_cntTxBytes+3,?_sprintf+7
 20948  0042A2  EC14  F010         	call	_sprintf	;wreg free
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;main.c: 2999: putsUSART(wrkbuf);
 20952  0042A6  0101               	movlb	1	; () banked
 20953  0042A8  0E01               	movlw	high _wrkbuf
 20954  0042AA  6E21               	movwf	?_putsUSART+1,c
 20955  0042AC  0E55               	movlw	low _wrkbuf
 20956  0042AE  6E20               	movwf	?_putsUSART,c
 20957  0042B0  ECD5  F032         	call	_putsUSART	;wreg free
 20958                           
 20959                           ;main.c: 3000: putsUSART((char *) "\r\n");
 20960  0042B4  0E72               	movlw	high (STR_241+51)
 20961  0042B6  6E21               	movwf	?_putsUSART+1,c
 20962  0042B8  0EDA               	movlw	low (STR_241+51)
 20963  0042BA  6E20               	movwf	?_putsUSART,c
 20964  0042BC  ECD5  F032         	call	_putsUSART	;wreg free
 20965                           
 20966                           ;main.c: 3002: putsUSART((char *) "Received CAN frames: ");
 20967  0042C0  0E7C               	movlw	high STR_211
 20968  0042C2  6E21               	movwf	?_putsUSART+1,c
 20969  0042C4  0E91               	movlw	low STR_211
 20970  0042C6  6E20               	movwf	?_putsUSART,c
 20971  0042C8  ECD5  F032         	call	_putsUSART	;wreg free
 20972                           
 20973                           ;main.c: 3003: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntRxFrames);
 20974  0042CC  0101               	movlb	1	; () banked
 20975  0042CE  6700               	tstfsz	_bHex& (0+255),b
 20976  0042D0  D005               	goto	l17332
 20977                           
 20978                           ; BSR set to: 1
 20979  0042D2  0E7F               	movlw	high STR_184
 20980  0042D4  0100               	movlb	0	; () banked
 20981  0042D6  6F90               	movwf	(_printStatistics$1618+1)& (0+255),b
 20982  0042D8  0EDD               	movlw	low STR_184
 20983  0042DA  D004               	goto	L39
 20984  0042DC                     l17332:
 20985                           
 20986                           ; BSR set to: 1
 20987  0042DC  0E7F               	movlw	high STR_204
 20988  0042DE  0100               	movlb	0	; () banked
 20989  0042E0  6F90               	movwf	(_printStatistics$1618+1)& (0+255),b
 20990  0042E2  0E5D               	movlw	low STR_204
 20991  0042E4                     L39:
 20992  0042E4  6F8F               	movwf	_printStatistics$1618& (0+255),b
 20993                           
 20994                           ; BSR set to: 0
 20995  0042E6  0E01               	movlw	high _wrkbuf
 20996  0042E8  0100               	movlb	0	; () banked
 20997  0042EA  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20998  0042EC  0E55               	movlw	low _wrkbuf
 20999  0042EE  6F6D               	movwf	?_sprintf& (0+255),b
 21000  0042F0  C08F  F06F         	movff	_printStatistics$1618,?_sprintf+2
 21001  0042F4  C090  F070         	movff	_printStatistics$1618+1,?_sprintf+3
 21002  0042F8  C0D2  F071         	movff	_cntRxFrames,?_sprintf+4
 21003  0042FC  C0D3  F072         	movff	_cntRxFrames+1,?_sprintf+5
 21004  004300  C0D4  F073         	movff	_cntRxFrames+2,?_sprintf+6
 21005  004304  C0D5  F074         	movff	_cntRxFrames+3,?_sprintf+7
 21006  004308  EC14  F010         	call	_sprintf	;wreg free
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;main.c: 3004: putsUSART(wrkbuf);
 21010  00430C  0101               	movlb	1	; () banked
 21011  00430E  0E01               	movlw	high _wrkbuf
 21012  004310  6E21               	movwf	?_putsUSART+1,c
 21013  004312  0E55               	movlw	low _wrkbuf
 21014  004314  6E20               	movwf	?_putsUSART,c
 21015  004316  ECD5  F032         	call	_putsUSART	;wreg free
 21016                           
 21017                           ;main.c: 3005: putsUSART((char *) "\r\n");
 21018  00431A  0E72               	movlw	high (STR_241+51)
 21019  00431C  6E21               	movwf	?_putsUSART+1,c
 21020  00431E  0EDA               	movlw	low (STR_241+51)
 21021  004320  6E20               	movwf	?_putsUSART,c
 21022  004322  ECD5  F032         	call	_putsUSART	;wreg free
 21023                           
 21024                           ;main.c: 3007: putsUSART((char *) "Received CAN bytes: ");
 21025  004326  0E7C               	movlw	high STR_215
 21026  004328  6E21               	movwf	?_putsUSART+1,c
 21027  00432A  0EBC               	movlw	low STR_215
 21028  00432C  6E20               	movwf	?_putsUSART,c
 21029  00432E  ECD5  F032         	call	_putsUSART	;wreg free
 21030                           
 21031                           ;main.c: 3008: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntRxBytes);
 21032  004332  0101               	movlb	1	; () banked
 21033  004334  6700               	tstfsz	_bHex& (0+255),b
 21034  004336  D005               	goto	l17346
 21035                           
 21036                           ; BSR set to: 1
 21037  004338  0E7F               	movlw	high STR_184
 21038  00433A  0100               	movlb	0	; () banked
 21039  00433C  6F92               	movwf	(_printStatistics$1624+1)& (0+255),b
 21040  00433E  0EDD               	movlw	low STR_184
 21041  004340  D004               	goto	L40
 21042  004342                     l17346:
 21043                           
 21044                           ; BSR set to: 1
 21045  004342  0E7F               	movlw	high STR_204
 21046  004344  0100               	movlb	0	; () banked
 21047  004346  6F92               	movwf	(_printStatistics$1624+1)& (0+255),b
 21048  004348  0E5D               	movlw	low STR_204
 21049  00434A                     L40:
 21050  00434A  6F91               	movwf	_printStatistics$1624& (0+255),b
 21051                           
 21052                           ; BSR set to: 0
 21053  00434C  0E01               	movlw	high _wrkbuf
 21054  00434E  0100               	movlb	0	; () banked
 21055  004350  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 21056  004352  0E55               	movlw	low _wrkbuf
 21057  004354  6F6D               	movwf	?_sprintf& (0+255),b
 21058  004356  C091  F06F         	movff	_printStatistics$1624,?_sprintf+2
 21059  00435A  C092  F070         	movff	_printStatistics$1624+1,?_sprintf+3
 21060  00435E  C0CE  F071         	movff	_cntRxBytes,?_sprintf+4
 21061  004362  C0CF  F072         	movff	_cntRxBytes+1,?_sprintf+5
 21062  004366  C0D0  F073         	movff	_cntRxBytes+2,?_sprintf+6
 21063  00436A  C0D1  F074         	movff	_cntRxBytes+3,?_sprintf+7
 21064  00436E  EC14  F010         	call	_sprintf	;wreg free
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;main.c: 3009: putsUSART(wrkbuf);
 21068  004372  0101               	movlb	1	; () banked
 21069  004374  0E01               	movlw	high _wrkbuf
 21070  004376  6E21               	movwf	?_putsUSART+1,c
 21071  004378  0E55               	movlw	low _wrkbuf
 21072  00437A  6E20               	movwf	?_putsUSART,c
 21073  00437C  ECD5  F032         	call	_putsUSART	;wreg free
 21074                           
 21075                           ;main.c: 3010: putsUSART((char *) "\r\n");
 21076  004380  0E72               	movlw	high (STR_241+51)
 21077  004382  6E21               	movwf	?_putsUSART+1,c
 21078  004384  0EDA               	movlw	low (STR_241+51)
 21079  004386  6E20               	movwf	?_putsUSART,c
 21080  004388  EFD5  F032         	goto	_putsUSART	;wreg free
 21081  00438C                     __end_of_printStatistics:
 21082                           	opt stack 0
 21083                           tblptru	equ	0xFF8
 21084                           tblptrh	equ	0xFF7
 21085                           tblptrl	equ	0xFF6
 21086                           tablat	equ	0xFF5
 21087                           prodh	equ	0xFF4
 21088                           prodl	equ	0xFF3
 21089                           intcon	equ	0xFF2
 21090                           indf0	equ	0xFEF
 21091                           postinc0	equ	0xFEE
 21092                           fsr0h	equ	0xFEA
 21093                           fsr0l	equ	0xFE9
 21094                           wreg	equ	0xFE8
 21095                           indf1	equ	0xFE7
 21096                           postinc1	equ	0xFE6
 21097                           postdec1	equ	0xFE5
 21098                           fsr1h	equ	0xFE2
 21099                           fsr1l	equ	0xFE1
 21100                           indf2	equ	0xFDF
 21101                           postinc2	equ	0xFDE
 21102                           postdec2	equ	0xFDD
 21103                           plusw2	equ	0xFDB
 21104                           fsr2h	equ	0xFDA
 21105                           fsr2l	equ	0xFD9
 21106                           status	equ	0xFD8
 21107                           
 21108 ;; *************** function _atoi *****************
 21109 ;; Defined at:
 21110 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\atoi.c"
 21111 ;; Parameters:    Size  Location     Type
 21112 ;;  s               2    2[BANK0 ] PTR const unsigned char 
 21113 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21114 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21115 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21116 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21117 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21118 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 21119 ;;		 -> cmdbuf(80), 
 21120 ;; Auto vars:     Size  Location     Type
 21121 ;;  a               2    7[BANK0 ] int 
 21122 ;;  sign            1    6[BANK0 ] unsigned char 
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  2    2[BANK0 ] int 
 21125 ;; Registers used:
 21126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21127 ;; Tracked objects:
 21128 ;;		On entry : C/2
 21129 ;;		On exit  : F/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21132 ;;      Params:         0       2       0       0       0       0       0
 21133 ;;      Locals:         0       3       0       0       0       0       0
 21134 ;;      Temps:          0       2       0       0       0       0       0
 21135 ;;      Totals:         0       7       0       0       0       0       0
 21136 ;;Total ram usage:        7 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:    4
 21139 ;; This function calls:
 21140 ;;		_isdigit
 21141 ;;		___wmul
 21142 ;; This function is called by:
 21143 ;;		_doModeVerbose
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147                           	psect	text42
 21148  004DA2                     __ptext42:
 21149                           	opt stack 0
 21150  004DA2                     _atoi:
 21151                           	opt stack 25
 21152                           
 21153                           ;incstack = 0
 21154                           ;incstack = 0
 21155  004DA2  D003               	goto	l17256
 21156  004DA4                     l17254:
 21157  004DA4  0100               	movlb	0	; () banked
 21158  004DA6  4B62               	infsnz	atoi@s& (0+255),f,b
 21159  004DA8  2B63               	incf	(atoi@s+1)& (0+255),f,b
 21160  004DAA                     l17256:
 21161  004DAA  0100               	movlb	0	; () banked
 21162  004DAC  D877               	call	PL32	;call to abstracted procedure
 21163  004DAE  64EA               	cpfsgt	fsr0h,c
 21164  004DB0  D003               	bra	u22427
 21165  004DB2  6EEA               	movwf	fsr0h,c
 21166  004DB4  50EF               	movf	indf0,w,c
 21167  004DB6  D003               	bra	u22420
 21168  004DB8                     u22427:
 21169  004DB8  6EF7               	movwf	tblptrh,c
 21170  004DBA  0008               	tblrd		*
 21171  004DBC  50F5               	movf	tablat,w,c
 21172  004DBE                     u22420:
 21173  004DBE  0A20               	xorlw	32
 21174  004DC0  E0F1               	bz	l17254
 21175  004DC2  0100               	movlb	0	; () banked
 21176  004DC4  D86B               	call	PL32	;call to abstracted procedure
 21177  004DC6  64EA               	cpfsgt	fsr0h,c
 21178  004DC8  D003               	bra	u22447
 21179  004DCA  6EEA               	movwf	fsr0h,c
 21180  004DCC  50EF               	movf	indf0,w,c
 21181  004DCE  D003               	bra	u22440
 21182  004DD0                     u22447:
 21183  004DD0  6EF7               	movwf	tblptrh,c
 21184  004DD2  0008               	tblrd		*
 21185  004DD4  50F5               	movf	tablat,w,c
 21186  004DD6                     u22440:
 21187  004DD6  0A09               	xorlw	9
 21188  004DD8  E0E5               	bz	l17254
 21189  004DDA  0100               	movlb	0	; () banked
 21190  004DDC  6B67               	clrf	atoi@a& (0+255),b
 21191  004DDE  6B68               	clrf	(atoi@a+1)& (0+255),b
 21192  004DE0  6B66               	clrf	atoi@sign& (0+255),b
 21193                           
 21194                           ; BSR set to: 0
 21195  004DE2  D85C               	call	PL32	;call to abstracted procedure
 21196  004DE4  64EA               	cpfsgt	fsr0h,c
 21197  004DE6  D003               	bra	u22467
 21198  004DE8  6EEA               	movwf	fsr0h,c
 21199  004DEA  50EF               	movf	indf0,w,c
 21200  004DEC  D003               	bra	u22460
 21201  004DEE                     u22467:
 21202  004DEE  6EF7               	movwf	tblptrh,c
 21203  004DF0  0008               	tblrd		*
 21204  004DF2  50F5               	movf	tablat,w,c
 21205  004DF4                     u22460:
 21206  004DF4  0A2D               	xorlw	45
 21207  004DF6  E103               	bnz	l17264
 21208  004DF8  0100               	movlb	0	; () banked
 21209  004DFA  2B66               	incf	atoi@sign& (0+255),f,b
 21210  004DFC  D00D               	goto	L41
 21211  004DFE                     l17264:
 21212  004DFE  0100               	movlb	0	; () banked
 21213  004E00  D84D               	call	PL32	;call to abstracted procedure
 21214  004E02  64EA               	cpfsgt	fsr0h,c
 21215  004E04  D003               	bra	u22487
 21216  004E06  6EEA               	movwf	fsr0h,c
 21217  004E08  50EF               	movf	indf0,w,c
 21218  004E0A  D003               	bra	u22480
 21219  004E0C                     u22487:
 21220  004E0C  6EF7               	movwf	tblptrh,c
 21221  004E0E  0008               	tblrd		*
 21222  004E10  50F5               	movf	tablat,w,c
 21223  004E12                     u22480:
 21224  004E12  0A2B               	xorlw	43
 21225  004E14  E121               	bnz	l17272
 21226  004E16                     l17266:
 21227  004E16  0100               	movlb	0	; () banked
 21228  004E18                     L41:
 21229  004E18  4B62               	infsnz	atoi@s& (0+255),f,b
 21230  004E1A  2B63               	incf	(atoi@s+1)& (0+255),f,b
 21231  004E1C  D01D               	goto	l17272
 21232  004E1E                     l17268:
 21233  004E1E  C067  F023         	movff	atoi@a,?___wmul
 21234  004E22  C068  F024         	movff	atoi@a+1,?___wmul+1
 21235  004E26  6A26               	clrf	?___wmul+3,c
 21236  004E28  0E0A               	movlw	10
 21237  004E2A  6E25               	movwf	?___wmul+2,c
 21238  004E2C  EC49  F034         	call	___wmul	;wreg free
 21239  004E30  D835               	call	PL32	;call to abstracted procedure
 21240  004E32  64EA               	cpfsgt	fsr0h,c
 21241  004E34  D003               	bra	u22507
 21242  004E36  6EEA               	movwf	fsr0h,c
 21243  004E38  50EF               	movf	indf0,w,c
 21244  004E3A  D003               	bra	u22500
 21245  004E3C                     u22507:
 21246  004E3C  6EF7               	movwf	tblptrh,c
 21247  004E3E  0008               	tblrd		*
 21248  004E40  50F5               	movf	tablat,w,c
 21249  004E42                     u22500:
 21250  004E42  2623               	addwf	?___wmul,f,c
 21251  004E44  0E00               	movlw	0
 21252  004E46  2224               	addwfc	?___wmul+1,f,c
 21253  004E48  0ED0               	movlw	208
 21254  004E4A  2423               	addwf	?___wmul,w,c
 21255  004E4C  0100               	movlb	0	; () banked
 21256  004E4E  6F67               	movwf	atoi@a& (0+255),b
 21257  004E50  0EFF               	movlw	255
 21258  004E52  2024               	addwfc	?___wmul+1,w,c
 21259  004E54  6F68               	movwf	(atoi@a+1)& (0+255),b
 21260  004E56  D7DF               	goto	l17266
 21261  004E58                     l17272:
 21262  004E58  0100               	movlb	0	; () banked
 21263  004E5A  D820               	call	PL32	;call to abstracted procedure
 21264  004E5C  64EA               	cpfsgt	fsr0h,c
 21265  004E5E  D003               	bra	u22517
 21266  004E60  6EEA               	movwf	fsr0h,c
 21267  004E62  50EF               	movf	indf0,w,c
 21268  004E64  D003               	bra	u22510
 21269  004E66                     u22517:
 21270  004E66  6EF7               	movwf	tblptrh,c
 21271  004E68  0008               	tblrd		*
 21272  004E6A  50F5               	movf	tablat,w,c
 21273  004E6C                     u22510:
 21274  004E6C  EC3D  F035         	call	_isdigit
 21275  004E70  E2D6               	bc	l17268
 21276  004E72  0100               	movlb	0	; () banked
 21277  004E74  5166               	movf	atoi@sign& (0+255),w,b
 21278  004E76  E00D               	bz	l2246
 21279                           
 21280                           ; BSR set to: 0
 21281  004E78  C067  F064         	movff	atoi@a,??_atoi
 21282  004E7C  C068  F065         	movff	atoi@a+1,??_atoi+1
 21283  004E80  1F64               	comf	??_atoi& (0+255),f,b
 21284  004E82  1F65               	comf	(??_atoi+1)& (0+255),f,b
 21285  004E84  4B64               	infsnz	??_atoi& (0+255),f,b
 21286  004E86  2B65               	incf	(??_atoi+1)& (0+255),f,b
 21287  004E88  C064  F062         	movff	??_atoi,?_atoi
 21288  004E8C  C065  F063         	movff	??_atoi+1,?_atoi+1
 21289  004E90  D004               	goto	l2247
 21290  004E92                     l2246:
 21291                           
 21292                           ; BSR set to: 0
 21293  004E92  C067  F062         	movff	atoi@a,?_atoi
 21294  004E96  C068  F063         	movff	atoi@a+1,?_atoi+1
 21295  004E9A                     l2247:
 21296                           
 21297                           ; BSR set to: 0
 21298  004E9A  0012               	return	
 21299  004E9C                     __end_of_atoi:
 21300                           	opt stack 0
 21301  004E9C                     PL32:
 21302                           	opt stack 25
 21303  004E9C  5162               	movf	atoi@s& (0+255),w,b
 21304  004E9E  6EF6               	movwf	tblptrl,c
 21305  004EA0  6EE9               	movwf	fsr0l,c
 21306  004EA2  0E05               	movlw	(high __ramtop+-1)
 21307  004EA4  6EEA               	movwf	fsr0h,c
 21308  004EA6  5163               	movf	(atoi@s+1)& (0+255),w,b
 21309  004EA8  0012               	return	
 21310  004EAA                     __end_ofPL32:
 21311                           	opt stack 0
 21312                           tblptru	equ	0xFF8
 21313                           tblptrh	equ	0xFF7
 21314                           tblptrl	equ	0xFF6
 21315                           tablat	equ	0xFF5
 21316                           prodh	equ	0xFF4
 21317                           prodl	equ	0xFF3
 21318                           intcon	equ	0xFF2
 21319                           indf0	equ	0xFEF
 21320                           postinc0	equ	0xFEE
 21321                           fsr0h	equ	0xFEA
 21322                           fsr0l	equ	0xFE9
 21323                           wreg	equ	0xFE8
 21324                           indf1	equ	0xFE7
 21325                           postinc1	equ	0xFE6
 21326                           postdec1	equ	0xFE5
 21327                           fsr1h	equ	0xFE2
 21328                           fsr1l	equ	0xFE1
 21329                           indf2	equ	0xFDF
 21330                           postinc2	equ	0xFDE
 21331                           postdec2	equ	0xFDD
 21332                           plusw2	equ	0xFDB
 21333                           fsr2h	equ	0xFDA
 21334                           fsr2l	equ	0xFD9
 21335                           status	equ	0xFD8
 21336                           
 21337 ;; *************** function _strtok *****************
 21338 ;; Defined at:
 21339 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strtok.c"
 21340 ;; Parameters:    Size  Location     Type
 21341 ;;  s1              2    4[BANK0 ] PTR unsigned char 
 21342 ;;		 -> NULL(0), cmdbuf(80), 
 21343 ;;  s2              2    6[BANK0 ] PTR const unsigned char 
 21344 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21345 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21346 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21347 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21348 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21349 ;;		 -> STR_32(2), STR_31(2), STR_30(2), 
 21350 ;; Auto vars:     Size  Location     Type
 21351 ;;		None
 21352 ;; Return value:  Size  Location     Type
 21353 ;;                  2    4[BANK0 ] PTR unsigned char 
 21354 ;; Registers used:
 21355 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21356 ;; Tracked objects:
 21357 ;;		On entry : F/0
 21358 ;;		On exit  : F/0
 21359 ;;		Unchanged: 0/0
 21360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21361 ;;      Params:         0       4       0       0       0       0       0
 21362 ;;      Locals:         0       0       0       0       0       0       0
 21363 ;;      Temps:          0       0       0       0       0       0       0
 21364 ;;      Totals:         0       4       0       0       0       0       0
 21365 ;;Total ram usage:        4 bytes
 21366 ;; Hardware stack levels used:    1
 21367 ;; Hardware stack levels required when called:    5
 21368 ;; This function calls:
 21369 ;;		_strspn
 21370 ;;		_strcspn
 21371 ;; This function is called by:
 21372 ;;		_doModeVerbose
 21373 ;; This function uses a non-reentrant model
 21374 ;;
 21375                           
 21376                           	psect	text43
 21377  005DDE                     __ptext43:
 21378                           	opt stack 0
 21379  005DDE                     _strtok:
 21380                           	opt stack 24
 21381                           
 21382                           ; BSR set to: 0
 21383                           
 21384                           ; BSR set to: 0
 21385                           ;incstack = 0
 21386                           ;incstack = 0
 21387  005DDE  5165               	movf	(strtok@s1+1)& (0+255),w,b
 21388  005DE0  1164               	iorwf	strtok@s1& (0+255),w,b
 21389  005DE2  E104               	bnz	l17234
 21390                           
 21391                           ; BSR set to: 0
 21392  005DE4  C02C  F064         	movff	strtok@sp,strtok@s1
 21393  005DE8  C02D  F065         	movff	strtok@sp+1,strtok@s1+1
 21394  005DEC                     l17234:
 21395                           
 21396                           ; BSR set to: 0
 21397  005DEC  5165               	movf	(strtok@s1+1)& (0+255),w,b
 21398  005DEE  1164               	iorwf	strtok@s1& (0+255),w,b
 21399  005DF0  E017               	bz	L42
 21400                           
 21401                           ; BSR set to: 0
 21402                           
 21403                           ; BSR set to: 0
 21404  005DF2  C064  F060         	movff	strtok@s1,?_strspn
 21405  005DF6  C065  F061         	movff	strtok@s1+1,?_strspn+1
 21406  005DFA  C066  F062         	movff	strtok@s2,?_strspn+2
 21407  005DFE  C067  F063         	movff	strtok@s2+1,?_strspn+3
 21408  005E02  EC6A  F033         	call	_strspn	;wreg free
 21409  005E06  0100               	movlb	0	; () banked
 21410  005E08  5160               	movf	?_strspn& (0+255),w,b
 21411  005E0A  2764               	addwf	strtok@s1& (0+255),f,b
 21412  005E0C  5161               	movf	(?_strspn+1)& (0+255),w,b
 21413  005E0E  2365               	addwfc	(strtok@s1+1)& (0+255),f,b
 21414                           
 21415                           ; BSR set to: 0
 21416  005E10  C064  FFD9         	movff	strtok@s1,fsr2l
 21417  005E14  C065  FFDA         	movff	strtok@s1+1,fsr2h
 21418  005E18  50DF               	movf	indf2,w,c
 21419  005E1A  E105               	bnz	l17244
 21420                           
 21421                           ; BSR set to: 0
 21422  005E1C  6A2C               	clrf	strtok@sp,c
 21423  005E1E  6A2D               	clrf	strtok@sp+1,c
 21424  005E20                     L42:
 21425  005E20  6B64               	clrf	?_strtok& (0+255),b
 21426  005E22  6B65               	clrf	(?_strtok+1)& (0+255),b
 21427  005E24  D026               	goto	l2739
 21428  005E26                     l17244:
 21429                           
 21430                           ; BSR set to: 0
 21431  005E26  C064  F060         	movff	strtok@s1,?_strcspn
 21432  005E2A  C065  F061         	movff	strtok@s1+1,?_strcspn+1
 21433  005E2E  C066  F062         	movff	strtok@s2,?_strcspn+2
 21434  005E32  C067  F063         	movff	strtok@s2+1,?_strcspn+3
 21435  005E36  EC47  F033         	call	_strcspn	;wreg free
 21436  005E3A  0100               	movlb	0	; () banked
 21437  005E3C  5160               	movf	?_strcspn& (0+255),w,b
 21438  005E3E  2564               	addwf	strtok@s1& (0+255),w,b
 21439  005E40  6E2C               	movwf	strtok@sp,c
 21440  005E42  5161               	movf	(?_strcspn+1)& (0+255),w,b
 21441  005E44  2165               	addwfc	(strtok@s1+1)& (0+255),w,b
 21442  005E46  6E2D               	movwf	strtok@sp+1,c
 21443                           
 21444                           ; BSR set to: 0
 21445  005E48  C02C  FFD9         	movff	strtok@sp,fsr2l
 21446  005E4C  C02D  FFDA         	movff	strtok@sp+1,fsr2h
 21447  005E50  50DF               	movf	indf2,w,c
 21448  005E52  E009               	bz	l2741
 21449                           
 21450                           ; BSR set to: 0
 21451  005E54  C02C  FFD9         	movff	strtok@sp,fsr2l
 21452  005E58  C02D  FFDA         	movff	strtok@sp+1,fsr2h
 21453  005E5C  0E00               	movlw	0
 21454  005E5E  6EDF               	movwf	indf2,c
 21455                           
 21456                           ; BSR set to: 0
 21457  005E60  4A2C               	infsnz	strtok@sp,f,c
 21458  005E62  2A2D               	incf	strtok@sp+1,f,c
 21459  005E64  D002               	goto	l2742
 21460  005E66                     l2741:
 21461                           
 21462                           ; BSR set to: 0
 21463  005E66  6A2C               	clrf	strtok@sp,c
 21464  005E68  6A2D               	clrf	strtok@sp+1,c
 21465  005E6A                     l2742:
 21466                           
 21467                           ; BSR set to: 0
 21468  005E6A  C064  F064         	movff	strtok@s1,?_strtok
 21469  005E6E  C065  F065         	movff	strtok@s1+1,?_strtok+1
 21470  005E72                     l2739:
 21471                           
 21472                           ; BSR set to: 0
 21473  005E72  0012               	return	
 21474  005E74                     __end_of_strtok:
 21475                           	opt stack 0
 21476                           tblptru	equ	0xFF8
 21477                           tblptrh	equ	0xFF7
 21478                           tblptrl	equ	0xFF6
 21479                           tablat	equ	0xFF5
 21480                           prodh	equ	0xFF4
 21481                           prodl	equ	0xFF3
 21482                           intcon	equ	0xFF2
 21483                           indf0	equ	0xFEF
 21484                           postinc0	equ	0xFEE
 21485                           fsr0h	equ	0xFEA
 21486                           fsr0l	equ	0xFE9
 21487                           wreg	equ	0xFE8
 21488                           indf1	equ	0xFE7
 21489                           postinc1	equ	0xFE6
 21490                           postdec1	equ	0xFE5
 21491                           fsr1h	equ	0xFE2
 21492                           fsr1l	equ	0xFE1
 21493                           indf2	equ	0xFDF
 21494                           postinc2	equ	0xFDE
 21495                           postdec2	equ	0xFDD
 21496                           plusw2	equ	0xFDB
 21497                           fsr2h	equ	0xFDA
 21498                           fsr2l	equ	0xFD9
 21499                           status	equ	0xFD8
 21500                           
 21501 ;; *************** function _strcspn *****************
 21502 ;; Defined at:
 21503 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcspn.c"
 21504 ;; Parameters:    Size  Location     Type
 21505 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 21506 ;;		 -> NULL(0), cmdbuf(80), 
 21507 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 21508 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21509 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21510 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21511 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21512 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21513 ;;		 -> STR_32(2), STR_31(2), STR_30(2), 
 21514 ;; Auto vars:     Size  Location     Type
 21515 ;;  i               2   36[COMRAM] unsigned int 
 21516 ;; Return value:  Size  Location     Type
 21517 ;;                  2    0[BANK0 ] unsigned int 
 21518 ;; Registers used:
 21519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21520 ;; Tracked objects:
 21521 ;;		On entry : F/0
 21522 ;;		On exit  : 0/0
 21523 ;;		Unchanged: 0/0
 21524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21525 ;;      Params:         0       4       0       0       0       0       0
 21526 ;;      Locals:         2       0       0       0       0       0       0
 21527 ;;      Temps:          0       0       0       0       0       0       0
 21528 ;;      Totals:         2       4       0       0       0       0       0
 21529 ;;Total ram usage:        6 bytes
 21530 ;; Hardware stack levels used:    1
 21531 ;; Hardware stack levels required when called:    4
 21532 ;; This function calls:
 21533 ;;		_strchr
 21534 ;; This function is called by:
 21535 ;;		_strtok
 21536 ;; This function uses a non-reentrant model
 21537 ;;
 21538                           
 21539                           	psect	text44
 21540  00668E                     __ptext44:
 21541                           	opt stack 0
 21542  00668E                     _strcspn:
 21543                           	opt stack 24
 21544                           
 21545                           ; BSR set to: 0
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;incstack = 0
 21549                           ;incstack = 0
 21550  00668E  6A25               	clrf	strcspn@i,c
 21551  006690  6A26               	clrf	strcspn@i+1,c
 21552  006692  D005               	goto	l19022
 21553  006694                     l19020:
 21554  006694  0100               	movlb	0	; () banked
 21555  006696  4B60               	infsnz	strcspn@s1& (0+255),f,b
 21556  006698  2B61               	incf	(strcspn@s1+1)& (0+255),f,b
 21557  00669A  4A25               	infsnz	strcspn@i,f,c
 21558  00669C  2A26               	incf	strcspn@i+1,f,c
 21559  00669E                     l19022:
 21560                           
 21561                           ; BSR set to: 0
 21562  00669E  C060  FFD9         	movff	strcspn@s1,fsr2l
 21563  0066A2  C061  FFDA         	movff	strcspn@s1+1,fsr2h
 21564  0066A6  50DF               	movf	indf2,w,c
 21565  0066A8  E010               	bz	l2766
 21566                           
 21567                           ; BSR set to: 0
 21568  0066AA  C062  F01F         	movff	strcspn@s2,?_strchr
 21569  0066AE  C063  F020         	movff	strcspn@s2+1,?_strchr+1
 21570  0066B2  C060  FFD9         	movff	strcspn@s1,fsr2l
 21571  0066B6  C061  FFDA         	movff	strcspn@s1+1,fsr2h
 21572  0066BA  50DF               	movf	indf2,w,c
 21573  0066BC  6E21               	movwf	?_strchr+2,c
 21574  0066BE  6A22               	clrf	?_strchr+3,c
 21575  0066C0  EC4E  F032         	call	_strchr	;wreg free
 21576  0066C4  5020               	movf	?_strchr+1,w,c
 21577  0066C6  101F               	iorwf	?_strchr,w,c
 21578  0066C8  E0E5               	bz	l19020
 21579  0066CA                     l2766:
 21580  0066CA  C025  F060         	movff	strcspn@i,?_strcspn
 21581  0066CE  C026  F061         	movff	strcspn@i+1,?_strcspn+1
 21582  0066D2  0012               	return	
 21583  0066D4                     __end_of_strcspn:
 21584                           	opt stack 0
 21585                           tblptru	equ	0xFF8
 21586                           tblptrh	equ	0xFF7
 21587                           tblptrl	equ	0xFF6
 21588                           tablat	equ	0xFF5
 21589                           prodh	equ	0xFF4
 21590                           prodl	equ	0xFF3
 21591                           intcon	equ	0xFF2
 21592                           indf0	equ	0xFEF
 21593                           postinc0	equ	0xFEE
 21594                           fsr0h	equ	0xFEA
 21595                           fsr0l	equ	0xFE9
 21596                           wreg	equ	0xFE8
 21597                           indf1	equ	0xFE7
 21598                           postinc1	equ	0xFE6
 21599                           postdec1	equ	0xFE5
 21600                           fsr1h	equ	0xFE2
 21601                           fsr1l	equ	0xFE1
 21602                           indf2	equ	0xFDF
 21603                           postinc2	equ	0xFDE
 21604                           postdec2	equ	0xFDD
 21605                           plusw2	equ	0xFDB
 21606                           fsr2h	equ	0xFDA
 21607                           fsr2l	equ	0xFD9
 21608                           status	equ	0xFD8
 21609                           
 21610 ;; *************** function _strspn *****************
 21611 ;; Defined at:
 21612 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strspn.c"
 21613 ;; Parameters:    Size  Location     Type
 21614 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 21615 ;;		 -> NULL(0), cmdbuf(80), 
 21616 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 21617 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21618 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21619 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21620 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21621 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21622 ;;		 -> STR_32(2), STR_31(2), STR_30(2), 
 21623 ;; Auto vars:     Size  Location     Type
 21624 ;;  i               2   36[COMRAM] unsigned int 
 21625 ;; Return value:  Size  Location     Type
 21626 ;;                  2    0[BANK0 ] unsigned int 
 21627 ;; Registers used:
 21628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21629 ;; Tracked objects:
 21630 ;;		On entry : F/0
 21631 ;;		On exit  : 0/0
 21632 ;;		Unchanged: 0/0
 21633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21634 ;;      Params:         0       4       0       0       0       0       0
 21635 ;;      Locals:         2       0       0       0       0       0       0
 21636 ;;      Temps:          0       0       0       0       0       0       0
 21637 ;;      Totals:         2       4       0       0       0       0       0
 21638 ;;Total ram usage:        6 bytes
 21639 ;; Hardware stack levels used:    1
 21640 ;; Hardware stack levels required when called:    4
 21641 ;; This function calls:
 21642 ;;		_strchr
 21643 ;; This function is called by:
 21644 ;;		_strtok
 21645 ;; This function uses a non-reentrant model
 21646 ;;
 21647                           
 21648                           	psect	text45
 21649  0066D4                     __ptext45:
 21650                           	opt stack 0
 21651  0066D4                     _strspn:
 21652                           	opt stack 24
 21653                           
 21654                           ; BSR set to: 0
 21655                           
 21656                           ;incstack = 0
 21657                           ;incstack = 0
 21658  0066D4  6A25               	clrf	strspn@i,c
 21659  0066D6  6A26               	clrf	strspn@i+1,c
 21660  0066D8  D005               	goto	l19014
 21661  0066DA                     l19012:
 21662  0066DA  0100               	movlb	0	; () banked
 21663  0066DC  4B60               	infsnz	strspn@s1& (0+255),f,b
 21664  0066DE  2B61               	incf	(strspn@s1+1)& (0+255),f,b
 21665  0066E0  4A25               	infsnz	strspn@i,f,c
 21666  0066E2  2A26               	incf	strspn@i+1,f,c
 21667  0066E4                     l19014:
 21668                           
 21669                           ; BSR set to: 0
 21670  0066E4  C060  FFD9         	movff	strspn@s1,fsr2l
 21671  0066E8  C061  FFDA         	movff	strspn@s1+1,fsr2h
 21672  0066EC  50DF               	movf	indf2,w,c
 21673  0066EE  E010               	bz	l2785
 21674                           
 21675                           ; BSR set to: 0
 21676  0066F0  C062  F01F         	movff	strspn@s2,?_strchr
 21677  0066F4  C063  F020         	movff	strspn@s2+1,?_strchr+1
 21678  0066F8  C060  FFD9         	movff	strspn@s1,fsr2l
 21679  0066FC  C061  FFDA         	movff	strspn@s1+1,fsr2h
 21680  006700  50DF               	movf	indf2,w,c
 21681  006702  6E21               	movwf	?_strchr+2,c
 21682  006704  6A22               	clrf	?_strchr+3,c
 21683  006706  EC4E  F032         	call	_strchr	;wreg free
 21684  00670A  5020               	movf	?_strchr+1,w,c
 21685  00670C  101F               	iorwf	?_strchr,w,c
 21686  00670E  E1E5               	bnz	l19012
 21687  006710                     l2785:
 21688  006710  C025  F060         	movff	strspn@i,?_strspn
 21689  006714  C026  F061         	movff	strspn@i+1,?_strspn+1
 21690  006718  0012               	return	
 21691  00671A                     __end_of_strspn:
 21692                           	opt stack 0
 21693                           tblptru	equ	0xFF8
 21694                           tblptrh	equ	0xFF7
 21695                           tblptrl	equ	0xFF6
 21696                           tablat	equ	0xFF5
 21697                           prodh	equ	0xFF4
 21698                           prodl	equ	0xFF3
 21699                           intcon	equ	0xFF2
 21700                           indf0	equ	0xFEF
 21701                           postinc0	equ	0xFEE
 21702                           fsr0h	equ	0xFEA
 21703                           fsr0l	equ	0xFE9
 21704                           wreg	equ	0xFE8
 21705                           indf1	equ	0xFE7
 21706                           postinc1	equ	0xFE6
 21707                           postdec1	equ	0xFE5
 21708                           fsr1h	equ	0xFE2
 21709                           fsr1l	equ	0xFE1
 21710                           indf2	equ	0xFDF
 21711                           postinc2	equ	0xFDE
 21712                           postdec2	equ	0xFDD
 21713                           plusw2	equ	0xFDB
 21714                           fsr2h	equ	0xFDA
 21715                           fsr2l	equ	0xFD9
 21716                           status	equ	0xFD8
 21717                           
 21718 ;; *************** function _strchr *****************
 21719 ;; Defined at:
 21720 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strchr.c"
 21721 ;; Parameters:    Size  Location     Type
 21722 ;;  ptr             2   30[COMRAM] PTR const unsigned char 
 21723 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21724 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21725 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21726 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21727 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21728 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 21729 ;;		 -> cmdbuf(80), 
 21730 ;;  chr             2   32[COMRAM] int 
 21731 ;; Auto vars:     Size  Location     Type
 21732 ;;		None
 21733 ;; Return value:  Size  Location     Type
 21734 ;;                  2   30[COMRAM] PTR unsigned char 
 21735 ;; Registers used:
 21736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21737 ;; Tracked objects:
 21738 ;;		On entry : D/2
 21739 ;;		On exit  : 0/0
 21740 ;;		Unchanged: 0/0
 21741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21742 ;;      Params:         4       0       0       0       0       0       0
 21743 ;;      Locals:         0       0       0       0       0       0       0
 21744 ;;      Temps:          2       0       0       0       0       0       0
 21745 ;;      Totals:         6       0       0       0       0       0       0
 21746 ;;Total ram usage:        6 bytes
 21747 ;; Hardware stack levels used:    1
 21748 ;; Hardware stack levels required when called:    3
 21749 ;; This function calls:
 21750 ;;		Nothing
 21751 ;; This function is called by:
 21752 ;;		_doModeVerbose
 21753 ;;		_strcspn
 21754 ;;		_strspn
 21755 ;; This function uses a non-reentrant model
 21756 ;;
 21757                           
 21758                           	psect	text46
 21759  00649C                     __ptext46:
 21760                           	opt stack 0
 21761  00649C                     _strchr:
 21762                           	opt stack 26
 21763  00649C                     l2687:
 21764  00649C  501F               	movf	strchr@ptr,w,c
 21765  00649E  6EF6               	movwf	tblptrl,c
 21766  0064A0  6EE9               	movwf	fsr0l,c
 21767  0064A2  0E05               	movlw	(high __ramtop+-1)
 21768  0064A4  6EEA               	movwf	fsr0h,c
 21769  0064A6  5020               	movf	strchr@ptr+1,w,c
 21770  0064A8  64EA               	cpfsgt	fsr0h,c
 21771  0064AA  D003               	bra	u22797
 21772  0064AC  6EEA               	movwf	fsr0h,c
 21773  0064AE  50EF               	movf	indf0,w,c
 21774  0064B0  D003               	bra	u22790
 21775  0064B2                     u22797:
 21776  0064B2  6EF7               	movwf	tblptrh,c
 21777  0064B4  0008               	tblrd		*
 21778  0064B6  50F5               	movf	tablat,w,c
 21779  0064B8                     u22790:
 21780  0064B8  1821               	xorwf	strchr@chr,w,c
 21781  0064BA  E105               	bnz	l17532
 21782  0064BC  C01F  F01F         	movff	strchr@ptr,?_strchr
 21783  0064C0  C020  F020         	movff	strchr@ptr+1,?_strchr+1
 21784  0064C4  D018               	goto	l2689
 21785  0064C6                     l17532:
 21786  0064C6  501F               	movf	strchr@ptr,w,c
 21787  0064C8  6E23               	movwf	??_strchr& (0+255),c
 21788  0064CA  5020               	movf	strchr@ptr+1,w,c
 21789  0064CC  6E24               	movwf	(??_strchr+1)& (0+255),c
 21790  0064CE  4A1F               	infsnz	strchr@ptr,f,c
 21791  0064D0  2A20               	incf	strchr@ptr+1,f,c
 21792  0064D2  5023               	movf	??_strchr,w,c
 21793  0064D4  6EF6               	movwf	tblptrl,c
 21794  0064D6  6EE9               	movwf	fsr0l,c
 21795  0064D8  0E05               	movlw	(high __ramtop+-1)
 21796  0064DA  6EEA               	movwf	fsr0h,c
 21797  0064DC  5024               	movf	??_strchr+1,w,c
 21798  0064DE  64EA               	cpfsgt	fsr0h,c
 21799  0064E0  D003               	bra	u22817
 21800  0064E2  6EEA               	movwf	fsr0h,c
 21801  0064E4  50EF               	movf	indf0,w,c
 21802  0064E6  D003               	bra	u22810
 21803  0064E8                     u22817:
 21804  0064E8  6EF7               	movwf	tblptrh,c
 21805  0064EA  0008               	tblrd		*
 21806  0064EC  50F5               	movf	tablat,w,c
 21807  0064EE                     u22810:
 21808  0064EE  0900               	iorlw	0
 21809  0064F0  E1D5               	bnz	l2687
 21810  0064F2  6A1F               	clrf	?_strchr,c
 21811  0064F4  6A20               	clrf	?_strchr+1,c
 21812  0064F6                     l2689:
 21813  0064F6  0012               	return	
 21814  0064F8                     __end_of_strchr:
 21815                           	opt stack 0
 21816                           tblptru	equ	0xFF8
 21817                           tblptrh	equ	0xFF7
 21818                           tblptrl	equ	0xFF6
 21819                           tablat	equ	0xFF5
 21820                           prodh	equ	0xFF4
 21821                           prodl	equ	0xFF3
 21822                           intcon	equ	0xFF2
 21823                           indf0	equ	0xFEF
 21824                           postinc0	equ	0xFEE
 21825                           fsr0h	equ	0xFEA
 21826                           fsr0l	equ	0xFE9
 21827                           wreg	equ	0xFE8
 21828                           indf1	equ	0xFE7
 21829                           postinc1	equ	0xFE6
 21830                           postdec1	equ	0xFE5
 21831                           fsr1h	equ	0xFE2
 21832                           fsr1l	equ	0xFE1
 21833                           indf2	equ	0xFDF
 21834                           postinc2	equ	0xFDE
 21835                           postdec2	equ	0xFDD
 21836                           plusw2	equ	0xFDB
 21837                           fsr2h	equ	0xFDA
 21838                           fsr2l	equ	0xFD9
 21839                           status	equ	0xFD8
 21840                           
 21841 ;; *************** function _stristr *****************
 21842 ;; Defined at:
 21843 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\stristr.c"
 21844 ;; Parameters:    Size  Location     Type
 21845 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21846 ;;		 -> NULL(0), cmdbuf(80), 
 21847 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21848 ;;		 -> STR_169(2), STR_168(9), STR_165(10), STR_162(4), 
 21849 ;;		 -> STR_160(3), STR_159(11), STR_156(4), STR_154(3), 
 21850 ;;		 -> STR_153(6), STR_151(6), STR_149(5), STR_147(8), 
 21851 ;;		 -> STR_146(6), STR_145(9), STR_144(7), STR_143(7), 
 21852 ;;		 -> STR_142(5), STR_141(6), STR_140(9), STR_138(11), 
 21853 ;;		 -> STR_136(8), STR_134(4), STR_133(5), STR_120(5), 
 21854 ;;		 -> STR_118(11), STR_105(7), STR_97(5), STR_81(5), 
 21855 ;;		 -> STR_49(5), STR_47(5), STR_45(5), STR_43(4), 
 21856 ;;		 -> STR_41(5), STR_38(3), STR_29(3), STR_20(7), 
 21857 ;;		 -> STR_18(8), STR_16(7), STR_14(9), STR_12(6), 
 21858 ;;		 -> STR_10(7), STR_8(5), STR_6(5), 
 21859 ;; Auto vars:     Size  Location     Type
 21860 ;;		None
 21861 ;; Return value:  Size  Location     Type
 21862 ;;                  2    6[BANK0 ] PTR unsigned char 
 21863 ;; Registers used:
 21864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21865 ;; Tracked objects:
 21866 ;;		On entry : F/0
 21867 ;;		On exit  : F/0
 21868 ;;		Unchanged: 0/0
 21869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21870 ;;      Params:         0       4       0       0       0       0       0
 21871 ;;      Locals:         0       0       0       0       0       0       0
 21872 ;;      Temps:          0       0       0       0       0       0       0
 21873 ;;      Totals:         0       4       0       0       0       0       0
 21874 ;;Total ram usage:        4 bytes
 21875 ;; Hardware stack levels used:    1
 21876 ;; Hardware stack levels required when called:    5
 21877 ;; This function calls:
 21878 ;;		_strlen
 21879 ;;		_strnicmp
 21880 ;;		_strichr
 21881 ;; This function is called by:
 21882 ;;		_doModeVerbose
 21883 ;; This function uses a non-reentrant model
 21884 ;;
 21885                           
 21886                           	psect	text47
 21887  005FF6                     __ptext47:
 21888                           	opt stack 0
 21889  005FF6                     _stristr:
 21890                           	opt stack 24
 21891                           
 21892                           ; BSR set to: 0
 21893                           
 21894                           ;incstack = 0
 21895                           ;incstack = 0
 21896  005FF6  D02F               	goto	l17226
 21897  005FF8                     l17220:
 21898                           
 21899                           ; BSR set to: 0
 21900  005FF8  C066  F060         	movff	stristr@s1,?_strnicmp
 21901  005FFC  C067  F061         	movff	stristr@s1+1,?_strnicmp+1
 21902  006000  C068  F062         	movff	stristr@s2,?_strnicmp+2
 21903  006004  C069  F063         	movff	stristr@s2+1,?_strnicmp+3
 21904  006008  C068  F01F         	movff	stristr@s2,?_strlen
 21905  00600C  C069  F020         	movff	stristr@s2+1,?_strlen+1
 21906  006010  EC2B  F034         	call	_strlen	;wreg free
 21907  006014  C01F  F064         	movff	?_strlen,?_strnicmp+4
 21908  006018  C020  F065         	movff	?_strlen+1,?_strnicmp+5
 21909  00601C  EC59  F031         	call	_strnicmp	;wreg free
 21910  006020  5161               	movf	(?_strnicmp+1)& (0+255),w,b
 21911  006022  1160               	iorwf	?_strnicmp& (0+255),w,b
 21912  006024  E105               	bnz	l17224
 21913                           
 21914                           ; BSR set to: 0
 21915  006026  C066  F066         	movff	stristr@s1,?_stristr
 21916  00602A  C067  F067         	movff	stristr@s1+1,?_stristr+1
 21917  00602E  D01F               	goto	l2708
 21918  006030                     l17224:
 21919                           
 21920                           ; BSR set to: 0
 21921  006030  2966               	incf	stristr@s1& (0+255),w,b
 21922  006032  6E20               	movwf	?_strichr,c
 21923  006034  0E00               	movlw	0
 21924  006036  2167               	addwfc	(stristr@s1+1)& (0+255),w,b
 21925  006038  6E21               	movwf	?_strichr+1,c
 21926  00603A  C068  FFF6         	movff	stristr@s2,tblptrl
 21927  00603E  C069  FFF7         	movff	stristr@s2+1,tblptrh
 21928  006042  0008               	tblrd		*
 21929  006044  50F5               	movf	tablat,w,c
 21930  006046  6E22               	movwf	?_strichr+2,c
 21931  006048  6A23               	clrf	?_strichr+3,c
 21932  00604A  ECED  F033         	call	_strichr	;wreg free
 21933  00604E  C020  F066         	movff	?_strichr,stristr@s1
 21934  006052  C021  F067         	movff	?_strichr+1,stristr@s1+1
 21935  006056                     l17226:
 21936  006056  0100               	movlb	0	; () banked
 21937  006058  5167               	movf	(stristr@s1+1)& (0+255),w,b
 21938  00605A  1166               	iorwf	stristr@s1& (0+255),w,b
 21939  00605C  E006               	bz	l2711
 21940                           
 21941                           ; BSR set to: 0
 21942  00605E  C066  FFD9         	movff	stristr@s1,fsr2l
 21943  006062  C067  FFDA         	movff	stristr@s1+1,fsr2h
 21944  006066  50DF               	movf	indf2,w,c
 21945  006068  E1C7               	bnz	l17220
 21946  00606A                     l2711:
 21947                           
 21948                           ; BSR set to: 0
 21949  00606A  6B66               	clrf	?_stristr& (0+255),b
 21950  00606C  6B67               	clrf	(?_stristr+1)& (0+255),b
 21951  00606E                     l2708:
 21952                           
 21953                           ; BSR set to: 0
 21954  00606E  0012               	return	
 21955  006070                     __end_of_stristr:
 21956                           	opt stack 0
 21957                           tblptru	equ	0xFF8
 21958                           tblptrh	equ	0xFF7
 21959                           tblptrl	equ	0xFF6
 21960                           tablat	equ	0xFF5
 21961                           prodh	equ	0xFF4
 21962                           prodl	equ	0xFF3
 21963                           intcon	equ	0xFF2
 21964                           indf0	equ	0xFEF
 21965                           postinc0	equ	0xFEE
 21966                           fsr0h	equ	0xFEA
 21967                           fsr0l	equ	0xFE9
 21968                           wreg	equ	0xFE8
 21969                           indf1	equ	0xFE7
 21970                           postinc1	equ	0xFE6
 21971                           postdec1	equ	0xFE5
 21972                           fsr1h	equ	0xFE2
 21973                           fsr1l	equ	0xFE1
 21974                           indf2	equ	0xFDF
 21975                           postinc2	equ	0xFDE
 21976                           postdec2	equ	0xFDD
 21977                           plusw2	equ	0xFDB
 21978                           fsr2h	equ	0xFDA
 21979                           fsr2l	equ	0xFD9
 21980                           status	equ	0xFD8
 21981                           
 21982 ;; *************** function _strichr *****************
 21983 ;; Defined at:
 21984 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strichr.c"
 21985 ;; Parameters:    Size  Location     Type
 21986 ;;  ptr             2   31[COMRAM] PTR const unsigned char 
 21987 ;;		 -> NULL(0), cmdbuf(80), 
 21988 ;;  chr             2   33[COMRAM] int 
 21989 ;; Auto vars:     Size  Location     Type
 21990 ;;		None
 21991 ;; Return value:  Size  Location     Type
 21992 ;;                  2   31[COMRAM] PTR unsigned char 
 21993 ;; Registers used:
 21994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21995 ;; Tracked objects:
 21996 ;;		On entry : F/0
 21997 ;;		On exit  : 0/0
 21998 ;;		Unchanged: 0/0
 21999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22000 ;;      Params:         4       0       0       0       0       0       0
 22001 ;;      Locals:         0       0       0       0       0       0       0
 22002 ;;      Temps:          0       0       0       0       0       0       0
 22003 ;;      Totals:         4       0       0       0       0       0       0
 22004 ;;Total ram usage:        4 bytes
 22005 ;; Hardware stack levels used:    1
 22006 ;; Hardware stack levels required when called:    4
 22007 ;; This function calls:
 22008 ;;		_toupper
 22009 ;; This function is called by:
 22010 ;;		_stristr
 22011 ;; This function uses a non-reentrant model
 22012 ;;
 22013                           
 22014                           	psect	text48
 22015  0067DA                     __ptext48:
 22016                           	opt stack 0
 22017  0067DA                     _strichr:
 22018                           	opt stack 24
 22019                           
 22020                           ; BSR set to: 0
 22021                           
 22022                           ; BSR set to: 0
 22023                           ;incstack = 0
 22024                           ;incstack = 0
 22025  0067DA  5022               	movf	strichr@chr,w,c
 22026  0067DC  EC76  F035         	call	_toupper
 22027  0067E0  6E22               	movwf	strichr@chr,c
 22028  0067E2  6A23               	clrf	strichr@chr+1,c
 22029  0067E4  D010               	goto	l18998
 22030  0067E6                     l18992:
 22031  0067E6  C020  FFD9         	movff	strichr@ptr,fsr2l
 22032  0067EA  C021  FFDA         	movff	strichr@ptr+1,fsr2h
 22033  0067EE  50DF               	movf	indf2,w,c
 22034  0067F0  EC76  F035         	call	_toupper
 22035  0067F4  1822               	xorwf	strichr@chr,w,c
 22036  0067F6  E105               	bnz	l18996
 22037  0067F8  C020  F020         	movff	strichr@ptr,?_strichr
 22038  0067FC  C021  F021         	movff	strichr@ptr+1,?_strichr+1
 22039  006800  D00A               	goto	l2775
 22040  006802                     l18996:
 22041  006802  4A20               	infsnz	strichr@ptr,f,c
 22042  006804  2A21               	incf	strichr@ptr+1,f,c
 22043  006806                     l18998:
 22044  006806  C020  FFD9         	movff	strichr@ptr,fsr2l
 22045  00680A  C021  FFDA         	movff	strichr@ptr+1,fsr2h
 22046  00680E  50DF               	movf	indf2,w,c
 22047  006810  E1EA               	bnz	l18992
 22048  006812  6A20               	clrf	?_strichr,c
 22049  006814  6A21               	clrf	?_strichr+1,c
 22050  006816                     l2775:
 22051  006816  0012               	return	
 22052  006818                     __end_of_strichr:
 22053                           	opt stack 0
 22054                           tblptru	equ	0xFF8
 22055                           tblptrh	equ	0xFF7
 22056                           tblptrl	equ	0xFF6
 22057                           tablat	equ	0xFF5
 22058                           prodh	equ	0xFF4
 22059                           prodl	equ	0xFF3
 22060                           intcon	equ	0xFF2
 22061                           indf0	equ	0xFEF
 22062                           postinc0	equ	0xFEE
 22063                           fsr0h	equ	0xFEA
 22064                           fsr0l	equ	0xFE9
 22065                           wreg	equ	0xFE8
 22066                           indf1	equ	0xFE7
 22067                           postinc1	equ	0xFE6
 22068                           postdec1	equ	0xFE5
 22069                           fsr1h	equ	0xFE2
 22070                           fsr1l	equ	0xFE1
 22071                           indf2	equ	0xFDF
 22072                           postinc2	equ	0xFDE
 22073                           postdec2	equ	0xFDD
 22074                           plusw2	equ	0xFDB
 22075                           fsr2h	equ	0xFDA
 22076                           fsr2l	equ	0xFD9
 22077                           status	equ	0xFD8
 22078                           
 22079 ;; *************** function _strnicmp *****************
 22080 ;; Defined at:
 22081 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strnicmp.c"
 22082 ;; Parameters:    Size  Location     Type
 22083 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 22084 ;;		 -> NULL(0), cmdbuf(80), 
 22085 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 22086 ;;		 -> STR_169(2), STR_168(9), STR_165(10), STR_162(4), 
 22087 ;;		 -> STR_160(3), STR_159(11), STR_156(4), STR_154(3), 
 22088 ;;		 -> STR_153(6), STR_151(6), STR_149(5), STR_147(8), 
 22089 ;;		 -> STR_146(6), STR_145(9), STR_144(7), STR_143(7), 
 22090 ;;		 -> STR_142(5), STR_141(6), STR_140(9), STR_138(11), 
 22091 ;;		 -> STR_136(8), STR_134(4), STR_133(5), STR_120(5), 
 22092 ;;		 -> STR_118(11), STR_105(7), STR_97(5), STR_81(5), 
 22093 ;;		 -> STR_49(5), STR_47(5), STR_45(5), STR_43(4), 
 22094 ;;		 -> STR_41(5), STR_38(3), STR_29(3), STR_20(7), 
 22095 ;;		 -> STR_18(8), STR_16(7), STR_14(9), STR_12(6), 
 22096 ;;		 -> STR_10(7), STR_8(5), STR_6(5), 
 22097 ;;  len             2    4[BANK0 ] unsigned int 
 22098 ;; Auto vars:     Size  Location     Type
 22099 ;;  r               1   36[COMRAM] char 
 22100 ;; Return value:  Size  Location     Type
 22101 ;;                  2    0[BANK0 ] int 
 22102 ;; Registers used:
 22103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22104 ;; Tracked objects:
 22105 ;;		On entry : 0/0
 22106 ;;		On exit  : F/0
 22107 ;;		Unchanged: 0/0
 22108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22109 ;;      Params:         0       6       0       0       0       0       0
 22110 ;;      Locals:         1       0       0       0       0       0       0
 22111 ;;      Temps:          2       0       0       0       0       0       0
 22112 ;;      Totals:         3       6       0       0       0       0       0
 22113 ;;Total ram usage:        9 bytes
 22114 ;; Hardware stack levels used:    1
 22115 ;; Hardware stack levels required when called:    4
 22116 ;; This function calls:
 22117 ;;		_toupper
 22118 ;; This function is called by:
 22119 ;;		_stristr
 22120 ;; This function uses a non-reentrant model
 22121 ;;
 22122                           
 22123                           	psect	text49
 22124  0062B2                     __ptext49:
 22125                           	opt stack 0
 22126  0062B2                     _strnicmp:
 22127                           	opt stack 24
 22128                           
 22129                           ;incstack = 0
 22130                           ;incstack = 0
 22131  0062B2  D028               	goto	l18988
 22132  0062B4                     l18978:
 22133                           
 22134                           ; BSR set to: 0
 22135  0062B4  C062  FFF6         	movff	strnicmp@s2,tblptrl
 22136  0062B8  C063  FFF7         	movff	strnicmp@s2+1,tblptrh
 22137  0062BC  0008               	tblrd		*
 22138  0062BE  50F5               	movf	tablat,w,c
 22139  0062C0  EC76  F035         	call	_toupper
 22140  0062C4  6E23               	movwf	??_strnicmp& (0+255),c
 22141  0062C6  C060  FFD9         	movff	strnicmp@s1,fsr2l
 22142  0062CA  C061  FFDA         	movff	strnicmp@s1+1,fsr2h
 22143  0062CE  50DF               	movf	indf2,w,c
 22144  0062D0  EC76  F035         	call	_toupper
 22145  0062D4  6E24               	movwf	(??_strnicmp+1)& (0+255),c
 22146  0062D6  5023               	movf	??_strnicmp,w,c
 22147  0062D8  5C24               	subwf	??_strnicmp+1,w,c
 22148  0062DA  6E25               	movwf	strnicmp@r,c
 22149  0062DC  6625               	tstfsz	strnicmp@r& (0+255),c
 22150  0062DE  D006               	goto	l18982
 22151  0062E0  C060  FFD9         	movff	strnicmp@s1,fsr2l
 22152  0062E4  C061  FFDA         	movff	strnicmp@s1+1,fsr2h
 22153  0062E8  50DF               	movf	indf2,w,c
 22154  0062EA  E107               	bnz	l18986
 22155  0062EC                     l18982:
 22156  0062EC  5025               	movf	strnicmp@r,w,c
 22157  0062EE  0100               	movlb	0	; () banked
 22158  0062F0  6F60               	movwf	?_strnicmp& (0+255),b
 22159  0062F2  6B61               	clrf	(?_strnicmp+1)& (0+255),b
 22160  0062F4  BF60               	btfsc	?_strnicmp& (0+255),7,b
 22161  0062F6  0761               	decf	(?_strnicmp+1)& (0+255),f,b
 22162  0062F8  D00F               	goto	l2727
 22163  0062FA                     l18986:
 22164  0062FA  0100               	movlb	0	; () banked
 22165  0062FC  4B60               	infsnz	strnicmp@s1& (0+255),f,b
 22166  0062FE  2B61               	incf	(strnicmp@s1+1)& (0+255),f,b
 22167  006300  4B62               	infsnz	strnicmp@s2& (0+255),f,b
 22168  006302  2B63               	incf	(strnicmp@s2+1)& (0+255),f,b
 22169  006304                     l18988:
 22170  006304  0100               	movlb	0	; () banked
 22171  006306  0764               	decf	strnicmp@len& (0+255),f,b
 22172  006308  A0D8               	btfss	status,0,c
 22173  00630A  0765               	decf	(strnicmp@len+1)& (0+255),f,b
 22174  00630C  2964               	incf	strnicmp@len& (0+255),w,b
 22175  00630E  B4D8               	btfsc	status,2,c
 22176  006310  2965               	incf	(strnicmp@len+1)& (0+255),w,b
 22177  006312  E1D0               	bnz	l18978
 22178                           
 22179                           ; BSR set to: 0
 22180  006314  6B60               	clrf	?_strnicmp& (0+255),b
 22181  006316  6B61               	clrf	(?_strnicmp+1)& (0+255),b
 22182  006318                     l2727:
 22183                           
 22184                           ; BSR set to: 0
 22185  006318  0012               	return	
 22186  00631A                     __end_of_strnicmp:
 22187                           	opt stack 0
 22188                           tblptru	equ	0xFF8
 22189                           tblptrh	equ	0xFF7
 22190                           tblptrl	equ	0xFF6
 22191                           tablat	equ	0xFF5
 22192                           prodh	equ	0xFF4
 22193                           prodl	equ	0xFF3
 22194                           intcon	equ	0xFF2
 22195                           indf0	equ	0xFEF
 22196                           postinc0	equ	0xFEE
 22197                           fsr0h	equ	0xFEA
 22198                           fsr0l	equ	0xFE9
 22199                           wreg	equ	0xFE8
 22200                           indf1	equ	0xFE7
 22201                           postinc1	equ	0xFE6
 22202                           postdec1	equ	0xFE5
 22203                           fsr1h	equ	0xFE2
 22204                           fsr1l	equ	0xFE1
 22205                           indf2	equ	0xFDF
 22206                           postinc2	equ	0xFDE
 22207                           postdec2	equ	0xFDD
 22208                           plusw2	equ	0xFDB
 22209                           fsr2h	equ	0xFDA
 22210                           fsr2l	equ	0xFD9
 22211                           status	equ	0xFD8
 22212                           
 22213 ;; *************** function _toupper *****************
 22214 ;; Defined at:
 22215 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\toupper.c"
 22216 ;; Parameters:    Size  Location     Type
 22217 ;;  c               1    wreg     unsigned char 
 22218 ;; Auto vars:     Size  Location     Type
 22219 ;;  c               1   30[COMRAM] unsigned char 
 22220 ;; Return value:  Size  Location     Type
 22221 ;;                  1    wreg      unsigned char 
 22222 ;; Registers used:
 22223 ;;		wreg, status,2, status,0
 22224 ;; Tracked objects:
 22225 ;;		On entry : 0/0
 22226 ;;		On exit  : 0/0
 22227 ;;		Unchanged: 0/0
 22228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22229 ;;      Params:         0       0       0       0       0       0       0
 22230 ;;      Locals:         1       0       0       0       0       0       0
 22231 ;;      Temps:          0       0       0       0       0       0       0
 22232 ;;      Totals:         1       0       0       0       0       0       0
 22233 ;;Total ram usage:        1 bytes
 22234 ;; Hardware stack levels used:    1
 22235 ;; Hardware stack levels required when called:    3
 22236 ;; This function calls:
 22237 ;;		Nothing
 22238 ;; This function is called by:
 22239 ;;		_strnicmp
 22240 ;;		_strichr
 22241 ;; This function uses a non-reentrant model
 22242 ;;
 22243                           
 22244                           	psect	text50
 22245  006AEC                     __ptext50:
 22246                           	opt stack 0
 22247  006AEC                     _toupper:
 22248                           	opt stack 24
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;incstack = 0
 22252                           ;incstack = 0
 22253                           ;toupper@c stored from wreg
 22254  006AEC  CFE8 F01F          	movff	wreg,toupper@c
 22255  006AF0  0E7B               	movlw	123
 22256  006AF2  601F               	cpfslt	toupper@c,c
 22257  006AF4  D004               	goto	l19006
 22258  006AF6  0E60               	movlw	96
 22259  006AF8  641F               	cpfsgt	toupper@c,c
 22260  006AFA  D001               	goto	l19006
 22261  006AFC  9A1F               	bcf	toupper@c,5,c
 22262  006AFE                     l19006:
 22263  006AFE  501F               	movf	toupper@c,w,c
 22264  006B00  0012               	return	
 22265  006B02                     __end_of_toupper:
 22266                           	opt stack 0
 22267                           tblptru	equ	0xFF8
 22268                           tblptrh	equ	0xFF7
 22269                           tblptrl	equ	0xFF6
 22270                           tablat	equ	0xFF5
 22271                           prodh	equ	0xFF4
 22272                           prodl	equ	0xFF3
 22273                           intcon	equ	0xFF2
 22274                           indf0	equ	0xFEF
 22275                           postinc0	equ	0xFEE
 22276                           fsr0h	equ	0xFEA
 22277                           fsr0l	equ	0xFE9
 22278                           wreg	equ	0xFE8
 22279                           indf1	equ	0xFE7
 22280                           postinc1	equ	0xFE6
 22281                           postdec1	equ	0xFE5
 22282                           fsr1h	equ	0xFE2
 22283                           fsr1l	equ	0xFE1
 22284                           indf2	equ	0xFDF
 22285                           postinc2	equ	0xFDE
 22286                           postdec2	equ	0xFDD
 22287                           plusw2	equ	0xFDB
 22288                           fsr2h	equ	0xFDA
 22289                           fsr2l	equ	0xFD9
 22290                           status	equ	0xFD8
 22291                           
 22292 ;; *************** function _strlen *****************
 22293 ;; Defined at:
 22294 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strlen.c"
 22295 ;; Parameters:    Size  Location     Type
 22296 ;;  s               2   30[COMRAM] PTR const unsigned char 
 22297 ;;		 -> printGUID@buf(3), STR_169(2), STR_168(9), STR_165(10), 
 22298 ;;		 -> STR_162(4), STR_160(3), STR_159(11), STR_156(4), 
 22299 ;;		 -> STR_154(3), STR_153(6), STR_151(6), STR_149(5), 
 22300 ;;		 -> STR_147(8), STR_146(6), STR_145(9), STR_144(7), 
 22301 ;;		 -> STR_143(7), STR_142(5), STR_141(6), STR_140(9), 
 22302 ;;		 -> STR_138(11), STR_136(8), STR_134(4), STR_133(5), 
 22303 ;;		 -> STR_120(5), STR_118(11), STR_105(7), STR_97(5), 
 22304 ;;		 -> STR_81(5), wrkbuf(80), STR_49(5), STR_47(5), 
 22305 ;;		 -> STR_45(5), STR_43(4), STR_41(5), STR_38(3), 
 22306 ;;		 -> STR_29(3), STR_20(7), STR_18(8), STR_16(7), 
 22307 ;;		 -> STR_14(9), STR_12(6), STR_10(7), STR_8(5), 
 22308 ;;		 -> STR_6(5), cmdbuf(80), 
 22309 ;; Auto vars:     Size  Location     Type
 22310 ;;  cp              2   32[COMRAM] PTR const unsigned char 
 22311 ;;		 -> printGUID@buf(3), STR_169(2), STR_168(9), STR_165(10), 
 22312 ;;		 -> STR_162(4), STR_160(3), STR_159(11), STR_156(4), 
 22313 ;;		 -> STR_154(3), STR_153(6), STR_151(6), STR_149(5), 
 22314 ;;		 -> STR_147(8), STR_146(6), STR_145(9), STR_144(7), 
 22315 ;;		 -> STR_143(7), STR_142(5), STR_141(6), STR_140(9), 
 22316 ;;		 -> STR_138(11), STR_136(8), STR_134(4), STR_133(5), 
 22317 ;;		 -> STR_120(5), STR_118(11), STR_105(7), STR_97(5), 
 22318 ;;		 -> STR_81(5), wrkbuf(80), STR_49(5), STR_47(5), 
 22319 ;;		 -> STR_45(5), STR_43(4), STR_41(5), STR_38(3), 
 22320 ;;		 -> STR_29(3), STR_20(7), STR_18(8), STR_16(7), 
 22321 ;;		 -> STR_14(9), STR_12(6), STR_10(7), STR_8(5), 
 22322 ;;		 -> STR_6(5), cmdbuf(80), 
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  2   30[COMRAM] unsigned int 
 22325 ;; Registers used:
 22326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22327 ;; Tracked objects:
 22328 ;;		On entry : E/1
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22332 ;;      Params:         2       0       0       0       0       0       0
 22333 ;;      Locals:         2       0       0       0       0       0       0
 22334 ;;      Temps:          0       0       0       0       0       0       0
 22335 ;;      Totals:         4       0       0       0       0       0       0
 22336 ;;Total ram usage:        4 bytes
 22337 ;; Hardware stack levels used:    1
 22338 ;; Hardware stack levels required when called:    3
 22339 ;; This function calls:
 22340 ;;		Nothing
 22341 ;; This function is called by:
 22342 ;;		_doModeSLCAN
 22343 ;;		_receiveSendEventSLCAN
 22344 ;;		_printGUID
 22345 ;;		_hexStringToBytes
 22346 ;;		_stristr
 22347 ;; This function uses a non-reentrant model
 22348 ;;
 22349                           
 22350                           	psect	text51
 22351  006856                     __ptext51:
 22352                           	opt stack 0
 22353  006856                     _strlen:
 22354                           	opt stack 25
 22355                           
 22356                           ;incstack = 0
 22357                           ;incstack = 0
 22358  006856  C01F  F021         	movff	strlen@s,strlen@cp
 22359  00685A  C020  F022         	movff	strlen@s+1,strlen@cp+1
 22360  00685E  D002               	goto	l18540
 22361  006860                     l18538:
 22362  006860  4A21               	infsnz	strlen@cp,f,c
 22363  006862  2A22               	incf	strlen@cp+1,f,c
 22364  006864                     l18540:
 22365  006864  5021               	movf	strlen@cp,w,c
 22366  006866  6EF6               	movwf	tblptrl,c
 22367  006868  6EE9               	movwf	fsr0l,c
 22368  00686A  0E05               	movlw	(high __ramtop+-1)
 22369  00686C  6EEA               	movwf	fsr0h,c
 22370  00686E  5022               	movf	strlen@cp+1,w,c
 22371  006870  64EA               	cpfsgt	fsr0h,c
 22372  006872  D003               	bra	u24577
 22373  006874  6EEA               	movwf	fsr0h,c
 22374  006876  50EF               	movf	indf0,w,c
 22375  006878  D003               	bra	u24570
 22376  00687A                     u24577:
 22377  00687A  6EF7               	movwf	tblptrh,c
 22378  00687C  0008               	tblrd		*
 22379  00687E  50F5               	movf	tablat,w,c
 22380  006880                     u24570:
 22381  006880  0900               	iorlw	0
 22382  006882  E1EE               	bnz	l18538
 22383  006884  501F               	movf	strlen@s,w,c
 22384  006886  5C21               	subwf	strlen@cp,w,c
 22385  006888  6E1F               	movwf	?_strlen,c
 22386  00688A  5020               	movf	strlen@s+1,w,c
 22387  00688C  5822               	subwfb	strlen@cp+1,w,c
 22388  00688E  6E20               	movwf	?_strlen+1,c
 22389  006890  0012               	return	
 22390  006892                     __end_of_strlen:
 22391                           	opt stack 0
 22392                           tblptru	equ	0xFF8
 22393                           tblptrh	equ	0xFF7
 22394                           tblptrl	equ	0xFF6
 22395                           tablat	equ	0xFF5
 22396                           prodh	equ	0xFF4
 22397                           prodl	equ	0xFF3
 22398                           intcon	equ	0xFF2
 22399                           indf0	equ	0xFEF
 22400                           postinc0	equ	0xFEE
 22401                           fsr0h	equ	0xFEA
 22402                           fsr0l	equ	0xFE9
 22403                           wreg	equ	0xFE8
 22404                           indf1	equ	0xFE7
 22405                           postinc1	equ	0xFE6
 22406                           postdec1	equ	0xFE5
 22407                           fsr1h	equ	0xFE2
 22408                           fsr1l	equ	0xFE1
 22409                           indf2	equ	0xFDF
 22410                           postinc2	equ	0xFDE
 22411                           postdec2	equ	0xFDD
 22412                           plusw2	equ	0xFDB
 22413                           fsr2h	equ	0xFDA
 22414                           fsr2l	equ	0xFD9
 22415                           status	equ	0xFD8
 22416                           
 22417 ;; *************** function _receivePrintEventVerbose *****************
 22418 ;; Defined at:
 22419 ;;		line 2230 in file "main.c"
 22420 ;; Parameters:    Size  Location     Type
 22421 ;;		None
 22422 ;; Auto vars:     Size  Location     Type
 22423 ;;  i               1   66[BANK0 ] unsigned char 
 22424 ;; Return value:  Size  Location     Type
 22425 ;;                  1    wreg      enum E15660
 22426 ;; Registers used:
 22427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22428 ;; Tracked objects:
 22429 ;;		On entry : F/1
 22430 ;;		On exit  : 0/0
 22431 ;;		Unchanged: 0/0
 22432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22433 ;;      Params:         0       0       0       0       0       0       0
 22434 ;;      Locals:         0      19       0       0       0       0       0
 22435 ;;      Temps:          0       5       0       0       0       0       0
 22436 ;;      Totals:         0      24       0       0       0       0       0
 22437 ;;Total ram usage:       24 bytes
 22438 ;; Hardware stack levels used:    1
 22439 ;; Hardware stack levels required when called:    6
 22440 ;; This function calls:
 22441 ;;		_putsUSART
 22442 ;;		_sprintf
 22443 ;;		_getVSCPFrame
 22444 ;;		_ReadTimer3
 22445 ;;		___wmul
 22446 ;; This function is called by:
 22447 ;;		_doModeVerbose
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text52
 22452  002EF8                     __ptext52:
 22453                           	opt stack 0
 22454  002EF8                     _receivePrintEventVerbose:
 22455                           	opt stack 23
 22456                           
 22457                           ; BSR set to: 1
 22458                           ;main.c: 2231: uint8_t i;
 22459                           ;main.c: 2233: if ( getVSCPFrame(&vscpClass,
 22460                           ;main.c: 2234: &vscpType,
 22461                           ;main.c: 2235: &vscpNodeId,
 22462                           ;main.c: 2236: &vscpPriority,
 22463                           ;main.c: 2237: &vscpSize,
 22464                           ;main.c: 2238: vscpData)) {
 22465                           
 22466                           ;incstack = 0
 22467                           ;incstack = 0
 22468  002EF8  0E01               	movlw	high _vscpClass
 22469  002EFA  0100               	movlb	0	; () banked
 22470  002EFC  6F6D               	movwf	(?_getVSCPFrame+1)& (0+255),b
 22471  002EFE  0EAD               	movlw	low _vscpClass
 22472  002F00  6F6C               	movwf	?_getVSCPFrame& (0+255),b
 22473  002F02  0E01               	movlw	high _vscpType
 22474  002F04  6F6F               	movwf	(?_getVSCPFrame+3)& (0+255),b
 22475  002F06  0EB2               	movlw	low _vscpType
 22476  002F08  6F6E               	movwf	(?_getVSCPFrame+2)& (0+255),b
 22477  002F0A  0E01               	movlw	high _vscpNodeId
 22478  002F0C  6F71               	movwf	(?_getVSCPFrame+5)& (0+255),b
 22479  002F0E  0EAF               	movlw	low _vscpNodeId
 22480  002F10  6F70               	movwf	(?_getVSCPFrame+4)& (0+255),b
 22481  002F12  0E01               	movlw	high _vscpPriority
 22482  002F14  6F73               	movwf	(?_getVSCPFrame+7)& (0+255),b
 22483  002F16  0EB0               	movlw	low _vscpPriority
 22484  002F18  6F72               	movwf	(?_getVSCPFrame+6)& (0+255),b
 22485  002F1A  0E01               	movlw	high _vscpSize
 22486  002F1C  6F75               	movwf	(?_getVSCPFrame+9)& (0+255),b
 22487  002F1E  0EB1               	movlw	low _vscpSize
 22488  002F20  6F74               	movwf	(?_getVSCPFrame+8)& (0+255),b
 22489  002F22  0E01               	movlw	high _vscpData
 22490  002F24  6F77               	movwf	(?_getVSCPFrame+11)& (0+255),b
 22491  002F26  0EA5               	movlw	low _vscpData
 22492  002F28  6F76               	movwf	(?_getVSCPFrame+10)& (0+255),b
 22493  002F2A  EC3A  F02F         	call	_getVSCPFrame	;wreg free
 22494  002F2E  0900               	iorlw	0
 22495  002F30  E101 D18F          	bz	l17206
 22496                           
 22497                           ; BSR set to: 0
 22498                           ;main.c: 2241: cntRxFrames++;
 22499  002F34  2BD2               	incf	_cntRxFrames& (0+255),f,b
 22500  002F36  0E00               	movlw	0
 22501  002F38  23D3               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 22502  002F3A  23D4               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 22503  002F3C  23D5               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 22504                           
 22505                           ;main.c: 2242: cntRxBytes += vscpSize;
 22506  002F3E  0101               	movlb	1	; () banked
 22507  002F40  51B1               	movf	_vscpSize& (0+255),w,b
 22508  002F42  0100               	movlb	0	; () banked
 22509  002F44  27CE               	addwf	_cntRxBytes& (0+255),f,b
 22510  002F46  0E00               	movlw	0
 22511  002F48  23CF               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 22512  002F4A  23D0               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 22513  002F4C  23D1               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;main.c: 2244: putsUSART((char *) "<Prio=");
 22517  002F4E  0E7F               	movlw	high STR_179
 22518  002F50  6E21               	movwf	?_putsUSART+1,c
 22519  002F52  0E2C               	movlw	low STR_179
 22520  002F54  6E20               	movwf	?_putsUSART,c
 22521  002F56  ECD5  F032         	call	_putsUSART	;wreg free
 22522                           
 22523                           ;main.c: 2245: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpPriority);
 22524  002F5A  0101               	movlb	1	; () banked
 22525  002F5C  6700               	tstfsz	_bHex& (0+255),b
 22526  002F5E  D005               	goto	l17108
 22527                           
 22528                           ; BSR set to: 1
 22529  002F60  0E7F               	movlw	high STR_61
 22530  002F62  0100               	movlb	0	; () banked
 22531  002F64  6F95               	movwf	(_receivePrintEventVerbose$1506+1)& (0+255),b
 22532  002F66  0EED               	movlw	low STR_61
 22533  002F68  D004               	goto	L43
 22534  002F6A                     l17108:
 22535                           
 22536                           ; BSR set to: 1
 22537  002F6A  0E7F               	movlw	high STR_60
 22538  002F6C  0100               	movlb	0	; () banked
 22539  002F6E  6F95               	movwf	(_receivePrintEventVerbose$1506+1)& (0+255),b
 22540  002F70  0E4F               	movlw	low STR_60
 22541  002F72                     L43:
 22542  002F72  6F94               	movwf	_receivePrintEventVerbose$1506& (0+255),b
 22543                           
 22544                           ; BSR set to: 0
 22545  002F74  0E01               	movlw	high _wrkbuf
 22546  002F76  0100               	movlb	0	; () banked
 22547  002F78  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22548  002F7A  0E55               	movlw	low _wrkbuf
 22549  002F7C  6F6D               	movwf	?_sprintf& (0+255),b
 22550  002F7E  C094  F06F         	movff	_receivePrintEventVerbose$1506,?_sprintf+2
 22551  002F82  C095  F070         	movff	_receivePrintEventVerbose$1506+1,?_sprintf+3
 22552  002F86  C1B0  F071         	movff	_vscpPriority,?_sprintf+4
 22553  002F8A  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22554  002F8C  EC14  F010         	call	_sprintf	;wreg free
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;main.c: 2246: putsUSART(wrkbuf);
 22558  002F90  0101               	movlb	1	; () banked
 22559  002F92  0E01               	movlw	high _wrkbuf
 22560  002F94  6E21               	movwf	?_putsUSART+1,c
 22561  002F96  0E55               	movlw	low _wrkbuf
 22562  002F98  6E20               	movwf	?_putsUSART,c
 22563  002F9A  ECD5  F032         	call	_putsUSART	;wreg free
 22564                           
 22565                           ;main.c: 2247: if ( bTimestamp ) {
 22566  002F9E  0100               	movlb	0	; () banked
 22567  002FA0  51F0               	movf	_bTimestamp& (0+255),w,b
 22568  002FA2  E052               	bz	l17130
 22569                           
 22570                           ; BSR set to: 0
 22571                           ;main.c: 2248: putsUSART((char *) ",timestamp=");
 22572  002FA4  0E7E               	movlw	high STR_182
 22573  002FA6  6E21               	movwf	?_putsUSART+1,c
 22574  002FA8  0E26               	movlw	low STR_182
 22575  002FAA  6E20               	movwf	?_putsUSART,c
 22576  002FAC  ECD5  F032         	call	_putsUSART	;wreg free
 22577                           
 22578                           ;main.c: 2249: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", (timer<<16) | ReadTimer3()*10 );
 22579  002FB0  0101               	movlb	1	; () banked
 22580  002FB2  6700               	tstfsz	_bHex& (0+255),b
 22581  002FB4  D005               	goto	l17122
 22582                           
 22583                           ; BSR set to: 1
 22584  002FB6  0E7F               	movlw	high STR_184
 22585  002FB8  0100               	movlb	0	; () banked
 22586  002FBA  6F97               	movwf	(_receivePrintEventVerbose$1511+1)& (0+255),b
 22587  002FBC  0EDD               	movlw	low STR_184
 22588  002FBE  D004               	goto	L44
 22589  002FC0                     l17122:
 22590                           
 22591                           ; BSR set to: 1
 22592  002FC0  0E7F               	movlw	high STR_183
 22593  002FC2  0100               	movlb	0	; () banked
 22594  002FC4  6F97               	movwf	(_receivePrintEventVerbose$1511+1)& (0+255),b
 22595  002FC6  0E00               	movlw	low STR_183
 22596  002FC8                     L44:
 22597  002FC8  6F96               	movwf	_receivePrintEventVerbose$1511& (0+255),b
 22598                           
 22599                           ; BSR set to: 0
 22600  002FCA  EC8B  F035         	call	_ReadTimer3	;wreg free
 22601  002FCE  C01F  F023         	movff	?_ReadTimer3,?___wmul
 22602  002FD2  C020  F024         	movff	?_ReadTimer3+1,?___wmul+1
 22603  002FD6  6A26               	clrf	?___wmul+3,c
 22604  002FD8  0E0A               	movlw	10
 22605  002FDA  6E25               	movwf	?___wmul+2,c
 22606  002FDC  EC49  F034         	call	___wmul	;wreg free
 22607  002FE0  C0E2  F08B         	movff	_timer,??_receivePrintEventVerbose	;volatile
 22608  002FE4  C0E3  F08C         	movff	_timer+1,??_receivePrintEventVerbose+1	;volatile
 22609  002FE8  C0E4  F08D         	movff	_timer+2,??_receivePrintEventVerbose+2	;volatile
 22610  002FEC  C0E5  F08E         	movff	_timer+3,??_receivePrintEventVerbose+3	;volatile
 22611  002FF0  C08C  F08E         	movff	??_receivePrintEventVerbose+1,??_receivePrintEventVerbose+3
 22612  002FF4  C08B  F08D         	movff	??_receivePrintEventVerbose,??_receivePrintEventVerbose+2
 22613  002FF8  6B8C               	clrf	(??_receivePrintEventVerbose+1)& (0+255),b
 22614  002FFA  6B8B               	clrf	??_receivePrintEventVerbose& (0+255),b
 22615  002FFC  5123               	movf	?___wmul& (0+255),w,b
 22616  002FFE  118B               	iorwf	??_receivePrintEventVerbose& (0+255),w,b
 22617  003000  6F90               	movwf	_receivePrintEventVerbose$3691& (0+255),b	;volatile
 22618  003002  5124               	movf	(?___wmul+1)& (0+255),w,b
 22619  003004  118C               	iorwf	(??_receivePrintEventVerbose+1)& (0+255),w,b
 22620  003006  6F91               	movwf	(_receivePrintEventVerbose$3691+1)& (0+255),b	;volatile
 22621  003008  0E00               	movlw	0
 22622  00300A  118D               	iorwf	(??_receivePrintEventVerbose+2)& (0+255),w,b
 22623  00300C  6F92               	movwf	(_receivePrintEventVerbose$3691+2)& (0+255),b	;volatile
 22624  00300E  0E00               	movlw	0
 22625  003010  118E               	iorwf	(??_receivePrintEventVerbose+3)& (0+255),w,b
 22626  003012  6F93               	movwf	(_receivePrintEventVerbose$3691+3)& (0+255),b	;volatile
 22627                           
 22628                           ; BSR set to: 0
 22629  003014  0E01               	movlw	high _wrkbuf
 22630  003016  0100               	movlb	0	; () banked
 22631  003018  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22632  00301A  0E55               	movlw	low _wrkbuf
 22633  00301C  6F6D               	movwf	?_sprintf& (0+255),b
 22634  00301E  C096  F06F         	movff	_receivePrintEventVerbose$1511,?_sprintf+2
 22635  003022  C097  F070         	movff	_receivePrintEventVerbose$1511+1,?_sprintf+3
 22636  003026  C090  F071         	movff	_receivePrintEventVerbose$3691,?_sprintf+4	;volatile
 22637  00302A  C091  F072         	movff	_receivePrintEventVerbose$3691+1,?_sprintf+5	;volatile
 22638  00302E  C092  F073         	movff	_receivePrintEventVerbose$3691+2,?_sprintf+6	;volatile
 22639  003032  C093  F074         	movff	_receivePrintEventVerbose$3691+3,?_sprintf+7	;volatile
 22640  003036  EC14  F010         	call	_sprintf	;wreg free
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;main.c: 2250: putsUSART(wrkbuf);
 22644  00303A  0101               	movlb	1	; () banked
 22645  00303C  0E01               	movlw	high _wrkbuf
 22646  00303E  6E21               	movwf	?_putsUSART+1,c
 22647  003040  0E55               	movlw	low _wrkbuf
 22648  003042  6E20               	movwf	?_putsUSART,c
 22649  003044  ECD5  F032         	call	_putsUSART	;wreg free
 22650  003048                     l17130:
 22651                           
 22652                           ;main.c: 2251: }
 22653                           ;main.c: 2252: putsUSART((char *) ",class=");
 22654  003048  0E7E               	movlw	high STR_185
 22655  00304A  6E21               	movwf	?_putsUSART+1,c
 22656  00304C  0EE0               	movlw	low STR_185
 22657  00304E  6E20               	movwf	?_putsUSART,c
 22658  003050  ECD5  F032         	call	_putsUSART	;wreg free
 22659                           
 22660                           ;main.c: 2253: sprintf(wrkbuf, bHex ? "0x%04X" : "%d", vscpClass);
 22661  003054  0101               	movlb	1	; () banked
 22662  003056  6700               	tstfsz	_bHex& (0+255),b
 22663  003058  D005               	goto	l17136
 22664                           
 22665                           ; BSR set to: 1
 22666  00305A  0E7F               	movlw	high STR_61
 22667  00305C  0100               	movlb	0	; () banked
 22668  00305E  6F99               	movwf	(_receivePrintEventVerbose$1516+1)& (0+255),b
 22669  003060  0EED               	movlw	low STR_61
 22670  003062  D004               	goto	L45
 22671  003064                     l17136:
 22672                           
 22673                           ; BSR set to: 1
 22674  003064  0E7F               	movlw	high STR_186
 22675  003066  0100               	movlb	0	; () banked
 22676  003068  6F99               	movwf	(_receivePrintEventVerbose$1516+1)& (0+255),b
 22677  00306A  0E56               	movlw	low STR_186
 22678  00306C                     L45:
 22679  00306C  6F98               	movwf	_receivePrintEventVerbose$1516& (0+255),b
 22680                           
 22681                           ; BSR set to: 0
 22682  00306E  0E01               	movlw	high _wrkbuf
 22683  003070  0100               	movlb	0	; () banked
 22684  003072  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22685  003074  0E55               	movlw	low _wrkbuf
 22686  003076  6F6D               	movwf	?_sprintf& (0+255),b
 22687  003078  C098  F06F         	movff	_receivePrintEventVerbose$1516,?_sprintf+2
 22688  00307C  C099  F070         	movff	_receivePrintEventVerbose$1516+1,?_sprintf+3
 22689  003080  C1AD  F071         	movff	_vscpClass,?_sprintf+4
 22690  003084  C1AE  F072         	movff	_vscpClass+1,?_sprintf+5
 22691  003088  EC14  F010         	call	_sprintf	;wreg free
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;main.c: 2254: putsUSART(wrkbuf);
 22695  00308C  0101               	movlb	1	; () banked
 22696  00308E  0E01               	movlw	high _wrkbuf
 22697  003090  6E21               	movwf	?_putsUSART+1,c
 22698  003092  0E55               	movlw	low _wrkbuf
 22699  003094  6E20               	movwf	?_putsUSART,c
 22700  003096  ECD5  F032         	call	_putsUSART	;wreg free
 22701                           
 22702                           ;main.c: 2255: putsUSART((char *) ",type=");
 22703  00309A  0E7F               	movlw	high STR_188
 22704  00309C  6E21               	movwf	?_putsUSART+1,c
 22705  00309E  0E1E               	movlw	low STR_188
 22706  0030A0  6E20               	movwf	?_putsUSART,c
 22707  0030A2  ECD5  F032         	call	_putsUSART	;wreg free
 22708                           
 22709                           ;main.c: 2256: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpType);
 22710  0030A6  0101               	movlb	1	; () banked
 22711  0030A8  6700               	tstfsz	_bHex& (0+255),b
 22712  0030AA  D005               	goto	l17148
 22713                           
 22714                           ; BSR set to: 1
 22715  0030AC  0E7F               	movlw	high STR_61
 22716  0030AE  0100               	movlb	0	; () banked
 22717  0030B0  6F9B               	movwf	(_receivePrintEventVerbose$1521+1)& (0+255),b
 22718  0030B2  0EED               	movlw	low STR_61
 22719  0030B4  D004               	goto	L46
 22720  0030B6                     l17148:
 22721                           
 22722                           ; BSR set to: 1
 22723  0030B6  0E7F               	movlw	high STR_60
 22724  0030B8  0100               	movlb	0	; () banked
 22725  0030BA  6F9B               	movwf	(_receivePrintEventVerbose$1521+1)& (0+255),b
 22726  0030BC  0E4F               	movlw	low STR_60
 22727  0030BE                     L46:
 22728  0030BE  6F9A               	movwf	_receivePrintEventVerbose$1521& (0+255),b
 22729                           
 22730                           ; BSR set to: 0
 22731  0030C0  0E01               	movlw	high _wrkbuf
 22732  0030C2  0100               	movlb	0	; () banked
 22733  0030C4  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22734  0030C6  0E55               	movlw	low _wrkbuf
 22735  0030C8  6F6D               	movwf	?_sprintf& (0+255),b
 22736  0030CA  C09A  F06F         	movff	_receivePrintEventVerbose$1521,?_sprintf+2
 22737  0030CE  C09B  F070         	movff	_receivePrintEventVerbose$1521+1,?_sprintf+3
 22738  0030D2  C1B2  F071         	movff	_vscpType,?_sprintf+4
 22739  0030D6  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22740  0030D8  EC14  F010         	call	_sprintf	;wreg free
 22741                           
 22742                           ; BSR set to: 0
 22743                           ;main.c: 2257: putsUSART(wrkbuf);
 22744  0030DC  0101               	movlb	1	; () banked
 22745  0030DE  0E01               	movlw	high _wrkbuf
 22746  0030E0  6E21               	movwf	?_putsUSART+1,c
 22747  0030E2  0E55               	movlw	low _wrkbuf
 22748  0030E4  6E20               	movwf	?_putsUSART,c
 22749  0030E6  ECD5  F032         	call	_putsUSART	;wreg free
 22750                           
 22751                           ;main.c: 2258: putsUSART((char *) ",nodeid=");
 22752  0030EA  0E7E               	movlw	high STR_191
 22753  0030EC  6E21               	movwf	?_putsUSART+1,c
 22754  0030EE  0EA5               	movlw	low STR_191
 22755  0030F0  6E20               	movwf	?_putsUSART,c
 22756  0030F2  ECD5  F032         	call	_putsUSART	;wreg free
 22757                           
 22758                           ;main.c: 2259: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpNodeId);
 22759  0030F6  0101               	movlb	1	; () banked
 22760  0030F8  6700               	tstfsz	_bHex& (0+255),b
 22761  0030FA  D005               	goto	l17160
 22762                           
 22763                           ; BSR set to: 1
 22764  0030FC  0E7F               	movlw	high STR_61
 22765  0030FE  0100               	movlb	0	; () banked
 22766  003100  6F9D               	movwf	(_receivePrintEventVerbose$1526+1)& (0+255),b
 22767  003102  0EED               	movlw	low STR_61
 22768  003104  D004               	goto	L47
 22769  003106                     l17160:
 22770                           
 22771                           ; BSR set to: 1
 22772  003106  0E7F               	movlw	high STR_60
 22773  003108  0100               	movlb	0	; () banked
 22774  00310A  6F9D               	movwf	(_receivePrintEventVerbose$1526+1)& (0+255),b
 22775  00310C  0E4F               	movlw	low STR_60
 22776  00310E                     L47:
 22777  00310E  6F9C               	movwf	_receivePrintEventVerbose$1526& (0+255),b
 22778                           
 22779                           ; BSR set to: 0
 22780  003110  0E01               	movlw	high _wrkbuf
 22781  003112  0100               	movlb	0	; () banked
 22782  003114  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22783  003116  0E55               	movlw	low _wrkbuf
 22784  003118  6F6D               	movwf	?_sprintf& (0+255),b
 22785  00311A  C09C  F06F         	movff	_receivePrintEventVerbose$1526,?_sprintf+2
 22786  00311E  C09D  F070         	movff	_receivePrintEventVerbose$1526+1,?_sprintf+3
 22787  003122  C1AF  F071         	movff	_vscpNodeId,?_sprintf+4
 22788  003126  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22789  003128  EC14  F010         	call	_sprintf	;wreg free
 22790                           
 22791                           ; BSR set to: 0
 22792                           ;main.c: 2260: putsUSART(wrkbuf);
 22793  00312C  0101               	movlb	1	; () banked
 22794  00312E  0E01               	movlw	high _wrkbuf
 22795  003130  6E21               	movwf	?_putsUSART+1,c
 22796  003132  0E55               	movlw	low _wrkbuf
 22797  003134  6E20               	movwf	?_putsUSART,c
 22798  003136  ECD5  F032         	call	_putsUSART	;wreg free
 22799                           
 22800                           ;main.c: 2261: putsUSART((char *) ",size=");
 22801  00313A  0E7F               	movlw	high STR_194
 22802  00313C  6E21               	movwf	?_putsUSART+1,c
 22803  00313E  0E25               	movlw	low STR_194
 22804  003140  6E20               	movwf	?_putsUSART,c
 22805  003142  ECD5  F032         	call	_putsUSART	;wreg free
 22806                           
 22807                           ;main.c: 2262: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpSize);
 22808  003146  0101               	movlb	1	; () banked
 22809  003148  6700               	tstfsz	_bHex& (0+255),b
 22810  00314A  D005               	goto	l17172
 22811                           
 22812                           ; BSR set to: 1
 22813  00314C  0E7F               	movlw	high STR_61
 22814  00314E  0100               	movlb	0	; () banked
 22815  003150  6F9F               	movwf	(_receivePrintEventVerbose$1531+1)& (0+255),b
 22816  003152  0EED               	movlw	low STR_61
 22817  003154  D004               	goto	L48
 22818  003156                     l17172:
 22819                           
 22820                           ; BSR set to: 1
 22821  003156  0E7F               	movlw	high STR_60
 22822  003158  0100               	movlb	0	; () banked
 22823  00315A  6F9F               	movwf	(_receivePrintEventVerbose$1531+1)& (0+255),b
 22824  00315C  0E4F               	movlw	low STR_60
 22825  00315E                     L48:
 22826  00315E  6F9E               	movwf	_receivePrintEventVerbose$1531& (0+255),b
 22827                           
 22828                           ; BSR set to: 0
 22829  003160  0E01               	movlw	high _wrkbuf
 22830  003162  0100               	movlb	0	; () banked
 22831  003164  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22832  003166  0E55               	movlw	low _wrkbuf
 22833  003168  6F6D               	movwf	?_sprintf& (0+255),b
 22834  00316A  C09E  F06F         	movff	_receivePrintEventVerbose$1531,?_sprintf+2
 22835  00316E  C09F  F070         	movff	_receivePrintEventVerbose$1531+1,?_sprintf+3
 22836  003172  C1B1  F071         	movff	_vscpSize,?_sprintf+4
 22837  003176  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22838  003178  EC14  F010         	call	_sprintf	;wreg free
 22839                           
 22840                           ; BSR set to: 0
 22841                           ;main.c: 2263: putsUSART(wrkbuf);
 22842  00317C  0101               	movlb	1	; () banked
 22843  00317E  0E01               	movlw	high _wrkbuf
 22844  003180  6E21               	movwf	?_putsUSART+1,c
 22845  003182  0E55               	movlw	low _wrkbuf
 22846  003184  6E20               	movwf	?_putsUSART,c
 22847  003186  ECD5  F032         	call	_putsUSART	;wreg free
 22848                           
 22849                           ;main.c: 2264: if (vscpSize > 0) {
 22850  00318A  0101               	movlb	1	; () banked
 22851  00318C  51B1               	movf	_vscpSize& (0+255),w,b
 22852  00318E  E053               	bz	l17200
 22853                           
 22854                           ; BSR set to: 1
 22855                           ;main.c: 2265: putsUSART((char *) ",Data=");
 22856  003190  0E7F               	movlw	high STR_197
 22857  003192  6E21               	movwf	?_putsUSART+1,c
 22858  003194  0E17               	movlw	low STR_197
 22859  003196  6E20               	movwf	?_putsUSART,c
 22860  003198  ECD5  F032         	call	_putsUSART	;wreg free
 22861                           
 22862                           ;main.c: 2266: for (i = 0; i < vscpSize; i++) {
 22863  00319C  0100               	movlb	0	; () banked
 22864  00319E  6BA2               	clrf	receivePrintEventVerbose@i& (0+255),b
 22865  0031A0  D044               	goto	l17198
 22866  0031A2                     l1056:
 22867                           
 22868                           ; BSR set to: 0
 22869                           ;main.c: 2268: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpData[i]);
 22870  0031A2  0101               	movlb	1	; () banked
 22871  0031A4  6700               	tstfsz	_bHex& (0+255),b
 22872  0031A6  D005               	goto	l17186
 22873                           
 22874                           ; BSR set to: 1
 22875  0031A8  0E7F               	movlw	high STR_61
 22876  0031AA  0100               	movlb	0	; () banked
 22877  0031AC  6FA1               	movwf	(_receivePrintEventVerbose$1536+1)& (0+255),b
 22878  0031AE  0EED               	movlw	low STR_61
 22879  0031B0  D004               	goto	L49
 22880  0031B2                     l17186:
 22881                           
 22882                           ; BSR set to: 1
 22883  0031B2  0E7F               	movlw	high STR_60
 22884  0031B4  0100               	movlb	0	; () banked
 22885  0031B6  6FA1               	movwf	(_receivePrintEventVerbose$1536+1)& (0+255),b
 22886  0031B8  0E4F               	movlw	low STR_60
 22887  0031BA                     L49:
 22888  0031BA  6FA0               	movwf	_receivePrintEventVerbose$1536& (0+255),b
 22889                           
 22890                           ; BSR set to: 0
 22891  0031BC  0E01               	movlw	high _wrkbuf
 22892  0031BE  0100               	movlb	0	; () banked
 22893  0031C0  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22894  0031C2  0E55               	movlw	low _wrkbuf
 22895  0031C4  6F6D               	movwf	?_sprintf& (0+255),b
 22896  0031C6  C0A0  F06F         	movff	_receivePrintEventVerbose$1536,?_sprintf+2
 22897  0031CA  C0A1  F070         	movff	_receivePrintEventVerbose$1536+1,?_sprintf+3
 22898  0031CE  0EA5               	movlw	low _vscpData
 22899  0031D0  25A2               	addwf	receivePrintEventVerbose@i& (0+255),w,b
 22900  0031D2  6ED9               	movwf	fsr2l,c
 22901  0031D4  6ADA               	clrf	fsr2h,c
 22902  0031D6  0E01               	movlw	high _vscpData
 22903  0031D8  22DA               	addwfc	fsr2h,f,c
 22904  0031DA  50DF               	movf	indf2,w,c
 22905  0031DC  6F71               	movwf	(?_sprintf+4)& (0+255),b
 22906  0031DE  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22907  0031E0  EC14  F010         	call	_sprintf	;wreg free
 22908                           
 22909                           ; BSR set to: 0
 22910                           ;main.c: 2269: putsUSART(wrkbuf);
 22911  0031E4  0101               	movlb	1	; () banked
 22912  0031E6  0E01               	movlw	high _wrkbuf
 22913  0031E8  6E21               	movwf	?_putsUSART+1,c
 22914  0031EA  0E55               	movlw	low _wrkbuf
 22915  0031EC  6E20               	movwf	?_putsUSART,c
 22916  0031EE  ECD5  F032         	call	_putsUSART	;wreg free
 22917                           
 22918                           ;main.c: 2270: if (i < (vscpSize - 1)) {
 22919  0031F2  0EFF               	movlw	255
 22920  0031F4  0101               	movlb	1	; () banked
 22921  0031F6  25B1               	addwf	_vscpSize& (0+255),w,b
 22922  0031F8  0100               	movlb	0	; () banked
 22923  0031FA  6F8B               	movwf	??_receivePrintEventVerbose& (0+255),b
 22924  0031FC  6B8C               	clrf	(??_receivePrintEventVerbose+1)& (0+255),b
 22925  0031FE  0EFF               	movlw	255
 22926  003200  238C               	addwfc	(??_receivePrintEventVerbose+1)& (0+255),f,b
 22927  003202  51A2               	movf	receivePrintEventVerbose@i& (0+255),w,b
 22928  003204  6F8D               	movwf	(??_receivePrintEventVerbose+2)& (0+255),b
 22929  003206  6B8E               	clrf	(??_receivePrintEventVerbose+3)& (0+255),b
 22930  003208  518E               	movf	(??_receivePrintEventVerbose+3)& (0+255),w,b
 22931  00320A  0A80               	xorlw	128
 22932  00320C  6F8F               	movwf	(??_receivePrintEventVerbose+4)& (0+255),b
 22933  00320E  518B               	movf	??_receivePrintEventVerbose& (0+255),w,b
 22934  003210  5D8D               	subwf	(??_receivePrintEventVerbose+2)& (0+255),w,b
 22935  003212  518C               	movf	(??_receivePrintEventVerbose+1)& (0+255),w,b
 22936  003214  0A80               	xorlw	128
 22937  003216  598F               	subwfb	(??_receivePrintEventVerbose+4)& (0+255),w,b
 22938  003218  E206               	bc	l17196
 22939                           
 22940                           ; BSR set to: 0
 22941                           ;main.c: 2271: putsUSART((char *) ",");
 22942  00321A  0E7F               	movlw	high STR_30
 22943  00321C  6E21               	movwf	?_putsUSART+1,c
 22944  00321E  0EF4               	movlw	low STR_30
 22945  003220  6E20               	movwf	?_putsUSART,c
 22946  003222  ECD5  F032         	call	_putsUSART	;wreg free
 22947  003226                     l17196:
 22948  003226  0100               	movlb	0	; () banked
 22949  003228  2BA2               	incf	receivePrintEventVerbose@i& (0+255),f,b
 22950  00322A                     l17198:
 22951                           
 22952                           ; BSR set to: 0
 22953  00322A  0101               	movlb	1	; () banked
 22954  00322C  51B1               	movf	_vscpSize& (0+255),w,b
 22955  00322E  0100               	movlb	0	; () banked
 22956  003230  5DA2               	subwf	receivePrintEventVerbose@i& (0+255),w,b
 22957  003232  E207               	bc	l1063
 22958  003234  D7B6               	goto	l1056
 22959  003236                     l17200:
 22960                           
 22961                           ; BSR set to: 1
 22962                           ;main.c: 2275: putsUSART((char *) ",Data=none");
 22963  003236  0E7E               	movlw	high STR_201
 22964  003238  6E21               	movwf	?_putsUSART+1,c
 22965  00323A  0E5F               	movlw	low STR_201
 22966  00323C  6E20               	movwf	?_putsUSART,c
 22967  00323E  ECD5  F032         	call	_putsUSART	;wreg free
 22968  003242                     l1063:
 22969                           
 22970                           ;main.c: 2276: }
 22971                           ;main.c: 2277: putsUSART((char *) ">\r\n");
 22972  003242  0E7F               	movlw	high STR_202
 22973  003244  6E21               	movwf	?_putsUSART+1,c
 22974  003246  0EC9               	movlw	low STR_202
 22975  003248  6E20               	movwf	?_putsUSART,c
 22976  00324A  ECD5  F032         	call	_putsUSART	;wreg free
 22977                           
 22978                           ;main.c: 2278: return 1;
 22979  00324E  0E01               	movlw	1
 22980  003250  D001               	goto	l1064
 22981  003252                     l17206:
 22982                           
 22983                           ; BSR set to: 0
 22984                           ;main.c: 2279: }
 22985                           ;main.c: 2281: return 0;
 22986  003252  0E00               	movlw	0
 22987  003254                     l1064:
 22988  003254  0012               	return	
 22989  003256                     __end_of_receivePrintEventVerbose:
 22990                           	opt stack 0
 22991                           tblptru	equ	0xFF8
 22992                           tblptrh	equ	0xFF7
 22993                           tblptrl	equ	0xFF6
 22994                           tablat	equ	0xFF5
 22995                           prodh	equ	0xFF4
 22996                           prodl	equ	0xFF3
 22997                           intcon	equ	0xFF2
 22998                           indf0	equ	0xFEF
 22999                           postinc0	equ	0xFEE
 23000                           fsr0h	equ	0xFEA
 23001                           fsr0l	equ	0xFE9
 23002                           wreg	equ	0xFE8
 23003                           indf1	equ	0xFE7
 23004                           postinc1	equ	0xFE6
 23005                           postdec1	equ	0xFE5
 23006                           fsr1h	equ	0xFE2
 23007                           fsr1l	equ	0xFE1
 23008                           indf2	equ	0xFDF
 23009                           postinc2	equ	0xFDE
 23010                           postdec2	equ	0xFDD
 23011                           plusw2	equ	0xFDB
 23012                           fsr2h	equ	0xFDA
 23013                           fsr2l	equ	0xFD9
 23014                           status	equ	0xFD8
 23015                           
 23016 ;; *************** function _ReadTimer3 *****************
 23017 ;; Defined at:
 23018 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t3read.c"
 23019 ;; Parameters:    Size  Location     Type
 23020 ;;		None
 23021 ;; Auto vars:     Size  Location     Type
 23022 ;;  timer           2   32[COMRAM] struct Timers
 23023 ;; Return value:  Size  Location     Type
 23024 ;;                  2   30[COMRAM] unsigned int 
 23025 ;; Registers used:
 23026 ;;		None
 23027 ;; Tracked objects:
 23028 ;;		On entry : F/0
 23029 ;;		On exit  : F/0
 23030 ;;		Unchanged: F/0
 23031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23032 ;;      Params:         2       0       0       0       0       0       0
 23033 ;;      Locals:         2       0       0       0       0       0       0
 23034 ;;      Temps:          0       0       0       0       0       0       0
 23035 ;;      Totals:         4       0       0       0       0       0       0
 23036 ;;Total ram usage:        4 bytes
 23037 ;; Hardware stack levels used:    1
 23038 ;; Hardware stack levels required when called:    3
 23039 ;; This function calls:
 23040 ;;		Nothing
 23041 ;; This function is called by:
 23042 ;;		_receivePrintEventVerbose
 23043 ;;		_receiveSendEventCANAL
 23044 ;;		_receiveSendMultiEventCANAL
 23045 ;; This function uses a non-reentrant model
 23046 ;;
 23047                           
 23048                           	psect	text53
 23049  006B16                     __ptext53:
 23050                           	opt stack 0
 23051  006B16                     _ReadTimer3:
 23052                           	opt stack 25
 23053                           
 23054                           ; BSR set to: 0
 23055                           
 23056                           ;incstack = 0
 23057                           ;incstack = 0
 23058  006B16  CFB2 F021          	movff	4018,ReadTimer3@timer	;volatile
 23059  006B1A  CFB3 F022          	movff	4019,ReadTimer3@timer+1	;volatile
 23060  006B1E  C021  F01F         	movff	ReadTimer3@timer,?_ReadTimer3
 23061  006B22  C022  F020         	movff	ReadTimer3@timer+1,?_ReadTimer3+1
 23062                           
 23063                           ; BSR set to: 0
 23064  006B26  0012               	return	
 23065  006B28                     __end_of_ReadTimer3:
 23066                           	opt stack 0
 23067                           tblptru	equ	0xFF8
 23068                           tblptrh	equ	0xFF7
 23069                           tblptrl	equ	0xFF6
 23070                           tablat	equ	0xFF5
 23071                           prodh	equ	0xFF4
 23072                           prodl	equ	0xFF3
 23073                           intcon	equ	0xFF2
 23074                           indf0	equ	0xFEF
 23075                           postinc0	equ	0xFEE
 23076                           fsr0h	equ	0xFEA
 23077                           fsr0l	equ	0xFE9
 23078                           wreg	equ	0xFE8
 23079                           indf1	equ	0xFE7
 23080                           postinc1	equ	0xFE6
 23081                           postdec1	equ	0xFE5
 23082                           fsr1h	equ	0xFE2
 23083                           fsr1l	equ	0xFE1
 23084                           indf2	equ	0xFDF
 23085                           postinc2	equ	0xFDE
 23086                           postdec2	equ	0xFDD
 23087                           plusw2	equ	0xFDB
 23088                           fsr2h	equ	0xFDA
 23089                           fsr2l	equ	0xFD9
 23090                           status	equ	0xFD8
 23091                           
 23092 ;; *************** function _getVSCPFrame *****************
 23093 ;; Defined at:
 23094 ;;		line 3605 in file "main.c"
 23095 ;; Parameters:    Size  Location     Type
 23096 ;;  pvscpclass      2   12[BANK0 ] PTR unsigned short 
 23097 ;;		 -> vscpClass(2), 
 23098 ;;  pvscptype       2   14[BANK0 ] PTR unsigned char 
 23099 ;;		 -> vscpType(1), 
 23100 ;;  pNodeId         2   16[BANK0 ] PTR unsigned char 
 23101 ;;		 -> vscpNodeId(1), 
 23102 ;;  pPriority       2   18[BANK0 ] PTR unsigned char 
 23103 ;;		 -> vscpPriority(1), 
 23104 ;;  pSize           2   20[BANK0 ] PTR unsigned char 
 23105 ;;		 -> vscpSize(1), 
 23106 ;;  pData           2   22[BANK0 ] PTR unsigned char 
 23107 ;;		 -> vscpData(8), 
 23108 ;; Auto vars:     Size  Location     Type
 23109 ;;  id              4   28[BANK0 ] unsigned long 
 23110 ;; Return value:  Size  Location     Type
 23111 ;;                  1    wreg      unsigned char 
 23112 ;; Registers used:
 23113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23114 ;; Tracked objects:
 23115 ;;		On entry : F/0
 23116 ;;		On exit  : F/0
 23117 ;;		Unchanged: 0/0
 23118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23119 ;;      Params:         0      12       0       0       0       0       0
 23120 ;;      Locals:         0       4       0       0       0       0       0
 23121 ;;      Temps:          0       4       0       0       0       0       0
 23122 ;;      Totals:         0      20       0       0       0       0       0
 23123 ;;Total ram usage:       20 bytes
 23124 ;; Hardware stack levels used:    1
 23125 ;; Hardware stack levels required when called:    5
 23126 ;; This function calls:
 23127 ;;		_getCANFrame
 23128 ;; This function is called by:
 23129 ;;		_receivePrintEventVerbose
 23130 ;;		_readRegister
 23131 ;;		_readRegisterExtended
 23132 ;;		_writeRegisterExtended
 23133 ;; This function uses a non-reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text54
 23137  005E74                     __ptext54:
 23138                           	opt stack 0
 23139  005E74                     _getVSCPFrame:
 23140                           	opt stack 22
 23141                           
 23142                           ; BSR set to: 0
 23143                           ;main.c: 3606: uint32_t id;
 23144                           ;main.c: 3608: if (!getCANFrame(&id, pSize, pData)) {
 23145                           
 23146                           ; BSR set to: 0
 23147                           ;incstack = 0
 23148                           ;incstack = 0
 23149  005E74  C074  F068         	movff	getVSCPFrame@pSize,?_getCANFrame
 23150  005E78  C075  F069         	movff	getVSCPFrame@pSize+1,?_getCANFrame+1
 23151  005E7C  C076  F06A         	movff	getVSCPFrame@pData,?_getCANFrame+2
 23152  005E80  C077  F06B         	movff	getVSCPFrame@pData+1,?_getCANFrame+3
 23153  005E84  0E7C               	movlw	getVSCPFrame@id& (0+255)
 23154  005E86  EC62  F02C         	call	_getCANFrame
 23155  005E8A  0900               	iorlw	0
 23156  005E8C  E102               	bnz	l18618
 23157                           
 23158                           ; BSR set to: 0
 23159                           ;main.c: 3609: return 0;
 23160  005E8E  0E00               	movlw	0
 23161  005E90  D033               	goto	l1444
 23162  005E92                     l18618:
 23163                           
 23164                           ; BSR set to: 0
 23165                           ;main.c: 3610: }
 23166                           ;main.c: 3612: *pNodeId = id & 0x0ff;
 23167  005E92  C070  FFD9         	movff	getVSCPFrame@pNodeId,fsr2l
 23168  005E96  C071  FFDA         	movff	getVSCPFrame@pNodeId+1,fsr2h
 23169  005E9A  C07C  FFDF         	movff	getVSCPFrame@id,indf2
 23170                           
 23171                           ;main.c: 3613: *pvscptype = (id >> 8) & 0xff;
 23172  005E9E  C06E  FFD9         	movff	getVSCPFrame@pvscptype,fsr2l
 23173  005EA2  C06F  FFDA         	movff	getVSCPFrame@pvscptype+1,fsr2h
 23174  005EA6  C07D  FFDF         	movff	getVSCPFrame@id+1,indf2
 23175                           
 23176                           ; BSR set to: 0
 23177                           ;main.c: 3614: *pvscpclass = (id >> 16) & 0x1ff;
 23178  005EAA  0100               	movlb	0	; () banked
 23179  005EAC  517E               	movf	(getVSCPFrame@id+2)& (0+255),w,b
 23180  005EAE  6F78               	movwf	??_getVSCPFrame& (0+255),b
 23181  005EB0  0E01               	movlw	1
 23182  005EB2  157F               	andwf	(getVSCPFrame@id+3)& (0+255),w,b
 23183  005EB4  6F79               	movwf	(??_getVSCPFrame+1)& (0+255),b
 23184  005EB6  C06C  FFD9         	movff	getVSCPFrame@pvscpclass,fsr2l
 23185  005EBA  C06D  FFDA         	movff	getVSCPFrame@pvscpclass+1,fsr2h
 23186  005EBE  C078  FFDE         	movff	??_getVSCPFrame,postinc2
 23187  005EC2  C079  FFDD         	movff	??_getVSCPFrame+1,postdec2
 23188                           
 23189                           ; BSR set to: 0
 23190                           ;main.c: 3615: *pPriority = (uint16_t) (0x07 & (id >> 26));
 23191  005EC6  C07C  F078         	movff	getVSCPFrame@id,??_getVSCPFrame
 23192  005ECA  C07D  F079         	movff	getVSCPFrame@id+1,??_getVSCPFrame+1
 23193  005ECE  C07E  F07A         	movff	getVSCPFrame@id+2,??_getVSCPFrame+2
 23194  005ED2  C07F  F07B         	movff	getVSCPFrame@id+3,??_getVSCPFrame+3
 23195  005ED6  0E1B               	movlw	27
 23196  005ED8  D005               	goto	u24710
 23197  005EDA                     u24715:
 23198  005EDA  90D8               	bcf	status,0,c
 23199  005EDC  337B               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 23200  005EDE  337A               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 23201  005EE0  3379               	rrcf	(??_getVSCPFrame+1)& (0+255),f,b
 23202  005EE2  3378               	rrcf	??_getVSCPFrame& (0+255),f,b
 23203  005EE4                     u24710:
 23204  005EE4  2EE8               	decfsz	wreg,f,c
 23205  005EE6  D7F9               	goto	u24715
 23206  005EE8  5178               	movf	??_getVSCPFrame& (0+255),w,b
 23207  005EEA  0B07               	andlw	7
 23208  005EEC  C072  FFD9         	movff	getVSCPFrame@pPriority,fsr2l
 23209  005EF0  C073  FFDA         	movff	getVSCPFrame@pPriority+1,fsr2h
 23210  005EF4  6EDF               	movwf	indf2,c
 23211                           
 23212                           ; BSR set to: 0
 23213                           ;main.c: 3617: return 1;
 23214  005EF6  0E01               	movlw	1
 23215  005EF8                     l1444:
 23216                           
 23217                           ; BSR set to: 0
 23218  005EF8  0012               	return	
 23219  005EFA                     __end_of_getVSCPFrame:
 23220                           	opt stack 0
 23221                           tblptru	equ	0xFF8
 23222                           tblptrh	equ	0xFF7
 23223                           tblptrl	equ	0xFF6
 23224                           tablat	equ	0xFF5
 23225                           prodh	equ	0xFF4
 23226                           prodl	equ	0xFF3
 23227                           intcon	equ	0xFF2
 23228                           indf0	equ	0xFEF
 23229                           postinc0	equ	0xFEE
 23230                           fsr0h	equ	0xFEA
 23231                           fsr0l	equ	0xFE9
 23232                           wreg	equ	0xFE8
 23233                           indf1	equ	0xFE7
 23234                           postinc1	equ	0xFE6
 23235                           postdec1	equ	0xFE5
 23236                           fsr1h	equ	0xFE2
 23237                           fsr1l	equ	0xFE1
 23238                           indf2	equ	0xFDF
 23239                           postinc2	equ	0xFDE
 23240                           postdec2	equ	0xFDD
 23241                           plusw2	equ	0xFDB
 23242                           fsr2h	equ	0xFDA
 23243                           fsr2l	equ	0xFD9
 23244                           status	equ	0xFD8
 23245                           
 23246 ;; *************** function _getCANFrame *****************
 23247 ;; Defined at:
 23248 ;;		line 3641 in file "main.c"
 23249 ;; Parameters:    Size  Location     Type
 23250 ;;  pid             1    wreg     PTR unsigned long 
 23251 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@id(4), 
 23252 ;;  pdlc            2    8[BANK0 ] PTR unsigned char 
 23253 ;;		 -> receiveSendEventSLCAN@dlc(1), receiveSendMultiEventCANAL@dlc(1), receiveSendEventCANAL@dlc(1), vscpSize(1), 
 23254 ;;  pdata           2   10[BANK0 ] PTR unsigned char 
 23255 ;;		 -> receiveSendMultiEventCANAL@data(8), receiveSendEventCANAL@data(8), vscpData(8), 
 23256 ;; Auto vars:     Size  Location     Type
 23257 ;;  pid             1   36[COMRAM] PTR unsigned long 
 23258 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@id(4), 
 23259 ;; Return value:  Size  Location     Type
 23260 ;;                  1    wreg      unsigned char 
 23261 ;; Registers used:
 23262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23263 ;; Tracked objects:
 23264 ;;		On entry : F/0
 23265 ;;		On exit  : F/0
 23266 ;;		Unchanged: 0/0
 23267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23268 ;;      Params:         0       4       0       0       0       0       0
 23269 ;;      Locals:         1       0       0       0       0       0       0
 23270 ;;      Temps:          0       0       0       0       0       0       0
 23271 ;;      Totals:         1       4       0       0       0       0       0
 23272 ;;Total ram usage:        5 bytes
 23273 ;; Hardware stack levels used:    1
 23274 ;; Hardware stack levels required when called:    4
 23275 ;; This function calls:
 23276 ;;		_fifo_read
 23277 ;; This function is called by:
 23278 ;;		_receiveSendEventCANAL
 23279 ;;		_receiveSendMultiEventCANAL
 23280 ;;		_receiveSendEventSLCAN
 23281 ;;		_getVSCPFrame
 23282 ;; This function uses a non-reentrant model
 23283 ;;
 23284                           
 23285                           	psect	text55
 23286  0058C4                     __ptext55:
 23287                           	opt stack 0
 23288  0058C4                     _getCANFrame:
 23289                           	opt stack 24
 23290                           
 23291                           ; BSR set to: 0
 23292                           ;incstack = 0
 23293                           ;incstack = 0
 23294                           ;getCANFrame@pid stored from wreg
 23295  0058C4  CFE8 F025          	movff	wreg,getCANFrame@pid
 23296                           
 23297                           ; BSR set to: 0
 23298                           ;main.c: 3642: if ( fifo_canrxcount ) {
 23299  0058C8  5031               	movf	_fifo_canrxcount,w,c	;volatile
 23300  0058CA  E011               	bz	l18638
 23301                           
 23302                           ; BSR set to: 0
 23303                           ;main.c: 3645: (INTCONbits.GIE = 0);
 23304  0058CC  9EF2               	bcf	intcon,7,c	;volatile
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;main.c: 3646: if ( 4 != fifo_read( &canInputFifo, (uint8_t *)pid, 4 ) ) {
 23308  0058CE  D848               	call	PL66	;call to abstracted procedure
 23309  0058D0  641F               	cpfsgt	?_fifo_read,c
 23310  0058D2  6A20               	clrf	?_fifo_read+1,c
 23311  0058D4  C025  F021         	movff	getCANFrame@pid,?_fifo_read+2
 23312  0058D8  6A22               	clrf	?_fifo_read+3,c
 23313  0058DA  6A24               	clrf	?_fifo_read+5,c
 23314  0058DC  0E04               	movlw	4
 23315  0058DE  6E23               	movwf	?_fifo_read+4,c
 23316  0058E0  ECA7  F029         	call	_fifo_read	;wreg free
 23317  0058E4  501F               	movf	?_fifo_read,w,c
 23318  0058E6  0A04               	xorlw	4
 23319  0058E8  1020               	iorwf	?_fifo_read+1,w,c
 23320  0058EA  E003               	bz	l18642
 23321  0058EC                     l18636:
 23322                           
 23323                           ; BSR set to: 0
 23324                           ;main.c: 3647: (INTCONbits.GIE = 1);
 23325  0058EC  8EF2               	bsf	intcon,7,c	;volatile
 23326  0058EE                     l18638:
 23327                           
 23328                           ; BSR set to: 0
 23329                           ;main.c: 3648: return 0;
 23330  0058EE  0E00               	movlw	0
 23331  0058F0  D036               	goto	l1453
 23332  0058F2                     l18642:
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;main.c: 3649: }
 23336                           ;main.c: 3652: if ( 1 != fifo_read( &canInputFifo, pdlc, 1 ) ) {
 23337  0058F2  D836               	call	PL66	;call to abstracted procedure
 23338  0058F4  641F               	cpfsgt	?_fifo_read,c
 23339  0058F6  6A20               	clrf	?_fifo_read+1,c
 23340  0058F8  C068  F021         	movff	getCANFrame@pdlc,?_fifo_read+2
 23341  0058FC  C069  F022         	movff	getCANFrame@pdlc+1,?_fifo_read+3
 23342  005900  6A24               	clrf	?_fifo_read+5,c
 23343  005902  0E01               	movlw	1
 23344  005904  6E23               	movwf	?_fifo_read+4,c
 23345  005906  ECA7  F029         	call	_fifo_read	;wreg free
 23346  00590A  041F               	decf	?_fifo_read,w,c
 23347  00590C  1020               	iorwf	?_fifo_read+1,w,c
 23348  00590E  E1EE               	bnz	l18636
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;main.c: 3655: }
 23352                           ;main.c: 3658: if ( *pdlc > 8 ) {
 23353  005910  C068  FFD9         	movff	getCANFrame@pdlc,fsr2l
 23354  005914  C069  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 23355  005918  0E08               	movlw	8
 23356  00591A  64DF               	cpfsgt	indf2,c
 23357  00591C  D005               	goto	l18654
 23358                           
 23359                           ; BSR set to: 0
 23360                           ;main.c: 3659: *pdlc = 0;
 23361  00591E  C068  FFD9         	movff	getCANFrame@pdlc,fsr2l
 23362  005922  C069  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 23363  005926  6ADF               	clrf	indf2,c
 23364  005928                     l18654:
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;main.c: 3660: }
 23368                           ;main.c: 3663: if ( *pdlc != fifo_read( &canInputFifo, pdata, *pdlc ) ) {
 23369  005928  D81B               	call	PL66	;call to abstracted procedure
 23370  00592A  641F               	cpfsgt	?_fifo_read,c
 23371  00592C  6A20               	clrf	?_fifo_read+1,c
 23372  00592E  C06A  F021         	movff	getCANFrame@pdata,?_fifo_read+2
 23373  005932  C06B  F022         	movff	getCANFrame@pdata+1,?_fifo_read+3
 23374  005936  C068  FFD9         	movff	getCANFrame@pdlc,fsr2l
 23375  00593A  C069  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 23376  00593E  50DF               	movf	indf2,w,c
 23377  005940  6E23               	movwf	?_fifo_read+4,c
 23378  005942  6A24               	clrf	?_fifo_read+5,c
 23379  005944  ECA7  F029         	call	_fifo_read	;wreg free
 23380  005948  C068  FFD9         	movff	getCANFrame@pdlc,fsr2l
 23381  00594C  C069  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 23382  005950  50DF               	movf	indf2,w,c
 23383  005952  181F               	xorwf	?_fifo_read,w,c
 23384  005954  1020               	iorwf	?_fifo_read+1,w,c
 23385  005956  E1CA               	bnz	l18636
 23386                           
 23387                           ; BSR set to: 0
 23388                           ;main.c: 3666: }
 23389                           ;main.c: 3668: fifo_canrxcount--;
 23390  005958  0631               	decf	_fifo_canrxcount,f,c	;volatile
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;main.c: 3670: (INTCONbits.GIE = 1);
 23394  00595A  8EF2               	bsf	intcon,7,c	;volatile
 23395                           
 23396                           ; BSR set to: 0
 23397                           ;main.c: 3672: return 1;
 23398  00595C  0E01               	movlw	1
 23399  00595E                     l1453:
 23400                           
 23401                           ; BSR set to: 0
 23402  00595E  0012               	return	
 23403  005960                     __end_of_getCANFrame:
 23404                           	opt stack 0
 23405  005960                     PL66:
 23406                           	opt stack 24
 23407  005960  0E33               	movlw	low _canInputFifo
 23408  005962  6E1F               	movwf	?_fifo_read,c
 23409  005964  0E00               	movlw	high _canInputFifo
 23410  005966  6E20               	movwf	?_fifo_read+1,c
 23411  005968  0E0F               	movlw	15
 23412  00596A  6E20               	movwf	?_fifo_read+1,c
 23413  00596C  0E5F               	movlw	__accesstop+-1
 23414  00596E  0012               	return	
 23415  005970                     __end_ofPL66:
 23416                           	opt stack 0
 23417                           tblptru	equ	0xFF8
 23418                           tblptrh	equ	0xFF7
 23419                           tblptrl	equ	0xFF6
 23420                           tablat	equ	0xFF5
 23421                           prodh	equ	0xFF4
 23422                           prodl	equ	0xFF3
 23423                           intcon	equ	0xFF2
 23424                           indf0	equ	0xFEF
 23425                           postinc0	equ	0xFEE
 23426                           fsr0h	equ	0xFEA
 23427                           fsr0l	equ	0xFE9
 23428                           wreg	equ	0xFE8
 23429                           indf1	equ	0xFE7
 23430                           postinc1	equ	0xFE6
 23431                           postdec1	equ	0xFE5
 23432                           fsr1h	equ	0xFE2
 23433                           fsr1l	equ	0xFE1
 23434                           indf2	equ	0xFDF
 23435                           postinc2	equ	0xFDE
 23436                           postdec2	equ	0xFDD
 23437                           plusw2	equ	0xFDB
 23438                           fsr2h	equ	0xFDA
 23439                           fsr2l	equ	0xFD9
 23440                           status	equ	0xFD8
 23441                           
 23442 ;; *************** function _fifo_read *****************
 23443 ;; Defined at:
 23444 ;;		line 29 in file "fifo.c"
 23445 ;; Parameters:    Size  Location     Type
 23446 ;;  f               2   30[COMRAM] PTR struct .
 23447 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 23448 ;;  buf             2   32[COMRAM] PTR const void 
 23449 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@dlc(1), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@data(8
      +), 
 23450 ;;		 -> receiveSendMultiEventCANAL@dlc(1), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@data(8), receiveSendE
      +ventCANAL@dlc(1), 
 23451 ;;		 -> receiveSendEventCANAL@id(4), doModeSLCAN@c(1), doModeVscp@c(1), vscpData(8), 
 23452 ;;		 -> vscpSize(1), doModeVerbose@c(1), main@c(1), 
 23453 ;;  nbytes          2   34[COMRAM] unsigned short 
 23454 ;; Auto vars:     Size  Location     Type
 23455 ;;  i               2    6[BANK0 ] unsigned short 
 23456 ;;  p               2    4[BANK0 ] PTR unsigned char 
 23457 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@dlc(1), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@data(8
      +), 
 23458 ;;		 -> receiveSendMultiEventCANAL@dlc(1), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@data(8), receiveSendE
      +ventCANAL@dlc(1), 
 23459 ;;		 -> receiveSendEventCANAL@id(4), doModeSLCAN@c(1), doModeVscp@c(1), vscpData(8), 
 23460 ;;		 -> vscpSize(1), doModeVerbose@c(1), main@c(1), 
 23461 ;; Return value:  Size  Location     Type
 23462 ;;                  2   30[COMRAM] unsigned short 
 23463 ;; Registers used:
 23464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23465 ;; Tracked objects:
 23466 ;;		On entry : D/0
 23467 ;;		On exit  : F/0
 23468 ;;		Unchanged: 0/0
 23469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23470 ;;      Params:         6       0       0       0       0       0       0
 23471 ;;      Locals:         0       4       0       0       0       0       0
 23472 ;;      Temps:          0       4       0       0       0       0       0
 23473 ;;      Totals:         6       8       0       0       0       0       0
 23474 ;;Total ram usage:       14 bytes
 23475 ;; Hardware stack levels used:    1
 23476 ;; Hardware stack levels required when called:    3
 23477 ;; This function calls:
 23478 ;;		Nothing
 23479 ;; This function is called by:
 23480 ;;		_main
 23481 ;;		_doModeVerbose
 23482 ;;		_doModeVscp
 23483 ;;		_doModeSLCAN
 23484 ;;		_getCANFrame
 23485 ;; This function uses a non-reentrant model
 23486 ;;
 23487                           
 23488                           	psect	text56
 23489  00534E                     __ptext56:
 23490                           	opt stack 0
 23491  00534E                     _fifo_read:
 23492                           	opt stack 24
 23493                           
 23494                           ;fifo.c: 30: uint16_t i;
 23495                           ;fifo.c: 31: uint8_t *p;
 23496                           ;fifo.c: 32: p = buf;
 23497                           
 23498                           ; BSR set to: 0
 23499                           ;incstack = 0
 23500                           ;incstack = 0
 23501  00534E  C021  F064         	movff	fifo_read@buf,fifo_read@p
 23502  005352  C022  F065         	movff	fifo_read@buf+1,fifo_read@p+1
 23503                           
 23504                           ;fifo.c: 34: for (i = 0; i < nbytes; i++) {
 23505  005356  0100               	movlb	0	; () banked
 23506  005358  6B66               	clrf	fifo_read@i& (0+255),b
 23507  00535A  6B67               	clrf	(fifo_read@i+1)& (0+255),b
 23508  00535C  D04A               	goto	l15462
 23509  00535E                     l15448:
 23510                           
 23511                           ; BSR set to: 0
 23512                           ;fifo.c: 36: if ( f->tail != f->head ) {
 23513  00535E  EE20 F002          	lfsr	2,2
 23514  005362  D851               	call	PL54	;call to abstracted procedure
 23515  005364  18E5               	xorwf	postdec1,w,c
 23516  005366  CFDF FFE8          	movff	indf2,wreg
 23517  00536A  B4D8               	btfsc	status,2,c
 23518  00536C  18E7               	xorwf	indf1,w,c
 23519  00536E  E03A               	bz	l1704
 23520                           
 23521                           ; BSR set to: 0
 23522                           ;fifo.c: 37: *p++ = f->buf[ f->tail ];
 23523  005370  EE20 F004          	lfsr	2,4
 23524  005374  501F               	movf	fifo_read@f,w,c
 23525  005376  26D9               	addwf	fsr2l,f,c
 23526  005378  5020               	movf	fifo_read@f+1,w,c
 23527  00537A  22DA               	addwfc	fsr2h,f,c
 23528  00537C  CFDE F060          	movff	postinc2,??_fifo_read
 23529  005380  CFDD F061          	movff	postdec2,??_fifo_read+1
 23530  005384  C01F  FFD9         	movff	fifo_read@f,fsr2l
 23531  005388  C020  FFDA         	movff	fifo_read@f+1,fsr2h
 23532  00538C  CFDE F062          	movff	postinc2,??_fifo_read+2
 23533  005390  CFDD F063          	movff	postdec2,??_fifo_read+3
 23534  005394  5160               	movf	??_fifo_read& (0+255),w,b
 23535  005396  2562               	addwf	(??_fifo_read+2)& (0+255),w,b
 23536  005398  6ED9               	movwf	fsr2l,c
 23537  00539A  5161               	movf	(??_fifo_read+1)& (0+255),w,b
 23538  00539C  2163               	addwfc	(??_fifo_read+3)& (0+255),w,b
 23539  00539E  6EDA               	movwf	fsr2h,c
 23540  0053A0  C064  FFE1         	movff	fifo_read@p,fsr1l
 23541  0053A4  C065  FFE2         	movff	fifo_read@p+1,fsr1h
 23542  0053A8  CFDF FFE7          	movff	indf2,indf1
 23543                           
 23544                           ; BSR set to: 0
 23545  0053AC  4B64               	infsnz	fifo_read@p& (0+255),f,b
 23546  0053AE  2B65               	incf	(fifo_read@p+1)& (0+255),f,b
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;fifo.c: 38: f->tail++;
 23550  0053B0  EE20 F004          	lfsr	2,4
 23551  0053B4  501F               	movf	fifo_read@f,w,c
 23552  0053B6  26D9               	addwf	fsr2l,f,c
 23553  0053B8  5020               	movf	fifo_read@f+1,w,c
 23554  0053BA  22DA               	addwfc	fsr2h,f,c
 23555  0053BC  2ADE               	incf	postinc2,f,c
 23556  0053BE  0E00               	movlw	0
 23557  0053C0  22DD               	addwfc	postdec2,f,c
 23558                           
 23559                           ; BSR set to: 0
 23560                           ;fifo.c: 39: if (f->tail >= f->size) {
 23561  0053C2  EE20 F006          	lfsr	2,6
 23562  0053C6  D81F               	call	PL54	;call to abstracted procedure
 23563  0053C8  5CE5               	subwf	postdec1,w,c
 23564  0053CA  E102               	bnz	u19755
 23565  0053CC  50DF               	movf	indf2,w,c
 23566  0053CE  5CE7               	subwf	indf1,w,c
 23567  0053D0                     u19755:
 23568  0053D0  E30E               	bnc	l15460
 23569                           
 23570                           ; BSR set to: 0
 23571                           ;fifo.c: 40: f->tail = 0;
 23572  0053D2  EE20 F004          	lfsr	2,4
 23573  0053D6  501F               	movf	fifo_read@f,w,c
 23574  0053D8  26D9               	addwf	fsr2l,f,c
 23575  0053DA  5020               	movf	fifo_read@f+1,w,c
 23576  0053DC  22DA               	addwfc	fsr2h,f,c
 23577  0053DE  6ADE               	clrf	postinc2,c
 23578  0053E0  6ADD               	clrf	postdec2,c
 23579  0053E2  D005               	goto	l15460
 23580  0053E4                     l1704:
 23581                           
 23582                           ; BSR set to: 0
 23583                           ;fifo.c: 43: else {
 23584                           ;fifo.c: 44: return i;
 23585  0053E4  C066  F01F         	movff	fifo_read@i,?_fifo_read
 23586  0053E8  C067  F020         	movff	fifo_read@i+1,?_fifo_read+1
 23587  0053EC  D00B               	goto	l1707
 23588  0053EE                     l15460:
 23589                           
 23590                           ; BSR set to: 0
 23591  0053EE  4B66               	infsnz	fifo_read@i& (0+255),f,b
 23592  0053F0  2B67               	incf	(fifo_read@i+1)& (0+255),f,b
 23593  0053F2                     l15462:
 23594                           
 23595                           ; BSR set to: 0
 23596  0053F2  5023               	movf	fifo_read@nbytes,w,c
 23597  0053F4  5D66               	subwf	fifo_read@i& (0+255),w,b
 23598  0053F6  5024               	movf	fifo_read@nbytes+1,w,c
 23599  0053F8  5967               	subwfb	(fifo_read@i+1)& (0+255),w,b
 23600  0053FA  E3B1               	bnc	l15448
 23601                           
 23602                           ; BSR set to: 0
 23603                           ;fifo.c: 45: }
 23604                           ;fifo.c: 47: }
 23605                           ;fifo.c: 49: return nbytes;
 23606  0053FC  C023  F01F         	movff	fifo_read@nbytes,?_fifo_read
 23607  005400  C024  F020         	movff	fifo_read@nbytes+1,?_fifo_read+1
 23608  005404                     l1707:
 23609                           
 23610                           ; BSR set to: 0
 23611  005404  0012               	return	
 23612  005406                     __end_of_fifo_read:
 23613                           	opt stack 0
 23614  005406                     PL54:
 23615                           	opt stack 24
 23616  005406  501F               	movf	fifo_read@f,w,c
 23617  005408  26D9               	addwf	fsr2l,f,c
 23618  00540A  5020               	movf	fifo_read@f+1,w,c
 23619  00540C  22DA               	addwfc	fsr2h,f,c
 23620  00540E  EE10 F004          	lfsr	1,4
 23621  005412  501F               	movf	fifo_read@f,w,c
 23622  005414  26E1               	addwf	fsr1l,f,c
 23623  005416  5020               	movf	fifo_read@f+1,w,c
 23624  005418  22E2               	addwfc	fsr1h,f,c
 23625  00541A  52E6               	movf	postinc1,f,c
 23626  00541C  52DE               	movf	postinc2,f,c
 23627  00541E  50DD               	movf	postdec2,w,c
 23628  005420  0012               	return	
 23629  005422                     __end_ofPL54:
 23630                           	opt stack 0
 23631                           tblptru	equ	0xFF8
 23632                           tblptrh	equ	0xFF7
 23633                           tblptrl	equ	0xFF6
 23634                           tablat	equ	0xFF5
 23635                           prodh	equ	0xFF4
 23636                           prodl	equ	0xFF3
 23637                           intcon	equ	0xFF2
 23638                           indf0	equ	0xFEF
 23639                           postinc0	equ	0xFEE
 23640                           fsr0h	equ	0xFEA
 23641                           fsr0l	equ	0xFE9
 23642                           wreg	equ	0xFE8
 23643                           indf1	equ	0xFE7
 23644                           postinc1	equ	0xFE6
 23645                           postdec1	equ	0xFE5
 23646                           fsr1h	equ	0xFE2
 23647                           fsr1l	equ	0xFE1
 23648                           indf2	equ	0xFDF
 23649                           postinc2	equ	0xFDE
 23650                           postdec2	equ	0xFDD
 23651                           plusw2	equ	0xFDB
 23652                           fsr2h	equ	0xFDA
 23653                           fsr2l	equ	0xFD9
 23654                           status	equ	0xFD8
 23655                           
 23656 ;; *************** function _sprintf *****************
 23657 ;; Defined at:
 23658 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
 23659 ;; Parameters:    Size  Location     Type
 23660 ;;  sp              2   13[BANK0 ] PTR unsigned char 
 23661 ;;		 -> wrkbuf(80), 
 23662 ;;  f               2   15[BANK0 ] PTR const unsigned char 
 23663 ;;		 -> STR_245(3), STR_244(7), STR_238(3), STR_237(7), 
 23664 ;;		 -> STR_233(4), STR_232(8), STR_229(4), STR_228(8), 
 23665 ;;		 -> STR_225(4), STR_224(8), STR_221(4), STR_220(8), 
 23666 ;;		 -> STR_217(4), STR_216(7), STR_213(4), STR_212(7), 
 23667 ;;		 -> STR_209(4), STR_208(7), STR_205(4), STR_204(7), 
 23668 ;;		 -> STR_199(3), STR_198(7), STR_196(3), STR_195(7), 
 23669 ;;		 -> STR_193(3), STR_192(7), STR_190(3), STR_189(7), 
 23670 ;;		 -> STR_187(3), STR_186(7), STR_184(4), STR_183(8), 
 23671 ;;		 -> STR_181(3), STR_180(7), STR_101(3), STR_100(7), 
 23672 ;;		 -> STR_96(4), STR_95(8), STR_92(4), STR_91(8), 
 23673 ;;		 -> STR_77(3), STR_76(7), STR_75(3), STR_74(7), 
 23674 ;;		 -> STR_72(6), STR_71(10), STR_66(3), STR_65(7), 
 23675 ;;		 -> STR_63(3), STR_62(7), STR_61(3), STR_60(7), 
 23676 ;;		 -> STR_58(6), STR_57(10), 
 23677 ;; Auto vars:     Size  Location     Type
 23678 ;;  idx             1   24[BANK0 ] unsigned char 
 23679 ;;  _val            4   36[BANK0 ] struct .
 23680 ;;  flag            2   41[BANK0 ] unsigned short 
 23681 ;;  width           2   34[BANK0 ] int 
 23682 ;;  prec            2   32[BANK0 ] int 
 23683 ;;  c               1   40[BANK0 ] char 
 23684 ;;  ap              1   31[BANK0 ] PTR void [1]
 23685 ;;		 -> ?_sprintf(2), 
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  2   13[BANK0 ] int 
 23688 ;; Registers used:
 23689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23690 ;; Tracked objects:
 23691 ;;		On entry : F/0
 23692 ;;		On exit  : F/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23695 ;;      Params:         0       8       0       0       0       0       0
 23696 ;;      Locals:         0      19       0       0       0       0       0
 23697 ;;      Temps:          0       3       0       0       0       0       0
 23698 ;;      Totals:         0      30       0       0       0       0       0
 23699 ;;Total ram usage:       30 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:    4
 23702 ;; This function calls:
 23703 ;;		_isdigit
 23704 ;;		___lldiv
 23705 ;;		___llmod
 23706 ;;		___wmul
 23707 ;; This function is called by:
 23708 ;;		_doModeVerbose
 23709 ;;		_receivePrintEventVerbose
 23710 ;;		_printStatistics
 23711 ;;		_printErrors
 23712 ;; This function uses a non-reentrant model
 23713 ;;
 23714                           
 23715                           	psect	text57
 23716  002028                     __ptext57:
 23717                           	opt stack 0
 23718  002028                     _sprintf:
 23719                           	opt stack 25
 23720                           
 23721                           ; BSR set to: 0
 23722                           ;doprnt.c: 494: va_list ap;
 23723                           ;doprnt.c: 499: signed char c;
 23724                           ;doprnt.c: 501: int width;
 23725                           ;doprnt.c: 504: int prec;
 23726                           ;doprnt.c: 508: unsigned short flag;
 23727                           ;doprnt.c: 527: union {
 23728                           ;doprnt.c: 528: unsigned long _val;
 23729                           ;doprnt.c: 529: struct {
 23730                           ;doprnt.c: 530: const char * _cp;
 23731                           ;doprnt.c: 531: unsigned _len;
 23732                           ;doprnt.c: 532: } _str;
 23733                           ;doprnt.c: 533: } _val;
 23734                           ;doprnt.c: 542: *ap = __va_start();
 23735                           
 23736                           ; BSR set to: 0
 23737                           ;incstack = 0
 23738                           ;incstack = 0
 23739  002028  0E71               	movlw	low (?_sprintf+4)
 23740  00202A  6F7F               	movwf	sprintf@ap& (0+255),b
 23741                           
 23742                           ;doprnt.c: 545: while(c = *f++) {
 23743  00202C  D330               	goto	l17916
 23744  00202E                     l17582:
 23745                           
 23746                           ; BSR set to: 0
 23747                           ;doprnt.c: 547: if(c != '%')
 23748  00202E  5188               	movf	sprintf@c& (0+255),w,b
 23749  002030  0A25               	xorlw	37
 23750  002032  E009               	bz	l1791
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;doprnt.c: 549: {
 23754                           ;doprnt.c: 550: ((*sp++ = (c)));
 23755  002034  C06D  FFD9         	movff	sprintf@sp,fsr2l
 23756  002038  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 23757  00203C  C088  FFDF         	movff	sprintf@c,indf2
 23758                           
 23759                           ; BSR set to: 0
 23760  002040  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 23761  002042  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 23762                           
 23763                           ;doprnt.c: 551: continue;
 23764  002044  D324               	goto	l17916
 23765  002046                     l1791:
 23766                           
 23767                           ; BSR set to: 0
 23768                           ;doprnt.c: 552: }
 23769                           ;doprnt.c: 555: width = 0;
 23770  002046  6B82               	clrf	sprintf@width& (0+255),b
 23771  002048  6B83               	clrf	(sprintf@width+1)& (0+255),b
 23772                           
 23773                           ;doprnt.c: 557: flag = 0;
 23774  00204A  6B89               	clrf	sprintf@flag& (0+255),b
 23775  00204C  6B8A               	clrf	(sprintf@flag+1)& (0+255),b
 23776  00204E  D009               	goto	l17598
 23777  002050                     l17588:
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;doprnt.c: 563: flag |= 0x08;
 23781  002050  8789               	bsf	sprintf@flag& (0+255),3,b
 23782  002052  D005               	goto	L50
 23783  002054                     l17590:
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;doprnt.c: 570: flag |= 0x01;
 23787  002054  8189               	bsf	sprintf@flag& (0+255),0,b
 23788  002056  D003               	goto	L50
 23789  002058                     l17592:
 23790                           
 23791                           ; BSR set to: 0
 23792                           ;doprnt.c: 583: flag |= 0x800;
 23793  002058  878A               	bsf	(sprintf@flag+1)& (0+255),3,b
 23794  00205A  D001               	goto	L50
 23795  00205C                     l17594:
 23796                           
 23797                           ; BSR set to: 0
 23798                           ;doprnt.c: 589: flag |= 0x04;
 23799  00205C  8589               	bsf	sprintf@flag& (0+255),2,b
 23800  00205E                     L50:
 23801                           
 23802                           ;doprnt.c: 590: f++;
 23803  00205E  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23804  002060  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23805  002062                     l17598:
 23806                           
 23807                           ; BSR set to: 0
 23808  002062  C06F  FFF6         	movff	sprintf@f,tblptrl
 23809  002066  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23810  00206A  0008               	tblrd		*
 23811  00206C  50F5               	movf	tablat,w,c
 23812                           
 23813                           ; Switch size 1, requested type "space"
 23814                           ; Number of cases is 4, Range of values is 32 to 48
 23815                           ; switch strategies available:
 23816                           ; Name         Instructions Cycles
 23817                           ; simple_byte           13     7 (average)
 23818                           ;	Chosen strategy is simple_byte
 23819  00206E  0A20               	xorlw	32	; case 32
 23820  002070  E0F1               	bz	l17590
 23821  002072  0A03               	xorlw	3	; case 35
 23822  002074  E0F1               	bz	l17592
 23823  002076  0A0E               	xorlw	14	; case 45
 23824  002078  E0EB               	bz	l17588
 23825  00207A  0A1D               	xorlw	29	; case 48
 23826  00207C  E0EF               	bz	l17594
 23827                           
 23828                           ; BSR set to: 0
 23829                           ;doprnt.c: 602: if(flag & 0x08)
 23830  00207E  B789               	btfsc	sprintf@flag& (0+255),3,b
 23831                           
 23832                           ; BSR set to: 0
 23833                           ;doprnt.c: 603: flag &= ~0x04;
 23834  002080  9589               	bcf	sprintf@flag& (0+255),2,b
 23835                           
 23836                           ; BSR set to: 0
 23837                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 23838  002082  C06F  FFF6         	movff	sprintf@f,tblptrl
 23839  002086  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23840  00208A  0008               	tblrd		*
 23841  00208C  50F5               	movf	tablat,w,c
 23842  00208E  EC3D  F035         	call	_isdigit
 23843  002092  E326               	bnc	l17614
 23844                           
 23845                           ;doprnt.c: 607: width = 0;
 23846  002094  0100               	movlb	0	; () banked
 23847  002096  6B82               	clrf	sprintf@width& (0+255),b
 23848  002098  6B83               	clrf	(sprintf@width+1)& (0+255),b
 23849  00209A                     l17606:
 23850                           
 23851                           ;doprnt.c: 609: width *= 10;
 23852  00209A  C082  F023         	movff	sprintf@width,?___wmul
 23853  00209E  C083  F024         	movff	sprintf@width+1,?___wmul+1
 23854  0020A2  6A26               	clrf	?___wmul+3,c
 23855  0020A4  0E0A               	movlw	10
 23856  0020A6  6E25               	movwf	?___wmul+2,c
 23857  0020A8  EC49  F034         	call	___wmul	;wreg free
 23858  0020AC  C023  F082         	movff	?___wmul,sprintf@width
 23859  0020B0  C024  F083         	movff	?___wmul+1,sprintf@width+1
 23860                           
 23861                           ; BSR set to: 0
 23862                           ;doprnt.c: 610: width += *f++ - '0';
 23863  0020B4  C06F  FFF6         	movff	sprintf@f,tblptrl
 23864  0020B8  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23865  0020BC  0008               	tblrd		*
 23866  0020BE  CFF5 F075          	movff	tablat,??_sprintf
 23867  0020C2  0ED0               	movlw	208
 23868  0020C4  2575               	addwf	??_sprintf& (0+255),w,b
 23869  0020C6  6F76               	movwf	(??_sprintf+1)& (0+255),b
 23870  0020C8  6B77               	clrf	(??_sprintf+2)& (0+255),b
 23871  0020CA  0EFF               	movlw	255
 23872  0020CC  2377               	addwfc	(??_sprintf+2)& (0+255),f,b
 23873  0020CE  5176               	movf	(??_sprintf+1)& (0+255),w,b
 23874  0020D0  2782               	addwf	sprintf@width& (0+255),f,b
 23875  0020D2  5177               	movf	(??_sprintf+2)& (0+255),w,b
 23876  0020D4  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 23877                           
 23878                           ; BSR set to: 0
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 23882  0020D6  DB39               	call	PL110	;call to abstracted procedure
 23883  0020D8  EC3D  F035         	call	_isdigit
 23884  0020DC  E315               	bnc	l17622
 23885  0020DE  D7DD               	goto	l17606
 23886  0020E0                     l17614:
 23887  0020E0  0100               	movlb	0	; () banked
 23888  0020E2  C06F  FFF6         	movff	sprintf@f,tblptrl
 23889  0020E6  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23890  0020EA  0008               	tblrd		*
 23891  0020EC  50F5               	movf	tablat,w,c
 23892  0020EE  0A2A               	xorlw	42
 23893  0020F0  E10B               	bnz	l17622
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 23897  0020F2  517F               	movf	sprintf@ap& (0+255),w,b
 23898  0020F4  6ED9               	movwf	fsr2l,c
 23899  0020F6  6ADA               	clrf	fsr2h,c
 23900  0020F8  CFDE F082          	movff	postinc2,sprintf@width
 23901  0020FC  CFDD F083          	movff	postdec2,sprintf@width+1
 23902                           
 23903                           ; BSR set to: 0
 23904  002100  0E02               	movlw	2
 23905  002102  277F               	addwf	sprintf@ap& (0+255),f,b
 23906                           
 23907                           ; BSR set to: 0
 23908                           ;doprnt.c: 615: f++;
 23909  002104  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23910  002106  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23911  002108                     l17622:
 23912                           
 23913                           ;doprnt.c: 617: }
 23914                           ;doprnt.c: 620: if(*f == '.') {
 23915  002108  0100               	movlb	0	; () banked
 23916  00210A  C06F  FFF6         	movff	sprintf@f,tblptrl
 23917  00210E  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23918  002112  0008               	tblrd		*
 23919  002114  50F5               	movf	tablat,w,c
 23920  002116  0A2E               	xorlw	46
 23921  002118  E137               	bnz	l1807
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;doprnt.c: 621: flag |= 0x4000;
 23925  00211A  8D8A               	bsf	(sprintf@flag+1)& (0+255),6,b
 23926                           
 23927                           ;doprnt.c: 622: f++;
 23928                           
 23929                           ; BSR set to: 0
 23930                           ;doprnt.c: 624: if(*f == '*') {
 23931  00211C  DB16               	call	PL110	;call to abstracted procedure
 23932  00211E  0A2A               	xorlw	42
 23933  002120  E10C               	bnz	l1808
 23934                           
 23935                           ; BSR set to: 0
 23936                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 23937  002122  517F               	movf	sprintf@ap& (0+255),w,b
 23938  002124  6ED9               	movwf	fsr2l,c
 23939  002126  6ADA               	clrf	fsr2h,c
 23940  002128  CFDE F080          	movff	postinc2,sprintf@prec
 23941  00212C  CFDD F081          	movff	postdec2,sprintf@prec+1
 23942                           
 23943                           ; BSR set to: 0
 23944  002130  0E02               	movlw	2
 23945  002132  277F               	addwf	sprintf@ap& (0+255),f,b
 23946                           
 23947                           ; BSR set to: 0
 23948                           ;doprnt.c: 626: f++;
 23949  002134  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23950  002136  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23951                           
 23952                           ;doprnt.c: 627: } else
 23953  002138  D088               	goto	l17692
 23954  00213A                     l1808:
 23955                           
 23956                           ; BSR set to: 0
 23957                           ;doprnt.c: 629: {
 23958                           ;doprnt.c: 630: prec = 0;
 23959  00213A  6B80               	clrf	sprintf@prec& (0+255),b
 23960  00213C  6B81               	clrf	(sprintf@prec+1)& (0+255),b
 23961                           
 23962                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 23963  00213E  D01A               	goto	l17638
 23964  002140                     l17634:
 23965                           
 23966                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 23967  002140  C080  F023         	movff	sprintf@prec,?___wmul
 23968  002144  C081  F024         	movff	sprintf@prec+1,?___wmul+1
 23969  002148  6A26               	clrf	?___wmul+3,c
 23970  00214A  0E0A               	movlw	10
 23971  00214C  6E25               	movwf	?___wmul+2,c
 23972  00214E  EC49  F034         	call	___wmul	;wreg free
 23973  002152  C06F  FFF6         	movff	sprintf@f,tblptrl
 23974  002156  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23975  00215A  0008               	tblrd		*
 23976  00215C  50F5               	movf	tablat,w,c
 23977  00215E  2623               	addwf	?___wmul,f,c
 23978  002160  0E00               	movlw	0
 23979  002162  2224               	addwfc	?___wmul+1,f,c
 23980  002164  0ED0               	movlw	208
 23981  002166  2423               	addwf	?___wmul,w,c
 23982  002168  6F80               	movwf	sprintf@prec& (0+255),b
 23983  00216A  0EFF               	movlw	255
 23984  00216C  2024               	addwfc	?___wmul+1,w,c
 23985  00216E  6F81               	movwf	(sprintf@prec+1)& (0+255),b
 23986                           
 23987                           ; BSR set to: 0
 23988  002170  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23989  002172  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23990  002174                     l17638:
 23991                           
 23992                           ; BSR set to: 0
 23993  002174  C06F  FFF6         	movff	sprintf@f,tblptrl
 23994  002178  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23995  00217C  0008               	tblrd		*
 23996  00217E  50F5               	movf	tablat,w,c
 23997  002180  EC3D  F035         	call	_isdigit
 23998  002184  E362               	bnc	l17692
 23999  002186  D7DC               	goto	l17634
 24000  002188                     l1807:
 24001                           
 24002                           ; BSR set to: 0
 24003                           ;doprnt.c: 635: prec = 0;
 24004  002188  6B80               	clrf	sprintf@prec& (0+255),b
 24005  00218A  6B81               	clrf	(sprintf@prec+1)& (0+255),b
 24006  00218C  D05E               	goto	l17692
 24007  00218E                     l17640:
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;doprnt.c: 652: flag |= 0x10;
 24011  00218E  8989               	bsf	sprintf@flag& (0+255),4,b
 24012                           
 24013                           ;doprnt.c: 653: goto loop;
 24014  002190  D05C               	goto	l17692
 24015  002192                     l17642:
 24016                           
 24017                           ; BSR set to: 0
 24018                           ;doprnt.c: 700: flag |= 0x40;
 24019  002192  8D89               	bsf	sprintf@flag& (0+255),6,b
 24020                           
 24021                           ;doprnt.c: 702: break;
 24022  002194  D070               	goto	l17694
 24023  002196                     l17644:
 24024                           
 24025                           ; BSR set to: 0
 24026                           ;doprnt.c: 723: flag |= 0x20;
 24027  002196  8B89               	bsf	sprintf@flag& (0+255),5,b
 24028  002198                     l1824:
 24029                           
 24030                           ; BSR set to: 0
 24031                           ;doprnt.c: 730: flag |= 0x80;
 24032  002198  8F89               	bsf	sprintf@flag& (0+255),7,b
 24033                           
 24034                           ;doprnt.c: 732: break;
 24035  00219A  D06D               	goto	l17694
 24036  00219C                     l17646:
 24037                           
 24038                           ; BSR set to: 0
 24039                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 24040  00219C  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24041  00219E  1180               	iorwf	sprintf@prec& (0+255),w,b
 24042  0021A0  E009               	bz	l17652
 24043                           
 24044                           ; BSR set to: 0
 24045  0021A2  5185               	movf	(sprintf@_val+1)& (0+255),w,b
 24046  0021A4  5D80               	subwf	sprintf@prec& (0+255),w,b
 24047  0021A6  5186               	movf	(sprintf@_val+2)& (0+255),w,b
 24048  0021A8  5981               	subwfb	(sprintf@prec+1)& (0+255),w,b
 24049  0021AA  E204               	bc	l17652
 24050                           
 24051                           ; BSR set to: 0
 24052                           ;doprnt.c: 763: _val._str._len = prec;
 24053  0021AC  C080  F085         	movff	sprintf@prec,sprintf@_val+1
 24054  0021B0  C081  F086         	movff	sprintf@prec+1,sprintf@_val+2
 24055  0021B4                     l17652:
 24056                           
 24057                           ; BSR set to: 0
 24058                           ;doprnt.c: 766: if(width > _val._str._len)
 24059  0021B4  5182               	movf	sprintf@width& (0+255),w,b
 24060  0021B6  5D85               	subwf	(sprintf@_val+1)& (0+255),w,b
 24061  0021B8  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24062  0021BA  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 24063  0021BC  E207               	bc	l1827
 24064                           
 24065                           ; BSR set to: 0
 24066                           ;doprnt.c: 767: width -= _val._str._len;
 24067  0021BE  EE20  F085         	lfsr	2,sprintf@_val+1
 24068  0021C2  50DE               	movf	postinc2,w,c
 24069  0021C4  5F82               	subwf	sprintf@width& (0+255),f,b
 24070  0021C6  50DD               	movf	postdec2,w,c
 24071  0021C8  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 24072  0021CA  D002               	goto	l1828
 24073  0021CC                     l1827:
 24074                           
 24075                           ; BSR set to: 0
 24076                           ;doprnt.c: 768: else
 24077                           ;doprnt.c: 769: width = 0;
 24078  0021CC  6B82               	clrf	sprintf@width& (0+255),b
 24079  0021CE  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24080  0021D0                     l1828:
 24081                           
 24082                           ; BSR set to: 0
 24083                           ;doprnt.c: 771: if(!(flag & 0x08))
 24084  0021D0  A789               	btfss	sprintf@flag& (0+255),3,b
 24085  0021D2  D004               	goto	l17662
 24086  0021D4  D015               	goto	l17670
 24087  0021D6                     l17658:
 24088                           
 24089                           ; BSR set to: 0
 24090                           ;doprnt.c: 774: ((*sp++ = (' ')));
 24091  0021D6  DAA8               	call	PL82	;call to abstracted procedure
 24092                           
 24093                           ; BSR set to: 0
 24094  0021D8  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24095  0021DA  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24096  0021DC                     l17662:
 24097                           
 24098                           ; BSR set to: 0
 24099  0021DC  0782               	decf	sprintf@width& (0+255),f,b
 24100  0021DE  DAC3               	call	PL146	;call to abstracted procedure
 24101  0021E0  B4D8               	btfsc	status,2,c
 24102  0021E2  2983               	incf	(sprintf@width+1)& (0+255),w,b
 24103  0021E4  E00D               	bz	l17670
 24104  0021E6  D7F7               	goto	l17658
 24105  0021E8                     l17664:
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 24109  0021E8  5184               	movf	sprintf@_val& (0+255),w,b
 24110  0021EA  6ED9               	movwf	fsr2l,c
 24111  0021EC  6ADA               	clrf	fsr2h,c
 24112  0021EE  C06D  FFE1         	movff	sprintf@sp,fsr1l
 24113  0021F2  C06E  FFE2         	movff	sprintf@sp+1,fsr1h
 24114  0021F6  CFDF FFE7          	movff	indf2,indf1
 24115                           
 24116                           ; BSR set to: 0
 24117  0021FA  2B84               	incf	sprintf@_val& (0+255),f,b
 24118                           
 24119                           ; BSR set to: 0
 24120  0021FC  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24121  0021FE  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24122  002200                     l17670:
 24123                           
 24124                           ; BSR set to: 0
 24125  002200  0785               	decf	(sprintf@_val+1)& (0+255),f,b
 24126  002202  A0D8               	btfss	status,0,c
 24127  002204  0786               	decf	(sprintf@_val+2)& (0+255),f,b
 24128  002206  0100               	movlb	0	; () banked
 24129  002208  2985               	incf	(sprintf@_val+1)& (0+255),w,b
 24130  00220A  B4D8               	btfsc	status,2,c
 24131  00220C  2986               	incf	(sprintf@_val+2)& (0+255),w,b
 24132  00220E  E1EC               	bnz	l17664
 24133                           
 24134                           ; BSR set to: 0
 24135                           ;doprnt.c: 779: if(flag & 0x08)
 24136  002210  B789               	btfsc	sprintf@flag& (0+255),3,b
 24137  002212  D004               	goto	l17678
 24138  002214  D23C               	goto	l17916
 24139  002216                     l17674:
 24140                           
 24141                           ; BSR set to: 0
 24142                           ;doprnt.c: 781: ((*sp++ = (' ')));
 24143  002216  DA88               	call	PL82	;call to abstracted procedure
 24144                           
 24145                           ; BSR set to: 0
 24146  002218  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24147  00221A  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24148  00221C                     l17678:
 24149                           
 24150                           ; BSR set to: 0
 24151  00221C  0782               	decf	sprintf@width& (0+255),f,b
 24152  00221E  DAA3               	call	PL146	;call to abstracted procedure
 24153  002220  B4D8               	btfsc	status,2,c
 24154  002222  2983               	incf	(sprintf@width+1)& (0+255),w,b
 24155  002224  E101 D233          	bz	l17916
 24156  002228  D7F6               	goto	l17674
 24157  00222A                     l17680:
 24158                           
 24159                           ; BSR set to: 0
 24160                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 24161  00222A  517F               	movf	sprintf@ap& (0+255),w,b
 24162  00222C  6ED9               	movwf	fsr2l,c
 24163  00222E  6ADA               	clrf	fsr2h,c
 24164  002230  50DF               	movf	indf2,w,c
 24165  002232  6F88               	movwf	sprintf@c& (0+255),b
 24166                           
 24167                           ; BSR set to: 0
 24168  002234  0E02               	movlw	2
 24169  002236  277F               	addwf	sprintf@ap& (0+255),f,b
 24170  002238                     l17684:
 24171                           
 24172                           ; BSR set to: 0
 24173                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 24174  002238  0E88               	movlw	low sprintf@c
 24175  00223A  6F84               	movwf	sprintf@_val& (0+255),b
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;doprnt.c: 815: _val._str._len = 1;
 24179  00223C  6B86               	clrf	(sprintf@_val+2)& (0+255),b
 24180  00223E  0E01               	movlw	1
 24181  002240  6F85               	movwf	(sprintf@_val+1)& (0+255),b
 24182                           
 24183                           ;doprnt.c: 816: goto dostring;
 24184  002242  D7AC               	goto	l17646
 24185  002244                     l17688:
 24186                           
 24187                           ; BSR set to: 0
 24188                           ;doprnt.c: 827: flag |= 0xC0;
 24189  002244  0EC0               	movlw	192
 24190  002246  1389               	iorwf	sprintf@flag& (0+255),f,b
 24191                           
 24192                           ;doprnt.c: 828: break;
 24193  002248  D016               	goto	l17694
 24194  00224A                     l17692:
 24195  00224A  0100               	movlb	0	; () banked
 24196  00224C  DA74               	call	PL86	;call to abstracted procedure
 24197  00224E  5188               	movf	sprintf@c& (0+255),w,b
 24198                           
 24199                           ; Switch size 1, requested type "space"
 24200                           ; Number of cases is 9, Range of values is 0 to 120
 24201                           ; switch strategies available:
 24202                           ; Name         Instructions Cycles
 24203                           ; simple_byte           28    15 (average)
 24204                           ;	Chosen strategy is simple_byte
 24205  002250  E101 D221          	bz	l17918
 24206  002254  0A58               	xorlw	88	; case 88
 24207  002256  E09F               	bz	l17644
 24208  002258  0A3B               	xorlw	59	; case 99
 24209  00225A  E0E7               	bz	l17680
 24210  00225C  0A07               	xorlw	7	; case 100
 24211  00225E  E00B               	bz	l17694
 24212  002260  0A0D               	xorlw	13	; case 105
 24213  002262  E009               	bz	l17694
 24214  002264  0A05               	xorlw	5	; case 108
 24215  002266  E093               	bz	l17640
 24216  002268  0A03               	xorlw	3	; case 111
 24217  00226A  E093               	bz	l17642
 24218  00226C  0A1A               	xorlw	26	; case 117
 24219  00226E  E0EA               	bz	l17688
 24220  002270  0A0D               	xorlw	13	; case 120
 24221  002272  E092               	bz	l1824
 24222  002274  D7E1               	goto	l17684
 24223  002276                     l17694:
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;doprnt.c: 1258: if((flag & (0xC0)) == 0x00)
 24227  002276  5189               	movf	sprintf@flag& (0+255),w,b
 24228  002278  0BC0               	andlw	192
 24229  00227A  E120               	bnz	l1843
 24230                           
 24231                           ; BSR set to: 0
 24232                           ;doprnt.c: 1260: {
 24233                           ;doprnt.c: 1262: if(flag & 0x10)
 24234  00227C  A989               	btfss	sprintf@flag& (0+255),4,b
 24235  00227E  D003               	goto	l17702
 24236                           
 24237                           ; BSR set to: 0
 24238                           ;doprnt.c: 1263: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
 24239  002280  517F               	movf	sprintf@ap& (0+255),w,b
 24240                           
 24241                           ; BSR set to: 0
 24242  002282  DA47               	call	PL78	;call to abstracted procedure
 24243  002284  D00D               	goto	L51
 24244  002286                     l17702:
 24245                           
 24246                           ; BSR set to: 0
 24247                           ;doprnt.c: 1264: else
 24248                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 24249  002286  517F               	movf	sprintf@ap& (0+255),w,b
 24250  002288  6ED9               	movwf	fsr2l,c
 24251  00228A  6ADA               	clrf	fsr2h,c
 24252  00228C  CFDE F084          	movff	postinc2,sprintf@_val
 24253  002290  CFDD F085          	movff	postdec2,sprintf@_val+1
 24254  002294  0E00               	movlw	0
 24255  002296  BF85               	btfsc	(sprintf@_val+1)& (0+255),7,b
 24256  002298  0EFF               	movlw	-1
 24257  00229A  6F86               	movwf	(sprintf@_val+2)& (0+255),b
 24258  00229C  6F87               	movwf	(sprintf@_val+3)& (0+255),b
 24259                           
 24260                           ; BSR set to: 0
 24261  00229E  0E02               	movlw	2
 24262  0022A0                     L51:
 24263  0022A0  277F               	addwf	sprintf@ap& (0+255),f,b
 24264                           
 24265                           ; BSR set to: 0
 24266                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 24267  0022A2  AF87               	btfss	(sprintf@_val+3)& (0+255),7,b
 24268  0022A4  D01F               	goto	l17720
 24269                           
 24270                           ; BSR set to: 0
 24271                           ;doprnt.c: 1269: flag |= 0x03;
 24272  0022A6  0E03               	movlw	3
 24273  0022A8  1389               	iorwf	sprintf@flag& (0+255),f,b
 24274                           
 24275                           ; BSR set to: 0
 24276                           ;doprnt.c: 1270: _val._val = -_val._val;
 24277  0022AA  1F87               	comf	(sprintf@_val+3)& (0+255),f,b
 24278  0022AC  1F86               	comf	(sprintf@_val+2)& (0+255),f,b
 24279  0022AE  1F85               	comf	(sprintf@_val+1)& (0+255),f,b
 24280  0022B0  6D84               	negf	sprintf@_val& (0+255),b
 24281  0022B2  0E00               	movlw	0
 24282  0022B4  2385               	addwfc	(sprintf@_val+1)& (0+255),f,b
 24283  0022B6  2386               	addwfc	(sprintf@_val+2)& (0+255),f,b
 24284  0022B8  2387               	addwfc	(sprintf@_val+3)& (0+255),f,b
 24285  0022BA  D014               	goto	l17720
 24286  0022BC                     l1843:
 24287                           
 24288                           ; BSR set to: 0
 24289                           ;doprnt.c: 1275: else
 24290                           ;doprnt.c: 1280: {
 24291                           ;doprnt.c: 1288: if(flag & 0x10)
 24292  0022BC  A989               	btfss	sprintf@flag& (0+255),4,b
 24293  0022BE  D003               	goto	l17716
 24294                           
 24295                           ; BSR set to: 0
 24296                           ;doprnt.c: 1289: _val._val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsig
      +                          ned long)0));
 24297  0022C0  517F               	movf	sprintf@ap& (0+255),w,b
 24298                           
 24299                           ; BSR set to: 0
 24300  0022C2  DA27               	call	PL78	;call to abstracted procedure
 24301  0022C4  D00E               	goto	L52
 24302  0022C6                     l17716:
 24303                           
 24304                           ; BSR set to: 0
 24305                           ;doprnt.c: 1290: else
 24306                           ;doprnt.c: 1293: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 24307  0022C6  517F               	movf	sprintf@ap& (0+255),w,b
 24308  0022C8  6ED9               	movwf	fsr2l,c
 24309  0022CA  6ADA               	clrf	fsr2h,c
 24310  0022CC  CFDE F075          	movff	postinc2,??_sprintf
 24311  0022D0  CFDD F076          	movff	postdec2,??_sprintf+1
 24312  0022D4  C075  F084         	movff	??_sprintf,sprintf@_val
 24313  0022D8  C076  F085         	movff	??_sprintf+1,sprintf@_val+1
 24314  0022DC  6B86               	clrf	(sprintf@_val+2)& (0+255),b
 24315  0022DE  6B87               	clrf	(sprintf@_val+3)& (0+255),b
 24316                           
 24317                           ; BSR set to: 0
 24318  0022E0  0E02               	movlw	2
 24319  0022E2                     L52:
 24320  0022E2  277F               	addwf	sprintf@ap& (0+255),f,b
 24321  0022E4                     l17720:
 24322                           
 24323                           ; BSR set to: 0
 24324                           ;doprnt.c: 1294: }
 24325                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 24326  0022E4  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24327  0022E6  1180               	iorwf	sprintf@prec& (0+255),w,b
 24328  0022E8  E15C               	bnz	l17770
 24329                           
 24330                           ; BSR set to: 0
 24331  0022EA  5187               	movf	(sprintf@_val+3)& (0+255),w,b
 24332  0022EC  1184               	iorwf	sprintf@_val& (0+255),w,b
 24333  0022EE  1185               	iorwf	(sprintf@_val+1)& (0+255),w,b
 24334  0022F0  1186               	iorwf	(sprintf@_val+2)& (0+255),w,b
 24335  0022F2  E157               	bnz	l17770
 24336                           
 24337                           ; BSR set to: 0
 24338                           ;doprnt.c: 1298: prec++;
 24339  0022F4  4B80               	infsnz	sprintf@prec& (0+255),f,b
 24340  0022F6  2B81               	incf	(sprintf@prec+1)& (0+255),f,b
 24341  0022F8  D054               	goto	l17770
 24342  0022FA                     l17726:
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;doprnt.c: 1309: case 0xC0:
 24346                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 24347  0022FA  0E01               	movlw	1
 24348  0022FC  6F88               	movwf	sprintf@c& (0+255),b
 24349  0022FE                     l17728:
 24350                           
 24351                           ; BSR set to: 0
 24352  0022FE  5188               	movf	sprintf@c& (0+255),w,b
 24353  002300  0A0A               	xorlw	10
 24354  002302  E058               	bz	l17772
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 24358  002304  5188               	movf	sprintf@c& (0+255),w,b
 24359  002306  0D04               	mullw	4
 24360  002308  0E1C               	movlw	low _dpowers
 24361  00230A  24F3               	addwf	prodl,w,c
 24362  00230C  6EF6               	movwf	tblptrl,c
 24363  00230E  0E6E               	movlw	high _dpowers
 24364  002310  20F4               	addwfc	prodh,w,c
 24365  002312  6EF7               	movwf	tblptrh,c
 24366  002314  0009               	tblrd		*+
 24367  002316  50F5               	movf	tablat,w,c
 24368  002318  5D84               	subwf	sprintf@_val& (0+255),w,b
 24369  00231A  0009               	tblrd		*+
 24370  00231C  50F5               	movf	tablat,w,c
 24371  00231E  5985               	subwfb	(sprintf@_val+1)& (0+255),w,b
 24372  002320  0009               	tblrd		*+
 24373  002322  50F5               	movf	tablat,w,c
 24374  002324  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 24375  002326  0009               	tblrd		*+
 24376  002328  50F5               	movf	tablat,w,c
 24377  00232A  5987               	subwfb	(sprintf@_val+3)& (0+255),w,b
 24378  00232C  E343               	bnc	l17772
 24379                           
 24380                           ; BSR set to: 0
 24381  00232E  2B88               	incf	sprintf@c& (0+255),f,b
 24382  002330  D7E6               	goto	l17728
 24383  002332                     l17740:
 24384                           
 24385                           ; BSR set to: 0
 24386                           ;doprnt.c: 1323: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 24387  002332  0E01               	movlw	1
 24388  002334  6F88               	movwf	sprintf@c& (0+255),b
 24389  002336                     l17742:
 24390                           
 24391                           ; BSR set to: 0
 24392  002336  5188               	movf	sprintf@c& (0+255),w,b
 24393  002338  0A08               	xorlw	8
 24394  00233A  E03C               	bz	l17772
 24395                           
 24396                           ; BSR set to: 0
 24397                           ;doprnt.c: 1324: if(_val._val < hexpowers[c])
 24398  00233C  5188               	movf	sprintf@c& (0+255),w,b
 24399  00233E  0D04               	mullw	4
 24400  002340  0E44               	movlw	low _hexpowers
 24401  002342  24F3               	addwf	prodl,w,c
 24402  002344  6EF6               	movwf	tblptrl,c
 24403  002346  0E6E               	movlw	high _hexpowers
 24404  002348  20F4               	addwfc	prodh,w,c
 24405  00234A  6EF7               	movwf	tblptrh,c
 24406  00234C  0009               	tblrd		*+
 24407  00234E  50F5               	movf	tablat,w,c
 24408  002350  5D84               	subwf	sprintf@_val& (0+255),w,b
 24409  002352  0009               	tblrd		*+
 24410  002354  50F5               	movf	tablat,w,c
 24411  002356  5985               	subwfb	(sprintf@_val+1)& (0+255),w,b
 24412  002358  0009               	tblrd		*+
 24413  00235A  50F5               	movf	tablat,w,c
 24414  00235C  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 24415  00235E  0009               	tblrd		*+
 24416  002360  50F5               	movf	tablat,w,c
 24417  002362  5987               	subwfb	(sprintf@_val+3)& (0+255),w,b
 24418  002364  E327               	bnc	l17772
 24419                           
 24420                           ; BSR set to: 0
 24421  002366  2B88               	incf	sprintf@c& (0+255),f,b
 24422  002368  D7E6               	goto	l17742
 24423  00236A                     l17754:
 24424                           
 24425                           ; BSR set to: 0
 24426                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 24427  00236A  0E01               	movlw	1
 24428  00236C  6F88               	movwf	sprintf@c& (0+255),b
 24429  00236E                     l17756:
 24430                           
 24431                           ; BSR set to: 0
 24432  00236E  5188               	movf	sprintf@c& (0+255),w,b
 24433  002370  0A0C               	xorlw	12
 24434  002372  E020               	bz	l17772
 24435                           
 24436                           ; BSR set to: 0
 24437                           ;doprnt.c: 1336: if(_val._val < octpowers[c])
 24438  002374  5188               	movf	sprintf@c& (0+255),w,b
 24439  002376  0D04               	mullw	4
 24440  002378  0EEC               	movlw	low _octpowers
 24441  00237A  24F3               	addwf	prodl,w,c
 24442  00237C  6EF6               	movwf	tblptrl,c
 24443  00237E  0E6D               	movlw	high _octpowers
 24444  002380  20F4               	addwfc	prodh,w,c
 24445  002382  6EF7               	movwf	tblptrh,c
 24446  002384  0009               	tblrd		*+
 24447  002386  50F5               	movf	tablat,w,c
 24448  002388  5D84               	subwf	sprintf@_val& (0+255),w,b
 24449  00238A  0009               	tblrd		*+
 24450  00238C  50F5               	movf	tablat,w,c
 24451  00238E  5985               	subwfb	(sprintf@_val+1)& (0+255),w,b
 24452  002390  0009               	tblrd		*+
 24453  002392  50F5               	movf	tablat,w,c
 24454  002394  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 24455  002396  0009               	tblrd		*+
 24456  002398  50F5               	movf	tablat,w,c
 24457  00239A  5987               	subwfb	(sprintf@_val+3)& (0+255),w,b
 24458  00239C  E30B               	bnc	l17772
 24459                           
 24460                           ; BSR set to: 0
 24461  00239E  2B88               	incf	sprintf@c& (0+255),f,b
 24462  0023A0  D7E6               	goto	l17756
 24463  0023A2                     l17770:
 24464                           
 24465                           ; BSR set to: 0
 24466  0023A2  5189               	movf	sprintf@flag& (0+255),w,b
 24467  0023A4  0BC0               	andlw	192
 24468                           
 24469                           ; Switch size 1, requested type "space"
 24470                           ; Number of cases is 4, Range of values is 0 to 192
 24471                           ; switch strategies available:
 24472                           ; Name         Instructions Cycles
 24473                           ; simple_byte           13     7 (average)
 24474                           ;	Chosen strategy is simple_byte
 24475  0023A6  E0A9               	bz	l17726
 24476  0023A8  0A40               	xorlw	64	; case 64
 24477  0023AA  E0DF               	bz	l17754
 24478  0023AC  0AC0               	xorlw	192	; case 128
 24479  0023AE  E0C1               	bz	l17740
 24480  0023B0  0A40               	xorlw	64	; case 192
 24481  0023B2  E0A3               	bz	l17726
 24482  0023B4                     l17772:
 24483                           
 24484                           ; BSR set to: 0
 24485                           ;doprnt.c: 1346: if(c < prec)
 24486  0023B4  0E80               	movlw	128
 24487  0023B6  BF88               	btfsc	sprintf@c& (0+255),7,b
 24488  0023B8  0E7F               	movlw	127
 24489  0023BA  6F75               	movwf	??_sprintf& (0+255),b
 24490  0023BC  5180               	movf	sprintf@prec& (0+255),w,b
 24491  0023BE  5D88               	subwf	sprintf@c& (0+255),w,b
 24492  0023C0  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24493  0023C2  0A80               	xorlw	128
 24494  0023C4  5975               	subwfb	??_sprintf& (0+255),w,b
 24495  0023C6  E203               	bc	l17776
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;doprnt.c: 1347: c = prec;
 24499  0023C8  C080  F088         	movff	sprintf@prec,sprintf@c
 24500  0023CC  D00F               	goto	l17780
 24501  0023CE                     l17776:
 24502                           
 24503                           ; BSR set to: 0
 24504                           ;doprnt.c: 1348: else if(prec < c)
 24505  0023CE  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24506  0023D0  0A80               	xorlw	128
 24507  0023D2  6F75               	movwf	??_sprintf& (0+255),b
 24508  0023D4  5188               	movf	sprintf@c& (0+255),w,b
 24509  0023D6  5D80               	subwf	sprintf@prec& (0+255),w,b
 24510  0023D8  0E80               	movlw	128
 24511  0023DA  BF88               	btfsc	sprintf@c& (0+255),7,b
 24512  0023DC  0E7F               	movlw	127
 24513  0023DE  5975               	subwfb	??_sprintf& (0+255),w,b
 24514  0023E0  E205               	bc	l17780
 24515                           
 24516                           ; BSR set to: 0
 24517                           ;doprnt.c: 1349: prec = c;
 24518  0023E2  5188               	movf	sprintf@c& (0+255),w,b
 24519  0023E4  6F80               	movwf	sprintf@prec& (0+255),b
 24520  0023E6  6B81               	clrf	(sprintf@prec+1)& (0+255),b
 24521  0023E8  BF80               	btfsc	sprintf@prec& (0+255),7,b
 24522  0023EA  0781               	decf	(sprintf@prec+1)& (0+255),f,b
 24523  0023EC                     l17780:
 24524                           
 24525                           ; BSR set to: 0
 24526                           ;doprnt.c: 1352: if(width && flag & 0x03)
 24527  0023EC  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24528  0023EE  1182               	iorwf	sprintf@width& (0+255),w,b
 24529  0023F0  E006               	bz	l17786
 24530                           
 24531                           ; BSR set to: 0
 24532  0023F2  5189               	movf	sprintf@flag& (0+255),w,b
 24533  0023F4  0B03               	andlw	3
 24534  0023F6  E003               	bz	l17786
 24535                           
 24536                           ; BSR set to: 0
 24537                           ;doprnt.c: 1353: width--;
 24538  0023F8  0782               	decf	sprintf@width& (0+255),f,b
 24539  0023FA  A0D8               	btfss	status,0,c
 24540  0023FC  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24541  0023FE                     l17786:
 24542                           
 24543                           ; BSR set to: 0
 24544                           ;doprnt.c: 1355: if(flag & 0x4000) {
 24545  0023FE  AD8A               	btfss	(sprintf@flag+1)& (0+255),6,b
 24546  002400  D010               	goto	l17792
 24547                           
 24548                           ; BSR set to: 0
 24549                           ;doprnt.c: 1356: if(width > prec)
 24550  002402  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24551  002404  0A80               	xorlw	128
 24552  002406  6F75               	movwf	??_sprintf& (0+255),b
 24553  002408  5182               	movf	sprintf@width& (0+255),w,b
 24554  00240A  5D80               	subwf	sprintf@prec& (0+255),w,b
 24555  00240C  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24556  00240E  0A80               	xorlw	128
 24557  002410  5975               	subwfb	??_sprintf& (0+255),w,b
 24558  002412  E205               	bc	l1871
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;doprnt.c: 1357: width -= prec;
 24562  002414  5180               	movf	sprintf@prec& (0+255),w,b
 24563  002416  5F82               	subwf	sprintf@width& (0+255),f,b
 24564  002418  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24565  00241A  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 24566  00241C  D002               	goto	l17792
 24567  00241E                     l1871:
 24568                           
 24569                           ; BSR set to: 0
 24570                           ;doprnt.c: 1358: else
 24571                           ;doprnt.c: 1359: width = 0;
 24572  00241E  6B82               	clrf	sprintf@width& (0+255),b
 24573  002420  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24574  002422                     l17792:
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;doprnt.c: 1360: }
 24578                           ;doprnt.c: 1364: if((flag & (
 24579                           ;doprnt.c: 1366: 0x04|
 24580                           ;doprnt.c: 1368: (0xC0)|0x800)) == (0x40|0x800)) {
 24581  002422  0EC4               	movlw	196
 24582  002424  D94E               	call	PL28	;call to abstracted procedure
 24583  002426  0E40               	movlw	64
 24584  002428  B4D8               	btfsc	status,2,c
 24585  00242A  1975               	xorwf	??_sprintf& (0+255),w,b
 24586  00242C  E107               	bnz	l17798
 24587                           
 24588                           ; BSR set to: 0
 24589                           ;doprnt.c: 1369: if(width)
 24590  00242E  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24591  002430  1182               	iorwf	sprintf@width& (0+255),w,b
 24592  002432  E018               	bz	l17804
 24593                           
 24594                           ; BSR set to: 0
 24595                           ;doprnt.c: 1370: width--;
 24596  002434  0782               	decf	sprintf@width& (0+255),f,b
 24597  002436  A0D8               	btfss	status,0,c
 24598  002438  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24599  00243A  D014               	goto	l17804
 24600  00243C                     l17798:
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;doprnt.c: 1375: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24604  00243C  0EC0               	movlw	192
 24605  00243E  D941               	call	PL28	;call to abstracted procedure
 24606  002440  0E80               	movlw	128
 24607  002442  B4D8               	btfsc	status,2,c
 24608  002444  1975               	xorwf	??_sprintf& (0+255),w,b
 24609  002446  E10E               	bnz	l17804
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;doprnt.c: 1379: if(width > 2)
 24613  002448  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24614  00244A  0A80               	xorlw	128
 24615  00244C  0F80               	addlw	-128
 24616  00244E  0E03               	movlw	3
 24617  002450  B4D8               	btfsc	status,2,c
 24618  002452  5D82               	subwf	sprintf@width& (0+255),w,b
 24619  002454  E305               	bnc	l1877
 24620                           
 24621                           ; BSR set to: 0
 24622                           ;doprnt.c: 1380: width -= 2;
 24623  002456  0EFE               	movlw	254
 24624  002458  2782               	addwf	sprintf@width& (0+255),f,b
 24625  00245A  0EFF               	movlw	255
 24626  00245C  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 24627  00245E  D002               	goto	l17804
 24628  002460                     l1877:
 24629                           
 24630                           ; BSR set to: 0
 24631                           ;doprnt.c: 1381: else
 24632                           ;doprnt.c: 1382: width = 0;
 24633  002460  6B82               	clrf	sprintf@width& (0+255),b
 24634  002462  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24635  002464                     l17804:
 24636                           
 24637                           ; BSR set to: 0
 24638                           ;doprnt.c: 1383: }
 24639                           ;doprnt.c: 1388: if(width > c)
 24640  002464  0E80               	movlw	128
 24641  002466  BF88               	btfsc	sprintf@c& (0+255),7,b
 24642  002468  0E7F               	movlw	127
 24643  00246A  6F75               	movwf	??_sprintf& (0+255),b
 24644  00246C  5182               	movf	sprintf@width& (0+255),w,b
 24645  00246E  5D88               	subwf	sprintf@c& (0+255),w,b
 24646  002470  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24647  002472  0A80               	xorlw	128
 24648  002474  5975               	subwfb	??_sprintf& (0+255),w,b
 24649  002476  E207               	bc	l1879
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;doprnt.c: 1389: width -= c;
 24653  002478  5188               	movf	sprintf@c& (0+255),w,b
 24654  00247A  5F82               	subwf	sprintf@width& (0+255),f,b
 24655  00247C  0E00               	movlw	0
 24656  00247E  BF88               	btfsc	sprintf@c& (0+255),7,b
 24657  002480  0EFF               	movlw	255
 24658  002482  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 24659  002484  D002               	goto	l1880
 24660  002486                     l1879:
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;doprnt.c: 1390: else
 24664                           ;doprnt.c: 1391: width = 0;
 24665  002486  6B82               	clrf	sprintf@width& (0+255),b
 24666  002488  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24667  00248A                     l1880:
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;doprnt.c: 1394: if(flag & 0x04) {
 24671  00248A  A589               	btfss	sprintf@flag& (0+255),2,b
 24672  00248C  D03C               	goto	l17842
 24673                           
 24674                           ; BSR set to: 0
 24675                           ;doprnt.c: 1399: if(flag & 0x03)
 24676  00248E  5189               	movf	sprintf@flag& (0+255),w,b
 24677  002490  0B03               	andlw	3
 24678  002492  E009               	bz	l1882
 24679                           
 24680                           ; BSR set to: 0
 24681                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 24682  002494  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24683  002498  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24684  00249C  0E2D               	movlw	45
 24685  00249E  6EDF               	movwf	indf2,c
 24686  0024A0                     l17812:
 24687                           
 24688                           ; BSR set to: 0
 24689  0024A0  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24690  0024A2  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24691  0024A4  D022               	goto	l17834
 24692  0024A6                     l1882:
 24693                           
 24694                           ; BSR set to: 0
 24695                           ;doprnt.c: 1403: else
 24696                           ;doprnt.c: 1406: if(flag & 0x01)
 24697  0024A6  A189               	btfss	sprintf@flag& (0+255),0,b
 24698  0024A8  D006               	goto	l17818
 24699                           
 24700                           ; BSR set to: 0
 24701                           ;doprnt.c: 1407: ((*sp++ = (' ')));
 24702  0024AA  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24703  0024AE  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24704  0024B2  0E20               	movlw	32
 24705  0024B4  D7F4               	goto	L53
 24706  0024B6                     l17818:
 24707                           
 24708                           ; BSR set to: 0
 24709                           ;doprnt.c: 1410: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24710  0024B6  0EC0               	movlw	192
 24711  0024B8  D904               	call	PL28	;call to abstracted procedure
 24712  0024BA  0E80               	movlw	128
 24713  0024BC  B4D8               	btfsc	status,2,c
 24714  0024BE  1975               	xorwf	??_sprintf& (0+255),w,b
 24715  0024C0  E114               	bnz	l17834
 24716                           
 24717                           ; BSR set to: 0
 24718                           ;doprnt.c: 1411: ((*sp++ = ('0')));
 24719  0024C2  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24720  0024C6  D94A               	call	PL134	;call to abstracted procedure
 24721                           
 24722                           ; BSR set to: 0
 24723  0024C8  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24724  0024CA  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;doprnt.c: 1413: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 24728  0024CC  BB89               	btfsc	sprintf@flag& (0+255),5,b
 24729  0024CE  D003               	goto	l17828
 24730                           
 24731                           ; BSR set to: 0
 24732  0024D0  6B7A               	clrf	(_sprintf$2270+1)& (0+255),b
 24733  0024D2  0E78               	movlw	120
 24734  0024D4  D002               	goto	L54
 24735  0024D6                     l17828:
 24736                           
 24737                           ; BSR set to: 0
 24738  0024D6  6B7A               	clrf	(_sprintf$2270+1)& (0+255),b
 24739  0024D8  0E58               	movlw	88
 24740  0024DA                     L54:
 24741  0024DA  6F79               	movwf	_sprintf$2270& (0+255),b
 24742                           
 24743                           ; BSR set to: 0
 24744  0024DC  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24745  0024E0  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24746  0024E4  C079  FFDF         	movff	_sprintf$2270,indf2
 24747  0024E8  D7DB               	goto	l17812
 24748  0024EA                     l17834:
 24749                           
 24750                           ; BSR set to: 0
 24751                           ;doprnt.c: 1419: }
 24752                           ;doprnt.c: 1422: if(width)
 24753  0024EA  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24754  0024EC  1182               	iorwf	sprintf@width& (0+255),w,b
 24755  0024EE  E101 D0B9          	bz	l17906
 24756                           
 24757                           ; BSR set to: 0
 24758                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 24759  0024F2  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24760  0024F6  D932               	call	PL134	;call to abstracted procedure
 24761                           
 24762                           ; BSR set to: 0
 24763  0024F8  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24764  0024FA  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24765                           
 24766                           ; BSR set to: 0
 24767                           ;doprnt.c: 1425: while(--width);
 24768  0024FC  0782               	decf	sprintf@width& (0+255),f,b
 24769  0024FE  A0D8               	btfss	status,0,c
 24770  002500  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24771  002502  0100               	movlb	0	; () banked
 24772  002504  D7F2               	goto	l17834
 24773  002506                     l17842:
 24774                           
 24775                           ; BSR set to: 0
 24776                           ;doprnt.c: 1429: {
 24777                           ;doprnt.c: 1431: if(width
 24778                           ;doprnt.c: 1433: && !(flag & 0x08)
 24779                           ;doprnt.c: 1435: )
 24780  002506  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24781  002508  1182               	iorwf	sprintf@width& (0+255),w,b
 24782  00250A  A4D8               	btfss	status,2,c
 24783                           
 24784                           ; BSR set to: 0
 24785  00250C  B789               	btfsc	sprintf@flag& (0+255),3,b
 24786  00250E  D004               	goto	l17852
 24787  002510                     l17846:
 24788                           
 24789                           ; BSR set to: 0
 24790                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 24791  002510  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24792                           
 24793                           ; BSR set to: 0
 24794                           
 24795                           ; BSR set to: 0
 24796                           ;doprnt.c: 1438: while(--width);
 24797  002514  D8F1               	call	PL62	;call to abstracted procedure
 24798  002516  E1FC               	bnz	l17846
 24799  002518                     l17852:
 24800                           
 24801                           ; BSR set to: 0
 24802                           ;doprnt.c: 1445: if(flag & 0x03)
 24803  002518  5189               	movf	sprintf@flag& (0+255),w,b
 24804  00251A  0B03               	andlw	3
 24805  00251C  E009               	bz	l1898
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 24809  00251E  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24810  002522  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24811  002526  0E2D               	movlw	45
 24812  002528  6EDF               	movwf	indf2,c
 24813                           
 24814                           ; BSR set to: 0
 24815  00252A  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24816  00252C  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24817  00252E  D008               	goto	l17862
 24818  002530                     l1898:
 24819                           
 24820                           ; BSR set to: 0
 24821                           ;doprnt.c: 1450: else if(flag & 0x01)
 24822  002530  A189               	btfss	sprintf@flag& (0+255),0,b
 24823  002532  D006               	goto	l17862
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;doprnt.c: 1451: ((*sp++ = (' ')));
 24827  002534  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24828  002538  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24829  00253C  0E20               	movlw	32
 24830  00253E  D7F4               	goto	L55
 24831  002540                     l17862:
 24832                           
 24833                           ; BSR set to: 0
 24834                           ;doprnt.c: 1455: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 24835  002540  0EC0               	movlw	192
 24836  002542  D8BF               	call	PL28	;call to abstracted procedure
 24837  002544  0E40               	movlw	64
 24838  002546  B4D8               	btfsc	status,2,c
 24839  002548  1975               	xorwf	??_sprintf& (0+255),w,b
 24840  00254A  E106               	bnz	l17868
 24841                           
 24842                           ; BSR set to: 0
 24843                           ;doprnt.c: 1456: ((*sp++ = ('0')));
 24844  00254C  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24845  002550  D905               	call	PL134	;call to abstracted procedure
 24846  002552                     l17866:
 24847                           
 24848                           ; BSR set to: 0
 24849  002552  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24850  002554  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24851  002556  D086               	goto	l17906
 24852  002558                     l17868:
 24853                           
 24854                           ; BSR set to: 0
 24855                           ;doprnt.c: 1457: else
 24856                           ;doprnt.c: 1461: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24857  002558  0EC0               	movlw	192
 24858  00255A  D8B3               	call	PL28	;call to abstracted procedure
 24859  00255C  0E80               	movlw	128
 24860  00255E  B4D8               	btfsc	status,2,c
 24861  002560  1975               	xorwf	??_sprintf& (0+255),w,b
 24862  002562  E001 D07F          	bnz	l17906
 24863                           
 24864                           ; BSR set to: 0
 24865                           ;doprnt.c: 1465: ((*sp++ = ('0')));
 24866  002566  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24867  00256A  D8F8               	call	PL134	;call to abstracted procedure
 24868                           
 24869                           ; BSR set to: 0
 24870  00256C  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24871  00256E  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24872                           
 24873                           ; BSR set to: 0
 24874                           ;doprnt.c: 1467: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 24875  002570  BB89               	btfsc	sprintf@flag& (0+255),5,b
 24876  002572  D003               	goto	l17878
 24877                           
 24878                           ; BSR set to: 0
 24879  002574  6B7C               	clrf	(_sprintf$2271+1)& (0+255),b
 24880  002576  0E78               	movlw	120
 24881  002578  D002               	goto	L56
 24882  00257A                     l17878:
 24883                           
 24884                           ; BSR set to: 0
 24885  00257A  6B7C               	clrf	(_sprintf$2271+1)& (0+255),b
 24886  00257C  0E58               	movlw	88
 24887  00257E                     L56:
 24888  00257E  6F7B               	movwf	_sprintf$2271& (0+255),b
 24889                           
 24890                           ; BSR set to: 0
 24891  002580  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24892  002584  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24893  002588  C07B  FFDF         	movff	_sprintf$2271,indf2
 24894  00258C  D7E2               	goto	l17866
 24895  00258E                     l17884:
 24896                           
 24897                           ; BSR set to: 0
 24898                           ;doprnt.c: 1493: case 0xC0:
 24899                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 24900  00258E  C080  F075         	movff	sprintf@prec,??_sprintf
 24901  002592  C081  F076         	movff	sprintf@prec+1,??_sprintf+1
 24902  002596  90D8               	bcf	status,0,c
 24903  002598  3775               	rlcf	??_sprintf& (0+255),f,b
 24904  00259A  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 24905  00259C  90D8               	bcf	status,0,c
 24906  00259E  3775               	rlcf	??_sprintf& (0+255),f,b
 24907  0025A0  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 24908  0025A2  0E1C               	movlw	low _dpowers
 24909  0025A4  2575               	addwf	??_sprintf& (0+255),w,b
 24910  0025A6  6EF6               	movwf	tblptrl,c
 24911  0025A8  0E6E               	movlw	high _dpowers
 24912  0025AA  D87C               	call	PL16	;call to abstracted procedure
 24913  0025AC  C084  F01F         	movff	sprintf@_val,?___lldiv
 24914  0025B0  C085  F020         	movff	sprintf@_val+1,?___lldiv+1
 24915  0025B4  C086  F021         	movff	sprintf@_val+2,?___lldiv+2
 24916  0025B8  C087  F022         	movff	sprintf@_val+3,?___lldiv+3
 24917  0025BC  EC75  F030         	call	___lldiv	;wreg free
 24918  0025C0  C022  F068         	movff	?___lldiv+3,?___llmod+3
 24919  0025C4  C021  F067         	movff	?___lldiv+2,?___llmod+2
 24920  0025C8  C020  F066         	movff	?___lldiv+1,?___llmod+1
 24921  0025CC  C01F  F065         	movff	?___lldiv,?___llmod
 24922  0025D0  0E0A               	movlw	10
 24923  0025D2  6F69               	movwf	(?___llmod+4)& (0+255),b
 24924  0025D4  0E00               	movlw	0
 24925  0025D6  6B6A               	clrf	(?___llmod+5)& (0+255),b
 24926  0025D8  6B6B               	clrf	(?___llmod+6)& (0+255),b
 24927  0025DA  6B6C               	clrf	(?___llmod+7)& (0+255),b
 24928  0025DC  ECBE  F031         	call	___llmod	;wreg free
 24929  0025E0  5165               	movf	?___llmod& (0+255),w,b
 24930  0025E2  D02D               	goto	L57
 24931  0025E4                     l17886:
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;doprnt.c: 1506: {
 24935                           ;doprnt.c: 1507: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 24936  0025E4  D876               	call	PL36	;call to abstracted procedure
 24937  0025E6  0E44               	movlw	low _hexpowers
 24938  0025E8  2575               	addwf	??_sprintf& (0+255),w,b
 24939  0025EA  6EF6               	movwf	tblptrl,c
 24940  0025EC  0E6E               	movlw	high _hexpowers
 24941  0025EE  D85A               	call	PL16	;call to abstracted procedure
 24942  0025F0  EC75  F030         	call	___lldiv	;wreg free
 24943  0025F4  501F               	movf	?___lldiv,w,c
 24944  0025F6  0B0F               	andlw	15
 24945  0025F8  6F78               	movwf	sprintf@idx& (0+255),b
 24946                           
 24947                           ; BSR set to: 0
 24948                           ;doprnt.c: 1509: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 24949  0025FA  BB89               	btfsc	sprintf@flag& (0+255),5,b
 24950  0025FC  D004               	goto	l17892
 24951                           
 24952                           ; BSR set to: 0
 24953  0025FE  0E7D               	movlw	high STR_310
 24954  002600  6F7E               	movwf	(_sprintf$2277+1)& (0+255),b
 24955  002602  0EB7               	movlw	low STR_310
 24956  002604  D003               	goto	L58
 24957  002606                     l17892:
 24958                           
 24959                           ; BSR set to: 0
 24960  002606  0E7D               	movlw	high STR_309
 24961  002608  6F7E               	movwf	(_sprintf$2277+1)& (0+255),b
 24962  00260A  0EA6               	movlw	low STR_309
 24963  00260C                     L58:
 24964  00260C  6F7D               	movwf	_sprintf$2277& (0+255),b
 24965                           
 24966                           ; BSR set to: 0
 24967  00260E  5178               	movf	sprintf@idx& (0+255),w,b
 24968  002610  257D               	addwf	_sprintf$2277& (0+255),w,b
 24969  002612  6F75               	movwf	??_sprintf& (0+255),b
 24970  002614  0E00               	movlw	0
 24971  002616  217E               	addwfc	(_sprintf$2277+1)& (0+255),w,b
 24972  002618  6F76               	movwf	(??_sprintf+1)& (0+255),b
 24973  00261A  C075  FFF6         	movff	??_sprintf,tblptrl
 24974  00261E  C076  FFF7         	movff	??_sprintf+1,tblptrh
 24975  002622  0008               	tblrd		*
 24976  002624  CFF5 F088          	movff	tablat,sprintf@c
 24977                           
 24978                           ;doprnt.c: 1515: }
 24979                           ;doprnt.c: 1517: break;
 24980  002628  D016               	goto	l17902
 24981  00262A                     l17896:
 24982                           
 24983                           ; BSR set to: 0
 24984                           ;doprnt.c: 1525: c = ((_val._val / octpowers[prec]) & 07) + '0';
 24985  00262A  D853               	call	PL36	;call to abstracted procedure
 24986  00262C  0EEC               	movlw	low _octpowers
 24987  00262E  2575               	addwf	??_sprintf& (0+255),w,b
 24988  002630  6EF6               	movwf	tblptrl,c
 24989  002632  0E6D               	movlw	high _octpowers
 24990  002634  D837               	call	PL16	;call to abstracted procedure
 24991  002636  EC75  F030         	call	___lldiv	;wreg free
 24992  00263A  501F               	movf	?___lldiv,w,c
 24993  00263C  0B07               	andlw	7
 24994  00263E                     L57:
 24995  00263E  0F30               	addlw	48
 24996  002640  6F88               	movwf	sprintf@c& (0+255),b
 24997                           
 24998                           ;doprnt.c: 1527: break;
 24999  002642  D009               	goto	l17902
 25000  002644                     l17900:
 25001                           
 25002                           ; BSR set to: 0
 25003  002644  5189               	movf	sprintf@flag& (0+255),w,b
 25004  002646  0BC0               	andlw	192
 25005                           
 25006                           ; Switch size 1, requested type "space"
 25007                           ; Number of cases is 4, Range of values is 0 to 192
 25008                           ; switch strategies available:
 25009                           ; Name         Instructions Cycles
 25010                           ; simple_byte           13     7 (average)
 25011                           ;	Chosen strategy is simple_byte
 25012  002648  E0A2               	bz	l17884
 25013  00264A  0A40               	xorlw	64	; case 64
 25014  00264C  E0EE               	bz	l17896
 25015  00264E  0AC0               	xorlw	192	; case 128
 25016  002650  E0C9               	bz	l17886
 25017  002652  0A40               	xorlw	64	; case 192
 25018  002654  E09C               	bz	l17884
 25019  002656                     l17902:
 25020                           
 25021                           ; BSR set to: 0
 25022                           ;doprnt.c: 1531: ((*sp++ = (c)));
 25023  002656  C06D  FFD9         	movff	sprintf@sp,fsr2l
 25024  00265A  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 25025  00265E  C088  FFDF         	movff	sprintf@c,indf2
 25026  002662  D777               	goto	l17866
 25027  002664                     l17906:
 25028                           
 25029                           ; BSR set to: 0
 25030  002664  0780               	decf	sprintf@prec& (0+255),f,b
 25031  002666  A0D8               	btfss	status,0,c
 25032  002668  0781               	decf	(sprintf@prec+1)& (0+255),f,b
 25033  00266A  0100               	movlb	0	; () banked
 25034  00266C  2980               	incf	sprintf@prec& (0+255),w,b
 25035  00266E  B4D8               	btfsc	status,2,c
 25036  002670  2981               	incf	(sprintf@prec+1)& (0+255),w,b
 25037  002672  E1E8               	bnz	l17900
 25038                           
 25039                           ; BSR set to: 0
 25040                           ;doprnt.c: 1532: }
 25041                           ;doprnt.c: 1535: if((flag & 0x08) && width > 0)
 25042  002674  A789               	btfss	sprintf@flag& (0+255),3,b
 25043  002676  D00B               	goto	l17916
 25044                           
 25045                           ; BSR set to: 0
 25046  002678  5183               	movf	(sprintf@width+1)& (0+255),w,b
 25047  00267A  0A80               	xorlw	128
 25048  00267C  0F80               	addlw	-128
 25049  00267E  0E01               	movlw	1
 25050  002680  B4D8               	btfsc	status,2,c
 25051  002682  5D82               	subwf	sprintf@width& (0+255),w,b
 25052  002684  E304               	bnc	l17916
 25053  002686                     l17910:
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;doprnt.c: 1537: ((*sp++ = (' ')));
 25057  002686  C06D  FFD9         	movff	sprintf@sp,fsr2l
 25058                           
 25059                           ; BSR set to: 0
 25060                           
 25061                           ; BSR set to: 0
 25062                           ;doprnt.c: 1538: while(--width);
 25063  00268A  D836               	call	PL62	;call to abstracted procedure
 25064  00268C  E1FC               	bnz	l17910
 25065  00268E                     l17916:
 25066                           
 25067                           ; BSR set to: 0
 25068  00268E  D853               	call	PL86	;call to abstracted procedure
 25069  002690  0100               	movlb	0	; () banked
 25070  002692  6788               	tstfsz	sprintf@c& (0+255),b
 25071  002694  D4CC               	goto	l17582
 25072  002696                     l17918:
 25073                           
 25074                           ; BSR set to: 0
 25075                           ;doprnt.c: 1545: *sp = 0;
 25076  002696  C06D  FFD9         	movff	sprintf@sp,fsr2l
 25077  00269A  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 25078  00269E  0E00               	movlw	0
 25079  0026A0  6EDF               	movwf	indf2,c
 25080                           
 25081                           ; BSR set to: 0
 25082  0026A2  0C00               	retlw	0
 25083  0026A4                     __end_of_sprintf:
 25084                           	opt stack 0
 25085  0026A4                     PL16:
 25086                           	opt stack 25
 25087  0026A4  2176               	addwfc	(??_sprintf+1)& (0+255),w,b
 25088  0026A6  6EF7               	movwf	tblptrh,c
 25089  0026A8  0009               	tblrd		*+
 25090  0026AA  CFF5 F023          	movff	tablat,?___lldiv+4
 25091  0026AE  0009               	tblrd		*+
 25092  0026B0  CFF5 F024          	movff	tablat,?___lldiv+5
 25093  0026B4  0009               	tblrd		*+
 25094  0026B6  CFF5 F025          	movff	tablat,?___lldiv+6
 25095  0026BA  000A               	tblrd		*-
 25096  0026BC  CFF5 F026          	movff	tablat,?___lldiv+7
 25097  0026C0  0012               	return	
 25098  0026C2                     __end_ofPL16:
 25099                           	opt stack 0
 25100  0026C2                     PL28:
 25101                           	opt stack 25
 25102  0026C2  1589               	andwf	sprintf@flag& (0+255),w,b
 25103  0026C4  6F75               	movwf	??_sprintf& (0+255),b
 25104  0026C6  0E08               	movlw	8
 25105  0026C8  158A               	andwf	(sprintf@flag+1)& (0+255),w,b
 25106  0026CA  6F76               	movwf	(??_sprintf+1)& (0+255),b
 25107  0026CC  5176               	movf	(??_sprintf+1)& (0+255),w,b
 25108  0026CE  0A08               	xorlw	8
 25109  0026D0  0012               	return	
 25110  0026D2                     __end_ofPL28:
 25111                           	opt stack 0
 25112  0026D2                     PL36:
 25113                           	opt stack 25
 25114  0026D2  C084  F01F         	movff	sprintf@_val,?___lldiv
 25115  0026D6  C085  F020         	movff	sprintf@_val+1,?___lldiv+1
 25116  0026DA  C086  F021         	movff	sprintf@_val+2,?___lldiv+2
 25117  0026DE  C087  F022         	movff	sprintf@_val+3,?___lldiv+3
 25118  0026E2  C080  F075         	movff	sprintf@prec,??_sprintf
 25119  0026E6  C081  F076         	movff	sprintf@prec+1,??_sprintf+1
 25120  0026EA  90D8               	bcf	status,0,c
 25121  0026EC  3775               	rlcf	??_sprintf& (0+255),f,b
 25122  0026EE  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 25123  0026F0  90D8               	bcf	status,0,c
 25124  0026F2  3775               	rlcf	??_sprintf& (0+255),f,b
 25125  0026F4  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 25126  0026F6  0012               	return	
 25127  0026F8                     __end_ofPL36:
 25128                           	opt stack 0
 25129  0026F8                     PL62:
 25130                           	opt stack 25
 25131  0026F8  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 25132  0026FC  0E20               	movlw	32
 25133  0026FE  6EDF               	movwf	indf2,c
 25134  002700  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 25135  002702  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 25136  002704  0782               	decf	sprintf@width& (0+255),f,b
 25137  002706  A0D8               	btfss	status,0,c
 25138  002708  0783               	decf	(sprintf@width+1)& (0+255),f,b
 25139  00270A  0100               	movlb	0	; () banked
 25140  00270C  5183               	movf	(sprintf@width+1)& (0+255),w,b
 25141  00270E  1182               	iorwf	sprintf@width& (0+255),w,b
 25142  002710  0012               	return	
 25143  002712                     __end_ofPL62:
 25144                           	opt stack 0
 25145  002712                     PL78:
 25146                           	opt stack 25
 25147  002712  6ED9               	movwf	fsr2l,c
 25148  002714  6ADA               	clrf	fsr2h,c
 25149  002716  CFDE F084          	movff	postinc2,sprintf@_val
 25150  00271A  CFDE F085          	movff	postinc2,sprintf@_val+1
 25151  00271E  CFDE F086          	movff	postinc2,sprintf@_val+2
 25152  002722  CFDE F087          	movff	postinc2,sprintf@_val+3
 25153  002726  0C04               	retlw	4
 25154  002728                     __end_ofPL78:
 25155                           	opt stack 0
 25156  002728                     PL82:
 25157                           	opt stack 25
 25158  002728  C06D  FFD9         	movff	sprintf@sp,fsr2l
 25159  00272C  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 25160  002730  0E20               	movlw	32
 25161  002732  6EDF               	movwf	indf2,c
 25162  002734  0C20               	retlw	32
 25163  002736                     __end_ofPL82:
 25164                           	opt stack 0
 25165  002736                     PL86:
 25166                           	opt stack 25
 25167  002736  C06F  FFF6         	movff	sprintf@f,tblptrl
 25168  00273A  C070  FFF7         	movff	sprintf@f+1,tblptrh
 25169  00273E  4B6F               	infsnz	sprintf@f& (0+255),f,b
 25170  002740  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 25171  002742  0008               	tblrd		*
 25172  002744  CFF5 F088          	movff	tablat,sprintf@c
 25173  002748  0012               	return	
 25174  00274A                     __end_ofPL86:
 25175                           	opt stack 0
 25176  00274A                     PL110:
 25177                           	opt stack 25
 25178  00274A  4B6F               	infsnz	sprintf@f& (0+255),f,b
 25179  00274C  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 25180  00274E  C06F  FFF6         	movff	sprintf@f,tblptrl
 25181  002752  C070  FFF7         	movff	sprintf@f+1,tblptrh
 25182  002756  0008               	tblrd		*
 25183  002758  50F5               	movf	tablat,w,c
 25184  00275A  0012               	return	
 25185  00275C                     __end_ofPL110:
 25186                           	opt stack 0
 25187  00275C                     PL134:
 25188                           	opt stack 25
 25189  00275C  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 25190  002760  0E30               	movlw	48
 25191  002762  6EDF               	movwf	indf2,c
 25192  002764  0C30               	retlw	48
 25193  002766                     __end_ofPL134:
 25194                           	opt stack 0
 25195  002766                     PL146:
 25196                           	opt stack 25
 25197  002766  A0D8               	btfss	status,0,c
 25198  002768  0783               	decf	(sprintf@width+1)& (0+255),f,b
 25199  00276A  0100               	movlb	0	; () banked
 25200  00276C  2982               	incf	sprintf@width& (0+255),w,b
 25201  00276E  0012               	return	
 25202  002770                     __end_ofPL146:
 25203                           	opt stack 0
 25204                           tblptru	equ	0xFF8
 25205                           tblptrh	equ	0xFF7
 25206                           tblptrl	equ	0xFF6
 25207                           tablat	equ	0xFF5
 25208                           prodh	equ	0xFF4
 25209                           prodl	equ	0xFF3
 25210                           intcon	equ	0xFF2
 25211                           indf0	equ	0xFEF
 25212                           postinc0	equ	0xFEE
 25213                           fsr0h	equ	0xFEA
 25214                           fsr0l	equ	0xFE9
 25215                           wreg	equ	0xFE8
 25216                           indf1	equ	0xFE7
 25217                           postinc1	equ	0xFE6
 25218                           postdec1	equ	0xFE5
 25219                           fsr1h	equ	0xFE2
 25220                           fsr1l	equ	0xFE1
 25221                           indf2	equ	0xFDF
 25222                           postinc2	equ	0xFDE
 25223                           postdec2	equ	0xFDD
 25224                           plusw2	equ	0xFDB
 25225                           fsr2h	equ	0xFDA
 25226                           fsr2l	equ	0xFD9
 25227                           status	equ	0xFD8
 25228                           
 25229 ;; *************** function ___wmul *****************
 25230 ;; Defined at:
 25231 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
 25232 ;; Parameters:    Size  Location     Type
 25233 ;;  multiplier      2   34[COMRAM] unsigned int 
 25234 ;;  multiplicand    2   36[COMRAM] unsigned int 
 25235 ;; Auto vars:     Size  Location     Type
 25236 ;;  product         2    0[BANK0 ] unsigned int 
 25237 ;; Return value:  Size  Location     Type
 25238 ;;                  2   34[COMRAM] unsigned int 
 25239 ;; Registers used:
 25240 ;;		wreg, status,2, status,0, prodl, prodh
 25241 ;; Tracked objects:
 25242 ;;		On entry : 0/0
 25243 ;;		On exit  : F/0
 25244 ;;		Unchanged: 0/0
 25245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25246 ;;      Params:         4       0       0       0       0       0       0
 25247 ;;      Locals:         0       2       0       0       0       0       0
 25248 ;;      Temps:          0       0       0       0       0       0       0
 25249 ;;      Totals:         4       2       0       0       0       0       0
 25250 ;;Total ram usage:        6 bytes
 25251 ;; Hardware stack levels used:    1
 25252 ;; Hardware stack levels required when called:    3
 25253 ;; This function calls:
 25254 ;;		Nothing
 25255 ;; This function is called by:
 25256 ;;		_receivePrintEventVerbose
 25257 ;;		_receiveSendEventCANAL
 25258 ;;		_receiveSendMultiEventCANAL
 25259 ;;		_sprintf
 25260 ;;		_atoi
 25261 ;; This function uses a non-reentrant model
 25262 ;;
 25263                           
 25264                           	psect	text58
 25265  006892                     __ptext58:
 25266                           	opt stack 0
 25267  006892                     ___wmul:
 25268                           	opt stack 25
 25269                           
 25270                           ; BSR set to: 0
 25271                           ;incstack = 0
 25272                           ;incstack = 0
 25273  006892  5023               	movf	___wmul@multiplier,w,c
 25274  006894  0225               	mulwf	___wmul@multiplicand,c
 25275  006896  CFF3 F060          	movff	prodl,___wmul@product
 25276  00689A  CFF4 F061          	movff	prodh,___wmul@product+1
 25277  00689E  5023               	movf	___wmul@multiplier,w,c
 25278  0068A0  0226               	mulwf	___wmul@multiplicand+1,c
 25279  0068A2  CFF3 FFF4          	movff	prodl,prodh
 25280  0068A6  6AF3               	clrf	prodl,c
 25281  0068A8  50F3               	movf	prodl,w,c
 25282  0068AA  0100               	movlb	0	; () banked
 25283  0068AC  2760               	addwf	___wmul@product& (0+255),f,b
 25284  0068AE  50F4               	movf	prodh,w,c
 25285  0068B0  2361               	addwfc	(___wmul@product+1)& (0+255),f,b
 25286  0068B2  5024               	movf	___wmul@multiplier+1,w,c
 25287  0068B4  0225               	mulwf	___wmul@multiplicand,c
 25288  0068B6  CFF3 FFF4          	movff	prodl,prodh
 25289  0068BA  6AF3               	clrf	prodl,c
 25290  0068BC  50F3               	movf	prodl,w,c
 25291  0068BE  2760               	addwf	___wmul@product& (0+255),f,b
 25292  0068C0  50F4               	movf	prodh,w,c
 25293  0068C2  2361               	addwfc	(___wmul@product+1)& (0+255),f,b
 25294                           
 25295                           ; BSR set to: 0
 25296  0068C4  C060  F023         	movff	___wmul@product,?___wmul
 25297  0068C8  C061  F024         	movff	___wmul@product+1,?___wmul+1
 25298                           
 25299                           ; BSR set to: 0
 25300  0068CC  0012               	return	
 25301  0068CE                     __end_of___wmul:
 25302                           	opt stack 0
 25303                           tblptru	equ	0xFF8
 25304                           tblptrh	equ	0xFF7
 25305                           tblptrl	equ	0xFF6
 25306                           tablat	equ	0xFF5
 25307                           prodh	equ	0xFF4
 25308                           prodl	equ	0xFF3
 25309                           intcon	equ	0xFF2
 25310                           indf0	equ	0xFEF
 25311                           postinc0	equ	0xFEE
 25312                           fsr0h	equ	0xFEA
 25313                           fsr0l	equ	0xFE9
 25314                           wreg	equ	0xFE8
 25315                           indf1	equ	0xFE7
 25316                           postinc1	equ	0xFE6
 25317                           postdec1	equ	0xFE5
 25318                           fsr1h	equ	0xFE2
 25319                           fsr1l	equ	0xFE1
 25320                           indf2	equ	0xFDF
 25321                           postinc2	equ	0xFDE
 25322                           postdec2	equ	0xFDD
 25323                           plusw2	equ	0xFDB
 25324                           fsr2h	equ	0xFDA
 25325                           fsr2l	equ	0xFD9
 25326                           status	equ	0xFD8
 25327                           
 25328 ;; *************** function ___llmod *****************
 25329 ;; Defined at:
 25330 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\llmod.c"
 25331 ;; Parameters:    Size  Location     Type
 25332 ;;  dividend        4    5[BANK0 ] unsigned long 
 25333 ;;  divisor         4    9[BANK0 ] unsigned long 
 25334 ;; Auto vars:     Size  Location     Type
 25335 ;;  counter         1   38[COMRAM] unsigned char 
 25336 ;; Return value:  Size  Location     Type
 25337 ;;                  4    5[BANK0 ] unsigned long 
 25338 ;; Registers used:
 25339 ;;		wreg, status,2, status,0
 25340 ;; Tracked objects:
 25341 ;;		On entry : F/0
 25342 ;;		On exit  : F/0
 25343 ;;		Unchanged: 0/0
 25344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25345 ;;      Params:         0       8       0       0       0       0       0
 25346 ;;      Locals:         1       0       0       0       0       0       0
 25347 ;;      Temps:          0       0       0       0       0       0       0
 25348 ;;      Totals:         1       8       0       0       0       0       0
 25349 ;;Total ram usage:        9 bytes
 25350 ;; Hardware stack levels used:    1
 25351 ;; Hardware stack levels required when called:    3
 25352 ;; This function calls:
 25353 ;;		Nothing
 25354 ;; This function is called by:
 25355 ;;		_sprintf
 25356 ;;		_ultoa
 25357 ;; This function uses a non-reentrant model
 25358 ;;
 25359                           
 25360                           	psect	text59
 25361  00637C                     __ptext59:
 25362                           	opt stack 0
 25363  00637C                     ___llmod:
 25364                           	opt stack 24
 25365                           
 25366                           ; BSR set to: 0
 25367                           
 25368                           ; BSR set to: 0
 25369                           ;incstack = 0
 25370                           ;incstack = 0
 25371  00637C  516C               	movf	(___llmod@divisor+3)& (0+255),w,b
 25372  00637E  1169               	iorwf	___llmod@divisor& (0+255),w,b
 25373  006380  116A               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 25374  006382  116B               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 25375  006384  E023               	bz	l2563
 25376                           
 25377                           ; BSR set to: 0
 25378  006386  0E01               	movlw	1
 25379  006388  6E27               	movwf	___llmod@counter,c
 25380  00638A  D006               	goto	l18928
 25381  00638C                     l18926:
 25382                           
 25383                           ; BSR set to: 0
 25384  00638C  90D8               	bcf	status,0,c
 25385  00638E  3769               	rlcf	___llmod@divisor& (0+255),f,b
 25386  006390  376A               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 25387  006392  376B               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 25388  006394  376C               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 25389  006396  2A27               	incf	___llmod@counter,f,c
 25390  006398                     l18928:
 25391                           
 25392                           ; BSR set to: 0
 25393  006398  AF6C               	btfss	(___llmod@divisor+3)& (0+255),7,b
 25394  00639A  D7F8               	goto	l18926
 25395  00639C                     l18930:
 25396                           
 25397                           ; BSR set to: 0
 25398  00639C  5169               	movf	___llmod@divisor& (0+255),w,b
 25399  00639E  5D65               	subwf	___llmod@dividend& (0+255),w,b
 25400  0063A0  516A               	movf	(___llmod@divisor+1)& (0+255),w,b
 25401  0063A2  5966               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25402  0063A4  516B               	movf	(___llmod@divisor+2)& (0+255),w,b
 25403  0063A6  5967               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25404  0063A8  516C               	movf	(___llmod@divisor+3)& (0+255),w,b
 25405  0063AA  5968               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25406  0063AC  E308               	bnc	l18934
 25407                           
 25408                           ; BSR set to: 0
 25409  0063AE  5169               	movf	___llmod@divisor& (0+255),w,b
 25410  0063B0  5F65               	subwf	___llmod@dividend& (0+255),f,b
 25411  0063B2  516A               	movf	(___llmod@divisor+1)& (0+255),w,b
 25412  0063B4  5B66               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25413  0063B6  516B               	movf	(___llmod@divisor+2)& (0+255),w,b
 25414  0063B8  5B67               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25415  0063BA  516C               	movf	(___llmod@divisor+3)& (0+255),w,b
 25416  0063BC  5B68               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25417  0063BE                     l18934:
 25418                           
 25419                           ; BSR set to: 0
 25420  0063BE  90D8               	bcf	status,0,c
 25421  0063C0  336C               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25422  0063C2  336B               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25423  0063C4  336A               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25424  0063C6  3369               	rrcf	___llmod@divisor& (0+255),f,b
 25425                           
 25426                           ; BSR set to: 0
 25427  0063C8  2E27               	decfsz	___llmod@counter,f,c
 25428  0063CA  D7E8               	goto	l18930
 25429  0063CC                     l2563:
 25430                           
 25431                           ; BSR set to: 0
 25432  0063CC  C065  F065         	movff	___llmod@dividend,?___llmod
 25433  0063D0  C066  F066         	movff	___llmod@dividend+1,?___llmod+1
 25434  0063D4  C067  F067         	movff	___llmod@dividend+2,?___llmod+2
 25435  0063D8  C068  F068         	movff	___llmod@dividend+3,?___llmod+3
 25436                           
 25437                           ; BSR set to: 0
 25438  0063DC  0012               	return	
 25439  0063DE                     __end_of___llmod:
 25440                           	opt stack 0
 25441                           tblptru	equ	0xFF8
 25442                           tblptrh	equ	0xFF7
 25443                           tblptrl	equ	0xFF6
 25444                           tablat	equ	0xFF5
 25445                           prodh	equ	0xFF4
 25446                           prodl	equ	0xFF3
 25447                           intcon	equ	0xFF2
 25448                           indf0	equ	0xFEF
 25449                           postinc0	equ	0xFEE
 25450                           fsr0h	equ	0xFEA
 25451                           fsr0l	equ	0xFE9
 25452                           wreg	equ	0xFE8
 25453                           indf1	equ	0xFE7
 25454                           postinc1	equ	0xFE6
 25455                           postdec1	equ	0xFE5
 25456                           fsr1h	equ	0xFE2
 25457                           fsr1l	equ	0xFE1
 25458                           indf2	equ	0xFDF
 25459                           postinc2	equ	0xFDE
 25460                           postdec2	equ	0xFDD
 25461                           plusw2	equ	0xFDB
 25462                           fsr2h	equ	0xFDA
 25463                           fsr2l	equ	0xFD9
 25464                           status	equ	0xFD8
 25465                           
 25466 ;; *************** function ___lldiv *****************
 25467 ;; Defined at:
 25468 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lldiv.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;  dividend        4   30[COMRAM] unsigned long 
 25471 ;;  divisor         4   34[COMRAM] unsigned long 
 25472 ;; Auto vars:     Size  Location     Type
 25473 ;;  quotient        4    1[BANK0 ] unsigned long 
 25474 ;;  counter         1    0[BANK0 ] unsigned char 
 25475 ;; Return value:  Size  Location     Type
 25476 ;;                  4   30[COMRAM] unsigned long 
 25477 ;; Registers used:
 25478 ;;		wreg, status,2, status,0
 25479 ;; Tracked objects:
 25480 ;;		On entry : F/0
 25481 ;;		On exit  : F/0
 25482 ;;		Unchanged: 0/0
 25483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25484 ;;      Params:         8       0       0       0       0       0       0
 25485 ;;      Locals:         0       5       0       0       0       0       0
 25486 ;;      Temps:          0       0       0       0       0       0       0
 25487 ;;      Totals:         8       5       0       0       0       0       0
 25488 ;;Total ram usage:       13 bytes
 25489 ;; Hardware stack levels used:    1
 25490 ;; Hardware stack levels required when called:    3
 25491 ;; This function calls:
 25492 ;;		Nothing
 25493 ;; This function is called by:
 25494 ;;		_sprintf
 25495 ;;		_ultoa
 25496 ;; This function uses a non-reentrant model
 25497 ;;
 25498                           
 25499                           	psect	text60
 25500  0060EA                     __ptext60:
 25501                           	opt stack 0
 25502  0060EA                     ___lldiv:
 25503                           	opt stack 24
 25504                           
 25505                           ; BSR set to: 0
 25506                           
 25507                           ; BSR set to: 0
 25508                           ;incstack = 0
 25509                           ;incstack = 0
 25510  0060EA  6B61               	clrf	___lldiv@quotient& (0+255),b
 25511  0060EC  6B62               	clrf	(___lldiv@quotient+1)& (0+255),b
 25512  0060EE  6B63               	clrf	(___lldiv@quotient+2)& (0+255),b
 25513  0060F0  6B64               	clrf	(___lldiv@quotient+3)& (0+255),b
 25514                           
 25515                           ; BSR set to: 0
 25516  0060F2  5026               	movf	___lldiv@divisor+3,w,c
 25517  0060F4  1023               	iorwf	___lldiv@divisor,w,c
 25518  0060F6  1024               	iorwf	___lldiv@divisor+1,w,c
 25519  0060F8  1025               	iorwf	___lldiv@divisor+2,w,c
 25520  0060FA  E029               	bz	l2553
 25521                           
 25522                           ; BSR set to: 0
 25523  0060FC  0E01               	movlw	1
 25524  0060FE  6F60               	movwf	___lldiv@counter& (0+255),b
 25525  006100  D006               	goto	l18908
 25526  006102                     l18906:
 25527                           
 25528                           ; BSR set to: 0
 25529  006102  90D8               	bcf	status,0,c
 25530  006104  3623               	rlcf	___lldiv@divisor,f,c
 25531  006106  3624               	rlcf	___lldiv@divisor+1,f,c
 25532  006108  3625               	rlcf	___lldiv@divisor+2,f,c
 25533  00610A  3626               	rlcf	___lldiv@divisor+3,f,c
 25534  00610C  2B60               	incf	___lldiv@counter& (0+255),f,b
 25535  00610E                     l18908:
 25536                           
 25537                           ; BSR set to: 0
 25538  00610E  AE26               	btfss	___lldiv@divisor+3,7,c
 25539  006110  D7F8               	goto	l18906
 25540  006112                     l18910:
 25541                           
 25542                           ; BSR set to: 0
 25543  006112  90D8               	bcf	status,0,c
 25544  006114  3761               	rlcf	___lldiv@quotient& (0+255),f,b
 25545  006116  3762               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25546  006118  3763               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25547  00611A  3764               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25548                           
 25549                           ; BSR set to: 0
 25550  00611C  5023               	movf	___lldiv@divisor,w,c
 25551  00611E  5C1F               	subwf	___lldiv@dividend,w,c
 25552  006120  5024               	movf	___lldiv@divisor+1,w,c
 25553  006122  5820               	subwfb	___lldiv@dividend+1,w,c
 25554  006124  5025               	movf	___lldiv@divisor+2,w,c
 25555  006126  5821               	subwfb	___lldiv@dividend+2,w,c
 25556  006128  5026               	movf	___lldiv@divisor+3,w,c
 25557  00612A  5822               	subwfb	___lldiv@dividend+3,w,c
 25558  00612C  E309               	bnc	l18918
 25559                           
 25560                           ; BSR set to: 0
 25561  00612E  5023               	movf	___lldiv@divisor,w,c
 25562  006130  5E1F               	subwf	___lldiv@dividend,f,c
 25563  006132  5024               	movf	___lldiv@divisor+1,w,c
 25564  006134  5A20               	subwfb	___lldiv@dividend+1,f,c
 25565  006136  5025               	movf	___lldiv@divisor+2,w,c
 25566  006138  5A21               	subwfb	___lldiv@dividend+2,f,c
 25567  00613A  5026               	movf	___lldiv@divisor+3,w,c
 25568  00613C  5A22               	subwfb	___lldiv@dividend+3,f,c
 25569                           
 25570                           ; BSR set to: 0
 25571  00613E  8161               	bsf	___lldiv@quotient& (0+255),0,b
 25572  006140                     l18918:
 25573                           
 25574                           ; BSR set to: 0
 25575  006140  90D8               	bcf	status,0,c
 25576  006142  3226               	rrcf	___lldiv@divisor+3,f,c
 25577  006144  3225               	rrcf	___lldiv@divisor+2,f,c
 25578  006146  3224               	rrcf	___lldiv@divisor+1,f,c
 25579  006148  3223               	rrcf	___lldiv@divisor,f,c
 25580                           
 25581                           ; BSR set to: 0
 25582  00614A  2F60               	decfsz	___lldiv@counter& (0+255),f,b
 25583  00614C  D7E2               	goto	l18910
 25584  00614E                     l2553:
 25585                           
 25586                           ; BSR set to: 0
 25587  00614E  C061  F01F         	movff	___lldiv@quotient,?___lldiv
 25588  006152  C062  F020         	movff	___lldiv@quotient+1,?___lldiv+1
 25589  006156  C063  F021         	movff	___lldiv@quotient+2,?___lldiv+2
 25590  00615A  C064  F022         	movff	___lldiv@quotient+3,?___lldiv+3
 25591                           
 25592                           ; BSR set to: 0
 25593  00615E  0012               	return	
 25594  006160                     __end_of___lldiv:
 25595                           	opt stack 0
 25596                           tblptru	equ	0xFF8
 25597                           tblptrh	equ	0xFF7
 25598                           tblptrl	equ	0xFF6
 25599                           tablat	equ	0xFF5
 25600                           prodh	equ	0xFF4
 25601                           prodl	equ	0xFF3
 25602                           intcon	equ	0xFF2
 25603                           indf0	equ	0xFEF
 25604                           postinc0	equ	0xFEE
 25605                           fsr0h	equ	0xFEA
 25606                           fsr0l	equ	0xFE9
 25607                           wreg	equ	0xFE8
 25608                           indf1	equ	0xFE7
 25609                           postinc1	equ	0xFE6
 25610                           postdec1	equ	0xFE5
 25611                           fsr1h	equ	0xFE2
 25612                           fsr1l	equ	0xFE1
 25613                           indf2	equ	0xFDF
 25614                           postinc2	equ	0xFDE
 25615                           postdec2	equ	0xFDD
 25616                           plusw2	equ	0xFDB
 25617                           fsr2h	equ	0xFDA
 25618                           fsr2l	equ	0xFD9
 25619                           status	equ	0xFD8
 25620                           
 25621 ;; *************** function _isdigit *****************
 25622 ;; Defined at:
 25623 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isdigit.c"
 25624 ;; Parameters:    Size  Location     Type
 25625 ;;  c               1    wreg     unsigned char 
 25626 ;; Auto vars:     Size  Location     Type
 25627 ;;  c               1   32[COMRAM] unsigned char 
 25628 ;; Return value:  Size  Location     Type
 25629 ;;		None               void
 25630 ;; Registers used:
 25631 ;;		wreg, status,2, status,0
 25632 ;; Tracked objects:
 25633 ;;		On entry : 0/0
 25634 ;;		On exit  : 0/0
 25635 ;;		Unchanged: 0/0
 25636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25637 ;;      Params:         0       0       0       0       0       0       0
 25638 ;;      Locals:         2       0       0       0       0       0       0
 25639 ;;      Temps:          1       0       0       0       0       0       0
 25640 ;;      Totals:         3       0       0       0       0       0       0
 25641 ;;Total ram usage:        3 bytes
 25642 ;; Hardware stack levels used:    1
 25643 ;; Hardware stack levels required when called:    3
 25644 ;; This function calls:
 25645 ;;		Nothing
 25646 ;; This function is called by:
 25647 ;;		_sprintf
 25648 ;;		_atoi
 25649 ;; This function uses a non-reentrant model
 25650 ;;
 25651                           
 25652                           	psect	text61
 25653  006A7A                     __ptext61:
 25654                           	opt stack 0
 25655  006A7A                     _isdigit:
 25656                           	opt stack 25
 25657                           
 25658                           ; BSR set to: 0
 25659                           ;incstack = 0
 25660                           ;incstack = 0
 25661                           ;isdigit@c stored from wreg
 25662  006A7A  CFE8 F021          	movff	wreg,isdigit@c
 25663  006A7E  6A20               	clrf	_isdigit$3283,c
 25664  006A80  0E3A               	movlw	58
 25665  006A82  6021               	cpfslt	isdigit@c,c
 25666  006A84  D005               	goto	l18866
 25667  006A86  0E2F               	movlw	47
 25668  006A88  6421               	cpfsgt	isdigit@c,c
 25669  006A8A  D002               	goto	l18866
 25670  006A8C  0E01               	movlw	1
 25671  006A8E  6E20               	movwf	_isdigit$3283,c
 25672  006A90                     l18866:
 25673  006A90  C020  F01F         	movff	_isdigit$3283,??_isdigit
 25674  006A94  301F               	rrcf	??_isdigit,w,c
 25675  006A96  0012               	return	
 25676  006A98                     __end_of_isdigit:
 25677                           	opt stack 0
 25678                           tblptru	equ	0xFF8
 25679                           tblptrh	equ	0xFF7
 25680                           tblptrl	equ	0xFF6
 25681                           tablat	equ	0xFF5
 25682                           prodh	equ	0xFF4
 25683                           prodl	equ	0xFF3
 25684                           intcon	equ	0xFF2
 25685                           indf0	equ	0xFEF
 25686                           postinc0	equ	0xFEE
 25687                           fsr0h	equ	0xFEA
 25688                           fsr0l	equ	0xFE9
 25689                           wreg	equ	0xFE8
 25690                           indf1	equ	0xFE7
 25691                           postinc1	equ	0xFE6
 25692                           postdec1	equ	0xFE5
 25693                           fsr1h	equ	0xFE2
 25694                           fsr1l	equ	0xFE1
 25695                           indf2	equ	0xFDF
 25696                           postinc2	equ	0xFDE
 25697                           postdec2	equ	0xFDD
 25698                           plusw2	equ	0xFDB
 25699                           fsr2h	equ	0xFDA
 25700                           fsr2l	equ	0xFD9
 25701                           status	equ	0xFD8
 25702                           
 25703 ;; *************** function _printFirmwareVersion *****************
 25704 ;; Defined at:
 25705 ;;		line 3294 in file "main.c"
 25706 ;; Parameters:    Size  Location     Type
 25707 ;;		None
 25708 ;; Auto vars:     Size  Location     Type
 25709 ;;  wrkbuf         20   15[BANK0 ] unsigned char [20]
 25710 ;; Return value:  Size  Location     Type
 25711 ;;		None               void
 25712 ;; Registers used:
 25713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25714 ;; Tracked objects:
 25715 ;;		On entry : 0/0
 25716 ;;		On exit  : 0/0
 25717 ;;		Unchanged: 0/0
 25718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25719 ;;      Params:         0       0       0       0       0       0       0
 25720 ;;      Locals:         0      20       0       0       0       0       0
 25721 ;;      Temps:          0       0       0       0       0       0       0
 25722 ;;      Totals:         0      20       0       0       0       0       0
 25723 ;;Total ram usage:       20 bytes
 25724 ;; Hardware stack levels used:    1
 25725 ;; Hardware stack levels required when called:    6
 25726 ;; This function calls:
 25727 ;;		_putsUSART
 25728 ;;		_WriteUSART
 25729 ;;		_itoa
 25730 ;; This function is called by:
 25731 ;;		_main
 25732 ;;		_doModeVerbose
 25733 ;; This function uses a non-reentrant model
 25734 ;;
 25735                           
 25736                           	psect	text62
 25737  006070                     __ptext62:
 25738                           	opt stack 0
 25739  006070                     _printFirmwareVersion:
 25740                           	opt stack 23
 25741                           
 25742                           ;main.c: 3295: char wrkbuf[20];
 25743                           ;main.c: 3296: putsUSART((char *) "Version: ");
 25744                           
 25745                           ;incstack = 0
 25746                           ;incstack = 0
 25747  006070  0E7E               	movlw	high STR_300
 25748  006072  6E21               	movwf	?_putsUSART+1,c
 25749  006074  0E74               	movlw	low STR_300
 25750  006076  6E20               	movwf	?_putsUSART,c
 25751  006078  ECD5  F032         	call	_putsUSART	;wreg free
 25752                           
 25753                           ;main.c: 3297: itoa(wrkbuf, 1, 10);
 25754  00607C  D82A               	call	PL34	;call to abstracted procedure
 25755  00607E  EC9F  F034         	call	_itoa	;wreg free
 25756                           
 25757                           ; BSR set to: 0
 25758                           ;main.c: 3298: putsUSART(wrkbuf);
 25759  006082  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25760  006084  6E21               	movwf	?_putsUSART+1,c
 25761  006086  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25762  006088  6E20               	movwf	?_putsUSART,c
 25763  00608A  ECD5  F032         	call	_putsUSART	;wreg free
 25764  00608E                     l1368:
 25765  00608E  A2AC               	btfss	4012,1,c	;volatile
 25766  006090  D7FE               	goto	l1368
 25767                           
 25768                           ;main.c: 3300: WriteUSART('.');
 25769  006092  0E2E               	movlw	46
 25770  006094  EC81  F035         	call	_WriteUSART
 25771                           
 25772                           ;main.c: 3301: itoa(wrkbuf, 1, 10);
 25773  006098  D81C               	call	PL34	;call to abstracted procedure
 25774  00609A  EC9F  F034         	call	_itoa	;wreg free
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;main.c: 3302: putsUSART(wrkbuf);
 25778  00609E  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25779  0060A0  6E21               	movwf	?_putsUSART+1,c
 25780  0060A2  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25781  0060A4  6E20               	movwf	?_putsUSART,c
 25782  0060A6  ECD5  F032         	call	_putsUSART	;wreg free
 25783  0060AA                     l1371:
 25784  0060AA  A2AC               	btfss	4012,1,c	;volatile
 25785  0060AC  D7FE               	goto	l1371
 25786                           
 25787                           ;main.c: 3304: WriteUSART('.');
 25788  0060AE  0E2E               	movlw	46
 25789  0060B0  EC81  F035         	call	_WriteUSART
 25790                           
 25791                           ;main.c: 3305: itoa(wrkbuf, 1, 10);
 25792  0060B4  D80E               	call	PL34	;call to abstracted procedure
 25793  0060B6  EC9F  F034         	call	_itoa	;wreg free
 25794                           
 25795                           ; BSR set to: 0
 25796                           ;main.c: 3306: putsUSART(wrkbuf);
 25797  0060BA  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25798  0060BC  6E21               	movwf	?_putsUSART+1,c
 25799  0060BE  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25800  0060C0  6E20               	movwf	?_putsUSART,c
 25801  0060C2  ECD5  F032         	call	_putsUSART	;wreg free
 25802                           
 25803                           ;main.c: 3307: putsUSART((char *) "\r\n");
 25804  0060C6  0E72               	movlw	high (STR_241+51)
 25805  0060C8  6E21               	movwf	?_putsUSART+1,c
 25806  0060CA  0EDA               	movlw	low (STR_241+51)
 25807  0060CC  6E20               	movwf	?_putsUSART,c
 25808  0060CE  EFD5  F032         	goto	_putsUSART	;wreg free
 25809  0060D2                     __end_of_printFirmwareVersion:
 25810                           	opt stack 0
 25811  0060D2                     PL34:
 25812                           	opt stack 23
 25813  0060D2  0100               	movlb	0	; () banked
 25814  0060D4  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25815  0060D6  6F6A               	movwf	(?_itoa+1)& (0+255),b
 25816  0060D8  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25817  0060DA  6F69               	movwf	?_itoa& (0+255),b
 25818  0060DC  6B6C               	clrf	(?_itoa+3)& (0+255),b
 25819  0060DE  0E01               	movlw	1
 25820  0060E0  6F6B               	movwf	(?_itoa+2)& (0+255),b
 25821  0060E2  6B6E               	clrf	(?_itoa+5)& (0+255),b
 25822  0060E4  0E0A               	movlw	10
 25823  0060E6  6F6D               	movwf	(?_itoa+4)& (0+255),b
 25824  0060E8  0C0A               	retlw	10
 25825  0060EA                     __end_ofPL34:
 25826                           	opt stack 0
 25827                           tblptru	equ	0xFF8
 25828                           tblptrh	equ	0xFF7
 25829                           tblptrl	equ	0xFF6
 25830                           tablat	equ	0xFF5
 25831                           prodh	equ	0xFF4
 25832                           prodl	equ	0xFF3
 25833                           intcon	equ	0xFF2
 25834                           indf0	equ	0xFEF
 25835                           postinc0	equ	0xFEE
 25836                           fsr0h	equ	0xFEA
 25837                           fsr0l	equ	0xFE9
 25838                           wreg	equ	0xFE8
 25839                           indf1	equ	0xFE7
 25840                           postinc1	equ	0xFE6
 25841                           postdec1	equ	0xFE5
 25842                           fsr1h	equ	0xFE2
 25843                           fsr1l	equ	0xFE1
 25844                           indf2	equ	0xFDF
 25845                           postinc2	equ	0xFDE
 25846                           postdec2	equ	0xFDD
 25847                           plusw2	equ	0xFDB
 25848                           fsr2h	equ	0xFDA
 25849                           fsr2l	equ	0xFD9
 25850                           status	equ	0xFD8
 25851                           
 25852 ;; *************** function _itoa *****************
 25853 ;; Defined at:
 25854 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\itoa.c"
 25855 ;; Parameters:    Size  Location     Type
 25856 ;;  buf             2    9[BANK0 ] PTR unsigned char 
 25857 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 25858 ;;  val             2   11[BANK0 ] int 
 25859 ;;  base            2   13[BANK0 ] int 
 25860 ;; Auto vars:     Size  Location     Type
 25861 ;;  cp              2    0        PTR unsigned char 
 25862 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 25863 ;; Return value:  Size  Location     Type
 25864 ;;                  2    9[BANK0 ] PTR unsigned char 
 25865 ;; Registers used:
 25866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25867 ;; Tracked objects:
 25868 ;;		On entry : F/0
 25869 ;;		On exit  : F/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25872 ;;      Params:         0       6       0       0       0       0       0
 25873 ;;      Locals:         2       0       0       0       0       0       0
 25874 ;;      Temps:          0       0       0       0       0       0       0
 25875 ;;      Totals:         2       6       0       0       0       0       0
 25876 ;;Total ram usage:        8 bytes
 25877 ;; Hardware stack levels used:    1
 25878 ;; Hardware stack levels required when called:    5
 25879 ;; This function calls:
 25880 ;;		_utoa
 25881 ;; This function is called by:
 25882 ;;		_receiveSendEventSLCAN
 25883 ;;		_findNodes
 25884 ;;		_printGUID
 25885 ;;		_printNodeFirmwareVersion
 25886 ;;		_printFirmwareVersion
 25887 ;; This function uses a non-reentrant model
 25888 ;;
 25889                           
 25890                           	psect	text63
 25891  00693E                     __ptext63:
 25892                           	opt stack 0
 25893  00693E                     _itoa:
 25894                           	opt stack 23
 25895                           
 25896                           ; BSR set to: 0
 25897                           
 25898                           ;incstack = 0
 25899                           ;incstack = 0
 25900  00693E  AF6C               	btfss	(itoa@val+1)& (0+255),7,b
 25901  006940  D00C               	goto	l18708
 25902                           
 25903                           ; BSR set to: 0
 25904  006942  C069  FFD9         	movff	itoa@buf,fsr2l
 25905  006946  C06A  FFDA         	movff	itoa@buf+1,fsr2h
 25906  00694A  0E2D               	movlw	45
 25907  00694C  6EDF               	movwf	indf2,c
 25908                           
 25909                           ; BSR set to: 0
 25910  00694E  4B69               	infsnz	itoa@buf& (0+255),f,b
 25911  006950  2B6A               	incf	(itoa@buf+1)& (0+255),f,b
 25912                           
 25913                           ; BSR set to: 0
 25914  006952  6D6B               	negf	itoa@val& (0+255),b
 25915  006954  1F6C               	comf	(itoa@val+1)& (0+255),f,b
 25916  006956  B0D8               	btfsc	status,0,c
 25917  006958  2B6C               	incf	(itoa@val+1)& (0+255),f,b
 25918  00695A                     l18708:
 25919                           
 25920                           ; BSR set to: 0
 25921  00695A  C069  F060         	movff	itoa@buf,?_utoa
 25922  00695E  C06A  F061         	movff	itoa@buf+1,?_utoa+1
 25923  006962  C06B  F062         	movff	itoa@val,?_utoa+2
 25924  006966  C06C  F063         	movff	itoa@val+1,?_utoa+3
 25925  00696A  C06D  F064         	movff	itoa@base,?_utoa+4
 25926  00696E  C06E  F065         	movff	itoa@base+1,?_utoa+5
 25927  006972  EF04  F02E         	goto	_utoa	;wreg free
 25928  006976                     __end_of_itoa:
 25929                           	opt stack 0
 25930                           tblptru	equ	0xFF8
 25931                           tblptrh	equ	0xFF7
 25932                           tblptrl	equ	0xFF6
 25933                           tablat	equ	0xFF5
 25934                           prodh	equ	0xFF4
 25935                           prodl	equ	0xFF3
 25936                           intcon	equ	0xFF2
 25937                           indf0	equ	0xFEF
 25938                           postinc0	equ	0xFEE
 25939                           fsr0h	equ	0xFEA
 25940                           fsr0l	equ	0xFE9
 25941                           wreg	equ	0xFE8
 25942                           indf1	equ	0xFE7
 25943                           postinc1	equ	0xFE6
 25944                           postdec1	equ	0xFE5
 25945                           fsr1h	equ	0xFE2
 25946                           fsr1l	equ	0xFE1
 25947                           indf2	equ	0xFDF
 25948                           postinc2	equ	0xFDE
 25949                           postdec2	equ	0xFDD
 25950                           plusw2	equ	0xFDB
 25951                           fsr2h	equ	0xFDA
 25952                           fsr2l	equ	0xFD9
 25953                           status	equ	0xFD8
 25954                           
 25955 ;; *************** function _utoa *****************
 25956 ;; Defined at:
 25957 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\itoa.c"
 25958 ;; Parameters:    Size  Location     Type
 25959 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 25960 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 25961 ;;  val             2    2[BANK0 ] unsigned int 
 25962 ;;  base            2    4[BANK0 ] int 
 25963 ;; Auto vars:     Size  Location     Type
 25964 ;;  v               2    6[BANK0 ] unsigned int 
 25965 ;;  c               1    8[BANK0 ] unsigned char 
 25966 ;; Return value:  Size  Location     Type
 25967 ;;                  2    0[BANK0 ] PTR unsigned char 
 25968 ;; Registers used:
 25969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25970 ;; Tracked objects:
 25971 ;;		On entry : F/0
 25972 ;;		On exit  : F/0
 25973 ;;		Unchanged: 0/0
 25974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25975 ;;      Params:         0       6       0       0       0       0       0
 25976 ;;      Locals:         0       3       0       0       0       0       0
 25977 ;;      Temps:          0       0       0       0       0       0       0
 25978 ;;      Totals:         0       9       0       0       0       0       0
 25979 ;;Total ram usage:        9 bytes
 25980 ;; Hardware stack levels used:    1
 25981 ;; Hardware stack levels required when called:    4
 25982 ;; This function calls:
 25983 ;;		___lwdiv
 25984 ;;		___lwmod
 25985 ;; This function is called by:
 25986 ;;		_itoa
 25987 ;; This function uses a non-reentrant model
 25988 ;;
 25989                           
 25990                           	psect	text64
 25991  005C08                     __ptext64:
 25992                           	opt stack 0
 25993  005C08                     _utoa:
 25994                           	opt stack 23
 25995                           
 25996                           ; BSR set to: 0
 25997                           
 25998                           ; BSR set to: 0
 25999                           ;incstack = 0
 26000                           ;incstack = 0
 26001  005C08  C062  F066         	movff	utoa@val,utoa@v
 26002  005C0C  C063  F067         	movff	utoa@val+1,utoa@v+1
 26003  005C10                     l18872:
 26004                           
 26005                           ; BSR set to: 0
 26006  005C10  C066  F01F         	movff	utoa@v,?___lwdiv
 26007  005C14  C067  F020         	movff	utoa@v+1,?___lwdiv+1
 26008  005C18  C064  F021         	movff	utoa@base,?___lwdiv+2
 26009  005C1C  C065  F022         	movff	utoa@base+1,?___lwdiv+3
 26010  005C20  ECFF  F032         	call	___lwdiv	;wreg free
 26011  005C24  C01F  F066         	movff	?___lwdiv,utoa@v
 26012  005C28  C020  F067         	movff	?___lwdiv+1,utoa@v+1
 26013                           
 26014                           ; BSR set to: 0
 26015  005C2C  4B60               	infsnz	utoa@buf& (0+255),f,b
 26016  005C2E  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 26017                           
 26018                           ; BSR set to: 0
 26019  005C30  5167               	movf	(utoa@v+1)& (0+255),w,b
 26020  005C32  1166               	iorwf	utoa@v& (0+255),w,b
 26021  005C34  E1ED               	bnz	l18872
 26022                           
 26023                           ; BSR set to: 0
 26024  005C36  C060  FFD9         	movff	utoa@buf,fsr2l
 26025  005C3A  C061  FFDA         	movff	utoa@buf+1,fsr2h
 26026  005C3E  0E00               	movlw	0
 26027  005C40  6ADF               	clrf	indf2,c
 26028                           
 26029                           ; BSR set to: 0
 26030  005C42  0760               	decf	utoa@buf& (0+255),f,b
 26031  005C44  A0D8               	btfss	status,0,c
 26032  005C46  0761               	decf	(utoa@buf+1)& (0+255),f,b
 26033  005C48                     l18882:
 26034                           
 26035                           ; BSR set to: 0
 26036  005C48  C062  F01F         	movff	utoa@val,?___lwmod
 26037  005C4C  C063  F020         	movff	utoa@val+1,?___lwmod+1
 26038  005C50  C064  F021         	movff	utoa@base,?___lwmod+2
 26039  005C54  C065  F022         	movff	utoa@base+1,?___lwmod+3
 26040  005C58  EC0C  F034         	call	___lwmod	;wreg free
 26041  005C5C  501F               	movf	?___lwmod,w,c
 26042  005C5E  6F68               	movwf	utoa@c& (0+255),b
 26043                           
 26044                           ; BSR set to: 0
 26045  005C60  C062  F01F         	movff	utoa@val,?___lwdiv
 26046  005C64  C063  F020         	movff	utoa@val+1,?___lwdiv+1
 26047  005C68  C064  F021         	movff	utoa@base,?___lwdiv+2
 26048  005C6C  C065  F022         	movff	utoa@base+1,?___lwdiv+3
 26049  005C70  ECFF  F032         	call	___lwdiv	;wreg free
 26050  005C74  C01F  F062         	movff	?___lwdiv,utoa@val
 26051  005C78  C020  F063         	movff	?___lwdiv+1,utoa@val+1
 26052                           
 26053                           ; BSR set to: 0
 26054  005C7C  0E09               	movlw	9
 26055  005C7E  6568               	cpfsgt	utoa@c& (0+255),b
 26056  005C80  D002               	goto	l2522
 26057                           
 26058                           ; BSR set to: 0
 26059  005C82  0E07               	movlw	7
 26060  005C84  2768               	addwf	utoa@c& (0+255),f,b
 26061  005C86                     l2522:
 26062                           
 26063                           ; BSR set to: 0
 26064  005C86  0E30               	movlw	48
 26065  005C88  2768               	addwf	utoa@c& (0+255),f,b
 26066                           
 26067                           ; BSR set to: 0
 26068  005C8A  C060  FFD9         	movff	utoa@buf,fsr2l
 26069  005C8E  C061  FFDA         	movff	utoa@buf+1,fsr2h
 26070  005C92  C068  FFDF         	movff	utoa@c,indf2
 26071                           
 26072                           ; BSR set to: 0
 26073  005C96  0760               	decf	utoa@buf& (0+255),f,b
 26074  005C98  A0D8               	btfss	status,0,c
 26075  005C9A  0761               	decf	(utoa@buf+1)& (0+255),f,b
 26076                           
 26077                           ; BSR set to: 0
 26078  005C9C  5163               	movf	(utoa@val+1)& (0+255),w,b
 26079  005C9E  1162               	iorwf	utoa@val& (0+255),w,b
 26080  005CA0  E1D3               	bnz	l18882
 26081                           
 26082                           ; BSR set to: 0
 26083                           ;	Return value of _utoa is never used
 26084  005CA2  4B60               	infsnz	utoa@buf& (0+255),f,b
 26085  005CA4  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 26086                           
 26087                           ; BSR set to: 0
 26088  005CA6  0012               	return	
 26089  005CA8                     __end_of_utoa:
 26090                           	opt stack 0
 26091                           tblptru	equ	0xFF8
 26092                           tblptrh	equ	0xFF7
 26093                           tblptrl	equ	0xFF6
 26094                           tablat	equ	0xFF5
 26095                           prodh	equ	0xFF4
 26096                           prodl	equ	0xFF3
 26097                           intcon	equ	0xFF2
 26098                           indf0	equ	0xFEF
 26099                           postinc0	equ	0xFEE
 26100                           fsr0h	equ	0xFEA
 26101                           fsr0l	equ	0xFE9
 26102                           wreg	equ	0xFE8
 26103                           indf1	equ	0xFE7
 26104                           postinc1	equ	0xFE6
 26105                           postdec1	equ	0xFE5
 26106                           fsr1h	equ	0xFE2
 26107                           fsr1l	equ	0xFE1
 26108                           indf2	equ	0xFDF
 26109                           postinc2	equ	0xFDE
 26110                           postdec2	equ	0xFDD
 26111                           plusw2	equ	0xFDB
 26112                           fsr2h	equ	0xFDA
 26113                           fsr2l	equ	0xFD9
 26114                           status	equ	0xFD8
 26115                           
 26116 ;; *************** function ___lwmod *****************
 26117 ;; Defined at:
 26118 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwmod.c"
 26119 ;; Parameters:    Size  Location     Type
 26120 ;;  dividend        2   30[COMRAM] unsigned int 
 26121 ;;  divisor         2   32[COMRAM] unsigned int 
 26122 ;; Auto vars:     Size  Location     Type
 26123 ;;  counter         1   34[COMRAM] unsigned char 
 26124 ;; Return value:  Size  Location     Type
 26125 ;;                  2   30[COMRAM] unsigned int 
 26126 ;; Registers used:
 26127 ;;		wreg, status,2, status,0
 26128 ;; Tracked objects:
 26129 ;;		On entry : F/0
 26130 ;;		On exit  : F/0
 26131 ;;		Unchanged: F/0
 26132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26133 ;;      Params:         4       0       0       0       0       0       0
 26134 ;;      Locals:         1       0       0       0       0       0       0
 26135 ;;      Temps:          0       0       0       0       0       0       0
 26136 ;;      Totals:         5       0       0       0       0       0       0
 26137 ;;Total ram usage:        5 bytes
 26138 ;; Hardware stack levels used:    1
 26139 ;; Hardware stack levels required when called:    3
 26140 ;; This function calls:
 26141 ;;		Nothing
 26142 ;; This function is called by:
 26143 ;;		_utoa
 26144 ;; This function uses a non-reentrant model
 26145 ;;
 26146                           
 26147                           	psect	text65
 26148  006818                     __ptext65:
 26149                           	opt stack 0
 26150  006818                     ___lwmod:
 26151                           	opt stack 23
 26152                           
 26153                           ; BSR set to: 0
 26154                           
 26155                           ; BSR set to: 0
 26156                           ;incstack = 0
 26157                           ;incstack = 0
 26158  006818  5022               	movf	___lwmod@divisor+1,w,c
 26159  00681A  1021               	iorwf	___lwmod@divisor,w,c
 26160  00681C  E017               	bz	l2646
 26161                           
 26162                           ; BSR set to: 0
 26163  00681E  0E01               	movlw	1
 26164  006820  6E23               	movwf	___lwmod@counter,c
 26165  006822  D004               	goto	l18966
 26166  006824                     l18964:
 26167                           
 26168                           ; BSR set to: 0
 26169  006824  90D8               	bcf	status,0,c
 26170  006826  3621               	rlcf	___lwmod@divisor,f,c
 26171  006828  3622               	rlcf	___lwmod@divisor+1,f,c
 26172  00682A  2A23               	incf	___lwmod@counter,f,c
 26173  00682C                     l18966:
 26174                           
 26175                           ; BSR set to: 0
 26176  00682C  AE22               	btfss	___lwmod@divisor+1,7,c
 26177  00682E  D7FA               	goto	l18964
 26178  006830                     l18968:
 26179                           
 26180                           ; BSR set to: 0
 26181  006830  5021               	movf	___lwmod@divisor,w,c
 26182  006832  5C1F               	subwf	___lwmod@dividend,w,c
 26183  006834  5022               	movf	___lwmod@divisor+1,w,c
 26184  006836  5820               	subwfb	___lwmod@dividend+1,w,c
 26185  006838  E304               	bnc	l18972
 26186                           
 26187                           ; BSR set to: 0
 26188  00683A  5021               	movf	___lwmod@divisor,w,c
 26189  00683C  5E1F               	subwf	___lwmod@dividend,f,c
 26190  00683E  5022               	movf	___lwmod@divisor+1,w,c
 26191  006840  5A20               	subwfb	___lwmod@dividend+1,f,c
 26192  006842                     l18972:
 26193                           
 26194                           ; BSR set to: 0
 26195  006842  90D8               	bcf	status,0,c
 26196  006844  3222               	rrcf	___lwmod@divisor+1,f,c
 26197  006846  3221               	rrcf	___lwmod@divisor,f,c
 26198                           
 26199                           ; BSR set to: 0
 26200  006848  2E23               	decfsz	___lwmod@counter,f,c
 26201  00684A  D7F2               	goto	l18968
 26202  00684C                     l2646:
 26203                           
 26204                           ; BSR set to: 0
 26205  00684C  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
 26206  006850  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
 26207                           
 26208                           ; BSR set to: 0
 26209  006854  0012               	return	
 26210  006856                     __end_of___lwmod:
 26211                           	opt stack 0
 26212                           tblptru	equ	0xFF8
 26213                           tblptrh	equ	0xFF7
 26214                           tblptrl	equ	0xFF6
 26215                           tablat	equ	0xFF5
 26216                           prodh	equ	0xFF4
 26217                           prodl	equ	0xFF3
 26218                           intcon	equ	0xFF2
 26219                           indf0	equ	0xFEF
 26220                           postinc0	equ	0xFEE
 26221                           fsr0h	equ	0xFEA
 26222                           fsr0l	equ	0xFE9
 26223                           wreg	equ	0xFE8
 26224                           indf1	equ	0xFE7
 26225                           postinc1	equ	0xFE6
 26226                           postdec1	equ	0xFE5
 26227                           fsr1h	equ	0xFE2
 26228                           fsr1l	equ	0xFE1
 26229                           indf2	equ	0xFDF
 26230                           postinc2	equ	0xFDE
 26231                           postdec2	equ	0xFDD
 26232                           plusw2	equ	0xFDB
 26233                           fsr2h	equ	0xFDA
 26234                           fsr2l	equ	0xFD9
 26235                           status	equ	0xFD8
 26236                           
 26237 ;; *************** function ___lwdiv *****************
 26238 ;; Defined at:
 26239 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwdiv.c"
 26240 ;; Parameters:    Size  Location     Type
 26241 ;;  dividend        2   30[COMRAM] unsigned int 
 26242 ;;  divisor         2   32[COMRAM] unsigned int 
 26243 ;; Auto vars:     Size  Location     Type
 26244 ;;  quotient        2   35[COMRAM] unsigned int 
 26245 ;;  counter         1   34[COMRAM] unsigned char 
 26246 ;; Return value:  Size  Location     Type
 26247 ;;                  2   30[COMRAM] unsigned int 
 26248 ;; Registers used:
 26249 ;;		wreg, status,2, status,0
 26250 ;; Tracked objects:
 26251 ;;		On entry : F/0
 26252 ;;		On exit  : F/0
 26253 ;;		Unchanged: F/0
 26254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26255 ;;      Params:         4       0       0       0       0       0       0
 26256 ;;      Locals:         3       0       0       0       0       0       0
 26257 ;;      Temps:          0       0       0       0       0       0       0
 26258 ;;      Totals:         7       0       0       0       0       0       0
 26259 ;;Total ram usage:        7 bytes
 26260 ;; Hardware stack levels used:    1
 26261 ;; Hardware stack levels required when called:    3
 26262 ;; This function calls:
 26263 ;;		Nothing
 26264 ;; This function is called by:
 26265 ;;		_utoa
 26266 ;; This function uses a non-reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text66
 26270  0065FE                     __ptext66:
 26271                           	opt stack 0
 26272  0065FE                     ___lwdiv:
 26273                           	opt stack 23
 26274                           
 26275                           ; BSR set to: 0
 26276                           
 26277                           ; BSR set to: 0
 26278                           ;incstack = 0
 26279                           ;incstack = 0
 26280  0065FE  6A24               	clrf	___lwdiv@quotient,c
 26281  006600  6A25               	clrf	___lwdiv@quotient+1,c
 26282                           
 26283                           ; BSR set to: 0
 26284  006602  5022               	movf	___lwdiv@divisor+1,w,c
 26285  006604  1021               	iorwf	___lwdiv@divisor,w,c
 26286  006606  E01B               	bz	l2636
 26287                           
 26288                           ; BSR set to: 0
 26289  006608  0E01               	movlw	1
 26290  00660A  6E23               	movwf	___lwdiv@counter,c
 26291  00660C  D004               	goto	l18946
 26292  00660E                     l18944:
 26293                           
 26294                           ; BSR set to: 0
 26295  00660E  90D8               	bcf	status,0,c
 26296  006610  3621               	rlcf	___lwdiv@divisor,f,c
 26297  006612  3622               	rlcf	___lwdiv@divisor+1,f,c
 26298  006614  2A23               	incf	___lwdiv@counter,f,c
 26299  006616                     l18946:
 26300                           
 26301                           ; BSR set to: 0
 26302  006616  AE22               	btfss	___lwdiv@divisor+1,7,c
 26303  006618  D7FA               	goto	l18944
 26304  00661A                     l18948:
 26305                           
 26306                           ; BSR set to: 0
 26307  00661A  90D8               	bcf	status,0,c
 26308  00661C  3624               	rlcf	___lwdiv@quotient,f,c
 26309  00661E  3625               	rlcf	___lwdiv@quotient+1,f,c
 26310                           
 26311                           ; BSR set to: 0
 26312  006620  5021               	movf	___lwdiv@divisor,w,c
 26313  006622  5C1F               	subwf	___lwdiv@dividend,w,c
 26314  006624  5022               	movf	___lwdiv@divisor+1,w,c
 26315  006626  5820               	subwfb	___lwdiv@dividend+1,w,c
 26316  006628  E305               	bnc	l18956
 26317                           
 26318                           ; BSR set to: 0
 26319  00662A  5021               	movf	___lwdiv@divisor,w,c
 26320  00662C  5E1F               	subwf	___lwdiv@dividend,f,c
 26321  00662E  5022               	movf	___lwdiv@divisor+1,w,c
 26322  006630  5A20               	subwfb	___lwdiv@dividend+1,f,c
 26323                           
 26324                           ; BSR set to: 0
 26325  006632  8024               	bsf	___lwdiv@quotient,0,c
 26326  006634                     l18956:
 26327                           
 26328                           ; BSR set to: 0
 26329  006634  90D8               	bcf	status,0,c
 26330  006636  3222               	rrcf	___lwdiv@divisor+1,f,c
 26331  006638  3221               	rrcf	___lwdiv@divisor,f,c
 26332                           
 26333                           ; BSR set to: 0
 26334  00663A  2E23               	decfsz	___lwdiv@counter,f,c
 26335  00663C  D7EE               	goto	l18948
 26336  00663E                     l2636:
 26337                           
 26338                           ; BSR set to: 0
 26339  00663E  C024  F01F         	movff	___lwdiv@quotient,?___lwdiv
 26340  006642  C025  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
 26341                           
 26342                           ; BSR set to: 0
 26343  006646  0012               	return	
 26344  006648                     __end_of___lwdiv:
 26345                           	opt stack 0
 26346                           tblptru	equ	0xFF8
 26347                           tblptrh	equ	0xFF7
 26348                           tblptrl	equ	0xFF6
 26349                           tablat	equ	0xFF5
 26350                           prodh	equ	0xFF4
 26351                           prodl	equ	0xFF3
 26352                           intcon	equ	0xFF2
 26353                           indf0	equ	0xFEF
 26354                           postinc0	equ	0xFEE
 26355                           fsr0h	equ	0xFEA
 26356                           fsr0l	equ	0xFE9
 26357                           wreg	equ	0xFE8
 26358                           indf1	equ	0xFE7
 26359                           postinc1	equ	0xFE6
 26360                           postdec1	equ	0xFE5
 26361                           fsr1h	equ	0xFE2
 26362                           fsr1l	equ	0xFE1
 26363                           indf2	equ	0xFDF
 26364                           postinc2	equ	0xFDE
 26365                           postdec2	equ	0xFDD
 26366                           plusw2	equ	0xFDB
 26367                           fsr2h	equ	0xFDA
 26368                           fsr2l	equ	0xFD9
 26369                           status	equ	0xFD8
 26370                           
 26371 ;; *************** function _vscp_restoreDefaults *****************
 26372 ;; Defined at:
 26373 ;;		line 3284 in file "main.c"
 26374 ;; Parameters:    Size  Location     Type
 26375 ;;		None
 26376 ;; Auto vars:     Size  Location     Type
 26377 ;;		None
 26378 ;; Return value:  Size  Location     Type
 26379 ;;		None               void
 26380 ;; Registers used:
 26381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26382 ;; Tracked objects:
 26383 ;;		On entry : 0/0
 26384 ;;		On exit  : 0/0
 26385 ;;		Unchanged: 0/0
 26386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26387 ;;      Params:         0       0       0       0       0       0       0
 26388 ;;      Locals:         0       0       0       0       0       0       0
 26389 ;;      Temps:          0       0       0       0       0       0       0
 26390 ;;      Totals:         0       0       0       0       0       0       0
 26391 ;;Total ram usage:        0 bytes
 26392 ;; Hardware stack levels used:    1
 26393 ;; Hardware stack levels required when called:    6
 26394 ;; This function calls:
 26395 ;;		_init_app_ram
 26396 ;;		_init_app_eeprom
 26397 ;; This function is called by:
 26398 ;;		_main
 26399 ;;		_doModeVerbose
 26400 ;; This function uses a non-reentrant model
 26401 ;;
 26402                           
 26403                           	psect	text67
 26404  006B70                     __ptext67:
 26405                           	opt stack 0
 26406  006B70                     _vscp_restoreDefaults:
 26407                           	opt stack 23
 26408                           
 26409                           ;main.c: 3285: init_app_eeprom();
 26410                           
 26411                           ; BSR set to: 0
 26412                           ;incstack = 0
 26413                           ;incstack = 0
 26414  006B70  ECDF  F02A         	call	_init_app_eeprom	;wreg free
 26415                           
 26416                           ;main.c: 3286: init_app_ram();
 26417  006B74  EF84  F01A         	goto	_init_app_ram	;wreg free
 26418  006B78                     __end_of_vscp_restoreDefaults:
 26419                           	opt stack 0
 26420                           tblptru	equ	0xFF8
 26421                           tblptrh	equ	0xFF7
 26422                           tblptrl	equ	0xFF6
 26423                           tablat	equ	0xFF5
 26424                           prodh	equ	0xFF4
 26425                           prodl	equ	0xFF3
 26426                           intcon	equ	0xFF2
 26427                           indf0	equ	0xFEF
 26428                           postinc0	equ	0xFEE
 26429                           fsr0h	equ	0xFEA
 26430                           fsr0l	equ	0xFE9
 26431                           wreg	equ	0xFE8
 26432                           indf1	equ	0xFE7
 26433                           postinc1	equ	0xFE6
 26434                           postdec1	equ	0xFE5
 26435                           fsr1h	equ	0xFE2
 26436                           fsr1l	equ	0xFE1
 26437                           indf2	equ	0xFDF
 26438                           postinc2	equ	0xFDE
 26439                           postdec2	equ	0xFDD
 26440                           plusw2	equ	0xFDB
 26441                           fsr2h	equ	0xFDA
 26442                           fsr2l	equ	0xFD9
 26443                           status	equ	0xFD8
 26444                           
 26445 ;; *************** function _init_app_eeprom *****************
 26446 ;; Defined at:
 26447 ;;		line 580 in file "main.c"
 26448 ;; Parameters:    Size  Location     Type
 26449 ;;		None
 26450 ;; Auto vars:     Size  Location     Type
 26451 ;;  i               1   34[COMRAM] unsigned char 
 26452 ;; Return value:  Size  Location     Type
 26453 ;;		None               void
 26454 ;; Registers used:
 26455 ;;		wreg, status,2, status,0, cstack
 26456 ;; Tracked objects:
 26457 ;;		On entry : 0/0
 26458 ;;		On exit  : 0/0
 26459 ;;		Unchanged: 0/0
 26460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26461 ;;      Params:         0       0       0       0       0       0       0
 26462 ;;      Locals:         1       0       0       0       0       0       0
 26463 ;;      Temps:          0       0       0       0       0       0       0
 26464 ;;      Totals:         1       0       0       0       0       0       0
 26465 ;;Total ram usage:        1 bytes
 26466 ;; Hardware stack levels used:    1
 26467 ;; Hardware stack levels required when called:    4
 26468 ;; This function calls:
 26469 ;;		_Busy_eep
 26470 ;;		_Write_b_eep
 26471 ;; This function is called by:
 26472 ;;		_vscp_restoreDefaults
 26473 ;; This function uses a non-reentrant model
 26474 ;;
 26475                           
 26476                           	psect	text68
 26477  0055BE                     __ptext68:
 26478                           	opt stack 0
 26479  0055BE                     _init_app_eeprom:
 26480                           	opt stack 24
 26481                           
 26482                           ;main.c: 581: uint8_t i;
 26483                           ;main.c: 583: (Busy_eep(), Write_b_eep(0x01,0x55));
 26484                           
 26485                           ;incstack = 0
 26486                           ;incstack = 0
 26487  0055BE  ECBC  F035         	call	_Busy_eep	;wreg free
 26488  0055C2  6A20               	clrf	?_Write_b_eep+1,c
 26489  0055C4  0E01               	movlw	1
 26490  0055C6  6E1F               	movwf	?_Write_b_eep,c
 26491  0055C8  0E55               	movlw	85
 26492  0055CA  6E21               	movwf	?_Write_b_eep+2,c
 26493  0055CC  ECBB  F034         	call	_Write_b_eep	;wreg free
 26494                           
 26495                           ;main.c: 584: (Busy_eep(), Write_b_eep(0x02,0xAA));
 26496  0055D0  ECBC  F035         	call	_Busy_eep	;wreg free
 26497  0055D4  6A20               	clrf	?_Write_b_eep+1,c
 26498  0055D6  0E02               	movlw	2
 26499  0055D8  6E1F               	movwf	?_Write_b_eep,c
 26500  0055DA  0EAA               	movlw	170
 26501  0055DC  6E21               	movwf	?_Write_b_eep+2,c
 26502  0055DE  ECBB  F034         	call	_Write_b_eep	;wreg free
 26503                           
 26504                           ;main.c: 585: (Busy_eep(), Write_b_eep(0x03,0));
 26505  0055E2  ECBC  F035         	call	_Busy_eep	;wreg free
 26506  0055E6  6A20               	clrf	?_Write_b_eep+1,c
 26507  0055E8  0E03               	movlw	3
 26508  0055EA  6E1F               	movwf	?_Write_b_eep,c
 26509  0055EC  0E00               	movlw	0
 26510  0055EE  6A21               	clrf	?_Write_b_eep+2,c
 26511  0055F0  ECBB  F034         	call	_Write_b_eep	;wreg free
 26512                           
 26513                           ;main.c: 586: (Busy_eep(), Write_b_eep(0x05,0));
 26514  0055F4  ECBC  F035         	call	_Busy_eep	;wreg free
 26515  0055F8  6A20               	clrf	?_Write_b_eep+1,c
 26516  0055FA  0E05               	movlw	5
 26517  0055FC  6E1F               	movwf	?_Write_b_eep,c
 26518  0055FE  0E00               	movlw	0
 26519  005600  6A21               	clrf	?_Write_b_eep+2,c
 26520  005602  ECBB  F034         	call	_Write_b_eep	;wreg free
 26521                           
 26522                           ;main.c: 587: (Busy_eep(), Write_b_eep(0x06,0));
 26523  005606  ECBC  F035         	call	_Busy_eep	;wreg free
 26524  00560A  6A20               	clrf	?_Write_b_eep+1,c
 26525  00560C  0E06               	movlw	6
 26526  00560E  6E1F               	movwf	?_Write_b_eep,c
 26527  005610  0E00               	movlw	0
 26528  005612  6A21               	clrf	?_Write_b_eep+2,c
 26529  005614  ECBB  F034         	call	_Write_b_eep	;wreg free
 26530                           
 26531                           ;main.c: 588: (Busy_eep(), Write_b_eep(0x09,20u));
 26532  005618  ECBC  F035         	call	_Busy_eep	;wreg free
 26533  00561C  6A20               	clrf	?_Write_b_eep+1,c
 26534  00561E  0E09               	movlw	9
 26535  005620  6E1F               	movwf	?_Write_b_eep,c
 26536  005622  0E14               	movlw	20
 26537  005624  6E21               	movwf	?_Write_b_eep+2,c
 26538  005626  ECBB  F034         	call	_Write_b_eep	;wreg free
 26539                           
 26540                           ;main.c: 591: for ( i = 0x20; i < (0x5C + 4); i++ ) {
 26541  00562A  0E20               	movlw	32
 26542  00562C  6E23               	movwf	init_app_eeprom@i,c
 26543  00562E                     l17044:
 26544                           
 26545                           ;main.c: 592: (Busy_eep(), Write_b_eep(0x20,0xFF));
 26546  00562E  ECBC  F035         	call	_Busy_eep	;wreg free
 26547  005632  6A20               	clrf	?_Write_b_eep+1,c
 26548  005634  0E20               	movlw	32
 26549  005636  6E1F               	movwf	?_Write_b_eep,c
 26550  005638  0EFF               	movlw	255
 26551  00563A  6821               	setf	?_Write_b_eep+2,c
 26552  00563C  ECBB  F034         	call	_Write_b_eep	;wreg free
 26553  005640  2A23               	incf	init_app_eeprom@i,f,c
 26554  005642  0E5F               	movlw	95
 26555  005644  6423               	cpfsgt	init_app_eeprom@i,c
 26556  005646  D7F3               	goto	l17044
 26557                           
 26558                           ;main.c: 593: }
 26559                           ;main.c: 596: for (i = 0x60; i < (0x64 + 4); i++) {
 26560  005648  0E60               	movlw	96
 26561  00564A  6E23               	movwf	init_app_eeprom@i,c
 26562  00564C                     l17058:
 26563                           
 26564                           ;main.c: 597: (Busy_eep(), Write_b_eep(0x60,0x00));
 26565  00564C  ECBC  F035         	call	_Busy_eep	;wreg free
 26566  005650  6A20               	clrf	?_Write_b_eep+1,c
 26567  005652  0E60               	movlw	96
 26568  005654  6E1F               	movwf	?_Write_b_eep,c
 26569  005656  0E00               	movlw	0
 26570  005658  6A21               	clrf	?_Write_b_eep+2,c
 26571  00565A  ECBB  F034         	call	_Write_b_eep	;wreg free
 26572  00565E  2A23               	incf	init_app_eeprom@i,f,c
 26573  005660  0E67               	movlw	103
 26574  005662  6423               	cpfsgt	init_app_eeprom@i,c
 26575  005664  D7F3               	goto	l17058
 26576                           
 26577                           ;main.c: 598: }
 26578                           ;main.c: 600: (Busy_eep(), Write_b_eep(0x65,0));
 26579  005666  ECBC  F035         	call	_Busy_eep	;wreg free
 26580  00566A  6A20               	clrf	?_Write_b_eep+1,c
 26581  00566C  0E65               	movlw	101
 26582  00566E  6E1F               	movwf	?_Write_b_eep,c
 26583  005670  0E00               	movlw	0
 26584  005672  6A21               	clrf	?_Write_b_eep+2,c
 26585  005674  ECBB  F034         	call	_Write_b_eep	;wreg free
 26586                           
 26587                           ;main.c: 601: (Busy_eep(), Write_b_eep(0x66,0));
 26588  005678  ECBC  F035         	call	_Busy_eep	;wreg free
 26589  00567C  6A20               	clrf	?_Write_b_eep+1,c
 26590  00567E  0E66               	movlw	102
 26591  005680  6E1F               	movwf	?_Write_b_eep,c
 26592  005682  6A21               	clrf	?_Write_b_eep+2,c
 26593  005684  EFBB  F034         	goto	_Write_b_eep	;wreg free
 26594  005688                     __end_of_init_app_eeprom:
 26595                           	opt stack 0
 26596                           tblptru	equ	0xFF8
 26597                           tblptrh	equ	0xFF7
 26598                           tblptrl	equ	0xFF6
 26599                           tablat	equ	0xFF5
 26600                           prodh	equ	0xFF4
 26601                           prodl	equ	0xFF3
 26602                           intcon	equ	0xFF2
 26603                           indf0	equ	0xFEF
 26604                           postinc0	equ	0xFEE
 26605                           fsr0h	equ	0xFEA
 26606                           fsr0l	equ	0xFE9
 26607                           wreg	equ	0xFE8
 26608                           indf1	equ	0xFE7
 26609                           postinc1	equ	0xFE6
 26610                           postdec1	equ	0xFE5
 26611                           fsr1h	equ	0xFE2
 26612                           fsr1l	equ	0xFE1
 26613                           indf2	equ	0xFDF
 26614                           postinc2	equ	0xFDE
 26615                           postdec2	equ	0xFDD
 26616                           plusw2	equ	0xFDB
 26617                           fsr2h	equ	0xFDA
 26618                           fsr2l	equ	0xFD9
 26619                           status	equ	0xFD8
 26620                           
 26621 ;; *************** function _printMode *****************
 26622 ;; Defined at:
 26623 ;;		line 3315 in file "main.c"
 26624 ;; Parameters:    Size  Location     Type
 26625 ;;		None
 26626 ;; Auto vars:     Size  Location     Type
 26627 ;;		None
 26628 ;; Return value:  Size  Location     Type
 26629 ;;		None               void
 26630 ;; Registers used:
 26631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26632 ;; Tracked objects:
 26633 ;;		On entry : 0/0
 26634 ;;		On exit  : 0/0
 26635 ;;		Unchanged: 0/0
 26636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26637 ;;      Params:         0       0       0       0       0       0       0
 26638 ;;      Locals:         0       0       0       0       0       0       0
 26639 ;;      Temps:          0       0       0       0       0       0       0
 26640 ;;      Totals:         0       0       0       0       0       0       0
 26641 ;;Total ram usage:        0 bytes
 26642 ;; Hardware stack levels used:    1
 26643 ;; Hardware stack levels required when called:    5
 26644 ;; This function calls:
 26645 ;;		_putsUSART
 26646 ;; This function is called by:
 26647 ;;		_main
 26648 ;; This function uses a non-reentrant model
 26649 ;;
 26650                           
 26651                           	psect	text69
 26652  0061D6                     __ptext69:
 26653                           	opt stack 0
 26654  0061D6                     _printMode:
 26655                           	opt stack 25
 26656                           
 26657                           ;main.c: 3316: putsUSART((char *) "Mode: ");
 26658                           
 26659                           ;incstack = 0
 26660                           ;incstack = 0
 26661  0061D6  0E7F               	movlw	high STR_302
 26662  0061D8  6E21               	movwf	?_putsUSART+1,c
 26663  0061DA  0E10               	movlw	low STR_302
 26664  0061DC  6E20               	movwf	?_putsUSART,c
 26665  0061DE  ECD5  F032         	call	_putsUSART	;wreg free
 26666                           
 26667                           ;main.c: 3317: if (0 == mode) {
 26668  0061E2  0100               	movlb	0	; () banked
 26669  0061E4  67F1               	tstfsz	_mode& (0+255),b
 26670  0061E6  D007               	goto	l15432
 26671                           
 26672                           ; BSR set to: 0
 26673                           ;main.c: 3318: putsUSART((char *) "Verbose");
 26674  0061E8  0E7F               	movlw	high STR_303
 26675  0061EA  6E21               	movwf	?_putsUSART+1,c
 26676  0061EC  0E08               	movlw	low STR_303
 26677  0061EE  6E20               	movwf	?_putsUSART,c
 26678  0061F0  ECD5  F032         	call	_putsUSART	;wreg free
 26679                           
 26680                           ;main.c: 3319: } else if (1 == mode) {
 26681  0061F4  D023               	goto	l1378
 26682  0061F6                     l15432:
 26683                           
 26684                           ; BSR set to: 0
 26685  0061F6  05F1               	decf	_mode& (0+255),w,b
 26686  0061F8  E107               	bnz	l15436
 26687                           
 26688                           ; BSR set to: 0
 26689                           ;main.c: 3320: putsUSART((char *) "VSCP Driver");
 26690  0061FA  0E7E               	movlw	high STR_304
 26691  0061FC  6E21               	movwf	?_putsUSART+1,c
 26692  0061FE  0E32               	movlw	low STR_304
 26693  006200  6E20               	movwf	?_putsUSART,c
 26694  006202  ECD5  F032         	call	_putsUSART	;wreg free
 26695                           
 26696                           ;main.c: 3321: } else if (2 == mode) {
 26697  006206  D01A               	goto	l1378
 26698  006208                     l15436:
 26699                           
 26700                           ; BSR set to: 0
 26701  006208  51F1               	movf	_mode& (0+255),w,b
 26702  00620A  0A02               	xorlw	2
 26703  00620C  E107               	bnz	l15440
 26704                           
 26705                           ; BSR set to: 0
 26706                           ;main.c: 3322: putsUSART((char *) "SL Driver");
 26707  00620E  0E7E               	movlw	high STR_305
 26708  006210  6E21               	movwf	?_putsUSART+1,c
 26709  006212  0E92               	movlw	low STR_305
 26710  006214  6E20               	movwf	?_putsUSART,c
 26711  006216  ECD5  F032         	call	_putsUSART	;wreg free
 26712                           
 26713                           ;main.c: 3323: } else if (3 == mode) {
 26714  00621A  D010               	goto	l1378
 26715  00621C                     l15440:
 26716                           
 26717                           ; BSR set to: 0
 26718  00621C  51F1               	movf	_mode& (0+255),w,b
 26719  00621E  0A03               	xorlw	3
 26720  006220  E107               	bnz	l15444
 26721                           
 26722                           ; BSR set to: 0
 26723                           ;main.c: 3324: putsUSART((char *) "VSCP Node");
 26724  006222  0E7E               	movlw	high STR_306
 26725  006224  6E21               	movwf	?_putsUSART+1,c
 26726  006226  0E88               	movlw	low STR_306
 26727  006228  6E20               	movwf	?_putsUSART,c
 26728  00622A  ECD5  F032         	call	_putsUSART	;wreg free
 26729                           
 26730                           ;main.c: 3325: } else {
 26731  00622E  D006               	goto	l1378
 26732  006230                     l15444:
 26733                           
 26734                           ; BSR set to: 0
 26735                           ;main.c: 3326: putsUSART((char *) "Unknown (Verbose used)");
 26736  006230  0E7C               	movlw	high STR_307
 26737  006232  6E21               	movwf	?_putsUSART+1,c
 26738  006234  0E38               	movlw	low STR_307
 26739  006236  6E20               	movwf	?_putsUSART,c
 26740  006238  ECD5  F032         	call	_putsUSART	;wreg free
 26741  00623C                     l1378:
 26742                           
 26743                           ;main.c: 3327: }
 26744                           ;main.c: 3328: putsUSART((char *) "\r\n");
 26745  00623C  0E72               	movlw	high (STR_241+51)
 26746  00623E  6E21               	movwf	?_putsUSART+1,c
 26747  006240  0EDA               	movlw	low (STR_241+51)
 26748  006242  6E20               	movwf	?_putsUSART,c
 26749  006244  EFD5  F032         	goto	_putsUSART	;wreg free
 26750  006248                     __end_of_printMode:
 26751                           	opt stack 0
 26752                           tblptru	equ	0xFF8
 26753                           tblptrh	equ	0xFF7
 26754                           tblptrl	equ	0xFF6
 26755                           tablat	equ	0xFF5
 26756                           prodh	equ	0xFF4
 26757                           prodl	equ	0xFF3
 26758                           intcon	equ	0xFF2
 26759                           indf0	equ	0xFEF
 26760                           postinc0	equ	0xFEE
 26761                           fsr0h	equ	0xFEA
 26762                           fsr0l	equ	0xFE9
 26763                           wreg	equ	0xFE8
 26764                           indf1	equ	0xFE7
 26765                           postinc1	equ	0xFE6
 26766                           postdec1	equ	0xFE5
 26767                           fsr1h	equ	0xFE2
 26768                           fsr1l	equ	0xFE1
 26769                           indf2	equ	0xFDF
 26770                           postinc2	equ	0xFDE
 26771                           postdec2	equ	0xFDD
 26772                           plusw2	equ	0xFDB
 26773                           fsr2h	equ	0xFDA
 26774                           fsr2l	equ	0xFD9
 26775                           status	equ	0xFD8
 26776                           
 26777 ;; *************** function _putsUSART *****************
 26778 ;; Defined at:
 26779 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uputs.c"
 26780 ;; Parameters:    Size  Location     Type
 26781 ;;  data            2   31[COMRAM] PTR unsigned char 
 26782 ;;		 -> STR_308(3), STR_307(23), STR_306(10), STR_305(10), 
 26783 ;;		 -> STR_304(12), STR_303(8), STR_302(7), STR_301(3), 
 26784 ;;		 -> printFirmwareVersion@wrkbuf(20), STR_300(10), STR_299(3), STR_296(20), 
 26785 ;;		 -> STR_295(3), STR_294(14), STR_293(3), STR_289(8), 
 26786 ;;		 -> STR_288(17), STR_287(3), STR_286(67), STR_285(3), 
 26787 ;;		 -> STR_284(27), STR_283(3), STR_282(67), STR_281(52), 
 26788 ;;		 -> STR_280(39), STR_279(62), STR_278(55), STR_277(49), 
 26789 ;;		 -> STR_276(67), STR_275(47), STR_274(47), STR_273(34), 
 26790 ;;		 -> STR_272(71), STR_271(20), STR_270(78), STR_269(24), 
 26791 ;;		 -> STR_268(77), STR_267(74), STR_266(76), STR_265(47), 
 26792 ;;		 -> STR_264(40), STR_263(39), STR_262(33), STR_261(23), 
 26793 ;;		 -> STR_260(56), STR_259(24), STR_258(44), STR_257(50), 
 26794 ;;		 -> STR_256(31), STR_255(50), STR_254(51), STR_253(46), 
 26795 ;;		 -> STR_252(44), STR_251(27), STR_250(39), STR_249(39), 
 26796 ;;		 -> STR_248(57), STR_247(55), STR_246(3), STR_243(24), 
 26797 ;;		 -> STR_242(58), STR_241(54), STR_240(59), STR_239(3), 
 26798 ;;		 -> STR_236(25), STR_235(52), STR_234(3), STR_231(24), 
 26799 ;;		 -> STR_230(3), STR_227(24), STR_226(3), STR_223(24), 
 26800 ;;		 -> STR_222(3), STR_219(23), STR_218(3), STR_215(21), 
 26801 ;;		 -> STR_214(3), STR_211(22), STR_210(3), STR_207(17), 
 26802 ;;		 -> STR_206(3), STR_203(18), STR_202(4), STR_201(11), 
 26803 ;;		 -> STR_200(2), STR_197(7), STR_194(7), STR_191(9), 
 26804 ;;		 -> STR_188(7), STR_185(8), STR_182(12), STR_179(7), 
 26805 ;;		 -> STR_178(2), STR_177(2), STR_176(6), STR_175(8), 
 26806 ;;		 -> STR_174(8), STR_173(20), STR_172(27), STR_171(6), 
 26807 ;;		 -> STR_170(33), STR_167(29), STR_166(34), STR_164(46), 
 26808 ;;		 -> STR_163(22), STR_161(21), STR_158(41), STR_157(23), 
 26809 ;;		 -> STR_155(22), STR_152(26), STR_150(32), STR_148(28), 
 26810 ;;		 -> STR_139(6), STR_137(40), STR_135(44), STR_132(6), 
 26811 ;;		 -> STR_131(39), STR_129(36), STR_127(37), STR_125(40), 
 26812 ;;		 -> STR_123(37), STR_122(50), STR_119(6), STR_116(41), 
 26813 ;;		 -> STR_114(38), STR_112(39), STR_110(42), STR_108(39), 
 26814 ;;		 -> STR_107(66), STR_104(6), STR_103(27), STR_102(3), 
 26815 ;;		 -> STR_99(20), STR_98(52), STR_94(8), STR_93(36), 
 26816 ;;		 -> STR_90(8), STR_89(38), STR_88(24), STR_86(33), 
 26817 ;;		 -> STR_84(24), STR_82(52), STR_80(54), STR_79(6), 
 26818 ;;		 -> STR_78(3), STR_73(25), STR_70(17), STR_69(3), 
 26819 ;;		 -> STR_68(4), STR_67(3), STR_64(4), STR_59(15), 
 26820 ;;		 -> wrkbuf(80), STR_56(14), STR_54(33), STR_52(24), 
 26821 ;;		 -> STR_50(52), STR_48(6), STR_46(6), STR_44(6), 
 26822 ;;		 -> STR_42(6), STR_40(18), STR_39(6), STR_37(33), 
 26823 ;;		 -> STR_36(6), STR_28(24), STR_27(18), STR_26(20), 
 26824 ;;		 -> STR_25(25), STR_24(22), STR_23(19), STR_22(20), 
 26825 ;;		 -> STR_21(20), STR_19(6), STR_17(6), STR_15(6), 
 26826 ;;		 -> STR_13(6), STR_11(6), STR_9(6), STR_7(31), 
 26827 ;;		 -> STR_5(29), STR_4(55), STR_3(35), STR_2(58), 
 26828 ;;		 -> STR_1(37), 
 26829 ;; Auto vars:     Size  Location     Type
 26830 ;;		None
 26831 ;; Return value:  Size  Location     Type
 26832 ;;		None               void
 26833 ;; Registers used:
 26834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26835 ;; Tracked objects:
 26836 ;;		On entry : 0/0
 26837 ;;		On exit  : 0/0
 26838 ;;		Unchanged: 0/0
 26839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26840 ;;      Params:         2       0       0       0       0       0       0
 26841 ;;      Locals:         0       0       0       0       0       0       0
 26842 ;;      Temps:          2       0       0       0       0       0       0
 26843 ;;      Totals:         4       0       0       0       0       0       0
 26844 ;;Total ram usage:        4 bytes
 26845 ;; Hardware stack levels used:    1
 26846 ;; Hardware stack levels required when called:    4
 26847 ;; This function calls:
 26848 ;;		_WriteUSART
 26849 ;; This function is called by:
 26850 ;;		_main
 26851 ;;		_doModeVerbose
 26852 ;;		_doModeSLCAN
 26853 ;;		_receivePrintEventVerbose
 26854 ;;		_receiveSendEventSLCAN
 26855 ;;		_printStatistics
 26856 ;;		_printErrors
 26857 ;;		_printHelp
 26858 ;;		_findNodes
 26859 ;;		_printGUID
 26860 ;;		_printMDF
 26861 ;;		_printNodeFirmwareVersion
 26862 ;;		_printFirmwareVersion
 26863 ;;		_printMode
 26864 ;; This function uses a non-reentrant model
 26865 ;;
 26866                           
 26867                           	psect	text70
 26868  0065AA                     __ptext70:
 26869                           	opt stack 0
 26870  0065AA                     _putsUSART:
 26871                           	opt stack 24
 26872  0065AA                     l2054:
 26873  0065AA  A2AC               	btfss	4012,1,c	;volatile
 26874  0065AC  D7FE               	goto	l2054
 26875  0065AE  5020               	movf	putsUSART@data,w,c
 26876  0065B0  6EF6               	movwf	tblptrl,c
 26877  0065B2  6EE9               	movwf	fsr0l,c
 26878  0065B4  0E05               	movlw	(high __ramtop+-1)
 26879  0065B6  6EEA               	movwf	fsr0h,c
 26880  0065B8  5021               	movf	putsUSART@data+1,w,c
 26881  0065BA  64EA               	cpfsgt	fsr0h,c
 26882  0065BC  D003               	bra	u19657
 26883  0065BE  6EEA               	movwf	fsr0h,c
 26884  0065C0  50EF               	movf	indf0,w,c
 26885  0065C2  D003               	bra	u19650
 26886  0065C4                     u19657:
 26887  0065C4  6EF7               	movwf	tblptrh,c
 26888  0065C6  0008               	tblrd		*
 26889  0065C8  50F5               	movf	tablat,w,c
 26890  0065CA                     u19650:
 26891  0065CA  EC81  F035         	call	_WriteUSART
 26892  0065CE  5020               	movf	putsUSART@data,w,c
 26893  0065D0  6E22               	movwf	??_putsUSART& (0+255),c
 26894  0065D2  5021               	movf	putsUSART@data+1,w,c
 26895  0065D4  6E23               	movwf	(??_putsUSART+1)& (0+255),c
 26896  0065D6  4A20               	infsnz	putsUSART@data,f,c
 26897  0065D8  2A21               	incf	putsUSART@data+1,f,c
 26898  0065DA  5022               	movf	??_putsUSART,w,c
 26899  0065DC  6EF6               	movwf	tblptrl,c
 26900  0065DE  6EE9               	movwf	fsr0l,c
 26901  0065E0  0E05               	movlw	(high __ramtop+-1)
 26902  0065E2  6EEA               	movwf	fsr0h,c
 26903  0065E4  5023               	movf	??_putsUSART+1,w,c
 26904  0065E6  64EA               	cpfsgt	fsr0h,c
 26905  0065E8  D003               	bra	u19667
 26906  0065EA  6EEA               	movwf	fsr0h,c
 26907  0065EC  50EF               	movf	indf0,w,c
 26908  0065EE  D003               	bra	u19660
 26909  0065F0                     u19667:
 26910  0065F0  6EF7               	movwf	tblptrh,c
 26911  0065F2  0008               	tblrd		*
 26912  0065F4  50F5               	movf	tablat,w,c
 26913  0065F6                     u19660:
 26914  0065F6  0900               	iorlw	0
 26915  0065F8  B4D8               	btfsc	status,2,c
 26916  0065FA  0012               	return	
 26917  0065FC  D7D6               	goto	l2054
 26918  0065FE                     __end_of_putsUSART:
 26919                           	opt stack 0
 26920                           tblptru	equ	0xFF8
 26921                           tblptrh	equ	0xFF7
 26922                           tblptrl	equ	0xFF6
 26923                           tablat	equ	0xFF5
 26924                           prodh	equ	0xFF4
 26925                           prodl	equ	0xFF3
 26926                           intcon	equ	0xFF2
 26927                           indf0	equ	0xFEF
 26928                           postinc0	equ	0xFEE
 26929                           fsr0h	equ	0xFEA
 26930                           fsr0l	equ	0xFE9
 26931                           wreg	equ	0xFE8
 26932                           indf1	equ	0xFE7
 26933                           postinc1	equ	0xFE6
 26934                           postdec1	equ	0xFE5
 26935                           fsr1h	equ	0xFE2
 26936                           fsr1l	equ	0xFE1
 26937                           indf2	equ	0xFDF
 26938                           postinc2	equ	0xFDE
 26939                           postdec2	equ	0xFDD
 26940                           plusw2	equ	0xFDB
 26941                           fsr2h	equ	0xFDA
 26942                           fsr2l	equ	0xFD9
 26943                           status	equ	0xFD8
 26944                           
 26945 ;; *************** function _WriteUSART *****************
 26946 ;; Defined at:
 26947 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
 26948 ;; Parameters:    Size  Location     Type
 26949 ;;  data            1    wreg     unsigned char 
 26950 ;; Auto vars:     Size  Location     Type
 26951 ;;  data            1   30[COMRAM] unsigned char 
 26952 ;; Return value:  Size  Location     Type
 26953 ;;		None               void
 26954 ;; Registers used:
 26955 ;;		wreg
 26956 ;; Tracked objects:
 26957 ;;		On entry : 0/0
 26958 ;;		On exit  : 0/0
 26959 ;;		Unchanged: 0/0
 26960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26961 ;;      Params:         0       0       0       0       0       0       0
 26962 ;;      Locals:         1       0       0       0       0       0       0
 26963 ;;      Temps:          0       0       0       0       0       0       0
 26964 ;;      Totals:         1       0       0       0       0       0       0
 26965 ;;Total ram usage:        1 bytes
 26966 ;; Hardware stack levels used:    1
 26967 ;; Hardware stack levels required when called:    3
 26968 ;; This function calls:
 26969 ;;		Nothing
 26970 ;; This function is called by:
 26971 ;;		_doModeVerbose
 26972 ;;		_sendEscapedUartData
 26973 ;;		_sendVSCPDriverErrorFrame
 26974 ;;		_sendVSCPDriverAck
 26975 ;;		_sendVSCPDriverNack
 26976 ;;		_sendVSCPDriverCommandReply
 26977 ;;		_receiveSendEventCANAL
 26978 ;;		_receiveSendMultiEventCANAL
 26979 ;;		_sendVSCPModeCapabilities
 26980 ;;		_receiveSendEventSLCAN
 26981 ;;		_printBinary
 26982 ;;		_findNodes
 26983 ;;		_printFirmwareVersion
 26984 ;;		_putsUSART
 26985 ;; This function uses a non-reentrant model
 26986 ;;
 26987                           
 26988                           	psect	text71
 26989  006B02                     __ptext71:
 26990                           	opt stack 0
 26991  006B02                     _WriteUSART:
 26992                           	opt stack 25
 26993                           
 26994                           ;incstack = 0
 26995                           ;incstack = 0
 26996                           ;WriteUSART@data stored from wreg
 26997  006B02  CFE8 F01F          	movff	wreg,WriteUSART@data
 26998  006B06  ACAC               	btfss	4012,6,c	;volatile
 26999  006B08  D003               	goto	l17216
 27000  006B0A  90AC               	bcf	4012,0,c	;volatile
 27001  006B0C  B22E               	btfsc	_USART_Status,1,c
 27002  006B0E  80AC               	bsf	4012,0,c	;volatile
 27003  006B10                     l17216:
 27004  006B10  C01F  FFAD         	movff	WriteUSART@data,4013	;volatile
 27005  006B14  0012               	return	
 27006  006B16                     __end_of_WriteUSART:
 27007                           	opt stack 0
 27008                           tblptru	equ	0xFF8
 27009                           tblptrh	equ	0xFF7
 27010                           tblptrl	equ	0xFF6
 27011                           tablat	equ	0xFF5
 27012                           prodh	equ	0xFF4
 27013                           prodl	equ	0xFF3
 27014                           intcon	equ	0xFF2
 27015                           indf0	equ	0xFEF
 27016                           postinc0	equ	0xFEE
 27017                           fsr0h	equ	0xFEA
 27018                           fsr0l	equ	0xFE9
 27019                           wreg	equ	0xFE8
 27020                           indf1	equ	0xFE7
 27021                           postinc1	equ	0xFE6
 27022                           postdec1	equ	0xFE5
 27023                           fsr1h	equ	0xFE2
 27024                           fsr1l	equ	0xFE1
 27025                           indf2	equ	0xFDF
 27026                           postinc2	equ	0xFDE
 27027                           postdec2	equ	0xFDD
 27028                           plusw2	equ	0xFDB
 27029                           fsr2h	equ	0xFDA
 27030                           fsr2l	equ	0xFD9
 27031                           status	equ	0xFD8
 27032                           
 27033 ;; *************** function _init *****************
 27034 ;; Defined at:
 27035 ;;		line 449 in file "main.c"
 27036 ;; Parameters:    Size  Location     Type
 27037 ;;		None
 27038 ;; Auto vars:     Size  Location     Type
 27039 ;;		None
 27040 ;; Return value:  Size  Location     Type
 27041 ;;		None               void
 27042 ;; Registers used:
 27043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27044 ;; Tracked objects:
 27045 ;;		On entry : 0/0
 27046 ;;		On exit  : 0/0
 27047 ;;		Unchanged: 0/0
 27048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27049 ;;      Params:         0       0       0       0       0       0       0
 27050 ;;      Locals:         0       0       0       0       0       0       0
 27051 ;;      Temps:          0       0       0       0       0       0       0
 27052 ;;      Totals:         0       0       0       0       0       0       0
 27053 ;;Total ram usage:        0 bytes
 27054 ;; Hardware stack levels used:    1
 27055 ;; Hardware stack levels required when called:    6
 27056 ;; This function calls:
 27057 ;;		_WriteTimer0
 27058 ;;		_init_app_ram
 27059 ;;		_OpenUSART
 27060 ;;		_OpenTimer0
 27061 ;;		_OpenTimer3
 27062 ;;		_WriteTimer3
 27063 ;;		_ECANInitialize
 27064 ;; This function is called by:
 27065 ;;		_main
 27066 ;; This function uses a non-reentrant model
 27067 ;;
 27068                           
 27069                           	psect	text72
 27070  00643E                     __ptext72:
 27071                           	opt stack 0
 27072  00643E                     _init:
 27073                           	opt stack 24
 27074                           
 27075                           ;main.c: 451: init_app_ram();
 27076                           
 27077                           ;incstack = 0
 27078                           ;incstack = 0
 27079  00643E  EC84  F01A         	call	_init_app_ram	;wreg free
 27080                           
 27081                           ;main.c: 454: OSCCONbits.IRCF0 = 1;
 27082  006442  88D3               	bsf	4051,4,c	;volatile
 27083                           
 27084                           ;main.c: 455: OSCCONbits.IRCF1 = 1;
 27085  006444  8AD3               	bsf	4051,5,c	;volatile
 27086                           
 27087                           ;main.c: 456: OSCCONbits.IRCF2 = 1;
 27088  006446  8CD3               	bsf	4051,6,c	;volatile
 27089                           
 27090                           ;main.c: 457: OSCTUNEbits.PLLEN = 1;
 27091  006448  8C9B               	bsf	3995,6,c	;volatile
 27092                           
 27093                           ;main.c: 459: TRISBbits.RB2 = 0;
 27094  00644A  9493               	bcf	3987,2,c	;volatile
 27095                           
 27096                           ;main.c: 460: TRISBbits.RB3 = 1;
 27097  00644C  8693               	bsf	3987,3,c	;volatile
 27098                           
 27099                           ;main.c: 462: TRISCbits.RC1 = 0;
 27100  00644E  9294               	bcf	3988,1,c	;volatile
 27101                           
 27102                           ;main.c: 463: TRISCbits.RC4 = 0;
 27103  006450  9894               	bcf	3988,4,c	;volatile
 27104                           
 27105                           ;main.c: 464: TRISCbits.RC5 = 1;
 27106  006452  8A94               	bsf	3988,5,c	;volatile
 27107                           
 27108                           ;main.c: 465: TRISCbits.RC6 = 0;
 27109  006454  9C94               	bcf	3988,6,c	;volatile
 27110                           
 27111                           ;main.c: 466: TRISCbits.RC7 = 1;
 27112  006456  8E94               	bsf	3988,7,c	;volatile
 27113                           
 27114                           ;main.c: 468: PORTCbits.RC4 = 1;
 27115  006458  8882               	bsf	3970,4,c	;volatile
 27116                           
 27117                           ;main.c: 472: OpenUSART( 0b01111111 &
 27118                           ;main.c: 473: 0b11111111 &
 27119                           ;main.c: 474: 0b11111110 &
 27120                           ;main.c: 475: 0b11111101 &
 27121                           ;main.c: 476: 0b11111111 &
 27122                           ;main.c: 477: 0b11111111,
 27123                           ;main.c: 478: 21 );
 27124  00645A  6A20               	clrf	?_OpenUSART+1,c
 27125  00645C  0E15               	movlw	21
 27126  00645E  6E1F               	movwf	?_OpenUSART,c
 27127  006460  0E7C               	movlw	124
 27128  006462  EC7C  F032         	call	_OpenUSART
 27129                           
 27130                           ;main.c: 482: RCIF = 0;
 27131  006466  9A9E               	bcf	3998,5,c	;volatile
 27132                           
 27133                           ;main.c: 483: RCIP = 0;
 27134  006468  9A9F               	bcf	3999,5,c	;volatile
 27135                           
 27136                           ;main.c: 484: RCIE = 1;
 27137  00646A  8A9D               	bsf	3997,5,c	;volatile
 27138                           
 27139                           ;main.c: 485: PEIE = 1;
 27140  00646C  8CF2               	bsf	intcon,6,c	;volatile
 27141                           
 27142                           ;main.c: 488: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110010);
 27143  00646E  0E92               	movlw	146
 27144  006470  EC4C  F035         	call	_OpenTimer0
 27145                           
 27146                           ;main.c: 489: WriteTimer0(0xfb1d);
 27147  006474  0EFB               	movlw	251
 27148  006476  6E20               	movwf	?_WriteTimer0+1,c
 27149  006478  0E1D               	movlw	29
 27150  00647A  6E1F               	movwf	?_WriteTimer0,c
 27151  00647C  ECA6  F035         	call	_WriteTimer0	;wreg free
 27152                           
 27153                           ;main.c: 492: OpenTimer3( 0b11111101 & 0b11001111 & 0b11111111 & 0b11111111 & 0b01111111
      +                           );
 27154  006480  0E4D               	movlw	77
 27155  006482  EC1A  F035         	call	_OpenTimer3
 27156                           
 27157                           ;main.c: 493: WriteTimer3( 0x0000 );
 27158  006486  0E00               	movlw	0
 27159  006488  6A20               	clrf	?_WriteTimer3+1,c
 27160  00648A  6A1F               	clrf	?_WriteTimer3,c
 27161  00648C  EC94  F035         	call	_WriteTimer3	;wreg free
 27162                           
 27163                           ;main.c: 496: ECANInitialize();
 27164  006490  EC7D  F02F         	call	_ECANInitialize	;wreg free
 27165                           
 27166                           ;main.c: 520: RXBnIE = 1;
 27167  006494  82A3               	bsf	4003,1,c	;volatile
 27168                           
 27169                           ;main.c: 521: ERRIE = 1;
 27170  006496  8AA3               	bsf	4003,5,c	;volatile
 27171                           
 27172                           ;main.c: 523: (INTCONbits.GIE = 1);
 27173  006498  8EF2               	bsf	intcon,7,c	;volatile
 27174  00649A  0012               	return	
 27175  00649C                     __end_of_init:
 27176                           	opt stack 0
 27177                           tblptru	equ	0xFF8
 27178                           tblptrh	equ	0xFF7
 27179                           tblptrl	equ	0xFF6
 27180                           tablat	equ	0xFF5
 27181                           prodh	equ	0xFF4
 27182                           prodl	equ	0xFF3
 27183                           intcon	equ	0xFF2
 27184                           indf0	equ	0xFEF
 27185                           postinc0	equ	0xFEE
 27186                           fsr0h	equ	0xFEA
 27187                           fsr0l	equ	0xFE9
 27188                           wreg	equ	0xFE8
 27189                           indf1	equ	0xFE7
 27190                           postinc1	equ	0xFE6
 27191                           postdec1	equ	0xFE5
 27192                           fsr1h	equ	0xFE2
 27193                           fsr1l	equ	0xFE1
 27194                           indf2	equ	0xFDF
 27195                           postinc2	equ	0xFDE
 27196                           postdec2	equ	0xFDD
 27197                           plusw2	equ	0xFDB
 27198                           fsr2h	equ	0xFDA
 27199                           fsr2l	equ	0xFD9
 27200                           status	equ	0xFD8
 27201                           
 27202 ;; *************** function _ECANInitialize *****************
 27203 ;; Defined at:
 27204 ;;		line 168 in file "ECAN.c"
 27205 ;; Parameters:    Size  Location     Type
 27206 ;;		None
 27207 ;; Auto vars:     Size  Location     Type
 27208 ;;		None
 27209 ;; Return value:  Size  Location     Type
 27210 ;;		None               void
 27211 ;; Registers used:
 27212 ;;		wreg, status,2, status,0, cstack
 27213 ;; Tracked objects:
 27214 ;;		On entry : 0/0
 27215 ;;		On exit  : 0/0
 27216 ;;		Unchanged: 0/0
 27217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27218 ;;      Params:         0       0       0       0       0       0       0
 27219 ;;      Locals:         0       0       0       0       0       0       0
 27220 ;;      Temps:          0       0       0       0       0       0       0
 27221 ;;      Totals:         0       0       0       0       0       0       0
 27222 ;;Total ram usage:        0 bytes
 27223 ;; Hardware stack levels used:    1
 27224 ;; Hardware stack levels required when called:    4
 27225 ;; This function calls:
 27226 ;;		_ECANSetOperationMode
 27227 ;; This function is called by:
 27228 ;;		_init
 27229 ;; This function uses a non-reentrant model
 27230 ;;
 27231                           
 27232                           	psect	text73
 27233  005EFA                     __ptext73:
 27234                           	opt stack 0
 27235  005EFA                     _ECANInitialize:
 27236                           	opt stack 25
 27237                           
 27238                           ;ECAN.c: 171: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 27239                           
 27240                           ;incstack = 0
 27241                           ;incstack = 0
 27242  005EFA  0E80               	movlw	128
 27243  005EFC  EC6A  F035         	call	_ECANSetOperationMode
 27244                           
 27245                           ;ECAN.c: 175: BRGCON1 = ((1-1) << 6) | (10-1);
 27246  005F00  0E09               	movlw	9
 27247  005F02  6E70               	movwf	3952,c	;volatile
 27248                           
 27249                           ;ECAN.c: 176: BRGCON2 = (1 << 7) | (1 << 6) | ((8-1) << 3) | (5-1);
 27250  005F04  0EFC               	movlw	252
 27251  005F06  6E71               	movwf	3953,c	;volatile
 27252                           
 27253                           ;ECAN.c: 180: BRGCON3 = (0 << 7) |
 27254                           ;ECAN.c: 181: (0 << 6) |
 27255                           ;ECAN.c: 182: (2-1);
 27256  005F08  0E01               	movlw	1
 27257  005F0A  6E72               	movwf	3954,c	;volatile
 27258                           
 27259                           ;ECAN.c: 185: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 0;
 27260  005F0C  0E20               	movlw	32
 27261  005F0E  6E73               	movwf	3955,c	;volatile
 27262                           
 27263                           ;ECAN.c: 192: MDSEL1 = 0x80 >> 7;
 27264  005F10  8E77               	bsf	3959,7,c	;volatile
 27265                           
 27266                           ;ECAN.c: 193: MDSEL0 = 0x80 >> 6;
 27267  005F12  9C77               	bcf	3959,6,c	;volatile
 27268                           
 27269                           ;ECAN.c: 205: RXB0CON = 0;
 27270  005F14  6A60               	clrf	3936,c	;volatile
 27271                           
 27272                           ;ECAN.c: 211: RXB1CON = 0;
 27273  005F16  010F               	movlb	15	; () banked
 27274  005F18  6B50               	clrf	80,b	;volatile
 27275                           
 27276                           ; BSR set to: 15
 27277                           ;ECAN.c: 221: B0CON = 0;
 27278  005F1A  010E               	movlb	14	; () banked
 27279  005F1C  6B20               	clrf	32,b	;volatile
 27280                           
 27281                           ; BSR set to: 14
 27282                           ;ECAN.c: 231: B1CON = 0;
 27283  005F1E  6B30               	clrf	48,b	;volatile
 27284                           
 27285                           ; BSR set to: 14
 27286                           ;ECAN.c: 241: B2CON = 0;
 27287  005F20  6B40               	clrf	64,b	;volatile
 27288                           
 27289                           ; BSR set to: 14
 27290                           ;ECAN.c: 251: B3CON = 0;
 27291  005F22  6B50               	clrf	80,b	;volatile
 27292                           
 27293                           ; BSR set to: 14
 27294                           ;ECAN.c: 261: B4CON = 0;
 27295  005F24  6B60               	clrf	96,b	;volatile
 27296                           
 27297                           ; BSR set to: 14
 27298                           ;ECAN.c: 271: B5CON = 0;
 27299  005F26  6B70               	clrf	112,b	;volatile
 27300                           
 27301                           ; BSR set to: 14
 27302                           ;ECAN.c: 278: BSEL0 = 0 << 7 | 0 << 6 | 0 << 5 | 0 << 4 | 0 << 3 | 0 << 2;
 27303  005F28  010D               	movlb	13	; () banked
 27304  005F2A  6BF8               	clrf	248,b	;volatile
 27305                           
 27306                           ; BSR set to: 13
 27307                           ;ECAN.c: 295: RXF0SIDH = (long)0x00000000L >> 21L;RXF0SIDL = (((long)0x00000000L >> 13L)
      +                           & 0xe0) | ((long)(0x00000000L) & 0x03L) | 0x08;RXF0EIDH = (long)0x00000000L >> 8L;RXF0E
      +                          IDL = 0x00000000L;;
 27308  005F2C  010F               	movlb	15	; () banked
 27309  005F2E  6B00               	clrf	0,b	;volatile
 27310                           
 27311                           ; BSR set to: 15
 27312  005F30  0E08               	movlw	8
 27313  005F32  6F01               	movwf	1,b	;volatile
 27314                           
 27315                           ; BSR set to: 15
 27316  005F34  6B02               	clrf	2,b	;volatile
 27317                           
 27318                           ; BSR set to: 15
 27319  005F36  6B03               	clrf	3,b	;volatile
 27320                           
 27321                           ; BSR set to: 15
 27322                           ;ECAN.c: 428: RXFCON0 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (1);
 27323  005F38  0E01               	movlw	1
 27324  005F3A  010D               	movlb	13	; () banked
 27325  005F3C  6FD4               	movwf	212,b	;volatile
 27326                           
 27327                           ; BSR set to: 13
 27328                           ;ECAN.c: 436: RXFCON1 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (0);
 27329  005F3E  6BD5               	clrf	213,b	;volatile
 27330                           
 27331                           ; BSR set to: 13
 27332                           ;ECAN.c: 449: RXFBCON0 = (0 << 4) | 0;
 27333  005F40  6BE0               	clrf	224,b	;volatile
 27334                           
 27335                           ; BSR set to: 13
 27336                           ;ECAN.c: 450: RXFBCON1 = (1 << 4) | 1;
 27337  005F42  0E11               	movlw	17
 27338  005F44  6FE1               	movwf	225,b	;volatile
 27339                           
 27340                           ; BSR set to: 13
 27341                           ;ECAN.c: 451: RXFBCON2 = (1 << 4) | 1;
 27342  005F46  6FE2               	movwf	226,b	;volatile
 27343                           
 27344                           ; BSR set to: 13
 27345                           ;ECAN.c: 452: RXFBCON3 = (0 << 4) | 0;
 27346  005F48  6BE3               	clrf	227,b	;volatile
 27347                           
 27348                           ; BSR set to: 13
 27349                           ;ECAN.c: 453: RXFBCON4 = (0 << 4) | 0;
 27350  005F4A  6BE4               	clrf	228,b	;volatile
 27351                           
 27352                           ; BSR set to: 13
 27353                           ;ECAN.c: 454: RXFBCON5 = (0 << 4) | 0;
 27354  005F4C  6BE5               	clrf	229,b	;volatile
 27355                           
 27356                           ; BSR set to: 13
 27357                           ;ECAN.c: 455: RXFBCON6 = (0 << 4) | 0;
 27358  005F4E  6BE6               	clrf	230,b	;volatile
 27359                           
 27360                           ; BSR set to: 13
 27361                           ;ECAN.c: 456: RXFBCON7 = (0 << 4) | 0;
 27362  005F50  6BE7               	clrf	231,b	;volatile
 27363                           
 27364                           ; BSR set to: 13
 27365                           ;ECAN.c: 458: MSEL0 = 1 << 6 | 1 << 4 | 1 << 2 | 0;;
 27366  005F52  0E54               	movlw	84
 27367  005F54  6FF0               	movwf	240,b	;volatile
 27368                           
 27369                           ; BSR set to: 13
 27370                           ;ECAN.c: 462: MSEL1 = 0 << 6 | 0 << 4 | 1 << 2 | 1;;
 27371  005F56  0E05               	movlw	5
 27372  005F58  6FF1               	movwf	241,b	;volatile
 27373                           
 27374                           ; BSR set to: 13
 27375                           ;ECAN.c: 466: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 27376  005F5A  6BF2               	clrf	242,b	;volatile
 27377                           
 27378                           ; BSR set to: 13
 27379                           ;ECAN.c: 470: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 27380  005F5C  6BF2               	clrf	242,b	;volatile
 27381                           
 27382                           ; BSR set to: 13
 27383                           ;ECAN.c: 481: RXM0SIDH = (long)0x00000000L >> 21L; RXM0SIDL = (((long)0x00000000L >> 13L
      +                          ) & 0xe0) | ((long)(0x00000000L) & 0x03L); RXM0EIDH = (long)0x00000000L >> 8L; RXM0EIDL 
      +                          = 0x00000000L;;
 27384  005F5E  010F               	movlb	15	; () banked
 27385  005F60  6B18               	clrf	24,b	;volatile
 27386                           
 27387                           ; BSR set to: 15
 27388  005F62  6B19               	clrf	25,b	;volatile
 27389                           
 27390                           ; BSR set to: 15
 27391  005F64  6B1A               	clrf	26,b	;volatile
 27392                           
 27393                           ; BSR set to: 15
 27394  005F66  6B1B               	clrf	27,b	;volatile
 27395                           
 27396                           ; BSR set to: 15
 27397                           ;ECAN.c: 482: RXM0EXIDM = 1;
 27398  005F68  8719               	bsf	25,3,b	;volatile
 27399                           
 27400                           ; BSR set to: 15
 27401                           ;ECAN.c: 489: RXM1SIDH = (long)0x00000000L >> 21L; RXM1SIDL = (((long)0x00000000L >> 13L
      +                          ) & 0xe0) | ((long)(0x00000000L) & 0x03L); RXM1EIDH = (long)0x00000000L >> 8L; RXM1EIDL 
      +                          = 0x00000000L;;
 27402  005F6A  6B1C               	clrf	28,b	;volatile
 27403                           
 27404                           ; BSR set to: 15
 27405  005F6C  6B1D               	clrf	29,b	;volatile
 27406                           
 27407                           ; BSR set to: 15
 27408  005F6E  6B1E               	clrf	30,b	;volatile
 27409                           
 27410                           ; BSR set to: 15
 27411  005F70  6B1F               	clrf	31,b	;volatile
 27412                           
 27413                           ; BSR set to: 15
 27414                           ;ECAN.c: 490: RXM1EXIDEN = 1;
 27415  005F72  871D               	bsf	29,3,b	;volatile
 27416                           
 27417                           ;ECAN.c: 498: ECANSetOperationMode(0x20);
 27418  005F74  0E20               	movlw	32
 27419  005F76  EF6A  F035         	goto	_ECANSetOperationMode
 27420  005F7A                     __end_of_ECANInitialize:
 27421                           	opt stack 0
 27422                           tblptru	equ	0xFF8
 27423                           tblptrh	equ	0xFF7
 27424                           tblptrl	equ	0xFF6
 27425                           tablat	equ	0xFF5
 27426                           prodh	equ	0xFF4
 27427                           prodl	equ	0xFF3
 27428                           intcon	equ	0xFF2
 27429                           indf0	equ	0xFEF
 27430                           postinc0	equ	0xFEE
 27431                           fsr0h	equ	0xFEA
 27432                           fsr0l	equ	0xFE9
 27433                           wreg	equ	0xFE8
 27434                           indf1	equ	0xFE7
 27435                           postinc1	equ	0xFE6
 27436                           postdec1	equ	0xFE5
 27437                           fsr1h	equ	0xFE2
 27438                           fsr1l	equ	0xFE1
 27439                           indf2	equ	0xFDF
 27440                           postinc2	equ	0xFDE
 27441                           postdec2	equ	0xFDD
 27442                           plusw2	equ	0xFDB
 27443                           fsr2h	equ	0xFDA
 27444                           fsr2l	equ	0xFD9
 27445                           status	equ	0xFD8
 27446                           
 27447 ;; *************** function _WriteTimer3 *****************
 27448 ;; Defined at:
 27449 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t3write.c"
 27450 ;; Parameters:    Size  Location     Type
 27451 ;;  timer3          2   30[COMRAM] unsigned int 
 27452 ;; Auto vars:     Size  Location     Type
 27453 ;;  timer           2   32[COMRAM] struct Timers
 27454 ;; Return value:  Size  Location     Type
 27455 ;;		None               void
 27456 ;; Registers used:
 27457 ;;		None
 27458 ;; Tracked objects:
 27459 ;;		On entry : 0/0
 27460 ;;		On exit  : 0/0
 27461 ;;		Unchanged: 0/0
 27462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27463 ;;      Params:         2       0       0       0       0       0       0
 27464 ;;      Locals:         2       0       0       0       0       0       0
 27465 ;;      Temps:          0       0       0       0       0       0       0
 27466 ;;      Totals:         4       0       0       0       0       0       0
 27467 ;;Total ram usage:        4 bytes
 27468 ;; Hardware stack levels used:    1
 27469 ;; Hardware stack levels required when called:    3
 27470 ;; This function calls:
 27471 ;;		Nothing
 27472 ;; This function is called by:
 27473 ;;		_init
 27474 ;; This function uses a non-reentrant model
 27475 ;;
 27476                           
 27477                           	psect	text74
 27478  006B28                     __ptext74:
 27479                           	opt stack 0
 27480  006B28                     _WriteTimer3:
 27481                           	opt stack 26
 27482                           
 27483                           ;incstack = 0
 27484                           ;incstack = 0
 27485  006B28  C01F  F021         	movff	WriteTimer3@timer3,WriteTimer3@timer
 27486  006B2C  C020  F022         	movff	WriteTimer3@timer3+1,WriteTimer3@timer+1
 27487  006B30  C022  FFB3         	movff	WriteTimer3@timer+1,4019	;volatile
 27488  006B34  C021  FFB2         	movff	WriteTimer3@timer,4018	;volatile
 27489  006B38  0012               	return	
 27490  006B3A                     __end_of_WriteTimer3:
 27491                           	opt stack 0
 27492                           tblptru	equ	0xFF8
 27493                           tblptrh	equ	0xFF7
 27494                           tblptrl	equ	0xFF6
 27495                           tablat	equ	0xFF5
 27496                           prodh	equ	0xFF4
 27497                           prodl	equ	0xFF3
 27498                           intcon	equ	0xFF2
 27499                           indf0	equ	0xFEF
 27500                           postinc0	equ	0xFEE
 27501                           fsr0h	equ	0xFEA
 27502                           fsr0l	equ	0xFE9
 27503                           wreg	equ	0xFE8
 27504                           indf1	equ	0xFE7
 27505                           postinc1	equ	0xFE6
 27506                           postdec1	equ	0xFE5
 27507                           fsr1h	equ	0xFE2
 27508                           fsr1l	equ	0xFE1
 27509                           indf2	equ	0xFDF
 27510                           postinc2	equ	0xFDE
 27511                           postdec2	equ	0xFDD
 27512                           plusw2	equ	0xFDB
 27513                           fsr2h	equ	0xFDA
 27514                           fsr2l	equ	0xFD9
 27515                           status	equ	0xFD8
 27516                           
 27517 ;; *************** function _OpenTimer3 *****************
 27518 ;; Defined at:
 27519 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t3open.c"
 27520 ;; Parameters:    Size  Location     Type
 27521 ;;  config          1    wreg     unsigned char 
 27522 ;; Auto vars:     Size  Location     Type
 27523 ;;  config          1   30[COMRAM] unsigned char 
 27524 ;; Return value:  Size  Location     Type
 27525 ;;		None               void
 27526 ;; Registers used:
 27527 ;;		wreg, status,2, status,0
 27528 ;; Tracked objects:
 27529 ;;		On entry : 0/0
 27530 ;;		On exit  : 0/0
 27531 ;;		Unchanged: 0/0
 27532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27533 ;;      Params:         0       0       0       0       0       0       0
 27534 ;;      Locals:         1       0       0       0       0       0       0
 27535 ;;      Temps:          0       0       0       0       0       0       0
 27536 ;;      Totals:         1       0       0       0       0       0       0
 27537 ;;Total ram usage:        1 bytes
 27538 ;; Hardware stack levels used:    1
 27539 ;; Hardware stack levels required when called:    3
 27540 ;; This function calls:
 27541 ;;		Nothing
 27542 ;; This function is called by:
 27543 ;;		_init
 27544 ;; This function uses a non-reentrant model
 27545 ;;
 27546                           
 27547                           	psect	text75
 27548  006A34                     __ptext75:
 27549                           	opt stack 0
 27550  006A34                     _OpenTimer3:
 27551                           	opt stack 26
 27552                           
 27553                           ;incstack = 0
 27554                           ;incstack = 0
 27555                           ;OpenTimer3@config stored from wreg
 27556  006A34  CFE8 F01F          	movff	wreg,OpenTimer3@config
 27557  006A38  501F               	movf	OpenTimer3@config,w,c
 27558  006A3A  0B36               	andlw	54
 27559  006A3C  6EB1               	movwf	4017,c	;volatile
 27560  006A3E  6AB3               	clrf	4019,c	;volatile
 27561  006A40  6AB2               	clrf	4018,c	;volatile
 27562  006A42  92A1               	bcf	4001,1,c	;volatile
 27563  006A44  AE1F               	btfss	OpenTimer3@config,7,c
 27564  006A46  D002               	goto	l1995
 27565  006A48  82A0               	bsf	4000,1,c	;volatile
 27566  006A4A  D001               	goto	l1996
 27567  006A4C                     l1995:
 27568  006A4C  92A0               	bcf	4000,1,c	;volatile
 27569  006A4E                     l1996:
 27570  006A4E  A01F               	btfss	OpenTimer3@config,0,c
 27571  006A50  D002               	goto	l1997
 27572  006A52  8EB1               	bsf	4017,7,c	;volatile
 27573  006A54  D001               	goto	l1998
 27574  006A56                     l1997:
 27575  006A56  9EB1               	bcf	4017,7,c	;volatile
 27576  006A58                     l1998:
 27577  006A58  80B1               	bsf	4017,0,c	;volatile
 27578  006A5A  0012               	return	
 27579  006A5C                     __end_of_OpenTimer3:
 27580                           	opt stack 0
 27581                           tblptru	equ	0xFF8
 27582                           tblptrh	equ	0xFF7
 27583                           tblptrl	equ	0xFF6
 27584                           tablat	equ	0xFF5
 27585                           prodh	equ	0xFF4
 27586                           prodl	equ	0xFF3
 27587                           intcon	equ	0xFF2
 27588                           indf0	equ	0xFEF
 27589                           postinc0	equ	0xFEE
 27590                           fsr0h	equ	0xFEA
 27591                           fsr0l	equ	0xFE9
 27592                           wreg	equ	0xFE8
 27593                           indf1	equ	0xFE7
 27594                           postinc1	equ	0xFE6
 27595                           postdec1	equ	0xFE5
 27596                           fsr1h	equ	0xFE2
 27597                           fsr1l	equ	0xFE1
 27598                           indf2	equ	0xFDF
 27599                           postinc2	equ	0xFDE
 27600                           postdec2	equ	0xFDD
 27601                           plusw2	equ	0xFDB
 27602                           fsr2h	equ	0xFDA
 27603                           fsr2l	equ	0xFD9
 27604                           status	equ	0xFD8
 27605                           
 27606 ;; *************** function _OpenTimer0 *****************
 27607 ;; Defined at:
 27608 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 27609 ;; Parameters:    Size  Location     Type
 27610 ;;  config          1    wreg     unsigned char 
 27611 ;; Auto vars:     Size  Location     Type
 27612 ;;  config          1   30[COMRAM] unsigned char 
 27613 ;; Return value:  Size  Location     Type
 27614 ;;		None               void
 27615 ;; Registers used:
 27616 ;;		wreg, status,2, status,0
 27617 ;; Tracked objects:
 27618 ;;		On entry : 0/0
 27619 ;;		On exit  : 0/0
 27620 ;;		Unchanged: 0/0
 27621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27622 ;;      Params:         0       0       0       0       0       0       0
 27623 ;;      Locals:         1       0       0       0       0       0       0
 27624 ;;      Temps:          0       0       0       0       0       0       0
 27625 ;;      Totals:         1       0       0       0       0       0       0
 27626 ;;Total ram usage:        1 bytes
 27627 ;; Hardware stack levels used:    1
 27628 ;; Hardware stack levels required when called:    3
 27629 ;; This function calls:
 27630 ;;		Nothing
 27631 ;; This function is called by:
 27632 ;;		_init
 27633 ;; This function uses a non-reentrant model
 27634 ;;
 27635                           
 27636                           	psect	text76
 27637  006A98                     __ptext76:
 27638                           	opt stack 0
 27639  006A98                     _OpenTimer0:
 27640                           	opt stack 26
 27641                           
 27642                           ;incstack = 0
 27643                           ;incstack = 0
 27644                           ;OpenTimer0@config stored from wreg
 27645  006A98  CFE8 F01F          	movff	wreg,OpenTimer0@config
 27646  006A9C  501F               	movf	OpenTimer0@config,w,c
 27647  006A9E  0B7F               	andlw	127
 27648  006AA0  6ED5               	movwf	4053,c	;volatile
 27649  006AA2  6AD7               	clrf	4055,c	;volatile
 27650  006AA4  6AD6               	clrf	4054,c	;volatile
 27651  006AA6  94F2               	bcf	intcon,2,c	;volatile
 27652  006AA8  AE1F               	btfss	OpenTimer0@config,7,c
 27653  006AAA  D002               	goto	l1971
 27654  006AAC  8AF2               	bsf	intcon,5,c	;volatile
 27655  006AAE  D001               	goto	l1972
 27656  006AB0                     l1971:
 27657  006AB0  9AF2               	bcf	intcon,5,c	;volatile
 27658  006AB2                     l1972:
 27659  006AB2  8ED5               	bsf	4053,7,c	;volatile
 27660  006AB4  0012               	return	
 27661  006AB6                     __end_of_OpenTimer0:
 27662                           	opt stack 0
 27663                           tblptru	equ	0xFF8
 27664                           tblptrh	equ	0xFF7
 27665                           tblptrl	equ	0xFF6
 27666                           tablat	equ	0xFF5
 27667                           prodh	equ	0xFF4
 27668                           prodl	equ	0xFF3
 27669                           intcon	equ	0xFF2
 27670                           indf0	equ	0xFEF
 27671                           postinc0	equ	0xFEE
 27672                           fsr0h	equ	0xFEA
 27673                           fsr0l	equ	0xFE9
 27674                           wreg	equ	0xFE8
 27675                           indf1	equ	0xFE7
 27676                           postinc1	equ	0xFE6
 27677                           postdec1	equ	0xFE5
 27678                           fsr1h	equ	0xFE2
 27679                           fsr1l	equ	0xFE1
 27680                           indf2	equ	0xFDF
 27681                           postinc2	equ	0xFDE
 27682                           postdec2	equ	0xFDD
 27683                           plusw2	equ	0xFDB
 27684                           fsr2h	equ	0xFDA
 27685                           fsr2l	equ	0xFD9
 27686                           status	equ	0xFD8
 27687                           
 27688 ;; *************** function _OpenUSART *****************
 27689 ;; Defined at:
 27690 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
 27691 ;; Parameters:    Size  Location     Type
 27692 ;;  config          1    wreg     unsigned char 
 27693 ;;  spbrg           2   30[COMRAM] unsigned int 
 27694 ;; Auto vars:     Size  Location     Type
 27695 ;;  config          1   32[COMRAM] unsigned char 
 27696 ;; Return value:  Size  Location     Type
 27697 ;;		None               void
 27698 ;; Registers used:
 27699 ;;		wreg, status,2
 27700 ;; Tracked objects:
 27701 ;;		On entry : 0/1
 27702 ;;		On exit  : 0/0
 27703 ;;		Unchanged: 0/0
 27704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27705 ;;      Params:         2       0       0       0       0       0       0
 27706 ;;      Locals:         1       0       0       0       0       0       0
 27707 ;;      Temps:          0       0       0       0       0       0       0
 27708 ;;      Totals:         3       0       0       0       0       0       0
 27709 ;;Total ram usage:        3 bytes
 27710 ;; Hardware stack levels used:    1
 27711 ;; Hardware stack levels required when called:    3
 27712 ;; This function calls:
 27713 ;;		Nothing
 27714 ;; This function is called by:
 27715 ;;		_init
 27716 ;;		_changeBaudrate
 27717 ;; This function uses a non-reentrant model
 27718 ;;
 27719                           
 27720                           	psect	text77
 27721  0064F8                     __ptext77:
 27722                           	opt stack 0
 27723  0064F8                     _OpenUSART:
 27724                           	opt stack 25
 27725                           
 27726                           ;incstack = 0
 27727                           ;incstack = 0
 27728                           ;OpenUSART@config stored from wreg
 27729  0064F8  CFE8 F021          	movff	wreg,OpenUSART@config
 27730  0064FC  6AAC               	clrf	4012,c	;volatile
 27731  0064FE  6AAB               	clrf	4011,c	;volatile
 27732  006500  B021               	btfsc	OpenUSART@config,0,c
 27733  006502  88AC               	bsf	4012,4,c	;volatile
 27734  006504  A221               	btfss	OpenUSART@config,1,c
 27735  006506  D002               	goto	l16814
 27736  006508  8CAC               	bsf	4012,6,c	;volatile
 27737  00650A  8CAB               	bsf	4011,6,c	;volatile
 27738  00650C                     l16814:
 27739  00650C  B421               	btfsc	OpenUSART@config,2,c
 27740  00650E  8EAC               	bsf	4012,7,c	;volatile
 27741  006510  A621               	btfss	OpenUSART@config,3,c
 27742  006512  D002               	goto	l2037
 27743  006514  88AB               	bsf	4011,4,c	;volatile
 27744  006516  D001               	goto	l16822
 27745  006518                     l2037:
 27746  006518  8AAB               	bsf	4011,5,c	;volatile
 27747  00651A                     l16822:
 27748  00651A  B821               	btfsc	OpenUSART@config,4,c
 27749  00651C  84AC               	bsf	4012,2,c	;volatile
 27750  00651E  989E               	bcf	3998,4,c	;volatile
 27751  006520  BA21               	btfsc	OpenUSART@config,5,c
 27752  006522  86AB               	bsf	4011,3,c	;volatile
 27753  006524  AC21               	btfss	OpenUSART@config,6,c
 27754  006526  D002               	goto	l2041
 27755  006528  8A9D               	bsf	3997,5,c	;volatile
 27756  00652A  D001               	goto	l2042
 27757  00652C                     l2041:
 27758  00652C  9A9D               	bcf	3997,5,c	;volatile
 27759  00652E                     l2042:
 27760  00652E  9A9E               	bcf	3998,5,c	;volatile
 27761  006530  AE21               	btfss	OpenUSART@config,7,c
 27762  006532  D002               	goto	l2043
 27763  006534  889D               	bsf	3997,4,c	;volatile
 27764  006536  D001               	goto	l2044
 27765  006538                     l2043:
 27766  006538  989D               	bcf	3997,4,c	;volatile
 27767  00653A                     l2044:
 27768  00653A  C01F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 27769  00653E  5020               	movf	OpenUSART@spbrg+1,w,c
 27770  006540  6EB0               	movwf	4016,c	;volatile
 27771  006542  8AAC               	bsf	4012,5,c	;volatile
 27772  006544  8EAB               	bsf	4011,7,c	;volatile
 27773  006546  9C94               	bcf	3988,6,c	;volatile
 27774  006548  8E94               	bsf	3988,7,c	;volatile
 27775  00654A  B8AC               	btfsc	4012,4,c	;volatile
 27776  00654C  BEAC               	btfsc	4012,7,c	;volatile
 27777  00654E  D001               	goto	l2046
 27778  006550  8C94               	bsf	3988,6,c	;volatile
 27779  006552                     l2046:
 27780  006552  0012               	return	
 27781  006554                     __end_of_OpenUSART:
 27782                           	opt stack 0
 27783                           tblptru	equ	0xFF8
 27784                           tblptrh	equ	0xFF7
 27785                           tblptrl	equ	0xFF6
 27786                           tablat	equ	0xFF5
 27787                           prodh	equ	0xFF4
 27788                           prodl	equ	0xFF3
 27789                           intcon	equ	0xFF2
 27790                           indf0	equ	0xFEF
 27791                           postinc0	equ	0xFEE
 27792                           fsr0h	equ	0xFEA
 27793                           fsr0l	equ	0xFE9
 27794                           wreg	equ	0xFE8
 27795                           indf1	equ	0xFE7
 27796                           postinc1	equ	0xFE6
 27797                           postdec1	equ	0xFE5
 27798                           fsr1h	equ	0xFE2
 27799                           fsr1l	equ	0xFE1
 27800                           indf2	equ	0xFDF
 27801                           postinc2	equ	0xFDE
 27802                           postdec2	equ	0xFDD
 27803                           plusw2	equ	0xFDB
 27804                           fsr2h	equ	0xFDA
 27805                           fsr2l	equ	0xFD9
 27806                           status	equ	0xFD8
 27807                           
 27808 ;; *************** function _init_app_ram *****************
 27809 ;; Defined at:
 27810 ;;		line 532 in file "main.c"
 27811 ;; Parameters:    Size  Location     Type
 27812 ;;		None
 27813 ;; Auto vars:     Size  Location     Type
 27814 ;;  i               1   36[BANK0 ] unsigned char 
 27815 ;; Return value:  Size  Location     Type
 27816 ;;		None               void
 27817 ;; Registers used:
 27818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27819 ;; Tracked objects:
 27820 ;;		On entry : 0/0
 27821 ;;		On exit  : 0/0
 27822 ;;		Unchanged: 0/0
 27823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27824 ;;      Params:         0       0       0       0       0       0       0
 27825 ;;      Locals:         0       1       0       0       0       0       0
 27826 ;;      Temps:          0      25       0       0       0       0       0
 27827 ;;      Totals:         0      26       0       0       0       0       0
 27828 ;;Total ram usage:       26 bytes
 27829 ;; Hardware stack levels used:    1
 27830 ;; Hardware stack levels required when called:    5
 27831 ;; This function calls:
 27832 ;;		_Read_b_eep
 27833 ;;		_ECANSetOperationMode
 27834 ;;		_setFilter
 27835 ;;		__CANIDToRegs
 27836 ;; This function is called by:
 27837 ;;		_init
 27838 ;;		_vscp_restoreDefaults
 27839 ;; This function uses a non-reentrant model
 27840 ;;
 27841                           
 27842                           	psect	text78
 27843  003508                     __ptext78:
 27844                           	opt stack 0
 27845  003508                     _init_app_ram:
 27846                           	opt stack 23
 27847                           
 27848                           ;main.c: 534: can_receiveOverruns = 0;
 27849                           
 27850                           ;incstack = 0
 27851                           ;incstack = 0
 27852  003508  0100               	movlb	0	; () banked
 27853  00350A  6BC6               	clrf	_can_receiveOverruns& (0+255),b
 27854  00350C  6BC7               	clrf	(_can_receiveOverruns+1)& (0+255),b
 27855  00350E  6BC8               	clrf	(_can_receiveOverruns+2)& (0+255),b
 27856  003510  6BC9               	clrf	(_can_receiveOverruns+3)& (0+255),b
 27857                           
 27858                           ;main.c: 535: can_transmitOverruns = 0;
 27859  003512  6BCA               	clrf	_can_transmitOverruns& (0+255),b
 27860  003514  6BCB               	clrf	(_can_transmitOverruns+1)& (0+255),b
 27861  003516  6BCC               	clrf	(_can_transmitOverruns+2)& (0+255),b
 27862  003518  6BCD               	clrf	(_can_transmitOverruns+3)& (0+255),b
 27863                           
 27864                           ;main.c: 536: uart_receiveOverruns = 0;
 27865  00351A  6BE6               	clrf	_uart_receiveOverruns& (0+255),b
 27866  00351C  6BE7               	clrf	(_uart_receiveOverruns+1)& (0+255),b
 27867  00351E  6BE8               	clrf	(_uart_receiveOverruns+2)& (0+255),b
 27868  003520  6BE9               	clrf	(_uart_receiveOverruns+3)& (0+255),b
 27869                           
 27870                           ;main.c: 537: uart_transmitOverruns = 0;
 27871  003522  6BEA               	clrf	_uart_transmitOverruns& (0+255),b
 27872  003524  6BEB               	clrf	(_uart_transmitOverruns+1)& (0+255),b
 27873  003526  6BEC               	clrf	(_uart_transmitOverruns+2)& (0+255),b
 27874  003528  6BED               	clrf	(_uart_transmitOverruns+3)& (0+255),b
 27875                           
 27876                           ;main.c: 538: timer = 0;
 27877  00352A  6BE2               	clrf	_timer& (0+255),b	;volatile
 27878  00352C  6BE3               	clrf	(_timer+1)& (0+255),b	;volatile
 27879  00352E  6BE4               	clrf	(_timer+2)& (0+255),b	;volatile
 27880  003530  6BE5               	clrf	(_timer+3)& (0+255),b	;volatile
 27881                           
 27882                           ; BSR set to: 0
 27883                           ;main.c: 540: bHex = Read_b_eep(0x06);
 27884  003532  6A20               	clrf	?_Read_b_eep+1,c
 27885  003534  0E06               	movlw	6
 27886  003536  6E1F               	movwf	?_Read_b_eep,c
 27887  003538  EC9D  F035         	call	_Read_b_eep	;wreg free
 27888  00353C  0101               	movlb	1	; () banked
 27889  00353E  6F00               	movwf	_bHex& (0+255),b
 27890                           
 27891                           ;main.c: 541: mode = Read_b_eep(0x03);
 27892  003540  6A20               	clrf	?_Read_b_eep+1,c
 27893  003542  0E03               	movlw	3
 27894  003544  6E1F               	movwf	?_Read_b_eep,c
 27895  003546  EC9D  F035         	call	_Read_b_eep	;wreg free
 27896  00354A  0100               	movlb	0	; () banked
 27897  00354C  6FF1               	movwf	_mode& (0+255),b
 27898                           
 27899                           ;main.c: 542: bLocalEcho = Read_b_eep(0x65);
 27900  00354E  6A20               	clrf	?_Read_b_eep+1,c
 27901  003550  0E65               	movlw	101
 27902  003552  6E1F               	movwf	?_Read_b_eep,c
 27903  003554  EC9D  F035         	call	_Read_b_eep	;wreg free
 27904  003558  0101               	movlb	1	; () banked
 27905  00355A  6F01               	movwf	_bLocalEcho& (0+255),b
 27906                           
 27907                           ;main.c: 543: bTimestamp = Read_b_eep(0x66);
 27908  00355C  6A20               	clrf	?_Read_b_eep+1,c
 27909  00355E  0E66               	movlw	102
 27910  003560  6E1F               	movwf	?_Read_b_eep,c
 27911  003562  EC9D  F035         	call	_Read_b_eep	;wreg free
 27912  003566  0100               	movlb	0	; () banked
 27913  003568  6FF0               	movwf	_bTimestamp& (0+255),b
 27914                           
 27915                           ;main.c: 545: rwtimeout = Read_b_eep(0x09);
 27916  00356A  6A20               	clrf	?_Read_b_eep+1,c
 27917  00356C  0E09               	movlw	9
 27918  00356E  6E1F               	movwf	?_Read_b_eep,c
 27919  003570  EC9D  F035         	call	_Read_b_eep	;wreg free
 27920  003574  0101               	movlb	1	; () banked
 27921  003576  6F04               	movwf	_rwtimeout& (0+255),b
 27922                           
 27923                           ; BSR set to: 1
 27924                           ;main.c: 550: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 27925  003578  0E80               	movlw	128
 27926  00357A  EC6A  F035         	call	_ECANSetOperationMode
 27927                           
 27928                           ;main.c: 552: for (uint8_t i=0; i<15; i++ ) {
 27929  00357E  0100               	movlb	0	; () banked
 27930  003580  6B84               	clrf	init_app_ram@i& (0+255),b
 27931  003582                     l16794:
 27932                           
 27933                           ; BSR set to: 0
 27934                           ;main.c: 553: setFilter( i,
 27935                           ;main.c: 554: ((uint32_t)( Read_b_eep(0x20 + i*4)) << 24 ) +
 27936                           ;main.c: 555: ((uint32_t)( Read_b_eep(0x20 + 1 + i*4)) << 16 ) +
 27937                           ;main.c: 556: ((uint32_t)( Read_b_eep(0x20 + 2 + i*4)) << 8 ) +
 27938                           ;main.c: 557: ((uint32_t)( Read_b_eep(0x20 + 3 + i*4)) ), 0 );
 27939  003582  5184               	movf	init_app_ram@i& (0+255),w,b
 27940  003584  6F6B               	movwf	??_init_app_ram& (0+255),b
 27941  003586  6B6C               	clrf	(??_init_app_ram+1)& (0+255),b
 27942  003588  90D8               	bcf	status,0,c
 27943  00358A  376B               	rlcf	??_init_app_ram& (0+255),f,b
 27944  00358C  376C               	rlcf	(??_init_app_ram+1)& (0+255),f,b
 27945  00358E  90D8               	bcf	status,0,c
 27946  003590  376B               	rlcf	??_init_app_ram& (0+255),f,b
 27947  003592  376C               	rlcf	(??_init_app_ram+1)& (0+255),f,b
 27948  003594  0E22               	movlw	34
 27949  003596  256B               	addwf	??_init_app_ram& (0+255),w,b
 27950  003598  6E1F               	movwf	?_Read_b_eep,c
 27951  00359A  0E00               	movlw	0
 27952  00359C  216C               	addwfc	(??_init_app_ram+1)& (0+255),w,b
 27953  00359E  6E20               	movwf	?_Read_b_eep+1,c
 27954  0035A0  EC9D  F035         	call	_Read_b_eep	;wreg free
 27955  0035A4  0100               	movlb	0	; () banked
 27956  0035A6  6F6D               	movwf	(??_init_app_ram+2)& (0+255),b
 27957  0035A8  C06D  F06E         	movff	??_init_app_ram+2,??_init_app_ram+3
 27958  0035AC  6B6F               	clrf	(??_init_app_ram+4)& (0+255),b
 27959  0035AE  6B70               	clrf	(??_init_app_ram+5)& (0+255),b
 27960  0035B0  6B71               	clrf	(??_init_app_ram+6)& (0+255),b
 27961  0035B2  C070  F071         	movff	??_init_app_ram+5,??_init_app_ram+6
 27962  0035B6  C06F  F070         	movff	??_init_app_ram+4,??_init_app_ram+5
 27963  0035BA  C06E  F06F         	movff	??_init_app_ram+3,??_init_app_ram+4
 27964  0035BE  6B6E               	clrf	(??_init_app_ram+3)& (0+255),b
 27965  0035C0  5184               	movf	init_app_ram@i& (0+255),w,b
 27966  0035C2  0D04               	mullw	4
 27967  0035C4  0E21               	movlw	33
 27968  0035C6  24F3               	addwf	prodl,w,c
 27969  0035C8  6E1F               	movwf	?_Read_b_eep,c
 27970  0035CA  0E00               	movlw	0
 27971  0035CC  20F4               	addwfc	prodh,w,c
 27972  0035CE  6E20               	movwf	?_Read_b_eep+1,c
 27973  0035D0  EC9D  F035         	call	_Read_b_eep	;wreg free
 27974  0035D4  0100               	movlb	0	; () banked
 27975  0035D6  6F72               	movwf	(??_init_app_ram+7)& (0+255),b
 27976  0035D8  C072  F073         	movff	??_init_app_ram+7,??_init_app_ram+8
 27977  0035DC  6B74               	clrf	(??_init_app_ram+9)& (0+255),b
 27978  0035DE  6B75               	clrf	(??_init_app_ram+10)& (0+255),b
 27979  0035E0  6B76               	clrf	(??_init_app_ram+11)& (0+255),b
 27980  0035E2  C074  F076         	movff	??_init_app_ram+9,??_init_app_ram+11
 27981  0035E6  C073  F075         	movff	??_init_app_ram+8,??_init_app_ram+10
 27982  0035EA  6B74               	clrf	(??_init_app_ram+9)& (0+255),b
 27983  0035EC  6B73               	clrf	(??_init_app_ram+8)& (0+255),b
 27984  0035EE  5184               	movf	init_app_ram@i& (0+255),w,b
 27985  0035F0  0D04               	mullw	4
 27986  0035F2  0E20               	movlw	32
 27987  0035F4  24F3               	addwf	prodl,w,c
 27988  0035F6  6E1F               	movwf	?_Read_b_eep,c
 27989  0035F8  0E00               	movlw	0
 27990  0035FA  20F4               	addwfc	prodh,w,c
 27991  0035FC  6E20               	movwf	?_Read_b_eep+1,c
 27992  0035FE  EC9D  F035         	call	_Read_b_eep	;wreg free
 27993  003602  0100               	movlb	0	; () banked
 27994  003604  6F77               	movwf	(??_init_app_ram+12)& (0+255),b
 27995  003606  C077  F078         	movff	??_init_app_ram+12,??_init_app_ram+13
 27996  00360A  6B79               	clrf	(??_init_app_ram+14)& (0+255),b
 27997  00360C  6B7A               	clrf	(??_init_app_ram+15)& (0+255),b
 27998  00360E  6B7B               	clrf	(??_init_app_ram+16)& (0+255),b
 27999  003610  C078  F07B         	movff	??_init_app_ram+13,??_init_app_ram+16
 28000  003614  6B7A               	clrf	(??_init_app_ram+15)& (0+255),b
 28001  003616  6B79               	clrf	(??_init_app_ram+14)& (0+255),b
 28002  003618  6B78               	clrf	(??_init_app_ram+13)& (0+255),b
 28003  00361A  5173               	movf	(??_init_app_ram+8)& (0+255),w,b
 28004  00361C  2578               	addwf	(??_init_app_ram+13)& (0+255),w,b
 28005  00361E  6F7C               	movwf	(??_init_app_ram+17)& (0+255),b
 28006  003620  5174               	movf	(??_init_app_ram+9)& (0+255),w,b
 28007  003622  2179               	addwfc	(??_init_app_ram+14)& (0+255),w,b
 28008  003624  6F7D               	movwf	(??_init_app_ram+18)& (0+255),b
 28009  003626  5175               	movf	(??_init_app_ram+10)& (0+255),w,b
 28010  003628  217A               	addwfc	(??_init_app_ram+15)& (0+255),w,b
 28011  00362A  6F7E               	movwf	(??_init_app_ram+19)& (0+255),b
 28012  00362C  5176               	movf	(??_init_app_ram+11)& (0+255),w,b
 28013  00362E  217B               	addwfc	(??_init_app_ram+16)& (0+255),w,b
 28014  003630  6F7F               	movwf	(??_init_app_ram+20)& (0+255),b
 28015  003632  516E               	movf	(??_init_app_ram+3)& (0+255),w,b
 28016  003634  257C               	addwf	(??_init_app_ram+17)& (0+255),w,b
 28017  003636  6F80               	movwf	(??_init_app_ram+21)& (0+255),b
 28018  003638  516F               	movf	(??_init_app_ram+4)& (0+255),w,b
 28019  00363A  217D               	addwfc	(??_init_app_ram+18)& (0+255),w,b
 28020  00363C  6F81               	movwf	(??_init_app_ram+22)& (0+255),b
 28021  00363E  5170               	movf	(??_init_app_ram+5)& (0+255),w,b
 28022  003640  217E               	addwfc	(??_init_app_ram+19)& (0+255),w,b
 28023  003642  6F82               	movwf	(??_init_app_ram+23)& (0+255),b
 28024  003644  5171               	movf	(??_init_app_ram+6)& (0+255),w,b
 28025  003646  217F               	addwfc	(??_init_app_ram+20)& (0+255),w,b
 28026  003648  6F83               	movwf	(??_init_app_ram+24)& (0+255),b
 28027  00364A  5184               	movf	init_app_ram@i& (0+255),w,b
 28028  00364C  0D04               	mullw	4
 28029  00364E  0E23               	movlw	35
 28030  003650  24F3               	addwf	prodl,w,c
 28031  003652  6E1F               	movwf	?_Read_b_eep,c
 28032  003654  0E00               	movlw	0
 28033  003656  20F4               	addwfc	prodh,w,c
 28034  003658  6E20               	movwf	?_Read_b_eep+1,c
 28035  00365A  EC9D  F035         	call	_Read_b_eep	;wreg free
 28036  00365E  0100               	movlb	0	; () banked
 28037  003660  2580               	addwf	(??_init_app_ram+21)& (0+255),w,b
 28038  003662  6E23               	movwf	?_setFilter,c
 28039  003664  0E00               	movlw	0
 28040  003666  2181               	addwfc	(??_init_app_ram+22)& (0+255),w,b
 28041  003668  6E24               	movwf	?_setFilter+1,c
 28042  00366A  0E00               	movlw	0
 28043  00366C  2182               	addwfc	(??_init_app_ram+23)& (0+255),w,b
 28044  00366E  6E25               	movwf	?_setFilter+2,c
 28045  003670  0E00               	movlw	0
 28046  003672  2183               	addwfc	(??_init_app_ram+24)& (0+255),w,b
 28047  003674  6E26               	movwf	?_setFilter+3,c
 28048  003676  6A27               	clrf	?_setFilter+4,c
 28049  003678  5184               	movf	init_app_ram@i& (0+255),w,b
 28050  00367A  ECD3  F01B         	call	_setFilter
 28051  00367E  0100               	movlb	0	; () banked
 28052  003680  2B84               	incf	init_app_ram@i& (0+255),f,b
 28053                           
 28054                           ; BSR set to: 0
 28055  003682  0E0E               	movlw	14
 28056  003684  6584               	cpfsgt	init_app_ram@i& (0+255),b
 28057  003686  D77D               	goto	l16794
 28058                           
 28059                           ; BSR set to: 0
 28060                           ;main.c: 558: }
 28061                           ;main.c: 560: _CANIDToRegs((BYTE*)&RXM0SIDH, ((uint32_t)( Read_b_eep(0x60)) << 24 ) + ((
      +                          uint32_t)( Read_b_eep(0x60 + 1)) << 16 ) + ((uint32_t)( Read_b_eep(0x60 + 2)) << 8 ) + (
      +                          ( Read_b_eep(0x60 + 3)) ), 1);
 28062  003688  010F               	movlb	15	; () banked
 28063  00368A  0E0F               	movlw	15	;volatile
 28064  00368C  6E22               	movwf	?__CANIDToRegs+1,c
 28065  00368E  0E18               	movlw	24	;volatile
 28066  003690  6E21               	movwf	?__CANIDToRegs,c
 28067  003692  6A20               	clrf	?_Read_b_eep+1,c
 28068  003694  0E62               	movlw	98
 28069  003696  6E1F               	movwf	?_Read_b_eep,c
 28070  003698  EC9D  F035         	call	_Read_b_eep	;wreg free
 28071  00369C  D856               	call	PL44	;call to abstracted procedure
 28072  00369E  0E61               	movlw	97
 28073  0036A0  6E1F               	movwf	?_Read_b_eep,c
 28074  0036A2  EC9D  F035         	call	_Read_b_eep	;wreg free
 28075  0036A6  D870               	call	PL48	;call to abstracted procedure
 28076  0036A8  0E60               	movlw	96
 28077  0036AA  6E1F               	movwf	?_Read_b_eep,c
 28078  0036AC  EC9D  F035         	call	_Read_b_eep	;wreg free
 28079  0036B0  D826               	call	PL10	;call to abstracted procedure
 28080  0036B2  0E63               	movlw	99
 28081  0036B4  6E1F               	movwf	?_Read_b_eep,c
 28082  0036B6  EC9D  F035         	call	_Read_b_eep	;wreg free
 28083  0036BA  D857               	call	PL46	;call to abstracted procedure
 28084  0036BC  ECC2  F025         	call	__CANIDToRegs	;wreg free
 28085                           
 28086                           ;main.c: 566: _CANIDToRegs((BYTE*)&RXM1SIDH, ((uint32_t)( Read_b_eep(0x64)) << 24 ) + ((
      +                          uint32_t)( Read_b_eep(0x64 + 1)) << 16 ) + ((uint32_t)( Read_b_eep(0x64 + 2)) << 8 ) + (
      +                          (uint32_t)( Read_b_eep(0x64 + 3)) ), 1);
 28087  0036C0  010F               	movlb	15	; () banked
 28088  0036C2  0E0F               	movlw	15	;volatile
 28089  0036C4  6E22               	movwf	?__CANIDToRegs+1,c
 28090  0036C6  0E1C               	movlw	28	;volatile
 28091  0036C8  6E21               	movwf	?__CANIDToRegs,c
 28092  0036CA  6A20               	clrf	?_Read_b_eep+1,c
 28093  0036CC  0E66               	movlw	102
 28094  0036CE  6E1F               	movwf	?_Read_b_eep,c
 28095  0036D0  EC9D  F035         	call	_Read_b_eep	;wreg free
 28096  0036D4  D83A               	call	PL44	;call to abstracted procedure
 28097  0036D6  0E65               	movlw	101
 28098  0036D8  6E1F               	movwf	?_Read_b_eep,c
 28099  0036DA  EC9D  F035         	call	_Read_b_eep	;wreg free
 28100  0036DE  D854               	call	PL48	;call to abstracted procedure
 28101  0036E0  0E64               	movlw	100
 28102  0036E2  6E1F               	movwf	?_Read_b_eep,c
 28103  0036E4  EC9D  F035         	call	_Read_b_eep	;wreg free
 28104  0036E8  D80A               	call	PL10	;call to abstracted procedure
 28105  0036EA  0E67               	movlw	103
 28106  0036EC  6E1F               	movwf	?_Read_b_eep,c
 28107  0036EE  EC9D  F035         	call	_Read_b_eep	;wreg free
 28108  0036F2  D83B               	call	PL46	;call to abstracted procedure
 28109  0036F4  ECC2  F025         	call	__CANIDToRegs	;wreg free
 28110                           
 28111                           ; BSR set to: 0
 28112                           ;main.c: 572: ECANSetOperationMode(0x20);
 28113  0036F8  0E20               	movlw	32
 28114  0036FA  EF6A  F035         	goto	_ECANSetOperationMode
 28115  0036FE                     __end_of_init_app_ram:
 28116                           	opt stack 0
 28117  0036FE                     PL10:
 28118                           	opt stack 23
 28119  0036FE  0100               	movlb	0	; () banked
 28120  003700  6F75               	movwf	(??_init_app_ram+10)& (0+255),b
 28121  003702  C075  F076         	movff	??_init_app_ram+10,??_init_app_ram+11
 28122  003706  6B77               	clrf	(??_init_app_ram+12)& (0+255),b
 28123  003708  6B78               	clrf	(??_init_app_ram+13)& (0+255),b
 28124  00370A  6B79               	clrf	(??_init_app_ram+14)& (0+255),b
 28125  00370C  C076  F079         	movff	??_init_app_ram+11,??_init_app_ram+14
 28126  003710  6B78               	clrf	(??_init_app_ram+13)& (0+255),b
 28127  003712  6B77               	clrf	(??_init_app_ram+12)& (0+255),b
 28128  003714  6B76               	clrf	(??_init_app_ram+11)& (0+255),b
 28129  003716  5171               	movf	(??_init_app_ram+6)& (0+255),w,b
 28130  003718  2576               	addwf	(??_init_app_ram+11)& (0+255),w,b
 28131  00371A  6F7A               	movwf	(??_init_app_ram+15)& (0+255),b
 28132  00371C  5172               	movf	(??_init_app_ram+7)& (0+255),w,b
 28133  00371E  2177               	addwfc	(??_init_app_ram+12)& (0+255),w,b
 28134  003720  6F7B               	movwf	(??_init_app_ram+16)& (0+255),b
 28135  003722  5173               	movf	(??_init_app_ram+8)& (0+255),w,b
 28136  003724  2178               	addwfc	(??_init_app_ram+13)& (0+255),w,b
 28137  003726  6F7C               	movwf	(??_init_app_ram+17)& (0+255),b
 28138  003728  5174               	movf	(??_init_app_ram+9)& (0+255),w,b
 28139  00372A  2179               	addwfc	(??_init_app_ram+14)& (0+255),w,b
 28140  00372C  6F7D               	movwf	(??_init_app_ram+18)& (0+255),b
 28141  00372E  516C               	movf	(??_init_app_ram+1)& (0+255),w,b
 28142  003730  257A               	addwf	(??_init_app_ram+15)& (0+255),w,b
 28143  003732  6F7E               	movwf	(??_init_app_ram+19)& (0+255),b
 28144  003734  516D               	movf	(??_init_app_ram+2)& (0+255),w,b
 28145  003736  217B               	addwfc	(??_init_app_ram+16)& (0+255),w,b
 28146  003738  6F7F               	movwf	(??_init_app_ram+20)& (0+255),b
 28147  00373A  516E               	movf	(??_init_app_ram+3)& (0+255),w,b
 28148  00373C  217C               	addwfc	(??_init_app_ram+17)& (0+255),w,b
 28149  00373E  6F80               	movwf	(??_init_app_ram+21)& (0+255),b
 28150  003740  516F               	movf	(??_init_app_ram+4)& (0+255),w,b
 28151  003742  217D               	addwfc	(??_init_app_ram+18)& (0+255),w,b
 28152  003744  6F81               	movwf	(??_init_app_ram+22)& (0+255),b
 28153  003746  6A20               	clrf	?_Read_b_eep+1,c
 28154  003748  0012               	return	
 28155  00374A                     __end_ofPL10:
 28156                           	opt stack 0
 28157  00374A                     PL44:
 28158                           	opt stack 23
 28159  00374A  0100               	movlb	0	; () banked
 28160  00374C  6F6B               	movwf	??_init_app_ram& (0+255),b
 28161  00374E  C06B  F06C         	movff	??_init_app_ram,??_init_app_ram+1
 28162  003752  6B6D               	clrf	(??_init_app_ram+2)& (0+255),b
 28163  003754  6B6E               	clrf	(??_init_app_ram+3)& (0+255),b
 28164  003756  6B6F               	clrf	(??_init_app_ram+4)& (0+255),b
 28165  003758  C06E  F06F         	movff	??_init_app_ram+3,??_init_app_ram+4
 28166  00375C  C06D  F06E         	movff	??_init_app_ram+2,??_init_app_ram+3
 28167  003760  C06C  F06D         	movff	??_init_app_ram+1,??_init_app_ram+2
 28168  003764  6B6C               	clrf	(??_init_app_ram+1)& (0+255),b
 28169  003766  6A20               	clrf	?_Read_b_eep+1,c
 28170  003768  0012               	return	
 28171  00376A                     __end_ofPL44:
 28172                           	opt stack 0
 28173  00376A                     PL46:
 28174                           	opt stack 23
 28175  00376A  0100               	movlb	0	; () banked
 28176  00376C  257E               	addwf	(??_init_app_ram+19)& (0+255),w,b
 28177  00376E  6E23               	movwf	?__CANIDToRegs+2,c
 28178  003770  0E00               	movlw	0
 28179  003772  217F               	addwfc	(??_init_app_ram+20)& (0+255),w,b
 28180  003774  6E24               	movwf	?__CANIDToRegs+3,c
 28181  003776  0E00               	movlw	0
 28182  003778  2180               	addwfc	(??_init_app_ram+21)& (0+255),w,b
 28183  00377A  6E25               	movwf	?__CANIDToRegs+4,c
 28184  00377C  0E00               	movlw	0
 28185  00377E  2181               	addwfc	(??_init_app_ram+22)& (0+255),w,b
 28186  003780  6E26               	movwf	?__CANIDToRegs+5,c
 28187  003782  0E01               	movlw	1
 28188  003784  6E27               	movwf	?__CANIDToRegs+6,c
 28189  003786  0C01               	retlw	1
 28190  003788                     __end_ofPL46:
 28191                           	opt stack 0
 28192  003788                     PL48:
 28193                           	opt stack 23
 28194  003788  0100               	movlb	0	; () banked
 28195  00378A  6F70               	movwf	(??_init_app_ram+5)& (0+255),b
 28196  00378C  C070  F071         	movff	??_init_app_ram+5,??_init_app_ram+6
 28197  003790  6B72               	clrf	(??_init_app_ram+7)& (0+255),b
 28198  003792  6B73               	clrf	(??_init_app_ram+8)& (0+255),b
 28199  003794  6B74               	clrf	(??_init_app_ram+9)& (0+255),b
 28200  003796  C072  F074         	movff	??_init_app_ram+7,??_init_app_ram+9
 28201  00379A  C071  F073         	movff	??_init_app_ram+6,??_init_app_ram+8
 28202  00379E  6B72               	clrf	(??_init_app_ram+7)& (0+255),b
 28203  0037A0  6B71               	clrf	(??_init_app_ram+6)& (0+255),b
 28204  0037A2  6A20               	clrf	?_Read_b_eep+1,c
 28205  0037A4  0012               	return	
 28206  0037A6                     __end_ofPL48:
 28207                           	opt stack 0
 28208                           tblptru	equ	0xFF8
 28209                           tblptrh	equ	0xFF7
 28210                           tblptrl	equ	0xFF6
 28211                           tablat	equ	0xFF5
 28212                           prodh	equ	0xFF4
 28213                           prodl	equ	0xFF3
 28214                           intcon	equ	0xFF2
 28215                           indf0	equ	0xFEF
 28216                           postinc0	equ	0xFEE
 28217                           fsr0h	equ	0xFEA
 28218                           fsr0l	equ	0xFE9
 28219                           wreg	equ	0xFE8
 28220                           indf1	equ	0xFE7
 28221                           postinc1	equ	0xFE6
 28222                           postdec1	equ	0xFE5
 28223                           fsr1h	equ	0xFE2
 28224                           fsr1l	equ	0xFE1
 28225                           indf2	equ	0xFDF
 28226                           postinc2	equ	0xFDE
 28227                           postdec2	equ	0xFDD
 28228                           plusw2	equ	0xFDB
 28229                           fsr2h	equ	0xFDA
 28230                           fsr2l	equ	0xFD9
 28231                           status	equ	0xFD8
 28232                           
 28233 ;; *************** function __CANIDToRegs *****************
 28234 ;; Defined at:
 28235 ;;		line 1101 in file "ECAN.c"
 28236 ;; Parameters:    Size  Location     Type
 28237 ;;  ptr             2   32[COMRAM] PTR unsigned char 
 28238 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 28239 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 28240 ;;		 -> B0CON(1), RXM1SIDH(1), RXM0SIDH(1), 
 28241 ;;  val             4   34[COMRAM] unsigned long 
 28242 ;;  type            1   38[COMRAM] unsigned char 
 28243 ;; Auto vars:     Size  Location     Type
 28244 ;;  Value           1    2[BANK0 ] PTR struct _CAN_MESSAGE_
 28245 ;;		 -> _CANIDToRegs@val(4), 
 28246 ;; Return value:  Size  Location     Type
 28247 ;;		None               void
 28248 ;; Registers used:
 28249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28250 ;; Tracked objects:
 28251 ;;		On entry : 0/F
 28252 ;;		On exit  : F/0
 28253 ;;		Unchanged: 0/0
 28254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28255 ;;      Params:         7       0       0       0       0       0       0
 28256 ;;      Locals:         0       1       0       0       0       0       0
 28257 ;;      Temps:          0       2       0       0       0       0       0
 28258 ;;      Totals:         7       3       0       0       0       0       0
 28259 ;;Total ram usage:       10 bytes
 28260 ;; Hardware stack levels used:    1
 28261 ;; Hardware stack levels required when called:    3
 28262 ;; This function calls:
 28263 ;;		Nothing
 28264 ;; This function is called by:
 28265 ;;		_init_app_ram
 28266 ;;		_doModeVerbose
 28267 ;;		_ECANSendMessage
 28268 ;; This function uses a non-reentrant model
 28269 ;;
 28270                           
 28271                           	psect	text79
 28272  004B84                     __ptext79:
 28273                           	opt stack 0
 28274  004B84                     __CANIDToRegs:
 28275                           	opt stack 24
 28276                           
 28277                           ;ECAN.c: 1102: CAN_MESSAGE_ID *Value;
 28278                           ;ECAN.c: 1104: Value = (CAN_MESSAGE_ID*)&val;
 28279                           
 28280                           ;incstack = 0
 28281                           ;incstack = 0
 28282  004B84  0E23               	movlw	low __CANIDToRegs@val
 28283  004B86  0100               	movlb	0	; () banked
 28284  004B88  6F62               	movwf	__CANIDToRegs@Value& (0+255),b
 28285                           
 28286                           ; BSR set to: 0
 28287                           ;ECAN.c: 1106: if ( type == 0 )
 28288  004B8A  6627               	tstfsz	__CANIDToRegs@type,c
 28289  004B8C  D022               	goto	l17004
 28290                           
 28291                           ; BSR set to: 0
 28292                           ;ECAN.c: 1107: {
 28293                           ;ECAN.c: 1109: *ptr = Value->BYTES.BYTE_1 >> 3;
 28294  004B8E  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28295  004B90  6ED9               	movwf	fsr2l,c
 28296  004B92  6ADA               	clrf	fsr2h,c
 28297  004B94  50DF               	movf	indf2,w,c
 28298  004B96  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28299  004B98  90D8               	bcf	status,0,c
 28300  004B9A  3360               	rrcf	??__CANIDToRegs& (0+255),f,b
 28301  004B9C  90D8               	bcf	status,0,c
 28302  004B9E  3360               	rrcf	??__CANIDToRegs& (0+255),f,b
 28303  004BA0  90D8               	bcf	status,0,c
 28304  004BA2  3160               	rrcf	??__CANIDToRegs& (0+255),w,b
 28305                           
 28306                           ;ECAN.c: 1110: *ptr |= (Value->BYTES.BYTE_2 << 5);
 28307  004BA4  D858               	call	PL76	;call to abstracted procedure
 28308  004BA6  2AD9               	incf	fsr2l,f,c
 28309  004BA8  6ADA               	clrf	fsr2h,c
 28310  004BAA  D871               	call	PL142	;call to abstracted procedure
 28311  004BAC                     u22095:
 28312  004BAC  90D8               	bcf	status,0,c
 28313  004BAE  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28314  004BB0  2F61               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
 28315  004BB2  D7FC               	goto	u22095
 28316  004BB4  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28317                           
 28318                           ; BSR set to: 0
 28319                           ;ECAN.c: 1111: ptr++;
 28320                           
 28321                           ; BSR set to: 0
 28322                           ;ECAN.c: 1112: *ptr = Value->BYTES.BYTE_1 << 5;
 28323  004BB8  D844               	call	PL42	;call to abstracted procedure
 28324  004BBA  D869               	call	PL142	;call to abstracted procedure
 28325  004BBC                     u22105:
 28326  004BBC  90D8               	bcf	status,0,c
 28327  004BBE  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28328  004BC0  2F61               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
 28329  004BC2  D7FC               	goto	u22105
 28330  004BC4  5160               	movf	??__CANIDToRegs& (0+255),w,b
 28331  004BC6  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28332  004BCA  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28333  004BCE  6EDF               	movwf	indf2,c
 28334                           
 28335                           ;ECAN.c: 1113: }
 28336  004BD0  D037               	goto	l1678
 28337  004BD2                     l17004:
 28338                           
 28339                           ; BSR set to: 0
 28340                           ;ECAN.c: 1114: else
 28341                           ;ECAN.c: 1115: {
 28342                           ;ECAN.c: 1117: *ptr = Value->BYTES.BYTE_3 >> 5;
 28343  004BD2  D854               	call	PL108	;call to abstracted procedure
 28344  004BD4  0E05               	movlw	5
 28345  004BD6  6F61               	movwf	(??__CANIDToRegs+1)& (0+255),b
 28346  004BD8                     u22115:
 28347  004BD8  90D8               	bcf	status,0,c
 28348  004BDA  3360               	rrcf	??__CANIDToRegs& (0+255),f,b
 28349  004BDC  2F61               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
 28350  004BDE  D7FC               	goto	u22115
 28351  004BE0  5160               	movf	??__CANIDToRegs& (0+255),w,b
 28352                           
 28353                           ;ECAN.c: 1118: *ptr |= Value->BYTES.BYTE_4 << 3;
 28354  004BE2  D839               	call	PL76	;call to abstracted procedure
 28355  004BE4  0E03               	movlw	3
 28356  004BE6  D840               	call	PL94	;call to abstracted procedure
 28357  004BE8  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28358  004BEA  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28359                           
 28360                           ; BSR set to: 0
 28361                           ;ECAN.c: 1119: ptr++;
 28362                           
 28363                           ; BSR set to: 0
 28364                           ;ECAN.c: 1120: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
 28365  004BEE  D829               	call	PL42	;call to abstracted procedure
 28366  004BF0  0E02               	movlw	2
 28367  004BF2  D83A               	call	PL94	;call to abstracted procedure
 28368  004BF4  3560               	rlcf	??__CANIDToRegs& (0+255),w,b
 28369  004BF6  0BE0               	andlw	224
 28370  004BF8  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28371  004BFC  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28372  004C00  6EDF               	movwf	indf2,c
 28373                           
 28374                           ; BSR set to: 0
 28375                           ;ECAN.c: 1122: *ptr |= 0b00001000;
 28376  004C02  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28377  004C06  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28378  004C0A  0E00               	movlw	0
 28379  004C0C  86DB               	bsf	plusw2,3,c
 28380                           
 28381                           ; BSR set to: 0
 28382                           ;ECAN.c: 1123: *ptr |= Value->BYTES.BYTE_3 & 0x03;
 28383  004C0E  D836               	call	PL108	;call to abstracted procedure
 28384  004C10  0E03               	movlw	3
 28385  004C12  1760               	andwf	??__CANIDToRegs& (0+255),f,b
 28386  004C14  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28387                           
 28388                           ;ECAN.c: 1124: ptr++;
 28389                           
 28390                           ; BSR set to: 0
 28391                           ;ECAN.c: 1125: *ptr = Value->BYTES.BYTE_2;
 28392  004C18  D814               	call	PL42	;call to abstracted procedure
 28393  004C1A  2AD9               	incf	fsr2l,f,c
 28394  004C1C  6ADA               	clrf	fsr2h,c
 28395  004C1E  C021  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 28396  004C22  C022  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 28397  004C26  CFDF FFE7          	movff	indf2,indf1
 28398                           
 28399                           ; BSR set to: 0
 28400                           ;ECAN.c: 1126: ptr++;
 28401  004C2A  4A21               	infsnz	__CANIDToRegs@ptr,f,c
 28402  004C2C  2A22               	incf	__CANIDToRegs@ptr+1,f,c
 28403                           
 28404                           ; BSR set to: 0
 28405                           ;ECAN.c: 1127: *ptr = Value->BYTES.BYTE_1;
 28406  004C2E  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28407  004C30  6ED9               	movwf	fsr2l,c
 28408  004C32  6ADA               	clrf	fsr2h,c
 28409  004C34  C021  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 28410  004C38  C022  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 28411  004C3C  CFDF FFE7          	movff	indf2,indf1
 28412  004C40                     l1678:
 28413                           
 28414                           ; BSR set to: 0
 28415  004C40  0012               	return	
 28416  004C42                     __end_of__CANIDToRegs:
 28417                           	opt stack 0
 28418  004C42                     PL42:
 28419                           	opt stack 24
 28420  004C42  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28421  004C46  5160               	movf	??__CANIDToRegs& (0+255),w,b
 28422  004C48  12DF               	iorwf	indf2,f,c
 28423  004C4A  4A21               	infsnz	__CANIDToRegs@ptr,f,c
 28424  004C4C  2A22               	incf	__CANIDToRegs@ptr+1,f,c
 28425  004C4E  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28426  004C50  6ED9               	movwf	fsr2l,c
 28427  004C52  6ADA               	clrf	fsr2h,c
 28428  004C54  0012               	return	
 28429  004C56                     __end_ofPL42:
 28430                           	opt stack 0
 28431  004C56                     PL76:
 28432                           	opt stack 24
 28433  004C56  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28434  004C5A  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28435  004C5E  6EDF               	movwf	indf2,c
 28436  004C60  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28437  004C62  6ED9               	movwf	fsr2l,c
 28438  004C64  6ADA               	clrf	fsr2h,c
 28439  004C66  0012               	return	
 28440  004C68                     __end_ofPL76:
 28441                           	opt stack 0
 28442  004C68                     PL94:
 28443                           	opt stack 24
 28444  004C68  26D9               	addwf	fsr2l,f,c
 28445  004C6A  6ADA               	clrf	fsr2h,c
 28446  004C6C  50DF               	movf	indf2,w,c
 28447  004C6E  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28448  004C70  90D8               	bcf	status,0,c
 28449  004C72  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28450  004C74  90D8               	bcf	status,0,c
 28451  004C76  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28452  004C78  90D8               	bcf	status,0,c
 28453  004C7A  0012               	return	
 28454  004C7C                     __end_ofPL94:
 28455                           	opt stack 0
 28456  004C7C                     PL108:
 28457                           	opt stack 24
 28458  004C7C  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28459  004C7E  6ED9               	movwf	fsr2l,c
 28460  004C80  6ADA               	clrf	fsr2h,c
 28461  004C82  0E02               	movlw	2
 28462  004C84  26D9               	addwf	fsr2l,f,c
 28463  004C86  6ADA               	clrf	fsr2h,c
 28464  004C88  50DF               	movf	indf2,w,c
 28465  004C8A  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28466  004C8C  0012               	return	
 28467  004C8E                     __end_ofPL108:
 28468                           	opt stack 0
 28469  004C8E                     PL142:
 28470                           	opt stack 24
 28471  004C8E  50DF               	movf	indf2,w,c
 28472  004C90  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28473  004C92  0E05               	movlw	5
 28474  004C94  6F61               	movwf	(??__CANIDToRegs+1)& (0+255),b
 28475  004C96  0C05               	retlw	5
 28476  004C98                     __end_ofPL142:
 28477                           	opt stack 0
 28478                           tblptru	equ	0xFF8
 28479                           tblptrh	equ	0xFF7
 28480                           tblptrl	equ	0xFF6
 28481                           tablat	equ	0xFF5
 28482                           prodh	equ	0xFF4
 28483                           prodl	equ	0xFF3
 28484                           intcon	equ	0xFF2
 28485                           indf0	equ	0xFEF
 28486                           postinc0	equ	0xFEE
 28487                           fsr0h	equ	0xFEA
 28488                           fsr0l	equ	0xFE9
 28489                           wreg	equ	0xFE8
 28490                           indf1	equ	0xFE7
 28491                           postinc1	equ	0xFE6
 28492                           postdec1	equ	0xFE5
 28493                           fsr1h	equ	0xFE2
 28494                           fsr1l	equ	0xFE1
 28495                           indf2	equ	0xFDF
 28496                           postinc2	equ	0xFDE
 28497                           postdec2	equ	0xFDD
 28498                           plusw2	equ	0xFDB
 28499                           fsr2h	equ	0xFDA
 28500                           fsr2l	equ	0xFD9
 28501                           status	equ	0xFD8
 28502                           
 28503 ;; *************** function _setFilter *****************
 28504 ;; Defined at:
 28505 ;;		line 3336 in file "main.c"
 28506 ;; Parameters:    Size  Location     Type
 28507 ;;  nFilter         1    wreg     unsigned char 
 28508 ;;  val             4   34[COMRAM] unsigned long 
 28509 ;;  bPersistent     1   38[COMRAM] enum E15660
 28510 ;; Auto vars:     Size  Location     Type
 28511 ;;  nFilter         1    6[BANK0 ] unsigned char 
 28512 ;;  eidl            1   10[BANK0 ] unsigned char 
 28513 ;;  eidh            1    9[BANK0 ] unsigned char 
 28514 ;;  sidl            1    8[BANK0 ] unsigned char 
 28515 ;;  sidh            1    7[BANK0 ] unsigned char 
 28516 ;; Return value:  Size  Location     Type
 28517 ;;		None               void
 28518 ;; Registers used:
 28519 ;;		wreg, status,2, status,0, cstack
 28520 ;; Tracked objects:
 28521 ;;		On entry : C/1
 28522 ;;		On exit  : 0/0
 28523 ;;		Unchanged: 0/0
 28524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28525 ;;      Params:         5       0       0       0       0       0       0
 28526 ;;      Locals:         0       5       0       0       0       0       0
 28527 ;;      Temps:          0       6       0       0       0       0       0
 28528 ;;      Totals:         5      11       0       0       0       0       0
 28529 ;;Total ram usage:       16 bytes
 28530 ;; Hardware stack levels used:    1
 28531 ;; Hardware stack levels required when called:    4
 28532 ;; This function calls:
 28533 ;;		_Busy_eep
 28534 ;;		_Write_b_eep
 28535 ;; This function is called by:
 28536 ;;		_init_app_ram
 28537 ;;		_doModeVerbose
 28538 ;;		_doModeVscp
 28539 ;; This function uses a non-reentrant model
 28540 ;;
 28541                           
 28542                           	psect	text80
 28543  0037A6                     __ptext80:
 28544                           	opt stack 0
 28545  0037A6                     _setFilter:
 28546                           	opt stack 25
 28547                           
 28548                           ; BSR set to: 0
 28549                           ;incstack = 0
 28550                           ;incstack = 0
 28551                           ;setFilter@nFilter stored from wreg
 28552  0037A6  CFE8 F066          	movff	wreg,setFilter@nFilter
 28553                           
 28554                           ;main.c: 3337: uint8_t sidh = (long) val >> 21L;
 28555  0037AA  0E15               	movlw	21
 28556  0037AC  0100               	movlb	0	; () banked
 28557  0037AE  6F60               	movwf	??_setFilter& (0+255),b
 28558  0037B0  C023  F061         	movff	setFilter@val,??_setFilter+1
 28559  0037B4  C024  F062         	movff	setFilter@val+1,??_setFilter+2
 28560  0037B8  C025  F063         	movff	setFilter@val+2,??_setFilter+3
 28561  0037BC  C026  F064         	movff	setFilter@val+3,??_setFilter+4
 28562  0037C0                     u22055:
 28563  0037C0  6760               	tstfsz	??_setFilter& (0+255),b
 28564  0037C2  D001               	goto	u22056
 28565  0037C4  D007               	goto	u22057
 28566  0037C6                     u22056:
 28567  0037C6  3564               	rlcf	(??_setFilter+4)& (0+255),w,b
 28568  0037C8  3364               	rrcf	(??_setFilter+4)& (0+255),f,b
 28569  0037CA  3363               	rrcf	(??_setFilter+3)& (0+255),f,b
 28570  0037CC  3362               	rrcf	(??_setFilter+2)& (0+255),f,b
 28571  0037CE  3361               	rrcf	(??_setFilter+1)& (0+255),f,b
 28572  0037D0  2F60               	decfsz	??_setFilter& (0+255),f,b
 28573  0037D2  D7F6               	goto	u22055
 28574  0037D4                     u22057:
 28575  0037D4  5161               	movf	(??_setFilter+1)& (0+255),w,b
 28576  0037D6  6F67               	movwf	setFilter@sidh& (0+255),b
 28577                           
 28578                           ;main.c: 3338: uint8_t sidl = (((long) val >> 13L) & 0xe0) |
 28579                           ;main.c: 3339: ((long) (val) & 0x03L) |
 28580                           ;main.c: 3340: 0x08;
 28581  0037D8  C023  F060         	movff	setFilter@val,??_setFilter
 28582  0037DC  0E03               	movlw	3
 28583  0037DE  1760               	andwf	??_setFilter& (0+255),f,b
 28584  0037E0  0E0D               	movlw	13
 28585  0037E2  6F61               	movwf	(??_setFilter+1)& (0+255),b
 28586  0037E4  C023  F062         	movff	setFilter@val,??_setFilter+2
 28587  0037E8  C024  F063         	movff	setFilter@val+1,??_setFilter+3
 28588  0037EC  C025  F064         	movff	setFilter@val+2,??_setFilter+4
 28589  0037F0  C026  F065         	movff	setFilter@val+3,??_setFilter+5
 28590  0037F4                     u22065:
 28591  0037F4  6761               	tstfsz	(??_setFilter+1)& (0+255),b
 28592  0037F6  D001               	goto	u22066
 28593  0037F8  D007               	goto	u22067
 28594  0037FA                     u22066:
 28595  0037FA  3565               	rlcf	(??_setFilter+5)& (0+255),w,b
 28596  0037FC  3365               	rrcf	(??_setFilter+5)& (0+255),f,b
 28597  0037FE  3364               	rrcf	(??_setFilter+4)& (0+255),f,b
 28598  003800  3363               	rrcf	(??_setFilter+3)& (0+255),f,b
 28599  003802  3362               	rrcf	(??_setFilter+2)& (0+255),f,b
 28600  003804  2F61               	decfsz	(??_setFilter+1)& (0+255),f,b
 28601  003806  D7F6               	goto	u22065
 28602  003808                     u22067:
 28603  003808  5162               	movf	(??_setFilter+2)& (0+255),w,b
 28604  00380A  0BE0               	andlw	224
 28605  00380C  1160               	iorwf	??_setFilter& (0+255),w,b
 28606  00380E  0908               	iorlw	8
 28607  003810  6F68               	movwf	setFilter@sidl& (0+255),b
 28608                           
 28609                           ; BSR set to: 0
 28610                           ;main.c: 3341: uint8_t eidh = (long) val >> 8L;
 28611  003812  C024  F069         	movff	setFilter@val+1,setFilter@eidh
 28612                           
 28613                           ; BSR set to: 0
 28614                           ;main.c: 3342: uint8_t eidl = val;
 28615  003816  C023  F06A         	movff	setFilter@val,setFilter@eidl
 28616                           
 28617                           ;main.c: 3344: switch (nFilter) {
 28618  00381A  D090               	goto	l16978
 28619  00381C                     l1389:
 28620                           
 28621                           ; BSR set to: 0
 28622                           ;main.c: 3347: RXF0SIDH = sidh;
 28623  00381C  C067  FF00         	movff	setFilter@sidh,3840	;volatile
 28624                           
 28625                           ;main.c: 3348: RXF0SIDL = sidl;
 28626  003820  C068  FF01         	movff	setFilter@sidl,3841	;volatile
 28627                           
 28628                           ;main.c: 3349: RXF0EIDH = eidh;
 28629  003824  C069  FF02         	movff	setFilter@eidh,3842	;volatile
 28630                           
 28631                           ;main.c: 3350: RXF0EIDL = eidl;
 28632  003828  C06A  FF03         	movff	setFilter@eidl,3843	;volatile
 28633                           
 28634                           ;main.c: 3351: break;
 28635  00382C  D0AA               	goto	l16980
 28636  00382E                     l1391:
 28637                           
 28638                           ; BSR set to: 0
 28639                           ;main.c: 3354: RXF1SIDH = sidh;
 28640  00382E  C067  FF04         	movff	setFilter@sidh,3844	;volatile
 28641                           
 28642                           ;main.c: 3355: RXF1SIDL = sidl;
 28643  003832  C068  FF05         	movff	setFilter@sidl,3845	;volatile
 28644                           
 28645                           ;main.c: 3356: RXF1EIDH = eidh;
 28646  003836  C069  FF06         	movff	setFilter@eidh,3846	;volatile
 28647                           
 28648                           ;main.c: 3357: RXF1EIDL = eidl;
 28649  00383A  C06A  FF07         	movff	setFilter@eidl,3847	;volatile
 28650                           
 28651                           ;main.c: 3358: break;
 28652  00383E  D0A1               	goto	l16980
 28653  003840                     l1392:
 28654                           
 28655                           ; BSR set to: 0
 28656                           ;main.c: 3361: RXF2SIDH = sidh;
 28657  003840  C067  FF08         	movff	setFilter@sidh,3848	;volatile
 28658                           
 28659                           ;main.c: 3362: RXF2SIDL = sidl;
 28660  003844  C068  FF09         	movff	setFilter@sidl,3849	;volatile
 28661                           
 28662                           ;main.c: 3363: RXF2EIDH = eidh;
 28663  003848  C069  FF0A         	movff	setFilter@eidh,3850	;volatile
 28664                           
 28665                           ;main.c: 3364: RXF2EIDL = eidl;
 28666  00384C  C06A  FF0B         	movff	setFilter@eidl,3851	;volatile
 28667                           
 28668                           ;main.c: 3365: break;
 28669  003850  D098               	goto	l16980
 28670  003852                     l1393:
 28671                           
 28672                           ; BSR set to: 0
 28673                           ;main.c: 3368: RXF3SIDH = sidh;
 28674  003852  C067  FF0C         	movff	setFilter@sidh,3852	;volatile
 28675                           
 28676                           ;main.c: 3369: RXF3SIDL = sidl;
 28677  003856  C068  FF0D         	movff	setFilter@sidl,3853	;volatile
 28678                           
 28679                           ;main.c: 3370: RXF3EIDH = eidh;
 28680  00385A  C069  FF0E         	movff	setFilter@eidh,3854	;volatile
 28681                           
 28682                           ;main.c: 3371: RXF3EIDL = eidl;
 28683  00385E  C06A  FF0F         	movff	setFilter@eidl,3855	;volatile
 28684                           
 28685                           ;main.c: 3372: break;
 28686  003862  D08F               	goto	l16980
 28687  003864                     l1394:
 28688                           
 28689                           ; BSR set to: 0
 28690                           ;main.c: 3375: RXF4SIDH = sidh;
 28691  003864  C067  FF10         	movff	setFilter@sidh,3856	;volatile
 28692                           
 28693                           ;main.c: 3376: RXF4SIDL = sidl;
 28694  003868  C068  FF11         	movff	setFilter@sidl,3857	;volatile
 28695                           
 28696                           ;main.c: 3377: RXF4EIDH = eidh;
 28697  00386C  C069  FF12         	movff	setFilter@eidh,3858	;volatile
 28698                           
 28699                           ;main.c: 3378: RXF4EIDL = eidl;
 28700  003870  C06A  FF13         	movff	setFilter@eidl,3859	;volatile
 28701                           
 28702                           ;main.c: 3379: break;
 28703  003874  D086               	goto	l16980
 28704  003876                     l1395:
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;main.c: 3382: RXF5SIDH = sidh;
 28708  003876  C067  FF14         	movff	setFilter@sidh,3860	;volatile
 28709                           
 28710                           ;main.c: 3383: RXF5SIDL = sidl;
 28711  00387A  C068  FF15         	movff	setFilter@sidl,3861	;volatile
 28712                           
 28713                           ;main.c: 3384: RXF5EIDH = eidh;
 28714  00387E  C069  FF16         	movff	setFilter@eidh,3862	;volatile
 28715                           
 28716                           ;main.c: 3385: RXF5EIDL = eidl;
 28717  003882  C06A  FF17         	movff	setFilter@eidl,3863	;volatile
 28718                           
 28719                           ;main.c: 3386: break;
 28720  003886  D07D               	goto	l16980
 28721  003888                     l1396:
 28722                           
 28723                           ; BSR set to: 0
 28724                           ;main.c: 3389: RXF6SIDH = sidh;
 28725  003888  C067  FD60         	movff	setFilter@sidh,3424	;volatile
 28726                           
 28727                           ;main.c: 3390: RXF6SIDL = sidl;
 28728  00388C  C068  FD61         	movff	setFilter@sidl,3425	;volatile
 28729                           
 28730                           ;main.c: 3391: RXF6EIDH = eidh;
 28731  003890  C069  FD62         	movff	setFilter@eidh,3426	;volatile
 28732                           
 28733                           ;main.c: 3392: RXF6EIDL = eidl;
 28734  003894  C06A  FD63         	movff	setFilter@eidl,3427	;volatile
 28735                           
 28736                           ;main.c: 3393: break;
 28737  003898  D074               	goto	l16980
 28738  00389A                     l1397:
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;main.c: 3396: RXF7SIDH = sidh;
 28742  00389A  C067  FD64         	movff	setFilter@sidh,3428	;volatile
 28743                           
 28744                           ;main.c: 3397: RXF7SIDL = sidl;
 28745  00389E  C068  FD65         	movff	setFilter@sidl,3429	;volatile
 28746                           
 28747                           ;main.c: 3398: RXF7EIDH = eidh;
 28748  0038A2  C069  FD66         	movff	setFilter@eidh,3430	;volatile
 28749                           
 28750                           ;main.c: 3399: RXF7EIDL = eidl;
 28751  0038A6  C06A  FD67         	movff	setFilter@eidl,3431	;volatile
 28752                           
 28753                           ;main.c: 3400: break;
 28754  0038AA  D06B               	goto	l16980
 28755  0038AC                     l1398:
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;main.c: 3403: RXF8SIDH = sidh;
 28759  0038AC  C067  FD68         	movff	setFilter@sidh,3432	;volatile
 28760                           
 28761                           ;main.c: 3404: RXF8SIDL = sidl;
 28762  0038B0  C068  FD69         	movff	setFilter@sidl,3433	;volatile
 28763                           
 28764                           ;main.c: 3405: RXF8EIDH = eidh;
 28765  0038B4  C069  FD6A         	movff	setFilter@eidh,3434	;volatile
 28766                           
 28767                           ;main.c: 3406: RXF8EIDL = eidl;
 28768  0038B8  C06A  FD6B         	movff	setFilter@eidl,3435	;volatile
 28769                           
 28770                           ;main.c: 3407: break;
 28771  0038BC  D062               	goto	l16980
 28772  0038BE                     l1399:
 28773                           
 28774                           ; BSR set to: 0
 28775                           ;main.c: 3410: RXF9SIDH = sidh;
 28776  0038BE  C067  FD70         	movff	setFilter@sidh,3440	;volatile
 28777                           
 28778                           ;main.c: 3411: RXF9SIDL = sidl;
 28779  0038C2  C068  FD71         	movff	setFilter@sidl,3441	;volatile
 28780                           
 28781                           ;main.c: 3412: RXF9EIDH = eidh;
 28782  0038C6  C069  FD72         	movff	setFilter@eidh,3442	;volatile
 28783                           
 28784                           ;main.c: 3413: RXF9EIDL = eidl;
 28785  0038CA  C06A  FD73         	movff	setFilter@eidl,3443	;volatile
 28786                           
 28787                           ;main.c: 3414: break;
 28788  0038CE  D059               	goto	l16980
 28789  0038D0                     l1400:
 28790                           
 28791                           ; BSR set to: 0
 28792                           ;main.c: 3417: RXF10SIDH = sidh;
 28793  0038D0  C067  FD74         	movff	setFilter@sidh,3444	;volatile
 28794                           
 28795                           ;main.c: 3418: RXF10SIDL = sidl;
 28796  0038D4  C068  FD75         	movff	setFilter@sidl,3445	;volatile
 28797                           
 28798                           ;main.c: 3419: RXF10EIDH = eidh;
 28799  0038D8  C069  FD76         	movff	setFilter@eidh,3446	;volatile
 28800                           
 28801                           ;main.c: 3420: RXF10EIDL = eidl;
 28802  0038DC  C06A  FD77         	movff	setFilter@eidl,3447	;volatile
 28803                           
 28804                           ;main.c: 3421: break;
 28805  0038E0  D050               	goto	l16980
 28806  0038E2                     l1401:
 28807                           
 28808                           ; BSR set to: 0
 28809                           ;main.c: 3424: RXF11SIDH = sidh;
 28810  0038E2  C067  FD78         	movff	setFilter@sidh,3448	;volatile
 28811                           
 28812                           ;main.c: 3425: RXF11SIDL = sidl;
 28813  0038E6  C068  FD79         	movff	setFilter@sidl,3449	;volatile
 28814                           
 28815                           ;main.c: 3426: RXF11EIDH = eidh;
 28816  0038EA  C069  FD7A         	movff	setFilter@eidh,3450	;volatile
 28817                           
 28818                           ;main.c: 3427: RXF11EIDL = eidl;
 28819  0038EE  C06A  FD7B         	movff	setFilter@eidl,3451	;volatile
 28820                           
 28821                           ;main.c: 3428: break;
 28822  0038F2  D047               	goto	l16980
 28823  0038F4                     l1402:
 28824                           
 28825                           ; BSR set to: 0
 28826                           ;main.c: 3431: RXF12SIDH = sidh;
 28827  0038F4  C067  FD80         	movff	setFilter@sidh,3456	;volatile
 28828                           
 28829                           ;main.c: 3432: RXF12SIDL = sidl;
 28830  0038F8  C068  FD81         	movff	setFilter@sidl,3457	;volatile
 28831                           
 28832                           ;main.c: 3433: RXF12EIDH = eidh;
 28833  0038FC  C069  FD82         	movff	setFilter@eidh,3458	;volatile
 28834                           
 28835                           ;main.c: 3434: RXF12EIDL = eidl;
 28836  003900  C06A  FD83         	movff	setFilter@eidl,3459	;volatile
 28837                           
 28838                           ;main.c: 3435: break;
 28839  003904  D03E               	goto	l16980
 28840  003906                     l1403:
 28841                           
 28842                           ; BSR set to: 0
 28843                           ;main.c: 3438: RXF13SIDH = sidh;
 28844  003906  C067  FD84         	movff	setFilter@sidh,3460	;volatile
 28845                           
 28846                           ;main.c: 3439: RXF13SIDL = sidl;
 28847  00390A  C068  FD85         	movff	setFilter@sidl,3461	;volatile
 28848                           
 28849                           ;main.c: 3440: RXF13EIDH = eidh;
 28850  00390E  C069  FD86         	movff	setFilter@eidh,3462	;volatile
 28851                           
 28852                           ;main.c: 3441: RXF13EIDL = eidl;
 28853  003912  C06A  FD87         	movff	setFilter@eidl,3463	;volatile
 28854                           
 28855                           ;main.c: 3442: break;
 28856  003916  D035               	goto	l16980
 28857  003918                     l1404:
 28858                           
 28859                           ; BSR set to: 0
 28860                           ;main.c: 3445: RXF14SIDH = sidh;
 28861  003918  C067  FD88         	movff	setFilter@sidh,3464	;volatile
 28862                           
 28863                           ;main.c: 3446: RXF14SIDL = sidl;
 28864  00391C  C068  FD89         	movff	setFilter@sidl,3465	;volatile
 28865                           
 28866                           ;main.c: 3447: RXF14EIDH = eidh;
 28867  003920  C069  FD8A         	movff	setFilter@eidh,3466	;volatile
 28868                           
 28869                           ;main.c: 3448: RXF14EIDL = eidl;
 28870  003924  C06A  FD8B         	movff	setFilter@eidl,3467	;volatile
 28871                           
 28872                           ;main.c: 3449: break;
 28873  003928  D02C               	goto	l16980
 28874  00392A                     l1405:
 28875                           
 28876                           ; BSR set to: 0
 28877                           ;main.c: 3452: RXF15SIDH = sidh;
 28878  00392A  C067  FD90         	movff	setFilter@sidh,3472	;volatile
 28879                           
 28880                           ;main.c: 3453: RXF15SIDL = sidl;
 28881  00392E  C068  FD91         	movff	setFilter@sidl,3473	;volatile
 28882                           
 28883                           ;main.c: 3454: RXF15EIDH = eidh;
 28884  003932  C069  FD92         	movff	setFilter@eidh,3474	;volatile
 28885                           
 28886                           ;main.c: 3455: RXF15EIDL = eidl;
 28887  003936  C06A  FD93         	movff	setFilter@eidl,3475	;volatile
 28888                           
 28889                           ;main.c: 3456: break;
 28890  00393A  D023               	goto	l16980
 28891  00393C                     l16978:
 28892                           
 28893                           ; BSR set to: 0
 28894  00393C  5166               	movf	setFilter@nFilter& (0+255),w,b
 28895                           
 28896                           ; Switch size 1, requested type "space"
 28897                           ; Number of cases is 16, Range of values is 0 to 15
 28898                           ; switch strategies available:
 28899                           ; Name         Instructions Cycles
 28900                           ; simple_byte           49    25 (average)
 28901                           ;	Chosen strategy is simple_byte
 28902  00393E  E101 D76D          	bz	l1389
 28903  003942  0A01               	xorlw	1	; case 1
 28904  003944  E101 D773          	bz	l1391
 28905  003948  0A03               	xorlw	3	; case 2
 28906  00394A  E101 D779          	bz	l1392
 28907  00394E  0A01               	xorlw	1	; case 3
 28908  003950  E080               	bz	l1393
 28909  003952  0A07               	xorlw	7	; case 4
 28910  003954  E087               	bz	l1394
 28911  003956  0A01               	xorlw	1	; case 5
 28912  003958  E08E               	bz	l1395
 28913  00395A  0A03               	xorlw	3	; case 6
 28914  00395C  E095               	bz	l1396
 28915  00395E  0A01               	xorlw	1	; case 7
 28916  003960  E09C               	bz	l1397
 28917  003962  0A0F               	xorlw	15	; case 8
 28918  003964  E0A3               	bz	l1398
 28919  003966  0A01               	xorlw	1	; case 9
 28920  003968  E0AA               	bz	l1399
 28921  00396A  0A03               	xorlw	3	; case 10
 28922  00396C  E0B1               	bz	l1400
 28923  00396E  0A01               	xorlw	1	; case 11
 28924  003970  E0B8               	bz	l1401
 28925  003972  0A07               	xorlw	7	; case 12
 28926  003974  E0BF               	bz	l1402
 28927  003976  0A01               	xorlw	1	; case 13
 28928  003978  E0C6               	bz	l1403
 28929  00397A  0A03               	xorlw	3	; case 14
 28930  00397C  E0CD               	bz	l1404
 28931  00397E  0A01               	xorlw	1	; case 15
 28932  003980  E0D4               	bz	l1405
 28933  003982                     l16980:
 28934                           
 28935                           ; BSR set to: 0
 28936                           ;main.c: 3459: if ( bPersistent ) {
 28937  003982  5027               	movf	setFilter@bPersistent,w,c
 28938  003984  E034               	bz	l1407
 28939                           
 28940                           ; BSR set to: 0
 28941                           ;main.c: 3460: (Busy_eep(), Write_b_eep(0x20 + 0 + 4*nFilter,( ( id >> 24 ) & 0xff )));
 28942  003986  ECBC  F035         	call	_Busy_eep	;wreg free
 28943  00398A  D832               	call	PL20	;call to abstracted procedure
 28944  00398C  0E20               	movlw	32
 28945  00398E  2560               	addwf	??_setFilter& (0+255),w,b
 28946  003990  6E1F               	movwf	?_Write_b_eep,c
 28947  003992  0E00               	movlw	0
 28948  003994  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28949  003996  6E20               	movwf	?_Write_b_eep+1,c
 28950  003998  C03E  F021         	movff	_id+3,?_Write_b_eep+2
 28951  00399C  ECBB  F034         	call	_Write_b_eep	;wreg free
 28952                           
 28953                           ;main.c: 3461: (Busy_eep(), Write_b_eep(0x20 + 1 + 4*nFilter,( ( id >> 16 ) & 0xff )));
 28954  0039A0  ECBC  F035         	call	_Busy_eep	;wreg free
 28955  0039A4  D825               	call	PL20	;call to abstracted procedure
 28956  0039A6  0E21               	movlw	33
 28957  0039A8  2560               	addwf	??_setFilter& (0+255),w,b
 28958  0039AA  6E1F               	movwf	?_Write_b_eep,c
 28959  0039AC  0E00               	movlw	0
 28960  0039AE  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28961  0039B0  6E20               	movwf	?_Write_b_eep+1,c
 28962  0039B2  C03D  F021         	movff	_id+2,?_Write_b_eep+2
 28963  0039B6  ECBB  F034         	call	_Write_b_eep	;wreg free
 28964                           
 28965                           ;main.c: 3462: (Busy_eep(), Write_b_eep(0x20 + 2 + 4*nFilter,( ( id >> 8 ) & 0xff )));
 28966  0039BA  ECBC  F035         	call	_Busy_eep	;wreg free
 28967  0039BE  D818               	call	PL20	;call to abstracted procedure
 28968  0039C0  0E22               	movlw	34
 28969  0039C2  2560               	addwf	??_setFilter& (0+255),w,b
 28970  0039C4  6E1F               	movwf	?_Write_b_eep,c
 28971  0039C6  0E00               	movlw	0
 28972  0039C8  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28973  0039CA  6E20               	movwf	?_Write_b_eep+1,c
 28974  0039CC  C03C  F021         	movff	_id+1,?_Write_b_eep+2
 28975  0039D0  ECBB  F034         	call	_Write_b_eep	;wreg free
 28976                           
 28977                           ;main.c: 3463: (Busy_eep(), Write_b_eep(0x20 + 3 + 4*nFilter,( id & 0xff )));
 28978  0039D4  ECBC  F035         	call	_Busy_eep	;wreg free
 28979  0039D8  D80B               	call	PL20	;call to abstracted procedure
 28980  0039DA  0E23               	movlw	35
 28981  0039DC  2560               	addwf	??_setFilter& (0+255),w,b
 28982  0039DE  6E1F               	movwf	?_Write_b_eep,c
 28983  0039E0  0E00               	movlw	0
 28984  0039E2  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28985  0039E4  6E20               	movwf	?_Write_b_eep+1,c
 28986  0039E6  C03B  F021         	movff	_id,?_Write_b_eep+2
 28987  0039EA  ECBB  F034         	call	_Write_b_eep	;wreg free
 28988  0039EE                     l1407:
 28989  0039EE  0012               	return	
 28990  0039F0                     __end_of_setFilter:
 28991                           	opt stack 0
 28992  0039F0                     PL20:
 28993                           	opt stack 25
 28994  0039F0  0100               	movlb	0	; () banked
 28995  0039F2  5166               	movf	setFilter@nFilter& (0+255),w,b
 28996  0039F4  6F60               	movwf	??_setFilter& (0+255),b
 28997  0039F6  6B61               	clrf	(??_setFilter+1)& (0+255),b
 28998  0039F8  90D8               	bcf	status,0,c
 28999  0039FA  3760               	rlcf	??_setFilter& (0+255),f,b
 29000  0039FC  3761               	rlcf	(??_setFilter+1)& (0+255),f,b
 29001  0039FE  90D8               	bcf	status,0,c
 29002  003A00  3760               	rlcf	??_setFilter& (0+255),f,b
 29003  003A02  3761               	rlcf	(??_setFilter+1)& (0+255),f,b
 29004  003A04  0012               	return	
 29005  003A06                     __end_ofPL20:
 29006                           	opt stack 0
 29007                           tblptru	equ	0xFF8
 29008                           tblptrh	equ	0xFF7
 29009                           tblptrl	equ	0xFF6
 29010                           tablat	equ	0xFF5
 29011                           prodh	equ	0xFF4
 29012                           prodl	equ	0xFF3
 29013                           intcon	equ	0xFF2
 29014                           indf0	equ	0xFEF
 29015                           postinc0	equ	0xFEE
 29016                           fsr0h	equ	0xFEA
 29017                           fsr0l	equ	0xFE9
 29018                           wreg	equ	0xFE8
 29019                           indf1	equ	0xFE7
 29020                           postinc1	equ	0xFE6
 29021                           postdec1	equ	0xFE5
 29022                           fsr1h	equ	0xFE2
 29023                           fsr1l	equ	0xFE1
 29024                           indf2	equ	0xFDF
 29025                           postinc2	equ	0xFDE
 29026                           postdec2	equ	0xFDD
 29027                           plusw2	equ	0xFDB
 29028                           fsr2h	equ	0xFDA
 29029                           fsr2l	equ	0xFD9
 29030                           status	equ	0xFD8
 29031                           
 29032 ;; *************** function _Write_b_eep *****************
 29033 ;; Defined at:
 29034 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\write_B.c"
 29035 ;; Parameters:    Size  Location     Type
 29036 ;;  badd            2   30[COMRAM] unsigned int 
 29037 ;;  bdat            1   32[COMRAM] unsigned char 
 29038 ;; Auto vars:     Size  Location     Type
 29039 ;;  GIE_BIT_VAL     1   33[COMRAM] unsigned char 
 29040 ;; Return value:  Size  Location     Type
 29041 ;;		None               void
 29042 ;; Registers used:
 29043 ;;		wreg, status,2
 29044 ;; Tracked objects:
 29045 ;;		On entry : 0/0
 29046 ;;		On exit  : 0/0
 29047 ;;		Unchanged: 0/0
 29048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29049 ;;      Params:         3       0       0       0       0       0       0
 29050 ;;      Locals:         1       0       0       0       0       0       0
 29051 ;;      Temps:          0       0       0       0       0       0       0
 29052 ;;      Totals:         4       0       0       0       0       0       0
 29053 ;;Total ram usage:        4 bytes
 29054 ;; Hardware stack levels used:    1
 29055 ;; Hardware stack levels required when called:    3
 29056 ;; This function calls:
 29057 ;;		Nothing
 29058 ;; This function is called by:
 29059 ;;		_init_app_eeprom
 29060 ;;		_doModeVerbose
 29061 ;;		_doModeVscp
 29062 ;;		_doModeSLCAN
 29063 ;;		_setFilter
 29064 ;; This function uses a non-reentrant model
 29065 ;;
 29066                           
 29067                           	psect	text81
 29068  006976                     __ptext81:
 29069                           	opt stack 0
 29070  006976                     _Write_b_eep:
 29071                           	opt stack 26
 29072                           
 29073                           ;incstack = 0
 29074                           ;incstack = 0
 29075  006976  C01F  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 29076  00697A  C021  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 29077  00697E  9EA6               	bcf	4006,7,c	;volatile
 29078  006980  9CA6               	bcf	4006,6,c	;volatile
 29079  006982  84A6               	bsf	4006,2,c	;volatile
 29080  006984  0E00               	movlw	0
 29081  006986  BEF2               	btfsc	intcon,7,c	;volatile
 29082  006988  0E01               	movlw	1
 29083  00698A  6E22               	movwf	Write_b_eep@GIE_BIT_VAL,c
 29084  00698C  9EF2               	bcf	intcon,7,c	;volatile
 29085  00698E  0E55               	movlw	85
 29086  006990  6EA7               	movwf	4007,c	;volatile
 29087  006992  0EAA               	movlw	170
 29088  006994  6EA7               	movwf	4007,c	;volatile
 29089  006996  82A6               	bsf	4006,1,c	;volatile
 29090  006998                     l1955:
 29091  006998  B2A6               	btfsc	4006,1,c	;volatile
 29092  00699A  D7FE               	goto	l1955
 29093  00699C  B022               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
 29094  00699E  D002               	bra	u22165
 29095  0069A0  9EF2               	bcf	intcon,7,c	;volatile
 29096  0069A2  D001               	bra	u22166
 29097  0069A4                     u22165:
 29098  0069A4  8EF2               	bsf	intcon,7,c	;volatile
 29099  0069A6                     u22166:
 29100  0069A6  94A6               	bcf	4006,2,c	;volatile
 29101  0069A8  0012               	return	
 29102  0069AA                     __end_of_Write_b_eep:
 29103                           	opt stack 0
 29104                           tblptru	equ	0xFF8
 29105                           tblptrh	equ	0xFF7
 29106                           tblptrl	equ	0xFF6
 29107                           tablat	equ	0xFF5
 29108                           prodh	equ	0xFF4
 29109                           prodl	equ	0xFF3
 29110                           intcon	equ	0xFF2
 29111                           indf0	equ	0xFEF
 29112                           postinc0	equ	0xFEE
 29113                           fsr0h	equ	0xFEA
 29114                           fsr0l	equ	0xFE9
 29115                           wreg	equ	0xFE8
 29116                           indf1	equ	0xFE7
 29117                           postinc1	equ	0xFE6
 29118                           postdec1	equ	0xFE5
 29119                           fsr1h	equ	0xFE2
 29120                           fsr1l	equ	0xFE1
 29121                           indf2	equ	0xFDF
 29122                           postinc2	equ	0xFDE
 29123                           postdec2	equ	0xFDD
 29124                           plusw2	equ	0xFDB
 29125                           fsr2h	equ	0xFDA
 29126                           fsr2l	equ	0xFD9
 29127                           status	equ	0xFD8
 29128                           
 29129 ;; *************** function _Busy_eep *****************
 29130 ;; Defined at:
 29131 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\busy_eep.c"
 29132 ;; Parameters:    Size  Location     Type
 29133 ;;		None
 29134 ;; Auto vars:     Size  Location     Type
 29135 ;;		None
 29136 ;; Return value:  Size  Location     Type
 29137 ;;		None               void
 29138 ;; Registers used:
 29139 ;;		None
 29140 ;; Tracked objects:
 29141 ;;		On entry : 0/0
 29142 ;;		On exit  : 0/0
 29143 ;;		Unchanged: 0/0
 29144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29145 ;;      Params:         0       0       0       0       0       0       0
 29146 ;;      Locals:         0       0       0       0       0       0       0
 29147 ;;      Temps:          0       0       0       0       0       0       0
 29148 ;;      Totals:         0       0       0       0       0       0       0
 29149 ;;Total ram usage:        0 bytes
 29150 ;; Hardware stack levels used:    1
 29151 ;; Hardware stack levels required when called:    3
 29152 ;; This function calls:
 29153 ;;		Nothing
 29154 ;; This function is called by:
 29155 ;;		_init_app_eeprom
 29156 ;;		_doModeVerbose
 29157 ;;		_doModeVscp
 29158 ;;		_doModeSLCAN
 29159 ;;		_setFilter
 29160 ;; This function uses a non-reentrant model
 29161 ;;
 29162                           
 29163                           	psect	text82
 29164  006B78                     __ptext82:
 29165                           	opt stack 0
 29166  006B78                     _Busy_eep:
 29167                           	opt stack 26
 29168  006B78                     l1930:
 29169  006B78  A2A6               	btfss	4006,1,c	;volatile
 29170  006B7A  0012               	return	
 29171  006B7C  D7FD               	goto	l1930
 29172  006B7E                     __end_of_Busy_eep:
 29173                           	opt stack 0
 29174                           tblptru	equ	0xFF8
 29175                           tblptrh	equ	0xFF7
 29176                           tblptrl	equ	0xFF6
 29177                           tablat	equ	0xFF5
 29178                           prodh	equ	0xFF4
 29179                           prodl	equ	0xFF3
 29180                           intcon	equ	0xFF2
 29181                           indf0	equ	0xFEF
 29182                           postinc0	equ	0xFEE
 29183                           fsr0h	equ	0xFEA
 29184                           fsr0l	equ	0xFE9
 29185                           wreg	equ	0xFE8
 29186                           indf1	equ	0xFE7
 29187                           postinc1	equ	0xFE6
 29188                           postdec1	equ	0xFE5
 29189                           fsr1h	equ	0xFE2
 29190                           fsr1l	equ	0xFE1
 29191                           indf2	equ	0xFDF
 29192                           postinc2	equ	0xFDE
 29193                           postdec2	equ	0xFDD
 29194                           plusw2	equ	0xFDB
 29195                           fsr2h	equ	0xFDA
 29196                           fsr2l	equ	0xFD9
 29197                           status	equ	0xFD8
 29198                           
 29199 ;; *************** function _ECANSetOperationMode *****************
 29200 ;; Defined at:
 29201 ;;		line 1014 in file "ECAN.c"
 29202 ;; Parameters:    Size  Location     Type
 29203 ;;  mode            1    wreg     enum E16337
 29204 ;; Auto vars:     Size  Location     Type
 29205 ;;  mode            1   30[COMRAM] enum E16337
 29206 ;; Return value:  Size  Location     Type
 29207 ;;		None               void
 29208 ;; Registers used:
 29209 ;;		wreg, status,2, status,0
 29210 ;; Tracked objects:
 29211 ;;		On entry : 0/1
 29212 ;;		On exit  : 0/0
 29213 ;;		Unchanged: 0/0
 29214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29215 ;;      Params:         0       0       0       0       0       0       0
 29216 ;;      Locals:         1       0       0       0       0       0       0
 29217 ;;      Temps:          0       0       0       0       0       0       0
 29218 ;;      Totals:         1       0       0       0       0       0       0
 29219 ;;Total ram usage:        1 bytes
 29220 ;; Hardware stack levels used:    1
 29221 ;; Hardware stack levels required when called:    3
 29222 ;; This function calls:
 29223 ;;		Nothing
 29224 ;; This function is called by:
 29225 ;;		_main
 29226 ;;		_init_app_ram
 29227 ;;		_doModeVerbose
 29228 ;;		_doModeVscp
 29229 ;;		_doModeSLCAN
 29230 ;;		_ECANInitialize
 29231 ;; This function uses a non-reentrant model
 29232 ;;
 29233                           
 29234                           	psect	text83
 29235  006AD4                     __ptext83:
 29236                           	opt stack 0
 29237  006AD4                     _ECANSetOperationMode:
 29238                           	opt stack 26
 29239                           
 29240                           ;incstack = 0
 29241                           ;incstack = 0
 29242                           ;ECANSetOperationMode@mode stored from wreg
 29243  006AD4  CFE8 F01F          	movff	wreg,ECANSetOperationMode@mode
 29244                           
 29245                           ;ECAN.c: 1015: CANCON &= 0x1F;
 29246  006AD8  0E1F               	movlw	31
 29247  006ADA  166F               	andwf	3951,f,c	;volatile
 29248                           
 29249                           ;ECAN.c: 1016: CANCON |= mode;
 29250  006ADC  501F               	movf	ECANSetOperationMode@mode,w,c
 29251  006ADE  126F               	iorwf	3951,f,c	;volatile
 29252  006AE0                     l15466:
 29253  006AE0  506F               	movf	3951,w,c	;volatile
 29254  006AE2  0BE0               	andlw	224
 29255  006AE4  181F               	xorwf	ECANSetOperationMode@mode,w,c
 29256  006AE6  B4D8               	btfsc	status,2,c
 29257  006AE8  0012               	return	
 29258  006AEA  D7FA               	goto	l15466
 29259  006AEC                     __end_of_ECANSetOperationMode:
 29260                           	opt stack 0
 29261                           tblptru	equ	0xFF8
 29262                           tblptrh	equ	0xFF7
 29263                           tblptrl	equ	0xFF6
 29264                           tablat	equ	0xFF5
 29265                           prodh	equ	0xFF4
 29266                           prodl	equ	0xFF3
 29267                           intcon	equ	0xFF2
 29268                           indf0	equ	0xFEF
 29269                           postinc0	equ	0xFEE
 29270                           fsr0h	equ	0xFEA
 29271                           fsr0l	equ	0xFE9
 29272                           wreg	equ	0xFE8
 29273                           indf1	equ	0xFE7
 29274                           postinc1	equ	0xFE6
 29275                           postdec1	equ	0xFE5
 29276                           fsr1h	equ	0xFE2
 29277                           fsr1l	equ	0xFE1
 29278                           indf2	equ	0xFDF
 29279                           postinc2	equ	0xFDE
 29280                           postdec2	equ	0xFDD
 29281                           plusw2	equ	0xFDB
 29282                           fsr2h	equ	0xFDA
 29283                           fsr2l	equ	0xFD9
 29284                           status	equ	0xFD8
 29285                           
 29286 ;; *************** function _Read_b_eep *****************
 29287 ;; Defined at:
 29288 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\read_B.c"
 29289 ;; Parameters:    Size  Location     Type
 29290 ;;  badd            2   30[COMRAM] unsigned int 
 29291 ;; Auto vars:     Size  Location     Type
 29292 ;;		None
 29293 ;; Return value:  Size  Location     Type
 29294 ;;                  1    wreg      unsigned char 
 29295 ;; Registers used:
 29296 ;;		wreg, status,2
 29297 ;; Tracked objects:
 29298 ;;		On entry : 0/0
 29299 ;;		On exit  : 0/0
 29300 ;;		Unchanged: 0/0
 29301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29302 ;;      Params:         2       0       0       0       0       0       0
 29303 ;;      Locals:         0       0       0       0       0       0       0
 29304 ;;      Temps:          0       0       0       0       0       0       0
 29305 ;;      Totals:         2       0       0       0       0       0       0
 29306 ;;Total ram usage:        2 bytes
 29307 ;; Hardware stack levels used:    1
 29308 ;; Hardware stack levels required when called:    3
 29309 ;; This function calls:
 29310 ;;		Nothing
 29311 ;; This function is called by:
 29312 ;;		_main
 29313 ;;		_init_app_ram
 29314 ;; This function uses a non-reentrant model
 29315 ;;
 29316                           
 29317                           	psect	text84
 29318  006B3A                     __ptext84:
 29319                           	opt stack 0
 29320  006B3A                     _Read_b_eep:
 29321                           	opt stack 24
 29322                           
 29323                           ;incstack = 0
 29324                           ;incstack = 0
 29325  006B3A  C01F  FFA9         	movff	Read_b_eep@badd,4009	;volatile
 29326  006B3E  9CA6               	bcf	4006,6,c	;volatile
 29327  006B40  9EA6               	bcf	4006,7,c	;volatile
 29328  006B42  80A6               	bsf	4006,0,c	;volatile
 29329  006B44  F000               	nop		;# 
 29330  006B46  F000               	nop		;# 
 29331  006B48  50A8               	movf	4008,w,c	;volatile
 29332  006B4A  0012               	return	
 29333  006B4C                     __end_of_Read_b_eep:
 29334                           	opt stack 0
 29335                           tblptru	equ	0xFF8
 29336                           tblptrh	equ	0xFF7
 29337                           tblptrl	equ	0xFF6
 29338                           tablat	equ	0xFF5
 29339                           prodh	equ	0xFF4
 29340                           prodl	equ	0xFF3
 29341                           intcon	equ	0xFF2
 29342                           indf0	equ	0xFEF
 29343                           postinc0	equ	0xFEE
 29344                           fsr0h	equ	0xFEA
 29345                           fsr0l	equ	0xFE9
 29346                           wreg	equ	0xFE8
 29347                           indf1	equ	0xFE7
 29348                           postinc1	equ	0xFE6
 29349                           postdec1	equ	0xFE5
 29350                           fsr1h	equ	0xFE2
 29351                           fsr1l	equ	0xFE1
 29352                           indf2	equ	0xFDF
 29353                           postinc2	equ	0xFDE
 29354                           postdec2	equ	0xFDD
 29355                           plusw2	equ	0xFDB
 29356                           fsr2h	equ	0xFDA
 29357                           fsr2l	equ	0xFD9
 29358                           status	equ	0xFD8
 29359                           
 29360 ;; *************** function _WriteTimer0 *****************
 29361 ;; Defined at:
 29362 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 29363 ;; Parameters:    Size  Location     Type
 29364 ;;  timer0          2   30[COMRAM] unsigned int 
 29365 ;; Auto vars:     Size  Location     Type
 29366 ;;  timer           2   32[COMRAM] struct Timers
 29367 ;; Return value:  Size  Location     Type
 29368 ;;		None               void
 29369 ;; Registers used:
 29370 ;;		None
 29371 ;; Tracked objects:
 29372 ;;		On entry : 0/0
 29373 ;;		On exit  : 0/0
 29374 ;;		Unchanged: 0/0
 29375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29376 ;;      Params:         2       0       0       0       0       0       0
 29377 ;;      Locals:         2       0       0       0       0       0       0
 29378 ;;      Temps:          0       0       0       0       0       0       0
 29379 ;;      Totals:         4       0       0       0       0       0       0
 29380 ;;Total ram usage:        4 bytes
 29381 ;; Hardware stack levels used:    1
 29382 ;; Hardware stack levels required when called:    3
 29383 ;; This function calls:
 29384 ;;		Nothing
 29385 ;; This function is called by:
 29386 ;;		_init
 29387 ;; This function uses a non-reentrant model
 29388 ;;
 29389                           
 29390                           	psect	text85
 29391  006B4C                     __ptext85:
 29392                           	opt stack 0
 29393  006B4C                     _WriteTimer0:
 29394                           	opt stack 26
 29395                           
 29396                           ;incstack = 0
 29397                           ;incstack = 0
 29398  006B4C  C01F  F021         	movff	WriteTimer0@timer0,WriteTimer0@timer
 29399  006B50  C020  F022         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 29400  006B54  C022  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 29401  006B58  C021  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 29402  006B5C  0012               	return	
 29403  006B5E                     __end_of_WriteTimer0:
 29404                           	opt stack 0
 29405                           tblptru	equ	0xFF8
 29406                           tblptrh	equ	0xFF7
 29407                           tblptrl	equ	0xFF6
 29408                           tablat	equ	0xFF5
 29409                           prodh	equ	0xFF4
 29410                           prodl	equ	0xFF3
 29411                           intcon	equ	0xFF2
 29412                           indf0	equ	0xFEF
 29413                           postinc0	equ	0xFEE
 29414                           fsr0h	equ	0xFEA
 29415                           fsr0l	equ	0xFE9
 29416                           wreg	equ	0xFE8
 29417                           indf1	equ	0xFE7
 29418                           postinc1	equ	0xFE6
 29419                           postdec1	equ	0xFE5
 29420                           fsr1h	equ	0xFE2
 29421                           fsr1l	equ	0xFE1
 29422                           indf2	equ	0xFDF
 29423                           postinc2	equ	0xFDE
 29424                           postdec2	equ	0xFDD
 29425                           plusw2	equ	0xFDB
 29426                           fsr2h	equ	0xFDA
 29427                           fsr2l	equ	0xFD9
 29428                           status	equ	0xFD8
 29429                           
 29430 ;; *************** function _fifo_init *****************
 29431 ;; Defined at:
 29432 ;;		line 14 in file "fifo.c"
 29433 ;; Parameters:    Size  Location     Type
 29434 ;;  f               2   30[COMRAM] PTR struct .
 29435 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 29436 ;;  buf             2   32[COMRAM] PTR const void 
 29437 ;;		 -> can_inputBuffer(494), serial_inputBuffer(128), 
 29438 ;;  size            2   34[COMRAM] unsigned short 
 29439 ;; Auto vars:     Size  Location     Type
 29440 ;;		None
 29441 ;; Return value:  Size  Location     Type
 29442 ;;		None               void
 29443 ;; Registers used:
 29444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29445 ;; Tracked objects:
 29446 ;;		On entry : 0/2
 29447 ;;		On exit  : 0/0
 29448 ;;		Unchanged: 0/0
 29449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29450 ;;      Params:         6       0       0       0       0       0       0
 29451 ;;      Locals:         0       0       0       0       0       0       0
 29452 ;;      Temps:          0       0       0       0       0       0       0
 29453 ;;      Totals:         6       0       0       0       0       0       0
 29454 ;;Total ram usage:        6 bytes
 29455 ;; Hardware stack levels used:    1
 29456 ;; Hardware stack levels required when called:    3
 29457 ;; This function calls:
 29458 ;;		Nothing
 29459 ;; This function is called by:
 29460 ;;		_main
 29461 ;; This function uses a non-reentrant model
 29462 ;;
 29463                           
 29464                           	psect	text86
 29465  00675C                     __ptext86:
 29466                           	opt stack 0
 29467  00675C                     _fifo_init:
 29468                           	opt stack 27
 29469                           
 29470                           ;fifo.c: 15: f->head = 0;
 29471                           
 29472                           ;incstack = 0
 29473                           ;incstack = 0
 29474  00675C  EE20 F002          	lfsr	2,2
 29475  006760  D816               	call	PL136	;call to abstracted procedure
 29476                           
 29477                           ;fifo.c: 16: f->tail = 0;
 29478  006762  EE20 F004          	lfsr	2,4
 29479  006766  D813               	call	PL136	;call to abstracted procedure
 29480                           
 29481                           ;fifo.c: 17: f->size = size;
 29482  006768  EE20 F006          	lfsr	2,6
 29483  00676C  501F               	movf	fifo_init@f,w,c
 29484  00676E  26D9               	addwf	fsr2l,f,c
 29485  006770  5020               	movf	fifo_init@f+1,w,c
 29486  006772  22DA               	addwfc	fsr2h,f,c
 29487  006774  C023  FFDE         	movff	fifo_init@size,postinc2
 29488  006778  C024  FFDD         	movff	fifo_init@size+1,postdec2
 29489                           
 29490                           ;fifo.c: 18: f->buf = buf;
 29491  00677C  C01F  FFD9         	movff	fifo_init@f,fsr2l
 29492  006780  C020  FFDA         	movff	fifo_init@f+1,fsr2h
 29493  006784  C021  FFDE         	movff	fifo_init@buf,postinc2
 29494  006788  C022  FFDD         	movff	fifo_init@buf+1,postdec2
 29495  00678C  0012               	return	
 29496  00678E                     __end_of_fifo_init:
 29497                           	opt stack 0
 29498  00678E                     PL136:
 29499                           	opt stack 27
 29500  00678E  501F               	movf	fifo_init@f,w,c
 29501  006790  26D9               	addwf	fsr2l,f,c
 29502  006792  5020               	movf	fifo_init@f+1,w,c
 29503  006794  22DA               	addwfc	fsr2h,f,c
 29504  006796  6ADE               	clrf	postinc2,c
 29505  006798  6ADD               	clrf	postdec2,c
 29506  00679A  0012               	return	
 29507  00679C                     __end_ofPL136:
 29508                           	opt stack 0
 29509                           tblptru	equ	0xFF8
 29510                           tblptrh	equ	0xFF7
 29511                           tblptrl	equ	0xFF6
 29512                           tablat	equ	0xFF5
 29513                           prodh	equ	0xFF4
 29514                           prodl	equ	0xFF3
 29515                           intcon	equ	0xFF2
 29516                           indf0	equ	0xFEF
 29517                           postinc0	equ	0xFEE
 29518                           fsr0h	equ	0xFEA
 29519                           fsr0l	equ	0xFE9
 29520                           wreg	equ	0xFE8
 29521                           indf1	equ	0xFE7
 29522                           postinc1	equ	0xFE6
 29523                           postdec1	equ	0xFE5
 29524                           fsr1h	equ	0xFE2
 29525                           fsr1l	equ	0xFE1
 29526                           indf2	equ	0xFDF
 29527                           postinc2	equ	0xFDE
 29528                           postdec2	equ	0xFDD
 29529                           plusw2	equ	0xFDB
 29530                           fsr2h	equ	0xFDA
 29531                           fsr2l	equ	0xFD9
 29532                           status	equ	0xFD8
 29533                           
 29534 ;; *************** function _fifo_getFree *****************
 29535 ;; Defined at:
 29536 ;;		line 97 in file "fifo.c"
 29537 ;; Parameters:    Size  Location     Type
 29538 ;;  f               2   30[COMRAM] PTR struct .
 29539 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 29540 ;; Auto vars:     Size  Location     Type
 29541 ;;		None
 29542 ;; Return value:  Size  Location     Type
 29543 ;;                  2   30[COMRAM] unsigned short 
 29544 ;; Registers used:
 29545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29546 ;; Tracked objects:
 29547 ;;		On entry : F/0
 29548 ;;		On exit  : F/0
 29549 ;;		Unchanged: 0/0
 29550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29551 ;;      Params:         2       0       0       0       0       0       0
 29552 ;;      Locals:         0       0       0       0       0       0       0
 29553 ;;      Temps:          0       8       0       0       0       0       0
 29554 ;;      Totals:         2       8       0       0       0       0       0
 29555 ;;Total ram usage:       10 bytes
 29556 ;; Hardware stack levels used:    1
 29557 ;; Hardware stack levels required when called:    3
 29558 ;; This function calls:
 29559 ;;		Nothing
 29560 ;; This function is called by:
 29561 ;;		_main
 29562 ;; This function uses a non-reentrant model
 29563 ;;
 29564                           
 29565                           	psect	text87
 29566  005970                     __ptext87:
 29567                           	opt stack 0
 29568  005970                     _fifo_getFree:
 29569                           	opt stack 27
 29570                           
 29571                           ; BSR set to: 0
 29572                           ;fifo.c: 98: if (f->head < f->tail) {
 29573                           
 29574                           ;incstack = 0
 29575                           ;incstack = 0
 29576  005970  EE20 F004          	lfsr	2,4
 29577  005974  501F               	movf	fifo_getFree@f,w,c
 29578  005976  26D9               	addwf	fsr2l,f,c
 29579  005978  5020               	movf	fifo_getFree@f+1,w,c
 29580  00597A  22DA               	addwfc	fsr2h,f,c
 29581  00597C  EE10 F002          	lfsr	1,2
 29582  005980  501F               	movf	fifo_getFree@f,w,c
 29583  005982  26E1               	addwf	fsr1l,f,c
 29584  005984  5020               	movf	fifo_getFree@f+1,w,c
 29585  005986  22E2               	addwfc	fsr1h,f,c
 29586  005988  52E6               	movf	postinc1,f,c
 29587  00598A  52DE               	movf	postinc2,f,c
 29588  00598C  50DD               	movf	postdec2,w,c
 29589  00598E  5CE5               	subwf	postdec1,w,c
 29590  005990  E102               	bnz	u19475
 29591  005992  50DF               	movf	indf2,w,c
 29592  005994  5CE7               	subwf	indf1,w,c
 29593  005996                     u19475:
 29594  005996  E213               	bc	l15216
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;fifo.c: 99: return (f->tail - f->head);
 29598  005998  EE20 F002          	lfsr	2,2
 29599  00599C  D834               	call	PL106	;call to abstracted procedure
 29600  00599E  EE20 F004          	lfsr	2,4
 29601  0059A2  501F               	movf	fifo_getFree@f,w,c
 29602  0059A4  26D9               	addwf	fsr2l,f,c
 29603  0059A6  5020               	movf	fifo_getFree@f+1,w,c
 29604  0059A8  22DA               	addwfc	fsr2h,f,c
 29605  0059AA  CFDE F062          	movff	postinc2,??_fifo_getFree+2
 29606  0059AE  CFDD F063          	movff	postdec2,??_fifo_getFree+3
 29607  0059B2  5160               	movf	??_fifo_getFree& (0+255),w,b
 29608  0059B4  5D62               	subwf	(??_fifo_getFree+2)& (0+255),w,b
 29609  0059B6  6E1F               	movwf	?_fifo_getFree,c
 29610  0059B8  5161               	movf	(??_fifo_getFree+1)& (0+255),w,b
 29611  0059BA  5963               	subwfb	(??_fifo_getFree+3)& (0+255),w,b
 29612  0059BC  D022               	goto	L59
 29613  0059BE                     l15216:
 29614                           
 29615                           ; BSR set to: 0
 29616                           ;fifo.c: 101: else {
 29617                           ;fifo.c: 102: return (f->size + (f->tail - f->head));
 29618  0059BE  EE20 F004          	lfsr	2,4
 29619  0059C2  D821               	call	PL106	;call to abstracted procedure
 29620  0059C4  EE20 F002          	lfsr	2,2
 29621  0059C8  501F               	movf	fifo_getFree@f,w,c
 29622  0059CA  26D9               	addwf	fsr2l,f,c
 29623  0059CC  5020               	movf	fifo_getFree@f+1,w,c
 29624  0059CE  22DA               	addwfc	fsr2h,f,c
 29625  0059D0  CFDE F062          	movff	postinc2,??_fifo_getFree+2
 29626  0059D4  CFDD F063          	movff	postdec2,??_fifo_getFree+3
 29627  0059D8  EE20 F006          	lfsr	2,6
 29628  0059DC  501F               	movf	fifo_getFree@f,w,c
 29629  0059DE  26D9               	addwf	fsr2l,f,c
 29630  0059E0  5020               	movf	fifo_getFree@f+1,w,c
 29631  0059E2  22DA               	addwfc	fsr2h,f,c
 29632  0059E4  CFDE F064          	movff	postinc2,??_fifo_getFree+4
 29633  0059E8  CFDD F065          	movff	postdec2,??_fifo_getFree+5
 29634  0059EC  5162               	movf	(??_fifo_getFree+2)& (0+255),w,b
 29635  0059EE  5D64               	subwf	(??_fifo_getFree+4)& (0+255),w,b
 29636  0059F0  6F66               	movwf	(??_fifo_getFree+6)& (0+255),b
 29637  0059F2  5163               	movf	(??_fifo_getFree+3)& (0+255),w,b
 29638  0059F4  5965               	subwfb	(??_fifo_getFree+5)& (0+255),w,b
 29639  0059F6  6F67               	movwf	(??_fifo_getFree+7)& (0+255),b
 29640  0059F8  5160               	movf	??_fifo_getFree& (0+255),w,b
 29641  0059FA  2566               	addwf	(??_fifo_getFree+6)& (0+255),w,b
 29642  0059FC  6E1F               	movwf	?_fifo_getFree,c
 29643  0059FE  5161               	movf	(??_fifo_getFree+1)& (0+255),w,b
 29644  005A00  2167               	addwfc	(??_fifo_getFree+7)& (0+255),w,b
 29645  005A02                     L59:
 29646  005A02  6E20               	movwf	?_fifo_getFree+1,c
 29647                           
 29648                           ; BSR set to: 0
 29649  005A04  0012               	return	
 29650  005A06                     __end_of_fifo_getFree:
 29651                           	opt stack 0
 29652  005A06                     PL106:
 29653                           	opt stack 27
 29654  005A06  501F               	movf	fifo_getFree@f,w,c
 29655  005A08  26D9               	addwf	fsr2l,f,c
 29656  005A0A  5020               	movf	fifo_getFree@f+1,w,c
 29657  005A0C  22DA               	addwfc	fsr2h,f,c
 29658  005A0E  CFDE F060          	movff	postinc2,??_fifo_getFree
 29659  005A12  CFDD F061          	movff	postdec2,??_fifo_getFree+1
 29660  005A16  0012               	return	
 29661  005A18                     __end_ofPL106:
 29662                           	opt stack 0
 29663                           tblptru	equ	0xFF8
 29664                           tblptrh	equ	0xFF7
 29665                           tblptrl	equ	0xFF6
 29666                           tablat	equ	0xFF5
 29667                           prodh	equ	0xFF4
 29668                           prodl	equ	0xFF3
 29669                           intcon	equ	0xFF2
 29670                           indf0	equ	0xFEF
 29671                           postinc0	equ	0xFEE
 29672                           fsr0h	equ	0xFEA
 29673                           fsr0l	equ	0xFE9
 29674                           wreg	equ	0xFE8
 29675                           indf1	equ	0xFE7
 29676                           postinc1	equ	0xFE6
 29677                           postdec1	equ	0xFE5
 29678                           fsr1h	equ	0xFE2
 29679                           fsr1l	equ	0xFE1
 29680                           indf2	equ	0xFDF
 29681                           postinc2	equ	0xFDE
 29682                           postdec2	equ	0xFDD
 29683                           plusw2	equ	0xFDB
 29684                           fsr2h	equ	0xFDA
 29685                           fsr2l	equ	0xFD9
 29686                           status	equ	0xFD8
 29687                           
 29688 ;; *************** function _Interrupt *****************
 29689 ;; Defined at:
 29690 ;;		line 146 in file "main.c"
 29691 ;; Parameters:    Size  Location     Type
 29692 ;;		None
 29693 ;; Auto vars:     Size  Location     Type
 29694 ;;  fail            1   29[COMRAM] unsigned char 
 29695 ;;  c               1   28[COMRAM] unsigned char 
 29696 ;; Return value:  Size  Location     Type
 29697 ;;		None               void
 29698 ;; Registers used:
 29699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29700 ;; Tracked objects:
 29701 ;;		On entry : 0/0
 29702 ;;		On exit  : 0/0
 29703 ;;		Unchanged: 0/0
 29704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29705 ;;      Params:         0       0       0       0       0       0       0
 29706 ;;      Locals:         2       0       0       0       0       0       0
 29707 ;;      Temps:          9       0       0       0       0       0       0
 29708 ;;      Totals:        11       0       0       0       0       0       0
 29709 ;;Total ram usage:       11 bytes
 29710 ;; Hardware stack levels used:    1
 29711 ;; Hardware stack levels required when called:    2
 29712 ;; This function calls:
 29713 ;;		_ReadUSART
 29714 ;;		_fifo_write
 29715 ;;		_ECANReceiveMessage
 29716 ;;		i1_fifo_getFree
 29717 ;;		i1_WriteTimer0
 29718 ;; This function is called by:
 29719 ;;		Interrupt level 1
 29720 ;; This function uses a non-reentrant model
 29721 ;;
 29722                           
 29723                           	psect	intcodelo
 29724  000418                     __pintcodelo:
 29725                           	opt stack 0
 29726  000418                     _Interrupt:
 29727                           	opt stack 20
 29728                           
 29729                           ; BSR set to: 0
 29730                           ;incstack = 0
 29731  000418  CFD8 F016          	movff	status,??_Interrupt+2
 29732  00041C  CFE8 F017          	movff	wreg,??_Interrupt+3
 29733  000420  CFE0 F018          	movff	bsr,??_Interrupt+4
 29734  000424  CFE1 F019          	movff	fsr1l,??_Interrupt+5
 29735  000428  CFE2 F01A          	movff	fsr1h,??_Interrupt+6
 29736  00042C  CFD9 F01B          	movff	fsr2l,??_Interrupt+7
 29737  000430  CFDA F01C          	movff	fsr2h,??_Interrupt+8
 29738  000434                     
 29739                           ;main.c: 147: uint8_t c;
 29740                           ;main.c: 150: if ( 1 == PIR1bits.RCIF ) {
 29741  000434  AA9E               	btfss	3998,5,c	;volatile
 29742  000436  D001               	goto	i1u1327_21
 29743  000438  D001               	goto	i1u1327_20
 29744  00043A                     i1u1327_21:
 29745  00043A  D02C               	goto	i1l417
 29746  00043C                     i1u1327_20:
 29747  00043C                     
 29748                           ;main.c: 152: c = ReadUSART();
 29749  00043C  EC5B  F035         	call	_ReadUSART	;wreg free
 29750  000440  6E1D               	movwf	Interrupt@c,c
 29751  000442                     
 29752                           ;main.c: 154: if ( 1 != fifo_write( &serialInputFifo, &c, 1 ) ) {
 29753  000442  0100               	movlb	0	; () banked
 29754  000444  0E00               	movlw	high _serialInputFifo
 29755  000446  6E02               	movwf	?_fifo_write+1,c
 29756  000448  0EF4               	movlw	low _serialInputFifo
 29757  00044A  6E01               	movwf	?_fifo_write,c
 29758  00044C  0E1D               	movlw	low Interrupt@c
 29759  00044E  6E03               	movwf	?_fifo_write+2,c
 29760  000450  0E00               	movlw	high Interrupt@c
 29761  000452  6E04               	movwf	?_fifo_write+3,c
 29762  000454  0E0F               	movlw	15
 29763  000456  6E04               	movwf	?_fifo_write+3,c
 29764  000458  0E5F               	movlw	__accesstop+-1
 29765  00045A  6403               	cpfsgt	?_fifo_write+2,c
 29766  00045C  6A04               	clrf	?_fifo_write+3,c
 29767  00045E  0E01               	movlw	1
 29768  000460  6E05               	movwf	?_fifo_write+4,c
 29769  000462  0E00               	movlw	0
 29770  000464  6E06               	movwf	?_fifo_write+5,c
 29771  000466  0E00               	movlw	0
 29772  000468  6E07               	movwf	?_fifo_write+6,c
 29773  00046A  0E00               	movlw	0
 29774  00046C  6E08               	movwf	?_fifo_write+7,c
 29775  00046E  EC9D  F024         	call	_fifo_write	;wreg free
 29776  000472  0401               	decf	?_fifo_write,w,c
 29777  000474  1002               	iorwf	?_fifo_write+1,w,c
 29778  000476  B4D8               	btfsc	status,2,c
 29779  000478  D001               	goto	i1u1328_21
 29780  00047A  D001               	goto	i1u1328_20
 29781  00047C                     i1u1328_21:
 29782  00047C  D009               	goto	i1l11210
 29783  00047E                     i1u1328_20:
 29784  00047E                     
 29785                           ;main.c: 156: uart_receiveOverruns++;
 29786  00047E  0E01               	movlw	1
 29787  000480  0100               	movlb	0	; () banked
 29788  000482  27E6               	addwf	_uart_receiveOverruns& (0+255),f,b
 29789  000484  0E00               	movlw	0
 29790  000486  23E7               	addwfc	(_uart_receiveOverruns+1)& (0+255),f,b
 29791  000488  0E00               	movlw	0
 29792  00048A  23E8               	addwfc	(_uart_receiveOverruns+2)& (0+255),f,b
 29793  00048C  0E00               	movlw	0
 29794  00048E  23E9               	addwfc	(_uart_receiveOverruns+3)& (0+255),f,b
 29795  000490                     i1l11210:
 29796                           
 29797                           ;main.c: 157: }
 29798                           ;main.c: 160: PIR1bits.RCIF = 0;
 29799  000490  9A9E               	bcf	3998,5,c	;volatile
 29800                           
 29801                           ;main.c: 162: }
 29802  000492  D07D               	goto	i1l419
 29803  000494                     i1l417:
 29804                           
 29805                           ;main.c: 164: else if (1 == INTCONbits.TMR0IF) {
 29806  000494  A4F2               	btfss	intcon,2,c	;volatile
 29807  000496  D001               	goto	i1u1329_21
 29808  000498  D001               	goto	i1u1329_20
 29809  00049A                     i1u1329_21:
 29810  00049A  D079               	goto	i1l419
 29811  00049C                     i1u1329_20:
 29812  00049C                     
 29813                           ;main.c: 166: WriteTimer0(0xfb1d);
 29814  00049C  0EFB               	movlw	251
 29815  00049E  6E02               	movwf	?i1_WriteTimer0+1,c
 29816  0004A0  0E1D               	movlw	29
 29817  0004A2  6E01               	movwf	?i1_WriteTimer0,c
 29818  0004A4  ECAF  F035         	call	i1_WriteTimer0	;wreg free
 29819  0004A8                     
 29820                           ;main.c: 168: timer++;
 29821  0004A8  0E01               	movlw	1
 29822  0004AA  0100               	movlb	0	; () banked
 29823  0004AC  27E2               	addwf	_timer& (0+255),f,b	;volatile
 29824  0004AE  0E00               	movlw	0
 29825  0004B0  23E3               	addwfc	(_timer+1)& (0+255),f,b	;volatile
 29826  0004B2  0E00               	movlw	0
 29827  0004B4  23E4               	addwfc	(_timer+2)& (0+255),f,b	;volatile
 29828  0004B6  0E00               	movlw	0
 29829  0004B8  23E5               	addwfc	(_timer+3)& (0+255),f,b	;volatile
 29830  0004BA                     
 29831                           ; BSR set to: 0
 29832                           ;main.c: 169: timekeeper++;
 29833  0004BA  0E01               	movlw	1
 29834  0004BC  27DE               	addwf	_timekeeper& (0+255),f,b	;volatile
 29835  0004BE  0E00               	movlw	0
 29836  0004C0  23DF               	addwfc	(_timekeeper+1)& (0+255),f,b	;volatile
 29837  0004C2  0E00               	movlw	0
 29838  0004C4  23E0               	addwfc	(_timekeeper+2)& (0+255),f,b	;volatile
 29839  0004C6  0E00               	movlw	0
 29840  0004C8  23E1               	addwfc	(_timekeeper+3)& (0+255),f,b	;volatile
 29841  0004CA                     
 29842                           ; BSR set to: 0
 29843                           ;main.c: 172: status_led_cnt++;
 29844  0004CA  4A2A               	infsnz	_status_led_cnt,f,c	;volatile
 29845  0004CC  2A2B               	incf	_status_led_cnt+1,f,c	;volatile
 29846  0004CE                     
 29847                           ; BSR set to: 0
 29848                           ;main.c: 173: if ( ( 2 == ledFunctionality ) &&
 29849                           ;main.c: 174: ( status_led_cnt > 1000 ) ) {
 29850  0004CE  5041               	movf	_ledFunctionality,w,c	;volatile
 29851  0004D0  0A02               	xorlw	2
 29852  0004D2  A4D8               	btfss	status,2,c
 29853  0004D4  D001               	goto	i1u1330_21
 29854  0004D6  D001               	goto	i1u1330_20
 29855  0004D8                     i1u1330_21:
 29856  0004D8  D00C               	goto	i1l11226
 29857  0004DA                     i1u1330_20:
 29858  0004DA                     
 29859                           ; BSR set to: 0
 29860  0004DA  0EE9               	movlw	233
 29861  0004DC  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29862  0004DE  0E03               	movlw	3
 29863  0004E0  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29864  0004E2  A0D8               	btfss	status,0,c
 29865  0004E4  D001               	goto	i1u1331_21
 29866  0004E6  D001               	goto	i1u1331_20
 29867  0004E8                     i1u1331_21:
 29868  0004E8  D004               	goto	i1l11226
 29869  0004EA                     i1u1331_20:
 29870  0004EA                     i1l11224:
 29871                           
 29872                           ; BSR set to: 0
 29873                           ;main.c: 175: LATC1 = ~LATC1;
 29874  0004EA  728B               	btg	3979,1,c	;volatile
 29875                           
 29876                           ;main.c: 176: status_led_cnt = 0;
 29877  0004EC  6A2A               	clrf	_status_led_cnt,c	;volatile
 29878  0004EE  6A2B               	clrf	_status_led_cnt+1,c	;volatile
 29879                           
 29880                           ;main.c: 177: }
 29881  0004F0  D04D               	goto	i1l422
 29882  0004F2                     i1l11226:
 29883                           
 29884                           ; BSR set to: 0
 29885                           ;main.c: 178: else if ( ( 3 == ledFunctionality ) &&
 29886                           ;main.c: 179: ( status_led_cnt > 400 ) ) {
 29887  0004F2  5041               	movf	_ledFunctionality,w,c	;volatile
 29888  0004F4  0A03               	xorlw	3
 29889  0004F6  A4D8               	btfss	status,2,c
 29890  0004F8  D001               	goto	i1u1332_21
 29891  0004FA  D001               	goto	i1u1332_20
 29892  0004FC                     i1u1332_21:
 29893  0004FC  D009               	goto	i1l11232
 29894  0004FE                     i1u1332_20:
 29895  0004FE                     
 29896                           ; BSR set to: 0
 29897  0004FE  0E91               	movlw	145
 29898  000500  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29899  000502  0E01               	movlw	1
 29900  000504  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29901  000506  A0D8               	btfss	status,0,c
 29902  000508  D001               	goto	i1u1333_21
 29903  00050A  D001               	goto	i1u1333_20
 29904  00050C                     i1u1333_21:
 29905  00050C  D001               	goto	i1l11232
 29906  00050E                     i1u1333_20:
 29907  00050E  D7ED               	goto	i1l11224
 29908  000510                     i1l11232:
 29909                           
 29910                           ; BSR set to: 0
 29911                           ;main.c: 183: else if ( ( 4 == ledFunctionality ) &&
 29912                           ;main.c: 184: ( status_led_cnt > 100 ) ) {
 29913  000510  5041               	movf	_ledFunctionality,w,c	;volatile
 29914  000512  0A04               	xorlw	4
 29915  000514  A4D8               	btfss	status,2,c
 29916  000516  D001               	goto	i1u1334_21
 29917  000518  D001               	goto	i1u1334_20
 29918  00051A                     i1u1334_21:
 29919  00051A  D009               	goto	i1l11238
 29920  00051C                     i1u1334_20:
 29921  00051C                     
 29922                           ; BSR set to: 0
 29923  00051C  0E65               	movlw	101
 29924  00051E  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29925  000520  0E00               	movlw	0
 29926  000522  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29927  000524  A0D8               	btfss	status,0,c
 29928  000526  D001               	goto	i1u1335_21
 29929  000528  D001               	goto	i1u1335_20
 29930  00052A                     i1u1335_21:
 29931  00052A  D001               	goto	i1l11238
 29932  00052C                     i1u1335_20:
 29933  00052C  D7DE               	goto	i1l11224
 29934  00052E                     i1l11238:
 29935                           
 29936                           ; BSR set to: 0
 29937                           ;main.c: 188: else if ( ( 5 == ledFunctionality ) &&
 29938                           ;main.c: 189: (status_led_cnt > 70)) {
 29939  00052E  5041               	movf	_ledFunctionality,w,c	;volatile
 29940  000530  0A05               	xorlw	5
 29941  000532  A4D8               	btfss	status,2,c
 29942  000534  D001               	goto	i1u1336_21
 29943  000536  D001               	goto	i1u1336_20
 29944  000538                     i1u1336_21:
 29945  000538  D009               	goto	i1l11244
 29946  00053A                     i1u1336_20:
 29947  00053A                     
 29948                           ; BSR set to: 0
 29949  00053A  0E47               	movlw	71
 29950  00053C  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29951  00053E  0E00               	movlw	0
 29952  000540  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29953  000542  A0D8               	btfss	status,0,c
 29954  000544  D001               	goto	i1u1337_21
 29955  000546  D001               	goto	i1u1337_20
 29956  000548                     i1u1337_21:
 29957  000548  D001               	goto	i1l11244
 29958  00054A                     i1u1337_20:
 29959  00054A  D7CF               	goto	i1l11224
 29960  00054C                     i1l11244:
 29961                           
 29962                           ; BSR set to: 0
 29963                           ;main.c: 193: else if ( ( 6 == ledFunctionality ) &&
 29964                           ;main.c: 194: ( status_led_cnt > 40 ) ) {
 29965  00054C  5041               	movf	_ledFunctionality,w,c	;volatile
 29966  00054E  0A06               	xorlw	6
 29967  000550  A4D8               	btfss	status,2,c
 29968  000552  D001               	goto	i1u1338_21
 29969  000554  D001               	goto	i1u1338_20
 29970  000556                     i1u1338_21:
 29971  000556  D009               	goto	i1l11250
 29972  000558                     i1u1338_20:
 29973  000558                     
 29974                           ; BSR set to: 0
 29975  000558  0E29               	movlw	41
 29976  00055A  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29977  00055C  0E00               	movlw	0
 29978  00055E  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29979  000560  A0D8               	btfss	status,0,c
 29980  000562  D001               	goto	i1u1339_21
 29981  000564  D001               	goto	i1u1339_20
 29982  000566                     i1u1339_21:
 29983  000566  D001               	goto	i1l11250
 29984  000568                     i1u1339_20:
 29985  000568  D7C0               	goto	i1l11224
 29986  00056A                     i1l11250:
 29987                           
 29988                           ; BSR set to: 0
 29989                           ;main.c: 198: else if ( 1 == ledFunctionality ) {
 29990  00056A  0441               	decf	_ledFunctionality,w,c	;volatile
 29991  00056C  A4D8               	btfss	status,2,c
 29992  00056E  D001               	goto	i1u1340_21
 29993  000570  D001               	goto	i1u1340_20
 29994  000572                     i1u1340_21:
 29995  000572  D004               	goto	i1l431
 29996  000574                     i1u1340_20:
 29997  000574                     
 29998                           ; BSR set to: 0
 29999                           ;main.c: 199: LATC1 = 1;
 30000  000574  828B               	bsf	3979,1,c	;volatile
 30001                           
 30002                           ;main.c: 200: status_led_cnt = 0;
 30003  000576  6A2A               	clrf	_status_led_cnt,c	;volatile
 30004  000578  6A2B               	clrf	_status_led_cnt+1,c	;volatile
 30005                           
 30006                           ;main.c: 201: }
 30007  00057A  D008               	goto	i1l422
 30008  00057C                     i1l431:
 30009                           
 30010                           ; BSR set to: 0
 30011                           ;main.c: 202: else if ( 0 == ledFunctionality ) {
 30012  00057C  6641               	tstfsz	_ledFunctionality,c	;volatile
 30013  00057E  D001               	goto	i1u1341_21
 30014  000580  D001               	goto	i1u1341_20
 30015  000582                     i1u1341_21:
 30016  000582  D004               	goto	i1l428
 30017  000584                     i1u1341_20:
 30018  000584                     
 30019                           ; BSR set to: 0
 30020                           ;main.c: 203: LATC1 = 0;
 30021  000584  928B               	bcf	3979,1,c	;volatile
 30022                           
 30023                           ;main.c: 204: status_led_cnt = 0;
 30024  000586  6A2A               	clrf	_status_led_cnt,c	;volatile
 30025  000588  6A2B               	clrf	_status_led_cnt+1,c	;volatile
 30026  00058A  D000               	goto	i1l422
 30027  00058C                     i1l428:
 30028  00058C                     i1l422:
 30029                           
 30030                           ; BSR set to: 0
 30031                           ;main.c: 205: }
 30032                           ;main.c: 207: INTCONbits.TMR0IF = 0;
 30033  00058C  94F2               	bcf	intcon,2,c	;volatile
 30034  00058E                     i1l419:
 30035                           
 30036                           ;main.c: 208: }
 30037                           ;main.c: 211: if ( 1 == ERRIF ) {
 30038  00058E  AAA4               	btfss	4004,5,c	;volatile
 30039  000590  D001               	goto	i1u1342_21
 30040  000592  D001               	goto	i1u1342_20
 30041  000594                     i1u1342_21:
 30042  000594  D00F               	goto	i1l11264
 30043  000596                     i1u1342_20:
 30044  000596                     
 30045                           ;main.c: 214: if ( COMSTATbits.RXBnOVFL ) {
 30046  000596  AC74               	btfss	3956,6,c	;volatile
 30047  000598  D001               	goto	i1u1343_21
 30048  00059A  D001               	goto	i1u1343_20
 30049  00059C                     i1u1343_21:
 30050  00059C  D00A               	goto	i1l11262
 30051  00059E                     i1u1343_20:
 30052  00059E                     
 30053                           ;main.c: 215: can_receiveOverruns++;
 30054  00059E  0E01               	movlw	1
 30055  0005A0  0100               	movlb	0	; () banked
 30056  0005A2  27C6               	addwf	_can_receiveOverruns& (0+255),f,b
 30057  0005A4  0E00               	movlw	0
 30058  0005A6  23C7               	addwfc	(_can_receiveOverruns+1)& (0+255),f,b
 30059  0005A8  0E00               	movlw	0
 30060  0005AA  23C8               	addwfc	(_can_receiveOverruns+2)& (0+255),f,b
 30061  0005AC  0E00               	movlw	0
 30062  0005AE  23C9               	addwfc	(_can_receiveOverruns+3)& (0+255),f,b
 30063  0005B0                     
 30064                           ; BSR set to: 0
 30065                           ;main.c: 216: COMSTATbits.RXBnOVFL = 0;
 30066  0005B0  9C74               	bcf	3956,6,c	;volatile
 30067  0005B2                     i1l11262:
 30068                           
 30069                           ;main.c: 217: }
 30070                           ;main.c: 219: ERRIF = 0;
 30071  0005B2  9AA4               	bcf	4004,5,c	;volatile
 30072  0005B4                     i1l11264:
 30073                           
 30074                           ;main.c: 220: }
 30075                           ;main.c: 227: if ( COMSTATbits.TXBO ) {
 30076  0005B4  AA74               	btfss	3956,5,c	;volatile
 30077  0005B6  D001               	goto	i1u1344_21
 30078  0005B8  D001               	goto	i1u1344_20
 30079  0005BA                     i1u1344_21:
 30080  0005BA  D003               	goto	i1l436
 30081  0005BC                     i1u1344_20:
 30082  0005BC                     
 30083                           ;main.c: 229: ledFunctionality = 6;
 30084  0005BC  0E06               	movlw	6
 30085  0005BE  6E41               	movwf	_ledFunctionality,c	;volatile
 30086                           
 30087                           ;main.c: 230: }
 30088  0005C0  D014               	goto	i1l11276
 30089  0005C2                     i1l436:
 30090                           
 30091                           ;main.c: 231: else if ( COMSTATbits.TXBP || COMSTATbits.RXBP ) {
 30092  0005C2  B874               	btfsc	3956,4,c	;volatile
 30093  0005C4  D001               	goto	i1u1345_21
 30094  0005C6  D001               	goto	i1u1345_20
 30095  0005C8                     i1u1345_21:
 30096  0005C8  D004               	goto	i1l11270
 30097  0005CA                     i1u1345_20:
 30098  0005CA  A674               	btfss	3956,3,c	;volatile
 30099  0005CC  D001               	goto	i1u1346_21
 30100  0005CE  D001               	goto	i1u1346_20
 30101  0005D0                     i1u1346_21:
 30102  0005D0  D003               	goto	i1l438
 30103  0005D2                     i1u1346_20:
 30104  0005D2                     i1l11270:
 30105                           
 30106                           ;main.c: 233: ledFunctionality = 5;
 30107  0005D2  0E05               	movlw	5
 30108  0005D4  6E41               	movwf	_ledFunctionality,c	;volatile
 30109                           
 30110                           ;main.c: 234: }
 30111  0005D6  D009               	goto	i1l11276
 30112  0005D8                     i1l438:
 30113                           
 30114                           ;main.c: 235: else if ( COMSTATbits.EWARN ) {
 30115  0005D8  A074               	btfss	3956,0,c	;volatile
 30116  0005DA  D001               	goto	i1u1347_21
 30117  0005DC  D001               	goto	i1u1347_20
 30118  0005DE                     i1u1347_21:
 30119  0005DE  D003               	goto	i1l11274
 30120  0005E0                     i1u1347_20:
 30121  0005E0                     
 30122                           ;main.c: 237: ledFunctionality = 4;
 30123  0005E0  0E04               	movlw	4
 30124  0005E2  6E41               	movwf	_ledFunctionality,c	;volatile
 30125                           
 30126                           ;main.c: 238: }
 30127  0005E4  D002               	goto	i1l11276
 30128  0005E6                     i1l11274:
 30129                           
 30130                           ;main.c: 239: else {
 30131                           ;main.c: 241: ledFunctionality = 1;
 30132  0005E6  0E01               	movlw	1
 30133  0005E8  6E41               	movwf	_ledFunctionality,c	;volatile
 30134  0005EA                     i1l11276:
 30135                           
 30136                           ;main.c: 242: }
 30137                           ;main.c: 246: if ( RXBnIF ) {
 30138  0005EA  A2A4               	btfss	4004,1,c	;volatile
 30139  0005EC  D001               	goto	i1u1348_21
 30140  0005EE  D001               	goto	i1u1348_20
 30141  0005F0                     i1u1348_21:
 30142  0005F0  D0B5               	goto	i1l456
 30143  0005F2                     i1u1348_20:
 30144  0005F2                     
 30145                           ;main.c: 248: if ( ECANReceiveMessage((unsigned long *)&id,
 30146                           ;main.c: 249: (BYTE*)&data,
 30147                           ;main.c: 250: (BYTE*)&dlc,
 30148                           ;main.c: 251: &flags) ) {
 30149  0005F2  0102               	movlb	2	; () banked
 30150  0005F4  0E02               	movlw	high _data
 30151  0005F6  6E09               	movwf	?_ECANReceiveMessage+1,c
 30152  0005F8  0E80               	movlw	low _data
 30153  0005FA  6E08               	movwf	?_ECANReceiveMessage,c
 30154  0005FC  0E3F               	movlw	low _dlc
 30155  0005FE  6E0A               	movwf	?_ECANReceiveMessage+2,c
 30156  000600  0E40               	movlw	low _flags
 30157  000602  6E0B               	movwf	?_ECANReceiveMessage+3,c
 30158  000604  0E3B               	movlw	_id& (0+255)
 30159  000606  EC0D  F01E         	call	_ECANReceiveMessage
 30160  00060A  0900               	iorlw	0
 30161  00060C  B4D8               	btfsc	status,2,c
 30162  00060E  D001               	goto	i1u1349_21
 30163  000610  D001               	goto	i1u1349_20
 30164  000612                     i1u1349_21:
 30165  000612  D0A3               	goto	i1l11312
 30166  000614                     i1u1349_20:
 30167  000614                     
 30168                           ;main.c: 254: if ( flags & ECAN_RX_OVERFLOW ) {
 30169  000614  A640               	btfss	_flags,3,c
 30170  000616  D001               	goto	i1u1350_21
 30171  000618  D001               	goto	i1u1350_20
 30172  00061A                     i1u1350_21:
 30173  00061A  D00E               	goto	i1l446
 30174  00061C                     i1u1350_20:
 30175  00061C                     
 30176                           ;main.c: 255: if ( flags & ECAN_RX_XTD_FRAME ) can_receiveOverruns++;
 30177  00061C  AA40               	btfss	_flags,5,c
 30178  00061E  D001               	goto	i1u1351_21
 30179  000620  D001               	goto	i1u1351_20
 30180  000622                     i1u1351_21:
 30181  000622  D09B               	goto	i1l11312
 30182  000624                     i1u1351_20:
 30183  000624                     i1l11284:
 30184  000624  0E01               	movlw	1
 30185  000626  0100               	movlb	0	; () banked
 30186  000628  27C6               	addwf	_can_receiveOverruns& (0+255),f,b
 30187  00062A  0E00               	movlw	0
 30188  00062C  23C7               	addwfc	(_can_receiveOverruns+1)& (0+255),f,b
 30189  00062E  0E00               	movlw	0
 30190  000630  23C8               	addwfc	(_can_receiveOverruns+2)& (0+255),f,b
 30191  000632  0E00               	movlw	0
 30192  000634  23C9               	addwfc	(_can_receiveOverruns+3)& (0+255),f,b
 30193  000636  D091               	goto	i1l11312
 30194  000638                     i1l446:
 30195                           
 30196                           ;main.c: 257: else if ( !( flags & ECAN_RX_RTR_FRAME ) &&
 30197                           ;main.c: 258: ( flags & ECAN_RX_XTD_FRAME ) ) {
 30198  000638  BC40               	btfsc	_flags,6,c
 30199  00063A  D001               	goto	i1u1352_21
 30200  00063C  D001               	goto	i1u1352_20
 30201  00063E                     i1u1352_21:
 30202  00063E  D08D               	goto	i1l11312
 30203  000640                     i1u1352_20:
 30204  000640  AA40               	btfss	_flags,5,c
 30205  000642  D001               	goto	i1u1353_21
 30206  000644  D001               	goto	i1u1353_20
 30207  000646                     i1u1353_21:
 30208  000646  D089               	goto	i1l11312
 30209  000648                     i1u1353_20:
 30210  000648                     
 30211                           ;main.c: 260: if ( ( fifo_getFree( &canInputFifo ) >= (5+dlc) ) ) {
 30212  000648  503F               	movf	_dlc,w,c
 30213  00064A  6E14               	movwf	??_Interrupt& (0+255),c
 30214  00064C  6A15               	clrf	(??_Interrupt+1)& (0+255),c
 30215  00064E  0E05               	movlw	5
 30216  000650  2614               	addwf	??_Interrupt,f,c
 30217  000652  0E00               	movlw	0
 30218  000654  2215               	addwfc	??_Interrupt+1,f,c
 30219  000656  0E33               	movlw	low _canInputFifo
 30220  000658  6E01               	movwf	?i1_fifo_getFree,c
 30221  00065A  0E00               	movlw	high _canInputFifo
 30222  00065C  6E02               	movwf	?i1_fifo_getFree+1,c
 30223  00065E  0E0F               	movlw	15
 30224  000660  6E02               	movwf	?i1_fifo_getFree+1,c
 30225  000662  0E5F               	movlw	__accesstop+-1
 30226  000664  6401               	cpfsgt	?i1_fifo_getFree,c
 30227  000666  6A02               	clrf	?i1_fifo_getFree+1,c
 30228  000668  EC0C  F02D         	call	i1_fifo_getFree	;wreg free
 30229  00066C  5014               	movf	??_Interrupt,w,c
 30230  00066E  5C01               	subwf	?i1_fifo_getFree,w,c
 30231  000670  5015               	movf	??_Interrupt+1,w,c
 30232  000672  5802               	subwfb	?i1_fifo_getFree+1,w,c
 30233  000674  A0D8               	btfss	status,0,c
 30234  000676  D001               	goto	i1u1354_21
 30235  000678  D001               	goto	i1u1354_20
 30236  00067A                     i1u1354_21:
 30237  00067A  D7D4               	goto	i1l11284
 30238  00067C                     i1u1354_20:
 30239  00067C                     
 30240                           ;main.c: 261: uint8_t fail = 0;
 30241  00067C  6A1E               	clrf	Interrupt@fail,c
 30242  00067E                     
 30243                           ;main.c: 262: if ( 4 != fifo_write( &canInputFifo, (uint8_t *)&id, 4 ) ) {
 30244  00067E  0E33               	movlw	low _canInputFifo
 30245  000680  6E01               	movwf	?_fifo_write,c
 30246  000682  0E00               	movlw	high _canInputFifo
 30247  000684  6E02               	movwf	?_fifo_write+1,c
 30248  000686  0E0F               	movlw	15
 30249  000688  6E02               	movwf	?_fifo_write+1,c
 30250  00068A  0E5F               	movlw	__accesstop+-1
 30251  00068C  6401               	cpfsgt	?_fifo_write,c
 30252  00068E  6A02               	clrf	?_fifo_write+1,c
 30253  000690  0E3B               	movlw	low _id
 30254  000692  6E03               	movwf	?_fifo_write+2,c
 30255  000694  0E00               	movlw	high _id
 30256  000696  6E04               	movwf	?_fifo_write+3,c
 30257  000698  0E0F               	movlw	15
 30258  00069A  6E04               	movwf	?_fifo_write+3,c
 30259  00069C  0E5F               	movlw	__accesstop+-1
 30260  00069E  6403               	cpfsgt	?_fifo_write+2,c
 30261  0006A0  6A04               	clrf	?_fifo_write+3,c
 30262  0006A2  0E04               	movlw	4
 30263  0006A4  6E05               	movwf	?_fifo_write+4,c
 30264  0006A6  0E00               	movlw	0
 30265  0006A8  6E06               	movwf	?_fifo_write+5,c
 30266  0006AA  0E00               	movlw	0
 30267  0006AC  6E07               	movwf	?_fifo_write+6,c
 30268  0006AE  0E00               	movlw	0
 30269  0006B0  6E08               	movwf	?_fifo_write+7,c
 30270  0006B2  EC9D  F024         	call	_fifo_write	;wreg free
 30271  0006B6  5001               	movf	?_fifo_write,w,c
 30272  0006B8  0A04               	xorlw	4
 30273  0006BA  1002               	iorwf	?_fifo_write+1,w,c
 30274  0006BC  B4D8               	btfsc	status,2,c
 30275  0006BE  D001               	goto	i1u1355_21
 30276  0006C0  D001               	goto	i1u1355_20
 30277  0006C2                     i1u1355_21:
 30278  0006C2  D002               	goto	i1l11296
 30279  0006C4                     i1u1355_20:
 30280  0006C4                     
 30281                           ;main.c: 263: fail = 1;
 30282  0006C4  0E01               	movlw	1
 30283  0006C6  6E1E               	movwf	Interrupt@fail,c
 30284  0006C8                     i1l11296:
 30285                           
 30286                           ;main.c: 264: }
 30287                           ;main.c: 265: if ( 1 != fifo_write( &canInputFifo, &dlc, 1 ) ) {
 30288  0006C8  0E33               	movlw	low _canInputFifo
 30289  0006CA  6E01               	movwf	?_fifo_write,c
 30290  0006CC  0E00               	movlw	high _canInputFifo
 30291  0006CE  6E02               	movwf	?_fifo_write+1,c
 30292  0006D0  0E0F               	movlw	15
 30293  0006D2  6E02               	movwf	?_fifo_write+1,c
 30294  0006D4  0E5F               	movlw	__accesstop+-1
 30295  0006D6  6401               	cpfsgt	?_fifo_write,c
 30296  0006D8  6A02               	clrf	?_fifo_write+1,c
 30297  0006DA  0E3F               	movlw	low _dlc
 30298  0006DC  6E03               	movwf	?_fifo_write+2,c
 30299  0006DE  0E00               	movlw	high _dlc
 30300  0006E0  6E04               	movwf	?_fifo_write+3,c
 30301  0006E2  0E0F               	movlw	15
 30302  0006E4  6E04               	movwf	?_fifo_write+3,c
 30303  0006E6  0E5F               	movlw	__accesstop+-1
 30304  0006E8  6403               	cpfsgt	?_fifo_write+2,c
 30305  0006EA  6A04               	clrf	?_fifo_write+3,c
 30306  0006EC  0E01               	movlw	1
 30307  0006EE  6E05               	movwf	?_fifo_write+4,c
 30308  0006F0  0E00               	movlw	0
 30309  0006F2  6E06               	movwf	?_fifo_write+5,c
 30310  0006F4  0E00               	movlw	0
 30311  0006F6  6E07               	movwf	?_fifo_write+6,c
 30312  0006F8  0E00               	movlw	0
 30313  0006FA  6E08               	movwf	?_fifo_write+7,c
 30314  0006FC  EC9D  F024         	call	_fifo_write	;wreg free
 30315  000700  0401               	decf	?_fifo_write,w,c
 30316  000702  1002               	iorwf	?_fifo_write+1,w,c
 30317  000704  B4D8               	btfsc	status,2,c
 30318  000706  D001               	goto	i1u1356_21
 30319  000708  D001               	goto	i1u1356_20
 30320  00070A                     i1u1356_21:
 30321  00070A  D002               	goto	i1l11300
 30322  00070C                     i1u1356_20:
 30323  00070C                     
 30324                           ;main.c: 266: fail = 1;
 30325  00070C  0E01               	movlw	1
 30326  00070E  6E1E               	movwf	Interrupt@fail,c
 30327  000710                     i1l11300:
 30328                           
 30329                           ;main.c: 267: }
 30330                           ;main.c: 268: if ( dlc != fifo_write( &canInputFifo, (uint8_t *)&data, dlc ) ) {
 30331  000710  0E33               	movlw	low _canInputFifo
 30332  000712  6E01               	movwf	?_fifo_write,c
 30333  000714  0E00               	movlw	high _canInputFifo
 30334  000716  6E02               	movwf	?_fifo_write+1,c
 30335  000718  0E0F               	movlw	15
 30336  00071A  6E02               	movwf	?_fifo_write+1,c
 30337  00071C  0E5F               	movlw	__accesstop+-1
 30338  00071E  6401               	cpfsgt	?_fifo_write,c
 30339  000720  6A02               	clrf	?_fifo_write+1,c
 30340  000722  0102               	movlb	2	; () banked
 30341  000724  0E02               	movlw	high _data
 30342  000726  6E04               	movwf	?_fifo_write+3,c
 30343  000728  0E80               	movlw	low _data
 30344  00072A  6E03               	movwf	?_fifo_write+2,c
 30345  00072C  503F               	movf	_dlc,w,c
 30346  00072E  6E05               	movwf	?_fifo_write+4,c
 30347  000730  6A06               	clrf	?_fifo_write+5,c
 30348  000732  6A07               	clrf	?_fifo_write+6,c
 30349  000734  6A08               	clrf	?_fifo_write+7,c
 30350  000736  EC9D  F024         	call	_fifo_write	;wreg free
 30351  00073A  503F               	movf	_dlc,w,c
 30352  00073C  1801               	xorwf	?_fifo_write,w,c
 30353  00073E  1002               	iorwf	?_fifo_write+1,w,c
 30354  000740  B4D8               	btfsc	status,2,c
 30355  000742  D001               	goto	i1u1357_21
 30356  000744  D001               	goto	i1u1357_20
 30357  000746                     i1u1357_21:
 30358  000746  D002               	goto	i1l11304
 30359  000748                     i1u1357_20:
 30360  000748                     
 30361                           ;main.c: 269: fail = 1;
 30362  000748  0E01               	movlw	1
 30363  00074A  6E1E               	movwf	Interrupt@fail,c
 30364  00074C                     i1l11304:
 30365                           
 30366                           ;main.c: 270: }
 30367                           ;main.c: 272: fifo_canrxcount++;
 30368  00074C  2A31               	incf	_fifo_canrxcount,f,c	;volatile
 30369  00074E                     
 30370                           ;main.c: 274: if ( fail ) {
 30371  00074E  501E               	movf	Interrupt@fail,w,c
 30372  000750  B4D8               	btfsc	status,2,c
 30373  000752  D001               	goto	i1u1358_21
 30374  000754  D001               	goto	i1u1358_20
 30375  000756                     i1u1358_21:
 30376  000756  D001               	goto	i1l11312
 30377  000758                     i1u1358_20:
 30378  000758  D765               	goto	i1l11284
 30379  00075A                     i1l11312:
 30380                           
 30381                           ;main.c: 281: }
 30382                           ;main.c: 283: }
 30383                           ;main.c: 285: }
 30384                           ;main.c: 288: RXBnIF = 0;
 30385  00075A  92A4               	bcf	4004,1,c	;volatile
 30386  00075C                     i1l456:
 30387  00075C  C01C  FFDA         	movff	??_Interrupt+8,fsr2h
 30388  000760  C01B  FFD9         	movff	??_Interrupt+7,fsr2l
 30389  000764  C01A  FFE2         	movff	??_Interrupt+6,fsr1h
 30390  000768  C019  FFE1         	movff	??_Interrupt+5,fsr1l
 30391  00076C  C018  FFE0         	movff	??_Interrupt+4,bsr
 30392  000770  C017  FFE8         	movff	??_Interrupt+3,wreg
 30393  000774  C016  FFD8         	movff	??_Interrupt+2,status
 30394  000778  0010               	retfie	
 30395  00077A                     __end_of_Interrupt:
 30396                           	opt stack 0
 30397                           tblptru	equ	0xFF8
 30398                           tblptrh	equ	0xFF7
 30399                           tblptrl	equ	0xFF6
 30400                           tablat	equ	0xFF5
 30401                           prodh	equ	0xFF4
 30402                           prodl	equ	0xFF3
 30403                           intcon	equ	0xFF2
 30404                           indf0	equ	0xFEF
 30405                           postinc0	equ	0xFEE
 30406                           fsr0h	equ	0xFEA
 30407                           fsr0l	equ	0xFE9
 30408                           wreg	equ	0xFE8
 30409                           indf1	equ	0xFE7
 30410                           postinc1	equ	0xFE6
 30411                           postdec1	equ	0xFE5
 30412                           fsr1h	equ	0xFE2
 30413                           fsr1l	equ	0xFE1
 30414                           bsr	equ	0xFE0
 30415                           indf2	equ	0xFDF
 30416                           postinc2	equ	0xFDE
 30417                           postdec2	equ	0xFDD
 30418                           plusw2	equ	0xFDB
 30419                           fsr2h	equ	0xFDA
 30420                           fsr2l	equ	0xFD9
 30421                           status	equ	0xFD8
 30422                           
 30423 ;; *************** function i1_WriteTimer0 *****************
 30424 ;; Defined at:
 30425 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 30426 ;; Parameters:    Size  Location     Type
 30427 ;;  timer0          2    0[COMRAM] unsigned int 
 30428 ;; Auto vars:     Size  Location     Type
 30429 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 30430 ;; Return value:  Size  Location     Type
 30431 ;;		None               void
 30432 ;; Registers used:
 30433 ;;		None
 30434 ;; Tracked objects:
 30435 ;;		On entry : 0/0
 30436 ;;		On exit  : 0/0
 30437 ;;		Unchanged: 0/0
 30438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30439 ;;      Params:         2       0       0       0       0       0       0
 30440 ;;      Locals:         2       0       0       0       0       0       0
 30441 ;;      Temps:          0       0       0       0       0       0       0
 30442 ;;      Totals:         4       0       0       0       0       0       0
 30443 ;;Total ram usage:        4 bytes
 30444 ;; Hardware stack levels used:    1
 30445 ;; This function calls:
 30446 ;;		Nothing
 30447 ;; This function is called by:
 30448 ;;		_Interrupt
 30449 ;; This function uses a non-reentrant model
 30450 ;;
 30451                           
 30452                           	psect	text89
 30453  006B5E                     __ptext89:
 30454                           	opt stack 0
 30455  006B5E                     i1_WriteTimer0:
 30456                           	opt stack 21
 30457                           
 30458                           ;incstack = 0
 30459                           ;incstack = 0
 30460  006B5E  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 30461  006B62  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 30462  006B66  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 30463  006B6A  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 30464  006B6E  0012               	return	
 30465  006B70                     __end_ofi1_WriteTimer0:
 30466                           	opt stack 0
 30467                           tblptru	equ	0xFF8
 30468                           tblptrh	equ	0xFF7
 30469                           tblptrl	equ	0xFF6
 30470                           tablat	equ	0xFF5
 30471                           prodh	equ	0xFF4
 30472                           prodl	equ	0xFF3
 30473                           intcon	equ	0xFF2
 30474                           indf0	equ	0xFEF
 30475                           postinc0	equ	0xFEE
 30476                           fsr0h	equ	0xFEA
 30477                           fsr0l	equ	0xFE9
 30478                           wreg	equ	0xFE8
 30479                           indf1	equ	0xFE7
 30480                           postinc1	equ	0xFE6
 30481                           postdec1	equ	0xFE5
 30482                           fsr1h	equ	0xFE2
 30483                           fsr1l	equ	0xFE1
 30484                           bsr	equ	0xFE0
 30485                           indf2	equ	0xFDF
 30486                           postinc2	equ	0xFDE
 30487                           postdec2	equ	0xFDD
 30488                           plusw2	equ	0xFDB
 30489                           fsr2h	equ	0xFDA
 30490                           fsr2l	equ	0xFD9
 30491                           status	equ	0xFD8
 30492                           
 30493 ;; *************** function i1_fifo_getFree *****************
 30494 ;; Defined at:
 30495 ;;		line 97 in file "fifo.c"
 30496 ;; Parameters:    Size  Location     Type
 30497 ;;  f               2    0[COMRAM] PTR struct .
 30498 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 30499 ;; Auto vars:     Size  Location     Type
 30500 ;;		None
 30501 ;; Return value:  Size  Location     Type
 30502 ;;                  2    0[COMRAM] unsigned short 
 30503 ;; Registers used:
 30504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30505 ;; Tracked objects:
 30506 ;;		On entry : 0/0
 30507 ;;		On exit  : 0/0
 30508 ;;		Unchanged: 0/0
 30509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30510 ;;      Params:         2       0       0       0       0       0       0
 30511 ;;      Locals:         0       0       0       0       0       0       0
 30512 ;;      Temps:          8       0       0       0       0       0       0
 30513 ;;      Totals:        10       0       0       0       0       0       0
 30514 ;;Total ram usage:       10 bytes
 30515 ;; Hardware stack levels used:    1
 30516 ;; This function calls:
 30517 ;;		Nothing
 30518 ;; This function is called by:
 30519 ;;		_Interrupt
 30520 ;; This function uses a non-reentrant model
 30521 ;;
 30522                           
 30523                           	psect	text90
 30524  005A18                     __ptext90:
 30525                           	opt stack 0
 30526  005A18                     i1_fifo_getFree:
 30527                           	opt stack 21
 30528                           
 30529                           ;fifo.c: 98: if (f->head < f->tail) {
 30530                           
 30531                           ;incstack = 0
 30532                           ;incstack = 0
 30533  005A18  EE20 F004          	lfsr	2,4
 30534  005A1C  5001               	movf	i1fifo_getFree@f,w,c
 30535  005A1E  26D9               	addwf	fsr2l,f,c
 30536  005A20  5002               	movf	i1fifo_getFree@f+1,w,c
 30537  005A22  22DA               	addwfc	fsr2h,f,c
 30538  005A24  EE10 F002          	lfsr	1,2
 30539  005A28  5001               	movf	i1fifo_getFree@f,w,c
 30540  005A2A  26E1               	addwf	fsr1l,f,c
 30541  005A2C  5002               	movf	i1fifo_getFree@f+1,w,c
 30542  005A2E  22E2               	addwfc	fsr1h,f,c
 30543  005A30  52E6               	movf	postinc1,f,c
 30544  005A32  52DE               	movf	postinc2,f,c
 30545  005A34  50DD               	movf	postdec2,w,c
 30546  005A36  5CE5               	subwf	postdec1,w,c
 30547  005A38  E102               	bnz	i1u1297_25
 30548  005A3A  50DF               	movf	indf2,w,c
 30549  005A3C  5CE7               	subwf	indf1,w,c
 30550  005A3E                     i1u1297_25:
 30551  005A3E  E213               	bc	i1l11054
 30552                           
 30553                           ;fifo.c: 99: return (f->tail - f->head);
 30554  005A40  EE20 F002          	lfsr	2,2
 30555  005A44  D834               	call	PL114	;call to abstracted procedure
 30556  005A46  EE20 F004          	lfsr	2,4
 30557  005A4A  5001               	movf	i1fifo_getFree@f,w,c
 30558  005A4C  26D9               	addwf	fsr2l,f,c
 30559  005A4E  5002               	movf	i1fifo_getFree@f+1,w,c
 30560  005A50  22DA               	addwfc	fsr2h,f,c
 30561  005A52  CFDE F005          	movff	postinc2,??i1_fifo_getFree+2
 30562  005A56  CFDD F006          	movff	postdec2,??i1_fifo_getFree+3
 30563  005A5A  5003               	movf	??i1_fifo_getFree,w,c
 30564  005A5C  5C05               	subwf	??i1_fifo_getFree+2,w,c
 30565  005A5E  6E01               	movwf	?i1_fifo_getFree,c
 30566  005A60  5004               	movf	??i1_fifo_getFree+1,w,c
 30567  005A62  5806               	subwfb	??i1_fifo_getFree+3,w,c
 30568  005A64  D022               	goto	L60
 30569  005A66                     i1l11054:
 30570                           
 30571                           ;fifo.c: 101: else {
 30572                           ;fifo.c: 102: return (f->size + (f->tail - f->head));
 30573  005A66  EE20 F004          	lfsr	2,4
 30574  005A6A  D821               	call	PL114	;call to abstracted procedure
 30575  005A6C  EE20 F002          	lfsr	2,2
 30576  005A70  5001               	movf	i1fifo_getFree@f,w,c
 30577  005A72  26D9               	addwf	fsr2l,f,c
 30578  005A74  5002               	movf	i1fifo_getFree@f+1,w,c
 30579  005A76  22DA               	addwfc	fsr2h,f,c
 30580  005A78  CFDE F005          	movff	postinc2,??i1_fifo_getFree+2
 30581  005A7C  CFDD F006          	movff	postdec2,??i1_fifo_getFree+3
 30582  005A80  EE20 F006          	lfsr	2,6
 30583  005A84  5001               	movf	i1fifo_getFree@f,w,c
 30584  005A86  26D9               	addwf	fsr2l,f,c
 30585  005A88  5002               	movf	i1fifo_getFree@f+1,w,c
 30586  005A8A  22DA               	addwfc	fsr2h,f,c
 30587  005A8C  CFDE F007          	movff	postinc2,??i1_fifo_getFree+4
 30588  005A90  CFDD F008          	movff	postdec2,??i1_fifo_getFree+5
 30589  005A94  5005               	movf	??i1_fifo_getFree+2,w,c
 30590  005A96  5C07               	subwf	??i1_fifo_getFree+4,w,c
 30591  005A98  6E09               	movwf	(??i1_fifo_getFree+6)& (0+255),c
 30592  005A9A  5006               	movf	??i1_fifo_getFree+3,w,c
 30593  005A9C  5808               	subwfb	??i1_fifo_getFree+5,w,c
 30594  005A9E  6E0A               	movwf	(??i1_fifo_getFree+7)& (0+255),c
 30595  005AA0  5003               	movf	??i1_fifo_getFree,w,c
 30596  005AA2  2409               	addwf	??i1_fifo_getFree+6,w,c
 30597  005AA4  6E01               	movwf	?i1_fifo_getFree,c
 30598  005AA6  5004               	movf	??i1_fifo_getFree+1,w,c
 30599  005AA8  200A               	addwfc	??i1_fifo_getFree+7,w,c
 30600  005AAA                     L60:
 30601  005AAA  6E02               	movwf	?i1_fifo_getFree+1,c
 30602  005AAC  0012               	return	
 30603  005AAE                     __end_ofi1_fifo_getFree:
 30604                           	opt stack 0
 30605  005AAE                     PL114:
 30606                           	opt stack 21
 30607  005AAE  5001               	movf	i1fifo_getFree@f,w,c
 30608  005AB0  26D9               	addwf	fsr2l,f,c
 30609  005AB2  5002               	movf	i1fifo_getFree@f+1,w,c
 30610  005AB4  22DA               	addwfc	fsr2h,f,c
 30611  005AB6  CFDE F003          	movff	postinc2,??i1_fifo_getFree
 30612  005ABA  CFDD F004          	movff	postdec2,??i1_fifo_getFree+1
 30613  005ABE  0012               	return	
 30614  005AC0                     __end_ofPL114:
 30615                           	opt stack 0
 30616                           tblptru	equ	0xFF8
 30617                           tblptrh	equ	0xFF7
 30618                           tblptrl	equ	0xFF6
 30619                           tablat	equ	0xFF5
 30620                           prodh	equ	0xFF4
 30621                           prodl	equ	0xFF3
 30622                           intcon	equ	0xFF2
 30623                           indf0	equ	0xFEF
 30624                           postinc0	equ	0xFEE
 30625                           fsr0h	equ	0xFEA
 30626                           fsr0l	equ	0xFE9
 30627                           wreg	equ	0xFE8
 30628                           indf1	equ	0xFE7
 30629                           postinc1	equ	0xFE6
 30630                           postdec1	equ	0xFE5
 30631                           fsr1h	equ	0xFE2
 30632                           fsr1l	equ	0xFE1
 30633                           bsr	equ	0xFE0
 30634                           indf2	equ	0xFDF
 30635                           postinc2	equ	0xFDE
 30636                           postdec2	equ	0xFDD
 30637                           plusw2	equ	0xFDB
 30638                           fsr2h	equ	0xFDA
 30639                           fsr2l	equ	0xFD9
 30640                           status	equ	0xFD8
 30641                           
 30642 ;; *************** function _ECANReceiveMessage *****************
 30643 ;; Defined at:
 30644 ;;		line 803 in file "ECAN.c"
 30645 ;; Parameters:    Size  Location     Type
 30646 ;;  id              1    wreg     PTR unsigned long 
 30647 ;;		 -> id(4), 
 30648 ;;  data            2    7[COMRAM] PTR unsigned char 
 30649 ;;		 -> data(8), 
 30650 ;;  dataLen         1    9[COMRAM] PTR unsigned char 
 30651 ;;		 -> dlc(1), 
 30652 ;;  msgFlags        1   10[COMRAM] PTR enum E16324
 30653 ;;		 -> flags(1), 
 30654 ;; Auto vars:     Size  Location     Type
 30655 ;;  id              1   13[COMRAM] PTR unsigned long 
 30656 ;;		 -> id(4), 
 30657 ;;  ptr             2   17[COMRAM] PTR unsigned char 
 30658 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30659 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30660 ;;  savedPtr        2   11[COMRAM] PTR unsigned char 
 30661 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30662 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30663 ;;  temp            1   16[COMRAM] struct .
 30664 ;;  mode            1   15[COMRAM] unsigned char 
 30665 ;;  i               1   14[COMRAM] unsigned char 
 30666 ;; Return value:  Size  Location     Type
 30667 ;;                  1    wreg      enum E15660
 30668 ;; Registers used:
 30669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30670 ;; Tracked objects:
 30671 ;;		On entry : F/2
 30672 ;;		On exit  : 0/0
 30673 ;;		Unchanged: 0/0
 30674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30675 ;;      Params:         4       0       0       0       0       0       0
 30676 ;;      Locals:         8       0       0       0       0       0       0
 30677 ;;      Temps:          0       0       0       0       0       0       0
 30678 ;;      Totals:        12       0       0       0       0       0       0
 30679 ;;Total ram usage:       12 bytes
 30680 ;; Hardware stack levels used:    1
 30681 ;; Hardware stack levels required when called:    1
 30682 ;; This function calls:
 30683 ;;		__ECANPointBuffer
 30684 ;;		__RegsToCANID
 30685 ;; This function is called by:
 30686 ;;		_Interrupt
 30687 ;; This function uses a non-reentrant model
 30688 ;;
 30689                           
 30690                           	psect	text91
 30691  003C1A                     __ptext91:
 30692                           	opt stack 0
 30693  003C1A                     _ECANReceiveMessage:
 30694                           	opt stack 20
 30695                           
 30696                           ;incstack = 0
 30697                           ;incstack = 0
 30698                           ;ECANReceiveMessage@id stored from wreg
 30699  003C1A  CFE8 F00E          	movff	wreg,ECANReceiveMessage@id
 30700                           
 30701                           ; BSR set to: 2
 30702                           ;ECAN.c: 805: BYTE mode;
 30703                           ;ECAN.c: 808: BYTE *ptr, *savedPtr;
 30704                           ;ECAN.c: 809: char i;
 30705                           ;ECAN.c: 810: BYTE_VAL temp;
 30706                           ;ECAN.c: 812: _ECANRxFilterHitInfo.Val = 0;
 30707  003C1E  6A2F               	clrf	__ECANRxFilterHitInfo,c
 30708                           
 30709                           ; BSR set to: 2
 30710                           ;ECAN.c: 815: mode = ECANCON&0xC0;
 30711  003C20  5077               	movf	3959,w,c	;volatile
 30712  003C22  0BC0               	andlw	192
 30713  003C24  6E10               	movwf	ECANReceiveMessage@mode,c
 30714                           
 30715                           ; BSR set to: 2
 30716                           ;ECAN.c: 816: if ( mode == 0x00 )
 30717  003C26  6610               	tstfsz	ECANReceiveMessage@mode,c
 30718  003C28  D032               	goto	i1l11098
 30719                           
 30720                           ; BSR set to: 2
 30721                           ;ECAN.c: 822: {
 30722                           ;ECAN.c: 824: if ( RXB0FUL )
 30723  003C2A  AE60               	btfss	3936,7,c	;volatile
 30724  003C2C  D012               	goto	i1l1629
 30725                           
 30726                           ; BSR set to: 2
 30727                           ;ECAN.c: 825: {
 30728                           ;ECAN.c: 827: RXB0IF = 0;
 30729  003C2E  90A4               	bcf	4004,0,c	;volatile
 30730                           
 30731                           ;ECAN.c: 830: if ( RXB0OVFL )
 30732  003C30  AE74               	btfss	3956,7,c	;volatile
 30733  003C32  D006               	goto	i1l11074
 30734                           
 30735                           ; BSR set to: 2
 30736                           ;ECAN.c: 831: {
 30737                           ;ECAN.c: 832: *msgFlags |= ECAN_RX_OVERFLOW;
 30738  003C34  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30739  003C36  6ED9               	movwf	fsr2l,c
 30740  003C38  6ADA               	clrf	fsr2h,c
 30741  003C3A  0E00               	movlw	0
 30742  003C3C  86DB               	bsf	plusw2,3,c
 30743                           
 30744                           ; BSR set to: 2
 30745                           ;ECAN.c: 833: RXB0OVFL = 0;
 30746  003C3E  9E74               	bcf	3956,7,c	;volatile
 30747  003C40                     i1l11074:
 30748                           
 30749                           ; BSR set to: 2
 30750                           ;ECAN.c: 834: }
 30751                           ;ECAN.c: 836: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
 30752  003C40  A060               	btfss	3936,0,c	;volatile
 30753  003C42  D002               	bra	i1u1301_25
 30754  003C44  802F               	bsf	__ECANRxFilterHitInfo,0,c
 30755  003C46  D001               	bra	i1u1301_27
 30756  003C48                     i1u1301_25:
 30757  003C48  902F               	bcf	__ECANRxFilterHitInfo,0,c
 30758  003C4A                     i1u1301_27:
 30759                           
 30760                           ;ECAN.c: 838: ptr = (BYTE*)&RXB0CON;
 30761  003C4A  0E0F               	movlw	15	;volatile
 30762  003C4C  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30763  003C4E  0E60               	movlw	96	;volatile
 30764  003C50  D01A               	goto	L61
 30765  003C52                     i1l1629:
 30766                           
 30767                           ; BSR set to: 2
 30768                           ;ECAN.c: 841: else if ( RXB1CONbits.RXFUL )
 30769  003C52  010F               	movlb	15	; () banked
 30770  003C54  AF50               	btfss	80,7,b	;volatile
 30771  003C56  D019               	goto	i1l11092
 30772                           
 30773                           ; BSR set to: 15
 30774                           ;ECAN.c: 842: {
 30775                           ;ECAN.c: 844: RXB1IF = 0;
 30776  003C58  92A4               	bcf	4004,1,c	;volatile
 30777                           
 30778                           ;ECAN.c: 847: if ( RXB1OVFL )
 30779  003C5A  AC74               	btfss	3956,6,c	;volatile
 30780  003C5C  D006               	goto	i1l11084
 30781                           
 30782                           ; BSR set to: 15
 30783                           ;ECAN.c: 848: {
 30784                           ;ECAN.c: 849: *msgFlags |= ECAN_RX_OVERFLOW;
 30785  003C5E  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30786  003C60  6ED9               	movwf	fsr2l,c
 30787  003C62  6ADA               	clrf	fsr2h,c
 30788  003C64  0E00               	movlw	0
 30789  003C66  86DB               	bsf	plusw2,3,c
 30790                           
 30791                           ; BSR set to: 15
 30792                           ;ECAN.c: 850: RXB1OVFL = 0;
 30793  003C68  9C74               	bcf	3956,6,c	;volatile
 30794  003C6A                     i1l11084:
 30795                           
 30796                           ; BSR set to: 15
 30797                           ;ECAN.c: 851: }
 30798                           ;ECAN.c: 853: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
 30799  003C6A  5150               	movf	80,w,b	;volatile
 30800  003C6C  0B07               	andlw	7
 30801  003C6E  6E2F               	movwf	__ECANRxFilterHitInfo,c
 30802                           
 30803                           ; BSR set to: 15
 30804                           ;ECAN.c: 855: if ( _ECANRxFilterHitInfo.Val < 0x02 )
 30805  003C70  0E02               	movlw	2
 30806  003C72  602F               	cpfslt	__ECANRxFilterHitInfo,c
 30807  003C74  D005               	goto	i1l11090
 30808                           
 30809                           ; BSR set to: 15
 30810                           ;ECAN.c: 856: *msgFlags |= ECAN_RX_DBL_BUFFERED;
 30811  003C76  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30812  003C78  6ED9               	movwf	fsr2l,c
 30813  003C7A  6ADA               	clrf	fsr2h,c
 30814  003C7C  0E00               	movlw	0
 30815  003C7E  8EDB               	bsf	plusw2,7,c
 30816  003C80                     i1l11090:
 30817                           
 30818                           ; BSR set to: 15
 30819                           ;ECAN.c: 859: ptr = (BYTE*)&RXB1CON;
 30820  003C80  0E0F               	movlw	15	;volatile
 30821  003C82  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30822  003C84  0E50               	movlw	80	;volatile
 30823  003C86                     L61:
 30824  003C86  6E12               	movwf	ECANReceiveMessage@ptr,c
 30825                           
 30826                           ;ECAN.c: 860: }
 30827  003C88  D065               	goto	i1l11152
 30828  003C8A                     i1l11092:
 30829                           
 30830                           ;ECAN.c: 861: else
 30831                           ;ECAN.c: 862: return FALSE;
 30832  003C8A  0E00               	movlw	0
 30833  003C8C  D0C4               	goto	i1l1636
 30834  003C8E                     i1l11098:
 30835                           
 30836                           ; BSR set to: 2
 30837                           ;ECAN.c: 869: else if ( mode == 0x40 )
 30838  003C8E  5010               	movf	ECANReceiveMessage@mode,w,c
 30839  003C90  0A40               	xorlw	64
 30840  003C92  E146               	bnz	i1l1639
 30841                           
 30842                           ; BSR set to: 2
 30843                           ;ECAN.c: 875: {
 30844                           ;ECAN.c: 876: if ( RXB0FUL )
 30845  003C94  AE60               	btfss	3936,7,c	;volatile
 30846  003C96  D004               	goto	i1l1640
 30847                           
 30848                           ; BSR set to: 2
 30849                           ;ECAN.c: 877: ptr = (BYTE*)&RXB0CON;
 30850  003C98  0E0F               	movlw	15	;volatile
 30851  003C9A  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30852  003C9C  0E60               	movlw	96	;volatile
 30853  003C9E  D03E               	goto	L68
 30854  003CA0                     i1l1640:
 30855                           
 30856                           ; BSR set to: 2
 30857                           ;ECAN.c: 879: else if (RXB1CONbits.RXFUL)
 30858  003CA0  010F               	movlb	15	; () banked
 30859  003CA2  AF50               	btfss	80,7,b	;volatile
 30860  003CA4  D004               	goto	i1l1642
 30861                           
 30862                           ; BSR set to: 15
 30863                           ;ECAN.c: 880: ptr = (BYTE*)&RXB1CON;
 30864  003CA6  0E0F               	movlw	15	;volatile
 30865  003CA8  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30866  003CAA  0E50               	movlw	80	;volatile
 30867  003CAC  D037               	goto	L68
 30868  003CAE                     i1l1642:
 30869                           
 30870                           ; BSR set to: 15
 30871                           ;ECAN.c: 882: else if ( (B0TXEN==0) && B0RXFUL )
 30872  003CAE  010D               	movlb	13
 30873  003CB0  B5F8               	btfsc	248,2,b	;volatile
 30874  003CB2  D007               	goto	i1l1644
 30875  003CB4  010E               	movlb	14
 30876  003CB6  AF20               	btfss	32,7,b	;volatile
 30877  003CB8  D004               	goto	i1l1644
 30878                           
 30879                           ;ECAN.c: 883: ptr = (BYTE*)&B0CON;
 30880  003CBA  0E0E               	movlw	14	;volatile
 30881  003CBC  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30882  003CBE  0E20               	movlw	32	;volatile
 30883  003CC0  D02D               	goto	L68
 30884  003CC2                     i1l1644:
 30885                           
 30886                           ;ECAN.c: 885: else if ( (B1TXEN==0) && B1RXFUL )
 30887  003CC2  010D               	movlb	13
 30888  003CC4  B7F8               	btfsc	248,3,b	;volatile
 30889  003CC6  D007               	goto	i1l1646
 30890  003CC8  010E               	movlb	14
 30891  003CCA  AF30               	btfss	48,7,b	;volatile
 30892  003CCC  D004               	goto	i1l1646
 30893                           
 30894                           ;ECAN.c: 886: ptr = (BYTE*)&B1CON;
 30895  003CCE  0E0E               	movlw	14	;volatile
 30896  003CD0  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30897  003CD2  0E30               	movlw	48	;volatile
 30898  003CD4  D023               	goto	L68
 30899  003CD6                     i1l1646:
 30900                           
 30901                           ;ECAN.c: 888: else if ( (B2TXEN==0) && B2RXFUL )
 30902  003CD6  010D               	movlb	13
 30903  003CD8  B9F8               	btfsc	248,4,b	;volatile
 30904  003CDA  D007               	goto	i1l1648
 30905  003CDC  010E               	movlb	14
 30906  003CDE  AF40               	btfss	64,7,b	;volatile
 30907  003CE0  D004               	goto	i1l1648
 30908                           
 30909                           ;ECAN.c: 889: ptr = (BYTE*)&B2CON;
 30910  003CE2  0E0E               	movlw	14	;volatile
 30911  003CE4  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30912  003CE6  0E40               	movlw	64	;volatile
 30913  003CE8  D019               	goto	L68
 30914  003CEA                     i1l1648:
 30915                           
 30916                           ;ECAN.c: 891: else if ( (B3TXEN==0) && B3RXFUL )
 30917  003CEA  010D               	movlb	13
 30918  003CEC  BBF8               	btfsc	248,5,b	;volatile
 30919  003CEE  D005               	goto	i1l1650
 30920  003CF0  010E               	movlb	14
 30921  003CF2  AF50               	btfss	80,7,b	;volatile
 30922  003CF4  D002               	goto	i1l1650
 30923                           
 30924                           ;ECAN.c: 892: ptr = (BYTE*)&B3CON;
 30925  003CF6  0E0E               	movlw	14	;volatile
 30926  003CF8  D7D7               	goto	L69
 30927  003CFA                     i1l1650:
 30928                           
 30929                           ;ECAN.c: 894: else if ( (B4TXEN==0) && B4RXFUL )
 30930  003CFA  010D               	movlb	13
 30931  003CFC  BDF8               	btfsc	248,6,b	;volatile
 30932  003CFE  D005               	goto	i1l1652
 30933  003D00  010E               	movlb	14
 30934  003D02  AF60               	btfss	96,7,b	;volatile
 30935  003D04  D002               	goto	i1l1652
 30936                           
 30937                           ;ECAN.c: 895: ptr = (BYTE*)&B4CON;
 30938  003D06  0E0E               	movlw	14	;volatile
 30939  003D08  D7C8               	goto	L70
 30940  003D0A                     i1l1652:
 30941                           
 30942                           ;ECAN.c: 897: else if ( (B5TXEN==0) && B5RXFUL )
 30943  003D0A  010D               	movlb	13
 30944  003D0C  BFF8               	btfsc	248,7,b	;volatile
 30945  003D0E  D7BD               	goto	i1l11092
 30946  003D10  010E               	movlb	14
 30947  003D12  AF70               	btfss	112,7,b	;volatile
 30948  003D14  D7BA               	goto	i1l11092
 30949                           
 30950                           ;ECAN.c: 898: ptr = (BYTE*)&B5CON;
 30951  003D16  0E0E               	movlw	14	;volatile
 30952  003D18  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30953  003D1A  0E70               	movlw	112	;volatile
 30954  003D1C                     L68:
 30955  003D1C  6E12               	movwf	ECANReceiveMessage@ptr,c
 30956  003D1E  D00A               	goto	i1l11142
 30957  003D20                     i1l1639:
 30958                           
 30959                           ; BSR set to: 2
 30960                           ;ECAN.c: 910: else
 30961                           ;ECAN.c: 915: {
 30962                           ;ECAN.c: 916: if ( FIFOEMPTY == 1 )
 30963  003D20  AE74               	btfss	3956,7,c	;volatile
 30964  003D22  D7B3               	goto	i1l11092
 30965                           
 30966                           ; BSR set to: 2
 30967                           ;ECAN.c: 919: {
 30968                           ;ECAN.c: 920: ptr = (BYTE*)_ECANPointBuffer(CANCON&0x07);
 30969  003D24  506F               	movf	3951,w,c	;volatile
 30970  003D26  0B07               	andlw	7
 30971  003D28  ECB0  F030         	call	__ECANPointBuffer
 30972  003D2C  C001  F012         	movff	?__ECANPointBuffer,ECANReceiveMessage@ptr
 30973  003D30  C002  F013         	movff	?__ECANPointBuffer+1,ECANReceiveMessage@ptr+1
 30974  003D34                     i1l11142:
 30975                           
 30976                           ;ECAN.c: 932: _ECANRxFilterHitInfo.Val = *ptr & 0x1f;
 30977  003D34  C012  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 30978  003D38  C013  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 30979  003D3C  50DF               	movf	indf2,w,c
 30980  003D3E  0B1F               	andlw	31
 30981  003D40  6E2F               	movwf	__ECANRxFilterHitInfo,c
 30982                           
 30983                           ;ECAN.c: 934: RXB1IF = 0;
 30984  003D42  92A4               	bcf	4004,1,c	;volatile
 30985                           
 30986                           ;ECAN.c: 936: if ( RXB1OVFL )
 30987  003D44  AC74               	btfss	3956,6,c	;volatile
 30988  003D46  D006               	goto	i1l11152
 30989                           
 30990                           ;ECAN.c: 937: {
 30991                           ;ECAN.c: 938: *msgFlags |= ECAN_RX_OVERFLOW;
 30992  003D48  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30993  003D4A  6ED9               	movwf	fsr2l,c
 30994  003D4C  6ADA               	clrf	fsr2h,c
 30995  003D4E  0E00               	movlw	0
 30996  003D50  86DB               	bsf	plusw2,3,c
 30997                           
 30998                           ;ECAN.c: 939: RXB1OVFL = 0;
 30999  003D52  9C74               	bcf	3956,6,c	;volatile
 31000  003D54                     i1l11152:
 31001                           
 31002                           ;ECAN.c: 944: savedPtr = ptr;
 31003  003D54  C012  F00C         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
 31004  003D58  C013  F00D         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
 31005                           
 31006                           ;ECAN.c: 945: *msgFlags = 0;
 31007  003D5C  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 31008  003D5E  6ED9               	movwf	fsr2l,c
 31009  003D60  6ADA               	clrf	fsr2h,c
 31010  003D62  6ADF               	clrf	indf2,c
 31011                           
 31012                           ;ECAN.c: 948: temp.Val = *(ptr+5);
 31013  003D64  EE20 F005          	lfsr	2,5
 31014  003D68  D857               	call	PL140	;call to abstracted procedure
 31015                           
 31016                           ;ECAN.c: 949: *dataLen = temp.Val & 0b00001111;
 31017  003D6A  500A               	movf	ECANReceiveMessage@dataLen,w,c
 31018  003D6C  6ED9               	movwf	fsr2l,c
 31019  003D6E  6ADA               	clrf	fsr2h,c
 31020  003D70  5011               	movf	ECANReceiveMessage@temp,w,c
 31021  003D72  0B0F               	andlw	15
 31022  003D74  6EDF               	movwf	indf2,c
 31023                           
 31024                           ;ECAN.c: 952: if ( temp.bits.b6 )
 31025  003D76  AC11               	btfss	ECANReceiveMessage@temp,6,c
 31026  003D78  D005               	goto	i1l1660
 31027                           
 31028                           ;ECAN.c: 953: *msgFlags |= ECAN_RX_RTR_FRAME;
 31029  003D7A  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 31030  003D7C  6ED9               	movwf	fsr2l,c
 31031  003D7E  6ADA               	clrf	fsr2h,c
 31032  003D80  0E00               	movlw	0
 31033  003D82  8CDB               	bsf	plusw2,6,c
 31034  003D84                     i1l1660:
 31035                           
 31036                           ;ECAN.c: 956: temp.Val = *(ptr+2);
 31037  003D84  EE20 F002          	lfsr	2,2
 31038  003D88  D847               	call	PL140	;call to abstracted procedure
 31039                           
 31040                           ;ECAN.c: 957: if ( temp.bits.b3 )
 31041  003D8A  A611               	btfss	ECANReceiveMessage@temp,3,c
 31042  003D8C  D008               	goto	i1l1661
 31043                           
 31044                           ;ECAN.c: 958: {
 31045                           ;ECAN.c: 959: *msgFlags |= ECAN_RX_XTD_FRAME;
 31046  003D8E  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 31047  003D90  6ED9               	movwf	fsr2l,c
 31048  003D92  6ADA               	clrf	fsr2h,c
 31049  003D94  0E00               	movlw	0
 31050  003D96  8ADB               	bsf	plusw2,5,c
 31051                           
 31052                           ;ECAN.c: 960: temp.Val = 1;
 31053  003D98  0E01               	movlw	1
 31054  003D9A  6E11               	movwf	ECANReceiveMessage@temp,c
 31055                           
 31056                           ;ECAN.c: 961: }
 31057  003D9C  D001               	goto	i1l11170
 31058  003D9E                     i1l1661:
 31059                           
 31060                           ;ECAN.c: 962: else
 31061                           ;ECAN.c: 963: temp.Val = 0;
 31062  003D9E  6A11               	clrf	ECANReceiveMessage@temp,c
 31063  003DA0                     i1l11170:
 31064                           
 31065                           ;ECAN.c: 965: _RegsToCANID(ptr+1, id, temp.Val);
 31066  003DA0  2812               	incf	ECANReceiveMessage@ptr,w,c
 31067  003DA2  6E01               	movwf	?__RegsToCANID,c
 31068  003DA4  0E00               	movlw	0
 31069  003DA6  2013               	addwfc	ECANReceiveMessage@ptr+1,w,c
 31070  003DA8  6E02               	movwf	?__RegsToCANID+1,c
 31071  003DAA  C00E  F003         	movff	ECANReceiveMessage@id,?__RegsToCANID+2
 31072  003DAE  C011  F004         	movff	ECANReceiveMessage@temp,?__RegsToCANID+3
 31073  003DB2  EC33  F025         	call	__RegsToCANID	;wreg free
 31074                           
 31075                           ;ECAN.c: 968: ptr += 6;
 31076  003DB6  0E06               	movlw	6
 31077  003DB8  2612               	addwf	ECANReceiveMessage@ptr,f,c
 31078  003DBA  0E00               	movlw	0
 31079  003DBC  2213               	addwfc	ECANReceiveMessage@ptr+1,f,c
 31080                           
 31081                           ;ECAN.c: 969: temp.Val = *dataLen;
 31082  003DBE  500A               	movf	ECANReceiveMessage@dataLen,w,c
 31083  003DC0  6ED9               	movwf	fsr2l,c
 31084  003DC2  6ADA               	clrf	fsr2h,c
 31085  003DC4  50DF               	movf	indf2,w,c
 31086  003DC6  6E11               	movwf	ECANReceiveMessage@temp,c
 31087                           
 31088                           ;ECAN.c: 970: for ( i = 0; i < temp.Val; i++ )
 31089  003DC8  6A0F               	clrf	ECANReceiveMessage@i,c
 31090  003DCA  D00F               	goto	i1l11186
 31091  003DCC                     i1l11178:
 31092                           
 31093                           ;ECAN.c: 971: *data++ = *ptr++;
 31094  003DCC  C012  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 31095  003DD0  C013  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 31096  003DD4  C008  FFE1         	movff	ECANReceiveMessage@data,fsr1l
 31097  003DD8  C009  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
 31098  003DDC  CFDF FFE7          	movff	indf2,indf1
 31099  003DE0  4A12               	infsnz	ECANReceiveMessage@ptr,f,c
 31100  003DE2  2A13               	incf	ECANReceiveMessage@ptr+1,f,c
 31101  003DE4  4A08               	infsnz	ECANReceiveMessage@data,f,c
 31102  003DE6  2A09               	incf	ECANReceiveMessage@data+1,f,c
 31103  003DE8  2A0F               	incf	ECANReceiveMessage@i,f,c
 31104  003DEA                     i1l11186:
 31105  003DEA  5011               	movf	ECANReceiveMessage@temp,w,c
 31106  003DEC  5C0F               	subwf	ECANReceiveMessage@i,w,c
 31107  003DEE  E3EE               	bnc	i1l11178
 31108                           
 31109                           ;ECAN.c: 974: if ( IRXIF )
 31110  003DF0  AEA4               	btfss	4004,7,c	;volatile
 31111  003DF2  D006               	goto	i1l11192
 31112                           
 31113                           ;ECAN.c: 975: {
 31114                           ;ECAN.c: 976: *msgFlags |= ECAN_RX_INVALID_MSG;
 31115  003DF4  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 31116  003DF6  6ED9               	movwf	fsr2l,c
 31117  003DF8  6ADA               	clrf	fsr2h,c
 31118  003DFA  0E00               	movlw	0
 31119  003DFC  88DB               	bsf	plusw2,4,c
 31120                           
 31121                           ;ECAN.c: 977: IRXIF = 0;
 31122  003DFE  9EA4               	bcf	4004,7,c	;volatile
 31123  003E00                     i1l11192:
 31124                           
 31125                           ;ECAN.c: 978: }
 31126                           ;ECAN.c: 981: *savedPtr &= 0x7f;
 31127  003E00  C00C  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
 31128  003E04  C00D  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
 31129  003E08  0E7F               	movlw	127
 31130  003E0A  16DF               	andwf	indf2,f,c
 31131                           
 31132                           ;ECAN.c: 985: if ( mode == 0x80 )
 31133  003E0C  5010               	movf	ECANReceiveMessage@mode,w,c
 31134  003E0E  0A80               	xorlw	128
 31135  003E10  B4D8               	btfsc	status,2,c
 31136                           
 31137                           ;ECAN.c: 986: FIFOEMPTY = 0;
 31138  003E12  9E74               	bcf	3956,7,c	;volatile
 31139                           
 31140                           ;ECAN.c: 992: return TRUE;
 31141  003E14  0E01               	movlw	1
 31142  003E16                     i1l1636:
 31143  003E16  0012               	return	
 31144  003E18                     __end_of_ECANReceiveMessage:
 31145                           	opt stack 0
 31146  003E18                     PL140:
 31147                           	opt stack 20
 31148  003E18  5012               	movf	ECANReceiveMessage@ptr,w,c
 31149  003E1A  26D9               	addwf	fsr2l,f,c
 31150  003E1C  5013               	movf	ECANReceiveMessage@ptr+1,w,c
 31151  003E1E  22DA               	addwfc	fsr2h,f,c
 31152  003E20  50DF               	movf	indf2,w,c
 31153  003E22  6E11               	movwf	ECANReceiveMessage@temp,c
 31154  003E24  0012               	return	
 31155  003E26                     __end_ofPL140:
 31156                           	opt stack 0
 31157                           tblptru	equ	0xFF8
 31158                           tblptrh	equ	0xFF7
 31159                           tblptrl	equ	0xFF6
 31160                           tablat	equ	0xFF5
 31161                           prodh	equ	0xFF4
 31162                           prodl	equ	0xFF3
 31163                           intcon	equ	0xFF2
 31164                           indf0	equ	0xFEF
 31165                           postinc0	equ	0xFEE
 31166                           fsr0h	equ	0xFEA
 31167                           fsr0l	equ	0xFE9
 31168                           wreg	equ	0xFE8
 31169                           indf1	equ	0xFE7
 31170                           postinc1	equ	0xFE6
 31171                           postdec1	equ	0xFE5
 31172                           fsr1h	equ	0xFE2
 31173                           fsr1l	equ	0xFE1
 31174                           bsr	equ	0xFE0
 31175                           indf2	equ	0xFDF
 31176                           postinc2	equ	0xFDE
 31177                           postdec2	equ	0xFDD
 31178                           plusw2	equ	0xFDB
 31179                           fsr2h	equ	0xFDA
 31180                           fsr2l	equ	0xFD9
 31181                           status	equ	0xFD8
 31182                           
 31183 ;; *************** function __RegsToCANID *****************
 31184 ;; Defined at:
 31185 ;;		line 1158 in file "ECAN.c"
 31186 ;; Parameters:    Size  Location     Type
 31187 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 31188 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 31189 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 31190 ;;  val             1    2[COMRAM] PTR unsigned long 
 31191 ;;		 -> id(4), 
 31192 ;;  type            1    3[COMRAM] unsigned char 
 31193 ;; Auto vars:     Size  Location     Type
 31194 ;;  Value           1    6[COMRAM] PTR struct _CAN_MESSAGE_
 31195 ;;		 -> id(4), 
 31196 ;; Return value:  Size  Location     Type
 31197 ;;		None               void
 31198 ;; Registers used:
 31199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31200 ;; Tracked objects:
 31201 ;;		On entry : 0/2
 31202 ;;		On exit  : 0/0
 31203 ;;		Unchanged: 0/0
 31204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31205 ;;      Params:         4       0       0       0       0       0       0
 31206 ;;      Locals:         1       0       0       0       0       0       0
 31207 ;;      Temps:          2       0       0       0       0       0       0
 31208 ;;      Totals:         7       0       0       0       0       0       0
 31209 ;;Total ram usage:        7 bytes
 31210 ;; Hardware stack levels used:    1
 31211 ;; This function calls:
 31212 ;;		Nothing
 31213 ;; This function is called by:
 31214 ;;		_ECANReceiveMessage
 31215 ;; This function uses a non-reentrant model
 31216 ;;
 31217                           
 31218                           	psect	text92
 31219  004A66                     __ptext92:
 31220                           	opt stack 0
 31221  004A66                     __RegsToCANID:
 31222                           	opt stack 20
 31223                           
 31224                           ;ECAN.c: 1159: CAN_MESSAGE_ID *Value;
 31225                           ;ECAN.c: 1161: Value = (CAN_MESSAGE_ID*)val;
 31226                           
 31227                           ;incstack = 0
 31228                           ;incstack = 0
 31229  004A66  C003  F007         	movff	__RegsToCANID@val,__RegsToCANID@Value
 31230                           
 31231                           ;ECAN.c: 1163: if ( type == 0 )
 31232  004A6A  6604               	tstfsz	__RegsToCANID@type,c
 31233  004A6C  D02B               	goto	i1l10830
 31234                           
 31235                           ;ECAN.c: 1164: {
 31236                           ;ECAN.c: 1166: Value->BYTES.BYTE_1 = (*ptr << 3);
 31237  004A6E  5007               	movf	__RegsToCANID@Value,w,c
 31238  004A70  6ED9               	movwf	fsr2l,c
 31239  004A72  D862               	call	PL88	;call to abstracted procedure
 31240  004A74  3605               	rlcf	??__RegsToCANID,f,c
 31241  004A76  90D8               	bcf	status,0,c
 31242  004A78  3605               	rlcf	??__RegsToCANID,f,c
 31243  004A7A  90D8               	bcf	status,0,c
 31244  004A7C  3405               	rlcf	??__RegsToCANID,w,c
 31245  004A7E  6EDF               	movwf	indf2,c
 31246                           
 31247                           ;ECAN.c: 1167: Value->BYTES.BYTE_2 = *ptr >> 5;
 31248  004A80  5007               	movf	__RegsToCANID@Value,w,c
 31249  004A82  6ED9               	movwf	fsr2l,c
 31250  004A84  6ADA               	clrf	fsr2h,c
 31251  004A86  2AD9               	incf	fsr2l,f,c
 31252  004A88  6ADA               	clrf	fsr2h,c
 31253  004A8A  D873               	call	PL102	;call to abstracted procedure
 31254  004A8C                     i1u1260_25:
 31255  004A8C  90D8               	bcf	status,0,c
 31256  004A8E  3205               	rrcf	??__RegsToCANID,f,c
 31257  004A90  2E06               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 31258  004A92  D7FC               	goto	i1u1260_25
 31259  004A94  5005               	movf	??__RegsToCANID,w,c
 31260                           
 31261                           ;ECAN.c: 1168: ptr++;
 31262                           
 31263                           ;ECAN.c: 1169: Value->BYTES.BYTE_1 |= (*ptr >> 5);
 31264  004A96  D859               	call	PL90	;call to abstracted procedure
 31265  004A98  0E05               	movlw	5
 31266  004A9A  6E06               	movwf	(??__RegsToCANID+1)& (0+255),c
 31267  004A9C                     i1u1261_25:
 31268  004A9C  90D8               	bcf	status,0,c
 31269  004A9E  3205               	rrcf	??__RegsToCANID,f,c
 31270  004AA0  2E06               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 31271  004AA2  D7FC               	goto	i1u1261_25
 31272  004AA4  5007               	movf	__RegsToCANID@Value,w,c
 31273  004AA6  6ED9               	movwf	fsr2l,c
 31274  004AA8  6ADA               	clrf	fsr2h,c
 31275  004AAA  5005               	movf	??__RegsToCANID,w,c
 31276  004AAC  12DF               	iorwf	indf2,f,c
 31277                           
 31278                           ;ECAN.c: 1170: Value->BYTES.BYTE_3 = 0x00;
 31279  004AAE  D83D               	call	PL58	;call to abstracted procedure
 31280  004AB0  6ADF               	clrf	indf2,c
 31281                           
 31282                           ;ECAN.c: 1171: Value->BYTES.BYTE_4 = 0x00;
 31283  004AB2  5007               	movf	__RegsToCANID@Value,w,c
 31284  004AB4  6ED9               	movwf	fsr2l,c
 31285  004AB6  6ADA               	clrf	fsr2h,c
 31286  004AB8  0E03               	movlw	3
 31287  004ABA  26D9               	addwf	fsr2l,f,c
 31288  004ABC  6ADA               	clrf	fsr2h,c
 31289  004ABE  0E00               	movlw	0
 31290  004AC0  6EDF               	movwf	indf2,c
 31291                           
 31292                           ;ECAN.c: 1172: }
 31293  004AC2  D032               	goto	i1l1683
 31294  004AC4                     i1l10830:
 31295                           
 31296                           ;ECAN.c: 1173: else
 31297                           ;ECAN.c: 1174: {
 31298                           ;ECAN.c: 1176: Value->BYTES.BYTE_3 = (*ptr << 5);
 31299  004AC4  D832               	call	PL58	;call to abstracted procedure
 31300  004AC6  D855               	call	PL102	;call to abstracted procedure
 31301  004AC8                     i1u1262_25:
 31302  004AC8  90D8               	bcf	status,0,c
 31303  004ACA  3605               	rlcf	??__RegsToCANID,f,c
 31304  004ACC  2E06               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 31305  004ACE  D7FC               	goto	i1u1262_25
 31306  004AD0  5005               	movf	??__RegsToCANID,w,c
 31307  004AD2  6EDF               	movwf	indf2,c
 31308                           
 31309                           ;ECAN.c: 1177: Value->BYTES.BYTE_4 = (*ptr >> 3);
 31310  004AD4  5007               	movf	__RegsToCANID@Value,w,c
 31311  004AD6  6ED9               	movwf	fsr2l,c
 31312  004AD8  6ADA               	clrf	fsr2h,c
 31313  004ADA  0E03               	movlw	3
 31314  004ADC  26D9               	addwf	fsr2l,f,c
 31315  004ADE  D82C               	call	PL88	;call to abstracted procedure
 31316  004AE0  3205               	rrcf	??__RegsToCANID,f,c
 31317  004AE2  90D8               	bcf	status,0,c
 31318  004AE4  3205               	rrcf	??__RegsToCANID,f,c
 31319  004AE6  90D8               	bcf	status,0,c
 31320  004AE8  3005               	rrcf	??__RegsToCANID,w,c
 31321                           
 31322                           ;ECAN.c: 1178: ptr++;
 31323                           
 31324                           ;ECAN.c: 1179: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
 31325  004AEA  D82F               	call	PL90	;call to abstracted procedure
 31326  004AEC  0E03               	movlw	3
 31327  004AEE  1605               	andwf	??__RegsToCANID,f,c
 31328  004AF0  D81C               	call	PL58	;call to abstracted procedure
 31329  004AF2  5005               	movf	??__RegsToCANID,w,c
 31330  004AF4  12DF               	iorwf	indf2,f,c
 31331                           
 31332                           ;ECAN.c: 1181: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
 31333  004AF6  C001  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 31334  004AFA  C002  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 31335  004AFE  50DF               	movf	indf2,w,c
 31336  004B00  6E05               	movwf	??__RegsToCANID& (0+255),c
 31337  004B02  90D8               	bcf	status,0,c
 31338  004B04  3205               	rrcf	??__RegsToCANID,f,c
 31339  004B06  90D8               	bcf	status,0,c
 31340  004B08  3205               	rrcf	??__RegsToCANID,f,c
 31341  004B0A  90D8               	bcf	status,0,c
 31342  004B0C  3205               	rrcf	??__RegsToCANID,f,c
 31343  004B0E  0E1C               	movlw	28
 31344  004B10  1605               	andwf	??__RegsToCANID,f,c
 31345  004B12  D80B               	call	PL58	;call to abstracted procedure
 31346  004B14  5005               	movf	??__RegsToCANID,w,c
 31347  004B16  12DF               	iorwf	indf2,f,c
 31348                           
 31349                           ;ECAN.c: 1182: ptr++;
 31350                           
 31351                           ;ECAN.c: 1183: Value->BYTES.BYTE_2 = *ptr;
 31352  004B18  D822               	call	PL98	;call to abstracted procedure
 31353  004B1A  2AE1               	incf	fsr1l,f,c
 31354  004B1C  6AE2               	clrf	fsr1h,c
 31355  004B1E  CFDF FFE7          	movff	indf2,indf1
 31356                           
 31357                           ;ECAN.c: 1184: ptr++;
 31358                           
 31359                           ;ECAN.c: 1185: Value->BYTES.BYTE_1 = *ptr;
 31360  004B22  D81D               	call	PL98	;call to abstracted procedure
 31361  004B24  CFDF FFE7          	movff	indf2,indf1
 31362  004B28                     i1l1683:
 31363  004B28  0012               	return	
 31364  004B2A                     __end_of__RegsToCANID:
 31365                           	opt stack 0
 31366  004B2A                     PL58:
 31367                           	opt stack 20
 31368  004B2A  5007               	movf	__RegsToCANID@Value,w,c
 31369  004B2C  6ED9               	movwf	fsr2l,c
 31370  004B2E  6ADA               	clrf	fsr2h,c
 31371  004B30  0E02               	movlw	2
 31372  004B32  26D9               	addwf	fsr2l,f,c
 31373  004B34  6ADA               	clrf	fsr2h,c
 31374  004B36  0012               	return	
 31375  004B38                     __end_ofPL58:
 31376                           	opt stack 0
 31377  004B38                     PL88:
 31378                           	opt stack 20
 31379  004B38  6ADA               	clrf	fsr2h,c
 31380  004B3A  C001  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 31381  004B3E  C002  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 31382  004B42  50E7               	movf	indf1,w,c
 31383  004B44  6E05               	movwf	??__RegsToCANID& (0+255),c
 31384  004B46  90D8               	bcf	status,0,c
 31385  004B48  0012               	return	
 31386  004B4A                     __end_ofPL88:
 31387                           	opt stack 0
 31388  004B4A                     PL90:
 31389                           	opt stack 20
 31390  004B4A  6EDF               	movwf	indf2,c
 31391  004B4C  4A01               	infsnz	__RegsToCANID@ptr,f,c
 31392  004B4E  2A02               	incf	__RegsToCANID@ptr+1,f,c
 31393  004B50  C001  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 31394  004B54  C002  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 31395  004B58  50DF               	movf	indf2,w,c
 31396  004B5A  6E05               	movwf	??__RegsToCANID& (0+255),c
 31397  004B5C  0012               	return	
 31398  004B5E                     __end_ofPL90:
 31399                           	opt stack 0
 31400  004B5E                     PL98:
 31401                           	opt stack 20
 31402  004B5E  4A01               	infsnz	__RegsToCANID@ptr,f,c
 31403  004B60  2A02               	incf	__RegsToCANID@ptr+1,f,c
 31404  004B62  C001  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 31405  004B66  C002  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 31406  004B6A  5007               	movf	__RegsToCANID@Value,w,c
 31407  004B6C  6EE1               	movwf	fsr1l,c
 31408  004B6E  6AE2               	clrf	fsr1h,c
 31409  004B70  0012               	return	
 31410  004B72                     __end_ofPL98:
 31411                           	opt stack 0
 31412  004B72                     PL102:
 31413                           	opt stack 20
 31414  004B72  C001  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 31415  004B76  C002  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 31416  004B7A  50E7               	movf	indf1,w,c
 31417  004B7C  6E05               	movwf	??__RegsToCANID& (0+255),c
 31418  004B7E  0E05               	movlw	5
 31419  004B80  6E06               	movwf	(??__RegsToCANID+1)& (0+255),c
 31420  004B82  0C05               	retlw	5
 31421  004B84                     __end_ofPL102:
 31422                           	opt stack 0
 31423                           tblptru	equ	0xFF8
 31424                           tblptrh	equ	0xFF7
 31425                           tblptrl	equ	0xFF6
 31426                           tablat	equ	0xFF5
 31427                           prodh	equ	0xFF4
 31428                           prodl	equ	0xFF3
 31429                           intcon	equ	0xFF2
 31430                           indf0	equ	0xFEF
 31431                           postinc0	equ	0xFEE
 31432                           fsr0h	equ	0xFEA
 31433                           fsr0l	equ	0xFE9
 31434                           wreg	equ	0xFE8
 31435                           indf1	equ	0xFE7
 31436                           postinc1	equ	0xFE6
 31437                           postdec1	equ	0xFE5
 31438                           fsr1h	equ	0xFE2
 31439                           fsr1l	equ	0xFE1
 31440                           bsr	equ	0xFE0
 31441                           indf2	equ	0xFDF
 31442                           postinc2	equ	0xFDE
 31443                           postdec2	equ	0xFDD
 31444                           plusw2	equ	0xFDB
 31445                           fsr2h	equ	0xFDA
 31446                           fsr2l	equ	0xFD9
 31447                           status	equ	0xFD8
 31448                           
 31449 ;; *************** function __ECANPointBuffer *****************
 31450 ;; Defined at:
 31451 ;;		line 1209 in file "ECAN.c"
 31452 ;; Parameters:    Size  Location     Type
 31453 ;;  b               1    wreg     unsigned char 
 31454 ;; Auto vars:     Size  Location     Type
 31455 ;;  b               1    3[COMRAM] unsigned char 
 31456 ;;  pt              2    4[COMRAM] PTR unsigned char 
 31457 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 31458 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 31459 ;; Return value:  Size  Location     Type
 31460 ;;                  2    0[COMRAM] PTR unsigned char 
 31461 ;; Registers used:
 31462 ;;		wreg, status,2, status,0
 31463 ;; Tracked objects:
 31464 ;;		On entry : F/2
 31465 ;;		On exit  : 2/2
 31466 ;;		Unchanged: 0/0
 31467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31468 ;;      Params:         3       0       0       0       0       0       0
 31469 ;;      Locals:         3       0       0       0       0       0       0
 31470 ;;      Temps:          0       0       0       0       0       0       0
 31471 ;;      Totals:         6       0       0       0       0       0       0
 31472 ;;Total ram usage:        6 bytes
 31473 ;; Hardware stack levels used:    1
 31474 ;; This function calls:
 31475 ;;		Nothing
 31476 ;; This function is called by:
 31477 ;;		_ECANReceiveMessage
 31478 ;; This function uses a non-reentrant model
 31479 ;;
 31480                           
 31481                           	psect	text93
 31482  006160                     __ptext93:
 31483                           	opt stack 0
 31484  006160                     __ECANPointBuffer:
 31485                           	opt stack 20
 31486                           
 31487                           ;incstack = 0
 31488                           ;incstack = 0
 31489                           ;__ECANPointBuffer@b stored from wreg
 31490  006160  CFE8 F004          	movff	wreg,__ECANPointBuffer@b
 31491                           
 31492                           ; BSR set to: 2
 31493                           ;ECAN.c: 1210: BYTE* pt;
 31494                           ;ECAN.c: 1212: switch(b)
 31495  006164  D024               	goto	i1l10816
 31496  006166                     i1l10798:
 31497                           
 31498                           ; BSR set to: 2
 31499                           ;ECAN.c: 1215: pt=(BYTE*)&RXB0CON;
 31500  006166  0E0F               	movlw	15	;volatile
 31501  006168  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31502  00616A  0E60               	movlw	96	;volatile
 31503  00616C  D01E               	goto	L77
 31504  00616E                     i1l10800:
 31505                           
 31506                           ; BSR set to: 2
 31507                           ;ECAN.c: 1218: pt=(BYTE*)&RXB1CON;
 31508  00616E  010F               	movlb	15	; () banked
 31509  006170  0E0F               	movlw	15	;volatile
 31510  006172  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31511  006174  0E50               	movlw	80	;volatile
 31512  006176  D019               	goto	L77
 31513  006178                     i1l10802:
 31514                           
 31515                           ; BSR set to: 2
 31516                           ;ECAN.c: 1221: pt=(BYTE*)&B0CON;
 31517  006178  010E               	movlb	14	; () banked
 31518  00617A  0E0E               	movlw	14	;volatile
 31519  00617C  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31520  00617E  0E20               	movlw	32	;volatile
 31521  006180  D014               	goto	L77
 31522  006182                     i1l10804:
 31523                           
 31524                           ; BSR set to: 2
 31525                           ;ECAN.c: 1224: pt=(BYTE*)&B1CON;
 31526  006182  010E               	movlb	14	; () banked
 31527  006184  0E0E               	movlw	14	;volatile
 31528  006186  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31529  006188  0E30               	movlw	48	;volatile
 31530  00618A  D00F               	goto	L77
 31531  00618C                     i1l10806:
 31532                           
 31533                           ; BSR set to: 2
 31534                           ;ECAN.c: 1227: pt=(BYTE*)&B2CON;
 31535  00618C  010E               	movlb	14	; () banked
 31536  00618E  0E0E               	movlw	14	;volatile
 31537  006190  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31538  006192  0E40               	movlw	64	;volatile
 31539  006194  D00A               	goto	L77
 31540  006196                     i1l10808:
 31541                           
 31542                           ; BSR set to: 2
 31543                           ;ECAN.c: 1230: pt=(BYTE*)&B3CON;
 31544  006196  010E               	movlb	14	; () banked
 31545  006198  0E0E               	movlw	14	;volatile
 31546  00619A  D7EB               	goto	L78
 31547  00619C                     i1l10810:
 31548                           
 31549                           ; BSR set to: 2
 31550                           ;ECAN.c: 1233: pt=(BYTE*)&B4CON;
 31551  00619C  010E               	movlb	14	; () banked
 31552  00619E  0E0E               	movlw	14	;volatile
 31553  0061A0  D7E3               	goto	L79
 31554  0061A2                     i1l10812:
 31555                           
 31556                           ; BSR set to: 2
 31557                           ;ECAN.c: 1236: pt=(BYTE*)&B5CON;
 31558  0061A2  010E               	movlb	14	; () banked
 31559  0061A4  0E0E               	movlw	14	;volatile
 31560  0061A6  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31561  0061A8  0E70               	movlw	112	;volatile
 31562  0061AA                     L77:
 31563  0061AA  6E05               	movwf	__ECANPointBuffer@pt,c
 31564                           
 31565                           ;ECAN.c: 1237: break;
 31566  0061AC  D00F               	goto	i1l1688
 31567  0061AE                     i1l10816:
 31568                           
 31569                           ; BSR set to: 2
 31570  0061AE  5004               	movf	__ECANPointBuffer@b,w,c
 31571                           
 31572                           ; Switch size 1, requested type "space"
 31573                           ; Number of cases is 7, Range of values is 0 to 6
 31574                           ; switch strategies available:
 31575                           ; Name         Instructions Cycles
 31576                           ; simple_byte           22    12 (average)
 31577                           ;	Chosen strategy is simple_byte
 31578  0061B0  E0DA               	bz	i1l10798
 31579  0061B2  0A01               	xorlw	1	; case 1
 31580  0061B4  E0DC               	bz	i1l10800
 31581  0061B6  0A03               	xorlw	3	; case 2
 31582  0061B8  E0DF               	bz	i1l10802
 31583  0061BA  0A01               	xorlw	1	; case 3
 31584  0061BC  E0E2               	bz	i1l10804
 31585  0061BE  0A07               	xorlw	7	; case 4
 31586  0061C0  E0E5               	bz	i1l10806
 31587  0061C2  0A01               	xorlw	1	; case 5
 31588  0061C4  E0E8               	bz	i1l10808
 31589  0061C6  0A03               	xorlw	3	; case 6
 31590  0061C8  E0E9               	bz	i1l10810
 31591  0061CA  D7EB               	goto	i1l10812
 31592  0061CC                     i1l1688:
 31593                           
 31594                           ;ECAN.c: 1239: return (pt);
 31595  0061CC  C005  F001         	movff	__ECANPointBuffer@pt,?__ECANPointBuffer
 31596  0061D0  C006  F002         	movff	__ECANPointBuffer@pt+1,?__ECANPointBuffer+1
 31597  0061D4  0012               	return	
 31598  0061D6                     __end_of__ECANPointBuffer:
 31599                           	opt stack 0
 31600                           tblptru	equ	0xFF8
 31601                           tblptrh	equ	0xFF7
 31602                           tblptrl	equ	0xFF6
 31603                           tablat	equ	0xFF5
 31604                           prodh	equ	0xFF4
 31605                           prodl	equ	0xFF3
 31606                           intcon	equ	0xFF2
 31607                           indf0	equ	0xFEF
 31608                           postinc0	equ	0xFEE
 31609                           fsr0h	equ	0xFEA
 31610                           fsr0l	equ	0xFE9
 31611                           wreg	equ	0xFE8
 31612                           indf1	equ	0xFE7
 31613                           postinc1	equ	0xFE6
 31614                           postdec1	equ	0xFE5
 31615                           fsr1h	equ	0xFE2
 31616                           fsr1l	equ	0xFE1
 31617                           bsr	equ	0xFE0
 31618                           indf2	equ	0xFDF
 31619                           postinc2	equ	0xFDE
 31620                           postdec2	equ	0xFDD
 31621                           plusw2	equ	0xFDB
 31622                           fsr2h	equ	0xFDA
 31623                           fsr2l	equ	0xFD9
 31624                           status	equ	0xFD8
 31625                           
 31626 ;; *************** function _fifo_write *****************
 31627 ;; Defined at:
 31628 ;;		line 61 in file "fifo.c"
 31629 ;; Parameters:    Size  Location     Type
 31630 ;;  f               2    0[COMRAM] PTR struct .
 31631 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 31632 ;;  buf             2    2[COMRAM] PTR const void 
 31633 ;;		 -> dlc(1), data(8), id(4), Interrupt@c(1), 
 31634 ;;  nbytes          4    4[COMRAM] unsigned long 
 31635 ;; Auto vars:     Size  Location     Type
 31636 ;;  i               4   14[COMRAM] unsigned long 
 31637 ;;  p               2   12[COMRAM] PTR const unsigned char 
 31638 ;;		 -> dlc(1), data(8), id(4), Interrupt@c(1), 
 31639 ;; Return value:  Size  Location     Type
 31640 ;;                  2    0[COMRAM] unsigned short 
 31641 ;; Registers used:
 31642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31643 ;; Tracked objects:
 31644 ;;		On entry : 0/0
 31645 ;;		On exit  : 0/0
 31646 ;;		Unchanged: 0/0
 31647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31648 ;;      Params:         8       0       0       0       0       0       0
 31649 ;;      Locals:         6       0       0       0       0       0       0
 31650 ;;      Temps:          4       0       0       0       0       0       0
 31651 ;;      Totals:        18       0       0       0       0       0       0
 31652 ;;Total ram usage:       18 bytes
 31653 ;; Hardware stack levels used:    1
 31654 ;; This function calls:
 31655 ;;		Nothing
 31656 ;; This function is called by:
 31657 ;;		_Interrupt
 31658 ;; This function uses a non-reentrant model
 31659 ;;
 31660                           
 31661                           	psect	text94
 31662  00493A                     __ptext94:
 31663                           	opt stack 0
 31664  00493A                     _fifo_write:
 31665                           	opt stack 21
 31666                           
 31667                           ;fifo.c: 62: uint32_t i;
 31668                           ;fifo.c: 63: const uint8_t *p;
 31669                           ;fifo.c: 64: p = buf;
 31670                           
 31671                           ;incstack = 0
 31672                           ;incstack = 0
 31673  00493A  C003  F00D         	movff	fifo_write@buf,fifo_write@p
 31674  00493E  C004  F00E         	movff	fifo_write@buf+1,fifo_write@p+1
 31675                           
 31676                           ;fifo.c: 66: for ( i = 0; i < nbytes; i++ ) {
 31677  004942  6A0F               	clrf	fifo_write@i,c
 31678  004944  6A10               	clrf	fifo_write@i+1,c
 31679  004946  6A11               	clrf	fifo_write@i+2,c
 31680  004948  6A12               	clrf	fifo_write@i+3,c
 31681  00494A  D068               	goto	i1l7178
 31682  00494C                     i1l7158:
 31683                           
 31684                           ;fifo.c: 69: if ( ( (f->head + 1) == f->tail) ||
 31685                           ;fifo.c: 70: (((f->head + 1) == f->size) && (f->tail == 0))) {
 31686  00494C  EE20 F004          	lfsr	2,4
 31687  004950  5001               	movf	fifo_write@f,w,c
 31688  004952  D872               	call	PL24	;call to abstracted procedure
 31689  004954  E102               	bnz	i1u700_25
 31690  004956  5009               	movf	??_fifo_write,w,c
 31691  004958  180B               	xorwf	??_fifo_write+2,w,c
 31692  00495A                     i1u700_25:
 31693  00495A  E011               	bz	i1l1715
 31694  00495C  EE20 F006          	lfsr	2,6
 31695  004960  5001               	movf	fifo_write@f,w,c
 31696  004962  D86A               	call	PL24	;call to abstracted procedure
 31697  004964  E102               	bnz	i1u701_25
 31698  004966  5009               	movf	??_fifo_write,w,c
 31699  004968  180B               	xorwf	??_fifo_write+2,w,c
 31700  00496A                     i1u701_25:
 31701  00496A  E10E               	bnz	i1l7166
 31702  00496C  EE20 F004          	lfsr	2,4
 31703  004970  5001               	movf	fifo_write@f,w,c
 31704  004972  26D9               	addwf	fsr2l,f,c
 31705  004974  5002               	movf	fifo_write@f+1,w,c
 31706  004976  22DA               	addwfc	fsr2h,f,c
 31707  004978  50DE               	movf	postinc2,w,c
 31708  00497A  10DD               	iorwf	postdec2,w,c
 31709  00497C  E105               	bnz	i1l7166
 31710  00497E                     i1l1715:
 31711                           
 31712                           ;fifo.c: 71: return i;
 31713  00497E  C00F  F001         	movff	fifo_write@i,?_fifo_write
 31714  004982  C010  F002         	movff	fifo_write@i+1,?_fifo_write+1
 31715  004986  D057               	goto	i1l1716
 31716  004988                     i1l7166:
 31717                           
 31718                           ;fifo.c: 73: else {
 31719                           ;fifo.c: 74: f->buf[ f->head ] = *p++;
 31720  004988  C00D  FFD9         	movff	fifo_write@p,fsr2l
 31721  00498C  C00E  FFDA         	movff	fifo_write@p+1,fsr2h
 31722  004990  EE10 F002          	lfsr	1,2
 31723  004994  5001               	movf	fifo_write@f,w,c
 31724  004996  26E1               	addwf	fsr1l,f,c
 31725  004998  5002               	movf	fifo_write@f+1,w,c
 31726  00499A  22E2               	addwfc	fsr1h,f,c
 31727  00499C  CFE6 F009          	movff	postinc1,??_fifo_write
 31728  0049A0  CFE5 F00A          	movff	postdec1,??_fifo_write+1
 31729  0049A4  C001  FFE1         	movff	fifo_write@f,fsr1l
 31730  0049A8  C002  FFE2         	movff	fifo_write@f+1,fsr1h
 31731  0049AC  CFE6 F00B          	movff	postinc1,??_fifo_write+2
 31732  0049B0  CFE5 F00C          	movff	postdec1,??_fifo_write+3
 31733  0049B4  5009               	movf	??_fifo_write,w,c
 31734  0049B6  240B               	addwf	??_fifo_write+2,w,c
 31735  0049B8  6EE1               	movwf	fsr1l,c
 31736  0049BA  500A               	movf	??_fifo_write+1,w,c
 31737  0049BC  200C               	addwfc	??_fifo_write+3,w,c
 31738  0049BE  6EE2               	movwf	fsr1h,c
 31739  0049C0  CFDF FFE7          	movff	indf2,indf1
 31740  0049C4  4A0D               	infsnz	fifo_write@p,f,c
 31741  0049C6  2A0E               	incf	fifo_write@p+1,f,c
 31742                           
 31743                           ;fifo.c: 75: f->head++;
 31744  0049C8  EE20 F002          	lfsr	2,2
 31745  0049CC  5001               	movf	fifo_write@f,w,c
 31746  0049CE  26D9               	addwf	fsr2l,f,c
 31747  0049D0  5002               	movf	fifo_write@f+1,w,c
 31748  0049D2  22DA               	addwfc	fsr2h,f,c
 31749  0049D4  2ADE               	incf	postinc2,f,c
 31750  0049D6  0E00               	movlw	0
 31751  0049D8  22DD               	addwfc	postdec2,f,c
 31752                           
 31753                           ;fifo.c: 77: if (f->head >= f->size) {
 31754  0049DA  EE20 F006          	lfsr	2,6
 31755  0049DE  5001               	movf	fifo_write@f,w,c
 31756  0049E0  26D9               	addwf	fsr2l,f,c
 31757  0049E2  5002               	movf	fifo_write@f+1,w,c
 31758  0049E4  22DA               	addwfc	fsr2h,f,c
 31759  0049E6  EE10 F002          	lfsr	1,2
 31760  0049EA  5001               	movf	fifo_write@f,w,c
 31761  0049EC  26E1               	addwf	fsr1l,f,c
 31762  0049EE  5002               	movf	fifo_write@f+1,w,c
 31763  0049F0  22E2               	addwfc	fsr1h,f,c
 31764  0049F2  52E6               	movf	postinc1,f,c
 31765  0049F4  52DE               	movf	postinc2,f,c
 31766  0049F6  50DD               	movf	postdec2,w,c
 31767  0049F8  5CE5               	subwf	postdec1,w,c
 31768  0049FA  E102               	bnz	i1u703_25
 31769  0049FC  50DF               	movf	indf2,w,c
 31770  0049FE  5CE7               	subwf	indf1,w,c
 31771  004A00                     i1u703_25:
 31772  004A00  E308               	bnc	i1l7176
 31773                           
 31774                           ;fifo.c: 78: f->head = 0;
 31775  004A02  EE20 F002          	lfsr	2,2
 31776  004A06  5001               	movf	fifo_write@f,w,c
 31777  004A08  26D9               	addwf	fsr2l,f,c
 31778  004A0A  5002               	movf	fifo_write@f+1,w,c
 31779  004A0C  22DA               	addwfc	fsr2h,f,c
 31780  004A0E  6ADE               	clrf	postinc2,c
 31781  004A10  6ADD               	clrf	postdec2,c
 31782  004A12                     i1l7176:
 31783  004A12  2A0F               	incf	fifo_write@i,f,c
 31784  004A14  0E00               	movlw	0
 31785  004A16  2210               	addwfc	fifo_write@i+1,f,c
 31786  004A18  2211               	addwfc	fifo_write@i+2,f,c
 31787  004A1A  2212               	addwfc	fifo_write@i+3,f,c
 31788  004A1C                     i1l7178:
 31789  004A1C  5005               	movf	fifo_write@nbytes,w,c
 31790  004A1E  5C0F               	subwf	fifo_write@i,w,c
 31791  004A20  5006               	movf	fifo_write@nbytes+1,w,c
 31792  004A22  5810               	subwfb	fifo_write@i+1,w,c
 31793  004A24  5007               	movf	fifo_write@nbytes+2,w,c
 31794  004A26  5811               	subwfb	fifo_write@i+2,w,c
 31795  004A28  5008               	movf	fifo_write@nbytes+3,w,c
 31796  004A2A  5812               	subwfb	fifo_write@i+3,w,c
 31797  004A2C  E38F               	bnc	i1l7158
 31798                           
 31799                           ;fifo.c: 79: }
 31800                           ;fifo.c: 80: }
 31801                           ;fifo.c: 82: }
 31802                           ;fifo.c: 84: return nbytes;
 31803  004A2E  C005  F001         	movff	fifo_write@nbytes,?_fifo_write
 31804  004A32  C006  F002         	movff	fifo_write@nbytes+1,?_fifo_write+1
 31805  004A36                     i1l1716:
 31806  004A36  0012               	return	
 31807  004A38                     __end_of_fifo_write:
 31808                           	opt stack 0
 31809  004A38                     PL24:
 31810                           	opt stack 21
 31811  004A38  26D9               	addwf	fsr2l,f,c
 31812  004A3A  5002               	movf	fifo_write@f+1,w,c
 31813  004A3C  22DA               	addwfc	fsr2h,f,c
 31814  004A3E  CFDE F009          	movff	postinc2,??_fifo_write
 31815  004A42  CFDD F00A          	movff	postdec2,??_fifo_write+1
 31816  004A46  EE20 F002          	lfsr	2,2
 31817  004A4A  5001               	movf	fifo_write@f,w,c
 31818  004A4C  26D9               	addwf	fsr2l,f,c
 31819  004A4E  5002               	movf	fifo_write@f+1,w,c
 31820  004A50  22DA               	addwfc	fsr2h,f,c
 31821  004A52  CFDE F00B          	movff	postinc2,??_fifo_write+2
 31822  004A56  CFDD F00C          	movff	postdec2,??_fifo_write+3
 31823  004A5A  2A0B               	incf	??_fifo_write+2,f,c
 31824  004A5C  0E00               	movlw	0
 31825  004A5E  220C               	addwfc	??_fifo_write+3,f,c
 31826  004A60  500A               	movf	??_fifo_write+1,w,c
 31827  004A62  180C               	xorwf	??_fifo_write+3,w,c
 31828  004A64  0012               	return	
 31829  004A66                     __end_ofPL24:
 31830                           	opt stack 0
 31831                           tblptru	equ	0xFF8
 31832                           tblptrh	equ	0xFF7
 31833                           tblptrl	equ	0xFF6
 31834                           tablat	equ	0xFF5
 31835                           prodh	equ	0xFF4
 31836                           prodl	equ	0xFF3
 31837                           intcon	equ	0xFF2
 31838                           indf0	equ	0xFEF
 31839                           postinc0	equ	0xFEE
 31840                           fsr0h	equ	0xFEA
 31841                           fsr0l	equ	0xFE9
 31842                           wreg	equ	0xFE8
 31843                           indf1	equ	0xFE7
 31844                           postinc1	equ	0xFE6
 31845                           postdec1	equ	0xFE5
 31846                           fsr1h	equ	0xFE2
 31847                           fsr1l	equ	0xFE1
 31848                           bsr	equ	0xFE0
 31849                           indf2	equ	0xFDF
 31850                           postinc2	equ	0xFDE
 31851                           postdec2	equ	0xFDD
 31852                           plusw2	equ	0xFDB
 31853                           fsr2h	equ	0xFDA
 31854                           fsr2l	equ	0xFD9
 31855                           status	equ	0xFD8
 31856                           
 31857 ;; *************** function _ReadUSART *****************
 31858 ;; Defined at:
 31859 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
 31860 ;; Parameters:    Size  Location     Type
 31861 ;;		None
 31862 ;; Auto vars:     Size  Location     Type
 31863 ;;  data            1    0[COMRAM] unsigned char 
 31864 ;; Return value:  Size  Location     Type
 31865 ;;                  1    wreg      unsigned char 
 31866 ;; Registers used:
 31867 ;;		wreg, status,2, status,0
 31868 ;; Tracked objects:
 31869 ;;		On entry : 0/0
 31870 ;;		On exit  : 0/0
 31871 ;;		Unchanged: 0/0
 31872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31873 ;;      Params:         0       0       0       0       0       0       0
 31874 ;;      Locals:         1       0       0       0       0       0       0
 31875 ;;      Temps:          0       0       0       0       0       0       0
 31876 ;;      Totals:         1       0       0       0       0       0       0
 31877 ;;Total ram usage:        1 bytes
 31878 ;; Hardware stack levels used:    1
 31879 ;; This function calls:
 31880 ;;		Nothing
 31881 ;; This function is called by:
 31882 ;;		_Interrupt
 31883 ;; This function uses a non-reentrant model
 31884 ;;
 31885                           
 31886                           	psect	text95
 31887  006AB6                     __ptext95:
 31888                           	opt stack 0
 31889  006AB6                     _ReadUSART:
 31890                           	opt stack 21
 31891                           
 31892                           ;incstack = 0
 31893                           ;incstack = 0
 31894  006AB6  0EF2               	movlw	242
 31895  006AB8  162E               	andwf	_USART_Status,f,c
 31896  006ABA  ACAB               	btfss	4011,6,c	;volatile
 31897  006ABC  D003               	goto	i1l2067
 31898  006ABE  902E               	bcf	_USART_Status,0,c
 31899  006AC0  B0AB               	btfsc	4011,0,c	;volatile
 31900  006AC2  802E               	bsf	_USART_Status,0,c
 31901  006AC4                     i1l2067:
 31902  006AC4  B4AB               	btfsc	4011,2,c	;volatile
 31903  006AC6  842E               	bsf	_USART_Status,2,c
 31904  006AC8  B2AB               	btfsc	4011,1,c	;volatile
 31905  006ACA  862E               	bsf	_USART_Status,3,c
 31906  006ACC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 31907  006AD0  5001               	movf	ReadUSART@data,w,c
 31908  006AD2  0012               	return	
 31909  006AD4                     __end_of_ReadUSART:
 31910                           	opt stack 0
 31911                           tblptru	equ	0xFF8
 31912                           tblptrh	equ	0xFF7
 31913                           tblptrl	equ	0xFF6
 31914                           tablat	equ	0xFF5
 31915                           prodh	equ	0xFF4
 31916                           prodl	equ	0xFF3
 31917                           intcon	equ	0xFF2
 31918                           indf0	equ	0xFEF
 31919                           postinc0	equ	0xFEE
 31920                           fsr0h	equ	0xFEA
 31921                           fsr0l	equ	0xFE9
 31922                           wreg	equ	0xFE8
 31923                           indf1	equ	0xFE7
 31924                           postinc1	equ	0xFE6
 31925                           postdec1	equ	0xFE5
 31926                           fsr1h	equ	0xFE2
 31927                           fsr1l	equ	0xFE1
 31928                           bsr	equ	0xFE0
 31929                           indf2	equ	0xFDF
 31930                           postinc2	equ	0xFDE
 31931                           postdec2	equ	0xFDD
 31932                           plusw2	equ	0xFDB
 31933                           fsr2h	equ	0xFDA
 31934                           fsr2l	equ	0xFD9
 31935                           status	equ	0xFD8
 31936                           tblptru	equ	0xFF8
 31937                           tblptrh	equ	0xFF7
 31938                           tblptrl	equ	0xFF6
 31939                           tablat	equ	0xFF5
 31940                           prodh	equ	0xFF4
 31941                           prodl	equ	0xFF3
 31942                           intcon	equ	0xFF2
 31943                           indf0	equ	0xFEF
 31944                           postinc0	equ	0xFEE
 31945                           fsr0h	equ	0xFEA
 31946                           fsr0l	equ	0xFE9
 31947                           wreg	equ	0xFE8
 31948                           indf1	equ	0xFE7
 31949                           postinc1	equ	0xFE6
 31950                           postdec1	equ	0xFE5
 31951                           fsr1h	equ	0xFE2
 31952                           fsr1l	equ	0xFE1
 31953                           bsr	equ	0xFE0
 31954                           indf2	equ	0xFDF
 31955                           postinc2	equ	0xFDE
 31956                           postdec2	equ	0xFDD
 31957                           plusw2	equ	0xFDB
 31958                           fsr2h	equ	0xFDA
 31959                           fsr2l	equ	0xFD9
 31960                           status	equ	0xFD8
 31961                           
 31962                           	psect	rparam
 31963  0000                     tblptru	equ	0xFF8
 31964                           tblptrh	equ	0xFF7
 31965                           tblptrl	equ	0xFF6
 31966                           tablat	equ	0xFF5
 31967                           prodh	equ	0xFF4
 31968                           prodl	equ	0xFF3
 31969                           intcon	equ	0xFF2
 31970                           indf0	equ	0xFEF
 31971                           postinc0	equ	0xFEE
 31972                           fsr0h	equ	0xFEA
 31973                           fsr0l	equ	0xFE9
 31974                           wreg	equ	0xFE8
 31975                           indf1	equ	0xFE7
 31976                           postinc1	equ	0xFE6
 31977                           postdec1	equ	0xFE5
 31978                           fsr1h	equ	0xFE2
 31979                           fsr1l	equ	0xFE1
 31980                           bsr	equ	0xFE0
 31981                           indf2	equ	0xFDF
 31982                           postinc2	equ	0xFDE
 31983                           postdec2	equ	0xFDD
 31984                           plusw2	equ	0xFDB
 31985                           fsr2h	equ	0xFDA
 31986                           fsr2l	equ	0xFD9
 31987                           status	equ	0xFD8
 31988                           tblptru	equ	0xFF8
 31989                           tblptrh	equ	0xFF7
 31990                           tblptrl	equ	0xFF6
 31991                           tablat	equ	0xFF5
 31992                           prodh	equ	0xFF4
 31993                           prodl	equ	0xFF3
 31994                           intcon	equ	0xFF2
 31995                           indf0	equ	0xFEF
 31996                           postinc0	equ	0xFEE
 31997                           fsr0h	equ	0xFEA
 31998                           fsr0l	equ	0xFE9
 31999                           wreg	equ	0xFE8
 32000                           indf1	equ	0xFE7
 32001                           postinc1	equ	0xFE6
 32002                           postdec1	equ	0xFE5
 32003                           fsr1h	equ	0xFE2
 32004                           fsr1l	equ	0xFE1
 32005                           bsr	equ	0xFE0
 32006                           indf2	equ	0xFDF
 32007                           postinc2	equ	0xFDE
 32008                           postdec2	equ	0xFDD
 32009                           plusw2	equ	0xFDB
 32010                           fsr2h	equ	0xFDA
 32011                           fsr2l	equ	0xFD9
 32012                           status	equ	0xFD8


Data Sizes:
    Strings     4506
    Constant    120
    Data        0
    BSS         1144
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      65
    BANK0           160    102     158
    BANK1           256     25     204
    BANK2           256     76     212
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ?_strcspn	unsigned int  size(2) Largest target is 0

    ?_strspn	unsigned int  size(2) Largest target is 0

    ?_strichr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_strnicmp	int  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?_utoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    ?_ReadTimer3	unsigned int  size(1) Largest target is 2
		 -> WriteTimer3@timer(COMRAM[2]), ReadTimer3@timer(COMRAM[2]), 

    ?___llmod	unsigned long  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?__ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ?_strcat	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_itoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    ?_ultoa	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?___wmul	unsigned int  size(1) Largest target is 4
		 -> ECANSendMessage@dataLen(BANK0[1]), getVSCPFrame@id(BANK0[4]), 

    ?_memcpy	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    ?_strlen	unsigned int  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_169(CODE[2]), STR_168(CODE[9]), STR_165(CODE[10]), 
		 -> STR_162(CODE[4]), STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), 
		 -> STR_154(CODE[3]), STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), 
		 -> STR_147(CODE[8]), STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), 
		 -> STR_143(CODE[7]), STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), 
		 -> STR_138(CODE[11]), STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), 
		 -> STR_120(CODE[5]), STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), 
		 -> STR_81(CODE[5]), wrkbuf(BANK1[80]), STR_49(CODE[5]), STR_47(CODE[5]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_41(CODE[5]), STR_38(CODE[3]), 
		 -> STR_29(CODE[3]), STR_20(CODE[7]), STR_18(CODE[8]), STR_16(CODE[7]), 
		 -> STR_14(CODE[9]), STR_12(CODE[6]), STR_10(CODE[7]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), cmdbuf(BANK1[80]), 

    ?_strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    ?_strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    ?_memset	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    ?_atoi	int  size(2) Largest target is 0

    ?_strtok	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_stristr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_fifo_read	unsigned short  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    ?_fifo_getFree	unsigned short  size(2) Largest target is 0

    ?_fifo_write	unsigned short  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strichr@ptr	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strnicmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_169(CODE[2]), STR_168(CODE[9]), STR_165(CODE[10]), STR_162(CODE[4]), 
		 -> STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), STR_154(CODE[3]), 
		 -> STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), STR_147(CODE[8]), 
		 -> STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), STR_143(CODE[7]), 
		 -> STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), STR_138(CODE[11]), 
		 -> STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), STR_120(CODE[5]), 
		 -> STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), STR_81(CODE[5]), 
		 -> STR_49(CODE[5]), STR_47(CODE[5]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_41(CODE[5]), STR_38(CODE[3]), STR_29(CODE[3]), STR_20(CODE[7]), 
		 -> STR_18(CODE[8]), STR_16(CODE[7]), STR_14(CODE[9]), STR_12(CODE[6]), 
		 -> STR_10(CODE[7]), STR_8(CODE[5]), STR_6(CODE[5]), 

    strnicmp@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_169(CODE[2]), STR_168(CODE[9]), STR_165(CODE[10]), 
		 -> STR_162(CODE[4]), STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), 
		 -> STR_154(CODE[3]), STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), 
		 -> STR_147(CODE[8]), STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), 
		 -> STR_143(CODE[7]), STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), 
		 -> STR_138(CODE[11]), STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), 
		 -> STR_120(CODE[5]), STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), 
		 -> STR_81(CODE[5]), wrkbuf(BANK1[80]), STR_49(CODE[5]), STR_47(CODE[5]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_41(CODE[5]), STR_38(CODE[3]), 
		 -> STR_29(CODE[3]), STR_20(CODE[7]), STR_18(CODE[8]), STR_16(CODE[7]), 
		 -> STR_14(CODE[9]), STR_12(CODE[6]), STR_10(CODE[7]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), cmdbuf(BANK1[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_169(CODE[2]), STR_168(CODE[9]), STR_165(CODE[10]), 
		 -> STR_162(CODE[4]), STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), 
		 -> STR_154(CODE[3]), STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), 
		 -> STR_147(CODE[8]), STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), 
		 -> STR_143(CODE[7]), STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), 
		 -> STR_138(CODE[11]), STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), 
		 -> STR_120(CODE[5]), STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), 
		 -> STR_81(CODE[5]), wrkbuf(BANK1[80]), STR_49(CODE[5]), STR_47(CODE[5]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_41(CODE[5]), STR_38(CODE[3]), 
		 -> STR_29(CODE[3]), STR_20(CODE[7]), STR_18(CODE[8]), STR_16(CODE[7]), 
		 -> STR_14(CODE[9]), STR_12(CODE[6]), STR_10(CODE[7]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), cmdbuf(BANK1[80]), 

    sp__strichr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    stristr@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_169(CODE[2]), STR_168(CODE[9]), STR_165(CODE[10]), STR_162(CODE[4]), 
		 -> STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), STR_154(CODE[3]), 
		 -> STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), STR_147(CODE[8]), 
		 -> STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), STR_143(CODE[7]), 
		 -> STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), STR_138(CODE[11]), 
		 -> STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), STR_120(CODE[5]), 
		 -> STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), STR_81(CODE[5]), 
		 -> STR_49(CODE[5]), STR_47(CODE[5]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_41(CODE[5]), STR_38(CODE[3]), STR_29(CODE[3]), STR_20(CODE[7]), 
		 -> STR_18(CODE[8]), STR_16(CODE[7]), STR_14(CODE[9]), STR_12(CODE[6]), 
		 -> STR_10(CODE[7]), STR_8(CODE[5]), STR_6(CODE[5]), 

    stristr@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_298(CODE[2]), STR_297(CODE[2]), printNodeFirmwareVersion@buf(BANK0[3]), STR_292(CODE[2]), 
		 -> STR_291(CODE[3]), STR_290(CODE[2]), printGUID@buf(BANK0[3]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 80
		 -> STR_308(CODE[3]), STR_307(CODE[23]), STR_306(CODE[10]), STR_305(CODE[10]), 
		 -> STR_304(CODE[12]), STR_303(CODE[8]), STR_302(CODE[7]), STR_301(CODE[3]), 
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), STR_300(CODE[10]), STR_299(CODE[3]), STR_296(CODE[20]), 
		 -> STR_295(CODE[3]), STR_294(CODE[14]), STR_293(CODE[3]), STR_289(CODE[8]), 
		 -> STR_288(CODE[17]), STR_287(CODE[3]), STR_286(CODE[67]), STR_285(CODE[3]), 
		 -> STR_284(CODE[27]), STR_283(CODE[3]), STR_282(CODE[67]), STR_281(CODE[52]), 
		 -> STR_280(CODE[39]), STR_279(CODE[62]), STR_278(CODE[55]), STR_277(CODE[49]), 
		 -> STR_276(CODE[67]), STR_275(CODE[47]), STR_274(CODE[47]), STR_273(CODE[34]), 
		 -> STR_272(CODE[71]), STR_271(CODE[20]), STR_270(CODE[78]), STR_269(CODE[24]), 
		 -> STR_268(CODE[77]), STR_267(CODE[74]), STR_266(CODE[76]), STR_265(CODE[47]), 
		 -> STR_264(CODE[40]), STR_263(CODE[39]), STR_262(CODE[33]), STR_261(CODE[23]), 
		 -> STR_260(CODE[56]), STR_259(CODE[24]), STR_258(CODE[44]), STR_257(CODE[50]), 
		 -> STR_256(CODE[31]), STR_255(CODE[50]), STR_254(CODE[51]), STR_253(CODE[46]), 
		 -> STR_252(CODE[44]), STR_251(CODE[27]), STR_250(CODE[39]), STR_249(CODE[39]), 
		 -> STR_248(CODE[57]), STR_247(CODE[55]), STR_246(CODE[3]), STR_243(CODE[24]), 
		 -> STR_242(CODE[58]), STR_241(CODE[54]), STR_240(CODE[59]), STR_239(CODE[3]), 
		 -> STR_236(CODE[25]), STR_235(CODE[52]), STR_234(CODE[3]), STR_231(CODE[24]), 
		 -> STR_230(CODE[3]), STR_227(CODE[24]), STR_226(CODE[3]), STR_223(CODE[24]), 
		 -> STR_222(CODE[3]), STR_219(CODE[23]), STR_218(CODE[3]), STR_215(CODE[21]), 
		 -> STR_214(CODE[3]), STR_211(CODE[22]), STR_210(CODE[3]), STR_207(CODE[17]), 
		 -> STR_206(CODE[3]), STR_203(CODE[18]), STR_202(CODE[4]), STR_201(CODE[11]), 
		 -> STR_200(CODE[2]), STR_197(CODE[7]), STR_194(CODE[7]), STR_191(CODE[9]), 
		 -> STR_188(CODE[7]), STR_185(CODE[8]), STR_182(CODE[12]), STR_179(CODE[7]), 
		 -> STR_178(CODE[2]), STR_177(CODE[2]), STR_176(CODE[6]), STR_175(CODE[8]), 
		 -> STR_174(CODE[8]), STR_173(CODE[20]), STR_172(CODE[27]), STR_171(CODE[6]), 
		 -> STR_170(CODE[33]), STR_167(CODE[29]), STR_166(CODE[34]), STR_164(CODE[46]), 
		 -> STR_163(CODE[22]), STR_161(CODE[21]), STR_158(CODE[41]), STR_157(CODE[23]), 
		 -> STR_155(CODE[22]), STR_152(CODE[26]), STR_150(CODE[32]), STR_148(CODE[28]), 
		 -> STR_139(CODE[6]), STR_137(CODE[40]), STR_135(CODE[44]), STR_132(CODE[6]), 
		 -> STR_131(CODE[39]), STR_129(CODE[36]), STR_127(CODE[37]), STR_125(CODE[40]), 
		 -> STR_123(CODE[37]), STR_122(CODE[50]), STR_119(CODE[6]), STR_116(CODE[41]), 
		 -> STR_114(CODE[38]), STR_112(CODE[39]), STR_110(CODE[42]), STR_108(CODE[39]), 
		 -> STR_107(CODE[66]), STR_104(CODE[6]), STR_103(CODE[27]), STR_102(CODE[3]), 
		 -> STR_99(CODE[20]), STR_98(CODE[52]), STR_94(CODE[8]), STR_93(CODE[36]), 
		 -> STR_90(CODE[8]), STR_89(CODE[38]), STR_88(CODE[24]), STR_86(CODE[33]), 
		 -> STR_84(CODE[24]), STR_82(CODE[52]), STR_80(CODE[54]), STR_79(CODE[6]), 
		 -> STR_78(CODE[3]), STR_73(CODE[25]), STR_70(CODE[17]), STR_69(CODE[3]), 
		 -> STR_68(CODE[4]), STR_67(CODE[3]), STR_64(CODE[4]), STR_59(CODE[15]), 
		 -> wrkbuf(BANK1[80]), STR_56(CODE[14]), STR_54(CODE[33]), STR_52(CODE[24]), 
		 -> STR_50(CODE[52]), STR_48(CODE[6]), STR_46(CODE[6]), STR_44(CODE[6]), 
		 -> STR_42(CODE[6]), STR_40(CODE[18]), STR_39(CODE[6]), STR_37(CODE[33]), 
		 -> STR_36(CODE[6]), STR_28(CODE[24]), STR_27(CODE[18]), STR_26(CODE[20]), 
		 -> STR_25(CODE[25]), STR_24(CODE[22]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_19(CODE[6]), STR_17(CODE[6]), STR_15(CODE[6]), 
		 -> STR_13(CODE[6]), STR_11(CODE[6]), STR_9(CODE[6]), STR_7(CODE[31]), 
		 -> STR_5(CODE[29]), STR_4(CODE[55]), STR_3(CODE[35]), STR_2(CODE[58]), 
		 -> STR_1(CODE[37]), 

    sprintf$2277	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_310(CODE[17]), STR_309(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_245(CODE[3]), STR_244(CODE[7]), STR_238(CODE[3]), STR_237(CODE[7]), 
		 -> STR_233(CODE[4]), STR_232(CODE[8]), STR_229(CODE[4]), STR_228(CODE[8]), 
		 -> STR_225(CODE[4]), STR_224(CODE[8]), STR_221(CODE[4]), STR_220(CODE[8]), 
		 -> STR_217(CODE[4]), STR_216(CODE[7]), STR_213(CODE[4]), STR_212(CODE[7]), 
		 -> STR_209(CODE[4]), STR_208(CODE[7]), STR_205(CODE[4]), STR_204(CODE[7]), 
		 -> STR_199(CODE[3]), STR_198(CODE[7]), STR_196(CODE[3]), STR_195(CODE[7]), 
		 -> STR_193(CODE[3]), STR_192(CODE[7]), STR_190(CODE[3]), STR_189(CODE[7]), 
		 -> STR_187(CODE[3]), STR_186(CODE[7]), STR_184(CODE[4]), STR_183(CODE[8]), 
		 -> STR_181(CODE[3]), STR_180(CODE[7]), STR_101(CODE[3]), STR_100(CODE[7]), 
		 -> STR_96(CODE[4]), STR_95(CODE[8]), STR_92(CODE[4]), STR_91(CODE[8]), 
		 -> STR_77(CODE[3]), STR_76(CODE[7]), STR_75(CODE[3]), STR_74(CODE[7]), 
		 -> STR_72(CODE[6]), STR_71(CODE[10]), STR_66(CODE[3]), STR_65(CODE[7]), 
		 -> STR_63(CODE[3]), STR_62(CODE[7]), STR_61(CODE[3]), STR_60(CODE[7]), 
		 -> STR_58(CODE[6]), STR_57(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_sprintf	int  size(1) Largest target is 4
		 -> ECANSendMessage@dataLen(BANK0[1]), getVSCPFrame@id(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2257$_cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    hexStringToBytes@buf	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    hexStringToBytes@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    hexStringToBytes@inhex	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    crc8@crc	PTR unsigned char  size(2) Largest target is 1
		 -> calcCRC@crc(BANK0[1]), sendVSCPModeCapabilities@crc(BANK0[1]), receiveSendEventVSCP@crc(COMRAM[1]), receiveSendMultiEventCANAL@crc(BANK0[1]), 
		 -> receiveSendEventCANAL@crc(BANK0[1]), sendVSCPDriverCommandReply@crc(BANK0[1]), sendVSCPDriverNack@crc(BANK0[1]), sendVSCPDriverAck@crc(BANK0[1]), 
		 -> sendVSCPDriverErrorFrame@crc(BANK0[1]), NULL(NULL[0]), 

    fifo_getFree@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_getFree@f	PTR struct . size(2) Largest target is 9
		 -> canInputFifo(COMRAM[8]), serialInputFifo(BANK0[8]), 

    fifo_write@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_write@f	PTR struct . size(2) Largest target is 9
		 -> canInputFifo(COMRAM[8]), serialInputFifo(BANK0[8]), 

    fifo_write@buf	PTR const void  size(2) Largest target is 8
		 -> dlc(COMRAM[1]), data(BANK2[8]), id(COMRAM[4]), Interrupt@c(COMRAM[1]), 

    fifo_write@p	PTR const unsigned char  size(2) Largest target is 8
		 -> dlc(COMRAM[1]), data(BANK2[8]), id(COMRAM[4]), Interrupt@c(COMRAM[1]), 

    fifo_read@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_read@f	PTR struct . size(2) Largest target is 9
		 -> canInputFifo(COMRAM[8]), serialInputFifo(BANK0[8]), 

    fifo_read@buf	PTR const void  size(2) Largest target is 8
		 -> getVSCPFrame@id(BANK0[4]), receiveSendEventSLCAN@dlc(BANK0[1]), receiveSendEventSLCAN@id(BANK0[4]), receiveSendMultiEventCANAL@data(BANK0[8]), 
		 -> receiveSendMultiEventCANAL@dlc(BANK0[1]), receiveSendMultiEventCANAL@id(BANK0[4]), receiveSendEventCANAL@data(BANK0[8]), receiveSendEventCANAL@dlc(BANK0[1]), 
		 -> receiveSendEventCANAL@id(BANK0[4]), doModeSLCAN@c(BANK0[1]), doModeVscp@c(BANK0[1]), vscpData(BANK1[8]), 
		 -> vscpSize(BANK1[1]), doModeVerbose@c(BANK2[1]), main@c(BANK0[1]), 

    fifo_read@p	PTR unsigned char  size(2) Largest target is 8
		 -> getVSCPFrame@id(BANK0[4]), receiveSendEventSLCAN@dlc(BANK0[1]), receiveSendEventSLCAN@id(BANK0[4]), receiveSendMultiEventCANAL@data(BANK0[8]), 
		 -> receiveSendMultiEventCANAL@dlc(BANK0[1]), receiveSendMultiEventCANAL@id(BANK0[4]), receiveSendEventCANAL@data(BANK0[8]), receiveSendEventCANAL@dlc(BANK0[1]), 
		 -> receiveSendEventCANAL@id(BANK0[4]), doModeSLCAN@c(BANK0[1]), doModeVscp@c(BANK0[1]), vscpData(BANK1[8]), 
		 -> vscpSize(BANK1[1]), doModeVerbose@c(BANK2[1]), main@c(BANK0[1]), 

    fifo_init@buf	PTR const void  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_init@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_init@f	PTR struct . size(2) Largest target is 9
		 -> canInputFifo(COMRAM[8]), serialInputFifo(BANK0[8]), 

    _ECANPointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(1) Largest target is 4
		 -> id(COMRAM[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(1) Largest target is 4
		 -> id(COMRAM[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), RXM1SIDH(ABS[1]), RXM0SIDH(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(1) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK2[8]), 

    ECANReceiveMessage@id	PTR unsigned long  size(1) Largest target is 4
		 -> id(COMRAM[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(1) Largest target is 1
		 -> dlc(COMRAM[1]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    sp___ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E16324 size(1) Largest target is 1
		 -> flags(COMRAM[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    getCANFrame@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> receiveSendMultiEventCANAL@data(BANK0[8]), receiveSendEventCANAL@data(BANK0[8]), vscpData(BANK1[8]), 

    getCANFrame@pdlc	PTR unsigned char  size(2) Largest target is 1
		 -> receiveSendEventSLCAN@dlc(BANK0[1]), receiveSendMultiEventCANAL@dlc(BANK0[1]), receiveSendEventCANAL@dlc(BANK0[1]), vscpSize(BANK1[1]), 

    getCANFrame@pid	PTR unsigned long  size(1) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), receiveSendEventSLCAN@id(BANK0[4]), receiveSendMultiEventCANAL@id(BANK0[4]), receiveSendEventCANAL@id(BANK0[4]), 

    sendCANFrame@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    getVSCPFrame@pPriority	PTR unsigned char  size(2) Largest target is 1
		 -> vscpPriority(BANK1[1]), 

    getVSCPFrame@pvscpclass	PTR unsigned short  size(2) Largest target is 2
		 -> vscpClass(BANK1[2]), 

    getVSCPFrame@pvscptype	PTR unsigned char  size(2) Largest target is 1
		 -> vscpType(BANK1[1]), 

    getVSCPFrame@pNodeId	PTR unsigned char  size(2) Largest target is 1
		 -> vscpNodeId(BANK1[1]), 

    getVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 8
		 -> vscpData(BANK1[8]), 

    getVSCPFrame@pSize	PTR unsigned char  size(2) Largest target is 1
		 -> vscpSize(BANK1[1]), 

    sendVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 8
		 -> vscpData(BANK1[8]), 

    printMDF@p	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    printErrors$1665	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_245(CODE[3]), STR_244(CODE[7]), 

    printErrors$1656	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_238(CODE[3]), STR_237(CODE[7]), 

    printErrors$1649	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_233(CODE[4]), STR_232(CODE[8]), 

    printErrors$1643	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_229(CODE[4]), STR_228(CODE[8]), 

    printErrors$1637	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_225(CODE[4]), STR_224(CODE[8]), 

    printErrors$1631	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_221(CODE[4]), STR_220(CODE[8]), 

    printStatistics$1624	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_217(CODE[4]), STR_216(CODE[7]), 

    printStatistics$1618	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_213(CODE[4]), STR_212(CODE[7]), 

    printStatistics$1612	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_209(CODE[4]), STR_208(CODE[7]), 

    printStatistics$1606	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_205(CODE[4]), STR_204(CODE[7]), 

    calcCRC@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    writeRegisterExtended@value	PTR unsigned char  size(2) Largest target is 1
		 -> doModeVerbose@value_1351(BANK2[1]), 

    readRegisterExtended@value	PTR unsigned char  size(2) Largest target is 1
		 -> doModeVerbose@value_1375(BANK2[1]), doModeVerbose@value(BANK2[1]), 

    readRegister@value	PTR unsigned char  size(1) Largest target is 1
		 -> printNodeFirmwareVersion@value(BANK0[1]), printMDF@value(BANK0[1]), printGUID@value(BANK0[1]), findNodes@value(BANK0[1]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    receivePrintEventVerbose$1536	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_199(CODE[3]), STR_198(CODE[7]), 

    receivePrintEventVerbose$1531	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_196(CODE[3]), STR_195(CODE[7]), 

    receivePrintEventVerbose$1526	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_193(CODE[3]), STR_192(CODE[7]), 

    receivePrintEventVerbose$1521	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_190(CODE[3]), STR_189(CODE[7]), 

    receivePrintEventVerbose$1516	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_187(CODE[3]), STR_186(CODE[7]), 

    receivePrintEventVerbose$1511	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_184(CODE[4]), STR_183(CODE[8]), 

    receivePrintEventVerbose$1506	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_181(CODE[3]), STR_180(CODE[7]), 

    sendEscapedUartData@pcrc	PTR unsigned char  size(2) Largest target is 1
		 -> sendVSCPModeCapabilities@crc(BANK0[1]), receiveSendEventVSCP@crc(COMRAM[1]), receiveSendMultiEventCANAL@crc(BANK0[1]), receiveSendEventCANAL@crc(BANK0[1]), 
		 -> sendVSCPDriverCommandReply@crc(BANK0[1]), sendVSCPDriverNack@crc(BANK0[1]), sendVSCPDriverAck@crc(BANK0[1]), sendVSCPDriverErrorFrame@crc(BANK0[1]), 
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    doModeVerbose@p_1415	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose@p_1392	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose$1381	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_101(CODE[3]), STR_100(CODE[7]), 

    doModeVerbose$1372	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_96(CODE[4]), STR_95(CODE[8]), 

    doModeVerbose$1366	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_92(CODE[4]), STR_91(CODE[8]), 

    doModeVerbose@preg_1357	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    doModeVerbose@p_1353	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose$1343	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_77(CODE[3]), STR_76(CODE[7]), 

    doModeVerbose$1339	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_75(CODE[3]), STR_74(CODE[7]), 

    doModeVerbose$1334	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_72(CODE[6]), STR_71(CODE[10]), 

    doModeVerbose$1326	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_66(CODE[3]), STR_65(CODE[7]), 

    doModeVerbose$1321	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_63(CODE[3]), STR_62(CODE[7]), 

    doModeVerbose$1317	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_61(CODE[3]), STR_60(CODE[7]), 

    doModeVerbose$1312	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_58(CODE[6]), STR_57(CODE[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    doModeVerbose@preg	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    doModeVerbose@p_1300	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose@p	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    sp__stristr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    canInputFifo.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    S27$buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    serialInputFifo.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 


Critical Paths under _main in COMRAM

    _doModeSLCAN->_hexStringToBytes
    _hexStringToBytes->_strlen
    _receiveSendEventSLCAN->_itoa
    _ultoa->___llmod
    _doModeVscp->_setFilter
    _sendVSCPDriverErrorFrame->_crc8
    _sendVSCPDriverCommandReply->_crc8
    _sendVSCPModeCapabilities->_crc8
    _sendVSCPDriverAck->_crc8
    _sendVSCPDriverNack->_crc8
    _calcCRC->_crc8
    _receiveSendEventCANAL->_crc8
    _receiveSendMultiEventCANAL->_crc8
    _sendEscapedUartData->_crc8
    _crc8->_init_crc8
    _doModeVerbose->_setFilter
    _doModeVerbose->__CANIDToRegs
    _changeBaudrate->_OpenUSART
    _printBinary->_WriteUSART
    _findNodes->_itoa
    _printGUID->_itoa
    _printNodeFirmwareVersion->_itoa
    _ECANSendMessage->__CANIDToRegs
    _printHelp->_putsUSART
    _atoi->___wmul
    _strtok->_strspn
    _strtok->_strcspn
    _strcspn->_strchr
    _strspn->_strchr
    _stristr->_strnicmp
    _strichr->_toupper
    _strnicmp->_strlen
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_fifo_read
    _sprintf->___llmod
    ___wmul->_ReadTimer3
    ___llmod->___lldiv
    _printFirmwareVersion->_itoa
    _utoa->___lwdiv
    _init_app_eeprom->_Write_b_eep
    _printMode->_putsUSART
    _putsUSART->_WriteUSART
    _ECANInitialize->_ECANSetOperationMode
    _init_app_ram->_setFilter
    _init_app_ram->__CANIDToRegs
    __CANIDToRegs->_Read_b_eep
    _setFilter->_Write_b_eep

Critical Paths under _Interrupt in COMRAM

    _Interrupt->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID

Critical Paths under _main in BANK0

    _doModeSLCAN->_sendCANFrame
    _receiveSendEventSLCAN->_ultoa
    _ultoa->___llmod
    _doModeVscp->_receiveVSCPModeCanalMsg
    _sendVSCPDriverErrorFrame->_sendEscapedUartData
    _sendVSCPDriverCommandReply->_sendEscapedUartData
    _sendVSCPModeCapabilities->_sendEscapedUartData
    _receiveVSCPModeCanalMsg->_sendCANFrame
    _sendVSCPDriverAck->_sendEscapedUartData
    _sendVSCPDriverNack->_sendEscapedUartData
    _calcCRC->_crc8
    _receiveSendEventCANAL->_getCANFrame
    _receiveSendMultiEventCANAL->_getCANFrame
    _sendEscapedUartData->_crc8
    _doModeVerbose->_findNodes
    _writeRegisterExtended->_sendVSCPFrame
    _readRegisterExtended->_sendVSCPFrame
    _findNodes->_printNodeFirmwareVersion
    _findNodes->_printGUID
    _printMDF->_readRegister
    _printGUID->_readRegister
    _printNodeFirmwareVersion->_readRegister
    _readRegister->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _ECANSendMessage->__CANIDToRegs
    _printErrors->_sprintf
    _printStatistics->_sprintf
    _atoi->___wmul
    _strtok->_strspn
    _strtok->_strcspn
    _stristr->_strnicmp
    _receivePrintEventVerbose->_sprintf
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_fifo_read
    _sprintf->___llmod
    ___llmod->___lldiv
    _printFirmwareVersion->_itoa
    _itoa->_utoa
    _vscp_restoreDefaults->_init_app_ram
    _init->_init_app_ram
    _init_app_ram->_setFilter

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doModeVerbose

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_doModeVerbose

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5  169008
                                            100 BANK0      2     2      0
                                             20 BANK1      5     0      5
                       _fifo_getFree
                          _fifo_init
                          _init_crc8
                         _Read_b_eep
               _vscp_restoreDefaults
                               _init
                          _putsUSART
               _printFirmwareVersion
                          _printMode
                          _fifo_read
               _ECANSetOperationMode
                      _doModeVerbose
                         _doModeVscp
                        _doModeSLCAN
                     _doModeVscpNode
 ---------------------------------------------------------------------------------
 (1) _doModeVscpNode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doModeSLCAN                                         14    14      0   10654
                                             47 BANK0     14    14      0
                          _putsUSART
                          _fifo_read
               _ECANSetOperationMode
                           _Busy_eep
                        _Write_b_eep
                             _memset
              _receiveSendEventSLCAN
                             _strlen
                   _hexStringToBytes
                             _memcpy
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _hexStringToBytes                                    14     9      5    1050
                                             34 COMRAM     5     0      5
                                              0 BANK0      9     9      0
                             _strlen
                     _nibbleFromChar
 ---------------------------------------------------------------------------------
 (3) _nibbleFromChar                                       1     1      0     378
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _receiveSendEventSLCAN                               10    10      0    4722
                                             26 BANK0     10    10      0
                          _putsUSART
                         _WriteUSART
                             _strlen
                        _getCANFrame
                              _ultoa
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _ultoa                                               13     5      8    1274
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (1) _doModeVscp                                           7     7      0   28298
                                             80 BANK0      7     7      0
                          _fifo_read
               _ECANSetOperationMode
                          _setFilter
                           _Busy_eep
                        _Write_b_eep
                     _changeBaudrate
         _receiveSendMultiEventCANAL
              _receiveSendEventCANAL
                            _calcCRC
                 _sendVSCPDriverNack
                  _sendVSCPDriverAck
            _receiveVSCPModeCanalMsg
       _receiveVSCPModeMultiCanalMsg
           _sendVSCPModeCapabilities
         _sendVSCPDriverCommandReply
           _sendVSCPDriverErrorFrame
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverErrorFrame                             2     2      0    1926
                                              6 BANK0      2     2      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverCommandReply                           3     2      1    2010
                                              6 BANK0      3     2      1
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPModeCapabilities                             1     1      0    1926
                                              6 BANK0      1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _receiveVSCPModeMultiCanalMsg                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _receiveVSCPModeCanalMsg                             33    33      0    3308
                                             47 BANK0     33    33      0
                             _memcpy
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6     242
                                             30 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverAck                                    1     1      0    1842
                                              6 BANK0      1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverNack                                   1     1      0    1842
                                              6 BANK0      1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _calcCRC                                              5     2      3     882
                                              3 BANK0      5     2      3
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _receiveSendEventCANAL                               23    23      0    4482
                                             12 BANK0     23    23      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
                         _ReadTimer3
                        _getCANFrame
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _receiveSendMultiEventCANAL                          25    25      0    4950
                                             12 BANK0     25    25      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
                         _ReadTimer3
                        _getCANFrame
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _sendEscapedUartData                                  3     1      2     930
                                              3 BANK0      3     1      2
                         _WriteUSART
                               _crc8
 ---------------------------------------------------------------------------------
 (3) _crc8                                                 5     2      3     594
                                             37 COMRAM     2     2      0
                                              0 BANK0      3     0      3
                          _init_crc8
 ---------------------------------------------------------------------------------
 (4) _init_crc8                                            7     7      0     468
                                             30 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _doModeVerbose                                       96    96      0  115140
                                              0 BANK1     20    20      0
                                              0 BANK2     76    76      0
               _vscp_restoreDefaults
                          _putsUSART
               _printFirmwareVersion
                          _fifo_read
               _ECANSetOperationMode
                          _setFilter
                       __CANIDToRegs
                           _Busy_eep
                        _Write_b_eep
           _receivePrintEventVerbose
                         _WriteUSART
                            _stristr
                             _strtok
                               _atoi
                             _memset
                      _sendVSCPFrame
                    _printStatistics
                        _printErrors
                          _printHelp
                          _findNodes
                             _strcpy
                             _strchr
               _readRegisterExtended
                            _sprintf
                        _printBinary
              _writeRegisterExtended
           _printNodeFirmwareVersion
                          _printGUID
                           _printMDF
                     _changeBaudrate
 ---------------------------------------------------------------------------------
 (2) _changeBaudrate                                       1     1      0     582
                                             33 COMRAM     1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _writeRegisterExtended                               12     5      7    4962
                                             79 BANK0     12     5      7
                   _checkCANBusState
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _printBinary                                          5     5      0     222
                                             31 COMRAM     5     5      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _readRegisterExtended                                12     5      7    4878
                                             79 BANK0     12     5      7
                   _checkCANBusState
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     152
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _findNodes                                            6     6      0   27166
                                             94 BANK0      6     6      0
                          _putsUSART
                         _WriteUSART
           _printNodeFirmwareVersion
                          _printGUID
                           _printMDF
                               _itoa
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _printMDF                                             5     5      0    5402
                                             88 BANK0      5     5      0
                          _putsUSART
                             _memset
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _printGUID                                            6     6      0    7538
                                             88 BANK0      6     6      0
                          _putsUSART
                             _memset
                             _strlen
                               _itoa
                       _readRegister
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _printNodeFirmwareVersion                             6     6      0    7268
                                             88 BANK0      6     6      0
                          _putsUSART
                             _memset
                               _itoa
                       _readRegister
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     200
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         9     5      4    4710
                                             79 BANK0      9     5      4
                   _checkCANBusState
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (4) _sendVSCPFrame                                       32    24      8    3078
                                             47 BANK0     32    24      8
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _sendCANFrame                                         7     0      7    2778
                                             40 BANK0      7     0      7
                    _ECANSendMessage
 ---------------------------------------------------------------------------------
 (3) _ECANSendMessage                                     37    29      8    2652
                                              3 BANK0     37    29      8
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (4) _checkCANBusState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     188
                                             30 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _printHelp                                            0     0      0     126
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _printErrors                                         12    12      0    7584
                                             43 BANK0     12    12      0
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _printStatistics                                      8     8      0    7476
                                             43 BANK0      8     8      0
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     930
                                              2 BANK0      7     5      2
                            _isdigit
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _strtok                                               4     0      4    1098
                                              4 BANK0      4     0      4
                             _strspn
                            _strcspn
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              6     2      4     354
                                             36 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strspn                                               6     2      4     354
                                             36 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4     168
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _stristr                                              4     0      4    1236
                                              6 BANK0      4     0      4
                             _strlen
                           _strnicmp
                            _strichr
 ---------------------------------------------------------------------------------
 (3) _strichr                                              4     0      4     354
                                             31 COMRAM     4     0      4
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _strnicmp                                             9     3      6     360
                                             34 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                             _strlen (ARG)
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              1     1      0     132
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     180
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _receivePrintEventVerbose                            24    24      0    9630
                                             43 BANK0     24    24      0
                          _putsUSART
                            _sprintf
                       _getVSCPFrame
                         _ReadTimer3
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ReadTimer3                                           4     2      2     102
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _getVSCPFrame                                        20     8     12    1380
                                             12 BANK0     20     8     12
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _getCANFrame                                          5     1      4     906
                                             36 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                          _fifo_read
 ---------------------------------------------------------------------------------
 (4) _fifo_read                                           14     8      6     612
                                             30 COMRAM     6     0      6
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             30    22      8    7134
                                             13 BANK0     30    22      8
                         _ReadTimer3 (ARG)
                            _isdigit
                            ___lldiv
                            ___llmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     324
                                             34 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                         _ReadTimer3 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     324
                                             38 COMRAM     1     1      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     342
                                             30 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0     138
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printFirmwareVersion                                20    20      0    2068
                                             15 BANK0     20    20      0
                          _putsUSART
                         _WriteUSART
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1600
                                             37 COMRAM     2     2      0
                                              9 BANK0      6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1280
                                              0 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     324
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     342
                                             30 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _vscp_restoreDefaults                                 0     0      0    5040
                       _init_app_ram
                    _init_app_eeprom
 ---------------------------------------------------------------------------------
 (3) _init_app_eeprom                                      1     1      0     330
                                             34 COMRAM     1     1      0
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _printMode                                            0     0      0     126
                          _putsUSART
 ---------------------------------------------------------------------------------
 (3) _putsUSART                                            4     2      2     126
                                             31 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      42
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    5708
                        _WriteTimer0
                       _init_app_ram
                          _OpenUSART
                         _OpenTimer0
                         _OpenTimer3
                        _WriteTimer3
                     _ECANInitialize
 ---------------------------------------------------------------------------------
 (2) _ECANInitialize                                       0     0      0      84
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (2) _WriteTimer3                                          4     2      2     138
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer3                                           1     1      0     126
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      84
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     420
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _init_app_ram                                        26    26      0    4710
                                             11 BANK0     26    26      0
                         _Read_b_eep
               _ECANSetOperationMode
                          _setFilter
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (4) __CANIDToRegs                                        10     3      7     966
                                             32 COMRAM     7     0      7
                                              0 BANK0      3     3      0
                         _Read_b_eep (ARG)
 ---------------------------------------------------------------------------------
 (2) _setFilter                                           16    11      5    3312
                                             34 COMRAM     5     0      5
                                              0 BANK0     11    11      0
                         _Read_b_eep (ARG)
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (2) _Write_b_eep                                          4     1      3     138
                                             30 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECANSetOperationMode                                 1     1      0      84
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Read_b_eep                                           2     0      2      42
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     146
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _fifo_init                                            6     0      6     252
                                             30 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _fifo_getFree                                        10     8      2     294
                                             30 COMRAM     2     0      2
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Interrupt                                           11    11      0    2363
                                             19 COMRAM    11    11      0
                          _ReadUSART
                         _fifo_write
                 _ECANReceiveMessage
                     i1_fifo_getFree
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i1_WriteTimer0                                       4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i1_fifo_getFree                                     10     8      2     511
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (10) _ECANReceiveMessage                                 12     8      4    1180
                                              7 COMRAM    12     8      4
                   __ECANPointBuffer
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (11) __RegsToCANID                                        7     3      4     489
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) __ECANPointBuffer                                    6     3      3      52
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (10) _fifo_write                                         18    10      8     378
                                              0 COMRAM    18    10      8
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fifo_getFree
   _fifo_init
   _init_crc8
   _Read_b_eep
   _vscp_restoreDefaults
     _init_app_ram
       _Read_b_eep
       _ECANSetOperationMode
       _setFilter
         _Read_b_eep (ARG)
         _Busy_eep (ARG)
         _Write_b_eep (ARG)
       __CANIDToRegs
         _Read_b_eep (ARG)
     _init_app_eeprom
       _Busy_eep
       _Write_b_eep
   _init
     _WriteTimer0
     _init_app_ram
       _Read_b_eep
       _ECANSetOperationMode
       _setFilter
         _Read_b_eep (ARG)
         _Busy_eep (ARG)
         _Write_b_eep (ARG)
       __CANIDToRegs
         _Read_b_eep (ARG)
     _OpenUSART
     _OpenTimer0
     _OpenTimer3
     _WriteTimer3
     _ECANInitialize
       _ECANSetOperationMode
   _putsUSART
     _WriteUSART
   _printFirmwareVersion
     _putsUSART
       _WriteUSART
     _WriteUSART
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _printMode
     _putsUSART
       _WriteUSART
   _fifo_read
   _ECANSetOperationMode
   _doModeVerbose
     _vscp_restoreDefaults
       _init_app_ram
         _Read_b_eep
         _ECANSetOperationMode
         _setFilter
           _Read_b_eep (ARG)
           _Busy_eep (ARG)
           _Write_b_eep (ARG)
         __CANIDToRegs
           _Read_b_eep (ARG)
       _init_app_eeprom
         _Busy_eep
         _Write_b_eep
     _putsUSART
       _WriteUSART
     _printFirmwareVersion
       _putsUSART
         _WriteUSART
       _WriteUSART
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _fifo_read
     _ECANSetOperationMode
     _setFilter
       _Read_b_eep (ARG)
       _Busy_eep (ARG)
       _Write_b_eep (ARG)
     __CANIDToRegs
       _Read_b_eep (ARG)
     _Busy_eep
     _Write_b_eep
     _receivePrintEventVerbose
       _putsUSART
         _WriteUSART
       _sprintf
         _ReadTimer3 (ARG)
         _isdigit (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
           _ReadTimer3 (ARG)
       _getVSCPFrame
         _getCANFrame
           _fifo_read
       _ReadTimer3
       ___wmul
         _ReadTimer3 (ARG)
     _WriteUSART
     _stristr
       _strlen
       _strnicmp
         _strlen (ARG)
         _toupper (ARG)
       _strichr
         _toupper
     _strtok
       _strspn
         _strchr
       _strcspn
         _strchr
     _atoi
       _isdigit
       ___wmul
         _ReadTimer3 (ARG)
     _memset
     _sendVSCPFrame
       _sendCANFrame
         _ECANSendMessage
           __CANIDToRegs
             _Read_b_eep (ARG)
     _printStatistics
       _putsUSART
         _WriteUSART
       _sprintf
         _ReadTimer3 (ARG)
         _isdigit (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
           _ReadTimer3 (ARG)
     _printErrors
       _putsUSART
         _WriteUSART
       _sprintf
         _ReadTimer3 (ARG)
         _isdigit (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
           _ReadTimer3 (ARG)
     _printHelp
       _putsUSART
         _WriteUSART
     _findNodes
       _putsUSART
         _WriteUSART
       _WriteUSART
       _printNodeFirmwareVersion
         _putsUSART
           _WriteUSART
         _memset
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _readRegister
           _checkCANBusState
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
                   _Read_b_eep (ARG)
           _getVSCPFrame
             _getCANFrame
               _fifo_read
         _strcat
       _printGUID
         _putsUSART
           _WriteUSART
         _memset
         _strlen
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _readRegister
           _checkCANBusState
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
                   _Read_b_eep (ARG)
           _getVSCPFrame
             _getCANFrame
               _fifo_read
         _strcat
       _printMDF
         _putsUSART
           _WriteUSART
         _memset
         _readRegister
           _checkCANBusState
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
                   _Read_b_eep (ARG)
           _getVSCPFrame
             _getCANFrame
               _fifo_read
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
     _strcpy
     _strchr
     _readRegisterExtended
       _checkCANBusState
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
               _Read_b_eep (ARG)
       _getVSCPFrame
         _getCANFrame
           _fifo_read
     _sprintf
       _ReadTimer3 (ARG)
       _isdigit (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
         _ReadTimer3 (ARG)
     _printBinary
       _WriteUSART
     _writeRegisterExtended
       _checkCANBusState
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
               _Read_b_eep (ARG)
       _getVSCPFrame
         _getCANFrame
           _fifo_read
     _printNodeFirmwareVersion
       _putsUSART
         _WriteUSART
       _memset
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
       _strcat
     _printGUID
       _putsUSART
         _WriteUSART
       _memset
       _strlen
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
       _strcat
     _printMDF
       _putsUSART
         _WriteUSART
       _memset
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
     _changeBaudrate
       _OpenUSART
   _doModeVscp
     _fifo_read
     _ECANSetOperationMode
     _setFilter
       _Read_b_eep (ARG)
       _Busy_eep (ARG)
       _Write_b_eep (ARG)
     _Busy_eep
     _Write_b_eep
     _changeBaudrate
       _OpenUSART
     _receiveSendMultiEventCANAL
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
       _ReadTimer3
       _getCANFrame
         _fifo_read
       ___wmul
         _ReadTimer3 (ARG)
     _receiveSendEventCANAL
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
       _ReadTimer3
       _getCANFrame
         _fifo_read
       ___wmul
         _ReadTimer3 (ARG)
     _calcCRC
       _crc8
         _init_crc8
     _sendVSCPDriverNack
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverAck
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _receiveVSCPModeCanalMsg
       _memcpy
       _sendCANFrame
         _ECANSendMessage
           __CANIDToRegs
             _Read_b_eep (ARG)
     _receiveVSCPModeMultiCanalMsg
     _sendVSCPModeCapabilities
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverCommandReply
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverErrorFrame
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
   _doModeSLCAN
     _putsUSART
       _WriteUSART
     _fifo_read
     _ECANSetOperationMode
     _Busy_eep
     _Write_b_eep
     _memset
     _receiveSendEventSLCAN
       _putsUSART
         _WriteUSART
       _WriteUSART
       _strlen
       _getCANFrame
         _fifo_read
       _ultoa
         ___lldiv
         ___llmod
           ___lldiv (ARG)
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _strlen
     _hexStringToBytes
       _strlen
       _nibbleFromChar
     _memcpy
     _sendCANFrame
       _ECANSendMessage
         __CANIDToRegs
           _Read_b_eep (ARG)
   _doModeVscpNode

 _Interrupt (ROOT)
   _ReadUSART
   _fifo_write
   _ECANReceiveMessage
     __ECANPointBuffer
     __RegsToCANID
   i1_fifo_getFree
   i1_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     1EE      16       32.2%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     4C      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      CC       7       79.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      41       1       68.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       E       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F       3        0.0%
DATA                 0      0     57B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Nov 25 22:38:33 2015

        ??_receiveVSCPModeMultiCanalMsg 001F                   __end_of_doModeVerbose 1E4E  
                          printBinary@i 0023                             fifo_write@f 0001  
                           fifo_write@i 000F                             fifo_write@p 000D  
                        ??_fifo_getFree 0060                   __end_of_sendVSCPFrame 58C4  
            doModeVerbose@filter_nodeid 0296                                      PL2 1E4E  
                                    PL4 1E62                                      PL6 1E72  
                                    PL8 1E80                                      _id 003B  
                                    bsr 000FE0                     ___wmul@multiplicand 0025  
                           __CFG_BORV$3 000000                  __end_of_doModeVscpNode 6B80  
                                   PL10 36FE                                     PL20 39F0  
                                   PL12 1E9A                                     PL30 5DD0  
                                   PL22 1EE4                                     PL14 2E60  
                                   PL40 1F10                                     PL32 4E9C  
                                   PL24 4A38                                     PL16 26A4  
                                   PL50 1F24                                     PL42 4C42  
                                   PL34 60D2                                     PL26 2EA6  
                                   PL18 3BE8                                     PL60 1F52  
                                   PL52 2B30                                     PL44 374A  
                                   PL36 26D2                                     PL28 26C2  
                                   PL70 3BF8                                     PL62 26F8  
                                   PL54 5406                                     PL46 376A  
                                   PL38 1F00                                     PL80 1F9C  
                                   PL72 1F6C                                     PL64 5BFA  
                                   PL56 1F36                                     PL48 3788  
                                   PL90 4B4A                                     PL82 2728  
                                   PL74 1F84                                     PL66 5960  
                                   PL58 4B2A                                     PL92 517A  
                                   PL84 1FB2                                     PL76 4C56  
                                   PL68 5B56                                     PL94 4C68  
                                   PL86 2736                                     PL78 2712  
                                   PL96 5094                                     PL88 4B38  
                                   PL98 4B5E                 sendEscapedUartData@pcrc 0063  
                                   l521 07C0                                     l507 6A64  
                                   l509 6A70                                     l525 07D2  
                                   l632 10FA                                     l624 1074  
                                   l608 0FB2                                     l472 4160  
                                   l464 40EE                                     l473 416C  
                                   l465 412C                                     l619 1048  
                                   l475 419C                                     l476 41A6  
                                   l477 41C4                                     l469 4146  
                                   l902 63F4                                     l478 41C6  
                                   l911 643C                                     l920 56A4  
                                   l808 2CD4                                     l914 5690  
                                   l595 0ED6                                     l907 6418  
                                   l923 56C0                                     l588 1E4C  
                                   l932 572A                                     l764 2B96  
                                   l941 5AC4                                     l917 569A  
                                   l950 5AF4                                     l926 56E2  
                                   l782 2C20                                     l599 109A  
                                   l935 5734                                     l847 2B2E  
                                   l944 5ACE                                     l953 5B16  
                                   l929 56F2                                     l769 2E5E  
                                   l857 2824                                     l962 5B4C  
                                   l882 2A2C                                     l971 5B72  
                                   l947 5AD8                                     l980 5BBA  
                                   l956 5B26                                     l974 5B7C  
                                   l983 5BCA                                     l959 5B42  
                                   l968 5B68                                     l977 5B98  
                                   l986 5BE6                                     l899 63EA  
                                   l995 527A                                     l989 5BF0  
                                   l998 5284                            __CFG_CPB$OFF 000000  
                        getVSCPFrame@id 007C                           fifo_write@buf 0003  
                 ?_vscp_restoreDefaults 0001                    __size_of_WriteTimer0 0012  
                  __size_of_WriteTimer3 0012                                     _dlc 003F  
                                   _pos 0103                    __size_of_Write_b_eep 0034  
        __size_of_writeRegisterExtended 010A                                     wreg 000FE8  
         __end_of_writeRegisterExtended 4DA2                                    PL100 3C08  
                                  PL110 274A                                    PL102 4B72  
                                  PL120 1FE8                                    PL112 1FC6  
                                  PL104 2ED0                                    PL130 5340  
                                  PL122 450A                                    PL114 5AAE  
                                  PL106 5A06                                    PL140 3E18  
                                  PL132 2018                                    PL124 1FF8  
                                  PL116 2B3E                                    PL108 4C7C  
                                  PL142 4C8E                                    PL134 275C  
                                  PL126 573E                                    PL118 1FD8  
                       ReadTimer3@timer 0021                                    PL144 2EE2  
                                  PL136 678E                                    PL128 2008  
                                  PL146 2766                                    PL138 400C  
                                  PL148 2EEA                            __CFG_LVP$OFF 000000  
                __end_of_changeBaudrate 5FF6                            __CFG_WDT$OFF 000000  
                                  l1001 528E                                    l1010 52DC  
                                  l1004 52AA                                    l1013 52F8  
                                  l1102 3A44                                    l1022 5336  
                                  l1007 52CC                                    l1016 530C  
                                  l1121 3BD2                                    l1201 44FE  
                                  l1107 3A80                                    l1019 532C  
                                  l1124 3BDC                                    l1204 4508  
                                  l1063 3242                                    l1127 3BE6  
                                  l1071 3E64                                    l1400 38D0  
                                  l1064 3254                                    l1056 31A2  
                                  l1216 545A                                    l1401 38E2  
                                  l2041 652C                                    l1321 3506  
                                  l1225 4EF2                                    l1161 5764  
                                  l1402 38F4                                    l2042 652E  
                                  l1314 348A                                    l1074 3E6E  
                                  l1170 5804                                    l1403 3906  
                                  l2043 6538                                    l1307 33FE  
                                  l1219 54F2                                    l1243 4CE8  
                                  l1155 5750                                    l1404 3918  
                                  l2044 653A                                    l1332 4860  
                                  l1228 4FA8                                    l1068 3E5A  
                                  l1092 400A                                    l1164 5780  
                                  l1405 392A                                    l2037 6518  
                                  l2046 6552                                    l2054 65AA  
                                  l1262 666C                                    l1246 4DA0  
                                  l1086 3FF6                                    l1158 575A  
                                  l1182 43F2                                    l1407 39EE  
                                  l1079 3EAA                                    l1167 57FA  
                                  l1191 447C                                    l1328 4938  
                                  l1096 3A30                                    l1329 4832  
                                  l1089 4000                                    l1185 442C  
                                  l1177 43C0                                    l1266 6678  
                                  l1371 60AA                                    l1099 3A3A  
                                  l1444 5EF8                                    l1453 595E  
                                  l2246 4E92                                    l1198 44DE  
                                  l1391 382E                                    l2247 4E9A  
                                  l1392 3840                                    l1368 608E  
                                  l1704 53E4                                    l1624 4804  
                                  l1616 4768                                    l1448 693C  
                                  l1393 3852                                    l1394 3864  
                                  l1378 623C                                    l2522 5C86  
                                  l1618 4786                                    l1395 3876  
                                  l1707 5404                                    l1396 3888  
                                  l1732 6252                                    l1740 62B0  
                                  l1397 389A                                    l1389 381C  
                                  l2621 5156                                    l1398 38AC  
                                  l1734 625A                                    l1399 38BE  
                                  l1807 2188                                    l2711 606A  
                                  l1824 2198                                    l1808 213A  
                                  l1760 5D42                                    l2553 614E  
                                  l1930 6B78                                    l1754 67D8  
                                  l2563 63CC                                    l1843 22BC  
                                  l1827 21CC                                    l2636 663E  
                                  l1828 21D0                                    l2708 606E  
                                  l2741 5E66                                    l1678 4C40  
                                  l2646 684C                                    l2742 5E6A  
                                  l1871 241E                                    l1791 2046  
                                  l2727 6318                                    l1759 5CDC  
                                  l1880 248A                                    l1882 24A6  
                                  l1955 6998                                    l1971 6AB0  
                                  l2739 5E72                                    l1972 6AB2  
                                  l1877 2460                                    l2766 66CA  
                                  l1879 2486                                    l2775 6816  
                                  l2687 649C                                    l2689 64F6  
                                  l2785 6710                                    l1898 2530  
                                  l1995 6A4C                                    l1996 6A4E  
                                  l1997 6A56                                    l1998 6A58  
                                  STR_1 7831                                    STR_2 7157  
                                  STR_3 78C3                                    STR_4 7270  
                                  STR_5 7A29                                    STR_6 7FC0  
                                  STR_7 79CE                                    STR_8 7FA7  
                                  STR_9 7F6A                                    _PIE1 000F9D  
                                  _PEIE 007F96                          sendCANFrame@id 0088  
                                  _RCIE 007CED                                    _RCIF 007CF5  
                                  _RCIP 007CFD                        ??_ECANInitialize 0020  
                                  _bDLE 0030                            __CFG_PWRT$ON 000000  
            __end_of_sendVSCPDriverNack 5BFA                                    _bHex 0100  
          doModeVerbose@filter_priority 0294                                    _crc8 68CE  
                                  _data 0280                                    _caps 00FC  
                                  _atoi 4DA2                                    _main 401A  
                                  _init 643E                                    _mode 00F1  
                                  _itoa 693E                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr0l 000FE9                                    fsr2h 000FDA  
                                  indf1 000FE7                                    fsr1l 000FE1  
                                  indf2 000FDF                                    fsr2l 000FD9  
                                  _utoa 5C08                     i1WriteTimer0@timer0 0001  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 077A                            _sprintf$2270 0079  
                          _sprintf$2271 007B                            _sprintf$2277 007D  
          receiveSendMultiEventCANAL@id 007E               ECANReceiveMessage@dataLen 000A  
    __end_of_receiveSendMultiEventCANAL 3BE8              _receiveSendMultiEventCANAL 3A06  
                       i1fifo_getFree@f 0001                      doModeVerbose@count 02BB  
                 getVSCPFrame@pPriority 0072                      doModeVerbose@value 02C4  
                  __end_of_getVSCPFrame 5EFA                        __RegsToCANID@val 0003  
                      __RegsToCANID@ptr 0001                    __size_of_getCANFrame 009C  
              ?_receiveVSCPModeCanalMsg 0001                         ?_doModeVscpNode 0001  
                                 _B0CON 000E20                                   _B1CON 000E30  
                                 _B2CON 000E40                                   _B3CON 000E50  
                                 l16010 15B0                                   l16002 15A2  
                                 l15300 41E8                                   l16110 17D0  
                                 l16102 17C0                                   l16030 161A  
                                 l15216 59BE                                   l16024 15EE  
                                 l16016 15DE                                   l15232 4086  
                                 _B4CON 000E60                                   l16130 1836  
                                 l17004 4BD2                                   l16124 180C  
                                 l16116 17FC                                   l16052 1666  
                                 l16044 1656                                   l15324 6264  
                                 l16230 1A2A                                   l16206 1982  
                                 l16038 162A                                   l15326 626A  
                                 l15270 4152                                   l15440 621C  
                                 l15432 61F6                                   l17200 3236  
                                 l18000 5566                                   l16240 1A70  
                                 l16216 19C8                                   l16160 18D6  
                                 l16152 1880                                   l16144 1870  
                                 l16056 1694                                   l15264 412E  
                                 _B5CON 000E70                                   l17122 2FC0  
                                 l17130 3048                                   l18002 557C  
                                 l16330 1CE2                                   l16306 1C40  
                                 l16226 1A0A                                   l16162 18E4  
                                 l16138 1846                                   l16066 1706  
                                 l15610 0B20                                   l15530 08DE  
                                 l15522 08A8                                   l15514 0874  
                                 l15506 0844                                   l15282 4180  
                                 l15266 4140                                   l15444 6230  
                                 l15436 6208                                   l17044 562E  
                                 l15460 53EE                                   l17108 2F6A  
                                 l17220 5FF8                                   l16340 1D14  
                                 l16316 1C74                                   l16252 1AB2  
                                 l15604 0AF2                                   l16404 2BB2  
                                 l15292 41D2                                   l15462 53F2  
                                 l17206 3252                                   l18006 559A  
                                 l18030 5034                                   l18022 4FCE  
                                 l18102 5FAA                                   l16342 1D22  
                                 l16318 1C82                                   l16246 1A90  
                                 l15710 0E82                                   l15622 0B7C  
                                 l15294 41D6                                   l15278 4178  
                                 l17216 6B10                                   l15448 535E  
                                 l17160 3106                                   l17136 3064  
                                 l17224 6030                                   l17304 4210  
                                 l18032 503C                                   l18104 5FE0  
                                 l16360 1DE4                                   l16264 1AFC  
                                 l16096 1796                                   l16088 1786  
                                 l15800 10BA                                   l15720 0EA4  
                                 l15712 0E96                                   l15704 0E18  
                                 l15640 0C32                                   l15632 0BD4  
                                 l15616 0B4E                                   l15552 0980  
                                 l15472 0788                                   l16512 2CD8  
                                 l16520 2CEC                                   l16504 2CA4  
                                 l16408 2BB8                                   l15296 41DC  
                                 l15466 6AE0                                   l17058 564C  
                                 l17226 6056                                   l17234 5DEC  
                                 l17402 33A4                                   l18034 5052  
                                 l16370 1E2A                                   l16354 1DAC  
                                 l16258 1AD6                                   l16194 18F8  
                                 l15810 110E                                   l15730 0EDE  
                                 l15650 0C90                                   l15634 0BDE  
                                 l15626 0B9A                                   l15642 0C42  
                                 l15570 0A00                                   l15562 09C8  
                                 l15546 0946                                   l15538 0912  
                                 l18202 3BA0                                   l16602 2E2A  
                                 l16418 2BD0                                   l17172 3156  
                                 l17148 30B6                                   l19012 66DA  
                                 l19020 6694                                   l17244 5E26  
                                 l17332 42DC                                   l17092 6A6C  
                                 l18060 5D98                                   l16356 1DBA  
                                 l16372 1E36                                   l18140 3AB0  
                                 l16460 2C36                                   l16428 2BF0  
                                 l16444 2BFA                                   l16620 2E5C  
                                 l16700 292A                                   l19006 6AFE  
                                 l19014 66E4                                   l19022 669E  
                                 l17254 4DA4                                   l17318 4276  
                                 l17430 346A                                   l18038 5070  
                                 l18062 5DA0                                   l17510 48F0  
                                 l16286 1B9E                                   l16278 1B5E  
                                 l16294 1BE0                                   l16366 1E16  
                                 l15822 1158                                   l15830 1196  
                                 l15750 0F78                                   l15662 0D04  
                                 l15582 0A42                                   l15574 0A16  
                                 l15566 09E8                                   l15494 07EA  
                                 l15486 07D6                                   l18206 3BC2  
                                 l16614 2E50                                   l16454 2C26  
                                 l16382 2B5C                                   ?_crc8 0060  
                                 l17272 4E58                                   l17264 4DFE  
                                 l17256 4DAA                                   l17360 3272  
                                 l17280 6A12                                   l18056 5D70  
                                 l17504 48E2                                   l18080 5F8C  
                                 l15912 1398                                   l15760 0FC6  
                                 l15832 119A                                   l15840 11C6  
                                 l15672 0D78                                   l15656 0CCA  
                                 l15648 0C80                                   l16376 1E4A  
                                 l18128 3A68                                   l18232 3E92  
                                 l16552 2D54                                   l16536 2D24  
                                 l16616 2E56                                   l16456 2C2C  
                                 l16384 2B60                                   l16640 27B2  
                                 l17186 31B2                                   l17266 4E16  
                                 l17346 4342                                   l17442 34A6  
                                 l17434 347A                                   l17418 341A  
                                 l18066 5DAE                                   l18090 5F98  
                                 l18074 5F80                                   l15906 1360  
                                 l15922 13EA                                   l15738 0F28  
                                 l15682 0DBA                                   l15666 0D3E  
                                 l15586 0A58                                   l15578 0A2C  
                                 l16570 2DA0                                   l16546 2D3E  
                                 l16458 2C30                                   l16730 2A0C  
                                 l17196 3226                                   l17532 64C6  
                                 l17268 4E1E                                   l17284 6A22  
                                 l17524 69E4                                   l18092 5F9C  
                                 l18084 5F90                                   l18076 5F84  
                                 l15772 1014                                   l15588 0A68  
                                 l16564 2D86                                   l16476 2C52  
                                 l16468 2C46                                   l18500 4440  
                                 l16708 299E                                   l16652 27FA  
                                 l16822 651A                                   l16814 650C  
                                 l17702 2286                                   l17622 2108  
                                 l17606 209A                                   l17614 20E0  
                                 l17198 322A                                   l17454 34F6  
                                 l17374 32D8                                   l17526 69EC  
                                 l18086 5F94                                   l18078 5F88  
                                 l15934 1424                                   l15918 13C0  
                                 l15870 124C                                   l15862 123E  
                                 l15854 1206                                   l15838 11B6  
                                 l15598 0AC0                                   l18182 3B3E  
                                 l16558 2D6C                                   l16486 2C64  
                                 l16742 2A48                                   l16718 29C8  
                                 l16662 282E                                   l16646 27D6  
                                 l17720 22E4                                   l17640 218E  
                                 l18096 5FA0                                   l15944 145C  
                                 l15696 0E0A                                   l15688 0DD2  
                                 l18176 3B32                                   l18272 3FCC  
                                 l16584 2DDE                                   l16576 2DBA  
                                 l18512 449A                                   l16752 2A6A  
                                 l17642 2192                                   l17634 2140  
                                 l18098 5FA4                                   l15962 14CE  
                                 l15890 1304                                   l15786 106E  
                                 l16594 2E04                                   l16762 2A88  
                                 l16738 2A32                                   l16674 285E  
                                 l16658 281E                                   l16770 2AF8  
                                 l17900 2644                                   l17812 24A0  
                                 l17804 2464                                   l17740 2332  
                                 l17716 22C6                                   l17652 21B4  
                                 l17644 2196                                   l18540 6864  
                                 l17388 333E                                   l17468 4820  
                                 l15876 12B6                                   l18188 3B5C  
                                 l18276 3FE6                                   l18268 3FC0  
                                 l18292 69D0                                   l18364 5230  
                                 l18508 4486                                   l16684 2888  
                                 l16780 2B2C                                   l17910 2686  
                                 l17902 2656                                   l17742 2336  
                                 l17726 22FA                                   l17662 21DC  
                                 l17670 2200                                   l17646 219C  
                                 l17638 2174                                   l17590 2054  
                                 l17582 202E                                   l17486 487A  
                                 l17574 4F86                                   l15966 14F6  
                                 l15886 12D8                                   l15878 12CA  
                                 l18198 3B7C                                   l16774 2B0C  
                                 l17728 22FE                                   l17680 222A  
                                 l17664 21E8                                   l17592 2058  
                                 l17576 4FA6                                   l18288 69B0  
                                 l18560 5D2E                                   l16776 2B18  
                                 l16768 2A9E                                   l16794 3582  
                                 l17906 2664                                   l17818 24B6  
                                 l17834 24EA                                   l17842 2506  
                                 l17754 236A                                   l17770 23A2  
                                 l17674 2216                                   l17658 21D6  
                                 l17594 205C                                   l18642 58F2  
                                 l18618 5E92                                   l18538 6860  
                                 l15898 1312                                   l18554 5CEA  
                  __size_of_doModeSLCAN 03C0                                   l16980 3982  
                                 l18708 695A                                   l17852 2518  
                                 l17828 24D6                                   l17780 23EC  
                                 l17756 236E                                   l17772 23B4  
                                 l17684 2238                                   l17692 224A  
                                 l17588 2050                                   l17916 268E  
                                 l18636 58EC                                   l18804 47B6  
                                 l18812 47D4                                   l18740 54D0  
                                 l15996 1576                                   l15988 1568  
                                 l18910 6112                                   l17862 2540  
                                 l17846 2510                                   l17918 2696  
                                 l17678 221C                                   l17694 2276  
                                 l17598 2062                                   l18654 5928  
                                 l18638 58EE                                   l18822 47FA  
                                 l18742 54F0                                   l18750 6562  
                                 l18574 674A                                   l17792 2422  
                                 l17776 23CE                                   l17688 2244  
                                 l18824 47FC                                   l18584 693A  
                                 l18752 6570                                   l17936 6682  
                                 l17928 6652                                   l18568 672C  
                                 l16978 393C                                   l18906 6102  
                                 l18930 639C                                   l17866 2552  
                                 l17786 23FE                                   l18818 47F6  
                                 l18770 4702                                   l18754 6578  
                                 l18908 610E                                   l17892 2606  
                                 l17884 258E                                   l17868 2558  
                                 l18764 46F0                                   l18748 655E  
                                 l17980 4D9E                                   l18676 50B8  
                                 l18918 6140                                   l18934 63BE  
                                 l18926 638C                                   l17886 25E4  
                                 l17878 257A                                   l17798 243C  
                                 l18782 472C                                   l18686 50FC  
                                 l18854 67D6                                   l18846 67C4  
                                 l18838 67B2                                   l18944 660E  
                                 l18872 5C10                                   l18928 6398  
                                 l17896 262A                                   l18792 476C  
                                 l18946 6616                                   l18882 5C48  
                                 l18866 6A90                                   l17994 5518  
                                 l17978 4D7E                                   l18956 6634  
                                 l18948 661A                                   l18972 6842  
                                 l18964 6824                                   l18966 682C  
                                 l18982 62EC                                   l18798 4788  
                                 l18968 6830                                   l18992 67E6  
                                 l18986 62FA                                   l18978 62B4  
                                 l18988 6304                                   l18996 6802  
                                 l18998 6806                                   ?_atoi 0062  
                                 ?_main 01C7                                   ?_init 0001  
                                 ?_itoa 0069                           i1_WriteTimer0 6B5E  
                                 _EEADR 000FA9                                   STR_10 7F48  
                                 STR_11 7F6A                                   STR_12 7F82  
                                 STR_20 7F33                                   STR_13 7F6A  
                                 STR_21 7D0D                                   STR_30 7FF4  
                                 STR_14 7EAE                                   STR_22 7D21  
                                 STR_15 7F6A                                   STR_31 7FF4  
                                 STR_23 7D5D                                   STR_32 7FF4  
                                 STR_16 7F3A                                   STR_40 7D82  
                                 STR_24 7C4F                                   STR_17 7F6A  
                                 STR_33 7FF4                                   STR_41 7FBB  
                                 STR_25 7AE8                                   STR_42 7F6A  
                                 STR_34 7FF4                                   STR_18 7EF8  
                                 STR_26 7CF9                                   STR_50 7313  
                                 STR_19 7F6A                                   STR_51 7E72  
                                 STR_35 7FF4                                   STR_43 7FD5  
                                 STR_27 7D70                                   STR_44 7F6A  
                                 STR_36 7F6A                                   STR_60 7F4F  
                                 STR_28 7B7B                                   STR_52 7B63  
                                 STR_53 7E72                                   STR_61 7FED  
                                 STR_29 7FEA                                   STR_45 7FB6  
                                 STR_37 794B                                   STR_46 7F6A  
                                 STR_62 7F4F                                   STR_38 7FE7  
                                 STR_70 7DEA                                   STR_54 798D  
                                 STR_39 7F6A                                   STR_55 7E72  
                                 STR_71 7E6A                                   STR_63 7FED  
                                 STR_47 7F93                                   STR_48 7F6A  
                                 STR_72 7F70                                   STR_64 7EDC  
                                 STR_56 7E18                                   STR_80 72DD  
                                 STR_65 7F4F                                   STR_81 7F9D  
                                 STR_49 7F98                                   STR_57 7E6A  
                                 STR_73 7B1A                                   STR_82 7313  
                                 STR_90 7E1E                                   STR_74 7F4F  
                                 STR_66 7FED                                   STR_58 7F70  
                                 STR_83 7E72                                   STR_75 7FED  
                                 STR_67 7FE1                                   STR_91 7ED0  
                                 STR_59 7DFB                                   STR_84 7B63  
                                 STR_76 7F4F                                   STR_92 7FCD  
                                 STR_68 7FC5                                   STR_69 72DA  
                                 STR_85 7E72                                   STR_77 7FED  
                                 STR_93 789F                                   STR_78 72DA  
                                 STR_86 798D                                   STR_94 7E1E  
                                 STR_79 7F6A                                   STR_95 7ED0  
                                 STR_87 7E72                                   STR_96 7FCD  
                                 STR_88 7B93                                   STR_97 7FAC  
                                 STR_89 77E6                                   STR_98 7313  
                                 STR_99 7D35            __end_of_printFirmwareVersion 60D2  
                                 _BSEL0 000DF8                         __end_of___lldiv 6160  
                                 ?_utoa 0060                         __end_of_calcCRC 69DA  
                                 _T0CON 000FD5                                   u20035 0A8C  
                                 u20125 0C66                         __end_of___llmod 63DE  
                                 u20145 0CB4                                   u20155 0CEE  
                                 u20165 0D28                                   u21070 2BD6  
                                 u20415 11EA                                   u20175 0D62  
                                 u22105 4BBC                                   u20505 140E  
                                 u20185 0D9C                                   u21314 2D02  
                                 u21234 2C78                                   u22115 4BD8  
                                 u21315 2D00                                   u21235 2C76  
                                 u22055 37C0                                   _LATC1 007C59  
                                 u22056 37C6                                   _T3CON 000FB1  
                                 u22065 37F4                                   u22057 37D4  
                                 u20625 1EA2                                   u20545 151A  
                                 u22066 37FA                                   u21434 2EC4  
                                 u21274 2CBA                                   u22067 3808  
                                 u20635 1728                                   u21435 2EBE  
                                 u21275 2CB8                                   u22500 4E42  
                                 u22420 4DBE                                   u21700 28F6  
                                 u22165 69A4                                   u20725 191A  
                                 u22166 69A6                                   u22510 4E6C  
                                 u21710 2900                                   u22095 4BAC  
                                 u20735 195C                                   u22440 4DD6  
                                 u21464 2E86                                   u21720 290A  
                                 u20905 1CA4                                   u20745 19A4  
                                 u21465 2E82                                   u21705 28F4  
                                 u21474 2E92                                   u22507 4E3C  
                                 u22427 4DB8                                   u21475 2E8E  
                                 u21715 28FE                                   u22460 4DF4  
                                 u21484 2E9E                                   u22517 4E66  
                                 u21485 2E9A                                   u21725 2908  
                                 u22447 4DD0                                   u20935 1D44  
                                 u22480 4E12                                   u22810 64EE  
                                 u22467 4DEE                                   u22555 584A  
                                 u20955 1DDC                                   u20875 1C02  
                                 u20965 1E06                                   u22487 4E0C  
                                 u23544 6662                                   u22817 64E8  
                                 u23545 665E                                   u24195 51CA  
                                 u24710 5EE4                                   u22790 64B8  
                                 u24570 6880                                   u24715 5EDA  
                                 u24900 65A0                                   u22797 64B2  
                                 u25357 4096                                   u24577 687A  
                       __end_of___lwdiv 6648                                   u24907 6596  
                                 _ERRIE 007D1D                                   _ERRIF 007D25  
                                 u19650 65CA                                   u19475 5996  
                                 u19660 65F6                            _vscpPriority 01B0  
                                 u19657 65C4                                   u19905 08F8  
                                 u19667 65F0                                   u19755 53D0  
                                 u19915 092C                                   u19925 096A  
                                 i1l422 058C                                   i1l431 057C  
                                 u19935 09A4                                   i1l417 0494  
                       __end_of___lwmod 6856                                   u19865 0820  
                                 i1l419 058E                                   u19875 085A  
                                 i1l436 05C2                                   i1l428 058C  
                                 u19885 088C                                   i1l446 0638  
                                 i1l438 05D8                                   u19895 08C2  
                                 i1l456 075C                         sendCANFrame@dlc 008C  
                                 _MSEL0 000DF0                                   _MSEL1 000DF1  
                                 _MSEL2 000DF2                                   _RCREG 000FAE  
                                 _IRXIF 007D27                                   _RCSTA 000FAB  
                      printBinary@value 0022                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR3L 000FB2                                   _SPBRG 000FAF  
              writeRegisterExtended@reg 00B1                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                          __CFG_EBTR0$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                                   _bOpen 00EF  
               readRegisterExtended@reg 00B1                           __CFG_WRTD$OFF 000000  
                        Read_b_eep@badd 001F                          __CFG_EBTRB$OFF 000000  
                      _hexStringToBytes 5CA8                                   crc8@m 0062  
                                 _flags 0040                         __end_of_dpowers 6E44  
                Write_b_eep@GIE_BIT_VAL 0022                        _checkCANBusState 6A5C  
                       __end_of_isdigit 6A98                         ?_changeBaudrate 0001  
                                 _timer 00E2                                   atoi@a 0067  
                                 atoi@s 0062                                   main@c 00C5  
                                 _ultoa 50A8                              Interrupt@c 001D  
            ??_printNodeFirmwareVersion 0028                        _printErrors$1631 008B  
                                 tablat 000FF5                        _printErrors$1643 008F  
                      _printErrors$1637 008D                        _printErrors$1656 0093  
                      _printErrors$1665 0095                        _printErrors$1649 0091  
               ??_receiveSendEventCANAL 006C             __end_of_sendEscapedUartData 643E  
                                 plusw2 000FDB                                   utoa@c 0068  
                                 utoa@v 0066                                   status 000FD8  
                       __end_of_sprintf 26A4                 ??_receiveSendEventSLCAN 007A  
                       __end_of_strichr 6818                         __end_of_strcspn 66D4  
                       __end_of_toupper 6B02                         __end_of_stristr 6070  
                          __end_ofPL100 3C1A                            __end_ofPL110 275C  
                          __end_ofPL102 4B84                            __end_ofPL120 1FF8  
                          __end_ofPL112 1FD8                            __end_ofPL104 2EE2  
                          __end_ofPL130 534E                            __end_ofPL122 4518  
                          __end_ofPL114 5AC0                            __end_ofPL106 5A18  
                          __end_ofPL140 3E26                            __end_ofPL132 2028  
                          __end_ofPL124 2008                            __end_ofPL116 2B4A  
                          __end_ofPL108 4C8E                            __end_ofPL142 4C98  
                          __end_ofPL134 2766                            __end_ofPL126 574C  
                          __end_ofPL118 1FE8                            __end_ofPL144 2EEA  
                          __end_ofPL136 679C                            __end_ofPL128 2018  
                          __end_ofPL146 2770                            __end_ofPL138 401A  
                          __end_ofPL148 2EF8       __size_of_receivePrintEventVerbose 035E  
                   doModeVerbose@i_1293 02C1               ?_receivePrintEventVerbose 0001  
                   doModeVerbose@p_1300 02C5                     doModeVerbose@p_1415 02D0  
                   doModeVerbose@p_1353 02C7                     doModeVerbose@p_1392 02D2  
                        WriteUSART@data 001F                    _ECANSetOperationMode 6AD4  
                          _canInputFifo 0033                         __initialization 631A  
                doModeVerbose@page_1349 02B0           receiveSendMultiEventCANAL@dlc 0082  
                          __end_of_crc8 6906           receiveSendMultiEventCANAL@crc 0083  
                          __end_of_atoi 4E9C           receiveSendMultiEventCANAL@pos 0084  
                          __end_of_main 41F4                            __end_of_init 649C  
                          __end_of_itoa 6976                              _ReadTimer3 6B16  
                          __end_of_utoa 5CA8                     doModeVerbose@ifmode 02C9  
                            _Read_b_eep 6B3A                     doModeVerbose@maskno 02BE  
                      __end_of_Busy_eep 6B7E                     doModeVerbose@nodeid 02BC  
                         doModeSLCAN@id 0096                          __CFG_OSC$HSPLL 000000  
                         doModeSLCAN@rv 009C                       ??_ECANSendMessage 006B  
                        ?i1_WriteTimer0 0001              writeRegisterExtended@value 00B4  
                                ??_crc8 0026                   getVSCPFrame@pvscptype 006E  
                                ??_atoi 0064                  ??_vscp_restoreDefaults 0028  
                                ??_main 00C4                       readRegister@value 00B2  
                                ??_init 0028                                  ??_itoa 0026  
                                ??_utoa 0026                  doModeVerbose@mask_type 0298  
                         __activetblptr 000002                         _stateVscpDriver 0032  
                     __RegsToCANID@type 0004                    _can_transmitOverruns 00CA  
            ECANReceiveMessage@msgFlags 000B                     changeBaudrate@nBaud 0022  
                         ?_readRegister 00AF               __size_of__ECANPointBuffer 0076  
                                _B0TXEN 006FC2                                  _B1TXEN 006FC3  
                                _B2TXEN 006FC4                  doModeVerbose@preg_1357 028E  
                                _B3TXEN 006FC5                                  _B4TXEN 006FC6  
                                _B5TXEN 006FC7             readRegisterExtended@timeout 00B2  
            ECANReceiveMessage@savedPtr 000C                                  _CANCON 000F6F  
                      ___llmod@dividend 0065                                  STR_100 7F4F  
                                STR_101 7FED                                  STR_102 72DA  
                                STR_110 75E2                                  STR_111 7FF4  
                                STR_103 7A62                                  STR_104 7F6A  
                                STR_200 7FF4                                  STR_120 7FA2  
                                STR_112 7772                                  STR_121 7FF4  
                                STR_113 7FF4                                  STR_105 7F41  
                                STR_201 7E5F                                  STR_210 72DA  
                                STR_130 7FF4                                  STR_106 7FF4  
                                STR_202 7FC9                                  STR_114 77C0  
                                STR_122 73AE                                  STR_115 7FF4  
                                STR_203 7D94                                  STR_211 7C91  
                                STR_123 780C                                  STR_131 774B  
                                STR_107 7062                                  STR_132 7F6A  
                                STR_124 7FF4                                  STR_212 7F5D  
                                STR_220 7F00                                  STR_204 7F5D  
                                STR_140 7E9C                                  STR_300 7E74  
                                STR_108 76D6                                  STR_116 7635  
                                STR_301 72DA                                  STR_117 7FF4  
                                STR_109 7FF4                                  STR_141 7F82  
                                STR_221 7FDD                                  STR_213 7FDD  
                                STR_205 7FDD                                  STR_133 7F8E  
                                STR_125 7686                                  STR_230 72DA  
                                STR_222 72DA                                  STR_214 72DA  
                                STR_206 72DA                                  STR_126 7FF4  
                                STR_142 7FA7                                  STR_134 7FD9  
                                STR_302 7F10                                  STR_118 7E54  
                                STR_310 7DB7                                  STR_150 79AE  
                                STR_119 7F6A                                  STR_231 7BC3  
                                STR_143 7F48                                  STR_151 7F88  
                                STR_303 7F08                                  STR_207 7DD9  
                                STR_215 7CBC                                  STR_223 7BDB  
                                STR_127 7856                                  STR_135 75B6  
                                STR_128 7FF4                                  STR_144 7F3A  
                                STR_160 7EFD                                  STR_216 7F5D  
                                STR_208 7F5D                                  STR_232 7F00  
                                STR_224 7F00                                  STR_136 7EF0  
                                STR_304 7E32                                  STR_152 7ACE  
                                STR_240 70E2                                  STR_145 7EAE  
                                STR_233 7FDD                                  STR_225 7FDD  
                                STR_217 7FDD                                  STR_209 7FDD  
                                STR_153 7F7C                                  STR_305 7E92  
                                STR_161 7CA7                                  STR_129 787B  
                                STR_137 76AE                                  STR_241 72A7  
                                STR_234 72DA                                  STR_226 72DA  
                                STR_218 72DA                                  STR_250 6FF8  
                                STR_162 7FD1                                  STR_154 7EFD  
                                STR_146 7F76                                  STR_306 7E88  
                                STR_138 7E49                                  STR_170 796C  
                                STR_242 711D                                  STR_171 7F6A  
                                STR_139 7F6A                                  STR_147 7EE8  
                                STR_155 7C7B                                  STR_163 7C65  
                                STR_307 7C38                                  STR_219 7C21  
                                STR_227 7BC3                                  STR_243 7BAB  
                                STR_251 7A7D                                  STR_235 7347  
                                STR_308 72DA                                  STR_244 7F4F  
                                STR_180 7F4F                                  STR_228 7F00  
                                STR_156 7FD1                                  STR_236 7B01  
                                STR_172 7A98                                  STR_148 7A46  
                                STR_252 758A                                  STR_164 7502  
                                STR_260 71CA                                  STR_237 7F4F  
                                STR_245 7FED                                  STR_181 7FED  
                                STR_229 7FDD                                  STR_149 7FB1  
                                STR_165 7E7E                                  STR_309 7DA6  
                                STR_173 7CE5                                  STR_157 7C0A  
                                STR_261 7BF3                                  STR_253 7530  
                                _EEDATA 000FA8                                  STR_246 72DA  
                                STR_238 7FED                                  STR_190 7FED  
                                STR_174 7EC0                                  STR_182 7E26  
                                STR_262 792A                                  STR_166 78E6  
                                STR_158 760C                                  STR_254 737B  
                                STR_270 6E64                                  STR_239 72DA  
                                STR_183 7F00                                  STR_175 7EC8  
                                STR_191 7EA5                                  STR_159 7E3E  
                                STR_271 7CD1                                  STR_167 7A0C  
                                STR_263 76FD                                  STR_255 73E0  
                                STR_247 7202                                  STR_192 7F4F  
                                STR_184 7FDD                                  STR_176 7F64  
                                STR_168 7EB7                                  STR_256 79ED  
                                STR_280 7799                                  STR_264 765E  
                                STR_248 7191                                  STR_272 6F95  
                                STR_281 7313                                  STR_193 7FED  
                                STR_169 7FFC                                  STR_177 7FF2  
                                STR_185 7EE0                                  STR_273 7908  
                                STR_249 7724                                  STR_265 74D3  
                                STR_257 7412                                  STR_290 7FF8  
                                STR_178 7FF0                                  STR_186 7F56  
                                STR_194 7F25                                  STR_258 755E  
                                STR_274 74A4                                  STR_282 6FDC  
                                STR_266 6EFF                                  STR_283 72DA  
                                STR_195 7F4F                                  STR_187 7FED  
                                STR_291 7FE4                                  STR_179 7F2C  
                                STR_259 7B33                                  STR_275 7475  
                                STR_267 6F4B                                  STR_196 7FED  
                                STR_292 7FFA                                  STR_188 7F1E  
                                STR_284 7AB3                                  STR_276 701F  
                                STR_268 6EB2                                  STR_293 72DA  
                                STR_285 72DA                                  STR_189 7F4F  
                                STR_197 7F17                                  STR_269 7B4B  
                                STR_277 7444                                  STR_286 6FDC  
                                STR_198 7F4F                                  STR_294 7E0A  
                                STR_278 7239                                  STR_295 72DA  
                                STR_287 72DA                                  STR_199 7FED  
                                STR_279 70A4                                  STR_288 7DC8  
                                STR_296 7D49                                  STR_297 7FFC  
                                STR_289 7ED8                                  STR_298 7FF6  
                                STR_299 72DA                                  _EECON2 000FA7  
          __end_of_readRegisterExtended 4FAA                                  _CIOCON 000F73  
                                ?_ultoa 006D            ??_sendVSCPDriverCommandReply 0028  
                  __end_of_fifo_getFree 5A06                           ?_init_app_ram 0001  
                                i1l2067 6AC4                                  _MDSEL0 007BBE  
                                _MDSEL1 007BBF                                  i1l1640 3CA0  
                                i1l1650 3CFA                                  i1l1642 3CAE  
                                i1l1715 497E                                  i1l1716 4A36  
                                i1l1660 3D84                                  i1l1652 3D0A  
                                i1l1644 3CC2                                  i1l1636 3E16  
                                i1l1661 3D9E                                  i1l1629 3C52  
                                i1l1646 3CD6                                  i1l1639 3D20  
                                i1l1648 3CEA                                  i1l1683 4B28  
                                i1l1688 61CC                              _OpenTimer0 6A98  
                            _OpenTimer3 6A34                                  i1l7166 4988  
                                i1l7158 494C                                  i1l7176 4A12  
                                i1l7178 4A1C                         _init_app_eeprom 55BE  
                    __size_of_ReadUSART 001E                                  _RXB0IF 007D20  
                                _RXB1IF 007D21                                  _SPBRGH 000FB0  
                ECANReceiveMessage@data 0008                  ECANReceiveMessage@mode 0010  
                ECANReceiveMessage@temp 0011                                  _RXBnIE 007D19  
                                _RXBnIF 007D21                       getVSCPFrame@pData 0076  
            ??_sendVSCPDriverErrorFrame 0028                       getVSCPFrame@pSize 0074  
                    _doModeVerbose$1312 029B                      _doModeVerbose$1321 029F  
                    _doModeVerbose$1317 029D                      _doModeVerbose$1334 02A3  
                    _doModeVerbose$1326 02A1                      _doModeVerbose$1343 02A7  
                    _doModeVerbose$1339 02A5                      _doModeVerbose$1372 02AB  
                    _doModeVerbose$1381 02AD                      _doModeVerbose$1366 02A9  
                 ?_ECANSetOperationMode 0001                      __CANIDToRegs@Value 0062  
                    __size_of_Interrupt 0362                              _bLocalEcho 0101  
              readRegisterExtended@page 00AF                      __size_of_OpenUSART 005C  
                      fifo_write@nbytes 0005                          getCANFrame@pid 0025  
                                ___wmul 6892                              _bInitiated 00EE  
                        __CFG_STVREN$ON 000000                               ??___lldiv 0027  
                             ??_calcCRC 0028                                  _cmdbuf 0105  
                             ??___llmod 0027                        OpenTimer0@config 001F  
                receiveSendEventCANAL@i 0078                               ??___lwdiv 0023  
                             ??___lwmod 0023           _receivePrintEventVerbose$1511 0096  
         _receivePrintEventVerbose$1521 009A           _receivePrintEventVerbose$1506 0094  
         _receivePrintEventVerbose$1531 009E           _receivePrintEventVerbose$1516 0098  
         _receivePrintEventVerbose$1526 009C           _receivePrintEventVerbose$1536 00A0  
         _receivePrintEventVerbose$3691 0090                                  _memcpy 671A  
                                _memset 6A08                                  clear_0 6322  
                                clear_1 6336                                  clear_2 6348  
                                clear_3 6354                                  clear_4 6360  
                                clear_5 636C                        OpenTimer3@config 001F  
                         ?_sendCANFrame 0088                                  _strcat 6554  
                                _strchr 649C                                  _strcpy 69DA  
                                _strlen 6856                                  _wrkbuf 0155  
                                _strtok 5DDE                                  _strspn 66D4  
   __size_of_sendVSCPDriverCommandReply 00CC                               ??_isdigit 001F  
                receiveSendEventSLCAN@i 0082                        __end_of_printMDF 5DD0  
                          __mediumconst 6DEC                          ??_readRegister 00B3  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                            ?_printBinary 0001  
               __size_of_nibbleFromChar 003E                                  ultoa@c 0079  
                                ultoa@v 0075                            ?_printErrors 0001  
                             ??_sprintf 0075                               ??_strichr 0024  
                             ??_strcspn 0025                               ??_toupper 001F  
                        ??_init_app_ram 006B                               ??_stristr 0026  
                            _bTimestamp 00F0              ??_sendVSCPModeCapabilities 0028  
            doModeVerbose@mask_priority 0297                        __end_of_strnicmp 631A  
                            __accesstop 0060                 __end_of__initialization 6372  
                  _printFirmwareVersion 6070                   __size_of_getVSCPFrame 0086  
              doModeVerbose@bPersistent 02B3               receiveSendEventCANAL@data 0070  
                  doModeVerbose@id_1427 02CC                              _WriteUSART 6B02  
                        __pcstackCOMRAM 0001                __size_of_printStatistics 0198  
                           ?_ReadTimer3 001F                    _printStatistics$1612 008D  
                  _printStatistics$1606 008B                    _printStatistics$1624 0091  
                  _printStatistics$1618 008F                   _uart_transmitOverruns 00EA  
                           ?_Read_b_eep 001F                         ??i1_WriteTimer0 0003  
                         __end_of_ultoa 517A                              __end_ofPL2 1E62  
                            __end_ofPL4 1E72                              __end_ofPL6 1E80  
                            __end_ofPL8 1E9A                          ??_sendCANFrame 0028  
                     __end_of_ReadUSART 6AD4                           ?__RegsToCANID 0001  
           __size_of_ECANReceiveMessage 01FE                      sendVSCPFrame@pData 0095  
                       readRegister@reg 00AF                 __size_ofi1_fifo_getFree 0096  
                  sendVSCPDriverAck@crc 0066                      __size_of_findNodes 0134  
                        doModeSLCAN@dlc 009A                      __size_of_fifo_init 0032  
                    __size_of_fifo_read 00B8                  getVSCPFrame@pvscpclass 006C  
                       _fifo_canrxcount 0031                 __end_of_init_app_eeprom 5688  
                     __end_of_Interrupt 077A                           ReadUSART@data 0001  
                    readRegister@nodeid 00B7                          _status_led_cnt 002A  
                    __RegsToCANID@Value 0007                              _crc8_table 0300  
                     __end_of_OpenUSART 6554                 doModeVerbose@mask_class 0292  
             printNodeFirmwareVersion@i 00BD                            sprintf@width 0082  
      __end_of_printNodeFirmwareVersion 55BE                              _doModeVscp 2B4A  
                               ??_ultoa 0028                            _getVSCPFrame 5E74  
                            __pbssBANK0 00C6                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                           ?_OpenTimer0 0001                             ?_OpenTimer3 0001  
                            calcCRC@crc 0067                               ?_Busy_eep 0001  
                            calcCRC@len 0065                              __pnvCOMRAM 0041  
                 ?_printFirmwareVersion 0001                  ??_ECANSetOperationMode 001F  
                    __size_of_init_crc8 006A                           setFilter@eidh 0069  
                         setFilter@eidl 006A                           setFilter@sidh 0067  
                         setFilter@sidl 0068                        ??_doModeVscpNode 001F  
                            _nTimeStamp 00F2             ?_receiveSendMultiEventCANAL 0001  
              __end_of_hexStringToBytes 5D44                ECANSetOperationMode@mode 001F  
                               ?___wmul 0023                      __size_of_setFilter 024A  
                               _B0RXFUL 007107                                 _B1RXFUL 007187  
                  __ECANRxFilterHitInfo 002F                __end_of_checkCANBusState 6A7A  
                               _B2RXFUL 007207                                 _B3RXFUL 007287  
                               _B4RXFUL 007307                      _sendVSCPDriverNack 5B64  
                               _B5RXFUL 007387                        WriteTimer0@timer 0021  
                         putsUSART@data 0020                    _readRegisterExtended 4EAA  
                               ?_memcpy 001F                                 _ECANCON 000F77  
                               ?_memset 001F                           ??_WriteTimer0 0021  
                         ??_WriteTimer3 0021                        WriteTimer3@timer 0021  
                        ??__RegsToCANID 0005                           ??_Write_b_eep 0022  
                 sendVSCPFrame@priority 0093                                 _BRGCON1 000F70  
                               _BRGCON2 000F71                                 _BRGCON3 000F72  
                               ?_strcat 001F                                 ?_strchr 001F  
                               ?_strcpy 001F                                 ?_strlen 001F  
                               ?_strtok 0064                                 ?_strspn 0060  
                            _cntRxBytes 00CE                              _cntTxBytes 00D6  
                               i1l11210 0490                                 i1l11202 0434  
                               i1l11300 0710                                 i1l11220 04CE  
                               i1l11212 049C                                 i1l11204 043C  
                               i1l11142 3D34                                 i1l11054 5A66  
                               i1l11302 0748                                 i1l11222 04DA  
                               i1l11214 04A8                                 i1l11206 0442  
                               i1l11152 3D54                                 i1l11304 074C  
                               i1l11312 075A                                 i1l11240 053A  
                               i1l11232 0510                                 i1l11224 04EA  
                               i1l11216 04BA                                 i1l11208 047E  
                               i1l11170 3DA0                                 i1l11090 3C80  
                               i1l11074 3C40                                 i1l11306 074E  
                               i1l11250 056A                                 i1l11234 051C  
                               i1l11226 04F2                                 i1l11218 04CA  
                               i1l11084 3C6A                                 i1l11092 3C8A  
                               i1l11260 05B0                                 i1l11252 0574  
                               i1l11244 054C                                 i1l11228 04FE  
                               i1l11270 05D2                                 i1l11262 05B2  
                               i1l11254 0584                                 i1l11246 0558  
                               i1l11238 052E                                 i1l10800 616E  
                               i1l11192 3E00                                 i1l11280 0614  
                               i1l11272 05E0                                 i1l11256 0596  
                               i1l11264 05B4                                 i1l10810 619C  
                               i1l10802 6178                                 i1l11178 3DCC  
                               i1l11186 3DEA                                 i1l11098 3C8E  
                               i1l11290 067C                                 i1l11282 061C  
                               i1l11274 05E6                                 i1l11266 05BC  
                               i1l11258 059E                      __size_of_printGUID 00EA  
                               i1l10812 61A2                                 i1l10804 6182  
                               i1l11292 067E                                 i1l11284 0624  
                               i1l11268 05CA                                 i1l11276 05EA  
                               i1l10806 618C                                 i1l10830 4AC4  
                               i1l11294 06C4                                 i1l11286 0640  
                               i1l11278 05F2                                 i1l10808 6196  
                               i1l10816 61AE                                 i1l11296 06C8  
                               i1l11288 0648                     ?_sendVSCPDriverNack 0001  
                               i1l11298 070C                                 i1l10798 6166  
                            _fifo_write 493A                        ??_changeBaudrate 0022  
                    __size_of_printHelp 0180                      __size_of_printMode 0072  
                 sendVSCPFrame@vscptype 0091                   __size_of_fifo_getFree 0096  
               doModeVerbose@value_1351 02BA                 doModeVerbose@value_1375 02B2  
                     sendCANFrame@pdata 008D                              _made_table 0028  
                               _RXB0CON 000F60                                 _RXB1CON 000F50  
                               _RXB0FUL 007B07                        __ECANPointBuffer 6160  
                               _TXB0CON 000F40                                 _TXB1CON 000F30  
                               _TXB2CON 000F20                      __size_of_putsUSART 0054  
    __end_of_sendVSCPDriverCommandReply 5340              _sendVSCPDriverCommandReply 5274  
                               _RXFCON0 000DD4                                 _RXFCON1 000DD5  
                 _writeRegisterExtended 4C98        __size_of_receiveVSCPModeCanalMsg 00E6  
                __size_of_doModeVerbose 16D0                    sendEscapedUartData@c 0065  
                   __size_of_ReadTimer3 0012                  __size_of_sendVSCPFrame 00B6  
                   __size_of_Read_b_eep 0012                              ??_Busy_eep 001F  
      __end_of_sendVSCPDriverErrorFrame 573E          __size_of_receiveSendEventCANAL 01E6  
         __end_of_receiveSendEventCANAL 400C                    ??_sendVSCPDriverNack 0028  
            printFirmwareVersion@wrkbuf 006F          __size_of_receiveSendEventSLCAN 017E  
                       _ECANSendMessage 4698           __end_of_receiveSendEventSLCAN 450A  
                               __Hparam 0000                       __end_of_findNodes 493A  
                               __Lparam 0000                       __end_of_fifo_init 678E  
                     __end_of_fifo_read 5406                           ??_getCANFrame 0025  
                           ?_WriteUSART 0001              receiveVSCPModeCanalMsg@dlc 00AF  
                  __end_of_readRegister 54F4                               ?_printMDF 0001  
                               _bSilent 0102               receiveVSCPModeCanalMsg@id 00AB  
                         ??_doModeSLCAN 008F                                 ___lldiv 60EA  
                       __size_of___wmul 003C                                 _calcCRC 69AA  
                       getCANFrame@pdlc 0068                                 ___llmod 637C  
                               ___lwdiv 65FE                               _FIFOEMPTY 007BA7  
                               ___lwmod 6818                   ?_readRegisterExtended 00AF  
           printNodeFirmwareVersion@buf 00B9                    __end_of_init_app_ram 36FE  
                          _fifo_getFree 5970                            init_crc8@crc 0023  
                               __pcinit 631A                         __size_of_memcpy 0042  
                       __size_of_memset 002C                                 __ramtop 0600  
                   __size_of_OpenTimer0 001E                     __size_of_OpenTimer3 0028  
                             ?_strnicmp 0060                                 __ptext0 401A  
                               __ptext1 6B7E                                 __ptext2 2770  
                               __ptext3 5CA8                                 __ptext4 679C  
               receiveSendEventCANAL@id 007D                                 __ptext5 438C  
                               __ptext6 50A8                                 __ptext7 2B4A  
                               __ptext8 5688                                 __ptext9 5274  
                               crc8@crc 0060           printNodeFirmwareVersion@value 00BC  
                     ??_printStatistics 0028                               _T0CONbits 000FD5  
                       __size_of_strcat 0056                         __size_of_strchr 005C  
                       __size_of_strcpy 002E                         __size_of_strlen 003C  
                     __end_of_hexpowers 6E64                         __size_of_strtok 0096  
                       __size_of_strspn 0046                                 _dpowers 6E1C  
                     __end_of_init_crc8 62B2                                 _isdigit 6A7A  
        printNodeFirmwareVersion@nodeid 00B8                               _T3CONbits 000FB1  
                   __end_of_WriteTimer0 6B5E                     __end_of_WriteTimer3 6B3A  
                        _nibbleFromChar 679C                        ?_init_app_eeprom 0001  
                   __end_of_Write_b_eep 69AA                                 _sprintf 2028  
      __end_of_sendVSCPModeCapabilities 580E                       __end_of_setFilter 39F0  
                               _strichr 67DA                          doModeVerbose@c 02C3  
                        doModeVerbose@i 02B9                          doModeVerbose@p 02CA  
                               _strcspn 668E                                 _toupper 6AEC  
                           ?_doModeVscp 0001                                 _stristr 5FF6  
                  __size_of_printBinary 0046                    end_of_initialization 6372  
                     __end_of_octpowers 6E1C                    __size_of_printErrors 02B2  
                               memcpy@d 0060                                 memcpy@n 0023  
                               memcpy@s 0062                  ??_printFirmwareVersion 0028  
                        doModeVscp@mask 00B5                                 itoa@buf 0069  
                               memset@c 0021                               i1u1301_25 3C48  
                             i1u1301_27 3C4A                                 memset@n 0023  
                               itoa@val 006B                                 memset@p 0025  
                             i1u1330_20 04DA                               i1u1330_21 04D8  
                         __Lmediumconst 6DEC                               i1u1331_20 04EA  
                             i1u1331_21 04E8                               i1u1340_20 0574  
                             i1u1332_20 04FE                               i1u1340_21 0572  
                             i1u1332_21 04FC                               i1u1260_25 4A8C  
                             i1u1341_20 0584                               i1u1333_20 050E  
                             i1u1341_21 0582                               i1u1333_21 050C  
                  __end_of_sendCANFrame 693E                               i1u1261_25 4A9C  
                             i1u1350_20 061C                               i1u1342_20 0596  
                             i1u1334_20 051C                               i1u1350_21 061A  
                             i1u1342_21 0594                               i1u1334_21 051A  
                             i1u1262_25 4AC8                               i1u1351_20 0624  
                             i1u1343_20 059E                               i1u1335_20 052C  
                             i1u1327_20 043C                               i1u1351_21 0622  
                             i1u1343_21 059C                               i1u1335_21 052A  
                             i1u1327_21 043A                               i1u1352_20 0640  
                             i1u1344_20 05BC                               i1u1336_20 053A  
                             i1u1328_20 047E                               i1u1352_21 063E  
                             i1u1344_21 05BA                               i1u1336_21 0538  
                             i1u1328_21 047C                               i1u1353_20 0648  
                             i1u1345_20 05CA                               i1u1337_20 054A  
                             i1u1329_20 049C                               i1u1353_21 0646  
                             i1u1345_21 05C8                               i1u1337_21 0548  
                             i1u1329_21 049A                               i1u1354_20 067C  
                             i1u1346_20 05D2                               i1u1338_20 0558  
                             i1u1354_21 067A                               i1u1346_21 05D0  
                             i1u1338_21 0556                               i1u1355_20 06C4  
                             i1u1347_20 05E0                               i1u1339_20 0568  
                             i1u1355_21 06C2                               i1u1347_21 05DE  
                             i1u1339_21 0566                               i1u1356_20 070C  
                             i1u1348_20 05F2                               i1u1356_21 070A  
                             i1u1348_21 05F0                               i1u1357_20 0748  
                             i1u1349_20 0614                               i1u1357_21 0746  
                             i1u1349_21 0612                               i1u1358_20 0758  
                             i1u1358_21 0756                               i1u1297_25 5A3E  
                   _can_receiveOverruns 00C6                 receiveSendEventSLCAN@id 007D  
                     __end_of_printGUID 5094                         ___lldiv@divisor 0023  
                     __end_of_printHelp 4698     receiveSendMultiEventCANAL@timestamp 0079  
                       ___lldiv@counter 0060                       __end_of_printMode 6248  
                     ECANSendMessage@id 0063                       ECANSendMessage@pb 006C  
          __size_of_sendEscapedUartData 0060                               _RXF10EIDH 000D76  
                             _RXF10EIDL 000D77                               _RXF11EIDH 000D7A  
                             _RXF11EIDL 000D7B                              ??_printMDF 0028  
                             _RXF12EIDH 000D82                               _RCSTAbits 000FAB  
                             _RXF12EIDL 000D83                               _RXF13EIDH 000D86  
                             _RXF13EIDL 000D87                               _RXF14EIDH 000D8A  
                             _RXF14EIDL 000D8B                               _RXF15EIDH 000D92  
                             _RXF15EIDL 000D93                               _RXF10SIDH 000D74  
                             _RXF10SIDL 000D75                               _RXF11SIDH 000D78  
                             _RXF11SIDL 000D79                               _RXF12SIDH 000D80  
                             _RXF12SIDL 000D81                                 postdec1 000FE5  
                               postdec2 000FDD                               _RXF13SIDH 000D84  
                             _RXF13SIDL 000D85                               _RXF14SIDH 000D88  
                             _RXF14SIDL 000D89                 __size_of_ECANInitialize 0080  
                             _RXF15SIDH 000D90                               _RXF15SIDL 000D91  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                       __end_of_putsUSART 65FE  
                    __ECANPointBuffer@b 0004                           _doModeVerbose 077E  
                               utoa@buf 0060       __size_of_printNodeFirmwareVersion 00CA  
                               utoa@val 0062               ?_printNodeFirmwareVersion 0001  
                         _sendVSCPFrame 580E                                 strlen@s 001F  
                            _sequencyno 00F3                              _timekeeper 00DE  
                             _RXM0EXIDM 0078CB                                 strspn@i 0025  
                            ??_strnicmp 0023                               _PORTCbits 000F82  
                   __end_of_getCANFrame 5960                              findNodes@i 00C3  
                        i1_fifo_getFree 5A18                  __end_of_nibbleFromChar 67DA  
                   __end_of_doModeSLCAN 2B30                             ?_fifo_write 0001  
                            fifo_init@f 001F           __size_of_vscp_restoreDefaults 0008  
                            fifo_read@f 001F                              fifo_read@i 0066  
                            fifo_read@p 0064                               _TRISBbits 000F93  
                             _TRISCbits 000F94                  ?_writeRegisterExtended 00AF  
     sendVSCPDriverCommandReply@cmdCode 0066                     __size_of_WriteUSART 0014  
           sendVSCPModeCapabilities@crc 0066                 __end_of_ECANSendMessage 4806  
                  _uart_receiveOverruns 00E6                _receivePrintEventVerbose 2EF8  
                            _vscpNodeId 01AF                           ?__CANIDToRegs 0021  
                  __end_of__RegsToCANID 4B2A                               _TXSTAbits 000FAC  
                    i1WriteTimer0@timer 0003                       doModeVerbose@page 02BF  
                     doModeVerbose@preg 028C                          _init_crc8$2208 001F  
                ??_readRegisterExtended 00B6                          ?_doModeVerbose 0001  
                          ??_ReadTimer3 0021                            ??_Read_b_eep 0021  
                        ?_sendVSCPFrame 008F                  __end_ofi1_fifo_getFree 5AAE  
                        __end_of___wmul 68CE                     __size_of_doModeVscp 0316  
                           _WriteTimer0 6B4C                             _WriteTimer3 6B28  
                           _Write_b_eep 6976                   doModeVerbose@baudcode 02B4  
                        __end_of_memcpy 675C                          __end_of_memset 6A34  
     __size_of_sendVSCPDriverErrorFrame 00B6               ?_sendVSCPDriverErrorFrame 0001  
                       ?_nibbleFromChar 0001                          __end_of_strcat 65AA  
                        __end_of_strchr 64F8                          __end_of_strcpy 6A08  
                        __end_of_strlen 6892                doModeVerbose@filter_type 0295  
                        __end_of_strtok 5E74                          __end_of_strspn 671A  
                           __end_ofPL10 374A                             __end_ofPL20 3A06  
                           __end_ofPL12 1EE4                             __end_ofPL30 5DDE  
                           __end_ofPL22 1F00                             __end_ofPL14 2EA6  
                           __end_ofPL40 1F24                             __end_ofPL32 4EAA  
                           __end_ofPL24 4A66                             __end_ofPL16 26C2  
                           __end_ofPL50 1F36                             __end_ofPL42 4C56  
                           __end_ofPL34 60EA                             __end_ofPL26 2ED0  
                           __end_ofPL18 3BF8                             __end_ofPL60 1F6C  
                           __end_ofPL52 2B3E                             __end_ofPL44 376A  
                           __end_ofPL36 26F8                             __end_ofPL28 26D2  
                           __end_ofPL70 3C08                             __end_ofPL62 2712  
                           __end_ofPL54 5422                             __end_ofPL46 3788  
                           __end_ofPL38 1F10                             __end_ofPL80 1FB2  
                           __end_ofPL72 1F84                             __end_ofPL64 5C08  
                           __end_ofPL56 1F52                             __end_ofPL48 37A6  
                           __end_ofPL90 4B5E                             __end_ofPL82 2736  
                           __end_ofPL74 1F9C                             __end_ofPL66 5970  
                           __end_ofPL58 4B38                             __end_ofPL92 518E  
                           __end_ofPL84 1FC6                             __end_ofPL76 4C68  
                           __end_ofPL68 5B64                             __end_ofPL94 4C7C  
                           __end_ofPL86 274A                             __end_ofPL78 2728  
                           __end_ofPL96 50A8                             __end_ofPL88 4B4A  
                           __end_ofPL98 4B72                     start_initialization 631A  
                             _ReadUSART 6AB6                         findNodes@nFound 00C0  
                 doModeVerbose@reg_1350 02B1                   doModeVerbose@filterno 02B8  
               _receiveVSCPModeCanalMsg 518E                     __CFG_BOREN$BOACTIVE 000000  
                          doModeSLCAN@c 009B                            ??_OpenTimer0 001F  
                          ??_OpenTimer3 001F                    setFilter@bPersistent 0027  
                    __end_of_ReadTimer3 6B28  sendVSCPDriverCommandReply@cmdReplyCode 0067  
                             _Interrupt 0418                          ??__CANIDToRegs 0060  
            readRegisterExtended@nodeid 00BA                               _OpenUSART 64F8  
                    __end_of_Read_b_eep 6B4C                     sendVSCPFrame@nodeid 0092  
                       ___llmod@divisor 0069                   __size_of_readRegister 00D2  
                       ___llmod@counter 0027                       __size_of_Busy_eep 0006  
                 ECANReceiveMessage@ptr 0012                     __size_of_fifo_write 00FE  
                 __size_of_init_app_ram 01F6                          _findNodes$1711 00BE  
              __end_of__ECANPointBuffer 61D6                       __CANIDToRegs@type 0027  
                            init_crc8@i 0024                              init_crc8@j 0021  
                           _getCANFrame 58C4                                ??___wmul 0027  
                      setFilter@nFilter 0066       __size_of_sendVSCPModeCapabilities 00C2  
                     ?_hexStringToBytes 0023                             _doModeSLCAN 2770  
             ?_sendVSCPModeCapabilities 0001                       ?_checkCANBusState 0001  
            __end_of_ECANReceiveMessage 3E18                                ??_memcpy 0025  
                   readRegister@timeout 00B0                         ?i1_fifo_getFree 0001  
                              ??_memset 0025                   sendVSCPDriverNack@crc 0066  
              doModeVerbose@mask_nodeid 0299                   __end_ofi1_WriteTimer0 6B70  
                    ??_hexStringToBytes 0060                      ??_checkCANBusState 001F  
                              ??_strcat 0023                                ??_strchr 0023  
                              ??_strcpy 0023                                ??_strlen 0021  
                    __end_of_OpenTimer0 6AB6                      __end_of_OpenTimer3 6A5C  
                              ??_strtok 0027                                ??_strspn 0025  
                           __pbssBIGRAM 0400                             __pbssCOMRAM 0028  
                            ?_ReadUSART 0001                           __pcstackBANK0 0060  
                         __pcstackBANK1 01B3                           __pcstackBANK2 0288  
                   __end_of__stringdata 7FFE                            _readRegister 5422  
                          _isdigit$3283 0020                   __size_of_sendCANFrame 0038  
           ?_sendVSCPDriverCommandReply 0066             sendVSCPDriverErrorFrame@crc 0067  
                      ?_ECANSendMessage 0063                       sendVSCPFrame@size 0094  
                          _init_app_ram 3508                              ?_Interrupt 0001  
                            ?_OpenUSART 001F                             sprintf@_val 0084  
                           sprintf@flag 0089                             sprintf@prec 0080  
                             __pnvBANK0 00FC                        _ledFunctionality 0041  
              doModeVerbose@nodeid_1348 02BD                doModeVerbose@nodeid_1374 02C2  
                          setFilter@val 0023                        ___lwdiv@dividend 001F  
                       ??_doModeVerbose 01B3           __size_of_ECANSetOperationMode 0018  
                       _printStatistics 41F4                            ??_WriteUSART 001F  
                       ??_sendVSCPFrame 0097                          _ECANInitialize 5EFA  
                     _sendVSCPDriverAck 5AC0                           __pmediumconst 6DEC  
                              ?___lldiv 001F                                ?_calcCRC 0063  
                              ?___llmod 0065                               _findNodes 4806  
                              ?___lwdiv 001F                                ?___lwmod 001F  
                             _fifo_init 675C                               _fifo_read 534E  
                    ?_sendVSCPDriverAck 0001                       __size_of_printMDF 008C  
                           __pintcodelo 0418                            _sendCANFrame 6906  
                     WriteTimer0@timer0 001F                             _COMSTATbits 000F74  
                              ?_isdigit 0001               ??_receiveVSCPModeCanalMsg 008F  
                   ??_sendVSCPDriverAck 0028                       __size_of_strnicmp 0068  
                       printGUID@nodeid 00B8                       WriteTimer3@timer3 001F  
                   _sendEscapedUartData 63DE                               _hexpowers 6E44  
                      ___lwdiv@quotient 0024                               _init_crc8 6248  
                 __size_of__RegsToCANID 00C4               doModeVerbose@filter_class 0290  
                              ?_sprintf 006D                                ?_strichr 0020  
                           _cntRxFrames 00D2                            ??_doModeVscp 00B0  
                              ?_strcspn 0060                                ?_toupper 0001  
                              ?_stristr 0066                      __end_of_WriteUSART 6B16  
                        __size_of_ultoa 00D2                             _cntTxFrames 00DA  
                       _can_inputBuffer 0400                          ___wmul@product 0060  
                sendVSCPFrame@vscpclass 008F                               _setFilter 37A6  
                           strnicmp@len 0064                               _octpowers 6DEC  
                              _PIE1bits 000F9D                                _PIE2bits 000FA0  
           __size_of_sendVSCPDriverNack 0096                  __end_of_ECANInitialize 5F7A  
             __end_of_sendVSCPDriverAck 5B56                                i1u700_25 495A  
                              i1u701_25 496A                                i1u703_25 4A00  
                              _PIR1bits 000F9E                   _receiveSendEventCANAL 3E26  
                              _PIR2bits 000FA1                        ECANSendMessage@i 0085  
                      ECANSendMessage@j 0080                    ?_sendEscapedUartData 0063  
                 _receiveSendEventSLCAN 438C                                _RXF0EIDH 000F02  
                              _RXF0EIDL 000F03                                _RXB0OVFL 007BA7  
                              _RXF1EIDH 000F06                                _RXF1EIDL 000F07  
                              _RXB1OVFL 007BA6                                _RXF2EIDH 000F0A  
                              _RXF2EIDL 000F0B                                _RXF3EIDH 000F0E  
                              _RXF3EIDL 000F0F                                _RXF4EIDH 000F12  
                              _RXF4EIDL 000F13                                _RXF5EIDH 000F16  
                              _RXF5EIDL 000F17                                _RXF6EIDH 000D62  
           receiveSendMultiEventCANAL@i 007D                                _RXF6EIDL 000D63  
                     hexStringToBytes@i 0067                                _RXF7EIDH 000D66  
                              _RXF0SIDH 000F00                       hexStringToBytes@p 0065  
                              _RXF7EIDL 000D67                                _RXF0SIDL 000F01  
                             _printGUID 4FAA                                _RXF8EIDH 000D6A  
                              _RXF1SIDH 000F04                                _RXF8EIDL 000D6B  
                              _RXF1SIDL 000F05                                _RXF9EIDH 000D72  
                              _RXF2SIDH 000F08                                _RXF9EIDL 000D73  
                              _RXF2SIDL 000F09                                _RXF3SIDH 000F0C  
                              _RXF3SIDL 000F0D                              printGUID@i 00BD  
                              _RXF4SIDH 000F10                                _RXF4SIDL 000F11  
                              _RXF5SIDH 000F14                                _RXF5SIDL 000F15  
                              _RXF6SIDH 000D60                                _RXF6SIDL 000D61  
                              _RXM0EIDH 000F1A                                _RXF7SIDH 000D64  
                              _RXM0EIDL 000F1B                                _RXF7SIDL 000D65  
                              _RXM1EIDH 000F1E                                _RXF8SIDH 000D68  
                              _RXM1EIDL 000F1F                                _RXF8SIDL 000D69  
                              _RXF9SIDH 000D70                                _RXF9SIDL 000D71  
                              _RXFBCON0 000DE0                                _RXFBCON1 000DE1  
                              _RXFBCON2 000DE2                                _RXFBCON3 000DE3  
                              _RXFBCON4 000DE4                                _RXFBCON5 000DE5  
                              _RXFBCON6 000DE6                                _RXFBCON7 000DE7  
                            ?_findNodes 0001                               _printHelp 4518  
                              _RXM0SIDH 000F18                                _RXM0SIDL 000F19  
                              _RXM1SIDH 000F1C                                _RXM1SIDL 000F1D  
                             _printMode 61D6                              ?_fifo_init 001F  
                            ?_fifo_read 001F                                _RXERRCNT 000F75  
                    __end_of_doModeVscp 2E60                                _TXERRCNT 000F76  
                  __end_of__CANIDToRegs 4C42                               _putsUSART 65AA  
                           __stringdata 6E64                       ___wmul@multiplier 0023  
                          __RegsToCANID 4A66                               _vscpClass 01AD  
               ??_writeRegisterExtended 00B6                         Write_b_eep@badd 001F  
                       Write_b_eep@bdat 0021                            ??_fifo_write 0009  
               __size_of_doModeVscpNode 0002              ??_receivePrintEventVerbose 008B  
                           ??_ReadUSART 0001                     getVSCPFrame@pNodeId 0070  
                         ??_printBinary 0020                        doModeVerbose@reg 02C0  
                         ??_printErrors 0028                              ?_init_crc8 0001  
                    _serial_inputBuffer 0200                               _rwtimeout 0104  
             writeRegisterExtended@page 00AF    __end_of_receiveVSCPModeMultiCanalMsg 6B82  
 __size_of_receiveVSCPModeMultiCanalMsg 0002            _receiveVSCPModeMultiCanalMsg 6B80  
                           ??_Interrupt 0014                 __end_of_printStatistics 438C  
                           ??_OpenUSART 0021            writeRegisterExtended@timeout 00B2  
                              _Busy_eep 6B78                 __size_of_changeBaudrate 007C  
              __size_of_init_app_eeprom 00CA                              ?_setFilter 0023  
                       OpenUSART@config 0021                          findNodes@value 00C1  
          __end_of_vscp_restoreDefaults 6B78                              _EECON1bits 000FA6  
         __size_of_printFirmwareVersion 0062         __end_of_receiveVSCPModeCanalMsg 5274  
                       ?_ECANInitialize 0001                                __Hrparam 0000  
                  ECANReceiveMessage@id 000E                   ??_sendEscapedUartData 0028  
                              __Lrparam 0000                        __CANIDToRegs@val 0023  
                    __end_of_fifo_write 4A38                        __CANIDToRegs@ptr 0021  
                      doModeVscp@filter 00B4             receiveVSCPModeCanalMsg@data 00A3  
                            ?_printGUID 0001                             doModeVscp@c 00B6  
                            ?_printHelp 0001                              ?_printMode 0001  
                       nibbleFromChar@c 001F                        ??_nibbleFromChar 001F  
                      __size_of___lldiv 0076                        __size_of_calcCRC 0030  
                      __size_of___llmod 0062                        __size_of___lwdiv 004A  
                      __size_of___lwmod 003E                            ?_WriteTimer0 001F  
                          ?_WriteTimer3 001F                        getCANFrame@pdata 006A  
                          ?_Write_b_eep 001F                              ?_putsUSART 0020  
                       fifo_read@nbytes 0023                              sprintf@idx 0078  
                 hexStringToBytes@inhex 0026                                calcCRC@j 0066  
                            strcat@from 0021                                calcCRC@p 0063  
                      __size_of_isdigit 001E                         ___lwdiv@divisor 0021  
                       ___lwdiv@counter 0023                                __ptext10 574C  
                              __ptext11 6B80                                __ptext20 68CE  
                              __ptext12 518E                                __ptext21 6248  
                              __ptext13 671A                                __ptext30 4FAA  
                              __ptext22 077E                                __ptext14 5AC0  
                              __ptext31 54F4                                __ptext23 5F7A  
                              __ptext15 5B64                                __ptext40 3256  
                              __ptext32 6554                                __ptext24 4C98  
                              __ptext16 69AA                                __ptext41 41F4  
                              __ptext33 5422                                __ptext25 6648  
                              __ptext17 3E26                                __ptext50 6AEC  
                              __ptext42 4DA2                                __ptext34 580E  
                              __ptext26 4EAA                                __ptext18 3A06  
                              __ptext51 6856                                __ptext43 5DDE  
                              __ptext35 6906                                __ptext27 69DA  
                              __ptext19 63DE                                __ptext60 60EA  
                              __ptext52 2EF8                                __ptext44 668E  
                              __ptext36 4698                                __ptext28 4806  
                              __ptext61 6A7A                                __ptext53 6B16  
                              __ptext45 66D4                                __ptext37 6A5C  
                              __ptext29 5D44                                __ptext70 65AA  
                              __ptext62 6070                                __ptext54 5E74  
                              __ptext46 649C                                __ptext38 6A08  
                              __ptext71 6B02                                __ptext63 693E  
                              __ptext55 58C4                                __ptext47 5FF6  
                              __ptext39 4518                                __ptext80 37A6  
                              __ptext72 643E                                __ptext64 5C08  
                              __ptext56 534E                                __ptext48 67DA  
                              __ptext81 6976                                __ptext73 5EFA  
                              __ptext65 6818                                __ptext57 2028  
                              __ptext49 62B2                                __ptext90 5A18  
                              __ptext82 6B78                                __ptext74 6B28  
                              __ptext66 65FE                                __ptext58 6892  
                              __ptext91 3C1A                                __ptext83 6AD4  
                              __ptext75 6A34                                __ptext67 6B70  
                              __ptext59 637C                                __ptext92 4A66  
                              __ptext84 6B3A                                __ptext76 6A98  
                              __ptext68 55BE                                __ptext93 6160  
                              __ptext85 6B4C                                __ptext77 64F8  
                              __ptext69 61D6                                __ptext94 493A  
                              __ptext86 675C                                __ptext78 3508  
                              __ptext95 6AB6                                __ptext87 5970  
                              __ptext79 4B84                                __ptext89 6B5E  
              receiveSendEventCANAL@dlc 0081                receiveSendEventCANAL@crc 0082  
                        printMDF@nodeid 00B8                           ?_getVSCPFrame 006C  
                            strichr@chr 0022                        __size_of_sprintf 067C  
                            strichr@ptr 0020                        __size_of_strichr 003E  
                      __size_of_strcspn 0046                        __size_of_toupper 0016  
                      __size_of_stristr 007A                              strcpy@from 0021  
                        printGUID@value 00BC                     __end_of_printBinary 668E  
                         __size_of_crc8 0038                           __size_of_atoi 00FA  
                         __size_of_main 01DA                           __size_of_init 005E  
                         __size_of_itoa 0038           ?_receiveVSCPModeMultiCanalMsg 0001  
                   __end_of_printErrors 3508                           __size_of_utoa 00A0  
                ?_receiveSendEventCANAL 0001                              strnicmp@s1 0060  
                            strnicmp@s2 0062                           init_app_ram@i 0084  
            __size_of_sendVSCPDriverAck 0096          receiveSendMultiEventCANAL@data 0070  
                ?_receiveSendEventSLCAN 0001                        ??i1_fifo_getFree 0003  
              _printNodeFirmwareVersion 54F4                     ECANSendMessage@data 0067  
              ECANSendMessage@tempBSEL0 0081                                _printMDF 5D44  
                             printMDF@i 00BC                               printMDF@p 00BA  
                          ?_getCANFrame 0068                     ECANSendMessage@mode 007E  
                   ECANSendMessage@temp 0084                       ?__ECANPointBuffer 0001  
          ??_receiveSendMultiEventCANAL 006C                                atoi@sign 0066  
                           ??_findNodes 0028                            ?_doModeSLCAN 0001  
                           ??_fifo_init 0025                             ??_fifo_read 0060  
                              _vscpData 01A5           __size_of_readRegisterExtended 0100  
                              main@argc 01C7                                main@argv 01C9  
                              _vscpSize 01B1                      ??__ECANPointBuffer 0004  
                              _vscpType 01B2                             _RXB0FILHIT0 007B00  
     sendVSCPDriverErrorFrame@errorcode 0066                         doModeVerbose@id 0288  
                       doModeVerbose@rv 02AF                                _strnicmp 62B2  
                      init_app_eeprom@i 0023             writeRegisterExtended@nodeid 00BA  
                         Interrupt@fail 001E                         _serialInputFifo 00F4  
                         findNodes@bDot 00C2                             _RXB1CONbits 000F50  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                        OpenUSART@spbrg 001F                     ECANReceiveMessage@i 000F  
                              memcpy@d1 001F                                memcpy@s1 0021  
             receivePrintEventVerbose@i 00A2                                itoa@base 006D  
                              isdigit@c 0021                      _ECANReceiveMessage 3C1A  
                              memset@p1 001F                             ??_init_crc8 001F  
                             ultoa@base 0073                          ??_getVSCPFrame 0078  
             __size_of_hexStringToBytes 009C               __size_of_checkCANBusState 001E  
                       sendVSCPFrame@id 00AB                                intlevel1 0000  
                             sprintf@ap 007F                               sprintf@sp 006D  
                  hexStringToBytes@size 0025                               strchr@chr 0021  
                      ?_printStatistics 0001                receiveSendEventSLCAN@dlc 0081  
                      ___lwmod@dividend 001F                               strchr@ptr 001F  
                   ?_ECANReceiveMessage 0008                        ___lldiv@dividend 001F  
                           ??_setFilter 0060                           printMDF@value 00B9  
   __size_of_receiveSendMultiEventCANAL 01E2                           fifo_getFree@f 001F  
                             strcspn@s1 0060                               strcspn@s2 0062  
    receiveSendMultiEventCANAL@msgcount 0078                 ECANSendMessage@msgFlags 006A  
                            _OSCCONbits 000FD3                               strnicmp@r 0025  
                             stristr@s1 0066                               stristr@s2 0068  
                    ECANSendMessage@ptr 0086                       ??_init_app_eeprom 0023  
                 __size_of__CANIDToRegs 00BE                             ??_printGUID 0028  
                           ??_printHelp 0024                             ??_printMode 0024  
              _sendVSCPDriverErrorFrame 5688                           ?_fifo_getFree 001F  
                ECANSendMessage@dataLen 0069                     __ECANPointBuffer@pt 0005  
                  ??_ECANReceiveMessage 000C                             ??_putsUSART 0022  
                              utoa@base 0064                                ultoa@buf 006D  
                              ultoa@val 006F                           fifo_init@size 0023  
                              sprintf@c 0088                                sprintf@f 006F  
                   hexStringToBytes@buf 0023                                strcat@cp 0023  
                   hexStringToBytes@len 0063                          _doModeVscpNode 6B7E  
                              strcat@to 001F        __end_of_receivePrintEventVerbose 3256  
                ECANSendMessage@buffers 007F                        ___lldiv@quotient 0061  
                       ___lwmod@divisor 0021            __end_of_ECANSetOperationMode 6AEC  
                  _vscp_restoreDefaults 6B70                            printGUID@buf 00B9  
                              strcpy@cp 0023                                strlen@cp 0021  
                              strcpy@to 001F                         ___lwmod@counter 0023  
                              strcspn@i 0025                                toupper@c 001F  
                           _printBinary 6648                                strtok@s1 0064  
                              strtok@s2 0066                                strspn@s1 0060  
                              strspn@s2 0062                              _RXM1EXIDEN 0078EB  
                              strtok@sp 002C                  ECANSendMessage@tempPtr 0082  
                           _printErrors 3256                            fifo_init@buf 0021  
                          fifo_read@buf 0021           sendVSCPDriverCommandReply@crc 0068  
                        _changeBaudrate 5F7A                            __CANIDToRegs 4B84  
                __size_ofi1_WriteTimer0 0012                            _USART_Status 002E  
             readRegisterExtended@value 00B4                _sendVSCPModeCapabilities 574C  
        receiveSendEventCANAL@timestamp 0079                __size_of_ECANSendMessage 016E  
