

Microchip Technology PIC18 PRO Macro Assembler V1.21 build 54009 
                                                                                               Thu Oct 08 23:25:36 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 54009
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   115                           	psect	pa_nodes,global,class=CODE,delta=1
   116  0000                     tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           prodh	equ	0xFF4
   121                           prodl	equ	0xFF3
   122                           intcon	equ	0xFF2
   123                           indf0	equ	0xFEF
   124                           fsr0h	equ	0xFEA
   125                           fsr0l	equ	0xFE9
   126                           wreg	equ	0xFE8
   127                           indf1	equ	0xFE7
   128                           postinc1	equ	0xFE6
   129                           postdec1	equ	0xFE5
   130                           fsr1h	equ	0xFE2
   131                           fsr1l	equ	0xFE1
   132                           indf2	equ	0xFDF
   133                           postinc2	equ	0xFDE
   134                           postdec2	equ	0xFDD
   135                           plusw2	equ	0xFDB
   136                           fsr2h	equ	0xFDA
   137                           fsr2l	equ	0xFD9
   138                           status	equ	0xFD8
   139                           
   140                           	psect	mediumconst
   141  006B0A                     __pmediumconst:
   142                           	opt stack 0
   143  006B0A                     _octpowers:
   144                           	opt stack 0
   145  006B0A  0001               	dw	1
   146  006B0C  0000               	dw	0
   147  006B0E  0008               	dw	8
   148  006B10  0000               	dw	0
   149  006B12  0040               	dw	64
   150  006B14  0000               	dw	0
   151  006B16  0200               	dw	512
   152  006B18  0000               	dw	0
   153  006B1A  1000               	dw	4096
   154  006B1C  0000               	dw	0
   155  006B1E  8000               	dw	32768
   156  006B20  0000               	dw	0
   157  006B22  0000               	dw	0
   158  006B24  0004               	dw	4
   159  006B26  0000               	dw	0
   160  006B28  0020               	dw	32
   161  006B2A  0000               	dw	0
   162  006B2C  0100               	dw	256
   163  006B2E  0000               	dw	0
   164  006B30  0800               	dw	2048
   165  006B32  0000               	dw	0
   166  006B34  4000               	dw	16384
   167  006B36  0000               	dw	0
   168  006B38  0000               	dw	0
   169  006B3A                     __end_of_octpowers:
   170                           	opt stack 0
   171  006B3A                     _dpowers:
   172                           	opt stack 0
   173  006B3A  0001               	dw	1
   174  006B3C  0000               	dw	0
   175  006B3E  000A               	dw	10
   176  006B40  0000               	dw	0
   177  006B42  0064               	dw	100
   178  006B44  0000               	dw	0
   179  006B46  03E8               	dw	1000
   180  006B48  0000               	dw	0
   181  006B4A  2710               	dw	10000
   182  006B4C  0000               	dw	0
   183  006B4E  86A0               	dw	34464
   184  006B50  0001               	dw	1
   185  006B52  4240               	dw	16960
   186  006B54  000F               	dw	15
   187  006B56  9680               	dw	38528
   188  006B58  0098               	dw	152
   189  006B5A  E100               	dw	57600
   190  006B5C  05F5               	dw	1525
   191  006B5E  CA00               	dw	51712
   192  006B60  3B9A               	dw	15258
   193  006B62                     __end_of_dpowers:
   194                           	opt stack 0
   195  006B62                     _hexpowers:
   196                           	opt stack 0
   197  006B62  0001               	dw	1
   198  006B64  0000               	dw	0
   199  006B66  0010               	dw	16
   200  006B68  0000               	dw	0
   201  006B6A  0100               	dw	256
   202  006B6C  0000               	dw	0
   203  006B6E  1000               	dw	4096
   204  006B70  0000               	dw	0
   205  006B72  0000               	dw	0
   206  006B74  0001               	dw	1
   207  006B76  0000               	dw	0
   208  006B78  0010               	dw	16
   209  006B7A  0000               	dw	0
   210  006B7C  0100               	dw	256
   211  006B7E  0000               	dw	0
   212  006B80  1000               	dw	4096
   213  006B82                     __end_of_hexpowers:
   214                           	opt stack 0
   215  0000                     _BRGCON1	set	3952
   216  0000                     _BRGCON2	set	3953
   217  0000                     _BRGCON3	set	3954
   218  0000                     _BSEL0	set	3576
   219  0000                     _CANCON	set	3951
   220  0000                     _CIOCON	set	3955
   221  0000                     _COMSTATbits	set	3956
   222  0000                     _ECANCON	set	3959
   223  0000                     _EEADR	set	4009
   224  0000                     _EECON1bits	set	4006
   225  0000                     _EECON2	set	4007
   226  0000                     _EEDATA	set	4008
   227  0000                     _INTCONbits	set	4082
   228  0000                     _MSEL0	set	3568
   229  0000                     _MSEL1	set	3569
   230  0000                     _MSEL2	set	3570
   231  0000                     _OSCCONbits	set	4051
   232  0000                     _OSCTUNEbits	set	3995
   233  0000                     _PIE1	set	3997
   234  0000                     _PIE1bits	set	3997
   235  0000                     _PIE2bits	set	4000
   236  0000                     _PIR1bits	set	3998
   237  0000                     _PIR2bits	set	4001
   238  0000                     _PORTCbits	set	3970
   239  0000                     _RCREG	set	4014
   240  0000                     _RCSTA	set	4011
   241  0000                     _RCSTAbits	set	4011
   242  0000                     _RXB1CONbits	set	3920
   243  0000                     _RXERRCNT	set	3957
   244  0000                     _RXF0EIDH	set	3842
   245  0000                     _RXF0EIDL	set	3843
   246  0000                     _RXF0SIDH	set	3840
   247  0000                     _RXF0SIDL	set	3841
   248  0000                     _RXF10EIDH	set	3446
   249  0000                     _RXF10EIDL	set	3447
   250  0000                     _RXF10SIDH	set	3444
   251  0000                     _RXF10SIDL	set	3445
   252  0000                     _RXF11EIDH	set	3450
   253  0000                     _RXF11EIDL	set	3451
   254  0000                     _RXF11SIDH	set	3448
   255  0000                     _RXF11SIDL	set	3449
   256  0000                     _RXF12EIDH	set	3458
   257  0000                     _RXF12EIDL	set	3459
   258  0000                     _RXF12SIDH	set	3456
   259  0000                     _RXF12SIDL	set	3457
   260  0000                     _RXF13EIDH	set	3462
   261  0000                     _RXF13EIDL	set	3463
   262  0000                     _RXF13SIDH	set	3460
   263  0000                     _RXF13SIDL	set	3461
   264  0000                     _RXF14EIDH	set	3466
   265  0000                     _RXF14EIDL	set	3467
   266  0000                     _RXF14SIDH	set	3464
   267  0000                     _RXF14SIDL	set	3465
   268  0000                     _RXF15EIDH	set	3474
   269  0000                     _RXF15EIDL	set	3475
   270  0000                     _RXF15SIDH	set	3472
   271  0000                     _RXF15SIDL	set	3473
   272  0000                     _RXF1EIDH	set	3846
   273  0000                     _RXF1EIDL	set	3847
   274  0000                     _RXF1SIDH	set	3844
   275  0000                     _RXF1SIDL	set	3845
   276  0000                     _RXF2EIDH	set	3850
   277  0000                     _RXF2EIDL	set	3851
   278  0000                     _RXF2SIDH	set	3848
   279  0000                     _RXF2SIDL	set	3849
   280  0000                     _RXF3EIDH	set	3854
   281  0000                     _RXF3EIDL	set	3855
   282  0000                     _RXF3SIDH	set	3852
   283  0000                     _RXF3SIDL	set	3853
   284  0000                     _RXF4EIDH	set	3858
   285  0000                     _RXF4EIDL	set	3859
   286  0000                     _RXF4SIDH	set	3856
   287  0000                     _RXF4SIDL	set	3857
   288  0000                     _RXF5EIDH	set	3862
   289  0000                     _RXF5EIDL	set	3863
   290  0000                     _RXF5SIDH	set	3860
   291  0000                     _RXF5SIDL	set	3861
   292  0000                     _RXF6EIDH	set	3426
   293  0000                     _RXF6EIDL	set	3427
   294  0000                     _RXF6SIDH	set	3424
   295  0000                     _RXF6SIDL	set	3425
   296  0000                     _RXF7EIDH	set	3430
   297  0000                     _RXF7EIDL	set	3431
   298  0000                     _RXF7SIDH	set	3428
   299  0000                     _RXF7SIDL	set	3429
   300  0000                     _RXF8EIDH	set	3434
   301  0000                     _RXF8EIDL	set	3435
   302  0000                     _RXF8SIDH	set	3432
   303  0000                     _RXF8SIDL	set	3433
   304  0000                     _RXF9EIDH	set	3442
   305  0000                     _RXF9EIDL	set	3443
   306  0000                     _RXF9SIDH	set	3440
   307  0000                     _RXF9SIDL	set	3441
   308  0000                     _RXFBCON0	set	3552
   309  0000                     _RXFBCON1	set	3553
   310  0000                     _RXFBCON2	set	3554
   311  0000                     _RXFBCON3	set	3555
   312  0000                     _RXFBCON4	set	3556
   313  0000                     _RXFBCON5	set	3557
   314  0000                     _RXFBCON6	set	3558
   315  0000                     _RXFBCON7	set	3559
   316  0000                     _RXFCON0	set	3540
   317  0000                     _RXFCON1	set	3541
   318  0000                     _RXM0EIDH	set	3866
   319  0000                     _RXM0EIDL	set	3867
   320  0000                     _RXM0SIDL	set	3865
   321  0000                     _RXM1EIDH	set	3870
   322  0000                     _RXM1EIDL	set	3871
   323  0000                     _RXM1SIDL	set	3869
   324  0000                     _SPBRG	set	4015
   325  0000                     _SPBRGH	set	4016
   326  0000                     _T0CON	set	4053
   327  0000                     _T0CONbits	set	4053
   328  0000                     _T3CON	set	4017
   329  0000                     _T3CONbits	set	4017
   330  0000                     _TMR0H	set	4055
   331  0000                     _TMR0L	set	4054
   332  0000                     _TMR3H	set	4019
   333  0000                     _TMR3L	set	4018
   334  0000                     _TRISBbits	set	3987
   335  0000                     _TRISCbits	set	3988
   336  0000                     _TXERRCNT	set	3958
   337  0000                     _TXREG	set	4013
   338  0000                     _TXSTA	set	4012
   339  0000                     _TXSTAbits	set	4012
   340  0000                     _B0RXFUL	set	28935
   341  0000                     _B0TXEN	set	28610
   342  0000                     _B1RXFUL	set	29063
   343  0000                     _B1TXEN	set	28611
   344  0000                     _B2RXFUL	set	29191
   345  0000                     _B2TXEN	set	28612
   346  0000                     _B3RXFUL	set	29319
   347  0000                     _B3TXEN	set	28613
   348  0000                     _B4RXFUL	set	29447
   349  0000                     _B4TXEN	set	28614
   350  0000                     _B5RXFUL	set	29575
   351  0000                     _B5TXEN	set	28615
   352  0000                     _ERRIE	set	32029
   353  0000                     _ERRIF	set	32037
   354  0000                     _FIFOEMPTY	set	31655
   355  0000                     _IRXIF	set	32039
   356  0000                     _LATC1	set	31833
   357  0000                     _MDSEL0	set	31678
   358  0000                     _MDSEL1	set	31679
   359  0000                     _PEIE	set	32662
   360  0000                     _RCIE	set	31981
   361  0000                     _RCIF	set	31989
   362  0000                     _RCIP	set	31997
   363  0000                     _RXB0FILHIT0	set	31488
   364  0000                     _RXB0FUL	set	31495
   365  0000                     _RXB0IF	set	32032
   366  0000                     _RXB0OVFL	set	31655
   367  0000                     _RXB1IF	set	32033
   368  0000                     _RXB1OVFL	set	31654
   369  0000                     _RXBnIE	set	32025
   370  0000                     _RXBnIF	set	32033
   371  0000                     _RXM0EXIDM	set	30923
   372  0000                     _RXM1EXIDEN	set	30955
   373  0000                     _B0CON	set	3616
   374  0000                     _B1CON	set	3632
   375  0000                     _B2CON	set	3648
   376  0000                     _B3CON	set	3664
   377  0000                     _B4CON	set	3680
   378  0000                     _B5CON	set	3696
   379  0000                     _RXB0CON	set	3936
   380  0000                     _RXB1CON	set	3920
   381  0000                     _RXM0SIDH	set	3864
   382  0000                     _RXM1SIDH	set	3868
   383  0000                     _TXB0CON	set	3904
   384  0000                     _TXB1CON	set	3888
   385  0000                     _TXB2CON	set	3872
   386  006B82                     __stringdata:
   387                           	opt stack 0
   388  006B82                     STR_269:
   389  006B82  20                 	db	32
   390  006B83  20                 	db	32
   391  006B84  20                 	db	32
   392  006B85  20                 	db	32
   393  006B86  20                 	db	32
   394  006B87  20                 	db	32
   395  006B88  20                 	db	32
   396  006B89  20                 	db	32
   397  006B8A  20                 	db	32
   398  006B8B  46                 	db	70	;'F'
   399  006B8C  6F                 	db	111	;'o'
   400  006B8D  72                 	db	114	;'r'
   401  006B8E  6D                 	db	109	;'m'
   402  006B8F  61                 	db	97	;'a'
   403  006B90  74                 	db	116	;'t'
   404  006B91  3A                 	db	58	;':'
   405  006B92  20                 	db	32
   406  006B93  66                 	db	102	;'f'
   407  006B94  69                 	db	105	;'i'
   408  006B95  6C                 	db	108	;'l'
   409  006B96  74                 	db	116	;'t'
   410  006B97  65                 	db	101	;'e'
   411  006B98  72                 	db	114	;'r'
   412  006B99  20                 	db	32
   413  006B9A  66                 	db	102	;'f'
   414  006B9B  69                 	db	105	;'i'
   415  006B9C  6C                 	db	108	;'l'
   416  006B9D  74                 	db	116	;'t'
   417  006B9E  65                 	db	101	;'e'
   418  006B9F  72                 	db	114	;'r'
   419  006BA0  6E                 	db	110	;'n'
   420  006BA1  6F                 	db	111	;'o'
   421  006BA2  2C                 	db	44
   422  006BA3  70                 	db	112	;'p'
   423  006BA4  72                 	db	114	;'r'
   424  006BA5  69                 	db	105	;'i'
   425  006BA6  6F                 	db	111	;'o'
   426  006BA7  2C                 	db	44
   427  006BA8  63                 	db	99	;'c'
   428  006BA9  6C                 	db	108	;'l'
   429  006BAA  61                 	db	97	;'a'
   430  006BAB  73                 	db	115	;'s'
   431  006BAC  73                 	db	115	;'s'
   432  006BAD  2C                 	db	44
   433  006BAE  74                 	db	116	;'t'
   434  006BAF  79                 	db	121	;'y'
   435  006BB0  70                 	db	112	;'p'
   436  006BB1  65                 	db	101	;'e'
   437  006BB2  2C                 	db	44
   438  006BB3  6E                 	db	110	;'n'
   439  006BB4  6F                 	db	111	;'o'
   440  006BB5  64                 	db	100	;'d'
   441  006BB6  65                 	db	101	;'e'
   442  006BB7  69                 	db	105	;'i'
   443  006BB8  64                 	db	100	;'d'
   444  006BB9  20                 	db	32
   445  006BBA  20                 	db	32
   446  006BBB  28                 	db	40
   447  006BBC  66                 	db	102	;'f'
   448  006BBD  69                 	db	105	;'i'
   449  006BBE  6C                 	db	108	;'l'
   450  006BBF  74                 	db	116	;'t'
   451  006BC0  65                 	db	101	;'e'
   452  006BC1  72                 	db	114	;'r'
   453  006BC2  6E                 	db	110	;'n'
   454  006BC3  6F                 	db	111	;'o'
   455  006BC4  20                 	db	32
   456  006BC5  3D                 	db	61	;'='
   457  006BC6  20                 	db	32
   458  006BC7  30                 	db	48	;'0'
   459  006BC8  2D                 	db	45
   460  006BC9  31                 	db	49	;'1'
   461  006BCA  35                 	db	53	;'5'
   462  006BCB  29                 	db	41
   463  006BCC  2E                 	db	46
   464  006BCD  0D                 	db	13
   465  006BCE  0A                 	db	10
   466  006BCF  00                 	db	0
   467  006BD0                     STR_267:
   468  006BD0  49                 	db	73	;'I'
   469  006BD1  4E                 	db	78	;'N'
   470  006BD2  46                 	db	70	;'F'
   471  006BD3  4F                 	db	79	;'O'
   472  006BD4  20                 	db	32
   473  006BD5  2D                 	db	45
   474  006BD6  20                 	db	32
   475  006BD7  47                 	db	71	;'G'
   476  006BD8  65                 	db	101	;'e'
   477  006BD9  74                 	db	116	;'t'
   478  006BDA  20                 	db	32
   479  006BDB  69                 	db	105	;'i'
   480  006BDC  6E                 	db	110	;'n'
   481  006BDD  66                 	db	102	;'f'
   482  006BDE  6F                 	db	111	;'o'
   483  006BDF  20                 	db	32
   484  006BE0  61                 	db	97	;'a'
   485  006BE1  62                 	db	98	;'b'
   486  006BE2  6F                 	db	111	;'o'
   487  006BE3  75                 	db	117	;'u'
   488  006BE4  74                 	db	116	;'t'
   489  006BE5  20                 	db	32
   490  006BE6  61                 	db	97	;'a'
   491  006BE7  6E                 	db	110	;'n'
   492  006BE8  20                 	db	32
   493  006BE9  65                 	db	101	;'e'
   494  006BEA  78                 	db	120	;'x'
   495  006BEB  69                 	db	105	;'i'
   496  006BEC  73                 	db	115	;'s'
   497  006BED  74                 	db	116	;'t'
   498  006BEE  65                 	db	101	;'e'
   499  006BEF  6E                 	db	110	;'n'
   500  006BF0  74                 	db	116	;'t'
   501  006BF1  20                 	db	32
   502  006BF2  6E                 	db	110	;'n'
   503  006BF3  6F                 	db	111	;'o'
   504  006BF4  64                 	db	100	;'d'
   505  006BF5  65                 	db	101	;'e'
   506  006BF6  20                 	db	32
   507  006BF7  6F                 	db	111	;'o'
   508  006BF8  6E                 	db	110	;'n'
   509  006BF9  20                 	db	32
   510  006BFA  74                 	db	116	;'t'
   511  006BFB  68                 	db	104	;'h'
   512  006BFC  65                 	db	101	;'e'
   513  006BFD  20                 	db	32
   514  006BFE  62                 	db	98	;'b'
   515  006BFF  75                 	db	117	;'u'
   516  006C00  73                 	db	115	;'s'
   517  006C01  20                 	db	32
   518  006C02  28                 	db	40
   519  006C03  46                 	db	70	;'F'
   520  006C04  6F                 	db	111	;'o'
   521  006C05  72                 	db	114	;'r'
   522  006C06  6D                 	db	109	;'m'
   523  006C07  61                 	db	97	;'a'
   524  006C08  74                 	db	116	;'t'
   525  006C09  3A                 	db	58	;':'
   526  006C0A  20                 	db	32
   527  006C0B  69                 	db	105	;'i'
   528  006C0C  6E                 	db	110	;'n'
   529  006C0D  66                 	db	102	;'f'
   530  006C0E  6F                 	db	111	;'o'
   531  006C0F  20                 	db	32
   532  006C10  6E                 	db	110	;'n'
   533  006C11  69                 	db	105	;'i'
   534  006C12  63                 	db	99	;'c'
   535  006C13  6B                 	db	107	;'k'
   536  006C14  6E                 	db	110	;'n'
   537  006C15  61                 	db	97	;'a'
   538  006C16  6D                 	db	109	;'m'
   539  006C17  65                 	db	101	;'e'
   540  006C18  29                 	db	41
   541  006C19  2E                 	db	46
   542  006C1A  0D                 	db	13
   543  006C1B  0A                 	db	10
   544  006C1C  00                 	db	0
   545  006C1D                     STR_265:
   546  006C1D  52                 	db	82	;'R'
   547  006C1E  52                 	db	82	;'R'
   548  006C1F  45                 	db	69	;'E'
   549  006C20  47                 	db	71	;'G'
   550  006C21  20                 	db	32
   551  006C22  2D                 	db	45
   552  006C23  20                 	db	32
   553  006C24  52                 	db	82	;'R'
   554  006C25  65                 	db	101	;'e'
   555  006C26  61                 	db	97	;'a'
   556  006C27  64                 	db	100	;'d'
   557  006C28  20                 	db	32
   558  006C29  72                 	db	114	;'r'
   559  006C2A  65                 	db	101	;'e'
   560  006C2B  67                 	db	103	;'g'
   561  006C2C  69                 	db	105	;'i'
   562  006C2D  73                 	db	115	;'s'
   563  006C2E  74                 	db	116	;'t'
   564  006C2F  65                 	db	101	;'e'
   565  006C30  72                 	db	114	;'r'
   566  006C31  28                 	db	40
   567  006C32  73                 	db	115	;'s'
   568  006C33  29                 	db	41
   569  006C34  20                 	db	32
   570  006C35  6F                 	db	111	;'o'
   571  006C36  66                 	db	102	;'f'
   572  006C37  20                 	db	32
   573  006C38  6E                 	db	110	;'n'
   574  006C39  6F                 	db	111	;'o'
   575  006C3A  64                 	db	100	;'d'
   576  006C3B  65                 	db	101	;'e'
   577  006C3C  20                 	db	32
   578  006C3D  28                 	db	40
   579  006C3E  46                 	db	70	;'F'
   580  006C3F  6F                 	db	111	;'o'
   581  006C40  72                 	db	114	;'r'
   582  006C41  6D                 	db	109	;'m'
   583  006C42  61                 	db	97	;'a'
   584  006C43  74                 	db	116	;'t'
   585  006C44  3A                 	db	58	;':'
   586  006C45  20                 	db	32
   587  006C46  72                 	db	114	;'r'
   588  006C47  72                 	db	114	;'r'
   589  006C48  65                 	db	101	;'e'
   590  006C49  67                 	db	103	;'g'
   591  006C4A  20                 	db	32
   592  006C4B  6E                 	db	110	;'n'
   593  006C4C  6F                 	db	111	;'o'
   594  006C4D  64                 	db	100	;'d'
   595  006C4E  65                 	db	101	;'e'
   596  006C4F  69                 	db	105	;'i'
   597  006C50  64                 	db	100	;'d'
   598  006C51  20                 	db	32
   599  006C52  5B                 	db	91	;'['
   600  006C53  70                 	db	112	;'p'
   601  006C54  61                 	db	97	;'a'
   602  006C55  67                 	db	103	;'g'
   603  006C56  65                 	db	101	;'e'
   604  006C57  3A                 	db	58	;':'
   605  006C58  5D                 	db	93	;']'
   606  006C59  72                 	db	114	;'r'
   607  006C5A  65                 	db	101	;'e'
   608  006C5B  67                 	db	103	;'g'
   609  006C5C  20                 	db	32
   610  006C5D  5B                 	db	91	;'['
   611  006C5E  63                 	db	99	;'c'
   612  006C5F  6F                 	db	111	;'o'
   613  006C60  75                 	db	117	;'u'
   614  006C61  6E                 	db	110	;'n'
   615  006C62  74                 	db	116	;'t'
   616  006C63  5D                 	db	93	;']'
   617  006C64  29                 	db	41
   618  006C65  2E                 	db	46
   619  006C66  0D                 	db	13
   620  006C67  0A                 	db	10
   621  006C68  00                 	db	0
   622  006C69                     STR_266:
   623  006C69  57                 	db	87	;'W'
   624  006C6A  52                 	db	82	;'R'
   625  006C6B  45                 	db	69	;'E'
   626  006C6C  47                 	db	71	;'G'
   627  006C6D  20                 	db	32
   628  006C6E  2D                 	db	45
   629  006C6F  20                 	db	32
   630  006C70  57                 	db	87	;'W'
   631  006C71  72                 	db	114	;'r'
   632  006C72  69                 	db	105	;'i'
   633  006C73  74                 	db	116	;'t'
   634  006C74  65                 	db	101	;'e'
   635  006C75  20                 	db	32
   636  006C76  72                 	db	114	;'r'
   637  006C77  65                 	db	101	;'e'
   638  006C78  67                 	db	103	;'g'
   639  006C79  69                 	db	105	;'i'
   640  006C7A  73                 	db	115	;'s'
   641  006C7B  74                 	db	116	;'t'
   642  006C7C  65                 	db	101	;'e'
   643  006C7D  72                 	db	114	;'r'
   644  006C7E  20                 	db	32
   645  006C7F  6F                 	db	111	;'o'
   646  006C80  66                 	db	102	;'f'
   647  006C81  20                 	db	32
   648  006C82  6E                 	db	110	;'n'
   649  006C83  6F                 	db	111	;'o'
   650  006C84  64                 	db	100	;'d'
   651  006C85  65                 	db	101	;'e'
   652  006C86  20                 	db	32
   653  006C87  28                 	db	40
   654  006C88  46                 	db	70	;'F'
   655  006C89  6F                 	db	111	;'o'
   656  006C8A  72                 	db	114	;'r'
   657  006C8B  6D                 	db	109	;'m'
   658  006C8C  61                 	db	97	;'a'
   659  006C8D  74                 	db	116	;'t'
   660  006C8E  3A                 	db	58	;':'
   661  006C8F  20                 	db	32
   662  006C90  77                 	db	119	;'w'
   663  006C91  72                 	db	114	;'r'
   664  006C92  65                 	db	101	;'e'
   665  006C93  67                 	db	103	;'g'
   666  006C94  20                 	db	32
   667  006C95  6E                 	db	110	;'n'
   668  006C96  6F                 	db	111	;'o'
   669  006C97  64                 	db	100	;'d'
   670  006C98  65                 	db	101	;'e'
   671  006C99  69                 	db	105	;'i'
   672  006C9A  64                 	db	100	;'d'
   673  006C9B  20                 	db	32
   674  006C9C  5B                 	db	91	;'['
   675  006C9D  70                 	db	112	;'p'
   676  006C9E  61                 	db	97	;'a'
   677  006C9F  67                 	db	103	;'g'
   678  006CA0  65                 	db	101	;'e'
   679  006CA1  3A                 	db	58	;':'
   680  006CA2  5D                 	db	93	;']'
   681  006CA3  72                 	db	114	;'r'
   682  006CA4  65                 	db	101	;'e'
   683  006CA5  67                 	db	103	;'g'
   684  006CA6  20                 	db	32
   685  006CA7  63                 	db	99	;'c'
   686  006CA8  6F                 	db	111	;'o'
   687  006CA9  6E                 	db	110	;'n'
   688  006CAA  74                 	db	116	;'t'
   689  006CAB  65                 	db	101	;'e'
   690  006CAC  6E                 	db	110	;'n'
   691  006CAD  74                 	db	116	;'t'
   692  006CAE  29                 	db	41
   693  006CAF  2E                 	db	46
   694  006CB0  0D                 	db	13
   695  006CB1  0A                 	db	10
   696  006CB2  00                 	db	0
   697  006CB3                     STR_271:
   698  006CB3  20                 	db	32
   699  006CB4  20                 	db	32
   700  006CB5  20                 	db	32
   701  006CB6  20                 	db	32
   702  006CB7  20                 	db	32
   703  006CB8  20                 	db	32
   704  006CB9  20                 	db	32
   705  006CBA  46                 	db	70	;'F'
   706  006CBB  6F                 	db	111	;'o'
   707  006CBC  72                 	db	114	;'r'
   708  006CBD  6D                 	db	109	;'m'
   709  006CBE  61                 	db	97	;'a'
   710  006CBF  74                 	db	116	;'t'
   711  006CC0  3A                 	db	58	;':'
   712  006CC1  20                 	db	32
   713  006CC2  6D                 	db	109	;'m'
   714  006CC3  61                 	db	97	;'a'
   715  006CC4  73                 	db	115	;'s'
   716  006CC5  6B                 	db	107	;'k'
   717  006CC6  20                 	db	32
   718  006CC7  6D                 	db	109	;'m'
   719  006CC8  61                 	db	97	;'a'
   720  006CC9  73                 	db	115	;'s'
   721  006CCA  6B                 	db	107	;'k'
   722  006CCB  6E                 	db	110	;'n'
   723  006CCC  6F                 	db	111	;'o'
   724  006CCD  2C                 	db	44
   725  006CCE  70                 	db	112	;'p'
   726  006CCF  72                 	db	114	;'r'
   727  006CD0  69                 	db	105	;'i'
   728  006CD1  6F                 	db	111	;'o'
   729  006CD2  2C                 	db	44
   730  006CD3  63                 	db	99	;'c'
   731  006CD4  6C                 	db	108	;'l'
   732  006CD5  61                 	db	97	;'a'
   733  006CD6  73                 	db	115	;'s'
   734  006CD7  73                 	db	115	;'s'
   735  006CD8  2C                 	db	44
   736  006CD9  74                 	db	116	;'t'
   737  006CDA  79                 	db	121	;'y'
   738  006CDB  70                 	db	112	;'p'
   739  006CDC  65                 	db	101	;'e'
   740  006CDD  2C                 	db	44
   741  006CDE  6E                 	db	110	;'n'
   742  006CDF  6F                 	db	111	;'o'
   743  006CE0  64                 	db	100	;'d'
   744  006CE1  65                 	db	101	;'e'
   745  006CE2  69                 	db	105	;'i'
   746  006CE3  64                 	db	100	;'d'
   747  006CE4  20                 	db	32
   748  006CE5  28                 	db	40
   749  006CE6  6D                 	db	109	;'m'
   750  006CE7  61                 	db	97	;'a'
   751  006CE8  73                 	db	115	;'s'
   752  006CE9  6B                 	db	107	;'k'
   753  006CEA  6E                 	db	110	;'n'
   754  006CEB  6F                 	db	111	;'o'
   755  006CEC  20                 	db	32
   756  006CED  3D                 	db	61	;'='
   757  006CEE  20                 	db	32
   758  006CEF  30                 	db	48	;'0'
   759  006CF0  20                 	db	32
   760  006CF1  6F                 	db	111	;'o'
   761  006CF2  72                 	db	114	;'r'
   762  006CF3  20                 	db	32
   763  006CF4  31                 	db	49	;'1'
   764  006CF5  29                 	db	41
   765  006CF6  2E                 	db	46
   766  006CF7  0D                 	db	13
   767  006CF8  0A                 	db	10
   768  006CF9  00                 	db	0
   769  006CFA                     STR_281:
   770  006CFA  2D                 	db	45
   771  006CFB  2D                 	db	45
   772  006CFC  2D                 	db	45
   773  006CFD  2D                 	db	45
   774  006CFE  2D                 	db	45
   775  006CFF  2D                 	db	45
   776  006D00  2D                 	db	45
   777  006D01  2D                 	db	45
   778  006D02  2D                 	db	45
   779  006D03  2D                 	db	45
   780  006D04  2D                 	db	45
   781  006D05  2D                 	db	45
   782  006D06  2D                 	db	45
   783  006D07  2D                 	db	45
   784  006D08  2D                 	db	45
   785  006D09  2D                 	db	45
   786  006D0A  2D                 	db	45
   787  006D0B  2D                 	db	45
   788  006D0C  2D                 	db	45
   789  006D0D  2D                 	db	45
   790  006D0E  2D                 	db	45
   791  006D0F  2D                 	db	45
   792  006D10  2D                 	db	45
   793  006D11  2D                 	db	45
   794  006D12  2D                 	db	45
   795  006D13  2D                 	db	45
   796  006D14  2D                 	db	45
   797  006D15  2D                 	db	45
   798  006D16  2D                 	db	45
   799  006D17  2D                 	db	45
   800  006D18  2D                 	db	45
   801  006D19  2D                 	db	45
   802  006D1A  2D                 	db	45
   803  006D1B  2D                 	db	45
   804  006D1C  2D                 	db	45
   805  006D1D  2D                 	db	45
   806  006D1E  2D                 	db	45
   807  006D1F  2D                 	db	45
   808  006D20  2D                 	db	45
   809  006D21  2D                 	db	45
   810  006D22  2D                 	db	45
   811  006D23  2D                 	db	45
   812  006D24  2D                 	db	45
   813  006D25  2D                 	db	45
   814  006D26  2D                 	db	45
   815  006D27  2D                 	db	45
   816  006D28  2D                 	db	45
   817  006D29  2D                 	db	45
   818  006D2A  2D                 	db	45
   819  006D2B  2D                 	db	45
   820  006D2C  2D                 	db	45
   821  006D2D  2D                 	db	45
   822  006D2E  2D                 	db	45
   823  006D2F  2D                 	db	45
   824  006D30  2D                 	db	45
   825  006D31  2D                 	db	45
   826  006D32  2D                 	db	45
   827  006D33  2D                 	db	45
   828  006D34  2D                 	db	45
   829  006D35  2D                 	db	45
   830  006D36  2D                 	db	45
   831  006D37  2D                 	db	45
   832  006D38  2D                 	db	45
   833  006D39  2D                 	db	45
   834  006D3A  0D                 	db	13
   835  006D3B  0A                 	db	10
   836  006D3C  00                 	db	0
   837  006D3D                     STR_275:
   838  006D3D  20                 	db	32
   839  006D3E  20                 	db	32
   840  006D3F  20                 	db	32
   841  006D40  20                 	db	32
   842  006D41  52                 	db	82	;'R'
   843  006D42  57                 	db	87	;'W'
   844  006D43  54                 	db	84	;'T'
   845  006D44  49                 	db	73	;'I'
   846  006D45  4D                 	db	77	;'M'
   847  006D46  45                 	db	69	;'E'
   848  006D47  4F                 	db	79	;'O'
   849  006D48  55                 	db	85	;'U'
   850  006D49  54                 	db	84	;'T'
   851  006D4A  20                 	db	32
   852  006D4B  2D                 	db	45
   853  006D4C  20                 	db	32
   854  006D4D  53                 	db	83	;'S'
   855  006D4E  65                 	db	101	;'e'
   856  006D4F  74                 	db	116	;'t'
   857  006D50  20                 	db	32
   858  006D51  72                 	db	114	;'r'
   859  006D52  65                 	db	101	;'e'
   860  006D53  67                 	db	103	;'g'
   861  006D54  69                 	db	105	;'i'
   862  006D55  73                 	db	115	;'s'
   863  006D56  74                 	db	116	;'t'
   864  006D57  65                 	db	101	;'e'
   865  006D58  72                 	db	114	;'r'
   866  006D59  20                 	db	32
   867  006D5A  72                 	db	114	;'r'
   868  006D5B  65                 	db	101	;'e'
   869  006D5C  61                 	db	97	;'a'
   870  006D5D  64                 	db	100	;'d'
   871  006D5E  2F                 	db	47
   872  006D5F  77                 	db	119	;'w'
   873  006D60  72                 	db	114	;'r'
   874  006D61  69                 	db	105	;'i'
   875  006D62  74                 	db	116	;'t'
   876  006D63  65                 	db	101	;'e'
   877  006D64  20                 	db	32
   878  006D65  74                 	db	116	;'t'
   879  006D66  69                 	db	105	;'i'
   880  006D67  6D                 	db	109	;'m'
   881  006D68  65                 	db	101	;'e'
   882  006D69  6F                 	db	111	;'o'
   883  006D6A  75                 	db	117	;'u'
   884  006D6B  74                 	db	116	;'t'
   885  006D6C  2E                 	db	46
   886  006D6D  20                 	db	32
   887  006D6E  44                 	db	68	;'D'
   888  006D6F  65                 	db	101	;'e'
   889  006D70  66                 	db	102	;'f'
   890  006D71  61                 	db	97	;'a'
   891  006D72  75                 	db	117	;'u'
   892  006D73  6C                 	db	108	;'l'
   893  006D74  74                 	db	116	;'t'
   894  006D75  3D                 	db	61	;'='
   895  006D76  32                 	db	50	;'2'
   896  006D77  30                 	db	48	;'0'
   897  006D78  20                 	db	32
   898  006D79  6D                 	db	109	;'m'
   899  006D7A  73                 	db	115	;'s'
   900  006D7B  20                 	db	32
   901  006D7C  2E                 	db	46
   902  006D7D  0D                 	db	13
   903  006D7E  0A                 	db	10
   904  006D7F  00                 	db	0
   905  006D80                     STR_107:
   906  006D80  2D                 	db	45
   907  006D81  45                 	db	69	;'E'
   908  006D82  52                 	db	82	;'R'
   909  006D83  52                 	db	82	;'R'
   910  006D84  4F                 	db	79	;'O'
   911  006D85  52                 	db	82	;'R'
   912  006D86  20                 	db	32
   913  006D87  2D                 	db	45
   914  006D88  20                 	db	32
   915  006D89  46                 	db	70	;'F'
   916  006D8A  69                 	db	105	;'i'
   917  006D8B  6C                 	db	108	;'l'
   918  006D8C  74                 	db	116	;'t'
   919  006D8D  65                 	db	101	;'e'
   920  006D8E  72                 	db	114	;'r'
   921  006D8F  20                 	db	32
   922  006D90  6E                 	db	110	;'n'
   923  006D91  75                 	db	117	;'u'
   924  006D92  6D                 	db	109	;'m'
   925  006D93  62                 	db	98	;'b'
   926  006D94  65                 	db	101	;'e'
   927  006D95  72                 	db	114	;'r'
   928  006D96  20                 	db	32
   929  006D97  63                 	db	99	;'c'
   930  006D98  61                 	db	97	;'a'
   931  006D99  6E                 	db	110	;'n'
   932  006D9A  20                 	db	32
   933  006D9B  6F                 	db	111	;'o'
   934  006D9C  6E                 	db	110	;'n'
   935  006D9D  6C                 	db	108	;'l'
   936  006D9E  79                 	db	121	;'y'
   937  006D9F  20                 	db	32
   938  006DA0  62                 	db	98	;'b'
   939  006DA1  65                 	db	101	;'e'
   940  006DA2  20                 	db	32
   941  006DA3  73                 	db	115	;'s'
   942  006DA4  65                 	db	101	;'e'
   943  006DA5  74                 	db	116	;'t'
   944  006DA6  20                 	db	32
   945  006DA7  74                 	db	116	;'t'
   946  006DA8  6F                 	db	111	;'o'
   947  006DA9  20                 	db	32
   948  006DAA  61                 	db	97	;'a'
   949  006DAB  20                 	db	32
   950  006DAC  76                 	db	118	;'v'
   951  006DAD  61                 	db	97	;'a'
   952  006DAE  6C                 	db	108	;'l'
   953  006DAF  75                 	db	117	;'u'
   954  006DB0  65                 	db	101	;'e'
   955  006DB1  20                 	db	32
   956  006DB2  62                 	db	98	;'b'
   957  006DB3  65                 	db	101	;'e'
   958  006DB4  74                 	db	116	;'t'
   959  006DB5  77                 	db	119	;'w'
   960  006DB6  65                 	db	101	;'e'
   961  006DB7  65                 	db	101	;'e'
   962  006DB8  6E                 	db	110	;'n'
   963  006DB9  20                 	db	32
   964  006DBA  30                 	db	48	;'0'
   965  006DBB  2D                 	db	45
   966  006DBC  31                 	db	49	;'1'
   967  006DBD  35                 	db	53	;'5'
   968  006DBE  2E                 	db	46
   969  006DBF  0D                 	db	13
   970  006DC0  0A                 	db	10
   971  006DC1  00                 	db	0
   972  006DC2                     STR_278:
   973  006DC2  20                 	db	32
   974  006DC3  20                 	db	32
   975  006DC4  20                 	db	32
   976  006DC5  20                 	db	32
   977  006DC6  4D                 	db	77	;'M'
   978  006DC7  4F                 	db	79	;'O'
   979  006DC8  44                 	db	68	;'D'
   980  006DC9  45                 	db	69	;'E'
   981  006DCA  20                 	db	32
   982  006DCB  2D                 	db	45
   983  006DCC  20                 	db	32
   984  006DCD  53                 	db	83	;'S'
   985  006DCE  65                 	db	101	;'e'
   986  006DCF  74                 	db	116	;'t'
   987  006DD0  20                 	db	32
   988  006DD1  61                 	db	97	;'a'
   989  006DD2  64                 	db	100	;'d'
   990  006DD3  61                 	db	97	;'a'
   991  006DD4  70                 	db	112	;'p'
   992  006DD5  74                 	db	116	;'t'
   993  006DD6  65                 	db	101	;'e'
   994  006DD7  72                 	db	114	;'r'
   995  006DD8  20                 	db	32
   996  006DD9  6D                 	db	109	;'m'
   997  006DDA  6F                 	db	111	;'o'
   998  006DDB  64                 	db	100	;'d'
   999  006DDC  65                 	db	101	;'e'
  1000  006DDD  20                 	db	32
  1001  006DDE  74                 	db	116	;'t'
  1002  006DDF  68                 	db	104	;'h'
  1003  006DE0  61                 	db	97	;'a'
  1004  006DE1  74                 	db	116	;'t'
  1005  006DE2  20                 	db	32
  1006  006DE3  73                 	db	115	;'s'
  1007  006DE4  68                 	db	104	;'h'
  1008  006DE5  6F                 	db	111	;'o'
  1009  006DE6  75                 	db	117	;'u'
  1010  006DE7  6C                 	db	108	;'l'
  1011  006DE8  64                 	db	100	;'d'
  1012  006DE9  20                 	db	32
  1013  006DEA  62                 	db	98	;'b'
  1014  006DEB  65                 	db	101	;'e'
  1015  006DEC  20                 	db	32
  1016  006DED  75                 	db	117	;'u'
  1017  006DEE  73                 	db	115	;'s'
  1018  006DEF  65                 	db	101	;'e'
  1019  006DF0  64                 	db	100	;'d'
  1020  006DF1  20                 	db	32
  1021  006DF2  6F                 	db	111	;'o'
  1022  006DF3  6E                 	db	110	;'n'
  1023  006DF4  20                 	db	32
  1024  006DF5  73                 	db	115	;'s'
  1025  006DF6  74                 	db	116	;'t'
  1026  006DF7  61                 	db	97	;'a'
  1027  006DF8  72                 	db	114	;'r'
  1028  006DF9  74                 	db	116	;'t'
  1029  006DFA  75                 	db	117	;'u'
  1030  006DFB  70                 	db	112	;'p'
  1031  006DFC  2E                 	db	46
  1032  006DFD  0D                 	db	13
  1033  006DFE  0A                 	db	10
  1034  006DFF  00                 	db	0
  1035  006E00                     STR_239:
  1036  006E00  54                 	db	84	;'T'
  1037  006E01  72                 	db	114	;'r'
  1038  006E02  61                 	db	97	;'a'
  1039  006E03  6E                 	db	110	;'n'
  1040  006E04  73                 	db	115	;'s'
  1041  006E05  6D                 	db	109	;'m'
  1042  006E06  69                 	db	105	;'i'
  1043  006E07  74                 	db	116	;'t'
  1044  006E08  74                 	db	116	;'t'
  1045  006E09  65                 	db	101	;'e'
  1046  006E0A  72                 	db	114	;'r'
  1047  006E0B  20                 	db	32
  1048  006E0C  69                 	db	105	;'i'
  1049  006E0D  6E                 	db	110	;'n'
  1050  006E0E  20                 	db	32
  1051  006E0F  45                 	db	69	;'E'
  1052  006E10  72                 	db	114	;'r'
  1053  006E11  72                 	db	114	;'r'
  1054  006E12  6F                 	db	111	;'o'
  1055  006E13  72                 	db	114	;'r'
  1056  006E14  20                 	db	32
  1057  006E15  53                 	db	83	;'S'
  1058  006E16  74                 	db	116	;'t'
  1059  006E17  61                 	db	97	;'a'
  1060  006E18  74                 	db	116	;'t'
  1061  006E19  65                 	db	101	;'e'
  1062  006E1A  20                 	db	32
  1063  006E1B  57                 	db	87	;'W'
  1064  006E1C  61                 	db	97	;'a'
  1065  006E1D  72                 	db	114	;'r'
  1066  006E1E  6E                 	db	110	;'n'
  1067  006E1F  69                 	db	105	;'i'
  1068  006E20  6E                 	db	110	;'n'
  1069  006E21  67                 	db	103	;'g'
  1070  006E22  20                 	db	32
  1071  006E23  28                 	db	40
  1072  006E24  31                 	db	49	;'1'
  1073  006E25  32                 	db	50	;'2'
  1074  006E26  38                 	db	56	;'8'
  1075  006E27  20                 	db	32
  1076  006E28  3E                 	db	62	;'>'
  1077  006E29  20                 	db	32
  1078  006E2A  54                 	db	84	;'T'
  1079  006E2B  58                 	db	88	;'X'
  1080  006E2C  45                 	db	69	;'E'
  1081  006E2D  52                 	db	82	;'R'
  1082  006E2E  52                 	db	82	;'R'
  1083  006E2F  43                 	db	67	;'C'
  1084  006E30  4E                 	db	78	;'N'
  1085  006E31  54                 	db	84	;'T'
  1086  006E32  20                 	db	32
  1087  006E33  3E                 	db	62	;'>'
  1088  006E34  20                 	db	32
  1089  006E35  39                 	db	57	;'9'
  1090  006E36  36                 	db	54	;'6'
  1091  006E37  29                 	db	41
  1092  006E38  0D                 	db	13
  1093  006E39  0A                 	db	10
  1094  006E3A  00                 	db	0
  1095  006E3B                     STR_241:
  1096  006E3B  54                 	db	84	;'T'
  1097  006E3C  72                 	db	114	;'r'
  1098  006E3D  61                 	db	97	;'a'
  1099  006E3E  6E                 	db	110	;'n'
  1100  006E3F  73                 	db	115	;'s'
  1101  006E40  6D                 	db	109	;'m'
  1102  006E41  69                 	db	105	;'i'
  1103  006E42  74                 	db	116	;'t'
  1104  006E43  74                 	db	116	;'t'
  1105  006E44  65                 	db	101	;'e'
  1106  006E45  72                 	db	114	;'r'
  1107  006E46  20                 	db	32
  1108  006E47  69                 	db	105	;'i'
  1109  006E48  6E                 	db	110	;'n'
  1110  006E49  20                 	db	32
  1111  006E4A  45                 	db	69	;'E'
  1112  006E4B  72                 	db	114	;'r'
  1113  006E4C  72                 	db	114	;'r'
  1114  006E4D  6F                 	db	111	;'o'
  1115  006E4E  72                 	db	114	;'r'
  1116  006E4F  20                 	db	32
  1117  006E50  53                 	db	83	;'S'
  1118  006E51  74                 	db	116	;'t'
  1119  006E52  61                 	db	97	;'a'
  1120  006E53  74                 	db	116	;'t'
  1121  006E54  65                 	db	101	;'e'
  1122  006E55  20                 	db	32
  1123  006E56  42                 	db	66	;'B'
  1124  006E57  75                 	db	117	;'u'
  1125  006E58  73                 	db	115	;'s'
  1126  006E59  20                 	db	32
  1127  006E5A  50                 	db	80	;'P'
  1128  006E5B  61                 	db	97	;'a'
  1129  006E5C  73                 	db	115	;'s'
  1130  006E5D  73                 	db	115	;'s'
  1131  006E5E  69                 	db	105	;'i'
  1132  006E5F  76                 	db	118	;'v'
  1133  006E60  65                 	db	101	;'e'
  1134  006E61  20                 	db	32
  1135  006E62  28                 	db	40
  1136  006E63  54                 	db	84	;'T'
  1137  006E64  58                 	db	88	;'X'
  1138  006E65  45                 	db	69	;'E'
  1139  006E66  52                 	db	82	;'R'
  1140  006E67  52                 	db	82	;'R'
  1141  006E68  43                 	db	67	;'C'
  1142  006E69  4E                 	db	78	;'N'
  1143  006E6A  54                 	db	84	;'T'
  1144  006E6B  20                 	db	32
  1145  006E6C  3F                 	db	63	;'?'
  1146  006E6D  20                 	db	32
  1147  006E6E  31                 	db	49	;'1'
  1148  006E6F  32                 	db	50	;'2'
  1149  006E70  38                 	db	56	;'8'
  1150  006E71  29                 	db	41
  1151  006E72  0D                 	db	13
  1152  006E73  0A                 	db	10
  1153  006E74  00                 	db	0
  1154  006E75                     STR_2:
  1155  006E75  43                 	db	67	;'C'
  1156  006E76  6F                 	db	111	;'o'
  1157  006E77  70                 	db	112	;'p'
  1158  006E78  79                 	db	121	;'y'
  1159  006E79  72                 	db	114	;'r'
  1160  006E7A  69                 	db	105	;'i'
  1161  006E7B  67                 	db	103	;'g'
  1162  006E7C  68                 	db	104	;'h'
  1163  006E7D  74                 	db	116	;'t'
  1164  006E7E  20                 	db	32
  1165  006E7F  28                 	db	40
  1166  006E80  43                 	db	67	;'C'
  1167  006E81  29                 	db	41
  1168  006E82  20                 	db	32
  1169  006E83  32                 	db	50	;'2'
  1170  006E84  30                 	db	48	;'0'
  1171  006E85  31                 	db	49	;'1'
  1172  006E86  34                 	db	52	;'4'
  1173  006E87  2D                 	db	45
  1174  006E88  32                 	db	50	;'2'
  1175  006E89  30                 	db	48	;'0'
  1176  006E8A  31                 	db	49	;'1'
  1177  006E8B  35                 	db	53	;'5'
  1178  006E8C  20                 	db	32
  1179  006E8D  50                 	db	80	;'P'
  1180  006E8E  61                 	db	97	;'a'
  1181  006E8F  72                 	db	114	;'r'
  1182  006E90  61                 	db	97	;'a'
  1183  006E91  64                 	db	100	;'d'
  1184  006E92  69                 	db	105	;'i'
  1185  006E93  73                 	db	115	;'s'
  1186  006E94  65                 	db	101	;'e'
  1187  006E95  20                 	db	32
  1188  006E96  6F                 	db	111	;'o'
  1189  006E97  66                 	db	102	;'f'
  1190  006E98  20                 	db	32
  1191  006E99  74                 	db	116	;'t'
  1192  006E9A  68                 	db	104	;'h'
  1193  006E9B  65                 	db	101	;'e'
  1194  006E9C  20                 	db	32
  1195  006E9D  46                 	db	70	;'F'
  1196  006E9E  72                 	db	114	;'r'
  1197  006E9F  6F                 	db	111	;'o'
  1198  006EA0  67                 	db	103	;'g'
  1199  006EA1  20                 	db	32
  1200  006EA2  41                 	db	65	;'A'
  1201  006EA3  42                 	db	66	;'B'
  1202  006EA4  2C                 	db	44
  1203  006EA5  20                 	db	32
  1204  006EA6  53                 	db	83	;'S'
  1205  006EA7  77                 	db	119	;'w'
  1206  006EA8  65                 	db	101	;'e'
  1207  006EA9  64                 	db	100	;'d'
  1208  006EAA  65                 	db	101	;'e'
  1209  006EAB  6E                 	db	110	;'n'
  1210  006EAC  0D                 	db	13
  1211  006EAD  0A                 	db	10
  1212  006EAE  00                 	db	0
  1213  006EAF                     STR_247:
  1214  006EAF  52                 	db	82	;'R'
  1215  006EB0  65                 	db	101	;'e'
  1216  006EB1  63                 	db	99	;'c'
  1217  006EB2  65                 	db	101	;'e'
  1218  006EB3  69                 	db	105	;'i'
  1219  006EB4  76                 	db	118	;'v'
  1220  006EB5  65                 	db	101	;'e'
  1221  006EB6  72                 	db	114	;'r'
  1222  006EB7  20                 	db	32
  1223  006EB8  20                 	db	32
  1224  006EB9  69                 	db	105	;'i'
  1225  006EBA  6E                 	db	110	;'n'
  1226  006EBB  20                 	db	32
  1227  006EBC  45                 	db	69	;'E'
  1228  006EBD  72                 	db	114	;'r'
  1229  006EBE  72                 	db	114	;'r'
  1230  006EBF  6F                 	db	111	;'o'
  1231  006EC0  72                 	db	114	;'r'
  1232  006EC1  20                 	db	32
  1233  006EC2  53                 	db	83	;'S'
  1234  006EC3  74                 	db	116	;'t'
  1235  006EC4  61                 	db	97	;'a'
  1236  006EC5  74                 	db	116	;'t'
  1237  006EC6  65                 	db	101	;'e'
  1238  006EC7  20                 	db	32
  1239  006EC8  57                 	db	87	;'W'
  1240  006EC9  61                 	db	97	;'a'
  1241  006ECA  72                 	db	114	;'r'
  1242  006ECB  6E                 	db	110	;'n'
  1243  006ECC  69                 	db	105	;'i'
  1244  006ECD  6E                 	db	110	;'n'
  1245  006ECE  67                 	db	103	;'g'
  1246  006ECF  20                 	db	32
  1247  006ED0  28                 	db	40
  1248  006ED1  31                 	db	49	;'1'
  1249  006ED2  32                 	db	50	;'2'
  1250  006ED3  38                 	db	56	;'8'
  1251  006ED4  20                 	db	32
  1252  006ED5  3E                 	db	62	;'>'
  1253  006ED6  20                 	db	32
  1254  006ED7  52                 	db	82	;'R'
  1255  006ED8  58                 	db	88	;'X'
  1256  006ED9  45                 	db	69	;'E'
  1257  006EDA  52                 	db	82	;'R'
  1258  006EDB  52                 	db	82	;'R'
  1259  006EDC  43                 	db	67	;'C'
  1260  006EDD  4E                 	db	78	;'N'
  1261  006EDE  54                 	db	84	;'T'
  1262  006EDF  20                 	db	32
  1263  006EE0  3E                 	db	62	;'>'
  1264  006EE1  20                 	db	32
  1265  006EE2  39                 	db	57	;'9'
  1266  006EE3  36                 	db	54	;'6'
  1267  006EE4  29                 	db	41
  1268  006EE5  0D                 	db	13
  1269  006EE6  0A                 	db	10
  1270  006EE7  00                 	db	0
  1271  006EE8                     STR_259:
  1272  006EE8  20                 	db	32
  1273  006EE9  20                 	db	32
  1274  006EEA  20                 	db	32
  1275  006EEB  20                 	db	32
  1276  006EEC  20                 	db	32
  1277  006EED  46                 	db	70	;'F'
  1278  006EEE  6F                 	db	111	;'o'
  1279  006EEF  72                 	db	114	;'r'
  1280  006EF0  6D                 	db	109	;'m'
  1281  006EF1  61                 	db	97	;'a'
  1282  006EF2  74                 	db	116	;'t'
  1283  006EF3  3A                 	db	58	;':'
  1284  006EF4  20                 	db	32
  1285  006EF5  70                 	db	112	;'p'
  1286  006EF6  72                 	db	114	;'r'
  1287  006EF7  69                 	db	105	;'i'
  1288  006EF8  6F                 	db	111	;'o'
  1289  006EF9  72                 	db	114	;'r'
  1290  006EFA  69                 	db	105	;'i'
  1291  006EFB  74                 	db	116	;'t'
  1292  006EFC  79                 	db	121	;'y'
  1293  006EFD  2C                 	db	44
  1294  006EFE  63                 	db	99	;'c'
  1295  006EFF  6C                 	db	108	;'l'
  1296  006F00  61                 	db	97	;'a'
  1297  006F01  73                 	db	115	;'s'
  1298  006F02  73                 	db	115	;'s'
  1299  006F03  2C                 	db	44
  1300  006F04  74                 	db	116	;'t'
  1301  006F05  79                 	db	121	;'y'
  1302  006F06  70                 	db	112	;'p'
  1303  006F07  65                 	db	101	;'e'
  1304  006F08  2C                 	db	44
  1305  006F09  6E                 	db	110	;'n'
  1306  006F0A  6F                 	db	111	;'o'
  1307  006F0B  64                 	db	100	;'d'
  1308  006F0C  65                 	db	101	;'e'
  1309  006F0D  69                 	db	105	;'i'
  1310  006F0E  64                 	db	100	;'d'
  1311  006F0F  2C                 	db	44
  1312  006F10  63                 	db	99	;'c'
  1313  006F11  6F                 	db	111	;'o'
  1314  006F12  75                 	db	117	;'u'
  1315  006F13  6E                 	db	110	;'n'
  1316  006F14  74                 	db	116	;'t'
  1317  006F15  2C                 	db	44
  1318  006F16  64                 	db	100	;'d'
  1319  006F17  61                 	db	97	;'a'
  1320  006F18  74                 	db	116	;'t'
  1321  006F19  61                 	db	97	;'a'
  1322  006F1A  2C                 	db	44
  1323  006F1B  2C                 	db	44
  1324  006F1C  2C                 	db	44
  1325  006F1D  0D                 	db	13
  1326  006F1E  0A                 	db	10
  1327  006F1F  00                 	db	0
  1328  006F20                     STR_246:
  1329  006F20  52                 	db	82	;'R'
  1330  006F21  65                 	db	101	;'e'
  1331  006F22  63                 	db	99	;'c'
  1332  006F23  65                 	db	101	;'e'
  1333  006F24  69                 	db	105	;'i'
  1334  006F25  76                 	db	118	;'v'
  1335  006F26  65                 	db	101	;'e'
  1336  006F27  72                 	db	114	;'r'
  1337  006F28  20                 	db	32
  1338  006F29  69                 	db	105	;'i'
  1339  006F2A  6E                 	db	110	;'n'
  1340  006F2B  20                 	db	32
  1341  006F2C  45                 	db	69	;'E'
  1342  006F2D  72                 	db	114	;'r'
  1343  006F2E  72                 	db	114	;'r'
  1344  006F2F  6F                 	db	111	;'o'
  1345  006F30  72                 	db	114	;'r'
  1346  006F31  20                 	db	32
  1347  006F32  53                 	db	83	;'S'
  1348  006F33  74                 	db	116	;'t'
  1349  006F34  61                 	db	97	;'a'
  1350  006F35  74                 	db	116	;'t'
  1351  006F36  65                 	db	101	;'e'
  1352  006F37  20                 	db	32
  1353  006F38  42                 	db	66	;'B'
  1354  006F39  75                 	db	117	;'u'
  1355  006F3A  73                 	db	115	;'s'
  1356  006F3B  20                 	db	32
  1357  006F3C  50                 	db	80	;'P'
  1358  006F3D  61                 	db	97	;'a'
  1359  006F3E  73                 	db	115	;'s'
  1360  006F3F  73                 	db	115	;'s'
  1361  006F40  69                 	db	105	;'i'
  1362  006F41  76                 	db	118	;'v'
  1363  006F42  65                 	db	101	;'e'
  1364  006F43  20                 	db	32
  1365  006F44  28                 	db	40
  1366  006F45  52                 	db	82	;'R'
  1367  006F46  58                 	db	88	;'X'
  1368  006F47  45                 	db	69	;'E'
  1369  006F48  52                 	db	82	;'R'
  1370  006F49  52                 	db	82	;'R'
  1371  006F4A  43                 	db	67	;'C'
  1372  006F4B  4E                 	db	78	;'N'
  1373  006F4C  54                 	db	84	;'T'
  1374  006F4D  20                 	db	32
  1375  006F4E  3E                 	db	62	;'>'
  1376  006F4F  20                 	db	32
  1377  006F50  31                 	db	49	;'1'
  1378  006F51  32                 	db	50	;'2'
  1379  006F52  37                 	db	55	;'7'
  1380  006F53  29                 	db	41
  1381  006F54  0D                 	db	13
  1382  006F55  0A                 	db	10
  1383  006F56  00                 	db	0
  1384  006F57                     STR_277:
  1385  006F57  20                 	db	32
  1386  006F58  20                 	db	32
  1387  006F59  20                 	db	32
  1388  006F5A  20                 	db	32
  1389  006F5B  53                 	db	83	;'S'
  1390  006F5C  54                 	db	84	;'T'
  1391  006F5D  41                 	db	65	;'A'
  1392  006F5E  52                 	db	82	;'R'
  1393  006F5F  54                 	db	84	;'T'
  1394  006F60  49                 	db	73	;'I'
  1395  006F61  46                 	db	70	;'F'
  1396  006F62  20                 	db	32
  1397  006F63  2D                 	db	45
  1398  006F64  20                 	db	32
  1399  006F65  53                 	db	83	;'S'
  1400  006F66  65                 	db	101	;'e'
  1401  006F67  74                 	db	116	;'t'
  1402  006F68  20                 	db	32
  1403  006F69  69                 	db	105	;'i'
  1404  006F6A  6E                 	db	110	;'n'
  1405  006F6B  74                 	db	116	;'t'
  1406  006F6C  65                 	db	101	;'e'
  1407  006F6D  72                 	db	114	;'r'
  1408  006F6E  66                 	db	102	;'f'
  1409  006F6F  61                 	db	97	;'a'
  1410  006F70  63                 	db	99	;'c'
  1411  006F71  65                 	db	101	;'e'
  1412  006F72  20                 	db	32
  1413  006F73  73                 	db	115	;'s'
  1414  006F74  74                 	db	116	;'t'
  1415  006F75  61                 	db	97	;'a'
  1416  006F76  74                 	db	116	;'t'
  1417  006F77  65                 	db	101	;'e'
  1418  006F78  20                 	db	32
  1419  006F79  74                 	db	116	;'t'
  1420  006F7A  6F                 	db	111	;'o'
  1421  006F7B  20                 	db	32
  1422  006F7C  75                 	db	117	;'u'
  1423  006F7D  73                 	db	115	;'s'
  1424  006F7E  65                 	db	101	;'e'
  1425  006F7F  20                 	db	32
  1426  006F80  6F                 	db	111	;'o'
  1427  006F81  6E                 	db	110	;'n'
  1428  006F82  20                 	db	32
  1429  006F83  73                 	db	115	;'s'
  1430  006F84  74                 	db	116	;'t'
  1431  006F85  61                 	db	97	;'a'
  1432  006F86  72                 	db	114	;'r'
  1433  006F87  74                 	db	116	;'t'
  1434  006F88  75                 	db	117	;'u'
  1435  006F89  70                 	db	112	;'p'
  1436  006F8A  2E                 	db	46
  1437  006F8B  0D                 	db	13
  1438  006F8C  0A                 	db	10
  1439  006F8D  00                 	db	0
  1440  006F8E                     STR_4:
  1441  006F8E  50                 	db	80	;'P'
  1442  006F8F  72                 	db	114	;'r'
  1443  006F90  65                 	db	101	;'e'
  1444  006F91  73                 	db	115	;'s'
  1445  006F92  73                 	db	115	;'s'
  1446  006F93  20                 	db	32
  1447  006F94  27                 	db	39
  1448  006F95  76                 	db	118	;'v'
  1449  006F96  27                 	db	39
  1450  006F97  20                 	db	32
  1451  006F98  77                 	db	119	;'w'
  1452  006F99  69                 	db	105	;'i'
  1453  006F9A  74                 	db	116	;'t'
  1454  006F9B  68                 	db	104	;'h'
  1455  006F9C  69                 	db	105	;'i'
  1456  006F9D  6E                 	db	110	;'n'
  1457  006F9E  20                 	db	32
  1458  006F9F  74                 	db	116	;'t'
  1459  006FA0  68                 	db	104	;'h'
  1460  006FA1  72                 	db	114	;'r'
  1461  006FA2  65                 	db	101	;'e'
  1462  006FA3  65                 	db	101	;'e'
  1463  006FA4  20                 	db	32
  1464  006FA5  73                 	db	115	;'s'
  1465  006FA6  65                 	db	101	;'e'
  1466  006FA7  63                 	db	99	;'c'
  1467  006FA8  6F                 	db	111	;'o'
  1468  006FA9  6E                 	db	110	;'n'
  1469  006FAA  64                 	db	100	;'d'
  1470  006FAB  73                 	db	115	;'s'
  1471  006FAC  20                 	db	32
  1472  006FAD  74                 	db	116	;'t'
  1473  006FAE  6F                 	db	111	;'o'
  1474  006FAF  20                 	db	32
  1475  006FB0  65                 	db	101	;'e'
  1476  006FB1  6E                 	db	110	;'n'
  1477  006FB2  74                 	db	116	;'t'
  1478  006FB3  65                 	db	101	;'e'
  1479  006FB4  72                 	db	114	;'r'
  1480  006FB5  20                 	db	32
  1481  006FB6  76                 	db	118	;'v'
  1482  006FB7  65                 	db	101	;'e'
  1483  006FB8  72                 	db	114	;'r'
  1484  006FB9  62                 	db	98	;'b'
  1485  006FBA  6F                 	db	111	;'o'
  1486  006FBB  73                 	db	115	;'s'
  1487  006FBC  65                 	db	101	;'e'
  1488  006FBD  20                 	db	32
  1489  006FBE  6D                 	db	109	;'m'
  1490  006FBF  6F                 	db	111	;'o'
  1491  006FC0  64                 	db	100	;'d'
  1492  006FC1  65                 	db	101	;'e'
  1493  006FC2  0D                 	db	13
  1494  006FC3  0A                 	db	10
  1495  006FC4  00                 	db	0
  1496  006FC5                     STR_240:
  1497  006FC5  54                 	db	84	;'T'
  1498  006FC6  72                 	db	114	;'r'
  1499  006FC7  61                 	db	97	;'a'
  1500  006FC8  6E                 	db	110	;'n'
  1501  006FC9  73                 	db	115	;'s'
  1502  006FCA  6D                 	db	109	;'m'
  1503  006FCB  69                 	db	105	;'i'
  1504  006FCC  74                 	db	116	;'t'
  1505  006FCD  74                 	db	116	;'t'
  1506  006FCE  65                 	db	101	;'e'
  1507  006FCF  72                 	db	114	;'r'
  1508  006FD0  20                 	db	32
  1509  006FD1  69                 	db	105	;'i'
  1510  006FD2  6E                 	db	110	;'n'
  1511  006FD3  20                 	db	32
  1512  006FD4  45                 	db	69	;'E'
  1513  006FD5  72                 	db	114	;'r'
  1514  006FD6  72                 	db	114	;'r'
  1515  006FD7  6F                 	db	111	;'o'
  1516  006FD8  72                 	db	114	;'r'
  1517  006FD9  20                 	db	32
  1518  006FDA  53                 	db	83	;'S'
  1519  006FDB  74                 	db	116	;'t'
  1520  006FDC  61                 	db	97	;'a'
  1521  006FDD  74                 	db	116	;'t'
  1522  006FDE  65                 	db	101	;'e'
  1523  006FDF  20                 	db	32
  1524  006FE0  42                 	db	66	;'B'
  1525  006FE1  75                 	db	117	;'u'
  1526  006FE2  73                 	db	115	;'s'
  1527  006FE3  20                 	db	32
  1528  006FE4  4F                 	db	79	;'O'
  1529  006FE5  46                 	db	70	;'F'
  1530  006FE6  46                 	db	70	;'F'
  1531  006FE7  20                 	db	32
  1532  006FE8  28                 	db	40
  1533  006FE9  54                 	db	84	;'T'
  1534  006FEA  58                 	db	88	;'X'
  1535  006FEB  45                 	db	69	;'E'
  1536  006FEC  52                 	db	82	;'R'
  1537  006FED  52                 	db	82	;'R'
  1538  006FEE  43                 	db	67	;'C'
  1539  006FEF  4E                 	db	78	;'N'
  1540  006FF0  54                 	db	84	;'T'
  1541  006FF1  20                 	db	32
  1542  006FF2  3F                 	db	63	;'?'
  1543  006FF3  20                 	db	32
  1544  006FF4  32                 	db	50	;'2'
  1545  006FF5  35                 	db	53	;'5'
  1546  006FF6  36                 	db	54	;'6'
  1547  006FF7  29                 	db	41
  1548  006FF8  0D                 	db	13
  1549  006FF9  0A                 	db	10
  1550  006FFA  00                 	db	0
  1551  006FFB                     STR_80:
  1552  006FFB  2D                 	db	45
  1553  006FFC  45                 	db	69	;'E'
  1554  006FFD  52                 	db	82	;'R'
  1555  006FFE  52                 	db	82	;'R'
  1556  006FFF  4F                 	db	79	;'O'
  1557  007000  52                 	db	82	;'R'
  1558  007001  20                 	db	32
  1559  007002  2D                 	db	45
  1560  007003  20                 	db	32
  1561  007004  4F                 	db	79	;'O'
  1562  007005  6E                 	db	110	;'n'
  1563  007006  65                 	db	101	;'e'
  1564  007007  20                 	db	32
  1565  007008  6F                 	db	111	;'o'
  1566  007009  72                 	db	114	;'r'
  1567  00700A  20                 	db	32
  1568  00700B  6D                 	db	109	;'m'
  1569  00700C  6F                 	db	111	;'o'
  1570  00700D  72                 	db	114	;'r'
  1571  00700E  65                 	db	101	;'e'
  1572  00700F  20                 	db	32
  1573  007010  72                 	db	114	;'r'
  1574  007011  65                 	db	101	;'e'
  1575  007012  67                 	db	103	;'g'
  1576  007013  69                 	db	105	;'i'
  1577  007014  73                 	db	115	;'s'
  1578  007015  74                 	db	116	;'t'
  1579  007016  65                 	db	101	;'e'
  1580  007017  72                 	db	114	;'r'
  1581  007018  28                 	db	40
  1582  007019  73                 	db	115	;'s'
  1583  00701A  29                 	db	41
  1584  00701B  20                 	db	32
  1585  00701C  63                 	db	99	;'c'
  1586  00701D  6F                 	db	111	;'o'
  1587  00701E  75                 	db	117	;'u'
  1588  00701F  6C                 	db	108	;'l'
  1589  007020  64                 	db	100	;'d'
  1590  007021  20                 	db	32
  1591  007022  6E                 	db	110	;'n'
  1592  007023  6F                 	db	111	;'o'
  1593  007024  74                 	db	116	;'t'
  1594  007025  20                 	db	32
  1595  007026  62                 	db	98	;'b'
  1596  007027  65                 	db	101	;'e'
  1597  007028  20                 	db	32
  1598  007029  72                 	db	114	;'r'
  1599  00702A  65                 	db	101	;'e'
  1600  00702B  61                 	db	97	;'a'
  1601  00702C  64                 	db	100	;'d'
  1602  00702D  2E                 	db	46
  1603  00702E  0D                 	db	13
  1604  00702F  0A                 	db	10
  1605  007030  00                 	db	0
  1606  007031                     STR_50:
  1607  007031  2D                 	db	45
  1608  007032  45                 	db	69	;'E'
  1609  007033  52                 	db	82	;'R'
  1610  007034  52                 	db	82	;'R'
  1611  007035  4F                 	db	79	;'O'
  1612  007036  52                 	db	82	;'R'
  1613  007037  20                 	db	32
  1614  007038  2D                 	db	45
  1615  007039  20                 	db	32
  1616  00703A  43                 	db	67	;'C'
  1617  00703B  6F                 	db	111	;'o'
  1618  00703C  6D                 	db	109	;'m'
  1619  00703D  6D                 	db	109	;'m'
  1620  00703E  61                 	db	97	;'a'
  1621  00703F  6E                 	db	110	;'n'
  1622  007040  64                 	db	100	;'d'
  1623  007041  20                 	db	32
  1624  007042  6F                 	db	111	;'o'
  1625  007043  6E                 	db	110	;'n'
  1626  007044  6C                 	db	108	;'l'
  1627  007045  79                 	db	121	;'y'
  1628  007046  20                 	db	32
  1629  007047  77                 	db	119	;'w'
  1630  007048  6F                 	db	111	;'o'
  1631  007049  72                 	db	114	;'r'
  1632  00704A  6B                 	db	107	;'k'
  1633  00704B  73                 	db	115	;'s'
  1634  00704C  20                 	db	32
  1635  00704D  69                 	db	105	;'i'
  1636  00704E  66                 	db	102	;'f'
  1637  00704F  20                 	db	32
  1638  007050  69                 	db	105	;'i'
  1639  007051  6E                 	db	110	;'n'
  1640  007052  74                 	db	116	;'t'
  1641  007053  65                 	db	101	;'e'
  1642  007054  72                 	db	114	;'r'
  1643  007055  66                 	db	102	;'f'
  1644  007056  61                 	db	97	;'a'
  1645  007057  63                 	db	99	;'c'
  1646  007058  65                 	db	101	;'e'
  1647  007059  20                 	db	32
  1648  00705A  69                 	db	105	;'i'
  1649  00705B  73                 	db	115	;'s'
  1650  00705C  20                 	db	32
  1651  00705D  6F                 	db	111	;'o'
  1652  00705E  70                 	db	112	;'p'
  1653  00705F  65                 	db	101	;'e'
  1654  007060  6E                 	db	110	;'n'
  1655  007061  2E                 	db	46
  1656  007062  0D                 	db	13
  1657  007063  0A                 	db	10
  1658  007064  00                 	db	0
  1659  007065                     STR_234:
  1660  007065  54                 	db	84	;'T'
  1661  007066  72                 	db	114	;'r'
  1662  007067  61                 	db	97	;'a'
  1663  007068  6E                 	db	110	;'n'
  1664  007069  73                 	db	115	;'s'
  1665  00706A  6D                 	db	109	;'m'
  1666  00706B  69                 	db	105	;'i'
  1667  00706C  74                 	db	116	;'t'
  1668  00706D  74                 	db	116	;'t'
  1669  00706E  65                 	db	101	;'e'
  1670  00706F  72                 	db	114	;'r'
  1671  007070  20                 	db	32
  1672  007071  6F                 	db	111	;'o'
  1673  007072  72                 	db	114	;'r'
  1674  007073  20                 	db	32
  1675  007074  52                 	db	82	;'R'
  1676  007075  65                 	db	101	;'e'
  1677  007076  63                 	db	99	;'c'
  1678  007077  65                 	db	101	;'e'
  1679  007078  69                 	db	105	;'i'
  1680  007079  76                 	db	118	;'v'
  1681  00707A  65                 	db	101	;'e'
  1682  00707B  72                 	db	114	;'r'
  1683  00707C  20                 	db	32
  1684  00707D  69                 	db	105	;'i'
  1685  00707E  73                 	db	115	;'s'
  1686  00707F  20                 	db	32
  1687  007080  69                 	db	105	;'i'
  1688  007081  6E                 	db	110	;'n'
  1689  007082  20                 	db	32
  1690  007083  45                 	db	69	;'E'
  1691  007084  72                 	db	114	;'r'
  1692  007085  72                 	db	114	;'r'
  1693  007086  6F                 	db	111	;'o'
  1694  007087  72                 	db	114	;'r'
  1695  007088  20                 	db	32
  1696  007089  53                 	db	83	;'S'
  1697  00708A  74                 	db	116	;'t'
  1698  00708B  61                 	db	97	;'a'
  1699  00708C  74                 	db	116	;'t'
  1700  00708D  65                 	db	101	;'e'
  1701  00708E  20                 	db	32
  1702  00708F  57                 	db	87	;'W'
  1703  007090  61                 	db	97	;'a'
  1704  007091  72                 	db	114	;'r'
  1705  007092  6E                 	db	110	;'n'
  1706  007093  69                 	db	105	;'i'
  1707  007094  6E                 	db	110	;'n'
  1708  007095  67                 	db	103	;'g'
  1709  007096  0D                 	db	13
  1710  007097  0A                 	db	10
  1711  007098  00                 	db	0
  1712  007099                     STR_253:
  1713  007099  4C                 	db	76	;'L'
  1714  00709A  49                 	db	73	;'I'
  1715  00709B  53                 	db	83	;'S'
  1716  00709C  54                 	db	84	;'T'
  1717  00709D  45                 	db	69	;'E'
  1718  00709E  4E                 	db	78	;'N'
  1719  00709F  20                 	db	32
  1720  0070A0  2D                 	db	45
  1721  0070A1  20                 	db	32
  1722  0070A2  4F                 	db	79	;'O'
  1723  0070A3  70                 	db	112	;'p'
  1724  0070A4  65                 	db	101	;'e'
  1725  0070A5  6E                 	db	110	;'n'
  1726  0070A6  20                 	db	32
  1727  0070A7  43                 	db	67	;'C'
  1728  0070A8  41                 	db	65	;'A'
  1729  0070A9  4E                 	db	78	;'N'
  1730  0070AA  20                 	db	32
  1731  0070AB  69                 	db	105	;'i'
  1732  0070AC  6E                 	db	110	;'n'
  1733  0070AD  74                 	db	116	;'t'
  1734  0070AE  65                 	db	101	;'e'
  1735  0070AF  72                 	db	114	;'r'
  1736  0070B0  66                 	db	102	;'f'
  1737  0070B1  61                 	db	97	;'a'
  1738  0070B2  63                 	db	99	;'c'
  1739  0070B3  65                 	db	101	;'e'
  1740  0070B4  20                 	db	32
  1741  0070B5  69                 	db	105	;'i'
  1742  0070B6  6E                 	db	110	;'n'
  1743  0070B7  20                 	db	32
  1744  0070B8  6C                 	db	108	;'l'
  1745  0070B9  69                 	db	105	;'i'
  1746  0070BA  73                 	db	115	;'s'
  1747  0070BB  74                 	db	116	;'t'
  1748  0070BC  65                 	db	101	;'e'
  1749  0070BD  6E                 	db	110	;'n'
  1750  0070BE  20                 	db	32
  1751  0070BF  6F                 	db	111	;'o'
  1752  0070C0  6E                 	db	110	;'n'
  1753  0070C1  6C                 	db	108	;'l'
  1754  0070C2  79                 	db	121	;'y'
  1755  0070C3  20                 	db	32
  1756  0070C4  6D                 	db	109	;'m'
  1757  0070C5  6F                 	db	111	;'o'
  1758  0070C6  64                 	db	100	;'d'
  1759  0070C7  65                 	db	101	;'e'
  1760  0070C8  2E                 	db	46
  1761  0070C9  0D                 	db	13
  1762  0070CA  0A                 	db	10
  1763  0070CB  00                 	db	0
  1764  0070CC                     STR_122:
  1765  0070CC  2D                 	db	45
  1766  0070CD  45                 	db	69	;'E'
  1767  0070CE  52                 	db	82	;'R'
  1768  0070CF  52                 	db	82	;'R'
  1769  0070D0  4F                 	db	79	;'O'
  1770  0070D1  52                 	db	82	;'R'
  1771  0070D2  20                 	db	32
  1772  0070D3  2D                 	db	45
  1773  0070D4  20                 	db	32
  1774  0070D5  4D                 	db	77	;'M'
  1775  0070D6  61                 	db	97	;'a'
  1776  0070D7  73                 	db	115	;'s'
  1777  0070D8  6B                 	db	107	;'k'
  1778  0070D9  20                 	db	32
  1779  0070DA  6E                 	db	110	;'n'
  1780  0070DB  75                 	db	117	;'u'
  1781  0070DC  6D                 	db	109	;'m'
  1782  0070DD  62                 	db	98	;'b'
  1783  0070DE  65                 	db	101	;'e'
  1784  0070DF  72                 	db	114	;'r'
  1785  0070E0  20                 	db	32
  1786  0070E1  63                 	db	99	;'c'
  1787  0070E2  61                 	db	97	;'a'
  1788  0070E3  6E                 	db	110	;'n'
  1789  0070E4  20                 	db	32
  1790  0070E5  6F                 	db	111	;'o'
  1791  0070E6  6E                 	db	110	;'n'
  1792  0070E7  6C                 	db	108	;'l'
  1793  0070E8  79                 	db	121	;'y'
  1794  0070E9  20                 	db	32
  1795  0070EA  62                 	db	98	;'b'
  1796  0070EB  65                 	db	101	;'e'
  1797  0070EC  20                 	db	32
  1798  0070ED  73                 	db	115	;'s'
  1799  0070EE  65                 	db	101	;'e'
  1800  0070EF  74                 	db	116	;'t'
  1801  0070F0  20                 	db	32
  1802  0070F1  61                 	db	97	;'a'
  1803  0070F2  73                 	db	115	;'s'
  1804  0070F3  20                 	db	32
  1805  0070F4  30                 	db	48	;'0'
  1806  0070F5  20                 	db	32
  1807  0070F6  6F                 	db	111	;'o'
  1808  0070F7  72                 	db	114	;'r'
  1809  0070F8  20                 	db	32
  1810  0070F9  31                 	db	49	;'1'
  1811  0070FA  2E                 	db	46
  1812  0070FB  0D                 	db	13
  1813  0070FC  0A                 	db	10
  1814  0070FD  00                 	db	0
  1815  0070FE                     STR_254:
  1816  0070FE  4C                 	db	76	;'L'
  1817  0070FF  4F                 	db	79	;'O'
  1818  007100  4F                 	db	79	;'O'
  1819  007101  50                 	db	80	;'P'
  1820  007102  42                 	db	66	;'B'
  1821  007103  41                 	db	65	;'A'
  1822  007104  43                 	db	67	;'C'
  1823  007105  4B                 	db	75	;'K'
  1824  007106  20                 	db	32
  1825  007107  2D                 	db	45
  1826  007108  20                 	db	32
  1827  007109  4F                 	db	79	;'O'
  1828  00710A  70                 	db	112	;'p'
  1829  00710B  65                 	db	101	;'e'
  1830  00710C  6E                 	db	110	;'n'
  1831  00710D  20                 	db	32
  1832  00710E  43                 	db	67	;'C'
  1833  00710F  41                 	db	65	;'A'
  1834  007110  4E                 	db	78	;'N'
  1835  007111  20                 	db	32
  1836  007112  69                 	db	105	;'i'
  1837  007113  6E                 	db	110	;'n'
  1838  007114  74                 	db	116	;'t'
  1839  007115  65                 	db	101	;'e'
  1840  007116  72                 	db	114	;'r'
  1841  007117  66                 	db	102	;'f'
  1842  007118  61                 	db	97	;'a'
  1843  007119  63                 	db	99	;'c'
  1844  00711A  65                 	db	101	;'e'
  1845  00711B  20                 	db	32
  1846  00711C  69                 	db	105	;'i'
  1847  00711D  6E                 	db	110	;'n'
  1848  00711E  20                 	db	32
  1849  00711F  6C                 	db	108	;'l'
  1850  007120  6F                 	db	111	;'o'
  1851  007121  6F                 	db	111	;'o'
  1852  007122  70                 	db	112	;'p'
  1853  007123  62                 	db	98	;'b'
  1854  007124  61                 	db	97	;'a'
  1855  007125  63                 	db	99	;'c'
  1856  007126  6B                 	db	107	;'k'
  1857  007127  20                 	db	32
  1858  007128  6D                 	db	109	;'m'
  1859  007129  6F                 	db	111	;'o'
  1860  00712A  64                 	db	100	;'d'
  1861  00712B  65                 	db	101	;'e'
  1862  00712C  2E                 	db	46
  1863  00712D  0D                 	db	13
  1864  00712E  0A                 	db	10
  1865  00712F  00                 	db	0
  1866  007130                     STR_256:
  1867  007130  56                 	db	86	;'V'
  1868  007131  45                 	db	69	;'E'
  1869  007132  52                 	db	82	;'R'
  1870  007133  53                 	db	83	;'S'
  1871  007134  49                 	db	73	;'I'
  1872  007135  4F                 	db	79	;'O'
  1873  007136  4E                 	db	78	;'N'
  1874  007137  20                 	db	32
  1875  007138  2D                 	db	45
  1876  007139  20                 	db	32
  1877  00713A  44                 	db	68	;'D'
  1878  00713B  69                 	db	105	;'i'
  1879  00713C  73                 	db	115	;'s'
  1880  00713D  70                 	db	112	;'p'
  1881  00713E  6C                 	db	108	;'l'
  1882  00713F  61                 	db	97	;'a'
  1883  007140  79                 	db	121	;'y'
  1884  007141  20                 	db	32
  1885  007142  66                 	db	102	;'f'
  1886  007143  69                 	db	105	;'i'
  1887  007144  72                 	db	114	;'r'
  1888  007145  6D                 	db	109	;'m'
  1889  007146  77                 	db	119	;'w'
  1890  007147  61                 	db	97	;'a'
  1891  007148  72                 	db	114	;'r'
  1892  007149  65                 	db	101	;'e'
  1893  00714A  20                 	db	32
  1894  00714B  76                 	db	118	;'v'
  1895  00714C  65                 	db	101	;'e'
  1896  00714D  72                 	db	114	;'r'
  1897  00714E  73                 	db	115	;'s'
  1898  00714F  69                 	db	105	;'i'
  1899  007150  6F                 	db	111	;'o'
  1900  007151  6E                 	db	110	;'n'
  1901  007152  20                 	db	32
  1902  007153  69                 	db	105	;'i'
  1903  007154  6E                 	db	110	;'n'
  1904  007155  66                 	db	102	;'f'
  1905  007156  6F                 	db	111	;'o'
  1906  007157  72                 	db	114	;'r'
  1907  007158  6D                 	db	109	;'m'
  1908  007159  61                 	db	97	;'a'
  1909  00715A  74                 	db	116	;'t'
  1910  00715B  69                 	db	105	;'i'
  1911  00715C  6F                 	db	111	;'o'
  1912  00715D  6E                 	db	110	;'n'
  1913  00715E  2E                 	db	46
  1914  00715F  0D                 	db	13
  1915  007160  0A                 	db	10
  1916  007161  00                 	db	0
  1917  007162                     STR_276:
  1918  007162  20                 	db	32
  1919  007163  20                 	db	32
  1920  007164  20                 	db	32
  1921  007165  20                 	db	32
  1922  007166  20                 	db	32
  1923  007167  20                 	db	32
  1924  007168  20                 	db	32
  1925  007169  20                 	db	32
  1926  00716A  20                 	db	32
  1927  00716B  20                 	db	32
  1928  00716C  20                 	db	32
  1929  00716D  20                 	db	32
  1930  00716E  20                 	db	32
  1931  00716F  20                 	db	32
  1932  007170  20                 	db	32
  1933  007171  20                 	db	32
  1934  007172  46                 	db	70	;'F'
  1935  007173  6F                 	db	111	;'o'
  1936  007174  72                 	db	114	;'r'
  1937  007175  6D                 	db	109	;'m'
  1938  007176  61                 	db	97	;'a'
  1939  007177  74                 	db	116	;'t'
  1940  007178  3A                 	db	58	;':'
  1941  007179  20                 	db	32
  1942  00717A  73                 	db	115	;'s'
  1943  00717B  65                 	db	101	;'e'
  1944  00717C  74                 	db	116	;'t'
  1945  00717D  20                 	db	32
  1946  00717E  72                 	db	114	;'r'
  1947  00717F  77                 	db	119	;'w'
  1948  007180  74                 	db	116	;'t'
  1949  007181  69                 	db	105	;'i'
  1950  007182  6D                 	db	109	;'m'
  1951  007183  65                 	db	101	;'e'
  1952  007184  6F                 	db	111	;'o'
  1953  007185  75                 	db	117	;'u'
  1954  007186  74                 	db	116	;'t'
  1955  007187  20                 	db	32
  1956  007188  74                 	db	116	;'t'
  1957  007189  69                 	db	105	;'i'
  1958  00718A  6D                 	db	109	;'m'
  1959  00718B  65                 	db	101	;'e'
  1960  00718C  6F                 	db	111	;'o'
  1961  00718D  75                 	db	117	;'u'
  1962  00718E  74                 	db	116	;'t'
  1963  00718F  2E                 	db	46
  1964  007190  0D                 	db	13
  1965  007191  0A                 	db	10
  1966  007192  00                 	db	0
  1967  007193                     STR_274:
  1968  007193  20                 	db	32
  1969  007194  20                 	db	32
  1970  007195  20                 	db	32
  1971  007196  20                 	db	32
  1972  007197  44                 	db	68	;'D'
  1973  007198  45                 	db	69	;'E'
  1974  007199  43                 	db	67	;'C'
  1975  00719A  49                 	db	73	;'I'
  1976  00719B  4D                 	db	77	;'M'
  1977  00719C  41                 	db	65	;'A'
  1978  00719D  4C                 	db	76	;'L'
  1979  00719E  20                 	db	32
  1980  00719F  2D                 	db	45
  1981  0071A0  20                 	db	32
  1982  0071A1  44                 	db	68	;'D'
  1983  0071A2  69                 	db	105	;'i'
  1984  0071A3  73                 	db	115	;'s'
  1985  0071A4  70                 	db	112	;'p'
  1986  0071A5  6C                 	db	108	;'l'
  1987  0071A6  61                 	db	97	;'a'
  1988  0071A7  79                 	db	121	;'y'
  1989  0071A8  20                 	db	32
  1990  0071A9  6E                 	db	110	;'n'
  1991  0071AA  75                 	db	117	;'u'
  1992  0071AB  6D                 	db	109	;'m'
  1993  0071AC  65                 	db	101	;'e'
  1994  0071AD  72                 	db	114	;'r'
  1995  0071AE  69                 	db	105	;'i'
  1996  0071AF  63                 	db	99	;'c'
  1997  0071B0  61                 	db	97	;'a'
  1998  0071B1  6C                 	db	108	;'l'
  1999  0071B2  73                 	db	115	;'s'
  2000  0071B3  20                 	db	32
  2001  0071B4  69                 	db	105	;'i'
  2002  0071B5  6E                 	db	110	;'n'
  2003  0071B6  20                 	db	32
  2004  0071B7  64                 	db	100	;'d'
  2005  0071B8  65                 	db	101	;'e'
  2006  0071B9  63                 	db	99	;'c'
  2007  0071BA  69                 	db	105	;'i'
  2008  0071BB  6D                 	db	109	;'m'
  2009  0071BC  61                 	db	97	;'a'
  2010  0071BD  6C                 	db	108	;'l'
  2011  0071BE  2E                 	db	46
  2012  0071BF  0D                 	db	13
  2013  0071C0  0A                 	db	10
  2014  0071C1  00                 	db	0
  2015  0071C2                     STR_273:
  2016  0071C2  20                 	db	32
  2017  0071C3  20                 	db	32
  2018  0071C4  20                 	db	32
  2019  0071C5  20                 	db	32
  2020  0071C6  48                 	db	72	;'H'
  2021  0071C7  45                 	db	69	;'E'
  2022  0071C8  58                 	db	88	;'X'
  2023  0071C9  20                 	db	32
  2024  0071CA  2D                 	db	45
  2025  0071CB  20                 	db	32
  2026  0071CC  44                 	db	68	;'D'
  2027  0071CD  69                 	db	105	;'i'
  2028  0071CE  73                 	db	115	;'s'
  2029  0071CF  70                 	db	112	;'p'
  2030  0071D0  6C                 	db	108	;'l'
  2031  0071D1  61                 	db	97	;'a'
  2032  0071D2  79                 	db	121	;'y'
  2033  0071D3  20                 	db	32
  2034  0071D4  6E                 	db	110	;'n'
  2035  0071D5  75                 	db	117	;'u'
  2036  0071D6  6D                 	db	109	;'m'
  2037  0071D7  65                 	db	101	;'e'
  2038  0071D8  72                 	db	114	;'r'
  2039  0071D9  69                 	db	105	;'i'
  2040  0071DA  63                 	db	99	;'c'
  2041  0071DB  61                 	db	97	;'a'
  2042  0071DC  6C                 	db	108	;'l'
  2043  0071DD  73                 	db	115	;'s'
  2044  0071DE  20                 	db	32
  2045  0071DF  69                 	db	105	;'i'
  2046  0071E0  6E                 	db	110	;'n'
  2047  0071E1  20                 	db	32
  2048  0071E2  68                 	db	104	;'h'
  2049  0071E3  65                 	db	101	;'e'
  2050  0071E4  78                 	db	120	;'x'
  2051  0071E5  61                 	db	97	;'a'
  2052  0071E6  64                 	db	100	;'d'
  2053  0071E7  65                 	db	101	;'e'
  2054  0071E8  63                 	db	99	;'c'
  2055  0071E9  69                 	db	105	;'i'
  2056  0071EA  6D                 	db	109	;'m'
  2057  0071EB  61                 	db	97	;'a'
  2058  0071EC  6C                 	db	108	;'l'
  2059  0071ED  2E                 	db	46
  2060  0071EE  0D                 	db	13
  2061  0071EF  0A                 	db	10
  2062  0071F0  00                 	db	0
  2063  0071F1                     STR_264:
  2064  0071F1  46                 	db	70	;'F'
  2065  0071F2  49                 	db	73	;'I'
  2066  0071F3  4E                 	db	78	;'N'
  2067  0071F4  44                 	db	68	;'D'
  2068  0071F5  20                 	db	32
  2069  0071F6  2D                 	db	45
  2070  0071F7  20                 	db	32
  2071  0071F8  46                 	db	70	;'F'
  2072  0071F9  69                 	db	105	;'i'
  2073  0071FA  6E                 	db	110	;'n'
  2074  0071FB  64                 	db	100	;'d'
  2075  0071FC  20                 	db	32
  2076  0071FD  61                 	db	97	;'a'
  2077  0071FE  76                 	db	118	;'v'
  2078  0071FF  61                 	db	97	;'a'
  2079  007200  69                 	db	105	;'i'
  2080  007201  6C                 	db	108	;'l'
  2081  007202  61                 	db	97	;'a'
  2082  007203  62                 	db	98	;'b'
  2083  007204  6C                 	db	108	;'l'
  2084  007205  65                 	db	101	;'e'
  2085  007206  20                 	db	32
  2086  007207  43                 	db	67	;'C'
  2087  007208  41                 	db	65	;'A'
  2088  007209  4E                 	db	78	;'N'
  2089  00720A  34                 	db	52	;'4'
  2090  00720B  56                 	db	86	;'V'
  2091  00720C  53                 	db	83	;'S'
  2092  00720D  43                 	db	67	;'C'
  2093  00720E  50                 	db	80	;'P'
  2094  00720F  20                 	db	32
  2095  007210  6E                 	db	110	;'n'
  2096  007211  6F                 	db	111	;'o'
  2097  007212  64                 	db	100	;'d'
  2098  007213  65                 	db	101	;'e'
  2099  007214  73                 	db	115	;'s'
  2100  007215  20                 	db	32
  2101  007216  6F                 	db	111	;'o'
  2102  007217  6E                 	db	110	;'n'
  2103  007218  20                 	db	32
  2104  007219  62                 	db	98	;'b'
  2105  00721A  75                 	db	117	;'u'
  2106  00721B  73                 	db	115	;'s'
  2107  00721C  2E                 	db	46
  2108  00721D  0D                 	db	13
  2109  00721E  0A                 	db	10
  2110  00721F  00                 	db	0
  2111  007220                     STR_164:
  2112  007220  2B                 	db	43
  2113  007221  45                 	db	69	;'E'
  2114  007222  52                 	db	82	;'R'
  2115  007223  52                 	db	82	;'R'
  2116  007224  4F                 	db	79	;'O'
  2117  007225  52                 	db	82	;'R'
  2118  007226  20                 	db	32
  2119  007227  2D                 	db	45
  2120  007228  20                 	db	32
  2121  007229  57                 	db	87	;'W'
  2122  00722A  72                 	db	114	;'r'
  2123  00722B  6F                 	db	111	;'o'
  2124  00722C  6E                 	db	110	;'n'
  2125  00722D  67                 	db	103	;'g'
  2126  00722E  20                 	db	32
  2127  00722F  61                 	db	97	;'a'
  2128  007230  72                 	db	114	;'r'
  2129  007231  67                 	db	103	;'g'
  2130  007232  75                 	db	117	;'u'
  2131  007233  6D                 	db	109	;'m'
  2132  007234  65                 	db	101	;'e'
  2133  007235  6E                 	db	110	;'n'
  2134  007236  74                 	db	116	;'t'
  2135  007237  20                 	db	32
  2136  007238  74                 	db	116	;'t'
  2137  007239  6F                 	db	111	;'o'
  2138  00723A  20                 	db	32
  2139  00723B  27                 	db	39
  2140  00723C  73                 	db	115	;'s'
  2141  00723D  65                 	db	101	;'e'
  2142  00723E  74                 	db	116	;'t'
  2143  00723F  20                 	db	32
  2144  007240  74                 	db	116	;'t'
  2145  007241  69                 	db	105	;'i'
  2146  007242  6D                 	db	109	;'m'
  2147  007243  65                 	db	101	;'e'
  2148  007244  73                 	db	115	;'s'
  2149  007245  74                 	db	116	;'t'
  2150  007246  61                 	db	97	;'a'
  2151  007247  6D                 	db	109	;'m'
  2152  007248  70                 	db	112	;'p'
  2153  007249  27                 	db	39
  2154  00724A  2E                 	db	46
  2155  00724B  0D                 	db	13
  2156  00724C  0A                 	db	10
  2157  00724D  00                 	db	0
  2158  00724E                     STR_252:
  2159  00724E  53                 	db	83	;'S'
  2160  00724F  49                 	db	73	;'I'
  2161  007250  4C                 	db	76	;'L'
  2162  007251  45                 	db	69	;'E'
  2163  007252  4E                 	db	78	;'N'
  2164  007253  54                 	db	84	;'T'
  2165  007254  20                 	db	32
  2166  007255  2D                 	db	45
  2167  007256  20                 	db	32
  2168  007257  4F                 	db	79	;'O'
  2169  007258  70                 	db	112	;'p'
  2170  007259  65                 	db	101	;'e'
  2171  00725A  6E                 	db	110	;'n'
  2172  00725B  20                 	db	32
  2173  00725C  43                 	db	67	;'C'
  2174  00725D  41                 	db	65	;'A'
  2175  00725E  4E                 	db	78	;'N'
  2176  00725F  20                 	db	32
  2177  007260  69                 	db	105	;'i'
  2178  007261  6E                 	db	110	;'n'
  2179  007262  74                 	db	116	;'t'
  2180  007263  65                 	db	101	;'e'
  2181  007264  72                 	db	114	;'r'
  2182  007265  66                 	db	102	;'f'
  2183  007266  61                 	db	97	;'a'
  2184  007267  63                 	db	99	;'c'
  2185  007268  65                 	db	101	;'e'
  2186  007269  20                 	db	32
  2187  00726A  69                 	db	105	;'i'
  2188  00726B  6E                 	db	110	;'n'
  2189  00726C  20                 	db	32
  2190  00726D  73                 	db	115	;'s'
  2191  00726E  69                 	db	105	;'i'
  2192  00726F  6C                 	db	108	;'l'
  2193  007270  65                 	db	101	;'e'
  2194  007271  6E                 	db	110	;'n'
  2195  007272  74                 	db	116	;'t'
  2196  007273  20                 	db	32
  2197  007274  6D                 	db	109	;'m'
  2198  007275  6F                 	db	111	;'o'
  2199  007276  64                 	db	100	;'d'
  2200  007277  65                 	db	101	;'e'
  2201  007278  2E                 	db	46
  2202  007279  0D                 	db	13
  2203  00727A  0A                 	db	10
  2204  00727B  00                 	db	0
  2205  00727C                     STR_257:
  2206  00727C  49                 	db	73	;'I'
  2207  00727D  46                 	db	70	;'F'
  2208  00727E  4D                 	db	77	;'M'
  2209  00727F  4F                 	db	79	;'O'
  2210  007280  44                 	db	68	;'D'
  2211  007281  45                 	db	69	;'E'
  2212  007282  20                 	db	32
  2213  007283  2D                 	db	45
  2214  007284  20                 	db	32
  2215  007285  44                 	db	68	;'D'
  2216  007286  69                 	db	105	;'i'
  2217  007287  73                 	db	115	;'s'
  2218  007288  70                 	db	112	;'p'
  2219  007289  6C                 	db	108	;'l'
  2220  00728A  61                 	db	97	;'a'
  2221  00728B  79                 	db	121	;'y'
  2222  00728C  20                 	db	32
  2223  00728D  73                 	db	115	;'s'
  2224  00728E  65                 	db	101	;'e'
  2225  00728F  6C                 	db	108	;'l'
  2226  007290  65                 	db	101	;'e'
  2227  007291  63                 	db	99	;'c'
  2228  007292  74                 	db	116	;'t'
  2229  007293  65                 	db	101	;'e'
  2230  007294  64                 	db	100	;'d'
  2231  007295  20                 	db	32
  2232  007296  69                 	db	105	;'i'
  2233  007297  6E                 	db	110	;'n'
  2234  007298  74                 	db	116	;'t'
  2235  007299  65                 	db	101	;'e'
  2236  00729A  72                 	db	114	;'r'
  2237  00729B  66                 	db	102	;'f'
  2238  00729C  61                 	db	97	;'a'
  2239  00729D  63                 	db	99	;'c'
  2240  00729E  65                 	db	101	;'e'
  2241  00729F  20                 	db	32
  2242  0072A0  6D                 	db	109	;'m'
  2243  0072A1  6F                 	db	111	;'o'
  2244  0072A2  64                 	db	100	;'d'
  2245  0072A3  65                 	db	101	;'e'
  2246  0072A4  2E                 	db	46
  2247  0072A5  0D                 	db	13
  2248  0072A6  0A                 	db	10
  2249  0072A7  00                 	db	0
  2250  0072A8                     STR_251:
  2251  0072A8  4F                 	db	79	;'O'
  2252  0072A9  50                 	db	80	;'P'
  2253  0072AA  45                 	db	69	;'E'
  2254  0072AB  4E                 	db	78	;'N'
  2255  0072AC  20                 	db	32
  2256  0072AD  2D                 	db	45
  2257  0072AE  20                 	db	32
  2258  0072AF  4F                 	db	79	;'O'
  2259  0072B0  70                 	db	112	;'p'
  2260  0072B1  65                 	db	101	;'e'
  2261  0072B2  6E                 	db	110	;'n'
  2262  0072B3  20                 	db	32
  2263  0072B4  43                 	db	67	;'C'
  2264  0072B5  41                 	db	65	;'A'
  2265  0072B6  4E                 	db	78	;'N'
  2266  0072B7  20                 	db	32
  2267  0072B8  69                 	db	105	;'i'
  2268  0072B9  6E                 	db	110	;'n'
  2269  0072BA  74                 	db	116	;'t'
  2270  0072BB  65                 	db	101	;'e'
  2271  0072BC  72                 	db	114	;'r'
  2272  0072BD  66                 	db	102	;'f'
  2273  0072BE  61                 	db	97	;'a'
  2274  0072BF  63                 	db	99	;'c'
  2275  0072C0  65                 	db	101	;'e'
  2276  0072C1  20                 	db	32
  2277  0072C2  69                 	db	105	;'i'
  2278  0072C3  6E                 	db	110	;'n'
  2279  0072C4  20                 	db	32
  2280  0072C5  6E                 	db	110	;'n'
  2281  0072C6  6F                 	db	111	;'o'
  2282  0072C7  72                 	db	114	;'r'
  2283  0072C8  6D                 	db	109	;'m'
  2284  0072C9  61                 	db	97	;'a'
  2285  0072CA  6C                 	db	108	;'l'
  2286  0072CB  20                 	db	32
  2287  0072CC  6D                 	db	109	;'m'
  2288  0072CD  6F                 	db	111	;'o'
  2289  0072CE  64                 	db	100	;'d'
  2290  0072CF  65                 	db	101	;'e'
  2291  0072D0  2E                 	db	46
  2292  0072D1  0D                 	db	13
  2293  0072D2  0A                 	db	10
  2294  0072D3  00                 	db	0
  2295  0072D4                     STR_135:
  2296  0072D4  2B                 	db	43
  2297  0072D5  4F                 	db	79	;'O'
  2298  0072D6  4B                 	db	75	;'K'
  2299  0072D7  20                 	db	32
  2300  0072D8  2D                 	db	45
  2301  0072D9  20                 	db	32
  2302  0072DA  4E                 	db	78	;'N'
  2303  0072DB  75                 	db	117	;'u'
  2304  0072DC  6D                 	db	109	;'m'
  2305  0072DD  65                 	db	101	;'e'
  2306  0072DE  72                 	db	114	;'r'
  2307  0072DF  69                 	db	105	;'i'
  2308  0072E0  63                 	db	99	;'c'
  2309  0072E1  61                 	db	97	;'a'
  2310  0072E2  6C                 	db	108	;'l'
  2311  0072E3  20                 	db	32
  2312  0072E4  6F                 	db	111	;'o'
  2313  0072E5  75                 	db	117	;'u'
  2314  0072E6  74                 	db	116	;'t'
  2315  0072E7  70                 	db	112	;'p'
  2316  0072E8  75                 	db	117	;'u'
  2317  0072E9  74                 	db	116	;'t'
  2318  0072EA  20                 	db	32
  2319  0072EB  6E                 	db	110	;'n'
  2320  0072EC  6F                 	db	111	;'o'
  2321  0072ED  77                 	db	119	;'w'
  2322  0072EE  20                 	db	32
  2323  0072EF  69                 	db	105	;'i'
  2324  0072F0  6E                 	db	110	;'n'
  2325  0072F1  20                 	db	32
  2326  0072F2  68                 	db	104	;'h'
  2327  0072F3  65                 	db	101	;'e'
  2328  0072F4  78                 	db	120	;'x'
  2329  0072F5  61                 	db	97	;'a'
  2330  0072F6  64                 	db	100	;'d'
  2331  0072F7  65                 	db	101	;'e'
  2332  0072F8  63                 	db	99	;'c'
  2333  0072F9  69                 	db	105	;'i'
  2334  0072FA  6D                 	db	109	;'m'
  2335  0072FB  61                 	db	97	;'a'
  2336  0072FC  6C                 	db	108	;'l'
  2337  0072FD  0D                 	db	13
  2338  0072FE  0A                 	db	10
  2339  0072FF  00                 	db	0
  2340  007300                     STR_110:
  2341  007300  2D                 	db	45
  2342  007301  45                 	db	69	;'E'
  2343  007302  52                 	db	82	;'R'
  2344  007303  52                 	db	82	;'R'
  2345  007304  4F                 	db	79	;'O'
  2346  007305  52                 	db	82	;'R'
  2347  007306  20                 	db	32
  2348  007307  2D                 	db	45
  2349  007308  20                 	db	32
  2350  007309  66                 	db	102	;'f'
  2351  00730A  69                 	db	105	;'i'
  2352  00730B  6C                 	db	108	;'l'
  2353  00730C  74                 	db	116	;'t'
  2354  00730D  65                 	db	101	;'e'
  2355  00730E  72                 	db	114	;'r'
  2356  00730F  20                 	db	32
  2357  007310  66                 	db	102	;'f'
  2358  007311  6F                 	db	111	;'o'
  2359  007312  72                 	db	114	;'r'
  2360  007313  20                 	db	32
  2361  007314  70                 	db	112	;'p'
  2362  007315  72                 	db	114	;'r'
  2363  007316  69                 	db	105	;'i'
  2364  007317  6F                 	db	111	;'o'
  2365  007318  72                 	db	114	;'r'
  2366  007319  69                 	db	105	;'i'
  2367  00731A  74                 	db	116	;'t'
  2368  00731B  79                 	db	121	;'y'
  2369  00731C  20                 	db	32
  2370  00731D  69                 	db	105	;'i'
  2371  00731E  73                 	db	115	;'s'
  2372  00731F  20                 	db	32
  2373  007320  6D                 	db	109	;'m'
  2374  007321  69                 	db	105	;'i'
  2375  007322  73                 	db	115	;'s'
  2376  007323  73                 	db	115	;'s'
  2377  007324  69                 	db	105	;'i'
  2378  007325  6E                 	db	110	;'n'
  2379  007326  67                 	db	103	;'g'
  2380  007327  0D                 	db	13
  2381  007328  0A                 	db	10
  2382  007329  00                 	db	0
  2383  00732A                     STR_158:
  2384  00732A  2B                 	db	43
  2385  00732B  45                 	db	69	;'E'
  2386  00732C  52                 	db	82	;'R'
  2387  00732D  52                 	db	82	;'R'
  2388  00732E  4F                 	db	79	;'O'
  2389  00732F  52                 	db	82	;'R'
  2390  007330  20                 	db	32
  2391  007331  2D                 	db	45
  2392  007332  20                 	db	32
  2393  007333  57                 	db	87	;'W'
  2394  007334  72                 	db	114	;'r'
  2395  007335  6F                 	db	111	;'o'
  2396  007336  6E                 	db	110	;'n'
  2397  007337  67                 	db	103	;'g'
  2398  007338  20                 	db	32
  2399  007339  61                 	db	97	;'a'
  2400  00733A  72                 	db	114	;'r'
  2401  00733B  67                 	db	103	;'g'
  2402  00733C  75                 	db	117	;'u'
  2403  00733D  6D                 	db	109	;'m'
  2404  00733E  65                 	db	101	;'e'
  2405  00733F  6E                 	db	110	;'n'
  2406  007340  74                 	db	116	;'t'
  2407  007341  20                 	db	32
  2408  007342  74                 	db	116	;'t'
  2409  007343  6F                 	db	111	;'o'
  2410  007344  20                 	db	32
  2411  007345  27                 	db	39
  2412  007346  73                 	db	115	;'s'
  2413  007347  65                 	db	101	;'e'
  2414  007348  74                 	db	116	;'t'
  2415  007349  20                 	db	32
  2416  00734A  65                 	db	101	;'e'
  2417  00734B  63                 	db	99	;'c'
  2418  00734C  68                 	db	104	;'h'
  2419  00734D  6F                 	db	111	;'o'
  2420  00734E  27                 	db	39
  2421  00734F  2E                 	db	46
  2422  007350  0D                 	db	13
  2423  007351  0A                 	db	10
  2424  007352  00                 	db	0
  2425  007353                     STR_116:
  2426  007353  2D                 	db	45
  2427  007354  45                 	db	69	;'E'
  2428  007355  52                 	db	82	;'R'
  2429  007356  52                 	db	82	;'R'
  2430  007357  4F                 	db	79	;'O'
  2431  007358  52                 	db	82	;'R'
  2432  007359  20                 	db	32
  2433  00735A  2D                 	db	45
  2434  00735B  20                 	db	32
  2435  00735C  66                 	db	102	;'f'
  2436  00735D  69                 	db	105	;'i'
  2437  00735E  6C                 	db	108	;'l'
  2438  00735F  74                 	db	116	;'t'
  2439  007360  65                 	db	101	;'e'
  2440  007361  72                 	db	114	;'r'
  2441  007362  20                 	db	32
  2442  007363  66                 	db	102	;'f'
  2443  007364  6F                 	db	111	;'o'
  2444  007365  72                 	db	114	;'r'
  2445  007366  20                 	db	32
  2446  007367  6E                 	db	110	;'n'
  2447  007368  69                 	db	105	;'i'
  2448  007369  64                 	db	100	;'d'
  2449  00736A  65                 	db	101	;'e'
  2450  00736B  20                 	db	32
  2451  00736C  69                 	db	105	;'i'
  2452  00736D  64                 	db	100	;'d'
  2453  00736E  20                 	db	32
  2454  00736F  69                 	db	105	;'i'
  2455  007370  73                 	db	115	;'s'
  2456  007371  20                 	db	32
  2457  007372  6D                 	db	109	;'m'
  2458  007373  69                 	db	105	;'i'
  2459  007374  73                 	db	115	;'s'
  2460  007375  73                 	db	115	;'s'
  2461  007376  69                 	db	105	;'i'
  2462  007377  6E                 	db	110	;'n'
  2463  007378  67                 	db	103	;'g'
  2464  007379  0D                 	db	13
  2465  00737A  0A                 	db	10
  2466  00737B  00                 	db	0
  2467  00737C                     STR_263:
  2468  00737C  48                 	db	72	;'H'
  2469  00737D  45                 	db	69	;'E'
  2470  00737E  4C                 	db	76	;'L'
  2471  00737F  50                 	db	80	;'P'
  2472  007380  20                 	db	32
  2473  007381  2D                 	db	45
  2474  007382  20                 	db	32
  2475  007383  44                 	db	68	;'D'
  2476  007384  69                 	db	105	;'i'
  2477  007385  73                 	db	115	;'s'
  2478  007386  70                 	db	112	;'p'
  2479  007387  6C                 	db	108	;'l'
  2480  007388  61                 	db	97	;'a'
  2481  007389  79                 	db	121	;'y'
  2482  00738A  20                 	db	32
  2483  00738B  74                 	db	116	;'t'
  2484  00738C  68                 	db	104	;'h'
  2485  00738D  69                 	db	105	;'i'
  2486  00738E  73                 	db	115	;'s'
  2487  00738F  20                 	db	32
  2488  007390  68                 	db	104	;'h'
  2489  007391  65                 	db	101	;'e'
  2490  007392  6C                 	db	108	;'l'
  2491  007393  70                 	db	112	;'p'
  2492  007394  20                 	db	32
  2493  007395  69                 	db	105	;'i'
  2494  007396  6E                 	db	110	;'n'
  2495  007397  66                 	db	102	;'f'
  2496  007398  6F                 	db	111	;'o'
  2497  007399  72                 	db	114	;'r'
  2498  00739A  6D                 	db	109	;'m'
  2499  00739B  61                 	db	97	;'a'
  2500  00739C  74                 	db	116	;'t'
  2501  00739D  69                 	db	105	;'i'
  2502  00739E  6F                 	db	111	;'o'
  2503  00739F  6E                 	db	110	;'n'
  2504  0073A0  2E                 	db	46
  2505  0073A1  0D                 	db	13
  2506  0073A2  0A                 	db	10
  2507  0073A3  00                 	db	0
  2508  0073A4                     STR_125:
  2509  0073A4  2D                 	db	45
  2510  0073A5  45                 	db	69	;'E'
  2511  0073A6  52                 	db	82	;'R'
  2512  0073A7  52                 	db	82	;'R'
  2513  0073A8  4F                 	db	79	;'O'
  2514  0073A9  52                 	db	82	;'R'
  2515  0073AA  20                 	db	32
  2516  0073AB  2D                 	db	45
  2517  0073AC  20                 	db	32
  2518  0073AD  6D                 	db	109	;'m'
  2519  0073AE  61                 	db	97	;'a'
  2520  0073AF  73                 	db	115	;'s'
  2521  0073B0  6B                 	db	107	;'k'
  2522  0073B1  20                 	db	32
  2523  0073B2  66                 	db	102	;'f'
  2524  0073B3  6F                 	db	111	;'o'
  2525  0073B4  72                 	db	114	;'r'
  2526  0073B5  20                 	db	32
  2527  0073B6  70                 	db	112	;'p'
  2528  0073B7  72                 	db	114	;'r'
  2529  0073B8  69                 	db	105	;'i'
  2530  0073B9  6F                 	db	111	;'o'
  2531  0073BA  72                 	db	114	;'r'
  2532  0073BB  69                 	db	105	;'i'
  2533  0073BC  74                 	db	116	;'t'
  2534  0073BD  79                 	db	121	;'y'
  2535  0073BE  20                 	db	32
  2536  0073BF  69                 	db	105	;'i'
  2537  0073C0  73                 	db	115	;'s'
  2538  0073C1  20                 	db	32
  2539  0073C2  6D                 	db	109	;'m'
  2540  0073C3  69                 	db	105	;'i'
  2541  0073C4  73                 	db	115	;'s'
  2542  0073C5  73                 	db	115	;'s'
  2543  0073C6  69                 	db	105	;'i'
  2544  0073C7  6E                 	db	110	;'n'
  2545  0073C8  67                 	db	103	;'g'
  2546  0073C9  0D                 	db	13
  2547  0073CA  0A                 	db	10
  2548  0073CB  00                 	db	0
  2549  0073CC                     STR_137:
  2550  0073CC  2B                 	db	43
  2551  0073CD  4F                 	db	79	;'O'
  2552  0073CE  4B                 	db	75	;'K'
  2553  0073CF  20                 	db	32
  2554  0073D0  2D                 	db	45
  2555  0073D1  20                 	db	32
  2556  0073D2  4E                 	db	78	;'N'
  2557  0073D3  75                 	db	117	;'u'
  2558  0073D4  6D                 	db	109	;'m'
  2559  0073D5  65                 	db	101	;'e'
  2560  0073D6  72                 	db	114	;'r'
  2561  0073D7  69                 	db	105	;'i'
  2562  0073D8  63                 	db	99	;'c'
  2563  0073D9  61                 	db	97	;'a'
  2564  0073DA  6C                 	db	108	;'l'
  2565  0073DB  20                 	db	32
  2566  0073DC  6F                 	db	111	;'o'
  2567  0073DD  75                 	db	117	;'u'
  2568  0073DE  74                 	db	116	;'t'
  2569  0073DF  70                 	db	112	;'p'
  2570  0073E0  75                 	db	117	;'u'
  2571  0073E1  74                 	db	116	;'t'
  2572  0073E2  20                 	db	32
  2573  0073E3  6E                 	db	110	;'n'
  2574  0073E4  6F                 	db	111	;'o'
  2575  0073E5  77                 	db	119	;'w'
  2576  0073E6  20                 	db	32
  2577  0073E7  69                 	db	105	;'i'
  2578  0073E8  6E                 	db	110	;'n'
  2579  0073E9  20                 	db	32
  2580  0073EA  64                 	db	100	;'d'
  2581  0073EB  65                 	db	101	;'e'
  2582  0073EC  63                 	db	99	;'c'
  2583  0073ED  69                 	db	105	;'i'
  2584  0073EE  6D                 	db	109	;'m'
  2585  0073EF  61                 	db	97	;'a'
  2586  0073F0  6C                 	db	108	;'l'
  2587  0073F1  0D                 	db	13
  2588  0073F2  0A                 	db	10
  2589  0073F3  00                 	db	0
  2590  0073F4                     STR_108:
  2591  0073F4  2D                 	db	45
  2592  0073F5  45                 	db	69	;'E'
  2593  0073F6  52                 	db	82	;'R'
  2594  0073F7  52                 	db	82	;'R'
  2595  0073F8  4F                 	db	79	;'O'
  2596  0073F9  52                 	db	82	;'R'
  2597  0073FA  20                 	db	32
  2598  0073FB  2D                 	db	45
  2599  0073FC  20                 	db	32
  2600  0073FD  4E                 	db	78	;'N'
  2601  0073FE  6F                 	db	111	;'o'
  2602  0073FF  20                 	db	32
  2603  007400  66                 	db	102	;'f'
  2604  007401  69                 	db	105	;'i'
  2605  007402  6C                 	db	108	;'l'
  2606  007403  74                 	db	116	;'t'
  2607  007404  65                 	db	101	;'e'
  2608  007405  72                 	db	114	;'r'
  2609  007406  20                 	db	32
  2610  007407  6E                 	db	110	;'n'
  2611  007408  75                 	db	117	;'u'
  2612  007409  6D                 	db	109	;'m'
  2613  00740A  62                 	db	98	;'b'
  2614  00740B  65                 	db	101	;'e'
  2615  00740C  72                 	db	114	;'r'
  2616  00740D  20                 	db	32
  2617  00740E  73                 	db	115	;'s'
  2618  00740F  70                 	db	112	;'p'
  2619  007410  65                 	db	101	;'e'
  2620  007411  63                 	db	99	;'c'
  2621  007412  69                 	db	105	;'i'
  2622  007413  66                 	db	102	;'f'
  2623  007414  69                 	db	105	;'i'
  2624  007415  65                 	db	101	;'e'
  2625  007416  64                 	db	100	;'d'
  2626  007417  2E                 	db	46
  2627  007418  0D                 	db	13
  2628  007419  0A                 	db	10
  2629  00741A  00                 	db	0
  2630  00741B                     STR_262:
  2631  00741B  45                 	db	69	;'E'
  2632  00741C  52                 	db	82	;'R'
  2633  00741D  52                 	db	82	;'R'
  2634  00741E  20                 	db	32
  2635  00741F  2D                 	db	45
  2636  007420  20                 	db	32
  2637  007421  44                 	db	68	;'D'
  2638  007422  69                 	db	105	;'i'
  2639  007423  73                 	db	115	;'s'
  2640  007424  70                 	db	112	;'p'
  2641  007425  6C                 	db	108	;'l'
  2642  007426  61                 	db	97	;'a'
  2643  007427  79                 	db	121	;'y'
  2644  007428  20                 	db	32
  2645  007429  43                 	db	67	;'C'
  2646  00742A  41                 	db	65	;'A'
  2647  00742B  4E                 	db	78	;'N'
  2648  00742C  20                 	db	32
  2649  00742D  65                 	db	101	;'e'
  2650  00742E  72                 	db	114	;'r'
  2651  00742F  72                 	db	114	;'r'
  2652  007430  6F                 	db	111	;'o'
  2653  007431  72                 	db	114	;'r'
  2654  007432  20                 	db	32
  2655  007433  69                 	db	105	;'i'
  2656  007434  6E                 	db	110	;'n'
  2657  007435  66                 	db	102	;'f'
  2658  007436  6F                 	db	111	;'o'
  2659  007437  72                 	db	114	;'r'
  2660  007438  6D                 	db	109	;'m'
  2661  007439  61                 	db	97	;'a'
  2662  00743A  74                 	db	116	;'t'
  2663  00743B  69                 	db	105	;'i'
  2664  00743C  6F                 	db	111	;'o'
  2665  00743D  6E                 	db	110	;'n'
  2666  00743E  2E                 	db	46
  2667  00743F  0D                 	db	13
  2668  007440  0A                 	db	10
  2669  007441  00                 	db	0
  2670  007442                     STR_248:
  2671  007442  48                 	db	72	;'H'
  2672  007443  65                 	db	101	;'e'
  2673  007444  6C                 	db	108	;'l'
  2674  007445  70                 	db	112	;'p'
  2675  007446  20                 	db	32
  2676  007447  66                 	db	102	;'f'
  2677  007448  6F                 	db	111	;'o'
  2678  007449  72                 	db	114	;'r'
  2679  00744A  20                 	db	32
  2680  00744B  74                 	db	116	;'t'
  2681  00744C  68                 	db	104	;'h'
  2682  00744D  65                 	db	101	;'e'
  2683  00744E  20                 	db	32
  2684  00744F  46                 	db	70	;'F'
  2685  007450  72                 	db	114	;'r'
  2686  007451  61                 	db	97	;'a'
  2687  007452  6E                 	db	110	;'n'
  2688  007453  6B                 	db	107	;'k'
  2689  007454  66                 	db	102	;'f'
  2690  007455  75                 	db	117	;'u'
  2691  007456  72                 	db	114	;'r'
  2692  007457  74                 	db	116	;'t'
  2693  007458  20                 	db	32
  2694  007459  52                 	db	82	;'R'
  2695  00745A  53                 	db	83	;'S'
  2696  00745B  2D                 	db	45
  2697  00745C  32                 	db	50	;'2'
  2698  00745D  33                 	db	51	;'3'
  2699  00745E  32                 	db	50	;'2'
  2700  00745F  20                 	db	32
  2701  007460  6D                 	db	109	;'m'
  2702  007461  6F                 	db	111	;'o'
  2703  007462  64                 	db	100	;'d'
  2704  007463  75                 	db	117	;'u'
  2705  007464  6C                 	db	108	;'l'
  2706  007465  65                 	db	101	;'e'
  2707  007466  0D                 	db	13
  2708  007467  0A                 	db	10
  2709  007468  00                 	db	0
  2710  007469                     STR_131:
  2711  007469  2D                 	db	45
  2712  00746A  45                 	db	69	;'E'
  2713  00746B  52                 	db	82	;'R'
  2714  00746C  52                 	db	82	;'R'
  2715  00746D  4F                 	db	79	;'O'
  2716  00746E  52                 	db	82	;'R'
  2717  00746F  20                 	db	32
  2718  007470  2D                 	db	45
  2719  007471  20                 	db	32
  2720  007472  6D                 	db	109	;'m'
  2721  007473  61                 	db	97	;'a'
  2722  007474  73                 	db	115	;'s'
  2723  007475  6B                 	db	107	;'k'
  2724  007476  20                 	db	32
  2725  007477  66                 	db	102	;'f'
  2726  007478  6F                 	db	111	;'o'
  2727  007479  72                 	db	114	;'r'
  2728  00747A  20                 	db	32
  2729  00747B  6E                 	db	110	;'n'
  2730  00747C  69                 	db	105	;'i'
  2731  00747D  64                 	db	100	;'d'
  2732  00747E  65                 	db	101	;'e'
  2733  00747F  20                 	db	32
  2734  007480  69                 	db	105	;'i'
  2735  007481  64                 	db	100	;'d'
  2736  007482  20                 	db	32
  2737  007483  69                 	db	105	;'i'
  2738  007484  73                 	db	115	;'s'
  2739  007485  20                 	db	32
  2740  007486  6D                 	db	109	;'m'
  2741  007487  69                 	db	105	;'i'
  2742  007488  73                 	db	115	;'s'
  2743  007489  73                 	db	115	;'s'
  2744  00748A  69                 	db	105	;'i'
  2745  00748B  6E                 	db	110	;'n'
  2746  00748C  67                 	db	103	;'g'
  2747  00748D  0D                 	db	13
  2748  00748E  0A                 	db	10
  2749  00748F  00                 	db	0
  2750  007490                     STR_112:
  2751  007490  2D                 	db	45
  2752  007491  45                 	db	69	;'E'
  2753  007492  52                 	db	82	;'R'
  2754  007493  52                 	db	82	;'R'
  2755  007494  4F                 	db	79	;'O'
  2756  007495  52                 	db	82	;'R'
  2757  007496  20                 	db	32
  2758  007497  2D                 	db	45
  2759  007498  20                 	db	32
  2760  007499  66                 	db	102	;'f'
  2761  00749A  69                 	db	105	;'i'
  2762  00749B  6C                 	db	108	;'l'
  2763  00749C  74                 	db	116	;'t'
  2764  00749D  65                 	db	101	;'e'
  2765  00749E  72                 	db	114	;'r'
  2766  00749F  20                 	db	32
  2767  0074A0  66                 	db	102	;'f'
  2768  0074A1  6F                 	db	111	;'o'
  2769  0074A2  72                 	db	114	;'r'
  2770  0074A3  20                 	db	32
  2771  0074A4  63                 	db	99	;'c'
  2772  0074A5  6C                 	db	108	;'l'
  2773  0074A6  61                 	db	97	;'a'
  2774  0074A7  73                 	db	115	;'s'
  2775  0074A8  73                 	db	115	;'s'
  2776  0074A9  20                 	db	32
  2777  0074AA  69                 	db	105	;'i'
  2778  0074AB  73                 	db	115	;'s'
  2779  0074AC  20                 	db	32
  2780  0074AD  6D                 	db	109	;'m'
  2781  0074AE  69                 	db	105	;'i'
  2782  0074AF  73                 	db	115	;'s'
  2783  0074B0  73                 	db	115	;'s'
  2784  0074B1  69                 	db	105	;'i'
  2785  0074B2  6E                 	db	110	;'n'
  2786  0074B3  67                 	db	103	;'g'
  2787  0074B4  0D                 	db	13
  2788  0074B5  0A                 	db	10
  2789  0074B6  00                 	db	0
  2790  0074B7                     STR_279:
  2791  0074B7  20                 	db	32
  2792  0074B8  20                 	db	32
  2793  0074B9  20                 	db	32
  2794  0074BA  20                 	db	32
  2795  0074BB  20                 	db	32
  2796  0074BC  20                 	db	32
  2797  0074BD  20                 	db	32
  2798  0074BE  20                 	db	32
  2799  0074BF  20                 	db	32
  2800  0074C0  20                 	db	32
  2801  0074C1  20                 	db	32
  2802  0074C2  4D                 	db	77	;'M'
  2803  0074C3  6F                 	db	111	;'o'
  2804  0074C4  64                 	db	100	;'d'
  2805  0074C5  65                 	db	101	;'e'
  2806  0074C6  73                 	db	115	;'s'
  2807  0074C7  3A                 	db	58	;':'
  2808  0074C8  20                 	db	32
  2809  0074C9  76                 	db	118	;'v'
  2810  0074CA  65                 	db	101	;'e'
  2811  0074CB  72                 	db	114	;'r'
  2812  0074CC  62                 	db	98	;'b'
  2813  0074CD  6F                 	db	111	;'o'
  2814  0074CE  73                 	db	115	;'s'
  2815  0074CF  65                 	db	101	;'e'
  2816  0074D0  7C                 	db	124
  2817  0074D1  76                 	db	118	;'v'
  2818  0074D2  73                 	db	115	;'s'
  2819  0074D3  63                 	db	99	;'c'
  2820  0074D4  70                 	db	112	;'p'
  2821  0074D5  7C                 	db	124
  2822  0074D6  73                 	db	115	;'s'
  2823  0074D7  6C                 	db	108	;'l'
  2824  0074D8  63                 	db	99	;'c'
  2825  0074D9  61                 	db	97	;'a'
  2826  0074DA  6E                 	db	110	;'n'
  2827  0074DB  0D                 	db	13
  2828  0074DC  0A                 	db	10
  2829  0074DD  00                 	db	0
  2830  0074DE                     STR_114:
  2831  0074DE  2D                 	db	45
  2832  0074DF  45                 	db	69	;'E'
  2833  0074E0  52                 	db	82	;'R'
  2834  0074E1  52                 	db	82	;'R'
  2835  0074E2  4F                 	db	79	;'O'
  2836  0074E3  52                 	db	82	;'R'
  2837  0074E4  20                 	db	32
  2838  0074E5  2D                 	db	45
  2839  0074E6  20                 	db	32
  2840  0074E7  66                 	db	102	;'f'
  2841  0074E8  69                 	db	105	;'i'
  2842  0074E9  6C                 	db	108	;'l'
  2843  0074EA  74                 	db	116	;'t'
  2844  0074EB  65                 	db	101	;'e'
  2845  0074EC  72                 	db	114	;'r'
  2846  0074ED  20                 	db	32
  2847  0074EE  66                 	db	102	;'f'
  2848  0074EF  6F                 	db	111	;'o'
  2849  0074F0  72                 	db	114	;'r'
  2850  0074F1  20                 	db	32
  2851  0074F2  74                 	db	116	;'t'
  2852  0074F3  79                 	db	121	;'y'
  2853  0074F4  70                 	db	112	;'p'
  2854  0074F5  65                 	db	101	;'e'
  2855  0074F6  20                 	db	32
  2856  0074F7  69                 	db	105	;'i'
  2857  0074F8  73                 	db	115	;'s'
  2858  0074F9  20                 	db	32
  2859  0074FA  6D                 	db	109	;'m'
  2860  0074FB  69                 	db	105	;'i'
  2861  0074FC  73                 	db	115	;'s'
  2862  0074FD  73                 	db	115	;'s'
  2863  0074FE  69                 	db	105	;'i'
  2864  0074FF  6E                 	db	110	;'n'
  2865  007500  67                 	db	103	;'g'
  2866  007501  0D                 	db	13
  2867  007502  0A                 	db	10
  2868  007503  00                 	db	0
  2869  007504                     STR_89:
  2870  007504  2B                 	db	43
  2871  007505  4F                 	db	79	;'O'
  2872  007506  4B                 	db	75	;'K'
  2873  007507  20                 	db	32
  2874  007508  2D                 	db	45
  2875  007509  20                 	db	32
  2876  00750A  56                 	db	86	;'V'
  2877  00750B  61                 	db	97	;'a'
  2878  00750C  6C                 	db	108	;'l'
  2879  00750D  75                 	db	117	;'u'
  2880  00750E  65                 	db	101	;'e'
  2881  00750F  20                 	db	32
  2882  007510  77                 	db	119	;'w'
  2883  007511  72                 	db	114	;'r'
  2884  007512  69                 	db	105	;'i'
  2885  007513  74                 	db	116	;'t'
  2886  007514  74                 	db	116	;'t'
  2887  007515  65                 	db	101	;'e'
  2888  007516  6E                 	db	110	;'n'
  2889  007517  20                 	db	32
  2890  007518  73                 	db	115	;'s'
  2891  007519  75                 	db	117	;'u'
  2892  00751A  63                 	db	99	;'c'
  2893  00751B  63                 	db	99	;'c'
  2894  00751C  65                 	db	101	;'e'
  2895  00751D  73                 	db	115	;'s'
  2896  00751E  73                 	db	115	;'s'
  2897  00751F  66                 	db	102	;'f'
  2898  007520  75                 	db	117	;'u'
  2899  007521  6C                 	db	108	;'l'
  2900  007522  6C                 	db	108	;'l'
  2901  007523  79                 	db	121	;'y'
  2902  007524  20                 	db	32
  2903  007525  66                 	db	102	;'f'
  2904  007526  6F                 	db	111	;'o'
  2905  007527  72                 	db	114	;'r'
  2906  007528  20                 	db	32
  2907  007529  00                 	db	0
  2908  00752A                     STR_123:
  2909  00752A  2D                 	db	45
  2910  00752B  45                 	db	69	;'E'
  2911  00752C  52                 	db	82	;'R'
  2912  00752D  52                 	db	82	;'R'
  2913  00752E  4F                 	db	79	;'O'
  2914  00752F  52                 	db	82	;'R'
  2915  007530  20                 	db	32
  2916  007531  2D                 	db	45
  2917  007532  20                 	db	32
  2918  007533  4E                 	db	78	;'N'
  2919  007534  6F                 	db	111	;'o'
  2920  007535  20                 	db	32
  2921  007536  6D                 	db	109	;'m'
  2922  007537  61                 	db	97	;'a'
  2923  007538  73                 	db	115	;'s'
  2924  007539  6B                 	db	107	;'k'
  2925  00753A  20                 	db	32
  2926  00753B  6E                 	db	110	;'n'
  2927  00753C  75                 	db	117	;'u'
  2928  00753D  6D                 	db	109	;'m'
  2929  00753E  62                 	db	98	;'b'
  2930  00753F  65                 	db	101	;'e'
  2931  007540  72                 	db	114	;'r'
  2932  007541  20                 	db	32
  2933  007542  73                 	db	115	;'s'
  2934  007543  70                 	db	112	;'p'
  2935  007544  65                 	db	101	;'e'
  2936  007545  63                 	db	99	;'c'
  2937  007546  69                 	db	105	;'i'
  2938  007547  66                 	db	102	;'f'
  2939  007548  69                 	db	105	;'i'
  2940  007549  65                 	db	101	;'e'
  2941  00754A  64                 	db	100	;'d'
  2942  00754B  2E                 	db	46
  2943  00754C  0D                 	db	13
  2944  00754D  0A                 	db	10
  2945  00754E  00                 	db	0
  2946  00754F                     STR_1:
  2947  00754F  0D                 	db	13
  2948  007550  0A                 	db	10
  2949  007551  46                 	db	70	;'F'
  2950  007552  72                 	db	114	;'r'
  2951  007553  61                 	db	97	;'a'
  2952  007554  6E                 	db	110	;'n'
  2953  007555  6B                 	db	107	;'k'
  2954  007556  66                 	db	102	;'f'
  2955  007557  75                 	db	117	;'u'
  2956  007558  72                 	db	114	;'r'
  2957  007559  74                 	db	116	;'t'
  2958  00755A  20                 	db	32
  2959  00755B  52                 	db	82	;'R'
  2960  00755C  53                 	db	83	;'S'
  2961  00755D  2D                 	db	45
  2962  00755E  32                 	db	50	;'2'
  2963  00755F  33                 	db	51	;'3'
  2964  007560  32                 	db	50	;'2'
  2965  007561  20                 	db	32
  2966  007562  43                 	db	67	;'C'
  2967  007563  41                 	db	65	;'A'
  2968  007564  4E                 	db	78	;'N'
  2969  007565  34                 	db	52	;'4'
  2970  007566  56                 	db	86	;'V'
  2971  007567  53                 	db	83	;'S'
  2972  007568  43                 	db	67	;'C'
  2973  007569  50                 	db	80	;'P'
  2974  00756A  20                 	db	32
  2975  00756B  6D                 	db	109	;'m'
  2976  00756C  6F                 	db	111	;'o'
  2977  00756D  64                 	db	100	;'d'
  2978  00756E  75                 	db	117	;'u'
  2979  00756F  6C                 	db	108	;'l'
  2980  007570  65                 	db	101	;'e'
  2981  007571  0D                 	db	13
  2982  007572  0A                 	db	10
  2983  007573  00                 	db	0
  2984  007574                     STR_127:
  2985  007574  2D                 	db	45
  2986  007575  45                 	db	69	;'E'
  2987  007576  52                 	db	82	;'R'
  2988  007577  52                 	db	82	;'R'
  2989  007578  4F                 	db	79	;'O'
  2990  007579  52                 	db	82	;'R'
  2991  00757A  20                 	db	32
  2992  00757B  2D                 	db	45
  2993  00757C  20                 	db	32
  2994  00757D  6D                 	db	109	;'m'
  2995  00757E  61                 	db	97	;'a'
  2996  00757F  73                 	db	115	;'s'
  2997  007580  6B                 	db	107	;'k'
  2998  007581  20                 	db	32
  2999  007582  66                 	db	102	;'f'
  3000  007583  6F                 	db	111	;'o'
  3001  007584  72                 	db	114	;'r'
  3002  007585  20                 	db	32
  3003  007586  63                 	db	99	;'c'
  3004  007587  6C                 	db	108	;'l'
  3005  007588  61                 	db	97	;'a'
  3006  007589  73                 	db	115	;'s'
  3007  00758A  73                 	db	115	;'s'
  3008  00758B  20                 	db	32
  3009  00758C  69                 	db	105	;'i'
  3010  00758D  73                 	db	115	;'s'
  3011  00758E  20                 	db	32
  3012  00758F  6D                 	db	109	;'m'
  3013  007590  69                 	db	105	;'i'
  3014  007591  73                 	db	115	;'s'
  3015  007592  73                 	db	115	;'s'
  3016  007593  69                 	db	105	;'i'
  3017  007594  6E                 	db	110	;'n'
  3018  007595  67                 	db	103	;'g'
  3019  007596  0D                 	db	13
  3020  007597  0A                 	db	10
  3021  007598  00                 	db	0
  3022  007599                     STR_129:
  3023  007599  2D                 	db	45
  3024  00759A  45                 	db	69	;'E'
  3025  00759B  52                 	db	82	;'R'
  3026  00759C  52                 	db	82	;'R'
  3027  00759D  4F                 	db	79	;'O'
  3028  00759E  52                 	db	82	;'R'
  3029  00759F  20                 	db	32
  3030  0075A0  2D                 	db	45
  3031  0075A1  20                 	db	32
  3032  0075A2  6D                 	db	109	;'m'
  3033  0075A3  61                 	db	97	;'a'
  3034  0075A4  73                 	db	115	;'s'
  3035  0075A5  6B                 	db	107	;'k'
  3036  0075A6  20                 	db	32
  3037  0075A7  66                 	db	102	;'f'
  3038  0075A8  6F                 	db	111	;'o'
  3039  0075A9  72                 	db	114	;'r'
  3040  0075AA  20                 	db	32
  3041  0075AB  74                 	db	116	;'t'
  3042  0075AC  79                 	db	121	;'y'
  3043  0075AD  70                 	db	112	;'p'
  3044  0075AE  65                 	db	101	;'e'
  3045  0075AF  20                 	db	32
  3046  0075B0  69                 	db	105	;'i'
  3047  0075B1  73                 	db	115	;'s'
  3048  0075B2  20                 	db	32
  3049  0075B3  6D                 	db	109	;'m'
  3050  0075B4  69                 	db	105	;'i'
  3051  0075B5  73                 	db	115	;'s'
  3052  0075B6  73                 	db	115	;'s'
  3053  0075B7  69                 	db	105	;'i'
  3054  0075B8  6E                 	db	110	;'n'
  3055  0075B9  67                 	db	103	;'g'
  3056  0075BA  0D                 	db	13
  3057  0075BB  0A                 	db	10
  3058  0075BC  00                 	db	0
  3059  0075BD                     STR_93:
  3060  0075BD  2D                 	db	45
  3061  0075BE  45                 	db	69	;'E'
  3062  0075BF  52                 	db	82	;'R'
  3063  0075C0  52                 	db	82	;'R'
  3064  0075C1  4F                 	db	79	;'O'
  3065  0075C2  52                 	db	82	;'R'
  3066  0075C3  20                 	db	32
  3067  0075C4  2D                 	db	45
  3068  0075C5  20                 	db	32
  3069  0075C6  46                 	db	70	;'F'
  3070  0075C7  61                 	db	97	;'a'
  3071  0075C8  69                 	db	105	;'i'
  3072  0075C9  6C                 	db	108	;'l'
  3073  0075CA  65                 	db	101	;'e'
  3074  0075CB  64                 	db	100	;'d'
  3075  0075CC  20                 	db	32
  3076  0075CD  74                 	db	116	;'t'
  3077  0075CE  6F                 	db	111	;'o'
  3078  0075CF  20                 	db	32
  3079  0075D0  77                 	db	119	;'w'
  3080  0075D1  72                 	db	114	;'r'
  3081  0075D2  69                 	db	105	;'i'
  3082  0075D3  74                 	db	116	;'t'
  3083  0075D4  65                 	db	101	;'e'
  3084  0075D5  20                 	db	32
  3085  0075D6  76                 	db	118	;'v'
  3086  0075D7  61                 	db	97	;'a'
  3087  0075D8  6C                 	db	108	;'l'
  3088  0075D9  75                 	db	117	;'u'
  3089  0075DA  65                 	db	101	;'e'
  3090  0075DB  20                 	db	32
  3091  0075DC  66                 	db	102	;'f'
  3092  0075DD  6F                 	db	111	;'o'
  3093  0075DE  72                 	db	114	;'r'
  3094  0075DF  20                 	db	32
  3095  0075E0  00                 	db	0
  3096  0075E1                     STR_3:
  3097  0075E1  68                 	db	104	;'h'
  3098  0075E2  74                 	db	116	;'t'
  3099  0075E3  74                 	db	116	;'t'
  3100  0075E4  70                 	db	112	;'p'
  3101  0075E5  3A                 	db	58	;':'
  3102  0075E6  2F                 	db	47
  3103  0075E7  2F                 	db	47
  3104  0075E8  77                 	db	119	;'w'
  3105  0075E9  77                 	db	119	;'w'
  3106  0075EA  77                 	db	119	;'w'
  3107  0075EB  2E                 	db	46
  3108  0075EC  70                 	db	112	;'p'
  3109  0075ED  61                 	db	97	;'a'
  3110  0075EE  72                 	db	114	;'r'
  3111  0075EF  61                 	db	97	;'a'
  3112  0075F0  64                 	db	100	;'d'
  3113  0075F1  69                 	db	105	;'i'
  3114  0075F2  73                 	db	115	;'s'
  3115  0075F3  65                 	db	101	;'e'
  3116  0075F4  6F                 	db	111	;'o'
  3117  0075F5  66                 	db	102	;'f'
  3118  0075F6  74                 	db	116	;'t'
  3119  0075F7  68                 	db	104	;'h'
  3120  0075F8  65                 	db	101	;'e'
  3121  0075F9  66                 	db	102	;'f'
  3122  0075FA  72                 	db	114	;'r'
  3123  0075FB  6F                 	db	111	;'o'
  3124  0075FC  67                 	db	103	;'g'
  3125  0075FD  2E                 	db	46
  3126  0075FE  63                 	db	99	;'c'
  3127  0075FF  6F                 	db	111	;'o'
  3128  007600  6D                 	db	109	;'m'
  3129  007601  0D                 	db	13
  3130  007602  0A                 	db	10
  3131  007603  00                 	db	0
  3132  007604                     STR_166:
  3133  007604  2B                 	db	43
  3134  007605  4F                 	db	79	;'O'
  3135  007606  4B                 	db	75	;'K'
  3136  007607  20                 	db	32
  3137  007608  2D                 	db	45
  3138  007609  20                 	db	32
  3139  00760A  4E                 	db	78	;'N'
  3140  00760B  65                 	db	101	;'e'
  3141  00760C  77                 	db	119	;'w'
  3142  00760D  20                 	db	32
  3143  00760E  62                 	db	98	;'b'
  3144  00760F  61                 	db	97	;'a'
  3145  007610  75                 	db	117	;'u'
  3146  007611  64                 	db	100	;'d'
  3147  007612  72                 	db	114	;'r'
  3148  007613  61                 	db	97	;'a'
  3149  007614  74                 	db	116	;'t'
  3150  007615  65                 	db	101	;'e'
  3151  007616  20                 	db	32
  3152  007617  77                 	db	119	;'w'
  3153  007618  69                 	db	105	;'i'
  3154  007619  6C                 	db	108	;'l'
  3155  00761A  6C                 	db	108	;'l'
  3156  00761B  20                 	db	32
  3157  00761C  62                 	db	98	;'b'
  3158  00761D  65                 	db	101	;'e'
  3159  00761E  20                 	db	32
  3160  00761F  73                 	db	115	;'s'
  3161  007620  65                 	db	101	;'e'
  3162  007621  74                 	db	116	;'t'
  3163  007622  2E                 	db	46
  3164  007623  0D                 	db	13
  3165  007624  0A                 	db	10
  3166  007625  00                 	db	0
  3167  007626                     STR_272:
  3168  007626  53                 	db	83	;'S'
  3169  007627  45                 	db	69	;'E'
  3170  007628  54                 	db	84	;'T'
  3171  007629  20                 	db	32
  3172  00762A  2D                 	db	45
  3173  00762B  20                 	db	32
  3174  00762C  50                 	db	80	;'P'
  3175  00762D  65                 	db	101	;'e'
  3176  00762E  72                 	db	114	;'r'
  3177  00762F  73                 	db	115	;'s'
  3178  007630  69                 	db	105	;'i'
  3179  007631  73                 	db	115	;'s'
  3180  007632  74                 	db	116	;'t'
  3181  007633  65                 	db	101	;'e'
  3182  007634  6E                 	db	110	;'n'
  3183  007635  74                 	db	116	;'t'
  3184  007636  20                 	db	32
  3185  007637  66                 	db	102	;'f'
  3186  007638  75                 	db	117	;'u'
  3187  007639  6E                 	db	110	;'n'
  3188  00763A  63                 	db	99	;'c'
  3189  00763B  74                 	db	116	;'t'
  3190  00763C  69                 	db	105	;'i'
  3191  00763D  6F                 	db	111	;'o'
  3192  00763E  6E                 	db	110	;'n'
  3193  00763F  61                 	db	97	;'a'
  3194  007640  6C                 	db	108	;'l'
  3195  007641  69                 	db	105	;'i'
  3196  007642  74                 	db	116	;'t'
  3197  007643  79                 	db	121	;'y'
  3198  007644  2E                 	db	46
  3199  007645  0D                 	db	13
  3200  007646  0A                 	db	10
  3201  007647  00                 	db	0
  3202  007648                     STR_261:
  3203  007648  53                 	db	83	;'S'
  3204  007649  54                 	db	84	;'T'
  3205  00764A  41                 	db	65	;'A'
  3206  00764B  54                 	db	84	;'T'
  3207  00764C  20                 	db	32
  3208  00764D  2D                 	db	45
  3209  00764E  20                 	db	32
  3210  00764F  44                 	db	68	;'D'
  3211  007650  69                 	db	105	;'i'
  3212  007651  73                 	db	115	;'s'
  3213  007652  70                 	db	112	;'p'
  3214  007653  6C                 	db	108	;'l'
  3215  007654  61                 	db	97	;'a'
  3216  007655  79                 	db	121	;'y'
  3217  007656  20                 	db	32
  3218  007657  43                 	db	67	;'C'
  3219  007658  41                 	db	65	;'A'
  3220  007659  4E                 	db	78	;'N'
  3221  00765A  20                 	db	32
  3222  00765B  73                 	db	115	;'s'
  3223  00765C  74                 	db	116	;'t'
  3224  00765D  61                 	db	97	;'a'
  3225  00765E  74                 	db	116	;'t'
  3226  00765F  69                 	db	105	;'i'
  3227  007660  73                 	db	115	;'s'
  3228  007661  74                 	db	116	;'t'
  3229  007662  69                 	db	105	;'i'
  3230  007663  63                 	db	99	;'c'
  3231  007664  73                 	db	115	;'s'
  3232  007665  2E                 	db	46
  3233  007666  0D                 	db	13
  3234  007667  0A                 	db	10
  3235  007668  00                 	db	0
  3236  007669                     STR_37:
  3237  007669  2D                 	db	45
  3238  00766A  45                 	db	69	;'E'
  3239  00766B  52                 	db	82	;'R'
  3240  00766C  52                 	db	82	;'R'
  3241  00766D  4F                 	db	79	;'O'
  3242  00766E  52                 	db	82	;'R'
  3243  00766F  20                 	db	32
  3244  007670  2D                 	db	45
  3245  007671  20                 	db	32
  3246  007672  46                 	db	70	;'F'
  3247  007673  61                 	db	97	;'a'
  3248  007674  69                 	db	105	;'i'
  3249  007675  6C                 	db	108	;'l'
  3250  007676  65                 	db	101	;'e'
  3251  007677  64                 	db	100	;'d'
  3252  007678  20                 	db	32
  3253  007679  74                 	db	116	;'t'
  3254  00767A  6F                 	db	111	;'o'
  3255  00767B  20                 	db	32
  3256  00767C  73                 	db	115	;'s'
  3257  00767D  65                 	db	101	;'e'
  3258  00767E  6E                 	db	110	;'n'
  3259  00767F  64                 	db	100	;'d'
  3260  007680  20                 	db	32
  3261  007681  65                 	db	101	;'e'
  3262  007682  76                 	db	118	;'v'
  3263  007683  65                 	db	101	;'e'
  3264  007684  6E                 	db	110	;'n'
  3265  007685  74                 	db	116	;'t'
  3266  007686  2E                 	db	46
  3267  007687  0D                 	db	13
  3268  007688  0A                 	db	10
  3269  007689  00                 	db	0
  3270  00768A                     STR_169:
  3271  00768A  2D                 	db	45
  3272  00768B  45                 	db	69	;'E'
  3273  00768C  52                 	db	82	;'R'
  3274  00768D  52                 	db	82	;'R'
  3275  00768E  4F                 	db	79	;'O'
  3276  00768F  52                 	db	82	;'R'
  3277  007690  20                 	db	32
  3278  007691  2D                 	db	45
  3279  007692  20                 	db	32
  3280  007693  55                 	db	85	;'U'
  3281  007694  6E                 	db	110	;'n'
  3282  007695  6B                 	db	107	;'k'
  3283  007696  6E                 	db	110	;'n'
  3284  007697  6F                 	db	111	;'o'
  3285  007698  77                 	db	119	;'w'
  3286  007699  6E                 	db	110	;'n'
  3287  00769A  20                 	db	32
  3288  00769B  27                 	db	39
  3289  00769C  53                 	db	83	;'S'
  3290  00769D  45                 	db	69	;'E'
  3291  00769E  54                 	db	84	;'T'
  3292  00769F  27                 	db	39
  3293  0076A0  20                 	db	32
  3294  0076A1  63                 	db	99	;'c'
  3295  0076A2  6F                 	db	111	;'o'
  3296  0076A3  6D                 	db	109	;'m'
  3297  0076A4  6D                 	db	109	;'m'
  3298  0076A5  61                 	db	97	;'a'
  3299  0076A6  6E                 	db	110	;'n'
  3300  0076A7  64                 	db	100	;'d'
  3301  0076A8  0D                 	db	13
  3302  0076A9  0A                 	db	10
  3303  0076AA  00                 	db	0
  3304  0076AB                     STR_54:
  3305  0076AB  2D                 	db	45
  3306  0076AC  45                 	db	69	;'E'
  3307  0076AD  52                 	db	82	;'R'
  3308  0076AE  52                 	db	82	;'R'
  3309  0076AF  4F                 	db	79	;'O'
  3310  0076B0  52                 	db	82	;'R'
  3311  0076B1  20                 	db	32
  3312  0076B2  2D                 	db	45
  3313  0076B3  20                 	db	32
  3314  0076B4  4E                 	db	78	;'N'
  3315  0076B5  65                 	db	101	;'e'
  3316  0076B6  65                 	db	101	;'e'
  3317  0076B7  64                 	db	100	;'d'
  3318  0076B8  73                 	db	115	;'s'
  3319  0076B9  20                 	db	32
  3320  0076BA  5B                 	db	91	;'['
  3321  0076BB  70                 	db	112	;'p'
  3322  0076BC  61                 	db	97	;'a'
  3323  0076BD  67                 	db	103	;'g'
  3324  0076BE  65                 	db	101	;'e'
  3325  0076BF  3A                 	db	58	;':'
  3326  0076C0  5D                 	db	93	;']'
  3327  0076C1  72                 	db	114	;'r'
  3328  0076C2  65                 	db	101	;'e'
  3329  0076C3  67                 	db	103	;'g'
  3330  0076C4  69                 	db	105	;'i'
  3331  0076C5  73                 	db	115	;'s'
  3332  0076C6  74                 	db	116	;'t'
  3333  0076C7  65                 	db	101	;'e'
  3334  0076C8  72                 	db	114	;'r'
  3335  0076C9  0D                 	db	13
  3336  0076CA  0A                 	db	10
  3337  0076CB  00                 	db	0
  3338  0076CC                     STR_150:
  3339  0076CC  2B                 	db	43
  3340  0076CD  4F                 	db	79	;'O'
  3341  0076CE  4B                 	db	75	;'K'
  3342  0076CF  20                 	db	32
  3343  0076D0  2D                 	db	45
  3344  0076D1  20                 	db	32
  3345  0076D2  4D                 	db	77	;'M'
  3346  0076D3  6F                 	db	111	;'o'
  3347  0076D4  64                 	db	100	;'d'
  3348  0076D5  65                 	db	101	;'e'
  3349  0076D6  20                 	db	32
  3350  0076D7  69                 	db	105	;'i'
  3351  0076D8  73                 	db	115	;'s'
  3352  0076D9  20                 	db	32
  3353  0076DA  6E                 	db	110	;'n'
  3354  0076DB  6F                 	db	111	;'o'
  3355  0076DC  77                 	db	119	;'w'
  3356  0076DD  20                 	db	32
  3357  0076DE  56                 	db	86	;'V'
  3358  0076DF  53                 	db	83	;'S'
  3359  0076E0  43                 	db	67	;'C'
  3360  0076E1  50                 	db	80	;'P'
  3361  0076E2  20                 	db	32
  3362  0076E3  44                 	db	68	;'D'
  3363  0076E4  72                 	db	114	;'r'
  3364  0076E5  69                 	db	105	;'i'
  3365  0076E6  76                 	db	118	;'v'
  3366  0076E7  65                 	db	101	;'e'
  3367  0076E8  72                 	db	114	;'r'
  3368  0076E9  0D                 	db	13
  3369  0076EA  0A                 	db	10
  3370  0076EB  00                 	db	0
  3371  0076EC                     STR_7:
  3372  0076EC  57                 	db	87	;'W'
  3373  0076ED  69                 	db	105	;'i'
  3374  0076EE  6C                 	db	108	;'l'
  3375  0076EF  6C                 	db	108	;'l'
  3376  0076F0  20                 	db	32
  3377  0076F1  65                 	db	101	;'e'
  3378  0076F2  6E                 	db	110	;'n'
  3379  0076F3  74                 	db	116	;'t'
  3380  0076F4  65                 	db	101	;'e'
  3381  0076F5  72                 	db	114	;'r'
  3382  0076F6  20                 	db	32
  3383  0076F7  62                 	db	98	;'b'
  3384  0076F8  6F                 	db	111	;'o'
  3385  0076F9  6F                 	db	111	;'o'
  3386  0076FA  74                 	db	116	;'t'
  3387  0076FB  6C                 	db	108	;'l'
  3388  0076FC  6F                 	db	111	;'o'
  3389  0076FD  61                 	db	97	;'a'
  3390  0076FE  64                 	db	100	;'d'
  3391  0076FF  65                 	db	101	;'e'
  3392  007700  72                 	db	114	;'r'
  3393  007701  20                 	db	32
  3394  007702  6E                 	db	110	;'n'
  3395  007703  6F                 	db	111	;'o'
  3396  007704  77                 	db	119	;'w'
  3397  007705  2E                 	db	46
  3398  007706  2E                 	db	46
  3399  007707  2E                 	db	46
  3400  007708  0D                 	db	13
  3401  007709  0A                 	db	10
  3402  00770A  00                 	db	0
  3403  00770B                     STR_255:
  3404  00770B  43                 	db	67	;'C'
  3405  00770C  4C                 	db	76	;'L'
  3406  00770D  4F                 	db	79	;'O'
  3407  00770E  53                 	db	83	;'S'
  3408  00770F  45                 	db	69	;'E'
  3409  007710  20                 	db	32
  3410  007711  2D                 	db	45
  3411  007712  20                 	db	32
  3412  007713  43                 	db	67	;'C'
  3413  007714  6C                 	db	108	;'l'
  3414  007715  6F                 	db	111	;'o'
  3415  007716  73                 	db	115	;'s'
  3416  007717  65                 	db	101	;'e'
  3417  007718  20                 	db	32
  3418  007719  43                 	db	67	;'C'
  3419  00771A  41                 	db	65	;'A'
  3420  00771B  4E                 	db	78	;'N'
  3421  00771C  20                 	db	32
  3422  00771D  69                 	db	105	;'i'
  3423  00771E  6E                 	db	110	;'n'
  3424  00771F  74                 	db	116	;'t'
  3425  007720  65                 	db	101	;'e'
  3426  007721  72                 	db	114	;'r'
  3427  007722  66                 	db	102	;'f'
  3428  007723  61                 	db	97	;'a'
  3429  007724  63                 	db	99	;'c'
  3430  007725  65                 	db	101	;'e'
  3431  007726  2E                 	db	46
  3432  007727  0D                 	db	13
  3433  007728  0A                 	db	10
  3434  007729  00                 	db	0
  3435  00772A                     STR_5:
  3436  00772A  54                 	db	84	;'T'
  3437  00772B  65                 	db	101	;'e'
  3438  00772C  6D                 	db	109	;'m'
  3439  00772D  70                 	db	112	;'p'
  3440  00772E  6F                 	db	111	;'o'
  3441  00772F  72                 	db	114	;'r'
  3442  007730  61                 	db	97	;'a'
  3443  007731  72                 	db	114	;'r'
  3444  007732  79                 	db	121	;'y'
  3445  007733  20                 	db	32
  3446  007734  76                 	db	118	;'v'
  3447  007735  65                 	db	101	;'e'
  3448  007736  72                 	db	114	;'r'
  3449  007737  62                 	db	98	;'b'
  3450  007738  6F                 	db	111	;'o'
  3451  007739  73                 	db	115	;'s'
  3452  00773A  65                 	db	101	;'e'
  3453  00773B  20                 	db	32
  3454  00773C  6D                 	db	109	;'m'
  3455  00773D  6F                 	db	111	;'o'
  3456  00773E  64                 	db	100	;'d'
  3457  00773F  65                 	db	101	;'e'
  3458  007740  20                 	db	32
  3459  007741  73                 	db	115	;'s'
  3460  007742  65                 	db	101	;'e'
  3461  007743  74                 	db	116	;'t'
  3462  007744  0D                 	db	13
  3463  007745  0A                 	db	10
  3464  007746  00                 	db	0
  3465  007747                     STR_148:
  3466  007747  2B                 	db	43
  3467  007748  4F                 	db	79	;'O'
  3468  007749  4B                 	db	75	;'K'
  3469  00774A  20                 	db	32
  3470  00774B  2D                 	db	45
  3471  00774C  20                 	db	32
  3472  00774D  4D                 	db	77	;'M'
  3473  00774E  6F                 	db	111	;'o'
  3474  00774F  64                 	db	100	;'d'
  3475  007750  65                 	db	101	;'e'
  3476  007751  20                 	db	32
  3477  007752  69                 	db	105	;'i'
  3478  007753  73                 	db	115	;'s'
  3479  007754  20                 	db	32
  3480  007755  6E                 	db	110	;'n'
  3481  007756  6F                 	db	111	;'o'
  3482  007757  77                 	db	119	;'w'
  3483  007758  20                 	db	32
  3484  007759  76                 	db	118	;'v'
  3485  00775A  65                 	db	101	;'e'
  3486  00775B  72                 	db	114	;'r'
  3487  00775C  62                 	db	98	;'b'
  3488  00775D  6F                 	db	111	;'o'
  3489  00775E  73                 	db	115	;'s'
  3490  00775F  65                 	db	101	;'e'
  3491  007760  0D                 	db	13
  3492  007761  0A                 	db	10
  3493  007762  00                 	db	0
  3494  007763                     STR_103:
  3495  007763  2D                 	db	45
  3496  007764  45                 	db	69	;'E'
  3497  007765  52                 	db	82	;'R'
  3498  007766  52                 	db	82	;'R'
  3499  007767  4F                 	db	79	;'O'
  3500  007768  52                 	db	82	;'R'
  3501  007769  20                 	db	32
  3502  00776A  2D                 	db	45
  3503  00776B  20                 	db	32
  3504  00776C  4E                 	db	78	;'N'
  3505  00776D  6F                 	db	111	;'o'
  3506  00776E  64                 	db	100	;'d'
  3507  00776F  65                 	db	101	;'e'
  3508  007770  20                 	db	32
  3509  007771  6E                 	db	110	;'n'
  3510  007772  6F                 	db	111	;'o'
  3511  007773  74                 	db	116	;'t'
  3512  007774  20                 	db	32
  3513  007775  66                 	db	102	;'f'
  3514  007776  6F                 	db	111	;'o'
  3515  007777  75                 	db	117	;'u'
  3516  007778  6E                 	db	110	;'n'
  3517  007779  64                 	db	100	;'d'
  3518  00777A  2E                 	db	46
  3519  00777B  0D                 	db	13
  3520  00777C  0A                 	db	10
  3521  00777D  00                 	db	0
  3522  00777E                     STR_250:
  3523  00777E  42                 	db	66	;'B'
  3524  00777F  4F                 	db	79	;'O'
  3525  007780  4F                 	db	79	;'O'
  3526  007781  54                 	db	84	;'T'
  3527  007782  20                 	db	32
  3528  007783  2D                 	db	45
  3529  007784  20                 	db	32
  3530  007785  45                 	db	69	;'E'
  3531  007786  6E                 	db	110	;'n'
  3532  007787  74                 	db	116	;'t'
  3533  007788  65                 	db	101	;'e'
  3534  007789  72                 	db	114	;'r'
  3535  00778A  20                 	db	32
  3536  00778B  62                 	db	98	;'b'
  3537  00778C  6F                 	db	111	;'o'
  3538  00778D  6F                 	db	111	;'o'
  3539  00778E  74                 	db	116	;'t'
  3540  00778F  6C                 	db	108	;'l'
  3541  007790  6F                 	db	111	;'o'
  3542  007791  61                 	db	97	;'a'
  3543  007792  64                 	db	100	;'d'
  3544  007793  65                 	db	101	;'e'
  3545  007794  72                 	db	114	;'r'
  3546  007795  2E                 	db	46
  3547  007796  0D                 	db	13
  3548  007797  0A                 	db	10
  3549  007798  00                 	db	0
  3550  007799                     STR_171:
  3551  007799  2D                 	db	45
  3552  00779A  45                 	db	69	;'E'
  3553  00779B  52                 	db	82	;'R'
  3554  00779C  52                 	db	82	;'R'
  3555  00779D  4F                 	db	79	;'O'
  3556  00779E  52                 	db	82	;'R'
  3557  00779F  20                 	db	32
  3558  0077A0  2D                 	db	45
  3559  0077A1  20                 	db	32
  3560  0077A2  55                 	db	85	;'U'
  3561  0077A3  6E                 	db	110	;'n'
  3562  0077A4  6B                 	db	107	;'k'
  3563  0077A5  6E                 	db	110	;'n'
  3564  0077A6  6F                 	db	111	;'o'
  3565  0077A7  77                 	db	119	;'w'
  3566  0077A8  6E                 	db	110	;'n'
  3567  0077A9  20                 	db	32
  3568  0077AA  63                 	db	99	;'c'
  3569  0077AB  6F                 	db	111	;'o'
  3570  0077AC  6D                 	db	109	;'m'
  3571  0077AD  6D                 	db	109	;'m'
  3572  0077AE  61                 	db	97	;'a'
  3573  0077AF  6E                 	db	110	;'n'
  3574  0077B0  64                 	db	100	;'d'
  3575  0077B1  0D                 	db	13
  3576  0077B2  0A                 	db	10
  3577  0077B3  00                 	db	0
  3578  0077B4                     STR_283:
  3579  0077B4  4E                 	db	78	;'N'
  3580  0077B5  6F                 	db	111	;'o'
  3581  0077B6  64                 	db	100	;'d'
  3582  0077B7  65                 	db	101	;'e'
  3583  0077B8  20                 	db	32
  3584  0077B9  66                 	db	102	;'f'
  3585  0077BA  6F                 	db	111	;'o'
  3586  0077BB  75                 	db	117	;'u'
  3587  0077BC  6E                 	db	110	;'n'
  3588  0077BD  64                 	db	100	;'d'
  3589  0077BE  20                 	db	32
  3590  0077BF  77                 	db	119	;'w'
  3591  0077C0  69                 	db	105	;'i'
  3592  0077C1  74                 	db	116	;'t'
  3593  0077C2  68                 	db	104	;'h'
  3594  0077C3  20                 	db	32
  3595  0077C4  6E                 	db	110	;'n'
  3596  0077C5  6F                 	db	111	;'o'
  3597  0077C6  64                 	db	100	;'d'
  3598  0077C7  65                 	db	101	;'e'
  3599  0077C8  20                 	db	32
  3600  0077C9  69                 	db	105	;'i'
  3601  0077CA  64                 	db	100	;'d'
  3602  0077CB  20                 	db	32
  3603  0077CC  3D                 	db	61	;'='
  3604  0077CD  20                 	db	32
  3605  0077CE  00                 	db	0
  3606  0077CF                     STR_152:
  3607  0077CF  2B                 	db	43
  3608  0077D0  4F                 	db	79	;'O'
  3609  0077D1  4B                 	db	75	;'K'
  3610  0077D2  20                 	db	32
  3611  0077D3  2D                 	db	45
  3612  0077D4  20                 	db	32
  3613  0077D5  4D                 	db	77	;'M'
  3614  0077D6  6F                 	db	111	;'o'
  3615  0077D7  64                 	db	100	;'d'
  3616  0077D8  65                 	db	101	;'e'
  3617  0077D9  20                 	db	32
  3618  0077DA  69                 	db	105	;'i'
  3619  0077DB  73                 	db	115	;'s'
  3620  0077DC  20                 	db	32
  3621  0077DD  6E                 	db	110	;'n'
  3622  0077DE  6F                 	db	111	;'o'
  3623  0077DF  77                 	db	119	;'w'
  3624  0077E0  20                 	db	32
  3625  0077E1  53                 	db	83	;'S'
  3626  0077E2  4C                 	db	76	;'L'
  3627  0077E3  43                 	db	67	;'C'
  3628  0077E4  41                 	db	65	;'A'
  3629  0077E5  4E                 	db	78	;'N'
  3630  0077E6  0D                 	db	13
  3631  0077E7  0A                 	db	10
  3632  0077E8  00                 	db	0
  3633  0077E9                     STR_25:
  3634  0077E9  2B                 	db	43
  3635  0077EA  4F                 	db	79	;'O'
  3636  0077EB  4B                 	db	75	;'K'
  3637  0077EC  20                 	db	32
  3638  0077ED  2D                 	db	45
  3639  0077EE  20                 	db	32
  3640  0077EF  4C                 	db	76	;'L'
  3641  0077F0  69                 	db	105	;'i'
  3642  0077F1  73                 	db	115	;'s'
  3643  0077F2  74                 	db	116	;'t'
  3644  0077F3  65                 	db	101	;'e'
  3645  0077F4  6E                 	db	110	;'n'
  3646  0077F5  20                 	db	32
  3647  0077F6  6F                 	db	111	;'o'
  3648  0077F7  6E                 	db	110	;'n'
  3649  0077F8  6C                 	db	108	;'l'
  3650  0077F9  79                 	db	121	;'y'
  3651  0077FA  20                 	db	32
  3652  0077FB  6D                 	db	109	;'m'
  3653  0077FC  6F                 	db	111	;'o'
  3654  0077FD  64                 	db	100	;'d'
  3655  0077FE  65                 	db	101	;'e'
  3656  0077FF  0D                 	db	13
  3657  007800  0A                 	db	10
  3658  007801  00                 	db	0
  3659  007802                     STR_235:
  3660  007802  54                 	db	84	;'T'
  3661  007803  72                 	db	114	;'r'
  3662  007804  61                 	db	97	;'a'
  3663  007805  6E                 	db	110	;'n'
  3664  007806  73                 	db	115	;'s'
  3665  007807  6D                 	db	109	;'m'
  3666  007808  69                 	db	105	;'i'
  3667  007809  74                 	db	116	;'t'
  3668  00780A  20                 	db	32
  3669  00780B  45                 	db	69	;'E'
  3670  00780C  72                 	db	114	;'r'
  3671  00780D  72                 	db	114	;'r'
  3672  00780E  6F                 	db	111	;'o'
  3673  00780F  72                 	db	114	;'r'
  3674  007810  20                 	db	32
  3675  007811  43                 	db	67	;'C'
  3676  007812  6F                 	db	111	;'o'
  3677  007813  75                 	db	117	;'u'
  3678  007814  6E                 	db	110	;'n'
  3679  007815  74                 	db	116	;'t'
  3680  007816  65                 	db	101	;'e'
  3681  007817  72                 	db	114	;'r'
  3682  007818  3A                 	db	58	;':'
  3683  007819  20                 	db	32
  3684  00781A  00                 	db	0
  3685  00781B                     STR_73:
  3686  00781B  55                 	db	85	;'U'
  3687  00781C  6E                 	db	110	;'n'
  3688  00781D  61                 	db	97	;'a'
  3689  00781E  62                 	db	98	;'b'
  3690  00781F  6C                 	db	108	;'l'
  3691  007820  65                 	db	101	;'e'
  3692  007821  20                 	db	32
  3693  007822  74                 	db	116	;'t'
  3694  007823  6F                 	db	111	;'o'
  3695  007824  20                 	db	32
  3696  007825  72                 	db	114	;'r'
  3697  007826  65                 	db	101	;'e'
  3698  007827  61                 	db	97	;'a'
  3699  007828  64                 	db	100	;'d'
  3700  007829  20                 	db	32
  3701  00782A  72                 	db	114	;'r'
  3702  00782B  65                 	db	101	;'e'
  3703  00782C  67                 	db	103	;'g'
  3704  00782D  69                 	db	105	;'i'
  3705  00782E  73                 	db	115	;'s'
  3706  00782F  74                 	db	116	;'t'
  3707  007830  65                 	db	101	;'e'
  3708  007831  72                 	db	114	;'r'
  3709  007832  20                 	db	32
  3710  007833  00                 	db	0
  3711  007834                     STR_258:
  3712  007834  54                 	db	84	;'T'
  3713  007835  58                 	db	88	;'X'
  3714  007836  20                 	db	32
  3715  007837  2D                 	db	45
  3716  007838  20                 	db	32
  3717  007839  53                 	db	83	;'S'
  3718  00783A  65                 	db	101	;'e'
  3719  00783B  6E                 	db	110	;'n'
  3720  00783C  64                 	db	100	;'d'
  3721  00783D  20                 	db	32
  3722  00783E  43                 	db	67	;'C'
  3723  00783F  41                 	db	65	;'A'
  3724  007840  4E                 	db	78	;'N'
  3725  007841  20                 	db	32
  3726  007842  66                 	db	102	;'f'
  3727  007843  72                 	db	114	;'r'
  3728  007844  61                 	db	97	;'a'
  3729  007845  6D                 	db	109	;'m'
  3730  007846  65                 	db	101	;'e'
  3731  007847  20                 	db	32
  3732  007848  2E                 	db	46
  3733  007849  0D                 	db	13
  3734  00784A  0A                 	db	10
  3735  00784B  00                 	db	0
  3736  00784C                     STR_268:
  3737  00784C  46                 	db	70	;'F'
  3738  00784D  49                 	db	73	;'I'
  3739  00784E  4C                 	db	76	;'L'
  3740  00784F  54                 	db	84	;'T'
  3741  007850  45                 	db	69	;'E'
  3742  007851  52                 	db	82	;'R'
  3743  007852  20                 	db	32
  3744  007853  2D                 	db	45
  3745  007854  20                 	db	32
  3746  007855  53                 	db	83	;'S'
  3747  007856  65                 	db	101	;'e'
  3748  007857  74                 	db	116	;'t'
  3749  007858  20                 	db	32
  3750  007859  66                 	db	102	;'f'
  3751  00785A  69                 	db	105	;'i'
  3752  00785B  6C                 	db	108	;'l'
  3753  00785C  74                 	db	116	;'t'
  3754  00785D  65                 	db	101	;'e'
  3755  00785E  72                 	db	114	;'r'
  3756  00785F  20                 	db	32
  3757  007860  2E                 	db	46
  3758  007861  0D                 	db	13
  3759  007862  0A                 	db	10
  3760  007863  00                 	db	0
  3761  007864                     STR_52:
  3762  007864  2D                 	db	45
  3763  007865  45                 	db	69	;'E'
  3764  007866  52                 	db	82	;'R'
  3765  007867  52                 	db	82	;'R'
  3766  007868  4F                 	db	79	;'O'
  3767  007869  52                 	db	82	;'R'
  3768  00786A  20                 	db	32
  3769  00786B  2D                 	db	45
  3770  00786C  20                 	db	32
  3771  00786D  4E                 	db	78	;'N'
  3772  00786E  65                 	db	101	;'e'
  3773  00786F  65                 	db	101	;'e'
  3774  007870  64                 	db	100	;'d'
  3775  007871  73                 	db	115	;'s'
  3776  007872  20                 	db	32
  3777  007873  6E                 	db	110	;'n'
  3778  007874  6F                 	db	111	;'o'
  3779  007875  64                 	db	100	;'d'
  3780  007876  65                 	db	101	;'e'
  3781  007877  69                 	db	105	;'i'
  3782  007878  64                 	db	100	;'d'
  3783  007879  0D                 	db	13
  3784  00787A  0A                 	db	10
  3785  00787B  00                 	db	0
  3786  00787C                     STR_28:
  3787  00787C  2D                 	db	45
  3788  00787D  45                 	db	69	;'E'
  3789  00787E  52                 	db	82	;'R'
  3790  00787F  52                 	db	82	;'R'
  3791  007880  4F                 	db	79	;'O'
  3792  007881  52                 	db	82	;'R'
  3793  007882  20                 	db	32
  3794  007883  2D                 	db	45
  3795  007884  20                 	db	32
  3796  007885  55                 	db	85	;'U'
  3797  007886  6E                 	db	110	;'n'
  3798  007887  6B                 	db	107	;'k'
  3799  007888  6E                 	db	110	;'n'
  3800  007889  6F                 	db	111	;'o'
  3801  00788A  77                 	db	119	;'w'
  3802  00788B  6E                 	db	110	;'n'
  3803  00788C  20                 	db	32
  3804  00788D  6D                 	db	109	;'m'
  3805  00788E  6F                 	db	111	;'o'
  3806  00788F  64                 	db	100	;'d'
  3807  007890  65                 	db	101	;'e'
  3808  007891  0D                 	db	13
  3809  007892  0A                 	db	10
  3810  007893  00                 	db	0
  3811  007894                     STR_88:
  3812  007894  2D                 	db	45
  3813  007895  45                 	db	69	;'E'
  3814  007896  52                 	db	82	;'R'
  3815  007897  52                 	db	82	;'R'
  3816  007898  4F                 	db	79	;'O'
  3817  007899  52                 	db	82	;'R'
  3818  00789A  20                 	db	32
  3819  00789B  2D                 	db	45
  3820  00789C  20                 	db	32
  3821  00789D  4E                 	db	78	;'N'
  3822  00789E  65                 	db	101	;'e'
  3823  00789F  65                 	db	101	;'e'
  3824  0078A0  64                 	db	100	;'d'
  3825  0078A1  20                 	db	32
  3826  0078A2  61                 	db	97	;'a'
  3827  0078A3  20                 	db	32
  3828  0078A4  76                 	db	118	;'v'
  3829  0078A5  61                 	db	97	;'a'
  3830  0078A6  6C                 	db	108	;'l'
  3831  0078A7  75                 	db	117	;'u'
  3832  0078A8  65                 	db	101	;'e'
  3833  0078A9  0D                 	db	13
  3834  0078AA  0A                 	db	10
  3835  0078AB  00                 	db	0
  3836  0078AC                     STR_242:
  3837  0078AC  52                 	db	82	;'R'
  3838  0078AD  65                 	db	101	;'e'
  3839  0078AE  63                 	db	99	;'c'
  3840  0078AF  65                 	db	101	;'e'
  3841  0078B0  69                 	db	105	;'i'
  3842  0078B1  76                 	db	118	;'v'
  3843  0078B2  65                 	db	101	;'e'
  3844  0078B3  20                 	db	32
  3845  0078B4  45                 	db	69	;'E'
  3846  0078B5  72                 	db	114	;'r'
  3847  0078B6  72                 	db	114	;'r'
  3848  0078B7  6F                 	db	111	;'o'
  3849  0078B8  72                 	db	114	;'r'
  3850  0078B9  20                 	db	32
  3851  0078BA  43                 	db	67	;'C'
  3852  0078BB  6F                 	db	111	;'o'
  3853  0078BC  75                 	db	117	;'u'
  3854  0078BD  6E                 	db	110	;'n'
  3855  0078BE  74                 	db	116	;'t'
  3856  0078BF  65                 	db	101	;'e'
  3857  0078C0  72                 	db	114	;'r'
  3858  0078C1  3A                 	db	58	;':'
  3859  0078C2  20                 	db	32
  3860  0078C3  00                 	db	0
  3861  0078C4                     STR_226:
  3862  0078C4  55                 	db	85	;'U'
  3863  0078C5  41                 	db	65	;'A'
  3864  0078C6  52                 	db	82	;'R'
  3865  0078C7  54                 	db	84	;'T'
  3866  0078C8  20                 	db	32
  3867  0078C9  52                 	db	82	;'R'
  3868  0078CA  65                 	db	101	;'e'
  3869  0078CB  63                 	db	99	;'c'
  3870  0078CC  65                 	db	101	;'e'
  3871  0078CD  69                 	db	105	;'i'
  3872  0078CE  76                 	db	118	;'v'
  3873  0078CF  65                 	db	101	;'e'
  3874  0078D0  20                 	db	32
  3875  0078D1  6F                 	db	111	;'o'
  3876  0078D2  76                 	db	118	;'v'
  3877  0078D3  65                 	db	101	;'e'
  3878  0078D4  72                 	db	114	;'r'
  3879  0078D5  72                 	db	114	;'r'
  3880  0078D6  75                 	db	117	;'u'
  3881  0078D7  6E                 	db	110	;'n'
  3882  0078D8  73                 	db	115	;'s'
  3883  0078D9  3A                 	db	58	;':'
  3884  0078DA  20                 	db	32
  3885  0078DB  00                 	db	0
  3886  0078DC                     STR_222:
  3887  0078DC  43                 	db	67	;'C'
  3888  0078DD  41                 	db	65	;'A'
  3889  0078DE  4E                 	db	78	;'N'
  3890  0078DF  20                 	db	32
  3891  0078E0  54                 	db	84	;'T'
  3892  0078E1  72                 	db	114	;'r'
  3893  0078E2  61                 	db	97	;'a'
  3894  0078E3  6E                 	db	110	;'n'
  3895  0078E4  73                 	db	115	;'s'
  3896  0078E5  6D                 	db	109	;'m'
  3897  0078E6  69                 	db	105	;'i'
  3898  0078E7  74                 	db	116	;'t'
  3899  0078E8  20                 	db	32
  3900  0078E9  6F                 	db	111	;'o'
  3901  0078EA  76                 	db	118	;'v'
  3902  0078EB  65                 	db	101	;'e'
  3903  0078EC  72                 	db	114	;'r'
  3904  0078ED  72                 	db	114	;'r'
  3905  0078EE  75                 	db	117	;'u'
  3906  0078EF  6E                 	db	110	;'n'
  3907  0078F0  73                 	db	115	;'s'
  3908  0078F1  3A                 	db	58	;':'
  3909  0078F2  20                 	db	32
  3910  0078F3  00                 	db	0
  3911  0078F4                     STR_260:
  3912  0078F4  52                 	db	82	;'R'
  3913  0078F5  58                 	db	88	;'X'
  3914  0078F6  20                 	db	32
  3915  0078F7  2D                 	db	45
  3916  0078F8  20                 	db	32
  3917  0078F9  52                 	db	82	;'R'
  3918  0078FA  65                 	db	101	;'e'
  3919  0078FB  61                 	db	97	;'a'
  3920  0078FC  64                 	db	100	;'d'
  3921  0078FD  20                 	db	32
  3922  0078FE  43                 	db	67	;'C'
  3923  0078FF  41                 	db	65	;'A'
  3924  007900  4E                 	db	78	;'N'
  3925  007901  20                 	db	32
  3926  007902  66                 	db	102	;'f'
  3927  007903  72                 	db	114	;'r'
  3928  007904  61                 	db	97	;'a'
  3929  007905  6D                 	db	109	;'m'
  3930  007906  65                 	db	101	;'e'
  3931  007907  2E                 	db	46
  3932  007908  0D                 	db	13
  3933  007909  0A                 	db	10
  3934  00790A  00                 	db	0
  3935  00790B                     STR_157:
  3936  00790B  2B                 	db	43
  3937  00790C  4F                 	db	79	;'O'
  3938  00790D  4B                 	db	75	;'K'
  3939  00790E  20                 	db	32
  3940  00790F  2D                 	db	45
  3941  007910  20                 	db	32
  3942  007911  4C                 	db	76	;'L'
  3943  007912  6F                 	db	111	;'o'
  3944  007913  63                 	db	99	;'c'
  3945  007914  61                 	db	97	;'a'
  3946  007915  6C                 	db	108	;'l'
  3947  007916  20                 	db	32
  3948  007917  65                 	db	101	;'e'
  3949  007918  63                 	db	99	;'c'
  3950  007919  68                 	db	104	;'h'
  3951  00791A  6F                 	db	111	;'o'
  3952  00791B  20                 	db	32
  3953  00791C  6F                 	db	111	;'o'
  3954  00791D  66                 	db	102	;'f'
  3955  00791E  66                 	db	102	;'f'
  3956  00791F  0D                 	db	13
  3957  007920  0A                 	db	10
  3958  007921  00                 	db	0
  3959  007922                     STR_218:
  3960  007922  43                 	db	67	;'C'
  3961  007923  41                 	db	65	;'A'
  3962  007924  4E                 	db	78	;'N'
  3963  007925  20                 	db	32
  3964  007926  52                 	db	82	;'R'
  3965  007927  65                 	db	101	;'e'
  3966  007928  63                 	db	99	;'c'
  3967  007929  65                 	db	101	;'e'
  3968  00792A  69                 	db	105	;'i'
  3969  00792B  76                 	db	118	;'v'
  3970  00792C  65                 	db	101	;'e'
  3971  00792D  20                 	db	32
  3972  00792E  6F                 	db	111	;'o'
  3973  00792F  76                 	db	118	;'v'
  3974  007930  65                 	db	101	;'e'
  3975  007931  72                 	db	114	;'r'
  3976  007932  72                 	db	114	;'r'
  3977  007933  75                 	db	117	;'u'
  3978  007934  6E                 	db	110	;'n'
  3979  007935  73                 	db	115	;'s'
  3980  007936  3A                 	db	58	;':'
  3981  007937  20                 	db	32
  3982  007938  00                 	db	0
  3983  007939                     STR_306:
  3984  007939  55                 	db	85	;'U'
  3985  00793A  6E                 	db	110	;'n'
  3986  00793B  6B                 	db	107	;'k'
  3987  00793C  6E                 	db	110	;'n'
  3988  00793D  6F                 	db	111	;'o'
  3989  00793E  77                 	db	119	;'w'
  3990  00793F  6E                 	db	110	;'n'
  3991  007940  20                 	db	32
  3992  007941  28                 	db	40
  3993  007942  56                 	db	86	;'V'
  3994  007943  65                 	db	101	;'e'
  3995  007944  72                 	db	114	;'r'
  3996  007945  62                 	db	98	;'b'
  3997  007946  6F                 	db	111	;'o'
  3998  007947  73                 	db	115	;'s'
  3999  007948  65                 	db	101	;'e'
  4000  007949  20                 	db	32
  4001  00794A  75                 	db	117	;'u'
  4002  00794B  73                 	db	115	;'s'
  4003  00794C  65                 	db	101	;'e'
  4004  00794D  64                 	db	100	;'d'
  4005  00794E  29                 	db	41
  4006  00794F  00                 	db	0
  4007  007950                     STR_24:
  4008  007950  2B                 	db	43
  4009  007951  4F                 	db	79	;'O'
  4010  007952  4B                 	db	75	;'K'
  4011  007953  20                 	db	32
  4012  007954  2D                 	db	45
  4013  007955  20                 	db	32
  4014  007956  4C                 	db	76	;'L'
  4015  007957  6F                 	db	111	;'o'
  4016  007958  6F                 	db	111	;'o'
  4017  007959  70                 	db	112	;'p'
  4018  00795A  62                 	db	98	;'b'
  4019  00795B  61                 	db	97	;'a'
  4020  00795C  63                 	db	99	;'c'
  4021  00795D  6B                 	db	107	;'k'
  4022  00795E  20                 	db	32
  4023  00795F  6D                 	db	109	;'m'
  4024  007960  6F                 	db	111	;'o'
  4025  007961  64                 	db	100	;'d'
  4026  007962  65                 	db	101	;'e'
  4027  007963  0D                 	db	13
  4028  007964  0A                 	db	10
  4029  007965  00                 	db	0
  4030  007966                     STR_163:
  4031  007966  2B                 	db	43
  4032  007967  4F                 	db	79	;'O'
  4033  007968  4B                 	db	75	;'K'
  4034  007969  20                 	db	32
  4035  00796A  2D                 	db	45
  4036  00796B  20                 	db	32
  4037  00796C  54                 	db	84	;'T'
  4038  00796D  69                 	db	105	;'i'
  4039  00796E  6D                 	db	109	;'m'
  4040  00796F  65                 	db	101	;'e'
  4041  007970  73                 	db	115	;'s'
  4042  007971  74                 	db	116	;'t'
  4043  007972  61                 	db	97	;'a'
  4044  007973  6D                 	db	109	;'m'
  4045  007974  70                 	db	112	;'p'
  4046  007975  20                 	db	32
  4047  007976  6F                 	db	111	;'o'
  4048  007977  66                 	db	102	;'f'
  4049  007978  66                 	db	102	;'f'
  4050  007979  0D                 	db	13
  4051  00797A  0A                 	db	10
  4052  00797B  00                 	db	0
  4053  00797C                     STR_155:
  4054  00797C  2B                 	db	43
  4055  00797D  4F                 	db	79	;'O'
  4056  00797E  4B                 	db	75	;'K'
  4057  00797F  20                 	db	32
  4058  007980  2D                 	db	45
  4059  007981  20                 	db	32
  4060  007982  4C                 	db	76	;'L'
  4061  007983  6F                 	db	111	;'o'
  4062  007984  63                 	db	99	;'c'
  4063  007985  61                 	db	97	;'a'
  4064  007986  6C                 	db	108	;'l'
  4065  007987  20                 	db	32
  4066  007988  65                 	db	101	;'e'
  4067  007989  63                 	db	99	;'c'
  4068  00798A  68                 	db	104	;'h'
  4069  00798B  6F                 	db	111	;'o'
  4070  00798C  20                 	db	32
  4071  00798D  6F                 	db	111	;'o'
  4072  00798E  6E                 	db	110	;'n'
  4073  00798F  0D                 	db	13
  4074  007990  0A                 	db	10
  4075  007991  00                 	db	0
  4076  007992                     STR_210:
  4077  007992  52                 	db	82	;'R'
  4078  007993  65                 	db	101	;'e'
  4079  007994  63                 	db	99	;'c'
  4080  007995  65                 	db	101	;'e'
  4081  007996  69                 	db	105	;'i'
  4082  007997  76                 	db	118	;'v'
  4083  007998  65                 	db	101	;'e'
  4084  007999  64                 	db	100	;'d'
  4085  00799A  20                 	db	32
  4086  00799B  43                 	db	67	;'C'
  4087  00799C  41                 	db	65	;'A'
  4088  00799D  4E                 	db	78	;'N'
  4089  00799E  20                 	db	32
  4090  00799F  66                 	db	102	;'f'
  4091  0079A0  72                 	db	114	;'r'
  4092  0079A1  61                 	db	97	;'a'
  4093  0079A2  6D                 	db	109	;'m'
  4094  0079A3  65                 	db	101	;'e'
  4095  0079A4  73                 	db	115	;'s'
  4096  0079A5  3A                 	db	58	;':'
  4097  0079A6  20                 	db	32
  4098  0079A7  00                 	db	0
  4099  0079A8                     STR_161:
  4100  0079A8  2B                 	db	43
  4101  0079A9  4F                 	db	79	;'O'
  4102  0079AA  4B                 	db	75	;'K'
  4103  0079AB  20                 	db	32
  4104  0079AC  2D                 	db	45
  4105  0079AD  20                 	db	32
  4106  0079AE  54                 	db	84	;'T'
  4107  0079AF  69                 	db	105	;'i'
  4108  0079B0  6D                 	db	109	;'m'
  4109  0079B1  65                 	db	101	;'e'
  4110  0079B2  73                 	db	115	;'s'
  4111  0079B3  74                 	db	116	;'t'
  4112  0079B4  61                 	db	97	;'a'
  4113  0079B5  6D                 	db	109	;'m'
  4114  0079B6  70                 	db	112	;'p'
  4115  0079B7  20                 	db	32
  4116  0079B8  6F                 	db	111	;'o'
  4117  0079B9  6E                 	db	110	;'n'
  4118  0079BA  0D                 	db	13
  4119  0079BB  0A                 	db	10
  4120  0079BC  00                 	db	0
  4121  0079BD                     STR_214:
  4122  0079BD  52                 	db	82	;'R'
  4123  0079BE  65                 	db	101	;'e'
  4124  0079BF  63                 	db	99	;'c'
  4125  0079C0  65                 	db	101	;'e'
  4126  0079C1  69                 	db	105	;'i'
  4127  0079C2  76                 	db	118	;'v'
  4128  0079C3  65                 	db	101	;'e'
  4129  0079C4  64                 	db	100	;'d'
  4130  0079C5  20                 	db	32
  4131  0079C6  43                 	db	67	;'C'
  4132  0079C7  41                 	db	65	;'A'
  4133  0079C8  4E                 	db	78	;'N'
  4134  0079C9  20                 	db	32
  4135  0079CA  62                 	db	98	;'b'
  4136  0079CB  79                 	db	121	;'y'
  4137  0079CC  74                 	db	116	;'t'
  4138  0079CD  65                 	db	101	;'e'
  4139  0079CE  73                 	db	115	;'s'
  4140  0079CF  3A                 	db	58	;':'
  4141  0079D0  20                 	db	32
  4142  0079D1  00                 	db	0
  4143  0079D2                     STR_270:
  4144  0079D2  4D                 	db	77	;'M'
  4145  0079D3  41                 	db	65	;'A'
  4146  0079D4  53                 	db	83	;'S'
  4147  0079D5  4B                 	db	75	;'K'
  4148  0079D6  20                 	db	32
  4149  0079D7  2D                 	db	45
  4150  0079D8  20                 	db	32
  4151  0079D9  53                 	db	83	;'S'
  4152  0079DA  65                 	db	101	;'e'
  4153  0079DB  74                 	db	116	;'t'
  4154  0079DC  20                 	db	32
  4155  0079DD  6D                 	db	109	;'m'
  4156  0079DE  61                 	db	97	;'a'
  4157  0079DF  73                 	db	115	;'s'
  4158  0079E0  6B                 	db	107	;'k'
  4159  0079E1  20                 	db	32
  4160  0079E2  2E                 	db	46
  4161  0079E3  0D                 	db	13
  4162  0079E4  0A                 	db	10
  4163  0079E5  00                 	db	0
  4164  0079E6                     STR_172:
  4165  0079E6  4A                 	db	74	;'J'
  4166  0079E7  46                 	db	70	;'F'
  4167  0079E8  72                 	db	114	;'r'
  4168  0079E9  61                 	db	97	;'a'
  4169  0079EA  6E                 	db	110	;'n'
  4170  0079EB  6B                 	db	107	;'k'
  4171  0079EC  66                 	db	102	;'f'
  4172  0079ED  75                 	db	117	;'u'
  4173  0079EE  72                 	db	114	;'r'
  4174  0079EF  74                 	db	116	;'t'
  4175  0079F0  20                 	db	32
  4176  0079F1  52                 	db	82	;'R'
  4177  0079F2  53                 	db	83	;'S'
  4178  0079F3  2D                 	db	45
  4179  0079F4  32                 	db	50	;'2'
  4180  0079F5  33                 	db	51	;'3'
  4181  0079F6  32                 	db	50	;'2'
  4182  0079F7  0D                 	db	13
  4183  0079F8  0A                 	db	10
  4184  0079F9  00                 	db	0
  4185  0079FA                     STR_26:
  4186  0079FA  2B                 	db	43
  4187  0079FB  4F                 	db	79	;'O'
  4188  0079FC  4B                 	db	75	;'K'
  4189  0079FD  20                 	db	32
  4190  0079FE  2D                 	db	45
  4191  0079FF  20                 	db	32
  4192  007A00  43                 	db	67	;'C'
  4193  007A01  6C                 	db	108	;'l'
  4194  007A02  6F                 	db	111	;'o'
  4195  007A03  73                 	db	115	;'s'
  4196  007A04  65                 	db	101	;'e'
  4197  007A05  64                 	db	100	;'d'
  4198  007A06  20                 	db	32
  4199  007A07  6D                 	db	109	;'m'
  4200  007A08  6F                 	db	111	;'o'
  4201  007A09  64                 	db	100	;'d'
  4202  007A0A  65                 	db	101	;'e'
  4203  007A0B  0D                 	db	13
  4204  007A0C  0A                 	db	10
  4205  007A0D  00                 	db	0
  4206  007A0E                     STR_21:
  4207  007A0E  2B                 	db	43
  4208  007A0F  4F                 	db	79	;'O'
  4209  007A10  4B                 	db	75	;'K'
  4210  007A11  20                 	db	32
  4211  007A12  2D                 	db	45
  4212  007A13  20                 	db	32
  4213  007A14  4E                 	db	78	;'N'
  4214  007A15  6F                 	db	111	;'o'
  4215  007A16  72                 	db	114	;'r'
  4216  007A17  6D                 	db	109	;'m'
  4217  007A18  61                 	db	97	;'a'
  4218  007A19  6C                 	db	108	;'l'
  4219  007A1A  20                 	db	32
  4220  007A1B  6D                 	db	109	;'m'
  4221  007A1C  6F                 	db	111	;'o'
  4222  007A1D  64                 	db	100	;'d'
  4223  007A1E  65                 	db	101	;'e'
  4224  007A1F  0D                 	db	13
  4225  007A20  0A                 	db	10
  4226  007A21  00                 	db	0
  4227  007A22                     STR_22:
  4228  007A22  2B                 	db	43
  4229  007A23  4F                 	db	79	;'O'
  4230  007A24  4B                 	db	75	;'K'
  4231  007A25  20                 	db	32
  4232  007A26  2D                 	db	45
  4233  007A27  20                 	db	32
  4234  007A28  53                 	db	83	;'S'
  4235  007A29  69                 	db	105	;'i'
  4236  007A2A  6C                 	db	108	;'l'
  4237  007A2B  65                 	db	101	;'e'
  4238  007A2C  6E                 	db	110	;'n'
  4239  007A2D  74                 	db	116	;'t'
  4240  007A2E  20                 	db	32
  4241  007A2F  6D                 	db	109	;'m'
  4242  007A30  6F                 	db	111	;'o'
  4243  007A31  64                 	db	100	;'d'
  4244  007A32  65                 	db	101	;'e'
  4245  007A33  0D                 	db	13
  4246  007A34  0A                 	db	10
  4247  007A35  00                 	db	0
  4248  007A36                     STR_99:
  4249  007A36  49                 	db	73	;'I'
  4250  007A37  6E                 	db	110	;'n'
  4251  007A38  66                 	db	102	;'f'
  4252  007A39  6F                 	db	111	;'o'
  4253  007A3A  20                 	db	32
  4254  007A3B  66                 	db	102	;'f'
  4255  007A3C  6F                 	db	111	;'o'
  4256  007A3D  72                 	db	114	;'r'
  4257  007A3E  20                 	db	32
  4258  007A3F  6E                 	db	110	;'n'
  4259  007A40  6F                 	db	111	;'o'
  4260  007A41  64                 	db	100	;'d'
  4261  007A42  65                 	db	101	;'e'
  4262  007A43  20                 	db	32
  4263  007A44  69                 	db	105	;'i'
  4264  007A45  64                 	db	100	;'d'
  4265  007A46  20                 	db	32
  4266  007A47  3D                 	db	61	;'='
  4267  007A48  20                 	db	32
  4268  007A49  00                 	db	0
  4269  007A4A                     STR_295:
  4270  007A4A  46                 	db	70	;'F'
  4271  007A4B  69                 	db	105	;'i'
  4272  007A4C  72                 	db	114	;'r'
  4273  007A4D  6D                 	db	109	;'m'
  4274  007A4E  77                 	db	119	;'w'
  4275  007A4F  61                 	db	97	;'a'
  4276  007A50  72                 	db	114	;'r'
  4277  007A51  65                 	db	101	;'e'
  4278  007A52  20                 	db	32
  4279  007A53  76                 	db	118	;'v'
  4280  007A54  65                 	db	101	;'e'
  4281  007A55  72                 	db	114	;'r'
  4282  007A56  73                 	db	115	;'s'
  4283  007A57  69                 	db	105	;'i'
  4284  007A58  6F                 	db	111	;'o'
  4285  007A59  6E                 	db	110	;'n'
  4286  007A5A  20                 	db	32
  4287  007A5B  3D                 	db	61	;'='
  4288  007A5C  20                 	db	32
  4289  007A5D  00                 	db	0
  4290  007A5E                     STR_23:
  4291  007A5E  2B                 	db	43
  4292  007A5F  4F                 	db	79	;'O'
  4293  007A60  4B                 	db	75	;'K'
  4294  007A61  20                 	db	32
  4295  007A62  2D                 	db	45
  4296  007A63  20                 	db	32
  4297  007A64  53                 	db	83	;'S'
  4298  007A65  6C                 	db	108	;'l'
  4299  007A66  65                 	db	101	;'e'
  4300  007A67  65                 	db	101	;'e'
  4301  007A68  70                 	db	112	;'p'
  4302  007A69  20                 	db	32
  4303  007A6A  6D                 	db	109	;'m'
  4304  007A6B  6F                 	db	111	;'o'
  4305  007A6C  64                 	db	100	;'d'
  4306  007A6D  65                 	db	101	;'e'
  4307  007A6E  0D                 	db	13
  4308  007A6F  0A                 	db	10
  4309  007A70  00                 	db	0
  4310  007A71                     STR_27:
  4311  007A71  2B                 	db	43
  4312  007A72  4F                 	db	79	;'O'
  4313  007A73  4B                 	db	75	;'K'
  4314  007A74  20                 	db	32
  4315  007A75  2D                 	db	45
  4316  007A76  20                 	db	32
  4317  007A77  42                 	db	66	;'B'
  4318  007A78  69                 	db	105	;'i'
  4319  007A79  74                 	db	116	;'t'
  4320  007A7A  73                 	db	115	;'s'
  4321  007A7B  20                 	db	32
  4322  007A7C  6D                 	db	109	;'m'
  4323  007A7D  6F                 	db	111	;'o'
  4324  007A7E  64                 	db	100	;'d'
  4325  007A7F  65                 	db	101	;'e'
  4326  007A80  0D                 	db	13
  4327  007A81  0A                 	db	10
  4328  007A82  00                 	db	0
  4329  007A83                     STR_40:
  4330  007A83  2B                 	db	43
  4331  007A84  4F                 	db	79	;'O'
  4332  007A85  4B                 	db	75	;'K'
  4333  007A86  20                 	db	32
  4334  007A87  2D                 	db	45
  4335  007A88  20                 	db	32
  4336  007A89  6E                 	db	110	;'n'
  4337  007A8A  6F                 	db	111	;'o'
  4338  007A8B  20                 	db	32
  4339  007A8C  65                 	db	101	;'e'
  4340  007A8D  76                 	db	118	;'v'
  4341  007A8E  65                 	db	101	;'e'
  4342  007A8F  6E                 	db	110	;'n'
  4343  007A90  74                 	db	116	;'t'
  4344  007A91  73                 	db	115	;'s'
  4345  007A92  0D                 	db	13
  4346  007A93  0A                 	db	10
  4347  007A94  00                 	db	0
  4348  007A95                     STR_202:
  4349  007A95  53                 	db	83	;'S'
  4350  007A96  65                 	db	101	;'e'
  4351  007A97  6E                 	db	110	;'n'
  4352  007A98  74                 	db	116	;'t'
  4353  007A99  20                 	db	32
  4354  007A9A  43                 	db	67	;'C'
  4355  007A9B  41                 	db	65	;'A'
  4356  007A9C  4E                 	db	78	;'N'
  4357  007A9D  20                 	db	32
  4358  007A9E  66                 	db	102	;'f'
  4359  007A9F  72                 	db	114	;'r'
  4360  007AA0  61                 	db	97	;'a'
  4361  007AA1  6D                 	db	109	;'m'
  4362  007AA2  65                 	db	101	;'e'
  4363  007AA3  73                 	db	115	;'s'
  4364  007AA4  3A                 	db	58	;':'
  4365  007AA5  20                 	db	32
  4366  007AA6  00                 	db	0
  4367  007AA7                     STR_308:
  4368  007AA7  30                 	db	48	;'0'
  4369  007AA8  31                 	db	49	;'1'
  4370  007AA9  32                 	db	50	;'2'
  4371  007AAA  33                 	db	51	;'3'
  4372  007AAB  34                 	db	52	;'4'
  4373  007AAC  35                 	db	53	;'5'
  4374  007AAD  36                 	db	54	;'6'
  4375  007AAE  37                 	db	55	;'7'
  4376  007AAF  38                 	db	56	;'8'
  4377  007AB0  39                 	db	57	;'9'
  4378  007AB1  41                 	db	65	;'A'
  4379  007AB2  42                 	db	66	;'B'
  4380  007AB3  43                 	db	67	;'C'
  4381  007AB4  44                 	db	68	;'D'
  4382  007AB5  45                 	db	69	;'E'
  4383  007AB6  46                 	db	70	;'F'
  4384  007AB7  00                 	db	0
  4385  007AB8                     STR_309:
  4386  007AB8  30                 	db	48	;'0'
  4387  007AB9  31                 	db	49	;'1'
  4388  007ABA  32                 	db	50	;'2'
  4389  007ABB  33                 	db	51	;'3'
  4390  007ABC  34                 	db	52	;'4'
  4391  007ABD  35                 	db	53	;'5'
  4392  007ABE  36                 	db	54	;'6'
  4393  007ABF  37                 	db	55	;'7'
  4394  007AC0  38                 	db	56	;'8'
  4395  007AC1  39                 	db	57	;'9'
  4396  007AC2  61                 	db	97	;'a'
  4397  007AC3  62                 	db	98	;'b'
  4398  007AC4  63                 	db	99	;'c'
  4399  007AC5  64                 	db	100	;'d'
  4400  007AC6  65                 	db	101	;'e'
  4401  007AC7  66                 	db	102	;'f'
  4402  007AC8  00                 	db	0
  4403  007AC9                     STR_287:
  4404  007AC9  20                 	db	32
  4405  007ACA  6E                 	db	110	;'n'
  4406  007ACB  6F                 	db	111	;'o'
  4407  007ACC  64                 	db	100	;'d'
  4408  007ACD  65                 	db	101	;'e'
  4409  007ACE  28                 	db	40
  4410  007ACF  73                 	db	115	;'s'
  4411  007AD0  29                 	db	41
  4412  007AD1  20                 	db	32
  4413  007AD2  66                 	db	102	;'f'
  4414  007AD3  6F                 	db	111	;'o'
  4415  007AD4  75                 	db	117	;'u'
  4416  007AD5  6E                 	db	110	;'n'
  4417  007AD6  64                 	db	100	;'d'
  4418  007AD7  0D                 	db	13
  4419  007AD8  0A                 	db	10
  4420  007AD9  00                 	db	0
  4421  007ADA                     STR_206:
  4422  007ADA  53                 	db	83	;'S'
  4423  007ADB  65                 	db	101	;'e'
  4424  007ADC  6E                 	db	110	;'n'
  4425  007ADD  74                 	db	116	;'t'
  4426  007ADE  20                 	db	32
  4427  007ADF  43                 	db	67	;'C'
  4428  007AE0  41                 	db	65	;'A'
  4429  007AE1  4E                 	db	78	;'N'
  4430  007AE2  20                 	db	32
  4431  007AE3  62                 	db	98	;'b'
  4432  007AE4  79                 	db	121	;'y'
  4433  007AE5  74                 	db	116	;'t'
  4434  007AE6  65                 	db	101	;'e'
  4435  007AE7  73                 	db	115	;'s'
  4436  007AE8  3A                 	db	58	;':'
  4437  007AE9  20                 	db	32
  4438  007AEA  00                 	db	0
  4439  007AEB                     STR_70:
  4440  007AEB  2D                 	db	45
  4441  007AEC  45                 	db	69	;'E'
  4442  007AED  52                 	db	82	;'R'
  4443  007AEE  52                 	db	82	;'R'
  4444  007AEF  4F                 	db	79	;'O'
  4445  007AF0  52                 	db	82	;'R'
  4446  007AF1  20                 	db	32
  4447  007AF2  2D                 	db	45
  4448  007AF3  20                 	db	32
  4449  007AF4  6E                 	db	110	;'n'
  4450  007AF5  6F                 	db	111	;'o'
  4451  007AF6  64                 	db	100	;'d'
  4452  007AF7  65                 	db	101	;'e'
  4453  007AF8  69                 	db	105	;'i'
  4454  007AF9  64                 	db	100	;'d'
  4455  007AFA  3D                 	db	61	;'='
  4456  007AFB  00                 	db	0
  4457  007AFC                     STR_59:
  4458  007AFC  56                 	db	86	;'V'
  4459  007AFD  61                 	db	97	;'a'
  4460  007AFE  6C                 	db	108	;'l'
  4461  007AFF  75                 	db	117	;'u'
  4462  007B00  65                 	db	101	;'e'
  4463  007B01  20                 	db	32
  4464  007B02  66                 	db	102	;'f'
  4465  007B03  6F                 	db	111	;'o'
  4466  007B04  72                 	db	114	;'r'
  4467  007B05  20                 	db	32
  4468  007B06  72                 	db	114	;'r'
  4469  007B07  65                 	db	101	;'e'
  4470  007B08  67                 	db	103	;'g'
  4471  007B09  20                 	db	32
  4472  007B0A  00                 	db	0
  4473  007B0B                     STR_293:
  4474  007B0B  4D                 	db	77	;'M'
  4475  007B0C  44                 	db	68	;'D'
  4476  007B0D  46                 	db	70	;'F'
  4477  007B0E  20                 	db	32
  4478  007B0F  3D                 	db	61	;'='
  4479  007B10  20                 	db	32
  4480  007B11  68                 	db	104	;'h'
  4481  007B12  74                 	db	116	;'t'
  4482  007B13  74                 	db	116	;'t'
  4483  007B14  70                 	db	112	;'p'
  4484  007B15  3A                 	db	58	;':'
  4485  007B16  2F                 	db	47
  4486  007B17  2F                 	db	47
  4487  007B18  00                 	db	0
  4488  007B19                     STR_56:
  4489  007B19  2B                 	db	43
  4490  007B1A  4F                 	db	79	;'O'
  4491  007B1B  4B                 	db	75	;'K'
  4492  007B1C  20                 	db	32
  4493  007B1D  2D                 	db	45
  4494  007B1E  20                 	db	32
  4495  007B1F  6E                 	db	110	;'n'
  4496  007B20  6F                 	db	111	;'o'
  4497  007B21  64                 	db	100	;'d'
  4498  007B22  65                 	db	101	;'e'
  4499  007B23  69                 	db	105	;'i'
  4500  007B24  64                 	db	100	;'d'
  4501  007B25  3D                 	db	61	;'='
  4502  007B26  00                 	db	0
  4503  007B27                     STR_181:
  4504  007B27  2C                 	db	44
  4505  007B28  74                 	db	116	;'t'
  4506  007B29  69                 	db	105	;'i'
  4507  007B2A  6D                 	db	109	;'m'
  4508  007B2B  65                 	db	101	;'e'
  4509  007B2C  73                 	db	115	;'s'
  4510  007B2D  74                 	db	116	;'t'
  4511  007B2E  61                 	db	97	;'a'
  4512  007B2F  6D                 	db	109	;'m'
  4513  007B30  70                 	db	112	;'p'
  4514  007B31  3D                 	db	61	;'='
  4515  007B32  00                 	db	0
  4516  007B33                     STR_303:
  4517  007B33  56                 	db	86	;'V'
  4518  007B34  53                 	db	83	;'S'
  4519  007B35  43                 	db	67	;'C'
  4520  007B36  50                 	db	80	;'P'
  4521  007B37  20                 	db	32
  4522  007B38  44                 	db	68	;'D'
  4523  007B39  72                 	db	114	;'r'
  4524  007B3A  69                 	db	105	;'i'
  4525  007B3B  76                 	db	118	;'v'
  4526  007B3C  65                 	db	101	;'e'
  4527  007B3D  72                 	db	114	;'r'
  4528  007B3E  00                 	db	0
  4529  007B3F                     STR_159:
  4530  007B3F  54                 	db	84	;'T'
  4531  007B40  49                 	db	73	;'I'
  4532  007B41  4D                 	db	77	;'M'
  4533  007B42  45                 	db	69	;'E'
  4534  007B43  53                 	db	83	;'S'
  4535  007B44  54                 	db	84	;'T'
  4536  007B45  41                 	db	65	;'A'
  4537  007B46  4D                 	db	77	;'M'
  4538  007B47  50                 	db	80	;'P'
  4539  007B48  20                 	db	32
  4540  007B49  00                 	db	0
  4541  007B4A                     STR_138:
  4542  007B4A  52                 	db	82	;'R'
  4543  007B4B  57                 	db	87	;'W'
  4544  007B4C  54                 	db	84	;'T'
  4545  007B4D  49                 	db	73	;'I'
  4546  007B4E  4D                 	db	77	;'M'
  4547  007B4F  45                 	db	69	;'E'
  4548  007B50  4F                 	db	79	;'O'
  4549  007B51  55                 	db	85	;'U'
  4550  007B52  54                 	db	84	;'T'
  4551  007B53  20                 	db	32
  4552  007B54  00                 	db	0
  4553  007B55                     STR_118:
  4554  007B55  50                 	db	80	;'P'
  4555  007B56  45                 	db	69	;'E'
  4556  007B57  52                 	db	82	;'R'
  4557  007B58  53                 	db	83	;'S'
  4558  007B59  49                 	db	73	;'I'
  4559  007B5A  53                 	db	83	;'S'
  4560  007B5B  54                 	db	84	;'T'
  4561  007B5C  45                 	db	69	;'E'
  4562  007B5D  4E                 	db	78	;'N'
  4563  007B5E  54                 	db	84	;'T'
  4564  007B5F  00                 	db	0
  4565  007B60                     STR_200:
  4566  007B60  2C                 	db	44
  4567  007B61  44                 	db	68	;'D'
  4568  007B62  61                 	db	97	;'a'
  4569  007B63  74                 	db	116	;'t'
  4570  007B64  61                 	db	97	;'a'
  4571  007B65  3D                 	db	61	;'='
  4572  007B66  6E                 	db	110	;'n'
  4573  007B67  6F                 	db	111	;'o'
  4574  007B68  6E                 	db	110	;'n'
  4575  007B69  65                 	db	101	;'e'
  4576  007B6A  00                 	db	0
  4577  007B6B                     STR_57:
  4578  007B6B  30                 	db	48	;'0'
  4579  007B6C  78                 	db	120	;'x'
  4580  007B6D  25                 	db	37
  4581  007B6E  30                 	db	48	;'0'
  4582  007B6F  32                 	db	50	;'2'
  4583  007B70  58                 	db	88	;'X'
  4584  007B71  20                 	db	32
  4585  007B72  2D                 	db	45
  4586  007B73  20                 	db	32
  4587  007B74  00                 	db	0
  4588  007B75                     STR_299:
  4589  007B75  56                 	db	86	;'V'
  4590  007B76  65                 	db	101	;'e'
  4591  007B77  72                 	db	114	;'r'
  4592  007B78  73                 	db	115	;'s'
  4593  007B79  69                 	db	105	;'i'
  4594  007B7A  6F                 	db	111	;'o'
  4595  007B7B  6E                 	db	110	;'n'
  4596  007B7C  3A                 	db	58	;':'
  4597  007B7D  20                 	db	32
  4598  007B7E  00                 	db	0
  4599  007B7F                     STR_165:
  4600  007B7F  42                 	db	66	;'B'
  4601  007B80  41                 	db	65	;'A'
  4602  007B81  55                 	db	85	;'U'
  4603  007B82  44                 	db	68	;'D'
  4604  007B83  52                 	db	82	;'R'
  4605  007B84  41                 	db	65	;'A'
  4606  007B85  54                 	db	84	;'T'
  4607  007B86  45                 	db	69	;'E'
  4608  007B87  20                 	db	32
  4609  007B88  00                 	db	0
  4610  007B89                     STR_305:
  4611  007B89  56                 	db	86	;'V'
  4612  007B8A  53                 	db	83	;'S'
  4613  007B8B  43                 	db	67	;'C'
  4614  007B8C  50                 	db	80	;'P'
  4615  007B8D  20                 	db	32
  4616  007B8E  4E                 	db	78	;'N'
  4617  007B8F  6F                 	db	111	;'o'
  4618  007B90  64                 	db	100	;'d'
  4619  007B91  65                 	db	101	;'e'
  4620  007B92  00                 	db	0
  4621  007B93                     STR_304:
  4622  007B93  53                 	db	83	;'S'
  4623  007B94  4C                 	db	76	;'L'
  4624  007B95  20                 	db	32
  4625  007B96  44                 	db	68	;'D'
  4626  007B97  72                 	db	114	;'r'
  4627  007B98  69                 	db	105	;'i'
  4628  007B99  76                 	db	118	;'v'
  4629  007B9A  65                 	db	101	;'e'
  4630  007B9B  72                 	db	114	;'r'
  4631  007B9C  00                 	db	0
  4632  007B9D                     STR_140:
  4633  007B9D  53                 	db	83	;'S'
  4634  007B9E  54                 	db	84	;'T'
  4635  007B9F  41                 	db	65	;'A'
  4636  007BA0  52                 	db	82	;'R'
  4637  007BA1  54                 	db	84	;'T'
  4638  007BA2  49                 	db	73	;'I'
  4639  007BA3  46                 	db	70	;'F'
  4640  007BA4  20                 	db	32
  4641  007BA5  00                 	db	0
  4642  007BA6                     STR_190:
  4643  007BA6  2C                 	db	44
  4644  007BA7  6E                 	db	110	;'n'
  4645  007BA8  6F                 	db	111	;'o'
  4646  007BA9  64                 	db	100	;'d'
  4647  007BAA  65                 	db	101	;'e'
  4648  007BAB  69                 	db	105	;'i'
  4649  007BAC  64                 	db	100	;'d'
  4650  007BAD  3D                 	db	61	;'='
  4651  007BAE  00                 	db	0
  4652  007BAF                     STR_14:
  4653  007BAF  4C                 	db	76	;'L'
  4654  007BB0  4F                 	db	79	;'O'
  4655  007BB1  4F                 	db	79	;'O'
  4656  007BB2  50                 	db	80	;'P'
  4657  007BB3  42                 	db	66	;'B'
  4658  007BB4  41                 	db	65	;'A'
  4659  007BB5  43                 	db	67	;'C'
  4660  007BB6  4B                 	db	75	;'K'
  4661  007BB7  00                 	db	0
  4662  007BB8                     STR_167:
  4663  007BB8  44                 	db	68	;'D'
  4664  007BB9  45                 	db	69	;'E'
  4665  007BBA  46                 	db	70	;'F'
  4666  007BBB  41                 	db	65	;'A'
  4667  007BBC  55                 	db	85	;'U'
  4668  007BBD  4C                 	db	76	;'L'
  4669  007BBE  54                 	db	84	;'T'
  4670  007BBF  53                 	db	83	;'S'
  4671  007BC0  00                 	db	0
  4672  007BC1                     STR_173:
  4673  007BC1  56                 	db	86	;'V'
  4674  007BC2  31                 	db	49	;'1'
  4675  007BC3  30                 	db	48	;'0'
  4676  007BC4  31                 	db	49	;'1'
  4677  007BC5  31                 	db	49	;'1'
  4678  007BC6  0D                 	db	13
  4679  007BC7  0A                 	db	10
  4680  007BC8  00                 	db	0
  4681  007BC9                     STR_174:
  4682  007BC9  4E                 	db	78	;'N'
  4683  007BCA  31                 	db	49	;'1'
  4684  007BCB  39                 	db	57	;'9'
  4685  007BCC  37                 	db	55	;'7'
  4686  007BCD  37                 	db	55	;'7'
  4687  007BCE  0D                 	db	13
  4688  007BCF  0A                 	db	10
  4689  007BD0  00                 	db	0
  4690  007BD1                     STR_91:
  4691  007BD1  30                 	db	48	;'0'
  4692  007BD2  78                 	db	120	;'x'
  4693  007BD3  25                 	db	37
  4694  007BD4  30                 	db	48	;'0'
  4695  007BD5  32                 	db	50	;'2'
  4696  007BD6  58                 	db	88	;'X'
  4697  007BD7  0A                 	db	10
  4698  007BD8  00                 	db	0
  4699  007BD9                     STR_288:
  4700  007BD9  47                 	db	71	;'G'
  4701  007BDA  55                 	db	85	;'U'
  4702  007BDB  49                 	db	73	;'I'
  4703  007BDC  44                 	db	68	;'D'
  4704  007BDD  20                 	db	32
  4705  007BDE  3D                 	db	61	;'='
  4706  007BDF  20                 	db	32
  4707  007BE0  00                 	db	0
  4708  007BE1                     STR_184:
  4709  007BE1  2C                 	db	44
  4710  007BE2  63                 	db	99	;'c'
  4711  007BE3  6C                 	db	108	;'l'
  4712  007BE4  61                 	db	97	;'a'
  4713  007BE5  73                 	db	115	;'s'
  4714  007BE6  73                 	db	115	;'s'
  4715  007BE7  3D                 	db	61	;'='
  4716  007BE8  00                 	db	0
  4717  007BE9                     STR_147:
  4718  007BE9  56                 	db	86	;'V'
  4719  007BEA  45                 	db	69	;'E'
  4720  007BEB  52                 	db	82	;'R'
  4721  007BEC  42                 	db	66	;'B'
  4722  007BED  4F                 	db	79	;'O'
  4723  007BEE  53                 	db	83	;'S'
  4724  007BEF  45                 	db	69	;'E'
  4725  007BF0  00                 	db	0
  4726  007BF1                     STR_136:
  4727  007BF1  44                 	db	68	;'D'
  4728  007BF2  45                 	db	69	;'E'
  4729  007BF3  43                 	db	67	;'C'
  4730  007BF4  49                 	db	73	;'I'
  4731  007BF5  4D                 	db	77	;'M'
  4732  007BF6  41                 	db	65	;'A'
  4733  007BF7  4C                 	db	76	;'L'
  4734  007BF8  00                 	db	0
  4735  007BF9                     STR_18:
  4736  007BF9  56                 	db	86	;'V'
  4737  007BFA  45                 	db	69	;'E'
  4738  007BFB  52                 	db	82	;'R'
  4739  007BFC  53                 	db	83	;'S'
  4740  007BFD  49                 	db	73	;'I'
  4741  007BFE  4F                 	db	79	;'O'
  4742  007BFF  4E                 	db	78	;'N'
  4743  007C00  00                 	db	0
  4744  007C01                     STR_182:
  4745  007C01  30                 	db	48	;'0'
  4746  007C02  78                 	db	120	;'x'
  4747  007C03  25                 	db	37
  4748  007C04  30                 	db	48	;'0'
  4749  007C05  38                 	db	56	;'8'
  4750  007C06  6C                 	db	108	;'l'
  4751  007C07  58                 	db	88	;'X'
  4752  007C08  00                 	db	0
  4753  007C09                     STR_302:
  4754  007C09  56                 	db	86	;'V'
  4755  007C0A  65                 	db	101	;'e'
  4756  007C0B  72                 	db	114	;'r'
  4757  007C0C  62                 	db	98	;'b'
  4758  007C0D  6F                 	db	111	;'o'
  4759  007C0E  73                 	db	115	;'s'
  4760  007C0F  65                 	db	101	;'e'
  4761  007C10  00                 	db	0
  4762  007C11                     STR_301:
  4763  007C11  4D                 	db	77	;'M'
  4764  007C12  6F                 	db	111	;'o'
  4765  007C13  64                 	db	100	;'d'
  4766  007C14  65                 	db	101	;'e'
  4767  007C15  3A                 	db	58	;':'
  4768  007C16  20                 	db	32
  4769  007C17  00                 	db	0
  4770  007C18                     STR_196:
  4771  007C18  2C                 	db	44
  4772  007C19  44                 	db	68	;'D'
  4773  007C1A  61                 	db	97	;'a'
  4774  007C1B  74                 	db	116	;'t'
  4775  007C1C  61                 	db	97	;'a'
  4776  007C1D  3D                 	db	61	;'='
  4777  007C1E  00                 	db	0
  4778  007C1F                     STR_187:
  4779  007C1F  2C                 	db	44
  4780  007C20  74                 	db	116	;'t'
  4781  007C21  79                 	db	121	;'y'
  4782  007C22  70                 	db	112	;'p'
  4783  007C23  65                 	db	101	;'e'
  4784  007C24  3D                 	db	61	;'='
  4785  007C25  00                 	db	0
  4786  007C26                     STR_193:
  4787  007C26  2C                 	db	44
  4788  007C27  73                 	db	115	;'s'
  4789  007C28  69                 	db	105	;'i'
  4790  007C29  7A                 	db	122	;'z'
  4791  007C2A  65                 	db	101	;'e'
  4792  007C2B  3D                 	db	61	;'='
  4793  007C2C  00                 	db	0
  4794  007C2D                     STR_178:
  4795  007C2D  3C                 	db	60	;'<'
  4796  007C2E  50                 	db	80	;'P'
  4797  007C2F  72                 	db	114	;'r'
  4798  007C30  69                 	db	105	;'i'
  4799  007C31  6F                 	db	111	;'o'
  4800  007C32  3D                 	db	61	;'='
  4801  007C33  00                 	db	0
  4802  007C34                     STR_20:
  4803  007C34  49                 	db	73	;'I'
  4804  007C35  46                 	db	70	;'F'
  4805  007C36  4D                 	db	77	;'M'
  4806  007C37  4F                 	db	79	;'O'
  4807  007C38  44                 	db	68	;'D'
  4808  007C39  45                 	db	69	;'E'
  4809  007C3A  00                 	db	0
  4810  007C3B                     STR_16:
  4811  007C3B  4C                 	db	76	;'L'
  4812  007C3C  49                 	db	73	;'I'
  4813  007C3D  53                 	db	83	;'S'
  4814  007C3E  54                 	db	84	;'T'
  4815  007C3F  45                 	db	69	;'E'
  4816  007C40  4E                 	db	78	;'N'
  4817  007C41  00                 	db	0
  4818  007C42                     STR_105:
  4819  007C42  46                 	db	70	;'F'
  4820  007C43  49                 	db	73	;'I'
  4821  007C44  4C                 	db	76	;'L'
  4822  007C45  54                 	db	84	;'T'
  4823  007C46  45                 	db	69	;'E'
  4824  007C47  52                 	db	82	;'R'
  4825  007C48  00                 	db	0
  4826  007C49                     STR_10:
  4827  007C49  53                 	db	83	;'S'
  4828  007C4A  49                 	db	73	;'I'
  4829  007C4B  4C                 	db	76	;'L'
  4830  007C4C  45                 	db	69	;'E'
  4831  007C4D  4E                 	db	78	;'N'
  4832  007C4E  54                 	db	84	;'T'
  4833  007C4F  00                 	db	0
  4834  007C50                     STR_60:
  4835  007C50  30                 	db	48	;'0'
  4836  007C51  78                 	db	120	;'x'
  4837  007C52  25                 	db	37
  4838  007C53  30                 	db	48	;'0'
  4839  007C54  32                 	db	50	;'2'
  4840  007C55  58                 	db	88	;'X'
  4841  007C56  00                 	db	0
  4842  007C57                     STR_185:
  4843  007C57  30                 	db	48	;'0'
  4844  007C58  78                 	db	120	;'x'
  4845  007C59  25                 	db	37
  4846  007C5A  30                 	db	48	;'0'
  4847  007C5B  34                 	db	52	;'4'
  4848  007C5C  58                 	db	88	;'X'
  4849  007C5D  00                 	db	0
  4850  007C5E                     STR_203:
  4851  007C5E  30                 	db	48	;'0'
  4852  007C5F  78                 	db	120	;'x'
  4853  007C60  25                 	db	37
  4854  007C61  30                 	db	48	;'0'
  4855  007C62  38                 	db	56	;'8'
  4856  007C63  58                 	db	88	;'X'
  4857  007C64  00                 	db	0
  4858  007C65                     STR_175:
  4859  007C65  46                 	db	70	;'F'
  4860  007C66  30                 	db	48	;'0'
  4861  007C67  30                 	db	48	;'0'
  4862  007C68  0D                 	db	13
  4863  007C69  0A                 	db	10
  4864  007C6A  00                 	db	0
  4865  007C6B                     STR_9:
  4866  007C6B  2B                 	db	43
  4867  007C6C  4F                 	db	79	;'O'
  4868  007C6D  4B                 	db	75	;'K'
  4869  007C6E  0D                 	db	13
  4870  007C6F  0A                 	db	10
  4871  007C70  00                 	db	0
  4872  007C71                     STR_58:
  4873  007C71  25                 	db	37
  4874  007C72  64                 	db	100	;'d'
  4875  007C73  20                 	db	32
  4876  007C74  2D                 	db	45
  4877  007C75  20                 	db	32
  4878  007C76  00                 	db	0
  4879  007C77                     STR_146:
  4880  007C77  4D                 	db	77	;'M'
  4881  007C78  4F                 	db	79	;'O'
  4882  007C79  44                 	db	68	;'D'
  4883  007C7A  45                 	db	69	;'E'
  4884  007C7B  20                 	db	32
  4885  007C7C  00                 	db	0
  4886  007C7D                     STR_153:
  4887  007C7D  45                 	db	69	;'E'
  4888  007C7E  43                 	db	67	;'C'
  4889  007C7F  48                 	db	72	;'H'
  4890  007C80  4F                 	db	79	;'O'
  4891  007C81  20                 	db	32
  4892  007C82  00                 	db	0
  4893  007C83                     STR_12:
  4894  007C83  43                 	db	67	;'C'
  4895  007C84  4C                 	db	76	;'L'
  4896  007C85  4F                 	db	79	;'O'
  4897  007C86  53                 	db	83	;'S'
  4898  007C87  45                 	db	69	;'E'
  4899  007C88  00                 	db	0
  4900  007C89                     STR_151:
  4901  007C89  53                 	db	83	;'S'
  4902  007C8A  4C                 	db	76	;'L'
  4903  007C8B  43                 	db	67	;'C'
  4904  007C8C  41                 	db	65	;'A'
  4905  007C8D  4E                 	db	78	;'N'
  4906  007C8E  00                 	db	0
  4907  007C8F                     STR_133:
  4908  007C8F  53                 	db	83	;'S'
  4909  007C90  45                 	db	69	;'E'
  4910  007C91  54                 	db	84	;'T'
  4911  007C92  20                 	db	32
  4912  007C93  00                 	db	0
  4913  007C94                     STR_47:
  4914  007C94  46                 	db	70	;'F'
  4915  007C95  49                 	db	73	;'I'
  4916  007C96  4E                 	db	78	;'N'
  4917  007C97  44                 	db	68	;'D'
  4918  007C98  00                 	db	0
  4919  007C99                     STR_49:
  4920  007C99  52                 	db	82	;'R'
  4921  007C9A  52                 	db	82	;'R'
  4922  007C9B  45                 	db	69	;'E'
  4923  007C9C  47                 	db	71	;'G'
  4924  007C9D  00                 	db	0
  4925  007C9E                     STR_81:
  4926  007C9E  57                 	db	87	;'W'
  4927  007C9F  52                 	db	82	;'R'
  4928  007CA0  45                 	db	69	;'E'
  4929  007CA1  47                 	db	71	;'G'
  4930  007CA2  00                 	db	0
  4931  007CA3                     STR_120:
  4932  007CA3  4D                 	db	77	;'M'
  4933  007CA4  41                 	db	65	;'A'
  4934  007CA5  53                 	db	83	;'S'
  4935  007CA6  4B                 	db	75	;'K'
  4936  007CA7  00                 	db	0
  4937  007CA8                     STR_8:
  4938  007CA8  4F                 	db	79	;'O'
  4939  007CA9  50                 	db	80	;'P'
  4940  007CAA  45                 	db	69	;'E'
  4941  007CAB  4E                 	db	78	;'N'
  4942  007CAC  00                 	db	0
  4943  007CAD                     STR_97:
  4944  007CAD  49                 	db	73	;'I'
  4945  007CAE  4E                 	db	78	;'N'
  4946  007CAF  46                 	db	70	;'F'
  4947  007CB0  4F                 	db	79	;'O'
  4948  007CB1  00                 	db	0
  4949  007CB2                     STR_149:
  4950  007CB2  56                 	db	86	;'V'
  4951  007CB3  53                 	db	83	;'S'
  4952  007CB4  43                 	db	67	;'C'
  4953  007CB5  50                 	db	80	;'P'
  4954  007CB6  00                 	db	0
  4955  007CB7                     STR_45:
  4956  007CB7  48                 	db	72	;'H'
  4957  007CB8  45                 	db	69	;'E'
  4958  007CB9  4C                 	db	76	;'L'
  4959  007CBA  50                 	db	80	;'P'
  4960  007CBB  00                 	db	0
  4961  007CBC                     STR_41:
  4962  007CBC  53                 	db	83	;'S'
  4963  007CBD  54                 	db	84	;'T'
  4964  007CBE  41                 	db	65	;'A'
  4965  007CBF  54                 	db	84	;'T'
  4966  007CC0  00                 	db	0
  4967  007CC1                     STR_6:
  4968  007CC1  42                 	db	66	;'B'
  4969  007CC2  4F                 	db	79	;'O'
  4970  007CC3  4F                 	db	79	;'O'
  4971  007CC4  54                 	db	84	;'T'
  4972  007CC5  00                 	db	0
  4973  007CC6                     STR_68:
  4974  007CC6  27                 	db	39
  4975  007CC7  20                 	db	32
  4976  007CC8  09                 	db	9
  4977  007CC9  00                 	db	0
  4978  007CCA                     STR_201:
  4979  007CCA  3E                 	db	62	;'>'
  4980  007CCB  0D                 	db	13
  4981  007CCC  0A                 	db	10
  4982  007CCD  00                 	db	0
  4983  007CCE                     STR_92:
  4984  007CCE  25                 	db	37
  4985  007CCF  64                 	db	100	;'d'
  4986  007CD0  0A                 	db	10
  4987  007CD1  00                 	db	0
  4988  007CD2                     STR_156:
  4989  007CD2  4F                 	db	79	;'O'
  4990  007CD3  46                 	db	70	;'F'
  4991  007CD4  46                 	db	70	;'F'
  4992  007CD5  00                 	db	0
  4993  007CD6                     STR_43:
  4994  007CD6  45                 	db	69	;'E'
  4995  007CD7  52                 	db	82	;'R'
  4996  007CD8  52                 	db	82	;'R'
  4997  007CD9  00                 	db	0
  4998  007CDA                     STR_134:
  4999  007CDA  48                 	db	72	;'H'
  5000  007CDB  45                 	db	69	;'E'
  5001  007CDC  58                 	db	88	;'X'
  5002  007CDD  00                 	db	0
  5003  007CDE                     STR_183:
  5004  007CDE  25                 	db	37
  5005  007CDF  6C                 	db	108	;'l'
  5006  007CE0  75                 	db	117	;'u'
  5007  007CE1  00                 	db	0
  5008  007CE2                     STR_67:
  5009  007CE2  09                 	db	9
  5010  007CE3  27                 	db	39
  5011  007CE4  00                 	db	0
  5012  007CE5                     STR_290:
  5013  007CE5  2D                 	db	45
  5014  007CE6  2D                 	db	45
  5015  007CE7  00                 	db	0
  5016  007CE8                     STR_38:
  5017  007CE8  52                 	db	82	;'R'
  5018  007CE9  58                 	db	88	;'X'
  5019  007CEA  00                 	db	0
  5020  007CEB                     STR_29:
  5021  007CEB  54                 	db	84	;'T'
  5022  007CEC  58                 	db	88	;'X'
  5023  007CED  00                 	db	0
  5024  007CEE                     STR_61:
  5025  007CEE  25                 	db	37
  5026  007CEF  64                 	db	100	;'d'
  5027  007CF0  00                 	db	0
  5028  007CF1                     STR_177:
  5029  007CF1  07                 	db	7
  5030  007CF2  00                 	db	0
  5031  007CF3                     STR_176:
  5032  007CF3  0D                 	db	13
  5033  007CF4  00                 	db	0
  5034  007CF5                     STR_30:
  5035  007CF5  2C                 	db	44
  5036  007CF6  00                 	db	0
  5037  007CF7                     STR_297:
  5038  007CF7  2E                 	db	46
  5039  007CF8  00                 	db	0
  5040  007CF9                     STR_289:
  5041  007CF9  30                 	db	48	;'0'
  5042  007CFA  00                 	db	0
  5043  007CFB                     STR_291:
  5044  007CFB  3A                 	db	58	;':'
  5045  007CFC  00                 	db	0
  5046  007CFD                     STR_168:
  5047  007CFD  3F                 	db	63	;'?'
  5048  007CFE  00                 	db	0
  5049  007CFF                     __end_of__stringdata:
  5050                           	opt stack 0
  5051                           
  5052                           ; #config settings
  5053  007CFF  00                 	db	0	; dummy byte at the end
  5054  0000                     tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           prodh	equ	0xFF4
  5059                           prodl	equ	0xFF3
  5060                           intcon	equ	0xFF2
  5061                           indf0	equ	0xFEF
  5062                           fsr0h	equ	0xFEA
  5063                           fsr0l	equ	0xFE9
  5064                           wreg	equ	0xFE8
  5065                           indf1	equ	0xFE7
  5066                           postinc1	equ	0xFE6
  5067                           postdec1	equ	0xFE5
  5068                           fsr1h	equ	0xFE2
  5069                           fsr1l	equ	0xFE1
  5070                           indf2	equ	0xFDF
  5071                           postinc2	equ	0xFDE
  5072                           postdec2	equ	0xFDD
  5073                           plusw2	equ	0xFDB
  5074                           fsr2h	equ	0xFDA
  5075                           fsr2l	equ	0xFD9
  5076                           status	equ	0xFD8
  5077                           
  5078                           	psect	nvCOMRAM
  5079  00003F                     __pnvCOMRAM:
  5080                           	opt stack 0
  5081  00003F                     _caps:
  5082                           	opt stack 0
  5083  00003F                     	ds	2
  5084  000041                     ___DCDelay:
  5085                           	opt stack 0
  5086  000041                     	ds	1
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodh	equ	0xFF4
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           indf0	equ	0xFEF
  5095                           fsr0h	equ	0xFEA
  5096                           fsr0l	equ	0xFE9
  5097                           wreg	equ	0xFE8
  5098                           indf1	equ	0xFE7
  5099                           postinc1	equ	0xFE6
  5100                           postdec1	equ	0xFE5
  5101                           fsr1h	equ	0xFE2
  5102                           fsr1l	equ	0xFE1
  5103                           indf2	equ	0xFDF
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           plusw2	equ	0xFDB
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111                           	psect	cinit
  5112  001088                     __pcinit:
  5113                           	opt stack 0
  5114  001088                     start_initialization:
  5115                           	opt stack 0
  5116  001088                     __initialization:
  5117                           	opt stack 0
  5118                           
  5119                           ; Clear objects allocated to BIGRAM (494 bytes)
  5120  001088  EE04  F000         	lfsr	0,__pbssBIGRAM
  5121  00108C  EE11 F0EE          	lfsr	1,494
  5122  001090                     clear_0:
  5123  001090  6AEE               	clrf	postinc0,c
  5124  001092  50E5               	movf	postdec1,w,c
  5125  001094  50E1               	movf	fsr1l,w,c
  5126  001096  E1FC               	bnz	clear_0
  5127  001098  50E2               	movf	fsr1h,w,c
  5128  00109A  E1FA               	bnz	clear_0
  5129                           
  5130                           ; Clear objects allocated to BANK3 (256 bytes)
  5131  00109C  EE03  F000         	lfsr	0,__pbssBANK3
  5132  0010A0  EE11 F000          	lfsr	1,256
  5133  0010A4                     clear_1:
  5134  0010A4  6AEE               	clrf	postinc0,c
  5135  0010A6  50E5               	movf	postdec1,w,c
  5136  0010A8  50E1               	movf	fsr1l,w,c
  5137  0010AA  E1FC               	bnz	clear_1
  5138  0010AC  50E2               	movf	fsr1h,w,c
  5139  0010AE  E1FA               	bnz	clear_1
  5140                           
  5141                           ; Clear objects allocated to BANK2 (136 bytes)
  5142  0010B0  EE02  F000         	lfsr	0,__pbssBANK2
  5143  0010B4  0E88               	movlw	136
  5144  0010B6                     clear_2:
  5145  0010B6  6AEE               	clrf	postinc0,c
  5146  0010B8  06E8               	decf	wreg,f,c
  5147  0010BA  E1FD               	bnz	clear_2
  5148                           
  5149                           ; Clear objects allocated to BANK1 (179 bytes)
  5150  0010BC  EE01  F000         	lfsr	0,__pbssBANK1
  5151  0010C0  0EB3               	movlw	179
  5152  0010C2                     clear_3:
  5153  0010C2  6AEE               	clrf	postinc0,c
  5154  0010C4  06E8               	decf	wreg,f,c
  5155  0010C6  E1FD               	bnz	clear_3
  5156                           
  5157                           ; Clear objects allocated to BANK0 (62 bytes)
  5158  0010C8  EE00  F0C1         	lfsr	0,__pbssBANK0
  5159  0010CC  0E3E               	movlw	62
  5160  0010CE                     clear_4:
  5161  0010CE  6AEE               	clrf	postinc0,c
  5162  0010D0  06E8               	decf	wreg,f,c
  5163  0010D2  E1FD               	bnz	clear_4
  5164                           
  5165                           ; Clear objects allocated to COMRAM (23 bytes)
  5166  0010D4  EE00  F028         	lfsr	0,__pbssCOMRAM
  5167  0010D8  0E17               	movlw	23
  5168  0010DA                     clear_5:
  5169  0010DA  6AEE               	clrf	postinc0,c
  5170  0010DC  06E8               	decf	wreg,f,c
  5171  0010DE  E1FD               	bnz	clear_5
  5172  0010E0                     end_of_initialization:
  5173                           	opt stack 0
  5174  0010E0                     __end_of__initialization:
  5175                           	opt stack 0
  5176  0010E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  5177  0010E2  6EF8               	movwf	tblptru,c
  5178  0010E4  0100               	movlb	0
  5179  0010E6  EFC6  F018         	goto	_main	;jump to C main() function
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           intcon	equ	0xFF2
  5187                           indf0	equ	0xFEF
  5188                           postinc0	equ	0xFEE
  5189                           fsr0h	equ	0xFEA
  5190                           fsr0l	equ	0xFE9
  5191                           wreg	equ	0xFE8
  5192                           indf1	equ	0xFE7
  5193                           postinc1	equ	0xFE6
  5194                           postdec1	equ	0xFE5
  5195                           fsr1h	equ	0xFE2
  5196                           fsr1l	equ	0xFE1
  5197                           indf2	equ	0xFDF
  5198                           postinc2	equ	0xFDE
  5199                           postdec2	equ	0xFDD
  5200                           plusw2	equ	0xFDB
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205                           	psect	bssCOMRAM
  5206  000028                     __pbssCOMRAM:
  5207                           	opt stack 0
  5208  000028                     _made_table:
  5209                           	opt stack 0
  5210  000028                     	ds	2
  5211  00002A                     _status_led_cnt:
  5212                           	opt stack 0
  5213  00002A                     	ds	2
  5214  00002C                     strtok@sp:
  5215                           	opt stack 0
  5216  00002C                     	ds	2
  5217  00002E                     _USART_Status:
  5218                           	opt stack 0
  5219  00002E                     	ds	1
  5220  00002F                     __ECANRxFilterHitInfo:
  5221                           	opt stack 0
  5222  00002F                     	ds	1
  5223  000030                     __IT_INT_MASK:
  5224                           	opt stack 0
  5225  000030                     	ds	1
  5226  000031                     __IT_SAVE_BSR:
  5227                           	opt stack 0
  5228  000031                     	ds	1
  5229  000032                     __IT_SAVE_STATUS:
  5230                           	opt stack 0
  5231  000032                     	ds	1
  5232  000033                     __IT_SAVE_WREG:
  5233                           	opt stack 0
  5234  000033                     	ds	1
  5235  000034                     ___DCByte:
  5236                           	opt stack 0
  5237  000034                     	ds	1
  5238  000035                     _bDLE:
  5239                           	opt stack 0
  5240  000035                     	ds	1
  5241  000036                     _fifo_canrxcount:
  5242                           	opt stack 0
  5243  000036                     	ds	1
  5244  000037                     _ledFunctionality:
  5245                           	opt stack 0
  5246  000037                     	ds	1
  5247  000038                     _stateVscpDriver:
  5248                           	opt stack 0
  5249  000038                     	ds	1
  5250  000039                     _id:
  5251                           	opt stack 0
  5252  000039                     	ds	4
  5253  00003D                     _dlc:
  5254                           	opt stack 0
  5255  00003D                     	ds	1
  5256  00003E                     _flags:
  5257                           	opt stack 0
  5258  00003E                     	ds	1
  5259                           tblptru	equ	0xFF8
  5260                           tblptrh	equ	0xFF7
  5261                           tblptrl	equ	0xFF6
  5262                           tablat	equ	0xFF5
  5263                           prodh	equ	0xFF4
  5264                           prodl	equ	0xFF3
  5265                           intcon	equ	0xFF2
  5266                           indf0	equ	0xFEF
  5267                           postinc0	equ	0xFEE
  5268                           fsr0h	equ	0xFEA
  5269                           fsr0l	equ	0xFE9
  5270                           wreg	equ	0xFE8
  5271                           indf1	equ	0xFE7
  5272                           postinc1	equ	0xFE6
  5273                           postdec1	equ	0xFE5
  5274                           fsr1h	equ	0xFE2
  5275                           fsr1l	equ	0xFE1
  5276                           indf2	equ	0xFDF
  5277                           postinc2	equ	0xFDE
  5278                           postdec2	equ	0xFDD
  5279                           plusw2	equ	0xFDB
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284                           	psect	bssBANK0
  5285  0000C1                     __pbssBANK0:
  5286                           	opt stack 0
  5287  0000C1                     _can_receiveOverruns:
  5288                           	opt stack 0
  5289  0000C1                     	ds	4
  5290  0000C5                     _can_transmitOverruns:
  5291                           	opt stack 0
  5292  0000C5                     	ds	4
  5293  0000C9                     _cntRxBytes:
  5294                           	opt stack 0
  5295  0000C9                     	ds	4
  5296  0000CD                     _cntRxFrames:
  5297                           	opt stack 0
  5298  0000CD                     	ds	4
  5299  0000D1                     _cntTxBytes:
  5300                           	opt stack 0
  5301  0000D1                     	ds	4
  5302  0000D5                     _cntTxFrames:
  5303                           	opt stack 0
  5304  0000D5                     	ds	4
  5305  0000D9                     _timekeeper:
  5306                           	opt stack 0
  5307  0000D9                     	ds	4
  5308  0000DD                     _timer:
  5309                           	opt stack 0
  5310  0000DD                     	ds	4
  5311  0000E1                     _uart_receiveOverruns:
  5312                           	opt stack 0
  5313  0000E1                     	ds	4
  5314  0000E5                     _uart_transmitOverruns:
  5315                           	opt stack 0
  5316  0000E5                     	ds	4
  5317  0000E9                     _bInitiated:
  5318                           	opt stack 0
  5319  0000E9                     	ds	1
  5320  0000EA                     _bOpen:
  5321                           	opt stack 0
  5322  0000EA                     	ds	1
  5323  0000EB                     _bTimestamp:
  5324                           	opt stack 0
  5325  0000EB                     	ds	1
  5326  0000EC                     _mode:
  5327                           	opt stack 0
  5328  0000EC                     	ds	1
  5329  0000ED                     _nTimeStamp:
  5330                           	opt stack 0
  5331  0000ED                     	ds	1
  5332  0000EE                     _sequencyno:
  5333                           	opt stack 0
  5334  0000EE                     	ds	1
  5335  0000EF                     _canInputFifo:
  5336                           	opt stack 0
  5337  0000EF                     	ds	8
  5338  0000F7                     _serialInputFifo:
  5339                           	opt stack 0
  5340  0000F7                     	ds	8
  5341                           tblptru	equ	0xFF8
  5342                           tblptrh	equ	0xFF7
  5343                           tblptrl	equ	0xFF6
  5344                           tablat	equ	0xFF5
  5345                           prodh	equ	0xFF4
  5346                           prodl	equ	0xFF3
  5347                           intcon	equ	0xFF2
  5348                           indf0	equ	0xFEF
  5349                           postinc0	equ	0xFEE
  5350                           fsr0h	equ	0xFEA
  5351                           fsr0l	equ	0xFE9
  5352                           wreg	equ	0xFE8
  5353                           indf1	equ	0xFE7
  5354                           postinc1	equ	0xFE6
  5355                           postdec1	equ	0xFE5
  5356                           fsr1h	equ	0xFE2
  5357                           fsr1l	equ	0xFE1
  5358                           indf2	equ	0xFDF
  5359                           postinc2	equ	0xFDE
  5360                           postdec2	equ	0xFDD
  5361                           plusw2	equ	0xFDB
  5362                           fsr2h	equ	0xFDA
  5363                           fsr2l	equ	0xFD9
  5364                           status	equ	0xFD8
  5365                           
  5366                           	psect	bssBANK1
  5367  000100                     __pbssBANK1:
  5368                           	opt stack 0
  5369  000100                     _bHex:
  5370                           	opt stack 0
  5371  000100                     	ds	1
  5372  000101                     _bLocalEcho:
  5373                           	opt stack 0
  5374  000101                     	ds	1
  5375  000102                     _bSilent:
  5376                           	opt stack 0
  5377  000102                     	ds	1
  5378  000103                     _pos:
  5379                           	opt stack 0
  5380  000103                     	ds	1
  5381  000104                     _rwtimeout:
  5382                           	opt stack 0
  5383  000104                     	ds	1
  5384  000105                     _cmdbuf:
  5385                           	opt stack 0
  5386  000105                     	ds	80
  5387  000155                     _wrkbuf:
  5388                           	opt stack 0
  5389  000155                     	ds	80
  5390  0001A5                     _vscpData:
  5391                           	opt stack 0
  5392  0001A5                     	ds	8
  5393  0001AD                     _vscpClass:
  5394                           	opt stack 0
  5395  0001AD                     	ds	2
  5396  0001AF                     _vscpNodeId:
  5397                           	opt stack 0
  5398  0001AF                     	ds	1
  5399  0001B0                     _vscpPriority:
  5400                           	opt stack 0
  5401  0001B0                     	ds	1
  5402  0001B1                     _vscpSize:
  5403                           	opt stack 0
  5404  0001B1                     	ds	1
  5405  0001B2                     _vscpType:
  5406                           	opt stack 0
  5407  0001B2                     	ds	1
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           indf0	equ	0xFEF
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           indf1	equ	0xFE7
  5421                           postinc1	equ	0xFE6
  5422                           postdec1	equ	0xFE5
  5423                           fsr1h	equ	0xFE2
  5424                           fsr1l	equ	0xFE1
  5425                           indf2	equ	0xFDF
  5426                           postinc2	equ	0xFDE
  5427                           postdec2	equ	0xFDD
  5428                           plusw2	equ	0xFDB
  5429                           fsr2h	equ	0xFDA
  5430                           fsr2l	equ	0xFD9
  5431                           status	equ	0xFD8
  5432                           
  5433                           	psect	bssBANK2
  5434  000200                     __pbssBANK2:
  5435                           	opt stack 0
  5436  000200                     _serial_inputBuffer:
  5437                           	opt stack 0
  5438  000200                     	ds	128
  5439  000280                     _data:
  5440                           	opt stack 0
  5441  000280                     	ds	8
  5442                           tblptru	equ	0xFF8
  5443                           tblptrh	equ	0xFF7
  5444                           tblptrl	equ	0xFF6
  5445                           tablat	equ	0xFF5
  5446                           prodh	equ	0xFF4
  5447                           prodl	equ	0xFF3
  5448                           intcon	equ	0xFF2
  5449                           indf0	equ	0xFEF
  5450                           postinc0	equ	0xFEE
  5451                           fsr0h	equ	0xFEA
  5452                           fsr0l	equ	0xFE9
  5453                           wreg	equ	0xFE8
  5454                           indf1	equ	0xFE7
  5455                           postinc1	equ	0xFE6
  5456                           postdec1	equ	0xFE5
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           postinc2	equ	0xFDE
  5461                           postdec2	equ	0xFDD
  5462                           plusw2	equ	0xFDB
  5463                           fsr2h	equ	0xFDA
  5464                           fsr2l	equ	0xFD9
  5465                           status	equ	0xFD8
  5466                           
  5467                           	psect	bssBANK3
  5468  000300                     __pbssBANK3:
  5469                           	opt stack 0
  5470  000300                     _crc8_table:
  5471                           	opt stack 0
  5472  000300                     	ds	256
  5473                           tblptru	equ	0xFF8
  5474                           tblptrh	equ	0xFF7
  5475                           tblptrl	equ	0xFF6
  5476                           tablat	equ	0xFF5
  5477                           prodh	equ	0xFF4
  5478                           prodl	equ	0xFF3
  5479                           intcon	equ	0xFF2
  5480                           indf0	equ	0xFEF
  5481                           postinc0	equ	0xFEE
  5482                           fsr0h	equ	0xFEA
  5483                           fsr0l	equ	0xFE9
  5484                           wreg	equ	0xFE8
  5485                           indf1	equ	0xFE7
  5486                           postinc1	equ	0xFE6
  5487                           postdec1	equ	0xFE5
  5488                           fsr1h	equ	0xFE2
  5489                           fsr1l	equ	0xFE1
  5490                           indf2	equ	0xFDF
  5491                           postinc2	equ	0xFDE
  5492                           postdec2	equ	0xFDD
  5493                           plusw2	equ	0xFDB
  5494                           fsr2h	equ	0xFDA
  5495                           fsr2l	equ	0xFD9
  5496                           status	equ	0xFD8
  5497                           
  5498                           	psect	bssBIGRAM
  5499  000400                     __pbssBIGRAM:
  5500                           	opt stack 0
  5501  000400                     _can_inputBuffer:
  5502                           	opt stack 0
  5503  000400                     	ds	494
  5504                           tblptru	equ	0xFF8
  5505                           tblptrh	equ	0xFF7
  5506                           tblptrl	equ	0xFF6
  5507                           tablat	equ	0xFF5
  5508                           prodh	equ	0xFF4
  5509                           prodl	equ	0xFF3
  5510                           intcon	equ	0xFF2
  5511                           indf0	equ	0xFEF
  5512                           postinc0	equ	0xFEE
  5513                           fsr0h	equ	0xFEA
  5514                           fsr0l	equ	0xFE9
  5515                           wreg	equ	0xFE8
  5516                           indf1	equ	0xFE7
  5517                           postinc1	equ	0xFE6
  5518                           postdec1	equ	0xFE5
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           plusw2	equ	0xFDB
  5525                           fsr2h	equ	0xFDA
  5526                           fsr2l	equ	0xFD9
  5527                           status	equ	0xFD8
  5528                           
  5529                           	psect	cstackBANK2
  5530  000288                     __pcstackBANK2:
  5531                           	opt stack 0
  5532  000288                     doModeVerbose@id:
  5533                           	opt stack 0
  5534                           
  5535                           ; 4 bytes @ 0x0
  5536  000288                     	ds	4
  5537  00028C                     doModeVerbose@preg:
  5538                           	opt stack 0
  5539                           
  5540                           ; 2 bytes @ 0x4
  5541  00028C                     	ds	2
  5542  00028E                     doModeVerbose@preg_1352:
  5543                           	opt stack 0
  5544                           
  5545                           ; 2 bytes @ 0x6
  5546  00028E                     	ds	2
  5547  000290                     doModeVerbose@filter_class:
  5548                           	opt stack 0
  5549                           
  5550                           ; 2 bytes @ 0x8
  5551  000290                     	ds	2
  5552  000292                     doModeVerbose@mask_class:
  5553                           	opt stack 0
  5554                           
  5555                           ; 2 bytes @ 0xA
  5556  000292                     	ds	2
  5557  000294                     doModeVerbose@filter_priority:
  5558                           	opt stack 0
  5559                           
  5560                           ; 1 bytes @ 0xC
  5561  000294                     	ds	1
  5562  000295                     doModeVerbose@filter_type:
  5563                           	opt stack 0
  5564                           
  5565                           ; 1 bytes @ 0xD
  5566  000295                     	ds	1
  5567  000296                     doModeVerbose@filter_nodeid:
  5568                           	opt stack 0
  5569                           
  5570                           ; 1 bytes @ 0xE
  5571  000296                     	ds	1
  5572  000297                     doModeVerbose@mask_priority:
  5573                           	opt stack 0
  5574                           
  5575                           ; 1 bytes @ 0xF
  5576  000297                     	ds	1
  5577  000298                     doModeVerbose@mask_type:
  5578                           	opt stack 0
  5579                           
  5580                           ; 1 bytes @ 0x10
  5581  000298                     	ds	1
  5582  000299                     doModeVerbose@mask_nodeid:
  5583                           	opt stack 0
  5584                           
  5585                           ; 1 bytes @ 0x11
  5586  000299                     	ds	2
  5587  00029B                     _doModeVerbose$1307:
  5588                           	opt stack 0
  5589                           
  5590                           ; 2 bytes @ 0x13
  5591  00029B                     	ds	2
  5592  00029D                     _doModeVerbose$1312:
  5593                           	opt stack 0
  5594                           
  5595                           ; 2 bytes @ 0x15
  5596  00029D                     	ds	2
  5597  00029F                     _doModeVerbose$1316:
  5598                           	opt stack 0
  5599                           
  5600                           ; 2 bytes @ 0x17
  5601  00029F                     	ds	2
  5602  0002A1                     _doModeVerbose$1321:
  5603                           	opt stack 0
  5604                           
  5605                           ; 2 bytes @ 0x19
  5606  0002A1                     	ds	2
  5607  0002A3                     _doModeVerbose$1329:
  5608                           	opt stack 0
  5609                           
  5610                           ; 2 bytes @ 0x1B
  5611  0002A3                     	ds	2
  5612  0002A5                     _doModeVerbose$1334:
  5613                           	opt stack 0
  5614                           
  5615                           ; 2 bytes @ 0x1D
  5616  0002A5                     	ds	2
  5617  0002A7                     _doModeVerbose$1338:
  5618                           	opt stack 0
  5619                           
  5620                           ; 2 bytes @ 0x1F
  5621  0002A7                     	ds	2
  5622  0002A9                     _doModeVerbose$1361:
  5623                           	opt stack 0
  5624                           
  5625                           ; 2 bytes @ 0x21
  5626  0002A9                     	ds	2
  5627  0002AB                     _doModeVerbose$1367:
  5628                           	opt stack 0
  5629                           
  5630                           ; 2 bytes @ 0x23
  5631  0002AB                     	ds	2
  5632  0002AD                     _doModeVerbose$1376:
  5633                           	opt stack 0
  5634                           
  5635                           ; 2 bytes @ 0x25
  5636  0002AD                     	ds	2
  5637  0002AF                     doModeVerbose@rv:
  5638                           	opt stack 0
  5639                           
  5640                           ; 1 bytes @ 0x27
  5641  0002AF                     	ds	1
  5642  0002B0                     doModeVerbose@page_1344:
  5643                           	opt stack 0
  5644                           
  5645                           ; 1 bytes @ 0x28
  5646  0002B0                     	ds	1
  5647  0002B1                     doModeVerbose@reg_1345:
  5648                           	opt stack 0
  5649                           
  5650                           ; 1 bytes @ 0x29
  5651  0002B1                     	ds	1
  5652  0002B2                     doModeVerbose@value_1370:
  5653                           	opt stack 0
  5654                           
  5655                           ; 1 bytes @ 0x2A
  5656  0002B2                     	ds	1
  5657  0002B3                     doModeVerbose@bPersistent:
  5658                           	opt stack 0
  5659                           
  5660                           ; 1 bytes @ 0x2B
  5661  0002B3                     	ds	1
  5662  0002B4                     doModeVerbose@filterno:
  5663                           	opt stack 0
  5664                           
  5665                           ; 1 bytes @ 0x2C
  5666  0002B4                     	ds	1
  5667  0002B5                     doModeVerbose@i:
  5668                           	opt stack 0
  5669                           
  5670                           ; 1 bytes @ 0x2D
  5671  0002B5                     	ds	1
  5672  0002B6                     doModeVerbose@value_1346:
  5673                           	opt stack 0
  5674                           
  5675                           ; 1 bytes @ 0x2E
  5676  0002B6                     	ds	1
  5677  0002B7                     doModeVerbose@count:
  5678                           	opt stack 0
  5679                           
  5680                           ; 1 bytes @ 0x2F
  5681  0002B7                     	ds	1
  5682  0002B8                     doModeVerbose@nodeid:
  5683                           	opt stack 0
  5684                           
  5685                           ; 1 bytes @ 0x30
  5686  0002B8                     	ds	1
  5687  0002B9                     doModeVerbose@nodeid_1343:
  5688                           	opt stack 0
  5689                           
  5690                           ; 1 bytes @ 0x31
  5691  0002B9                     	ds	1
  5692  0002BA                     doModeVerbose@maskno:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x32
  5696  0002BA                     	ds	1
  5697  0002BB                     doModeVerbose@page:
  5698                           	opt stack 0
  5699                           
  5700                           ; 1 bytes @ 0x33
  5701  0002BB                     	ds	1
  5702  0002BC                     doModeVerbose@reg:
  5703                           	opt stack 0
  5704                           
  5705                           ; 1 bytes @ 0x34
  5706  0002BC                     	ds	1
  5707  0002BD                     doModeVerbose@i_1288:
  5708                           	opt stack 0
  5709                           
  5710                           ; 1 bytes @ 0x35
  5711  0002BD                     	ds	1
  5712  0002BE                     doModeVerbose@nodeid_1369:
  5713                           	opt stack 0
  5714                           
  5715                           ; 1 bytes @ 0x36
  5716  0002BE                     	ds	1
  5717  0002BF                     doModeVerbose@c:
  5718                           	opt stack 0
  5719                           
  5720                           ; 1 bytes @ 0x37
  5721  0002BF                     	ds	1
  5722  0002C0                     doModeVerbose@baud:
  5723                           	opt stack 0
  5724                           
  5725                           ; 4 bytes @ 0x38
  5726  0002C0                     	ds	4
  5727  0002C4                     doModeVerbose@value:
  5728                           	opt stack 0
  5729                           
  5730                           ; 1 bytes @ 0x3C
  5731  0002C4                     	ds	1
  5732  0002C5                     doModeVerbose@p_1295:
  5733                           	opt stack 0
  5734                           
  5735                           ; 2 bytes @ 0x3D
  5736  0002C5                     	ds	2
  5737  0002C7                     doModeVerbose@p_1348:
  5738                           	opt stack 0
  5739                           
  5740                           ; 2 bytes @ 0x3F
  5741  0002C7                     	ds	2
  5742  0002C9                     doModeVerbose@ifmode:
  5743                           	opt stack 0
  5744                           
  5745                           ; 1 bytes @ 0x41
  5746  0002C9                     	ds	1
  5747  0002CA                     doModeVerbose@p:
  5748                           	opt stack 0
  5749                           
  5750                           ; 2 bytes @ 0x42
  5751  0002CA                     	ds	2
  5752  0002CC                     doModeVerbose@id_1422:
  5753                           	opt stack 0
  5754                           
  5755                           ; 4 bytes @ 0x44
  5756  0002CC                     	ds	4
  5757  0002D0                     doModeVerbose@p_1410:
  5758                           	opt stack 0
  5759                           
  5760                           ; 2 bytes @ 0x48
  5761  0002D0                     	ds	2
  5762  0002D2                     doModeVerbose@p_1387:
  5763                           	opt stack 0
  5764                           
  5765                           ; 2 bytes @ 0x4A
  5766  0002D2                     	ds	2
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodh	equ	0xFF4
  5772                           prodl	equ	0xFF3
  5773                           intcon	equ	0xFF2
  5774                           indf0	equ	0xFEF
  5775                           postinc0	equ	0xFEE
  5776                           fsr0h	equ	0xFEA
  5777                           fsr0l	equ	0xFE9
  5778                           wreg	equ	0xFE8
  5779                           indf1	equ	0xFE7
  5780                           postinc1	equ	0xFE6
  5781                           postdec1	equ	0xFE5
  5782                           fsr1h	equ	0xFE2
  5783                           fsr1l	equ	0xFE1
  5784                           indf2	equ	0xFDF
  5785                           postinc2	equ	0xFDE
  5786                           postdec2	equ	0xFDD
  5787                           plusw2	equ	0xFDB
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792                           	psect	cstackBANK1
  5793  0001B3                     __pcstackBANK1:
  5794                           	opt stack 0
  5795  0001B3                     _findNodes$1703:
  5796                           	opt stack 0
  5797                           
  5798                           ; 2 bytes @ 0x0
  5799  0001B3                     	ds	2
  5800  0001B5                     findNodes@nFound:
  5801                           	opt stack 0
  5802                           
  5803                           ; 1 bytes @ 0x2
  5804  0001B5                     	ds	1
  5805  0001B6                     findNodes@value:
  5806                           	opt stack 0
  5807                           
  5808                           ; 1 bytes @ 0x3
  5809  0001B6                     	ds	1
  5810  0001B7                     findNodes@bDot:
  5811                           	opt stack 0
  5812                           
  5813                           ; 1 bytes @ 0x4
  5814  0001B7                     	ds	1
  5815  0001B8                     findNodes@i:
  5816                           	opt stack 0
  5817                           
  5818                           ; 1 bytes @ 0x5
  5819  0001B8                     	ds	1
  5820  0001B9                     ??_doModeVerbose:
  5821                           
  5822                           ; 0 bytes @ 0x6
  5823  0001B9                     	ds	20
  5824  0001CD                     
  5825                           ; 2 bytes @ 0x1A
  5826  0001CD                     	ds	2
  5827  0001CF                     
  5828                           ; 3 bytes @ 0x1C
  5829  0001CF                     	ds	3
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           prodh	equ	0xFF4
  5835                           prodl	equ	0xFF3
  5836                           intcon	equ	0xFF2
  5837                           indf0	equ	0xFEF
  5838                           postinc0	equ	0xFEE
  5839                           fsr0h	equ	0xFEA
  5840                           fsr0l	equ	0xFE9
  5841                           wreg	equ	0xFE8
  5842                           indf1	equ	0xFE7
  5843                           postinc1	equ	0xFE6
  5844                           postdec1	equ	0xFE5
  5845                           fsr1h	equ	0xFE2
  5846                           fsr1l	equ	0xFE1
  5847                           indf2	equ	0xFDF
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           plusw2	equ	0xFDB
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855                           	psect	cstackBANK0
  5856  000060                     __pcstackBANK0:
  5857                           	opt stack 0
  5858  000060                     ??_fifo_getFree:
  5859  000060                     ??_setFilter:
  5860  000060                     ??__CANIDToRegs:
  5861  000060                     ??_hexStringToBytes:
  5862  000060                     ?_crc8:
  5863                           	opt stack 0
  5864  000060                     ?_utoa:
  5865                           	opt stack 0
  5866  000060                     ?_strnicmp:
  5867                           	opt stack 0
  5868  000060                     ?_strspn:
  5869                           	opt stack 0
  5870  000060                     ?_strcspn:
  5871                           	opt stack 0
  5872  000060                     ___lldiv@counter:
  5873                           	opt stack 0
  5874  000060                     fifo_read@p:
  5875                           	opt stack 0
  5876  000060                     crc8@crc:
  5877                           	opt stack 0
  5878  000060                     utoa@buf:
  5879                           	opt stack 0
  5880  000060                     memcpy@d:
  5881                           	opt stack 0
  5882  000060                     strnicmp@s1:
  5883                           	opt stack 0
  5884  000060                     ___wmul@product:
  5885                           	opt stack 0
  5886  000060                     strcspn@s1:
  5887                           	opt stack 0
  5888  000060                     strspn@s1:
  5889                           	opt stack 0
  5890                           
  5891                           ; 2 bytes @ 0x0
  5892  000060                     	ds	1
  5893  000061                     ___lldiv@quotient:
  5894                           	opt stack 0
  5895                           
  5896                           ; 4 bytes @ 0x1
  5897  000061                     	ds	1
  5898  000062                     ?_atoi:
  5899                           	opt stack 0
  5900  000062                     __CANIDToRegs@Value:
  5901                           	opt stack 0
  5902  000062                     crc8@m:
  5903                           	opt stack 0
  5904  000062                     fifo_read@i:
  5905                           	opt stack 0
  5906  000062                     atoi@s:
  5907                           	opt stack 0
  5908  000062                     utoa@val:
  5909                           	opt stack 0
  5910  000062                     memcpy@s:
  5911                           	opt stack 0
  5912  000062                     strnicmp@s2:
  5913                           	opt stack 0
  5914  000062                     strcspn@s2:
  5915                           	opt stack 0
  5916  000062                     strspn@s2:
  5917                           	opt stack 0
  5918                           
  5919                           ; 2 bytes @ 0x2
  5920  000062                     	ds	1
  5921  000063                     ?_sendEscapedUartData:
  5922                           	opt stack 0
  5923  000063                     ?_calcCRC:
  5924                           	opt stack 0
  5925  000063                     ?_ECANSendMessage:
  5926                           	opt stack 0
  5927  000063                     sendEscapedUartData@pcrc:
  5928                           	opt stack 0
  5929  000063                     calcCRC@p:
  5930                           	opt stack 0
  5931  000063                     hexStringToBytes@len:
  5932                           	opt stack 0
  5933  000063                     ECANSendMessage@id:
  5934                           	opt stack 0
  5935                           
  5936                           ; 4 bytes @ 0x3
  5937  000063                     	ds	1
  5938  000064                     ??_atoi:
  5939  000064                     ?_strtok:
  5940                           	opt stack 0
  5941  000064                     fifo_read@f:
  5942                           	opt stack 0
  5943  000064                     utoa@base:
  5944                           	opt stack 0
  5945  000064                     strnicmp@len:
  5946                           	opt stack 0
  5947  000064                     strtok@s1:
  5948                           	opt stack 0
  5949                           
  5950                           ; 2 bytes @ 0x4
  5951  000064                     	ds	1
  5952  000065                     ?_getCANFrame:
  5953                           	opt stack 0
  5954  000065                     ?___llmod:
  5955                           	opt stack 0
  5956  000065                     sendEscapedUartData@c:
  5957                           	opt stack 0
  5958  000065                     calcCRC@len:
  5959                           	opt stack 0
  5960  000065                     getCANFrame@pdlc:
  5961                           	opt stack 0
  5962  000065                     hexStringToBytes@p:
  5963                           	opt stack 0
  5964  000065                     ___llmod@dividend:
  5965                           	opt stack 0
  5966                           
  5967                           ; 4 bytes @ 0x5
  5968  000065                     	ds	1
  5969  000066                     ?_sendVSCPDriverCommandReply:
  5970                           	opt stack 0
  5971  000066                     ?_stristr:
  5972                           	opt stack 0
  5973  000066                     sendVSCPDriverErrorFrame@errorcode:
  5974                           	opt stack 0
  5975  000066                     sendVSCPDriverAck@crc:
  5976                           	opt stack 0
  5977  000066                     sendVSCPDriverNack@crc:
  5978                           	opt stack 0
  5979  000066                     sendVSCPDriverCommandReply@cmdCode:
  5980                           	opt stack 0
  5981  000066                     sendVSCPModeCapabilities@crc:
  5982                           	opt stack 0
  5983  000066                     calcCRC@j:
  5984                           	opt stack 0
  5985  000066                     setFilter@filter:
  5986                           	opt stack 0
  5987  000066                     atoi@sign:
  5988                           	opt stack 0
  5989  000066                     utoa@v:
  5990                           	opt stack 0
  5991  000066                     stristr@s1:
  5992                           	opt stack 0
  5993  000066                     strtok@s2:
  5994                           	opt stack 0
  5995                           
  5996                           ; 2 bytes @ 0x6
  5997  000066                     	ds	1
  5998  000067                     sendVSCPDriverErrorFrame@crc:
  5999                           	opt stack 0
  6000  000067                     sendVSCPDriverCommandReply@cmdReplyCode:
  6001                           	opt stack 0
  6002  000067                     calcCRC@crc:
  6003                           	opt stack 0
  6004  000067                     setFilter@sidh:
  6005                           	opt stack 0
  6006  000067                     getCANFrame@pdata:
  6007                           	opt stack 0
  6008  000067                     ECANSendMessage@data:
  6009                           	opt stack 0
  6010  000067                     hexStringToBytes@i:
  6011                           	opt stack 0
  6012  000067                     atoi@a:
  6013                           	opt stack 0
  6014                           
  6015                           ; 2 bytes @ 0x7
  6016  000067                     	ds	1
  6017  000068                     sendVSCPDriverCommandReply@crc:
  6018                           	opt stack 0
  6019  000068                     setFilter@sidl:
  6020                           	opt stack 0
  6021  000068                     utoa@c:
  6022                           	opt stack 0
  6023  000068                     stristr@s2:
  6024                           	opt stack 0
  6025                           
  6026                           ; 2 bytes @ 0x8
  6027  000068                     	ds	1
  6028  000069                     ??_receiveSendMultiEventCANAL:
  6029  000069                     ??_receiveSendEventCANAL:
  6030  000069                     ?_getVSCPFrame:
  6031                           	opt stack 0
  6032  000069                     ?_itoa:
  6033                           	opt stack 0
  6034  000069                     setFilter@eidh:
  6035                           	opt stack 0
  6036  000069                     ECANSendMessage@dataLen:
  6037                           	opt stack 0
  6038  000069                     getVSCPFrame@pvscpclass:
  6039                           	opt stack 0
  6040  000069                     itoa@buf:
  6041                           	opt stack 0
  6042  000069                     ___llmod@divisor:
  6043                           	opt stack 0
  6044                           
  6045                           ; 4 bytes @ 0x9
  6046  000069                     	ds	1
  6047  00006A                     setFilter@eidl:
  6048                           	opt stack 0
  6049  00006A                     ECANSendMessage@msgFlags:
  6050                           	opt stack 0
  6051                           
  6052                           ; 1 bytes @ 0xA
  6053  00006A                     	ds	1
  6054  00006B                     ??_init_app_ram:
  6055  00006B                     ??_ECANSendMessage:
  6056  00006B                     getVSCPFrame@pvscptype:
  6057                           	opt stack 0
  6058  00006B                     itoa@val:
  6059                           	opt stack 0
  6060                           
  6061                           ; 2 bytes @ 0xB
  6062  00006B                     	ds	1
  6063  00006C                     ECANSendMessage@pb:
  6064                           	opt stack 0
  6065                           
  6066                           ; 18 bytes @ 0xC
  6067  00006C                     	ds	1
  6068  00006D                     ?_sprintf:
  6069                           	opt stack 0
  6070  00006D                     ?_ultoa:
  6071                           	opt stack 0
  6072  00006D                     getVSCPFrame@pNodeId:
  6073                           	opt stack 0
  6074  00006D                     sprintf@sp:
  6075                           	opt stack 0
  6076  00006D                     itoa@base:
  6077                           	opt stack 0
  6078  00006D                     ultoa@buf:
  6079                           	opt stack 0
  6080  00006D                     receiveSendEventCANAL@data:
  6081                           	opt stack 0
  6082  00006D                     receiveSendMultiEventCANAL@data:
  6083                           	opt stack 0
  6084                           
  6085                           ; 8 bytes @ 0xD
  6086  00006D                     	ds	2
  6087  00006F                     getVSCPFrame@pPriority:
  6088                           	opt stack 0
  6089  00006F                     sprintf@f:
  6090                           	opt stack 0
  6091  00006F                     ultoa@val:
  6092                           	opt stack 0
  6093  00006F                     printFirmwareVersion@wrkbuf:
  6094                           	opt stack 0
  6095                           
  6096                           ; 20 bytes @ 0xF
  6097  00006F                     	ds	2
  6098  000071                     getVSCPFrame@pSize:
  6099                           	opt stack 0
  6100                           
  6101                           ; 2 bytes @ 0x11
  6102  000071                     	ds	2
  6103  000073                     getVSCPFrame@pData:
  6104                           	opt stack 0
  6105  000073                     ultoa@base:
  6106                           	opt stack 0
  6107                           
  6108                           ; 2 bytes @ 0x13
  6109  000073                     	ds	2
  6110  000075                     ??_sprintf:
  6111  000075                     ??_getVSCPFrame:
  6112  000075                     receiveSendEventCANAL@i:
  6113                           	opt stack 0
  6114  000075                     receiveSendMultiEventCANAL@msgcount:
  6115                           	opt stack 0
  6116  000075                     ultoa@v:
  6117                           	opt stack 0
  6118                           
  6119                           ; 4 bytes @ 0x15
  6120  000075                     	ds	1
  6121  000076                     receiveSendEventCANAL@timestamp:
  6122                           	opt stack 0
  6123  000076                     receiveSendMultiEventCANAL@timestamp:
  6124                           	opt stack 0
  6125                           
  6126                           ; 4 bytes @ 0x16
  6127  000076                     	ds	2
  6128  000078                     sprintf@idx:
  6129                           	opt stack 0
  6130                           
  6131                           ; 1 bytes @ 0x18
  6132  000078                     	ds	1
  6133  000079                     ultoa@c:
  6134                           	opt stack 0
  6135  000079                     _sprintf$2256:
  6136                           	opt stack 0
  6137  000079                     getVSCPFrame@id:
  6138                           	opt stack 0
  6139                           
  6140                           ; 4 bytes @ 0x19
  6141  000079                     	ds	1
  6142  00007A                     ??_receiveSendEventSLCAN:
  6143  00007A                     receiveSendMultiEventCANAL@i:
  6144                           	opt stack 0
  6145  00007A                     receiveSendEventCANAL@id:
  6146                           	opt stack 0
  6147                           
  6148                           ; 4 bytes @ 0x1A
  6149  00007A                     	ds	1
  6150  00007B                     _sprintf$2257:
  6151                           	opt stack 0
  6152  00007B                     receiveSendMultiEventCANAL@id:
  6153                           	opt stack 0
  6154                           
  6155                           ; 4 bytes @ 0x1B
  6156  00007B                     	ds	2
  6157  00007D                     _sprintf$2263:
  6158                           	opt stack 0
  6159  00007D                     receiveSendEventSLCAN@id:
  6160                           	opt stack 0
  6161                           
  6162                           ; 4 bytes @ 0x1D
  6163  00007D                     	ds	1
  6164  00007E                     receiveSendEventCANAL@dlc:
  6165                           	opt stack 0
  6166  00007E                     ECANSendMessage@mode:
  6167                           	opt stack 0
  6168                           
  6169                           ; 1 bytes @ 0x1E
  6170  00007E                     	ds	1
  6171  00007F                     receiveSendEventCANAL@crc:
  6172                           	opt stack 0
  6173  00007F                     receiveSendMultiEventCANAL@dlc:
  6174                           	opt stack 0
  6175  00007F                     ECANSendMessage@buffers:
  6176                           	opt stack 0
  6177  00007F                     sprintf@ap:
  6178                           	opt stack 0
  6179                           
  6180                           ; 1 bytes @ 0x1F
  6181  00007F                     	ds	1
  6182  000080                     receiveSendMultiEventCANAL@crc:
  6183                           	opt stack 0
  6184  000080                     ECANSendMessage@j:
  6185                           	opt stack 0
  6186  000080                     sprintf@prec:
  6187                           	opt stack 0
  6188                           
  6189                           ; 2 bytes @ 0x20
  6190  000080                     	ds	1
  6191  000081                     receiveSendMultiEventCANAL@pos:
  6192                           	opt stack 0
  6193  000081                     receiveSendEventSLCAN@dlc:
  6194                           	opt stack 0
  6195  000081                     ECANSendMessage@tempBSEL0:
  6196                           	opt stack 0
  6197                           
  6198                           ; 1 bytes @ 0x21
  6199  000081                     	ds	1
  6200  000082                     receiveSendEventSLCAN@i:
  6201                           	opt stack 0
  6202  000082                     ECANSendMessage@tempPtr:
  6203                           	opt stack 0
  6204  000082                     sprintf@width:
  6205                           	opt stack 0
  6206                           
  6207                           ; 2 bytes @ 0x22
  6208  000082                     	ds	2
  6209  000084                     init_app_ram@i:
  6210                           	opt stack 0
  6211  000084                     ECANSendMessage@temp:
  6212                           	opt stack 0
  6213  000084                     sprintf@_val:
  6214                           	opt stack 0
  6215                           
  6216                           ; 4 bytes @ 0x24
  6217  000084                     	ds	1
  6218  000085                     ECANSendMessage@i:
  6219                           	opt stack 0
  6220                           
  6221                           ; 1 bytes @ 0x25
  6222  000085                     	ds	1
  6223  000086                     ECANSendMessage@ptr:
  6224                           	opt stack 0
  6225                           
  6226                           ; 2 bytes @ 0x26
  6227  000086                     	ds	2
  6228  000088                     ?_sendCANFrame:
  6229                           	opt stack 0
  6230  000088                     sprintf@c:
  6231                           	opt stack 0
  6232  000088                     sendCANFrame@id:
  6233                           	opt stack 0
  6234                           
  6235                           ; 4 bytes @ 0x28
  6236  000088                     	ds	1
  6237  000089                     sprintf@flag:
  6238                           	opt stack 0
  6239                           
  6240                           ; 2 bytes @ 0x29
  6241  000089                     	ds	2
  6242  00008B                     ??_receivePrintEventVerbose:
  6243  00008B                     _printStatistics$1598:
  6244                           	opt stack 0
  6245  00008B                     _printErrors$1623:
  6246                           	opt stack 0
  6247                           
  6248                           ; 2 bytes @ 0x2B
  6249  00008B                     	ds	1
  6250  00008C                     sendCANFrame@dlc:
  6251                           	opt stack 0
  6252                           
  6253                           ; 1 bytes @ 0x2C
  6254  00008C                     	ds	1
  6255  00008D                     _printStatistics$1604:
  6256                           	opt stack 0
  6257  00008D                     _printErrors$1629:
  6258                           	opt stack 0
  6259  00008D                     sendCANFrame@pdata:
  6260                           	opt stack 0
  6261                           
  6262                           ; 2 bytes @ 0x2D
  6263  00008D                     	ds	2
  6264  00008F                     ??_doModeSLCAN:
  6265  00008F                     ??_receiveVSCPModeCanalMsg:
  6266  00008F                     ?_sendVSCPFrame:
  6267                           	opt stack 0
  6268  00008F                     _printStatistics$1610:
  6269                           	opt stack 0
  6270  00008F                     _printErrors$1635:
  6271                           	opt stack 0
  6272  00008F                     sendVSCPFrame@vscpclass:
  6273                           	opt stack 0
  6274                           
  6275                           ; 2 bytes @ 0x2F
  6276  00008F                     	ds	1
  6277  000090                     _receivePrintEventVerbose$3682:
  6278                           	opt stack 0
  6279                           
  6280                           ; 4 bytes @ 0x30
  6281  000090                     	ds	1
  6282  000091                     sendVSCPFrame@vscptype:
  6283                           	opt stack 0
  6284  000091                     _printStatistics$1616:
  6285                           	opt stack 0
  6286  000091                     _printErrors$1641:
  6287                           	opt stack 0
  6288                           
  6289                           ; 2 bytes @ 0x31
  6290  000091                     	ds	1
  6291  000092                     sendVSCPFrame@nodeid:
  6292                           	opt stack 0
  6293                           
  6294                           ; 1 bytes @ 0x32
  6295  000092                     	ds	1
  6296  000093                     sendVSCPFrame@priority:
  6297                           	opt stack 0
  6298  000093                     _printErrors$1648:
  6299                           	opt stack 0
  6300                           
  6301                           ; 2 bytes @ 0x33
  6302  000093                     	ds	1
  6303  000094                     sendVSCPFrame@size:
  6304                           	opt stack 0
  6305  000094                     _receivePrintEventVerbose$1498:
  6306                           	opt stack 0
  6307                           
  6308                           ; 2 bytes @ 0x34
  6309  000094                     	ds	1
  6310  000095                     _printErrors$1657:
  6311                           	opt stack 0
  6312  000095                     sendVSCPFrame@pData:
  6313                           	opt stack 0
  6314                           
  6315                           ; 2 bytes @ 0x35
  6316  000095                     	ds	1
  6317  000096                     _receivePrintEventVerbose$1503:
  6318                           	opt stack 0
  6319  000096                     doModeSLCAN@id:
  6320                           	opt stack 0
  6321                           
  6322                           ; 4 bytes @ 0x36
  6323  000096                     	ds	1
  6324  000097                     ??_sendVSCPFrame:
  6325                           
  6326                           ; 0 bytes @ 0x37
  6327  000097                     	ds	1
  6328  000098                     _receivePrintEventVerbose$1508:
  6329                           	opt stack 0
  6330                           
  6331                           ; 2 bytes @ 0x38
  6332  000098                     	ds	2
  6333  00009A                     doModeSLCAN@dlc:
  6334                           	opt stack 0
  6335  00009A                     _receivePrintEventVerbose$1513:
  6336                           	opt stack 0
  6337                           
  6338                           ; 2 bytes @ 0x3A
  6339  00009A                     	ds	1
  6340  00009B                     doModeSLCAN@c:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x3B
  6344  00009B                     	ds	1
  6345  00009C                     doModeSLCAN@rv:
  6346                           	opt stack 0
  6347  00009C                     _receivePrintEventVerbose$1518:
  6348                           	opt stack 0
  6349                           
  6350                           ; 2 bytes @ 0x3C
  6351  00009C                     	ds	2
  6352  00009E                     _receivePrintEventVerbose$1523:
  6353                           	opt stack 0
  6354                           
  6355                           ; 2 bytes @ 0x3E
  6356  00009E                     	ds	2
  6357  0000A0                     _receivePrintEventVerbose$1528:
  6358                           	opt stack 0
  6359                           
  6360                           ; 2 bytes @ 0x40
  6361  0000A0                     	ds	2
  6362  0000A2                     receivePrintEventVerbose@i:
  6363                           	opt stack 0
  6364                           
  6365                           ; 1 bytes @ 0x42
  6366  0000A2                     	ds	1
  6367  0000A3                     receiveVSCPModeCanalMsg@data:
  6368                           	opt stack 0
  6369                           
  6370                           ; 8 bytes @ 0x43
  6371  0000A3                     	ds	8
  6372  0000AB                     receiveVSCPModeCanalMsg@id:
  6373                           	opt stack 0
  6374  0000AB                     sendVSCPFrame@id:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x4B
  6378  0000AB                     	ds	4
  6379  0000AF                     ?_readRegisterExtended:
  6380                           	opt stack 0
  6381  0000AF                     ?_writeRegisterExtended:
  6382                           	opt stack 0
  6383  0000AF                     ?_readRegister:
  6384                           	opt stack 0
  6385  0000AF                     receiveVSCPModeCanalMsg@dlc:
  6386                           	opt stack 0
  6387  0000AF                     readRegister@reg:
  6388                           	opt stack 0
  6389  0000AF                     readRegisterExtended@page:
  6390                           	opt stack 0
  6391  0000AF                     writeRegisterExtended@page:
  6392                           	opt stack 0
  6393                           
  6394                           ; 2 bytes @ 0x4F
  6395  0000AF                     	ds	1
  6396  0000B0                     ??_doModeVscp:
  6397  0000B0                     readRegister@timeout:
  6398                           	opt stack 0
  6399                           
  6400                           ; 2 bytes @ 0x50
  6401  0000B0                     	ds	1
  6402  0000B1                     readRegisterExtended@reg:
  6403                           	opt stack 0
  6404  0000B1                     writeRegisterExtended@reg:
  6405                           	opt stack 0
  6406                           
  6407                           ; 1 bytes @ 0x51
  6408  0000B1                     	ds	1
  6409  0000B2                     readRegister@value:
  6410                           	opt stack 0
  6411  0000B2                     readRegisterExtended@timeout:
  6412                           	opt stack 0
  6413  0000B2                     writeRegisterExtended@timeout:
  6414                           	opt stack 0
  6415                           
  6416                           ; 2 bytes @ 0x52
  6417  0000B2                     	ds	1
  6418  0000B3                     doModeVscp@c:
  6419                           	opt stack 0
  6420                           
  6421                           ; 1 bytes @ 0x53
  6422  0000B3                     	ds	1
  6423  0000B4                     ??_readRegister:
  6424  0000B4                     readRegisterExtended@value:
  6425                           	opt stack 0
  6426  0000B4                     writeRegisterExtended@value:
  6427                           	opt stack 0
  6428                           
  6429                           ; 2 bytes @ 0x54
  6430  0000B4                     	ds	2
  6431  0000B6                     ??_readRegisterExtended:
  6432  0000B6                     ??_writeRegisterExtended:
  6433                           
  6434                           ; 0 bytes @ 0x56
  6435  0000B6                     	ds	2
  6436  0000B8                     readRegister@nodeid:
  6437                           	opt stack 0
  6438                           
  6439                           ; 1 bytes @ 0x58
  6440  0000B8                     	ds	1
  6441  0000B9                     printGUID@nodeid:
  6442                           	opt stack 0
  6443  0000B9                     printMDF@nodeid:
  6444                           	opt stack 0
  6445  0000B9                     printNodeFirmwareVersion@nodeid:
  6446                           	opt stack 0
  6447                           
  6448                           ; 1 bytes @ 0x59
  6449  0000B9                     	ds	1
  6450  0000BA                     readRegisterExtended@nodeid:
  6451                           	opt stack 0
  6452  0000BA                     writeRegisterExtended@nodeid:
  6453                           	opt stack 0
  6454  0000BA                     printMDF@value:
  6455                           	opt stack 0
  6456  0000BA                     printGUID@buf:
  6457                           	opt stack 0
  6458  0000BA                     printNodeFirmwareVersion@buf:
  6459                           	opt stack 0
  6460                           
  6461                           ; 3 bytes @ 0x5A
  6462  0000BA                     	ds	1
  6463  0000BB                     printMDF@p:
  6464                           	opt stack 0
  6465                           
  6466                           ; 2 bytes @ 0x5B
  6467  0000BB                     	ds	2
  6468  0000BD                     printGUID@value:
  6469                           	opt stack 0
  6470  0000BD                     printMDF@i:
  6471                           	opt stack 0
  6472  0000BD                     printNodeFirmwareVersion@value:
  6473                           	opt stack 0
  6474                           
  6475                           ; 1 bytes @ 0x5D
  6476  0000BD                     	ds	1
  6477  0000BE                     printGUID@i:
  6478                           	opt stack 0
  6479  0000BE                     printNodeFirmwareVersion@i:
  6480                           	opt stack 0
  6481                           
  6482                           ; 1 bytes @ 0x5E
  6483  0000BE                     	ds	1
  6484  0000BF                     ??_main:
  6485                           
  6486                           ; 0 bytes @ 0x5F
  6487  0000BF                     	ds	1
  6488  0000C0                     main@c:
  6489                           	opt stack 0
  6490                           
  6491                           ; 1 bytes @ 0x60
  6492  0000C0                     	ds	1
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           intcon	equ	0xFF2
  6500                           indf0	equ	0xFEF
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           indf1	equ	0xFE7
  6506                           postinc1	equ	0xFE6
  6507                           postdec1	equ	0xFE5
  6508                           fsr1h	equ	0xFE2
  6509                           fsr1l	equ	0xFE1
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           postdec2	equ	0xFDD
  6513                           plusw2	equ	0xFDB
  6514                           fsr2h	equ	0xFDA
  6515                           fsr2l	equ	0xFD9
  6516                           status	equ	0xFD8
  6517                           
  6518                           	psect	cstackCOMRAM
  6519  000001                     __pcstackCOMRAM:
  6520                           	opt stack 0
  6521  000001                     ?__RegsToCANID:
  6522                           	opt stack 0
  6523  000001                     ?i1_WriteTimer0:
  6524                           	opt stack 0
  6525  000001                     ?_fifo_write:
  6526                           	opt stack 0
  6527  000001                     ?__ECANPointBuffer:
  6528                           	opt stack 0
  6529  000001                     ?i1_fifo_getFree:
  6530                           	opt stack 0
  6531  000001                     ReadUSART@data:
  6532                           	opt stack 0
  6533  000001                     __RegsToCANID@ptr:
  6534                           	opt stack 0
  6535  000001                     fifo_write@buf:
  6536                           	opt stack 0
  6537  000001                     i1WriteTimer0@timer0:
  6538                           	opt stack 0
  6539                           
  6540                           ; 2 bytes @ 0x0
  6541  000001                     	ds	2
  6542  000003                     ??i1_fifo_getFree:
  6543  000003                     __RegsToCANID@val:
  6544                           	opt stack 0
  6545  000003                     i1WriteTimer0@timer:
  6546                           	opt stack 0
  6547  000003                     fifo_write@nbytes:
  6548                           	opt stack 0
  6549                           
  6550                           ; 4 bytes @ 0x2
  6551  000003                     	ds	1
  6552  000004                     __RegsToCANID@type:
  6553                           	opt stack 0
  6554  000004                     __ECANPointBuffer@b:
  6555                           	opt stack 0
  6556                           
  6557                           ; 1 bytes @ 0x3
  6558  000004                     	ds	1
  6559  000005                     ??__RegsToCANID:
  6560  000005                     __ECANPointBuffer@pt:
  6561                           	opt stack 0
  6562                           
  6563                           ; 2 bytes @ 0x4
  6564  000005                     	ds	2
  6565  000007                     ??_fifo_write:
  6566  000007                     __RegsToCANID@Value:
  6567                           	opt stack 0
  6568                           
  6569                           ; 1 bytes @ 0x6
  6570  000007                     	ds	1
  6571  000008                     ?_ECANReceiveMessage:
  6572                           	opt stack 0
  6573  000008                     ECANReceiveMessage@data:
  6574                           	opt stack 0
  6575                           
  6576                           ; 2 bytes @ 0x7
  6577  000008                     	ds	2
  6578  00000A                     ECANReceiveMessage@dataLen:
  6579                           	opt stack 0
  6580                           
  6581                           ; 1 bytes @ 0x9
  6582  00000A                     	ds	1
  6583  00000B                     ECANReceiveMessage@msgFlags:
  6584                           	opt stack 0
  6585  00000B                     i1fifo_getFree@f:
  6586                           	opt stack 0
  6587  00000B                     fifo_write@p:
  6588                           	opt stack 0
  6589                           
  6590                           ; 2 bytes @ 0xA
  6591  00000B                     	ds	1
  6592  00000C                     ECANReceiveMessage@savedPtr:
  6593                           	opt stack 0
  6594                           
  6595                           ; 2 bytes @ 0xB
  6596  00000C                     	ds	1
  6597  00000D                     fifo_write@i:
  6598                           	opt stack 0
  6599                           
  6600                           ; 4 bytes @ 0xC
  6601  00000D                     	ds	1
  6602  00000E                     ECANReceiveMessage@id:
  6603                           	opt stack 0
  6604                           
  6605                           ; 1 bytes @ 0xD
  6606  00000E                     	ds	1
  6607  00000F                     ECANReceiveMessage@i:
  6608                           	opt stack 0
  6609                           
  6610                           ; 1 bytes @ 0xE
  6611  00000F                     	ds	1
  6612  000010                     ECANReceiveMessage@mode:
  6613                           	opt stack 0
  6614                           
  6615                           ; 1 bytes @ 0xF
  6616  000010                     	ds	1
  6617  000011                     ECANReceiveMessage@temp:
  6618                           	opt stack 0
  6619  000011                     fifo_write@f:
  6620                           	opt stack 0
  6621                           
  6622                           ; 1 bytes @ 0x10
  6623  000011                     	ds	1
  6624  000012                     ECANReceiveMessage@ptr:
  6625                           	opt stack 0
  6626                           
  6627                           ; 2 bytes @ 0x11
  6628  000012                     	ds	2
  6629  000014                     ??_Interrupt:
  6630                           
  6631                           ; 0 bytes @ 0x13
  6632  000014                     	ds	9
  6633  00001D                     Interrupt@c:
  6634                           	opt stack 0
  6635                           
  6636                           ; 1 bytes @ 0x1C
  6637  00001D                     	ds	1
  6638  00001E                     Interrupt@fail:
  6639                           	opt stack 0
  6640                           
  6641                           ; 1 bytes @ 0x1D
  6642  00001E                     	ds	1
  6643  00001F                     ?_WriteTimer0:
  6644                           	opt stack 0
  6645  00001F                     ?_fifo_init:
  6646                           	opt stack 0
  6647  00001F                     ?_OpenUSART:
  6648                           	opt stack 0
  6649  00001F                     ?_WriteTimer3:
  6650                           	opt stack 0
  6651  00001F                     ?_Write_b_eep:
  6652                           	opt stack 0
  6653  00001F                     ??_isdigit:
  6654  00001F                     ?_Read_b_eep:
  6655                           	opt stack 0
  6656  00001F                     ?_fifo_getFree:
  6657                           	opt stack 0
  6658  00001F                     ?_fifo_read:
  6659                           	opt stack 0
  6660  00001F                     ?_memset:
  6661                           	opt stack 0
  6662  00001F                     ?_strcpy:
  6663                           	opt stack 0
  6664  00001F                     ?_strchr:
  6665                           	opt stack 0
  6666  00001F                     ?_strlen:
  6667                           	opt stack 0
  6668  00001F                     ?_memcpy:
  6669                           	opt stack 0
  6670  00001F                     ?_ReadTimer3:
  6671                           	opt stack 0
  6672  00001F                     ?_strcat:
  6673                           	opt stack 0
  6674  00001F                     ?___lwdiv:
  6675                           	opt stack 0
  6676  00001F                     ?___lwmod:
  6677                           	opt stack 0
  6678  00001F                     ?___lldiv:
  6679                           	opt stack 0
  6680  00001F                     ECANSetOperationMode@mode:
  6681                           	opt stack 0
  6682  00001F                     nibbleFromChar@c:
  6683                           	opt stack 0
  6684  00001F                     OpenTimer0@config:
  6685                           	opt stack 0
  6686  00001F                     OpenTimer3@config:
  6687                           	opt stack 0
  6688  00001F                     WriteUSART@data:
  6689                           	opt stack 0
  6690  00001F                     toupper@c:
  6691                           	opt stack 0
  6692  00001F                     fifo_init@buf:
  6693                           	opt stack 0
  6694  00001F                     fifo_read@buf:
  6695                           	opt stack 0
  6696  00001F                     _init_crc8$2194:
  6697                           	opt stack 0
  6698  00001F                     Read_b_eep@badd:
  6699                           	opt stack 0
  6700  00001F                     Write_b_eep@badd:
  6701                           	opt stack 0
  6702  00001F                     WriteTimer0@timer0:
  6703                           	opt stack 0
  6704  00001F                     WriteTimer3@timer3:
  6705                           	opt stack 0
  6706  00001F                     OpenUSART@spbrg:
  6707                           	opt stack 0
  6708  00001F                     ___lwdiv@dividend:
  6709                           	opt stack 0
  6710  00001F                     ___lwmod@dividend:
  6711                           	opt stack 0
  6712  00001F                     memcpy@d1:
  6713                           	opt stack 0
  6714  00001F                     memset@p1:
  6715                           	opt stack 0
  6716  00001F                     strcat@to:
  6717                           	opt stack 0
  6718  00001F                     strchr@ptr:
  6719                           	opt stack 0
  6720  00001F                     strcpy@to:
  6721                           	opt stack 0
  6722  00001F                     strlen@s:
  6723                           	opt stack 0
  6724  00001F                     ___lldiv@dividend:
  6725                           	opt stack 0
  6726                           
  6727                           ; 4 bytes @ 0x1E
  6728  00001F                     	ds	1
  6729  000020                     ?_putsUSART:
  6730                           	opt stack 0
  6731  000020                     ??_printBinary:
  6732  000020                     ?_strichr:
  6733                           	opt stack 0
  6734  000020                     _isdigit$3277:
  6735                           	opt stack 0
  6736  000020                     putsUSART@data:
  6737                           	opt stack 0
  6738  000020                     strichr@ptr:
  6739                           	opt stack 0
  6740                           
  6741                           ; 2 bytes @ 0x1F
  6742  000020                     	ds	1
  6743  000021                     ?__CANIDToRegs:
  6744                           	opt stack 0
  6745  000021                     fifo_getFree@f:
  6746                           	opt stack 0
  6747  000021                     Write_b_eep@bdat:
  6748                           	opt stack 0
  6749  000021                     OpenUSART@config:
  6750                           	opt stack 0
  6751  000021                     isdigit@c:
  6752                           	opt stack 0
  6753  000021                     __CANIDToRegs@ptr:
  6754                           	opt stack 0
  6755  000021                     fifo_init@size:
  6756                           	opt stack 0
  6757  000021                     fifo_read@nbytes:
  6758                           	opt stack 0
  6759  000021                     init_crc8@j:
  6760                           	opt stack 0
  6761  000021                     WriteTimer0@timer:
  6762                           	opt stack 0
  6763  000021                     ReadTimer3@timer:
  6764                           	opt stack 0
  6765  000021                     WriteTimer3@timer:
  6766                           	opt stack 0
  6767  000021                     ___lwdiv@divisor:
  6768                           	opt stack 0
  6769  000021                     ___lwmod@divisor:
  6770                           	opt stack 0
  6771  000021                     memcpy@s1:
  6772                           	opt stack 0
  6773  000021                     memset@c:
  6774                           	opt stack 0
  6775  000021                     strcat@from:
  6776                           	opt stack 0
  6777  000021                     strchr@chr:
  6778                           	opt stack 0
  6779  000021                     strcpy@from:
  6780                           	opt stack 0
  6781  000021                     strlen@cp:
  6782                           	opt stack 0
  6783                           
  6784                           ; 2 bytes @ 0x20
  6785  000021                     	ds	1
  6786  000022                     ??_putsUSART:
  6787  000022                     printBinary@value:
  6788                           	opt stack 0
  6789  000022                     Write_b_eep@GIE_BIT_VAL:
  6790                           	opt stack 0
  6791  000022                     strichr@chr:
  6792                           	opt stack 0
  6793                           
  6794                           ; 2 bytes @ 0x21
  6795  000022                     	ds	1
  6796  000023                     ??_fifo_read:
  6797  000023                     ?_setFilter:
  6798                           	opt stack 0
  6799  000023                     ??_strchr:
  6800  000023                     ??_strnicmp:
  6801  000023                     ?_hexStringToBytes:
  6802                           	opt stack 0
  6803  000023                     ?___wmul:
  6804                           	opt stack 0
  6805  000023                     init_app_eeprom@i:
  6806                           	opt stack 0
  6807  000023                     fifo_init@f:
  6808                           	opt stack 0
  6809  000023                     init_crc8@crc:
  6810                           	opt stack 0
  6811  000023                     ___lwdiv@counter:
  6812                           	opt stack 0
  6813  000023                     ___lwmod@counter:
  6814                           	opt stack 0
  6815  000023                     printBinary@i:
  6816                           	opt stack 0
  6817  000023                     hexStringToBytes@buf:
  6818                           	opt stack 0
  6819  000023                     memcpy@n:
  6820                           	opt stack 0
  6821  000023                     memset@n:
  6822                           	opt stack 0
  6823  000023                     strcat@cp:
  6824                           	opt stack 0
  6825  000023                     strcpy@cp:
  6826                           	opt stack 0
  6827  000023                     ___wmul@multiplier:
  6828                           	opt stack 0
  6829  000023                     setFilter@val:
  6830                           	opt stack 0
  6831  000023                     __CANIDToRegs@val:
  6832                           	opt stack 0
  6833  000023                     ___lldiv@divisor:
  6834                           	opt stack 0
  6835                           
  6836                           ; 4 bytes @ 0x22
  6837  000023                     	ds	1
  6838  000024                     init_crc8@i:
  6839                           	opt stack 0
  6840  000024                     ___lwdiv@quotient:
  6841                           	opt stack 0
  6842                           
  6843                           ; 2 bytes @ 0x23
  6844  000024                     	ds	1
  6845  000025                     hexStringToBytes@size:
  6846                           	opt stack 0
  6847  000025                     strnicmp@r:
  6848                           	opt stack 0
  6849  000025                     memset@p:
  6850                           	opt stack 0
  6851  000025                     ___wmul@multiplicand:
  6852                           	opt stack 0
  6853  000025                     strcspn@i:
  6854                           	opt stack 0
  6855  000025                     strspn@i:
  6856                           	opt stack 0
  6857                           
  6858                           ; 2 bytes @ 0x24
  6859  000025                     	ds	1
  6860  000026                     ??_crc8:
  6861  000026                     hexStringToBytes@inhex:
  6862                           	opt stack 0
  6863                           
  6864                           ; 2 bytes @ 0x25
  6865  000026                     	ds	1
  6866  000027                     setFilter@bPersistent:
  6867                           	opt stack 0
  6868  000027                     getCANFrame@pid:
  6869                           	opt stack 0
  6870  000027                     __CANIDToRegs@type:
  6871                           	opt stack 0
  6872  000027                     ___llmod@counter:
  6873                           	opt stack 0
  6874                           
  6875                           ; 1 bytes @ 0x26
  6876  000027                     	ds	1
  6877  000028                     tblptru	equ	0xFF8
  6878                           tblptrh	equ	0xFF7
  6879                           tblptrl	equ	0xFF6
  6880                           tablat	equ	0xFF5
  6881                           prodh	equ	0xFF4
  6882                           prodl	equ	0xFF3
  6883                           intcon	equ	0xFF2
  6884                           indf0	equ	0xFEF
  6885                           postinc0	equ	0xFEE
  6886                           fsr0h	equ	0xFEA
  6887                           fsr0l	equ	0xFE9
  6888                           wreg	equ	0xFE8
  6889                           indf1	equ	0xFE7
  6890                           postinc1	equ	0xFE6
  6891                           postdec1	equ	0xFE5
  6892                           fsr1h	equ	0xFE2
  6893                           fsr1l	equ	0xFE1
  6894                           indf2	equ	0xFDF
  6895                           postinc2	equ	0xFDE
  6896                           postdec2	equ	0xFDD
  6897                           plusw2	equ	0xFDB
  6898                           fsr2h	equ	0xFDA
  6899                           fsr2l	equ	0xFD9
  6900                           status	equ	0xFD8
  6901                           
  6902                           ; 0 bytes @ 0x27
  6903 ;;
  6904 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6905 ;;
  6906 ;; *************** function _main *****************
  6907 ;; Defined at:
  6908 ;;		line 296 in file "main.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  argc            2   26[BANK1 ] int 
  6911 ;;  argv            3   28[BANK1 ] PTR PTR unsigned char 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  c               1   96[BANK0 ] unsigned char 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  2   26[BANK1 ] int 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : F/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6923 ;;      Params:         0       0       5       0       0       0       0
  6924 ;;      Locals:         0       1       0       0       0       0       0
  6925 ;;      Temps:          0       1       0       0       0       0       0
  6926 ;;      Totals:         0       2       5       0       0       0       0
  6927 ;;Total ram usage:        7 bytes
  6928 ;; Hardware stack levels required when called:   11
  6929 ;; This function calls:
  6930 ;;		_fifo_getFree
  6931 ;;		_fifo_init
  6932 ;;		_init_crc8
  6933 ;;		_Read_b_eep
  6934 ;;		_vscp_restoreDefaults
  6935 ;;		_init
  6936 ;;		_putsUSART
  6937 ;;		_printFirmwareVersion
  6938 ;;		_printMode
  6939 ;;		_fifo_read
  6940 ;;		_ECANSetOperationMode
  6941 ;;		_doModeVerbose
  6942 ;;		_doModeVscp
  6943 ;;		_doModeSLCAN
  6944 ;;		_doModeVscpNode
  6945 ;; This function is called by:
  6946 ;;		Startup code after reset
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text0
  6951  00318C                     __ptext0:
  6952                           	opt stack 0
  6953  00318C                     _main:
  6954                           	opt stack 19
  6955                           
  6956                           ;main.c: 298: caps.maxVscpFrames = 1;
  6957                           
  6958                           ;incstack = 0
  6959                           ;incstack = 0
  6960  00318C  0E01               	movlw	1
  6961  00318E  6E3F               	movwf	_caps,c
  6962                           
  6963                           ;main.c: 299: caps.maxCanalFrames = 1;
  6964  003190  6E40               	movwf	_caps+1,c
  6965                           
  6966                           ;main.c: 304: fifo_init( &serialInputFifo, serial_inputBuffer, sizeof ( serial_inputBuff
      +                          er));
  6967  003192  0E02               	movlw	high _serial_inputBuffer
  6968  003194  6E20               	movwf	?_fifo_init+1,c
  6969  003196  0E00               	movlw	low _serial_inputBuffer
  6970  003198  6E1F               	movwf	?_fifo_init,c
  6971  00319A  6A22               	clrf	?_fifo_init+3,c
  6972  00319C  0E80               	movlw	128
  6973  00319E  6E21               	movwf	?_fifo_init+2,c
  6974  0031A0  0100               	movlb	0	; () banked
  6975  0031A2  0EF7               	movlw	_serialInputFifo& (0+255)
  6976  0031A4  EC34  F006         	call	_fifo_init
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;main.c: 305: fifo_init( &canInputFifo, can_inputBuffer, sizeof ( can_inputBuffer ) );
  6980  0031A8  0E04               	movlw	high _can_inputBuffer
  6981  0031AA  6E20               	movwf	?_fifo_init+1,c
  6982  0031AC  0E00               	movlw	low _can_inputBuffer
  6983  0031AE  6E1F               	movwf	?_fifo_init,c
  6984  0031B0  0E01               	movlw	1
  6985  0031B2  6E22               	movwf	?_fifo_init+3,c
  6986  0031B4  0EEE               	movlw	238
  6987  0031B6  6E21               	movwf	?_fifo_init+2,c
  6988  0031B8  0EEF               	movlw	_canInputFifo& (0+255)
  6989  0031BA  EC34  F006         	call	_fifo_init
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;main.c: 308: init_crc8();
  6993  0031BE  ECA9  F008         	call	_init_crc8	;wreg free
  6994                           
  6995                           ;main.c: 312: if ( ( 0x55 != Read_b_eep(0x01) ) ||
  6996                           ;main.c: 313: ( 0xaa != Read_b_eep(0x02) ) ) {
  6997  0031C2  6A20               	clrf	?_Read_b_eep+1,c
  6998  0031C4  0E01               	movlw	1
  6999  0031C6  6E1F               	movwf	?_Read_b_eep,c
  7000  0031C8  EC5C  F004         	call	_Read_b_eep	;wreg free
  7001  0031CC  0A55               	xorlw	85
  7002  0031CE  E107               	bnz	l15327
  7003  0031D0  6A20               	clrf	?_Read_b_eep+1,c
  7004  0031D2  0E02               	movlw	2
  7005  0031D4  6E1F               	movwf	?_Read_b_eep,c
  7006  0031D6  EC5C  F004         	call	_Read_b_eep	;wreg free
  7007  0031DA  0AAA               	xorlw	170
  7008  0031DC  A4D8               	btfss	status,2,c
  7009  0031DE                     l15327:
  7010                           
  7011                           ;main.c: 314: vscp_restoreDefaults();
  7012  0031DE  EC46  F004         	call	_vscp_restoreDefaults	;wreg free
  7013                           
  7014                           ;main.c: 315: }
  7015                           ;main.c: 318: init();
  7016  0031E2  ECB4  F007         	call	_init	;wreg free
  7017                           
  7018                           ;main.c: 322: _delay((unsigned long)((10)*(40000000/4000.0)));
  7019  0031E6  0E82               	movlw	130
  7020  0031E8  0100               	movlb	0	; () banked
  7021  0031EA  6FBF               	movwf	??_main& (0+255),b
  7022  0031EC  0EDD               	movlw	221
  7023  0031EE                     u24637:
  7024  0031EE  2EE8               	decfsz	wreg,f,c
  7025  0031F0  D7FE               	goto	u24637
  7026  0031F2  2FBF               	decfsz	??_main& (0+255),f,b
  7027  0031F4  D7FC               	goto	u24637
  7028  0031F6  D000               	nop2	
  7029                           
  7030                           ;main.c: 326: putsUSART((char*) "\r\nFrankfurt RS-232 CAN4VSCP module\r\n");
  7031  0031F8  0E75               	movlw	high STR_1
  7032  0031FA  6E21               	movwf	?_putsUSART+1,c
  7033  0031FC  0E4F               	movlw	low STR_1
  7034  0031FE  6E20               	movwf	?_putsUSART,c
  7035  003200  EC03  F007         	call	_putsUSART	;wreg free
  7036                           
  7037                           ;main.c: 327: putsUSART((char*) "Copyright (C) 2014-2015 Paradise of the Frog AB, Sweden
      +                          \r\n");
  7038  003204  0E6E               	movlw	high STR_2
  7039  003206  6E21               	movwf	?_putsUSART+1,c
  7040  003208  0E75               	movlw	low STR_2
  7041  00320A  6E20               	movwf	?_putsUSART,c
  7042  00320C  EC03  F007         	call	_putsUSART	;wreg free
  7043                           
  7044                           ;main.c: 328: putsUSART((char*) "http://www.paradiseofthefrog.com\r\n");
  7045  003210  0E75               	movlw	high STR_3
  7046  003212  6E21               	movwf	?_putsUSART+1,c
  7047  003214  0EE1               	movlw	low STR_3
  7048  003216  6E20               	movwf	?_putsUSART,c
  7049  003218  EC03  F007         	call	_putsUSART	;wreg free
  7050                           
  7051                           ;main.c: 329: printFirmwareVersion();
  7052  00321C  EC4D  F00A         	call	_printFirmwareVersion	;wreg free
  7053                           
  7054                           ;main.c: 330: printMode();
  7055  003220  ECDE  F008         	call	_printMode	;wreg free
  7056                           
  7057                           ;main.c: 334: if ( 0 != mode ) {
  7058  003224  0100               	movlb	0	; () banked
  7059  003226  51EC               	movf	_mode& (0+255),w,b
  7060  003228  E034               	bz	l15361
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;main.c: 336: uint8_t c;
  7064                           ;main.c: 338: putsUSART((char *) "Press 'v' within three seconds to enter verbose mode\r
      +                          \n");
  7065  00322A  0E6F               	movlw	high STR_4
  7066  00322C  6E21               	movwf	?_putsUSART+1,c
  7067  00322E  0E8E               	movlw	low STR_4
  7068  003230  6E20               	movwf	?_putsUSART,c
  7069  003232  EC03  F007         	call	_putsUSART	;wreg free
  7070                           
  7071                           ;main.c: 340: timekeeper = 0;
  7072  003236  0100               	movlb	0	; () banked
  7073  003238  6BD9               	clrf	_timekeeper& (0+255),b	;volatile
  7074  00323A  6BDA               	clrf	(_timekeeper+1)& (0+255),b	;volatile
  7075  00323C  6BDB               	clrf	(_timekeeper+2)& (0+255),b	;volatile
  7076  00323E  6BDC               	clrf	(_timekeeper+3)& (0+255),b	;volatile
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;main.c: 341: ledFunctionality = 6;
  7080  003240  0E06               	movlw	6
  7081  003242  6E37               	movwf	_ledFunctionality,c	;volatile
  7082                           
  7083                           ;main.c: 342: while (timekeeper < 3000) {
  7084  003244  D01D               	goto	l15359
  7085  003246                     l462:
  7086                           
  7087                           ; BSR set to: 0
  7088  003246  0004               	clrwdt		;# 
  7089                           
  7090                           ;main.c: 344: (INTCONbits.GIE = 0);
  7091  003248  9EF2               	bcf	intcon,7,c	;volatile
  7092                           
  7093                           ;main.c: 345: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
  7094  00324A  0100               	movlb	0	; () banked
  7095  00324C  0E00               	movlw	high main@c
  7096  00324E  6E20               	movwf	?_fifo_read+1,c
  7097  003250  0EC0               	movlw	low main@c
  7098  003252  6E1F               	movwf	?_fifo_read,c
  7099  003254  6A22               	clrf	?_fifo_read+3,c
  7100  003256  0E01               	movlw	1
  7101  003258  6E21               	movwf	?_fifo_read+2,c
  7102  00325A  0EF7               	movlw	_serialInputFifo& (0+255)
  7103  00325C  EC42  F00F         	call	_fifo_read
  7104  003260  041F               	decf	?_fifo_read,w,c
  7105  003262  1020               	iorwf	?_fifo_read+1,w,c
  7106  003264  E10C               	bnz	l463
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;main.c: 346: (INTCONbits.GIE = 1);
  7110  003266  8EF2               	bsf	intcon,7,c	;volatile
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;main.c: 347: if ('v' == c) {
  7114  003268  51C0               	movf	main@c& (0+255),w,b
  7115  00326A  0A76               	xorlw	118
  7116  00326C  E108               	bnz	l463
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;main.c: 348: mode = 0;
  7120  00326E  6BEC               	clrf	_mode& (0+255),b
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;main.c: 349: putsUSART((char *) "Temporary verbose mode set\r\n");
  7124  003270  0E77               	movlw	high STR_5
  7125  003272  6E21               	movwf	?_putsUSART+1,c
  7126  003274  0E2A               	movlw	low STR_5
  7127  003276  6E20               	movwf	?_putsUSART,c
  7128  003278  EC03  F007         	call	_putsUSART	;wreg free
  7129                           
  7130                           ;main.c: 350: break;
  7131  00327C  D00A               	goto	l15361
  7132  00327E                     l463:
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;main.c: 351: }
  7136                           ;main.c: 352: }
  7137                           ;main.c: 353: (INTCONbits.GIE = 1);
  7138  00327E  8EF2               	bsf	intcon,7,c	;volatile
  7139  003280                     l15359:
  7140                           
  7141                           ; BSR set to: 0
  7142  003280  0EB8               	movlw	184
  7143  003282  5DD9               	subwf	_timekeeper& (0+255),w,b	;volatile
  7144  003284  0E0B               	movlw	11
  7145  003286  59DA               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
  7146  003288  0E00               	movlw	0
  7147  00328A  59DB               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
  7148  00328C  0E00               	movlw	0
  7149  00328E  59DC               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
  7150  003290  E3DA               	bnc	l462
  7151  003292                     l15361:
  7152                           
  7153                           ;main.c: 354: }
  7154                           ;main.c: 355: }
  7155                           ;main.c: 357: ledFunctionality = 1;
  7156  003292  0E01               	movlw	1
  7157  003294  6E37               	movwf	_ledFunctionality,c	;volatile
  7158                           
  7159                           ;main.c: 362: switch ( Read_b_eep(0x07) ) {
  7160  003296  D01D               	goto	l15377
  7161  003298                     l467:
  7162                           
  7163                           ;main.c: 365: bSilent = 0;
  7164  003298  0101               	movlb	1	; () banked
  7165  00329A  6B02               	clrf	_bSilent& (0+255),b
  7166                           
  7167                           ; BSR set to: 1
  7168                           ;main.c: 366: ECANSetOperationMode( ECAN_OP_MODE_NORMAL );
  7169  00329C  0E00               	movlw	0
  7170  00329E  EC8C  F004         	call	_ECANSetOperationMode
  7171                           
  7172                           ;main.c: 367: break;
  7173  0032A2  D025               	goto	l473
  7174  0032A4                     l15365:
  7175                           
  7176                           ;main.c: 370: bSilent = 1;
  7177  0032A4  0E01               	movlw	1
  7178  0032A6  0101               	movlb	1	; () banked
  7179  0032A8  6F02               	movwf	_bSilent& (0+255),b
  7180                           
  7181                           ; BSR set to: 1
  7182                           ;main.c: 371: ECANSetOperationMode( ECAN_OP_MODE_NORMAL );
  7183  0032AA  0E00               	movlw	0
  7184  0032AC  EC8C  F004         	call	_ECANSetOperationMode
  7185                           
  7186                           ;main.c: 372: break;
  7187  0032B0  D01E               	goto	l473
  7188  0032B2                     l470:
  7189                           
  7190                           ;main.c: 375: bSilent = 0;
  7191  0032B2  0101               	movlb	1	; () banked
  7192  0032B4  6B02               	clrf	_bSilent& (0+255),b
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;main.c: 376: ECANSetOperationMode( ECAN_OP_MODE_LISTEN );
  7196  0032B6  0E60               	movlw	96
  7197  0032B8  EC8C  F004         	call	_ECANSetOperationMode
  7198                           
  7199                           ;main.c: 377: break;
  7200  0032BC  D018               	goto	l473
  7201  0032BE                     l471:
  7202                           
  7203                           ;main.c: 380: bSilent = 0;
  7204  0032BE  0101               	movlb	1	; () banked
  7205  0032C0  6B02               	clrf	_bSilent& (0+255),b
  7206                           
  7207                           ; BSR set to: 1
  7208                           ;main.c: 381: ECANSetOperationMode( ECAN_OP_MODE_LOOP );
  7209  0032C2  0E40               	movlw	64
  7210  0032C4  EC8C  F004         	call	_ECANSetOperationMode
  7211                           
  7212                           ;main.c: 382: break;
  7213  0032C8  D012               	goto	l473
  7214  0032CA                     l15373:
  7215                           
  7216                           ;main.c: 385: ECANSetOperationMode( 0x20 );
  7217  0032CA  0E20               	movlw	32
  7218  0032CC  EC8C  F004         	call	_ECANSetOperationMode
  7219                           
  7220                           ;main.c: 386: break;
  7221  0032D0  D00E               	goto	l473
  7222  0032D2                     l15377:
  7223  0032D2  6A20               	clrf	?_Read_b_eep+1,c
  7224  0032D4  0E07               	movlw	7
  7225  0032D6  6E1F               	movwf	?_Read_b_eep,c
  7226  0032D8  EC5C  F004         	call	_Read_b_eep	;wreg free
  7227                           
  7228                           ; Switch size 1, requested type "space"
  7229                           ; Number of cases is 4, Range of values is 1 to 4
  7230                           ; switch strategies available:
  7231                           ; Name         Instructions Cycles
  7232                           ; simple_byte           13     7 (average)
  7233                           ;	Chosen strategy is simple_byte
  7234  0032DC  0A01               	xorlw	1	; case 1
  7235  0032DE  E0DC               	bz	l467
  7236  0032E0  0A03               	xorlw	3	; case 2
  7237  0032E2  E0E0               	bz	l15365
  7238  0032E4  0A01               	xorlw	1	; case 3
  7239  0032E6  E0E5               	bz	l470
  7240  0032E8  0A07               	xorlw	7	; case 4
  7241  0032EA  E0E9               	bz	l471
  7242  0032EC  D7EE               	goto	l15373
  7243  0032EE                     l473:
  7244  0032EE  0004               	clrwdt		;# 
  7245                           
  7246                           ;main.c: 400: if ( RCSTAbits.OERR ) {
  7247  0032F0  A2AB               	btfss	4011,1,c	;volatile
  7248  0032F2  D002               	goto	l474
  7249                           
  7250                           ;main.c: 401: RCSTAbits.CREN = 0;
  7251  0032F4  98AB               	bcf	4011,4,c	;volatile
  7252                           
  7253                           ;main.c: 402: RCSTAbits.CREN = 1;
  7254  0032F6  88AB               	bsf	4011,4,c	;volatile
  7255  0032F8                     l474:
  7256                           
  7257                           ;main.c: 403: }
  7258                           ;main.c: 405: (INTCONbits.GIE = 0);
  7259  0032F8  9EF2               	bcf	intcon,7,c	;volatile
  7260                           
  7261                           ;main.c: 406: if ( fifo_getFree( &serialInputFifo ) < 100 ) {
  7262  0032FA  0100               	movlb	0	; () banked
  7263  0032FC  0EF7               	movlw	_serialInputFifo& (0+255)
  7264  0032FE  EC14  F00C         	call	_fifo_getFree
  7265  003302  0E64               	movlw	100
  7266  003304  5C1F               	subwf	?_fifo_getFree,w,c
  7267  003306  0E00               	movlw	0
  7268  003308  5820               	subwfb	?_fifo_getFree+1,w,c
  7269  00330A  E202               	bc	l475
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;main.c: 407: PORTCbits.RC4 = 0;
  7273  00330C  9882               	bcf	3970,4,c	;volatile
  7274                           
  7275                           ;main.c: 408: }
  7276  00330E  D001               	goto	l476
  7277  003310                     l475:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;main.c: 409: else {
  7281                           ;main.c: 410: PORTCbits.RC4 = 1;
  7282  003310  8882               	bsf	3970,4,c	;volatile
  7283  003312                     l476:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;main.c: 411: }
  7287                           ;main.c: 412: (INTCONbits.GIE = 1);
  7288  003312  8EF2               	bsf	intcon,7,c	;volatile
  7289                           
  7290                           ;main.c: 414: if (0 == mode) {
  7291  003314  67EC               	tstfsz	_mode& (0+255),b
  7292  003316  D003               	goto	l15387
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;main.c: 415: doModeVerbose();
  7296  003318  ECF2  F028         	call	_doModeVerbose	;wreg free
  7297                           
  7298                           ;main.c: 416: }
  7299  00331C  D7E8               	goto	l473
  7300  00331E                     l15387:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;main.c: 417: else if (1 == mode) {
  7304  00331E  05EC               	decf	_mode& (0+255),w,b
  7305  003320  E103               	bnz	l15391
  7306  003322                     l15389:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;main.c: 418: doModeVscp();
  7310  003322  ECDC  F01D         	call	_doModeVscp	;wreg free
  7311                           
  7312                           ;main.c: 419: }
  7313  003326  D7E3               	goto	l473
  7314  003328                     l15391:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;main.c: 420: else if (2 == mode) {
  7318  003328  51EC               	movf	_mode& (0+255),w,b
  7319  00332A  0A02               	xorlw	2
  7320  00332C  E103               	bnz	l15395
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;main.c: 421: doModeSLCAN();
  7324  00332E  EC6A  F023         	call	_doModeSLCAN	;wreg free
  7325                           
  7326                           ;main.c: 422: }
  7327  003332  D7DD               	goto	l473
  7328  003334                     l15395:
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;main.c: 423: else if (3 == mode) {
  7332  003334  51EC               	movf	_mode& (0+255),w,b
  7333  003336  0A03               	xorlw	3
  7334  003338  E1F4               	bnz	l15389
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;main.c: 424: doModeVscpNode();
  7338  00333A  EC42  F004         	call	_doModeVscpNode	;wreg free
  7339                           
  7340                           ;main.c: 425: }
  7341  00333E  D7D7               	goto	l473
  7342  003340                     __end_of_main:
  7343                           	opt stack 0
  7344                           tblptru	equ	0xFF8
  7345                           tblptrh	equ	0xFF7
  7346                           tblptrl	equ	0xFF6
  7347                           tablat	equ	0xFF5
  7348                           prodh	equ	0xFF4
  7349                           prodl	equ	0xFF3
  7350                           intcon	equ	0xFF2
  7351                           indf0	equ	0xFEF
  7352                           postinc0	equ	0xFEE
  7353                           fsr0h	equ	0xFEA
  7354                           fsr0l	equ	0xFE9
  7355                           wreg	equ	0xFE8
  7356                           indf1	equ	0xFE7
  7357                           postinc1	equ	0xFE6
  7358                           postdec1	equ	0xFE5
  7359                           fsr1h	equ	0xFE2
  7360                           fsr1l	equ	0xFE1
  7361                           indf2	equ	0xFDF
  7362                           postinc2	equ	0xFDE
  7363                           postdec2	equ	0xFDD
  7364                           plusw2	equ	0xFDB
  7365                           fsr2h	equ	0xFDA
  7366                           fsr2l	equ	0xFD9
  7367                           status	equ	0xFD8
  7368                           
  7369 ;; *************** function _doModeVscpNode *****************
  7370 ;; Defined at:
  7371 ;;		line 1983 in file "main.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;		None
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;		None               void
  7378 ;; Registers used:
  7379 ;;		None
  7380 ;; Tracked objects:
  7381 ;;		On entry : F/0
  7382 ;;		On exit  : F/0
  7383 ;;		Unchanged: F/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7385 ;;      Params:         0       0       0       0       0       0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0
  7388 ;;      Totals:         0       0       0       0       0       0       0
  7389 ;;Total ram usage:        0 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    3
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_main
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text1
  7400  000884                     __ptext1:
  7401                           	opt stack 0
  7402  000884                     _doModeVscpNode:
  7403                           	opt stack 26
  7404                           
  7405                           ; BSR set to: 0
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;incstack = 0
  7409                           ;incstack = 0
  7410  000884  0012               	return	
  7411  000886                     __end_of_doModeVscpNode:
  7412                           	opt stack 0
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           prodh	equ	0xFF4
  7418                           prodl	equ	0xFF3
  7419                           intcon	equ	0xFF2
  7420                           indf0	equ	0xFEF
  7421                           postinc0	equ	0xFEE
  7422                           fsr0h	equ	0xFEA
  7423                           fsr0l	equ	0xFE9
  7424                           wreg	equ	0xFE8
  7425                           indf1	equ	0xFE7
  7426                           postinc1	equ	0xFE6
  7427                           postdec1	equ	0xFE5
  7428                           fsr1h	equ	0xFE2
  7429                           fsr1l	equ	0xFE1
  7430                           indf2	equ	0xFDF
  7431                           postinc2	equ	0xFDE
  7432                           postdec2	equ	0xFDD
  7433                           plusw2	equ	0xFDB
  7434                           fsr2h	equ	0xFDA
  7435                           fsr2l	equ	0xFD9
  7436                           status	equ	0xFD8
  7437                           
  7438 ;; *************** function _doModeSLCAN *****************
  7439 ;; Defined at:
  7440 ;;		line 1765 in file "main.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  id              4   54[BANK0 ] unsigned long 
  7445 ;;  dlc             1   58[BANK0 ] unsigned char 
  7446 ;;  rv              1   60[BANK0 ] enum E15660
  7447 ;;  c               1   59[BANK0 ] unsigned char 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;		None               void
  7450 ;; Registers used:
  7451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : F/0
  7454 ;;		On exit  : E/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7457 ;;      Params:         0       0       0       0       0       0       0
  7458 ;;      Locals:         0       7       0       0       0       0       0
  7459 ;;      Temps:          0       7       0       0       0       0       0
  7460 ;;      Totals:         0      14       0       0       0       0       0
  7461 ;;Total ram usage:       14 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    7
  7464 ;; This function calls:
  7465 ;;		_putsUSART
  7466 ;;		_fifo_read
  7467 ;;		_ECANSetOperationMode
  7468 ;;		_Busy_eep
  7469 ;;		_Write_b_eep
  7470 ;;		_memset
  7471 ;;		_receiveSendEventSLCAN
  7472 ;;		_strlen
  7473 ;;		_hexStringToBytes
  7474 ;;		_memcpy
  7475 ;;		_sendCANFrame
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text2
  7482  0046D4                     __ptext2:
  7483                           	opt stack 0
  7484  0046D4                     _doModeSLCAN:
  7485                           	opt stack 22
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;main.c: 1766: uint8_t c;
  7489                           ;main.c: 1767: BOOL rv = 0;
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;incstack = 0
  7493                           ;incstack = 0
  7494  0046D4  6B9C               	clrf	doModeSLCAN@rv& (0+255),b
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;main.c: 1770: receiveSendEventSLCAN();
  7498  0046D6  EC34  F017         	call	_receiveSendEventSLCAN	;wreg free
  7499                           
  7500                           ;main.c: 1773: (INTCONbits.GIE = 0);
  7501  0046DA  9EF2               	bcf	intcon,7,c	;volatile
  7502                           
  7503                           ;main.c: 1775: if ( 1 == fifo_read( &serialInputFifo, &c, 1 ) ) {
  7504  0046DC  0100               	movlb	0	; () banked
  7505  0046DE  0E00               	movlw	high doModeSLCAN@c
  7506  0046E0  6E20               	movwf	?_fifo_read+1,c
  7507  0046E2  0E9B               	movlw	low doModeSLCAN@c
  7508  0046E4  6E1F               	movwf	?_fifo_read,c
  7509  0046E6  6A22               	clrf	?_fifo_read+3,c
  7510  0046E8  0E01               	movlw	1
  7511  0046EA  6E21               	movwf	?_fifo_read+2,c
  7512  0046EC  0EF7               	movlw	_serialInputFifo& (0+255)
  7513  0046EE  EC42  F00F         	call	_fifo_read
  7514  0046F2  041F               	decf	?_fifo_read,w,c
  7515  0046F4  1020               	iorwf	?_fifo_read+1,w,c
  7516  0046F6  E001 D1C9          	bnz	l16879
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;main.c: 1778: (INTCONbits.GIE = 1);
  7520  0046FA  8EF2               	bsf	intcon,7,c	;volatile
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;main.c: 1780: if (0x0d != c) {
  7524  0046FC  519B               	movf	doModeSLCAN@c& (0+255),w,b
  7525  0046FE  0A0D               	xorlw	13
  7526  004700  E101 D17D          	bz	l16867
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;main.c: 1781: cmdbuf[ pos ] = c;
  7530  004704  0101               	movlb	1	; () banked
  7531  004706  ECFE  F01E         	call	PL48	;call to abstracted procedure
  7532  00470A  C09B  FFDF         	movff	doModeSLCAN@c,indf2
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;main.c: 1782: pos++;
  7536  00470E  2B03               	incf	_pos& (0+255),f,b
  7537  004710  D1BE               	goto	l847
  7538  004712                     l16739:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;main.c: 1790: if (1 == strlen(cmdbuf)) {
  7542  004712  0101               	movlb	1	; () banked
  7543  004714  0E01               	movlw	high _cmdbuf
  7544  004716  6E20               	movwf	?_strlen+1,c
  7545  004718  0E05               	movlw	low _cmdbuf
  7546  00471A  6E1F               	movwf	?_strlen,c
  7547  00471C  ECB9  F005         	call	_strlen	;wreg free
  7548  004720  041F               	decf	?_strlen,w,c
  7549  004722  1020               	iorwf	?_strlen+1,w,c
  7550  004724  E001 D198          	bnz	l16869
  7551                           
  7552                           ;main.c: 1791: putsUSART((char *) "JFrankfurt RS-232\r\n");
  7553  004728  0E79               	movlw	high STR_172
  7554  00472A  6E21               	movwf	?_putsUSART+1,c
  7555  00472C  0EE6               	movlw	low STR_172
  7556  00472E  6E20               	movwf	?_putsUSART,c
  7557  004730  EC03  F007         	call	_putsUSART	;wreg free
  7558  004734  D117               	goto	L4
  7559  004736                     l16745:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;main.c: 1798: if (1 == strlen(cmdbuf)) {
  7563  004736  0101               	movlb	1	; () banked
  7564  004738  0E01               	movlw	high _cmdbuf
  7565  00473A  6E20               	movwf	?_strlen+1,c
  7566  00473C  0E05               	movlw	low _cmdbuf
  7567  00473E  6E1F               	movwf	?_strlen,c
  7568  004740  ECB9  F005         	call	_strlen	;wreg free
  7569  004744  041F               	decf	?_strlen,w,c
  7570  004746  1020               	iorwf	?_strlen+1,w,c
  7571  004748  E001 D186          	bnz	l16869
  7572                           
  7573                           ;main.c: 1799: putsUSART((char *) "V1011\r\n");
  7574  00474C  0E7B               	movlw	high STR_173
  7575  00474E  6E21               	movwf	?_putsUSART+1,c
  7576  004750  0EC1               	movlw	low STR_173
  7577  004752  6E20               	movwf	?_putsUSART,c
  7578  004754  EC03  F007         	call	_putsUSART	;wreg free
  7579  004758  D105               	goto	L4
  7580  00475A                     l16751:
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;main.c: 1806: if (1 == strlen(cmdbuf)) {
  7584  00475A  0101               	movlb	1	; () banked
  7585  00475C  0E01               	movlw	high _cmdbuf
  7586  00475E  6E20               	movwf	?_strlen+1,c
  7587  004760  0E05               	movlw	low _cmdbuf
  7588  004762  6E1F               	movwf	?_strlen,c
  7589  004764  ECB9  F005         	call	_strlen	;wreg free
  7590  004768  041F               	decf	?_strlen,w,c
  7591  00476A  1020               	iorwf	?_strlen+1,w,c
  7592  00476C  E001 D174          	bnz	l16869
  7593                           
  7594                           ;main.c: 1807: putsUSART((char *) "N1977\r\n");
  7595  004770  0E7B               	movlw	high STR_174
  7596  004772  6E21               	movwf	?_putsUSART+1,c
  7597  004774  0EC9               	movlw	low STR_174
  7598  004776  6E20               	movwf	?_putsUSART,c
  7599  004778  EC03  F007         	call	_putsUSART	;wreg free
  7600  00477C  D0F3               	goto	L4
  7601  00477E                     l16757:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;main.c: 1816: bInitiated = 1;
  7605  00477E  0E01               	movlw	1
  7606  004780  6FE9               	movwf	_bInitiated& (0+255),b
  7607                           
  7608                           ;main.c: 1817: rv = 1;
  7609  004782  D0F2               	goto	L3
  7610  004784                     l857:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;main.c: 1822: if (!bOpen) {
  7614  004784  67EA               	tstfsz	_bOpen& (0+255),b
  7615  004786  D003               	goto	l16761
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;main.c: 1823: bInitiated = 1;
  7619  004788  0E01               	movlw	1
  7620  00478A  6FE9               	movwf	_bInitiated& (0+255),b
  7621                           
  7622                           ;main.c: 1824: rv = 1;
  7623  00478C  6F9C               	movwf	doModeSLCAN@rv& (0+255),b
  7624  00478E                     l16761:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;main.c: 1829: if (1 == strlen(cmdbuf)) {
  7628  00478E  0101               	movlb	1	; () banked
  7629  004790  0E01               	movlw	high _cmdbuf
  7630  004792  6E20               	movwf	?_strlen+1,c
  7631  004794  0E05               	movlw	low _cmdbuf
  7632  004796  6E1F               	movwf	?_strlen,c
  7633  004798  ECB9  F005         	call	_strlen	;wreg free
  7634  00479C  041F               	decf	?_strlen,w,c
  7635  00479E  1020               	iorwf	?_strlen+1,w,c
  7636  0047A0  E001 D15A          	bnz	l16869
  7637                           
  7638                           ;main.c: 1830: if (!bOpen && bInitiated) {
  7639  0047A4  0100               	movlb	0	; () banked
  7640  0047A6  67EA               	tstfsz	_bOpen& (0+255),b
  7641  0047A8  D157               	goto	l16869
  7642                           
  7643                           ; BSR set to: 0
  7644  0047AA  51E9               	movf	_bInitiated& (0+255),w,b
  7645  0047AC  E101 D154          	bz	l16869
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;main.c: 1831: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  7649  0047B0  0E00               	movlw	0
  7650  0047B2  EC8C  F004         	call	_ECANSetOperationMode
  7651                           
  7652                           ;main.c: 1832: bOpen = 1;
  7653  0047B6  0E01               	movlw	1
  7654  0047B8  0100               	movlb	0	; () banked
  7655  0047BA  6FEA               	movwf	_bOpen& (0+255),b
  7656  0047BC  D0D3               	goto	L4
  7657  0047BE                     l16773:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;main.c: 1840: if (1 == strlen(cmdbuf)) {
  7661  0047BE  0101               	movlb	1	; () banked
  7662  0047C0  0E01               	movlw	high _cmdbuf
  7663  0047C2  6E20               	movwf	?_strlen+1,c
  7664  0047C4  0E05               	movlw	low _cmdbuf
  7665  0047C6  6E1F               	movwf	?_strlen,c
  7666  0047C8  ECB9  F005         	call	_strlen	;wreg free
  7667  0047CC  041F               	decf	?_strlen,w,c
  7668  0047CE  1020               	iorwf	?_strlen+1,w,c
  7669  0047D0  E001 D142          	bnz	l16869
  7670                           
  7671                           ;main.c: 1841: if (bOpen) {
  7672  0047D4  0100               	movlb	0	; () banked
  7673  0047D6  51EA               	movf	_bOpen& (0+255),w,b
  7674  0047D8  E101 D0C4          	bz	L4
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;main.c: 1842: ECANSetOperationMode(0x20);
  7678  0047DC  0E20               	movlw	32
  7679  0047DE  EC8C  F004         	call	_ECANSetOperationMode
  7680                           
  7681                           ;main.c: 1843: bOpen = 0;
  7682  0047E2  0100               	movlb	0	; () banked
  7683  0047E4  6BEA               	clrf	_bOpen& (0+255),b
  7684  0047E6  D0BE               	goto	L4
  7685  0047E8                     l16783:
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;main.c: 1856: if (bOpen && (strlen(cmdbuf) >= 10)) {
  7689  0047E8  51EA               	movf	_bOpen& (0+255),w,b
  7690  0047EA  E101 D135          	bz	l16869
  7691                           
  7692                           ; BSR set to: 0
  7693  0047EE  0101               	movlb	1	; () banked
  7694  0047F0  0E01               	movlw	high _cmdbuf
  7695  0047F2  6E20               	movwf	?_strlen+1,c
  7696  0047F4  0E05               	movlw	low _cmdbuf
  7697  0047F6  6E1F               	movwf	?_strlen,c
  7698  0047F8  ECB9  F005         	call	_strlen	;wreg free
  7699  0047FC  0E0A               	movlw	10
  7700  0047FE  5C1F               	subwf	?_strlen,w,c
  7701  004800  0E00               	movlw	0
  7702  004802  5820               	subwfb	?_strlen+1,w,c
  7703  004804  E201 D128          	bnc	l16869
  7704                           
  7705                           ;main.c: 1858: uint32_t id;
  7706                           ;main.c: 1859: uint8_t dlc;
  7707                           ;main.c: 1861: if (hexStringToBytes(wrkbuf, sizeof ( wrkbuf), cmdbuf) < 5) {
  7708  004808  0101               	movlb	1	; () banked
  7709  00480A  0E01               	movlw	high _wrkbuf
  7710  00480C  6E24               	movwf	?_hexStringToBytes+1,c
  7711  00480E  0E55               	movlw	low _wrkbuf
  7712  004810  6E23               	movwf	?_hexStringToBytes,c
  7713  004812  0E50               	movlw	80
  7714  004814  6E25               	movwf	?_hexStringToBytes+2,c
  7715  004816  0E01               	movlw	high _cmdbuf
  7716  004818  6E27               	movwf	?_hexStringToBytes+4,c
  7717  00481A  0E05               	movlw	low _cmdbuf
  7718  00481C  6E26               	movwf	?_hexStringToBytes+3,c
  7719  00481E  EC27  F00B         	call	_hexStringToBytes	;wreg free
  7720  004822  6F8F               	movwf	??_doModeSLCAN& (0+255),b
  7721  004824  0E05               	movlw	5
  7722  004826  5D8F               	subwf	??_doModeSLCAN& (0+255),w,b
  7723  004828  E201 D116          	bnc	l16869
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;main.c: 1863: }
  7727                           ;main.c: 1865: id = (uint32_t) wrkbuf[0] << 24 + (uint32_t) wrkbuf[1] << 16 + (uint32_t)
      +                           wrkbuf[2] << 8 + wrkbuf[3];
  7728  00482C  C158  F08F         	movff	_wrkbuf+3,??_doModeSLCAN
  7729  004830  0E08               	movlw	8
  7730  004832  278F               	addwf	??_doModeSLCAN& (0+255),f,b
  7731  004834  C157  F090         	movff	_wrkbuf+2,??_doModeSLCAN+1
  7732  004838  0E10               	movlw	16
  7733  00483A  2790               	addwf	(??_doModeSLCAN+1)& (0+255),f,b
  7734  00483C  C156  F091         	movff	_wrkbuf+1,??_doModeSLCAN+2
  7735  004840  0E18               	movlw	24
  7736  004842  2791               	addwf	(??_doModeSLCAN+2)& (0+255),f,b
  7737  004844  C155  F092         	movff	_wrkbuf,??_doModeSLCAN+3
  7738  004848  0100               	movlb	0	; () banked
  7739  00484A  6B93               	clrf	(??_doModeSLCAN+4)& (0+255),b
  7740  00484C  6B94               	clrf	(??_doModeSLCAN+5)& (0+255),b
  7741  00484E  6B95               	clrf	(??_doModeSLCAN+6)& (0+255),b
  7742  004850  2B91               	incf	(??_doModeSLCAN+2)& (0+255),f,b
  7743  004852  D001               	goto	u20980
  7744  004854                     u20985:
  7745  004854  D91D               	call	PL108	;call to abstracted procedure
  7746  004856                     u20980:
  7747  004856  2F91               	decfsz	(??_doModeSLCAN+2)& (0+255),f,b
  7748  004858  D7FD               	goto	u20985
  7749  00485A  2B90               	incf	(??_doModeSLCAN+1)& (0+255),f,b
  7750  00485C  D001               	goto	u20990
  7751  00485E                     u20995:
  7752  00485E  D918               	call	PL108	;call to abstracted procedure
  7753  004860                     u20990:
  7754  004860  2F90               	decfsz	(??_doModeSLCAN+1)& (0+255),f,b
  7755  004862  D7FD               	goto	u20995
  7756  004864  2B8F               	incf	??_doModeSLCAN& (0+255),f,b
  7757  004866  D001               	goto	u21000
  7758  004868                     u21005:
  7759  004868  D913               	call	PL108	;call to abstracted procedure
  7760  00486A                     u21000:
  7761  00486A  2F8F               	decfsz	??_doModeSLCAN& (0+255),f,b
  7762  00486C  D7FD               	goto	u21005
  7763  00486E  C095  F099         	movff	??_doModeSLCAN+6,doModeSLCAN@id+3
  7764  004872  C094  F098         	movff	??_doModeSLCAN+5,doModeSLCAN@id+2
  7765  004876  C093  F097         	movff	??_doModeSLCAN+4,doModeSLCAN@id+1
  7766  00487A  C092  F096         	movff	??_doModeSLCAN+3,doModeSLCAN@id
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;main.c: 1866: dlc = vscpData[4];
  7770  00487E  C1A9  F09A         	movff	_vscpData+4,doModeSLCAN@dlc
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;main.c: 1869: if (dlc > 8) break;
  7774  004882  0E08               	movlw	8
  7775  004884  659A               	cpfsgt	doModeSLCAN@dlc& (0+255),b
  7776  004886  D001               	goto	l16799
  7777  004888  D0E7               	goto	l16869
  7778  00488A                     l16799:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;main.c: 1870: if (strlen(cmdbuf) < (10 + 2 * dlc)) break;
  7782  00488A  90D8               	bcf	status,0,c
  7783  00488C  359A               	rlcf	doModeSLCAN@dlc& (0+255),w,b
  7784  00488E  6F8F               	movwf	??_doModeSLCAN& (0+255),b
  7785  004890  6B90               	clrf	(??_doModeSLCAN+1)& (0+255),b
  7786  004892  3790               	rlcf	(??_doModeSLCAN+1)& (0+255),f,b
  7787  004894  0E0A               	movlw	10
  7788  004896  278F               	addwf	??_doModeSLCAN& (0+255),f,b
  7789  004898  0E00               	movlw	0
  7790  00489A  2390               	addwfc	(??_doModeSLCAN+1)& (0+255),f,b
  7791  00489C  0101               	movlb	1	; () banked
  7792  00489E  0E01               	movlw	high _cmdbuf
  7793  0048A0  6E20               	movwf	?_strlen+1,c
  7794  0048A2  0E05               	movlw	low _cmdbuf
  7795  0048A4  6E1F               	movwf	?_strlen,c
  7796  0048A6  ECB9  F005         	call	_strlen	;wreg free
  7797  0048AA  0100               	movlb	0	; () banked
  7798  0048AC  518F               	movf	??_doModeSLCAN& (0+255),w,b
  7799  0048AE  5C1F               	subwf	?_strlen,w,c
  7800  0048B0  5190               	movf	(??_doModeSLCAN+1)& (0+255),w,b
  7801  0048B2  5820               	subwfb	?_strlen+1,w,c
  7802  0048B4  E201 D0D0          	bnc	l16869
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;main.c: 1872: memcpy(vscpData, vscpData + 5, dlc);
  7806  0048B8  0E01               	movlw	high _vscpData
  7807  0048BA  6E20               	movwf	?_memcpy+1,c
  7808  0048BC  0EA5               	movlw	low _vscpData
  7809  0048BE  6E1F               	movwf	?_memcpy,c
  7810  0048C0  0EAA               	movlw	low (_vscpData+5)
  7811  0048C2  6F8F               	movwf	??_doModeSLCAN& (0+255),b
  7812  0048C4  0E01               	movlw	high (_vscpData+5)
  7813  0048C6  6F90               	movwf	(??_doModeSLCAN+1)& (0+255),b
  7814  0048C8  C08F  F021         	movff	??_doModeSLCAN,?_memcpy+2
  7815  0048CC  C090  F022         	movff	??_doModeSLCAN+1,?_memcpy+3
  7816  0048D0  C09A  F023         	movff	doModeSLCAN@dlc,?_memcpy+4
  7817  0048D4  6A24               	clrf	?_memcpy+5,c
  7818  0048D6  EC54  F006         	call	_memcpy	;wreg free
  7819                           
  7820                           ;main.c: 1874: rv = sendCANFrame(id, dlc, vscpData);
  7821  0048DA  C096  F088         	movff	doModeSLCAN@id,?_sendCANFrame
  7822  0048DE  C097  F089         	movff	doModeSLCAN@id+1,?_sendCANFrame+1
  7823  0048E2  C098  F08A         	movff	doModeSLCAN@id+2,?_sendCANFrame+2
  7824  0048E6  C099  F08B         	movff	doModeSLCAN@id+3,?_sendCANFrame+3
  7825  0048EA  C09A  F08C         	movff	doModeSLCAN@dlc,?_sendCANFrame+4
  7826  0048EE  0E01               	movlw	high _vscpData
  7827  0048F0  0100               	movlb	0	; () banked
  7828  0048F2  6F8E               	movwf	(?_sendCANFrame+6)& (0+255),b
  7829  0048F4  0EA5               	movlw	low _vscpData
  7830  0048F6  6F8D               	movwf	(?_sendCANFrame+5)& (0+255),b
  7831  0048F8  EC63  F005         	call	_sendCANFrame	;wreg free
  7832  0048FC  D035               	goto	L3
  7833  0048FE                     l16807:
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;main.c: 1889: if (bOpen && (strlen(cmdbuf) == 1)) {
  7837  0048FE  51EA               	movf	_bOpen& (0+255),w,b
  7838  004900  E101 D0AA          	bz	l16869
  7839                           
  7840                           ; BSR set to: 0
  7841  004904  0101               	movlb	1	; () banked
  7842  004906  0E01               	movlw	high _cmdbuf
  7843  004908  6E20               	movwf	?_strlen+1,c
  7844  00490A  0E05               	movlw	low _cmdbuf
  7845  00490C  6E1F               	movwf	?_strlen,c
  7846  00490E  ECB9  F005         	call	_strlen	;wreg free
  7847  004912  041F               	decf	?_strlen,w,c
  7848  004914  1020               	iorwf	?_strlen+1,w,c
  7849  004916  E001 D09F          	bnz	l16869
  7850                           
  7851                           ;main.c: 1890: putsUSART((char *) "F00\r\n");
  7852  00491A  0E7C               	movlw	high STR_175
  7853  00491C  6E21               	movwf	?_putsUSART+1,c
  7854  00491E  0E65               	movlw	low STR_175
  7855  004920  6E20               	movwf	?_putsUSART,c
  7856  004922  EC03  F007         	call	_putsUSART	;wreg free
  7857  004926  D098               	goto	l16869
  7858  004928                     l16817:
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;main.c: 1906: if (2 == strlen(cmdbuf)) {
  7862  004928  0101               	movlb	1	; () banked
  7863  00492A  0E01               	movlw	high _cmdbuf
  7864  00492C  6E20               	movwf	?_strlen+1,c
  7865  00492E  0E05               	movlw	low _cmdbuf
  7866  004930  6E1F               	movwf	?_strlen,c
  7867  004932  ECB9  F005         	call	_strlen	;wreg free
  7868  004936  501F               	movf	?_strlen,w,c
  7869  004938  0A02               	xorlw	2
  7870  00493A  1020               	iorwf	?_strlen+1,w,c
  7871  00493C  E001 D08C          	bnz	l16869
  7872                           
  7873                           ;main.c: 1907: if (!bOpen) {
  7874  004940  0100               	movlb	0	; () banked
  7875  004942  67EA               	tstfsz	_bOpen& (0+255),b
  7876  004944  D089               	goto	l16869
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;main.c: 1908: if ('0' == cmdbuf[1]) {
  7880  004946  0101               	movlb	1	; () banked
  7881  004948  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  7882  00494A  0A30               	xorlw	48
  7883  00494C  E10F               	bnz	l16829
  7884                           
  7885                           ; BSR set to: 1
  7886                           ;main.c: 1909: nTimeStamp = 0;
  7887  00494E  0100               	movlb	0	; () banked
  7888  004950  6BED               	clrf	_nTimeStamp& (0+255),b
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;main.c: 1911: (Busy_eep(), Write_b_eep(0x05,0));
  7892  004952  EC43  F004         	call	_Busy_eep	;wreg free
  7893  004956  6A20               	clrf	?_Write_b_eep+1,c
  7894  004958  0E05               	movlw	5
  7895  00495A  6E1F               	movwf	?_Write_b_eep,c
  7896  00495C  0E00               	movlw	0
  7897  00495E  6A21               	clrf	?_Write_b_eep+2,c
  7898  004960  EC2D  F005         	call	_Write_b_eep	;wreg free
  7899  004964                     L4:
  7900                           
  7901                           ;main.c: 1912: rv = 1;
  7902  004964  0E01               	movlw	1
  7903  004966  0100               	movlb	0	; () banked
  7904  004968                     L3:
  7905  004968  6F9C               	movwf	doModeSLCAN@rv& (0+255),b
  7906                           
  7907                           ;main.c: 1913: } else if ('1' == cmdbuf[1]) {
  7908  00496A  D076               	goto	l16869
  7909  00496C                     l16829:
  7910                           
  7911                           ; BSR set to: 1
  7912  00496C  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  7913  00496E  0A31               	xorlw	49
  7914  004970  E10D               	bnz	l882
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;main.c: 1914: nTimeStamp = 1;
  7918  004972  0E01               	movlw	1
  7919  004974  0100               	movlb	0	; () banked
  7920  004976  6FED               	movwf	_nTimeStamp& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;main.c: 1916: (Busy_eep(), Write_b_eep(0x05,1));
  7924  004978  EC43  F004         	call	_Busy_eep	;wreg free
  7925  00497C  6A20               	clrf	?_Write_b_eep+1,c
  7926  00497E  0E05               	movlw	5
  7927  004980  6E1F               	movwf	?_Write_b_eep,c
  7928  004982  0E01               	movlw	1
  7929  004984  6E21               	movwf	?_Write_b_eep+2,c
  7930  004986  EC2D  F005         	call	_Write_b_eep	;wreg free
  7931  00498A  D7EC               	goto	L4
  7932  00498C                     l882:
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;main.c: 1920: rv = 0;
  7936  00498C  0100               	movlb	0	; () banked
  7937  00498E  6B9C               	clrf	doModeSLCAN@rv& (0+255),b
  7938  004990  D063               	goto	l16869
  7939  004992                     l16837:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;main.c: 1928: (Busy_eep(), Write_b_eep(0x01,0xFF));
  7943  004992  EC43  F004         	call	_Busy_eep	;wreg free
  7944  004996  6A20               	clrf	?_Write_b_eep+1,c
  7945  004998  0E01               	movlw	1
  7946  00499A  6E1F               	movwf	?_Write_b_eep,c
  7947  00499C  0EFF               	movlw	255
  7948  00499E  6821               	setf	?_Write_b_eep+2,c
  7949  0049A0  EC2D  F005         	call	_Write_b_eep	;wreg free
  7950  0049A4  00FF               	reset		;# 
  7951                           
  7952                           ;main.c: 1930: break;
  7953  0049A6  D058               	goto	l16869
  7954  0049A8                     l16841:
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;main.c: 1934: if ( 'v' == cmdbuf[1] &&
  7958                           ;main.c: 1935: 's' == cmdbuf[2] &&
  7959                           ;main.c: 1936: 'c' == cmdbuf[3] &&
  7960                           ;main.c: 1937: 'p' == cmdbuf[4] ) {
  7961  0049A8  0101               	movlb	1	; () banked
  7962  0049AA  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  7963  0049AC  0A76               	xorlw	118
  7964  0049AE  E10D               	bnz	l16851
  7965                           
  7966                           ; BSR set to: 1
  7967  0049B0  5107               	movf	(_cmdbuf+2)& (0+255),w,b
  7968  0049B2  0A73               	xorlw	115
  7969  0049B4  E10A               	bnz	l16851
  7970                           
  7971                           ; BSR set to: 1
  7972  0049B6  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  7973  0049B8  0A63               	xorlw	99
  7974  0049BA  E107               	bnz	l16851
  7975                           
  7976                           ; BSR set to: 1
  7977  0049BC  5109               	movf	(_cmdbuf+4)& (0+255),w,b
  7978  0049BE  0A70               	xorlw	112
  7979  0049C0  E104               	bnz	l16851
  7980                           
  7981                           ; BSR set to: 1
  7982                           ;main.c: 1938: mode = 1;
  7983  0049C2  0E01               	movlw	1
  7984  0049C4  0100               	movlb	0	; () banked
  7985  0049C6  6FEC               	movwf	_mode& (0+255),b
  7986                           
  7987                           ;main.c: 1939: }
  7988  0049C8  D047               	goto	l16869
  7989  0049CA                     l16851:
  7990                           
  7991                           ; BSR set to: 1
  7992                           ;main.c: 1940: else if ( 'v' == cmdbuf[1] &&
  7993                           ;main.c: 1941: 'e' == cmdbuf[2] &&
  7994                           ;main.c: 1942: 'r' == cmdbuf[3] &&
  7995                           ;main.c: 1943: 'b' == cmdbuf[4] ) {
  7996  0049CA  5106               	movf	(_cmdbuf+1)& (0+255),w,b
  7997  0049CC  0A76               	xorlw	118
  7998  0049CE  E144               	bnz	l16869
  7999                           
  8000                           ; BSR set to: 1
  8001  0049D0  5107               	movf	(_cmdbuf+2)& (0+255),w,b
  8002  0049D2  0A65               	xorlw	101
  8003  0049D4  E141               	bnz	l16869
  8004                           
  8005                           ; BSR set to: 1
  8006  0049D6  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  8007  0049D8  0A72               	xorlw	114
  8008  0049DA  E13E               	bnz	l16869
  8009                           
  8010                           ; BSR set to: 1
  8011  0049DC  5109               	movf	(_cmdbuf+4)& (0+255),w,b
  8012  0049DE  0A62               	xorlw	98
  8013  0049E0  E13B               	bnz	l16869
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;main.c: 1944: mode = 0;
  8017  0049E2  0100               	movlb	0	; () banked
  8018  0049E4  6BEC               	clrf	_mode& (0+255),b
  8019  0049E6  D038               	goto	l16869
  8020  0049E8                     l16861:
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;main.c: 1949: {
  8024                           ;main.c: 1951: if (0 == strlen(cmdbuf)) {
  8025  0049E8  0101               	movlb	1	; () banked
  8026  0049EA  0E01               	movlw	high _cmdbuf
  8027  0049EC  6E20               	movwf	?_strlen+1,c
  8028  0049EE  0E05               	movlw	low _cmdbuf
  8029  0049F0  6E1F               	movwf	?_strlen,c
  8030  0049F2  ECB9  F005         	call	_strlen	;wreg free
  8031  0049F6  5020               	movf	?_strlen+1,w,c
  8032  0049F8  101F               	iorwf	?_strlen,w,c
  8033  0049FA  E0B4               	bz	L4
  8034  0049FC  D02D               	goto	l16869
  8035  0049FE                     l16867:
  8036                           
  8037                           ; BSR set to: 0
  8038  0049FE  519B               	movf	doModeSLCAN@c& (0+255),w,b
  8039                           
  8040                           ; Switch size 1, requested type "space"
  8041                           ; Number of cases is 17, Range of values is 64 to 116
  8042                           ; switch strategies available:
  8043                           ; Name         Instructions Cycles
  8044                           ; simple_byte           52    27 (average)
  8045                           ;	Chosen strategy is simple_byte
  8046  004A00  0A40               	xorlw	64	; case 64
  8047  004A02  E0D2               	bz	l16841
  8048  004A04  0A02               	xorlw	2	; case 66
  8049  004A06  E0C5               	bz	l16837
  8050  004A08  0A01               	xorlw	1	; case 67
  8051  004A0A  E101 D6D8          	bz	l16773
  8052  004A0E  0A05               	xorlw	5	; case 70
  8053  004A10  E101 D775          	bz	l16807
  8054  004A14  0A0C               	xorlw	12	; case 74
  8055  004A16  E101 D67C          	bz	l16739
  8056  004A1A  0A07               	xorlw	7	; case 77
  8057  004A1C  E0A3               	bz	L4
  8058  004A1E  0A03               	xorlw	3	; case 78
  8059  004A20  E101 D69B          	bz	l16751
  8060  004A24  0A01               	xorlw	1	; case 79
  8061  004A26  E101 D6B2          	bz	l16761
  8062  004A2A  0A1D               	xorlw	29	; case 82
  8063  004A2C  E015               	bz	l16869
  8064  004A2E  0A01               	xorlw	1	; case 83
  8065  004A30  E101 D6A5          	bz	l16757
  8066  004A34  0A07               	xorlw	7	; case 84
  8067  004A36  E101 D6D7          	bz	l16783
  8068  004A3A  0A02               	xorlw	2	; case 86
  8069  004A3C  E101 D67B          	bz	l16745
  8070  004A40  0A0C               	xorlw	12	; case 90
  8071  004A42  E101 D771          	bz	l16817
  8072  004A46  0A37               	xorlw	55	; case 109
  8073  004A48  E08D               	bz	L4
  8074  004A4A  0A1F               	xorlw	31	; case 114
  8075  004A4C  E005               	bz	l16869
  8076  004A4E  0A01               	xorlw	1	; case 115
  8077  004A50  E101 D698          	bz	l857
  8078  004A54  0A07               	xorlw	7	; case 116
  8079  004A56  E1C8               	bnz	l16861
  8080  004A58                     l16869:
  8081                           
  8082                           ;main.c: 1959: if (rv) {
  8083  004A58  0100               	movlb	0	; () banked
  8084  004A5A  519C               	movf	doModeSLCAN@rv& (0+255),w,b
  8085  004A5C  E007               	bz	l16873
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;main.c: 1961: putsUSART((char *) "\r");
  8089  004A5E  0E7C               	movlw	high STR_176
  8090  004A60  6E21               	movwf	?_putsUSART+1,c
  8091  004A62  0EF3               	movlw	low STR_176
  8092  004A64  6E20               	movwf	?_putsUSART,c
  8093  004A66  EC03  F007         	call	_putsUSART	;wreg free
  8094                           
  8095                           ;main.c: 1962: }
  8096  004A6A  D006               	goto	l16875
  8097  004A6C                     l16873:
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;main.c: 1963: else {
  8101                           ;main.c: 1965: putsUSART((char *) "\a");
  8102  004A6C  0E7C               	movlw	high STR_177
  8103  004A6E  6E21               	movwf	?_putsUSART+1,c
  8104  004A70  0EF1               	movlw	low STR_177
  8105  004A72  6E20               	movwf	?_putsUSART,c
  8106  004A74  EC03  F007         	call	_putsUSART	;wreg free
  8107  004A78                     l16875:
  8108                           
  8109                           ;main.c: 1966: }
  8110                           ;main.c: 1969: memset( cmdbuf, 0, sizeof( cmdbuf ) );
  8111  004A78  0101               	movlb	1	; () banked
  8112  004A7A  0E01               	movlw	high _cmdbuf
  8113  004A7C  6E20               	movwf	?_memset+1,c
  8114  004A7E  0E05               	movlw	low _cmdbuf
  8115  004A80  ECBD  F00B         	call	PL26	;call to abstracted procedure
  8116  004A84  ECE8  F004         	call	_memset	;wreg free
  8117                           
  8118                           ;main.c: 1970: pos = 0;
  8119  004A88  0101               	movlb	1	; () banked
  8120  004A8A  6B03               	clrf	_pos& (0+255),b
  8121  004A8C                     l16879:
  8122                           
  8123                           ;main.c: 1972: }
  8124                           ;main.c: 1975: (INTCONbits.GIE = 1);
  8125  004A8C  8EF2               	bsf	intcon,7,c	;volatile
  8126  004A8E                     l847:
  8127  004A8E  0012               	return	
  8128  004A90                     __end_of_doModeSLCAN:
  8129                           	opt stack 0
  8130  004A90                     PL108:
  8131                           	opt stack 22
  8132  004A90  90D8               	bcf	status,0,c
  8133  004A92  3792               	rlcf	(??_doModeSLCAN+3)& (0+255),f,b
  8134  004A94  3793               	rlcf	(??_doModeSLCAN+4)& (0+255),f,b
  8135  004A96  3794               	rlcf	(??_doModeSLCAN+5)& (0+255),f,b
  8136  004A98  3795               	rlcf	(??_doModeSLCAN+6)& (0+255),f,b
  8137  004A9A  0012               	return	
  8138  004A9C                     __end_ofPL108:
  8139                           	opt stack 0
  8140                           tblptru	equ	0xFF8
  8141                           tblptrh	equ	0xFF7
  8142                           tblptrl	equ	0xFF6
  8143                           tablat	equ	0xFF5
  8144                           prodh	equ	0xFF4
  8145                           prodl	equ	0xFF3
  8146                           intcon	equ	0xFF2
  8147                           indf0	equ	0xFEF
  8148                           postinc0	equ	0xFEE
  8149                           fsr0h	equ	0xFEA
  8150                           fsr0l	equ	0xFE9
  8151                           wreg	equ	0xFE8
  8152                           indf1	equ	0xFE7
  8153                           postinc1	equ	0xFE6
  8154                           postdec1	equ	0xFE5
  8155                           fsr1h	equ	0xFE2
  8156                           fsr1l	equ	0xFE1
  8157                           indf2	equ	0xFDF
  8158                           postinc2	equ	0xFDE
  8159                           postdec2	equ	0xFDD
  8160                           plusw2	equ	0xFDB
  8161                           fsr2h	equ	0xFDA
  8162                           fsr2l	equ	0xFD9
  8163                           status	equ	0xFD8
  8164                           
  8165 ;; *************** function _hexStringToBytes *****************
  8166 ;; Defined at:
  8167 ;;		line 35 in file "hexutils.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;  buf             2   34[COMRAM] PTR unsigned char 
  8170 ;;		 -> wrkbuf(80), 
  8171 ;;  size            1   36[COMRAM] unsigned char 
  8172 ;;  inhex           2   37[COMRAM] PTR unsigned char 
  8173 ;;		 -> cmdbuf(80), 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  i               2    7[BANK0 ] int 
  8176 ;;  p               2    5[BANK0 ] PTR unsigned char 
  8177 ;;		 -> cmdbuf(80), 
  8178 ;;  len             2    3[BANK0 ] int 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      unsigned char 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : F/1
  8185 ;;		On exit  : F/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8188 ;;      Params:         5       0       0       0       0       0       0
  8189 ;;      Locals:         0       6       0       0       0       0       0
  8190 ;;      Temps:          0       3       0       0       0       0       0
  8191 ;;      Totals:         5       9       0       0       0       0       0
  8192 ;;Total ram usage:       14 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    4
  8195 ;; This function calls:
  8196 ;;		_strlen
  8197 ;;		_nibbleFromChar
  8198 ;; This function is called by:
  8199 ;;		_doModeSLCAN
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text3
  8204  00164E                     __ptext3:
  8205                           	opt stack 0
  8206  00164E                     _hexStringToBytes:
  8207                           	opt stack 24
  8208                           
  8209                           ; BSR set to: 1
  8210                           ;hexutils.c: 36: uint8_t *p;
  8211                           ;hexutils.c: 37: int len, i;
  8212                           ;hexutils.c: 39: len = strlen(inhex) / 2;
  8213                           
  8214                           ;incstack = 0
  8215                           ;incstack = 0
  8216  00164E  C026  F01F         	movff	hexStringToBytes@inhex,?_strlen
  8217  001652  C027  F020         	movff	hexStringToBytes@inhex+1,?_strlen+1
  8218  001656  ECB9  F005         	call	_strlen	;wreg free
  8219  00165A  90D8               	bcf	status,0,c
  8220  00165C  3020               	rrcf	?_strlen+1,w,c
  8221  00165E  0100               	movlb	0	; () banked
  8222  001660  6F64               	movwf	(hexStringToBytes@len+1)& (0+255),b
  8223  001662  301F               	rrcf	?_strlen,w,c
  8224  001664  6F63               	movwf	hexStringToBytes@len& (0+255),b
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;hexutils.c: 40: if (len > size) return 0;
  8228  001666  5025               	movf	hexStringToBytes@size,w,c
  8229  001668  6F60               	movwf	??_hexStringToBytes& (0+255),b
  8230  00166A  6B61               	clrf	(??_hexStringToBytes+1)& (0+255),b
  8231  00166C  5161               	movf	(??_hexStringToBytes+1)& (0+255),w,b
  8232  00166E  0A80               	xorlw	128
  8233  001670  6F62               	movwf	(??_hexStringToBytes+2)& (0+255),b
  8234  001672  5163               	movf	hexStringToBytes@len& (0+255),w,b
  8235  001674  5D60               	subwf	??_hexStringToBytes& (0+255),w,b
  8236  001676  5164               	movf	(hexStringToBytes@len+1)& (0+255),w,b
  8237  001678  0A80               	xorlw	128
  8238  00167A  5962               	subwfb	(??_hexStringToBytes+2)& (0+255),w,b
  8239  00167C  E202               	bc	l1730
  8240                           
  8241                           ; BSR set to: 0
  8242  00167E  0E00               	movlw	0
  8243  001680  D033               	goto	l1731
  8244  001682                     l1730:
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;hexutils.c: 41: for (i = 0, p = (uint8_t *) inhex; i < len; i++) {
  8248  001682  6B67               	clrf	hexStringToBytes@i& (0+255),b
  8249  001684  6B68               	clrf	(hexStringToBytes@i+1)& (0+255),b
  8250  001686  C026  F065         	movff	hexStringToBytes@inhex,hexStringToBytes@p
  8251  00168A  C027  F066         	movff	hexStringToBytes@inhex+1,hexStringToBytes@p+1
  8252  00168E  D022               	goto	l18623
  8253  001690                     l18617:
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;hexutils.c: 42: buf[ i ] = (nibbleFromChar(*p) << 4) | nibbleFromChar(*(p + 1));
  8257  001690  5167               	movf	hexStringToBytes@i& (0+255),w,b
  8258  001692  2423               	addwf	hexStringToBytes@buf,w,c
  8259  001694  6ED9               	movwf	fsr2l,c
  8260  001696  5168               	movf	(hexStringToBytes@i+1)& (0+255),w,b
  8261  001698  2024               	addwfc	hexStringToBytes@buf+1,w,c
  8262  00169A  6EDA               	movwf	fsr2h,c
  8263  00169C  EE10 F001          	lfsr	1,1
  8264  0016A0  5165               	movf	hexStringToBytes@p& (0+255),w,b
  8265  0016A2  26E1               	addwf	fsr1l,f,c
  8266  0016A4  5166               	movf	(hexStringToBytes@p+1)& (0+255),w,b
  8267  0016A6  22E2               	addwfc	fsr1h,f,c
  8268  0016A8  50E7               	movf	indf1,w,c
  8269  0016AA  EC15  F006         	call	_nibbleFromChar
  8270  0016AE  6F60               	movwf	??_hexStringToBytes& (0+255),b
  8271  0016B0  C065  FFE1         	movff	hexStringToBytes@p,fsr1l
  8272  0016B4  C066  FFE2         	movff	hexStringToBytes@p+1,fsr1h
  8273  0016B8  50E7               	movf	indf1,w,c
  8274  0016BA  EC15  F006         	call	_nibbleFromChar
  8275  0016BE  6F61               	movwf	(??_hexStringToBytes+1)& (0+255),b
  8276  0016C0  3961               	swapf	(??_hexStringToBytes+1)& (0+255),w,b
  8277  0016C2  0BF0               	andlw	240
  8278  0016C4  1160               	iorwf	??_hexStringToBytes& (0+255),w,b
  8279  0016C6  6EDF               	movwf	indf2,c
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;hexutils.c: 43: p += 2;
  8283  0016C8  0E02               	movlw	2
  8284  0016CA  2765               	addwf	hexStringToBytes@p& (0+255),f,b
  8285  0016CC  0E00               	movlw	0
  8286  0016CE  2366               	addwfc	(hexStringToBytes@p+1)& (0+255),f,b
  8287                           
  8288                           ; BSR set to: 0
  8289  0016D0  4B67               	infsnz	hexStringToBytes@i& (0+255),f,b
  8290  0016D2  2B68               	incf	(hexStringToBytes@i+1)& (0+255),f,b
  8291  0016D4                     l18623:
  8292                           
  8293                           ; BSR set to: 0
  8294  0016D4  5168               	movf	(hexStringToBytes@i+1)& (0+255),w,b
  8295  0016D6  0A80               	xorlw	128
  8296  0016D8  6F60               	movwf	??_hexStringToBytes& (0+255),b
  8297  0016DA  5163               	movf	hexStringToBytes@len& (0+255),w,b
  8298  0016DC  5D67               	subwf	hexStringToBytes@i& (0+255),w,b
  8299  0016DE  5164               	movf	(hexStringToBytes@len+1)& (0+255),w,b
  8300  0016E0  0A80               	xorlw	128
  8301  0016E2  5960               	subwfb	??_hexStringToBytes& (0+255),w,b
  8302  0016E4  E3D5               	bnc	l18617
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;hexutils.c: 44: }
  8306                           ;hexutils.c: 46: return i;
  8307  0016E6  5167               	movf	hexStringToBytes@i& (0+255),w,b
  8308  0016E8                     l1731:
  8309                           
  8310                           ; BSR set to: 0
  8311  0016E8  0012               	return	
  8312  0016EA                     __end_of_hexStringToBytes:
  8313                           	opt stack 0
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           intcon	equ	0xFF2
  8321                           indf0	equ	0xFEF
  8322                           postinc0	equ	0xFEE
  8323                           fsr0h	equ	0xFEA
  8324                           fsr0l	equ	0xFE9
  8325                           wreg	equ	0xFE8
  8326                           indf1	equ	0xFE7
  8327                           postinc1	equ	0xFE6
  8328                           postdec1	equ	0xFE5
  8329                           fsr1h	equ	0xFE2
  8330                           fsr1l	equ	0xFE1
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           plusw2	equ	0xFDB
  8335                           fsr2h	equ	0xFDA
  8336                           fsr2l	equ	0xFD9
  8337                           status	equ	0xFD8
  8338                           
  8339 ;; *************** function _nibbleFromChar *****************
  8340 ;; Defined at:
  8341 ;;		line 20 in file "hexutils.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  c               1    wreg     unsigned char 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  c               1   30[COMRAM] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      unsigned char 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0
  8350 ;; Tracked objects:
  8351 ;;		On entry : F/0
  8352 ;;		On exit  : F/0
  8353 ;;		Unchanged: F/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8355 ;;      Params:         0       0       0       0       0       0       0
  8356 ;;      Locals:         1       0       0       0       0       0       0
  8357 ;;      Temps:          0       0       0       0       0       0       0
  8358 ;;      Totals:         1       0       0       0       0       0       0
  8359 ;;Total ram usage:        1 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    3
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		_hexStringToBytes
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text4
  8370  000C2A                     __ptext4:
  8371                           	opt stack 0
  8372  000C2A                     _nibbleFromChar:
  8373                           	opt stack 24
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;incstack = 0
  8377                           ;incstack = 0
  8378                           ;nibbleFromChar@c stored from wreg
  8379  000C2A  CFE8 F01F          	movff	wreg,nibbleFromChar@c
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;hexutils.c: 21: if (c >= '0' && c <= '9') return c - '0';
  8383  000C2E  0E2F               	movlw	47
  8384  000C30  641F               	cpfsgt	nibbleFromChar@c,c
  8385  000C32  D006               	goto	l18901
  8386                           
  8387                           ; BSR set to: 0
  8388  000C34  0E3A               	movlw	58
  8389  000C36  601F               	cpfslt	nibbleFromChar@c,c
  8390  000C38  D003               	goto	l18901
  8391                           
  8392                           ; BSR set to: 0
  8393  000C3A  501F               	movf	nibbleFromChar@c,w,c
  8394  000C3C  0FD0               	addlw	208
  8395  000C3E  D013               	goto	l1725
  8396  000C40                     l18901:
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;hexutils.c: 22: if (c >= 'a' && c <= 'f') return c - 'a' + 10;
  8400  000C40  0E60               	movlw	96
  8401  000C42  641F               	cpfsgt	nibbleFromChar@c,c
  8402  000C44  D006               	goto	l18909
  8403                           
  8404                           ; BSR set to: 0
  8405  000C46  0E67               	movlw	103
  8406  000C48  601F               	cpfslt	nibbleFromChar@c,c
  8407  000C4A  D003               	goto	l18909
  8408                           
  8409                           ; BSR set to: 0
  8410  000C4C  501F               	movf	nibbleFromChar@c,w,c
  8411  000C4E  0FA9               	addlw	169
  8412  000C50  D00A               	goto	l1725
  8413  000C52                     l18909:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;hexutils.c: 23: if (c >= 'A' && c <= 'F') return c - 'A' + 10;
  8417  000C52  0E40               	movlw	64
  8418  000C54  641F               	cpfsgt	nibbleFromChar@c,c
  8419  000C56  D006               	goto	l18917
  8420                           
  8421                           ; BSR set to: 0
  8422  000C58  0E47               	movlw	71
  8423  000C5A  601F               	cpfslt	nibbleFromChar@c,c
  8424  000C5C  D003               	goto	l18917
  8425                           
  8426                           ; BSR set to: 0
  8427  000C5E  501F               	movf	nibbleFromChar@c,w,c
  8428  000C60  0FC9               	addlw	201
  8429  000C62  D001               	goto	l1725
  8430  000C64                     l18917:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;hexutils.c: 24: return 255;
  8434  000C64  0EFF               	movlw	255
  8435  000C66                     l1725:
  8436                           
  8437                           ; BSR set to: 0
  8438  000C66  0012               	return	
  8439  000C68                     __end_of_nibbleFromChar:
  8440                           	opt stack 0
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           indf0	equ	0xFEF
  8449                           postinc0	equ	0xFEE
  8450                           fsr0h	equ	0xFEA
  8451                           fsr0l	equ	0xFE9
  8452                           wreg	equ	0xFE8
  8453                           indf1	equ	0xFE7
  8454                           postinc1	equ	0xFE6
  8455                           postdec1	equ	0xFE5
  8456                           fsr1h	equ	0xFE2
  8457                           fsr1l	equ	0xFE1
  8458                           indf2	equ	0xFDF
  8459                           postinc2	equ	0xFDE
  8460                           postdec2	equ	0xFDD
  8461                           plusw2	equ	0xFDB
  8462                           fsr2h	equ	0xFDA
  8463                           fsr2l	equ	0xFD9
  8464                           status	equ	0xFD8
  8465                           
  8466 ;; *************** function _receiveSendEventSLCAN *****************
  8467 ;; Defined at:
  8468 ;;		line 2610 in file "main.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;  id              4   29[BANK0 ] unsigned long 
  8473 ;;  i               2   34[BANK0 ] int 
  8474 ;;  dlc             1   33[BANK0 ] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      enum E15660
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : F/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8484 ;;      Params:         0       0       0       0       0       0       0
  8485 ;;      Locals:         0       7       0       0       0       0       0
  8486 ;;      Temps:          0       3       0       0       0       0       0
  8487 ;;      Totals:         0      10       0       0       0       0       0
  8488 ;;Total ram usage:       10 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    6
  8491 ;; This function calls:
  8492 ;;		_putsUSART
  8493 ;;		_WriteUSART
  8494 ;;		_strlen
  8495 ;;		_getCANFrame
  8496 ;;		_ultoa
  8497 ;;		_itoa
  8498 ;; This function is called by:
  8499 ;;		_doModeSLCAN
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text5
  8504  002E68                     __ptext5:
  8505                           	opt stack 0
  8506  002E68                     _receiveSendEventSLCAN:
  8507                           	opt stack 22
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;main.c: 2611: int i;
  8511                           ;main.c: 2612: uint8_t dlc;
  8512                           ;main.c: 2613: uint32_t id;
  8513                           ;main.c: 2615: if (getCANFrame(&id, &dlc, vscpData)) {
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;incstack = 0
  8517                           ;incstack = 0
  8518  002E68  0E00               	movlw	high receiveSendEventSLCAN@dlc
  8519  002E6A  6F66               	movwf	(?_getCANFrame+1)& (0+255),b
  8520  002E6C  0E81               	movlw	low receiveSendEventSLCAN@dlc
  8521  002E6E  6F65               	movwf	?_getCANFrame& (0+255),b
  8522  002E70  0E01               	movlw	high _vscpData
  8523  002E72  0100               	movlb	0	; () banked
  8524  002E74  6F68               	movwf	(?_getCANFrame+3)& (0+255),b
  8525  002E76  0EA5               	movlw	low _vscpData
  8526  002E78  6F67               	movwf	(?_getCANFrame+2)& (0+255),b
  8527  002E7A  0E7D               	movlw	receiveSendEventSLCAN@id& (0+255)
  8528  002E7C  EC94  F00A         	call	_getCANFrame
  8529  002E80  0900               	iorlw	0
  8530  002E82  E101 D0AF          	bz	l1204
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;main.c: 2618: cntRxFrames++;
  8534  002E86  2BCD               	incf	_cntRxFrames& (0+255),f,b
  8535  002E88  0E00               	movlw	0
  8536  002E8A  23CE               	addwfc	(_cntRxFrames+1)& (0+255),f,b
  8537  002E8C  23CF               	addwfc	(_cntRxFrames+2)& (0+255),f,b
  8538  002E8E  23D0               	addwfc	(_cntRxFrames+3)& (0+255),f,b
  8539                           
  8540                           ;main.c: 2619: cntRxBytes += dlc;
  8541  002E90  5181               	movf	receiveSendEventSLCAN@dlc& (0+255),w,b
  8542  002E92  27C9               	addwf	_cntRxBytes& (0+255),f,b
  8543  002E94  0E00               	movlw	0
  8544  002E96  23CA               	addwfc	(_cntRxBytes+1)& (0+255),f,b
  8545  002E98  23CB               	addwfc	(_cntRxBytes+2)& (0+255),f,b
  8546  002E9A  23CC               	addwfc	(_cntRxBytes+3)& (0+255),f,b
  8547  002E9C                     l1177:
  8548                           
  8549                           ; BSR set to: 0
  8550  002E9C  A2AC               	btfss	4012,1,c	;volatile
  8551  002E9E  D7FE               	goto	l1177
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;main.c: 2622: WriteUSART('T');
  8555  002EA0  0E54               	movlw	84
  8556  002EA2  EC77  F004         	call	_WriteUSART
  8557                           
  8558                           ;main.c: 2624: ultoa(wrkbuf, id, 16);
  8559  002EA6  0E01               	movlw	high _wrkbuf
  8560  002EA8  0100               	movlb	0	; () banked
  8561  002EAA  6F6E               	movwf	(?_ultoa+1)& (0+255),b
  8562  002EAC  0E55               	movlw	low _wrkbuf
  8563  002EAE  6F6D               	movwf	?_ultoa& (0+255),b
  8564  002EB0  C07D  F06F         	movff	receiveSendEventSLCAN@id,?_ultoa+2
  8565  002EB4  C07E  F070         	movff	receiveSendEventSLCAN@id+1,?_ultoa+3
  8566  002EB8  C07F  F071         	movff	receiveSendEventSLCAN@id+2,?_ultoa+4
  8567  002EBC  C080  F072         	movff	receiveSendEventSLCAN@id+3,?_ultoa+5
  8568  002EC0  6B74               	clrf	(?_ultoa+7)& (0+255),b
  8569  002EC2  0E10               	movlw	16
  8570  002EC4  6F73               	movwf	(?_ultoa+6)& (0+255),b
  8571  002EC6  EC82  F010         	call	_ultoa	;wreg free
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;main.c: 2626: for (i = 0; i < ((uint8_t) (8 - sizeof (wrkbuf))); i++) {
  8575  002ECA  6B82               	clrf	receiveSendEventSLCAN@i& (0+255),b
  8576  002ECC  6B83               	clrf	(receiveSendEventSLCAN@i+1)& (0+255),b
  8577  002ECE                     l1182:
  8578                           
  8579                           ; BSR set to: 0
  8580  002ECE  A2AC               	btfss	4012,1,c	;volatile
  8581  002ED0  D7FE               	goto	l1182
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;main.c: 2628: WriteUSART('0');
  8585  002ED2  0E30               	movlw	48
  8586  002ED4  EC77  F004         	call	_WriteUSART
  8587                           
  8588                           ; BSR set to: 0
  8589  002ED8  D886               	call	PL122	;call to abstracted procedure
  8590  002EDA  B4D8               	btfsc	status,2,c
  8591  002EDC  5D82               	subwf	receiveSendEventSLCAN@i& (0+255),w,b
  8592  002EDE  E3F7               	bnc	l1182
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;main.c: 2629: }
  8596                           ;main.c: 2630: putsUSART(wrkbuf);
  8597  002EE0  0101               	movlb	1	; () banked
  8598  002EE2  0E01               	movlw	high _wrkbuf
  8599  002EE4  6E21               	movwf	?_putsUSART+1,c
  8600  002EE6  0E55               	movlw	low _wrkbuf
  8601  002EE8  6E20               	movwf	?_putsUSART,c
  8602  002EEA  EC03  F007         	call	_putsUSART	;wreg free
  8603                           
  8604                           ;main.c: 2633: itoa(wrkbuf, dlc, 16);
  8605  002EEE  0E01               	movlw	high _wrkbuf
  8606  002EF0  0100               	movlb	0	; () banked
  8607  002EF2  6F6A               	movwf	(?_itoa+1)& (0+255),b
  8608  002EF4  0E55               	movlw	low _wrkbuf
  8609  002EF6  6F69               	movwf	?_itoa& (0+255),b
  8610  002EF8  C081  F06B         	movff	receiveSendEventSLCAN@dlc,?_itoa+2
  8611  002EFC  6B6C               	clrf	(?_itoa+3)& (0+255),b
  8612  002EFE  6B6E               	clrf	(?_itoa+5)& (0+255),b
  8613  002F00  0E10               	movlw	16
  8614  002F02  6F6D               	movwf	(?_itoa+4)& (0+255),b
  8615  002F04  EC47  F005         	call	_itoa	;wreg free
  8616  002F08                     l1185:
  8617                           
  8618                           ; BSR set to: 0
  8619  002F08  A2AC               	btfss	4012,1,c	;volatile
  8620  002F0A  D7FE               	goto	l1185
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;main.c: 2635: WriteUSART(wrkbuf[0]);
  8624  002F0C  0101               	movlb	1	; () banked
  8625  002F0E  5155               	movf	_wrkbuf& (0+255),w,b
  8626  002F10  EC77  F004         	call	_WriteUSART
  8627                           
  8628                           ;main.c: 2638: for (i = 0; i < dlc; i++) {
  8629  002F14  0100               	movlb	0	; () banked
  8630  002F16  6B82               	clrf	receiveSendEventSLCAN@i& (0+255),b
  8631  002F18  6B83               	clrf	(receiveSendEventSLCAN@i+1)& (0+255),b
  8632  002F1A  D02D               	goto	l18575
  8633  002F1C                     l18563:
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;main.c: 2639: itoa(wrkbuf, vscpData[i], 16);
  8637  002F1C  0E01               	movlw	high _wrkbuf
  8638  002F1E  0100               	movlb	0	; () banked
  8639  002F20  6F6A               	movwf	(?_itoa+1)& (0+255),b
  8640  002F22  0E55               	movlw	low _wrkbuf
  8641  002F24  6F69               	movwf	?_itoa& (0+255),b
  8642  002F26  0EA5               	movlw	low _vscpData
  8643  002F28  2582               	addwf	receiveSendEventSLCAN@i& (0+255),w,b
  8644  002F2A  6ED9               	movwf	fsr2l,c
  8645  002F2C  0E01               	movlw	high _vscpData
  8646  002F2E  2183               	addwfc	(receiveSendEventSLCAN@i+1)& (0+255),w,b
  8647  002F30  6EDA               	movwf	fsr2h,c
  8648  002F32  50DF               	movf	indf2,w,c
  8649  002F34  6F6B               	movwf	(?_itoa+2)& (0+255),b
  8650  002F36  6B6C               	clrf	(?_itoa+3)& (0+255),b
  8651  002F38  6B6E               	clrf	(?_itoa+5)& (0+255),b
  8652  002F3A  0E10               	movlw	16
  8653  002F3C  6F6D               	movwf	(?_itoa+4)& (0+255),b
  8654  002F3E  EC47  F005         	call	_itoa	;wreg free
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;main.c: 2641: if (2 != strlen(wrkbuf)) {
  8658  002F42  0101               	movlb	1	; () banked
  8659  002F44  0E01               	movlw	high _wrkbuf
  8660  002F46  6E20               	movwf	?_strlen+1,c
  8661  002F48  0E55               	movlw	low _wrkbuf
  8662  002F4A  6E1F               	movwf	?_strlen,c
  8663  002F4C  ECB9  F005         	call	_strlen	;wreg free
  8664  002F50  501F               	movf	?_strlen,w,c
  8665  002F52  0A02               	xorlw	2
  8666  002F54  1020               	iorwf	?_strlen+1,w,c
  8667  002F56  E005               	bz	l18571
  8668  002F58                     l1191:
  8669  002F58  A2AC               	btfss	4012,1,c	;volatile
  8670  002F5A  D7FE               	goto	l1191
  8671                           
  8672                           ;main.c: 2643: WriteUSART('0');
  8673  002F5C  0E30               	movlw	48
  8674  002F5E  EC77  F004         	call	_WriteUSART
  8675  002F62                     l18571:
  8676                           
  8677                           ;main.c: 2644: }
  8678                           ;main.c: 2646: putsUSART(wrkbuf);
  8679  002F62  0101               	movlb	1	; () banked
  8680  002F64  0E01               	movlw	high _wrkbuf
  8681  002F66  6E21               	movwf	?_putsUSART+1,c
  8682  002F68  0E55               	movlw	low _wrkbuf
  8683  002F6A  6E20               	movwf	?_putsUSART,c
  8684  002F6C  EC03  F007         	call	_putsUSART	;wreg free
  8685  002F70  0100               	movlb	0	; () banked
  8686  002F72  4B82               	infsnz	receiveSendEventSLCAN@i& (0+255),f,b
  8687  002F74  2B83               	incf	(receiveSendEventSLCAN@i+1)& (0+255),f,b
  8688  002F76                     l18575:
  8689                           
  8690                           ; BSR set to: 0
  8691  002F76  5181               	movf	receiveSendEventSLCAN@dlc& (0+255),w,b
  8692  002F78  6F7A               	movwf	??_receiveSendEventSLCAN& (0+255),b
  8693  002F7A  6B7B               	clrf	(??_receiveSendEventSLCAN+1)& (0+255),b
  8694  002F7C  5183               	movf	(receiveSendEventSLCAN@i+1)& (0+255),w,b
  8695  002F7E  0A80               	xorlw	128
  8696  002F80  6F7C               	movwf	(??_receiveSendEventSLCAN+2)& (0+255),b
  8697  002F82  517A               	movf	??_receiveSendEventSLCAN& (0+255),w,b
  8698  002F84  5D82               	subwf	receiveSendEventSLCAN@i& (0+255),w,b
  8699  002F86  517B               	movf	(??_receiveSendEventSLCAN+1)& (0+255),w,b
  8700  002F88  0A80               	xorlw	128
  8701  002F8A  597C               	subwfb	(??_receiveSendEventSLCAN+2)& (0+255),w,b
  8702  002F8C  E3C7               	bnc	l18563
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;main.c: 2647: }
  8706                           ;main.c: 2650: if (nTimeStamp) {
  8707  002F8E  51ED               	movf	_nTimeStamp& (0+255),w,b
  8708  002F90  E024               	bz	l1201
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;main.c: 2651: ultoa(wrkbuf, timer, 16);
  8712  002F92  0E01               	movlw	high _wrkbuf
  8713  002F94  0100               	movlb	0	; () banked
  8714  002F96  6F6E               	movwf	(?_ultoa+1)& (0+255),b
  8715  002F98  0E55               	movlw	low _wrkbuf
  8716  002F9A  6F6D               	movwf	?_ultoa& (0+255),b
  8717  002F9C  C0DD  F06F         	movff	_timer,?_ultoa+2	;volatile
  8718  002FA0  C0DE  F070         	movff	_timer+1,?_ultoa+3	;volatile
  8719  002FA4  C0DF  F071         	movff	_timer+2,?_ultoa+4	;volatile
  8720  002FA8  C0E0  F072         	movff	_timer+3,?_ultoa+5	;volatile
  8721  002FAC  6B74               	clrf	(?_ultoa+7)& (0+255),b
  8722  002FAE  0E10               	movlw	16
  8723  002FB0  6F73               	movwf	(?_ultoa+6)& (0+255),b
  8724  002FB2  EC82  F010         	call	_ultoa	;wreg free
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;main.c: 2653: for (i = 0; i < ((uint8_t) (8 - sizeof (wrkbuf))); i++) {
  8728  002FB6  6B82               	clrf	receiveSendEventSLCAN@i& (0+255),b
  8729  002FB8  6B83               	clrf	(receiveSendEventSLCAN@i+1)& (0+255),b
  8730  002FBA                     l1198:
  8731                           
  8732                           ; BSR set to: 0
  8733  002FBA  A2AC               	btfss	4012,1,c	;volatile
  8734  002FBC  D7FE               	goto	l1198
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;main.c: 2655: WriteUSART('0');
  8738  002FBE  0E30               	movlw	48
  8739  002FC0  EC77  F004         	call	_WriteUSART
  8740                           
  8741                           ; BSR set to: 0
  8742  002FC4  D810               	call	PL122	;call to abstracted procedure
  8743  002FC6  B4D8               	btfsc	status,2,c
  8744  002FC8  5D82               	subwf	receiveSendEventSLCAN@i& (0+255),w,b
  8745  002FCA  E3F7               	bnc	l1198
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;main.c: 2656: }
  8749                           ;main.c: 2657: putsUSART(wrkbuf);
  8750  002FCC  0101               	movlb	1	; () banked
  8751  002FCE  0E01               	movlw	high _wrkbuf
  8752  002FD0  6E21               	movwf	?_putsUSART+1,c
  8753  002FD2  0E55               	movlw	low _wrkbuf
  8754  002FD4  6E20               	movwf	?_putsUSART,c
  8755  002FD6  EC03  F007         	call	_putsUSART	;wreg free
  8756  002FDA                     l1201:
  8757  002FDA  A2AC               	btfss	4012,1,c	;volatile
  8758  002FDC  D7FE               	goto	l1201
  8759                           
  8760                           ;main.c: 2661: WriteUSART(0x0d);
  8761  002FDE  0E0D               	movlw	13
  8762  002FE0  EC77  F004         	call	_WriteUSART
  8763  002FE4                     l1204:
  8764  002FE4  0012               	return	
  8765  002FE6                     __end_of_receiveSendEventSLCAN:
  8766                           	opt stack 0
  8767  002FE6                     PL122:
  8768                           	opt stack 22
  8769  002FE6  0100               	movlb	0	; () banked
  8770  002FE8  4B82               	infsnz	receiveSendEventSLCAN@i& (0+255),f,b
  8771  002FEA  2B83               	incf	(receiveSendEventSLCAN@i+1)& (0+255),f,b
  8772  002FEC  5183               	movf	(receiveSendEventSLCAN@i+1)& (0+255),w,b
  8773  002FEE  0A80               	xorlw	128
  8774  002FF0  0F80               	addlw	-128
  8775  002FF2  0CB8               	retlw	184
  8776  002FF4                     __end_ofPL122:
  8777                           	opt stack 0
  8778                           tblptru	equ	0xFF8
  8779                           tblptrh	equ	0xFF7
  8780                           tblptrl	equ	0xFF6
  8781                           tablat	equ	0xFF5
  8782                           prodh	equ	0xFF4
  8783                           prodl	equ	0xFF3
  8784                           intcon	equ	0xFF2
  8785                           indf0	equ	0xFEF
  8786                           postinc0	equ	0xFEE
  8787                           fsr0h	equ	0xFEA
  8788                           fsr0l	equ	0xFE9
  8789                           wreg	equ	0xFE8
  8790                           indf1	equ	0xFE7
  8791                           postinc1	equ	0xFE6
  8792                           postdec1	equ	0xFE5
  8793                           fsr1h	equ	0xFE2
  8794                           fsr1l	equ	0xFE1
  8795                           indf2	equ	0xFDF
  8796                           postinc2	equ	0xFDE
  8797                           postdec2	equ	0xFDD
  8798                           plusw2	equ	0xFDB
  8799                           fsr2h	equ	0xFDA
  8800                           fsr2l	equ	0xFD9
  8801                           status	equ	0xFD8
  8802                           
  8803 ;; *************** function _ultoa *****************
  8804 ;; Defined at:
  8805 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ltoa.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  buf             2   13[BANK0 ] PTR unsigned char 
  8808 ;;		 -> wrkbuf(80), 
  8809 ;;  val             4   15[BANK0 ] unsigned long 
  8810 ;;  base            2   19[BANK0 ] int 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  v               4   21[BANK0 ] unsigned long 
  8813 ;;  c               1   25[BANK0 ] unsigned char 
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  2   13[BANK0 ] PTR unsigned char 
  8816 ;; Registers used:
  8817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : F/0
  8820 ;;		On exit  : F/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8823 ;;      Params:         0       8       0       0       0       0       0
  8824 ;;      Locals:         0       5       0       0       0       0       0
  8825 ;;      Temps:          0       0       0       0       0       0       0
  8826 ;;      Totals:         0      13       0       0       0       0       0
  8827 ;;Total ram usage:       13 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; Hardware stack levels required when called:    4
  8830 ;; This function calls:
  8831 ;;		___lldiv
  8832 ;;		___llmod
  8833 ;; This function is called by:
  8834 ;;		_receiveSendEventSLCAN
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text6
  8839  002104                     __ptext6:
  8840                           	opt stack 0
  8841  002104                     _ultoa:
  8842                           	opt stack 23
  8843                           
  8844                           ; BSR set to: 0
  8845                           
  8846                           ;incstack = 0
  8847                           ;incstack = 0
  8848  002104  C06F  F075         	movff	ultoa@val,ultoa@v
  8849  002108  C070  F076         	movff	ultoa@val+1,ultoa@v+1
  8850  00210C  C071  F077         	movff	ultoa@val+2,ultoa@v+2
  8851  002110  C072  F078         	movff	ultoa@val+3,ultoa@v+3
  8852  002114                     l18739:
  8853                           
  8854                           ; BSR set to: 0
  8855  002114  C075  F01F         	movff	ultoa@v,?___lldiv
  8856  002118  C076  F020         	movff	ultoa@v+1,?___lldiv+1
  8857  00211C  C077  F021         	movff	ultoa@v+2,?___lldiv+2
  8858  002120  C078  F022         	movff	ultoa@v+3,?___lldiv+3
  8859  002124  D858               	call	PL92	;call to abstracted procedure
  8860  002126  EC52  F009         	call	___lldiv	;wreg free
  8861  00212A  C022  F078         	movff	?___lldiv+3,ultoa@v+3
  8862  00212E  C021  F077         	movff	?___lldiv+2,ultoa@v+2
  8863  002132  C020  F076         	movff	?___lldiv+1,ultoa@v+1
  8864  002136  C01F  F075         	movff	?___lldiv,ultoa@v
  8865                           
  8866                           ; BSR set to: 0
  8867  00213A  4B6D               	infsnz	ultoa@buf& (0+255),f,b
  8868  00213C  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
  8869                           
  8870                           ; BSR set to: 0
  8871  00213E  5178               	movf	(ultoa@v+3)& (0+255),w,b
  8872  002140  1175               	iorwf	ultoa@v& (0+255),w,b
  8873  002142  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
  8874  002144  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
  8875  002146  E1E6               	bnz	l18739
  8876                           
  8877                           ; BSR set to: 0
  8878  002148  C06D  FFD9         	movff	ultoa@buf,fsr2l
  8879  00214C  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
  8880  002150  6ADF               	clrf	indf2,c
  8881                           
  8882                           ; BSR set to: 0
  8883  002152  076D               	decf	ultoa@buf& (0+255),f,b
  8884  002154  A0D8               	btfss	status,0,c
  8885  002156  076E               	decf	(ultoa@buf+1)& (0+255),f,b
  8886  002158                     l18749:
  8887                           
  8888                           ; BSR set to: 0
  8889  002158  C06F  F065         	movff	ultoa@val,?___llmod
  8890  00215C  C070  F066         	movff	ultoa@val+1,?___llmod+1
  8891  002160  C071  F067         	movff	ultoa@val+2,?___llmod+2
  8892  002164  C072  F068         	movff	ultoa@val+3,?___llmod+3
  8893  002168  C073  F069         	movff	ultoa@base,?___llmod+4
  8894  00216C  C074  F06A         	movff	ultoa@base+1,?___llmod+5
  8895  002170  0E00               	movlw	0
  8896  002172  BF6A               	btfsc	(?___llmod+5)& (0+255),7,b
  8897  002174  0EFF               	movlw	-1
  8898  002176  6F6B               	movwf	(?___llmod+6)& (0+255),b
  8899  002178  6F6C               	movwf	(?___llmod+7)& (0+255),b
  8900  00217A  EC13  F008         	call	___llmod	;wreg free
  8901  00217E  5165               	movf	?___llmod& (0+255),w,b
  8902  002180  6F79               	movwf	ultoa@c& (0+255),b
  8903                           
  8904                           ; BSR set to: 0
  8905  002182  C06F  F01F         	movff	ultoa@val,?___lldiv
  8906  002186  C070  F020         	movff	ultoa@val+1,?___lldiv+1
  8907  00218A  C071  F021         	movff	ultoa@val+2,?___lldiv+2
  8908  00218E  C072  F022         	movff	ultoa@val+3,?___lldiv+3
  8909  002192  D821               	call	PL92	;call to abstracted procedure
  8910  002194  EC52  F009         	call	___lldiv	;wreg free
  8911  002198  C022  F072         	movff	?___lldiv+3,ultoa@val+3
  8912  00219C  C021  F071         	movff	?___lldiv+2,ultoa@val+2
  8913  0021A0  C020  F070         	movff	?___lldiv+1,ultoa@val+1
  8914  0021A4  C01F  F06F         	movff	?___lldiv,ultoa@val
  8915                           
  8916                           ; BSR set to: 0
  8917  0021A8  0E09               	movlw	9
  8918  0021AA  6579               	cpfsgt	ultoa@c& (0+255),b
  8919  0021AC  D002               	goto	l2608
  8920                           
  8921                           ; BSR set to: 0
  8922  0021AE  0E07               	movlw	7
  8923  0021B0  2779               	addwf	ultoa@c& (0+255),f,b
  8924  0021B2                     l2608:
  8925                           
  8926                           ; BSR set to: 0
  8927  0021B2  0E30               	movlw	48
  8928  0021B4  2779               	addwf	ultoa@c& (0+255),f,b
  8929                           
  8930                           ; BSR set to: 0
  8931  0021B6  C06D  FFD9         	movff	ultoa@buf,fsr2l
  8932  0021BA  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
  8933  0021BE  C079  FFDF         	movff	ultoa@c,indf2
  8934                           
  8935                           ; BSR set to: 0
  8936  0021C2  076D               	decf	ultoa@buf& (0+255),f,b
  8937  0021C4  A0D8               	btfss	status,0,c
  8938  0021C6  076E               	decf	(ultoa@buf+1)& (0+255),f,b
  8939                           
  8940                           ; BSR set to: 0
  8941  0021C8  5172               	movf	(ultoa@val+3)& (0+255),w,b
  8942  0021CA  116F               	iorwf	ultoa@val& (0+255),w,b
  8943  0021CC  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
  8944  0021CE  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
  8945  0021D0  B4D8               	btfsc	status,2,c
  8946                           
  8947                           ; BSR set to: 0
  8948  0021D2  0012               	return	
  8949  0021D4  D7C1               	goto	l18749
  8950  0021D6                     __end_of_ultoa:
  8951                           	opt stack 0
  8952  0021D6                     PL92:
  8953                           	opt stack 23
  8954  0021D6  C073  F023         	movff	ultoa@base,?___lldiv+4
  8955  0021DA  C074  F024         	movff	ultoa@base+1,?___lldiv+5
  8956  0021DE  0E00               	movlw	0
  8957  0021E0  BE24               	btfsc	?___lldiv+5,7,c
  8958  0021E2  0EFF               	movlw	-1
  8959  0021E4  6E25               	movwf	?___lldiv+6,c
  8960  0021E6  6E26               	movwf	?___lldiv+7,c
  8961  0021E8  0012               	return	
  8962  0021EA                     __end_ofPL92:
  8963                           	opt stack 0
  8964                           tblptru	equ	0xFF8
  8965                           tblptrh	equ	0xFF7
  8966                           tblptrl	equ	0xFF6
  8967                           tablat	equ	0xFF5
  8968                           prodh	equ	0xFF4
  8969                           prodl	equ	0xFF3
  8970                           intcon	equ	0xFF2
  8971                           indf0	equ	0xFEF
  8972                           postinc0	equ	0xFEE
  8973                           fsr0h	equ	0xFEA
  8974                           fsr0l	equ	0xFE9
  8975                           wreg	equ	0xFE8
  8976                           indf1	equ	0xFE7
  8977                           postinc1	equ	0xFE6
  8978                           postdec1	equ	0xFE5
  8979                           fsr1h	equ	0xFE2
  8980                           fsr1l	equ	0xFE1
  8981                           indf2	equ	0xFDF
  8982                           postinc2	equ	0xFDE
  8983                           postdec2	equ	0xFDD
  8984                           plusw2	equ	0xFDB
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function _doModeVscp *****************
  8990 ;; Defined at:
  8991 ;;		line 1482 in file "main.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  c               1   83[BANK0 ] unsigned char 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;		None               void
  8998 ;; Registers used:
  8999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9005 ;;      Params:         0       0       0       0       0       0       0
  9006 ;;      Locals:         0       1       0       0       0       0       0
  9007 ;;      Temps:          0       3       0       0       0       0       0
  9008 ;;      Totals:         0       4       0       0       0       0       0
  9009 ;;Total ram usage:        4 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    7
  9012 ;; This function calls:
  9013 ;;		_fifo_read
  9014 ;;		_ECANSetOperationMode
  9015 ;;		_Busy_eep
  9016 ;;		_Write_b_eep
  9017 ;;		_receiveSendMultiEventCANAL
  9018 ;;		_receiveSendEventCANAL
  9019 ;;		_calcCRC
  9020 ;;		_sendVSCPDriverNack
  9021 ;;		_sendVSCPDriverAck
  9022 ;;		_receiveVSCPModeCanalMsg
  9023 ;;		_receiveVSCPModeMultiCanalMsg
  9024 ;;		_sendVSCPModeCapabilities
  9025 ;;		_sendVSCPDriverCommandReply
  9026 ;;		_sendVSCPDriverErrorFrame
  9027 ;; This function is called by:
  9028 ;;		_main
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           	psect	text7
  9033  003BB8                     __ptext7:
  9034                           	opt stack 0
  9035  003BB8                     _doModeVscp:
  9036                           	opt stack 22
  9037                           
  9038                           ;main.c: 1483: uint8_t c;
  9039                           ;main.c: 1486: if ( caps.maxCanalFrames > 1 ) {
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;incstack = 0
  9043                           ;incstack = 0
  9044  003BB8  EE20  F040         	lfsr	2,_caps+1
  9045  003BBC  0E01               	movlw	1
  9046  003BBE  64DF               	cpfsgt	indf2,c
  9047  003BC0  D003               	goto	l16527
  9048                           
  9049                           ;main.c: 1489: receiveSendMultiEventCANAL();
  9050  003BC2  ECA1  F01B         	call	_receiveSendMultiEventCANAL	;wreg free
  9051                           
  9052                           ;main.c: 1490: }
  9053  003BC6  D002               	goto	l16529
  9054  003BC8                     l16527:
  9055                           
  9056                           ;main.c: 1491: else {
  9057                           ;main.c: 1494: receiveSendEventCANAL();
  9058  003BC8  ECA0  F019         	call	_receiveSendEventCANAL	;wreg free
  9059  003BCC                     l16529:
  9060                           
  9061                           ;main.c: 1495: }
  9062                           ;main.c: 1498: (INTCONbits.GIE = 0);
  9063  003BCC  9EF2               	bcf	intcon,7,c	;volatile
  9064                           
  9065                           ;main.c: 1500: if ( 1 == fifo_read( &serialInputFifo, &c, 1 ) ) {
  9066  003BCE  0100               	movlb	0	; () banked
  9067  003BD0  0E00               	movlw	high doModeVscp@c
  9068  003BD2  6E20               	movwf	?_fifo_read+1,c
  9069  003BD4  0EB3               	movlw	low doModeVscp@c
  9070  003BD6  6E1F               	movwf	?_fifo_read,c
  9071  003BD8  6A22               	clrf	?_fifo_read+3,c
  9072  003BDA  0E01               	movlw	1
  9073  003BDC  6E21               	movwf	?_fifo_read+2,c
  9074  003BDE  0EF7               	movlw	_serialInputFifo& (0+255)
  9075  003BE0  EC42  F00F         	call	_fifo_read
  9076  003BE4  041F               	decf	?_fifo_read,w,c
  9077  003BE6  1020               	iorwf	?_fifo_read+1,w,c
  9078  003BE8  E001 D106          	bnz	l16719
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;main.c: 1503: (INTCONbits.GIE = 1);
  9082  003BEC  8EF2               	bsf	intcon,7,c	;volatile
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;main.c: 1506: if ( pos >= sizeof( cmdbuf ) ) {
  9086  003BEE  0E4F               	movlw	79
  9087  003BF0  0101               	movlb	1	; () banked
  9088  003BF2  6503               	cpfsgt	_pos& (0+255),b
  9089  003BF4  D003               	goto	l776
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;main.c: 1508: pos = 0;
  9093  003BF6  6B03               	clrf	_pos& (0+255),b
  9094                           
  9095                           ;main.c: 1509: bDLE = 0;
  9096  003BF8  6A35               	clrf	_bDLE,c
  9097                           
  9098                           ;main.c: 1510: stateVscpDriver = 0;
  9099  003BFA  6A38               	clrf	_stateVscpDriver,c
  9100  003BFC                     l776:
  9101                           
  9102                           ; BSR set to: 1
  9103                           ;main.c: 1511: }
  9104                           ;main.c: 1513: if ( 0 == stateVscpDriver ) {
  9105  003BFC  6638               	tstfsz	_stateVscpDriver,c
  9106  003BFE  D00F               	goto	l16553
  9107                           
  9108                           ; BSR set to: 1
  9109                           ;main.c: 1515: if ( bDLE ) {
  9110  003C00  5035               	movf	_bDLE,w,c
  9111  003C02  E00A               	bz	l16549
  9112                           
  9113                           ; BSR set to: 1
  9114                           ;main.c: 1517: bDLE = 0;
  9115  003C04  6A35               	clrf	_bDLE,c
  9116                           
  9117                           ; BSR set to: 1
  9118                           ;main.c: 1520: if ( 0x02 == c ) {
  9119  003C06  0100               	movlb	0	; () banked
  9120  003C08  51B3               	movf	doModeVscp@c& (0+255),w,b
  9121  003C0A  0A02               	xorlw	2
  9122  003C0C  E128               	bnz	l16589
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;main.c: 1521: stateVscpDriver = 1;
  9126  003C0E  0E01               	movlw	1
  9127  003C10  6E38               	movwf	_stateVscpDriver,c
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;main.c: 1522: pos = 0;
  9131  003C12  0101               	movlb	1	; () banked
  9132  003C14  6B03               	clrf	_pos& (0+255),b
  9133  003C16  D023               	goto	l16589
  9134  003C18                     l16549:
  9135                           
  9136                           ;main.c: 1525: else {
  9137                           ;main.c: 1526: bDLE = 1;
  9138  003C18  0E01               	movlw	1
  9139  003C1A  6E35               	movwf	_bDLE,c
  9140  003C1C  D0EE               	goto	l781
  9141  003C1E                     l16553:
  9142                           
  9143                           ; BSR set to: 1
  9144                           ;main.c: 1530: else if ( 1 == stateVscpDriver ) {
  9145  003C1E  0438               	decf	_stateVscpDriver,w,c
  9146  003C20  E11E               	bnz	l16589
  9147                           
  9148                           ; BSR set to: 1
  9149                           ;main.c: 1533: if ( bDLE ) {
  9150  003C22  5035               	movf	_bDLE,w,c
  9151  003C24  E017               	bz	l16573
  9152                           
  9153                           ; BSR set to: 1
  9154                           ;main.c: 1536: bDLE = 0;
  9155  003C26  6A35               	clrf	_bDLE,c
  9156                           
  9157                           ; BSR set to: 1
  9158                           ;main.c: 1539: if ( 0x03 == c ) {
  9159  003C28  0100               	movlb	0	; () banked
  9160  003C2A  51B3               	movf	doModeVscp@c& (0+255),w,b
  9161  003C2C  0A03               	xorlw	3
  9162  003C2E  E103               	bnz	l16563
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;main.c: 1540: stateVscpDriver = 2;
  9166  003C30  0E02               	movlw	2
  9167  003C32  6E38               	movwf	_stateVscpDriver,c
  9168                           
  9169                           ;main.c: 1541: }
  9170  003C34  D014               	goto	l16589
  9171  003C36                     l16563:
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;main.c: 1543: else if (0x10 == c) {
  9175  003C36  51B3               	movf	doModeVscp@c& (0+255),w,b
  9176  003C38  0A10               	xorlw	16
  9177  003C3A  E111               	bnz	l16589
  9178  003C3C                     u20520:
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;main.c: 1545: cmdbuf[ pos++ ] = c;
  9182  003C3C  0101               	movlb	1	; () banked
  9183  003C3E  D8DE               	call	PL48	;call to abstracted procedure
  9184  003C40  C0B3  FFDF         	movff	doModeVscp@c,indf2
  9185                           
  9186                           ; BSR set to: 0
  9187  003C44  2B03               	incf	_pos& (0+255),f,b
  9188                           
  9189                           ; BSR set to: 1
  9190                           ;main.c: 1546: if ( pos >= sizeof( cmdbuf ) ) {
  9191  003C46  0E4F               	movlw	79
  9192  003C48  6503               	cpfsgt	_pos& (0+255),b
  9193  003C4A  D0D7               	goto	l781
  9194                           
  9195                           ; BSR set to: 1
  9196                           ;main.c: 1549: bDLE = 0;
  9197  003C4C  6A35               	clrf	_bDLE,c
  9198                           
  9199                           ;main.c: 1550: pos = 0;
  9200  003C4E  6B03               	clrf	_pos& (0+255),b
  9201                           
  9202                           ;main.c: 1551: stateVscpDriver = 0;
  9203  003C50  6A38               	clrf	_stateVscpDriver,c
  9204  003C52  D0D3               	goto	l781
  9205  003C54                     l16573:
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;main.c: 1556: else {
  9209                           ;main.c: 1557: if (0x10 == c) {
  9210  003C54  0100               	movlb	0	; () banked
  9211  003C56  51B3               	movf	doModeVscp@c& (0+255),w,b
  9212  003C58  0A10               	xorlw	16
  9213  003C5A  E0DE               	bz	l16549
  9214  003C5C  D7EF               	goto	u20520
  9215  003C5E                     l16589:
  9216                           
  9217                           ;main.c: 1573: }
  9218                           ;main.c: 1574: }
  9219                           ;main.c: 1575: }
  9220                           ;main.c: 1577: if (2 == stateVscpDriver) {
  9221  003C5E  5038               	movf	_stateVscpDriver,w,c
  9222  003C60  0A02               	xorlw	2
  9223  003C62  E001 D0C9          	bnz	l16719
  9224                           
  9225                           ;main.c: 1580: stateVscpDriver = 0;
  9226  003C66  6A38               	clrf	_stateVscpDriver,c
  9227                           
  9228                           ;main.c: 1592: if (calcCRC(cmdbuf, pos)) {
  9229  003C68  0E01               	movlw	high _cmdbuf
  9230  003C6A  0100               	movlb	0	; () banked
  9231  003C6C  6F64               	movwf	(?_calcCRC+1)& (0+255),b
  9232  003C6E  0E05               	movlw	low _cmdbuf
  9233  003C70  6F63               	movwf	?_calcCRC& (0+255),b
  9234  003C72  C103  F065         	movff	_pos,?_calcCRC+2
  9235  003C76  EC15  F005         	call	_calcCRC	;wreg free
  9236  003C7A  0900               	iorlw	0
  9237  003C7C  E003               	bz	l794
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;main.c: 1593: sendVSCPDriverNack();
  9241  003C7E  ECB4  F00C         	call	_sendVSCPDriverNack	;wreg free
  9242  003C82  D0BB               	goto	l781
  9243  003C84                     l794:
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;main.c: 1595: }
  9247                           ;main.c: 1598: if (0 ==
  9248                           ;main.c: 1599: cmdbuf[ 0 ]) {
  9249  003C84  0101               	movlb	1	; () banked
  9250  003C86  6705               	tstfsz	_cmdbuf& (0+255),b
  9251  003C88  D003               	goto	l16601
  9252  003C8A                     l16599:
  9253                           
  9254                           ;main.c: 1600: sendVSCPDriverAck();
  9255  003C8A  EC06  F00D         	call	_sendVSCPDriverAck	;wreg free
  9256                           
  9257                           ;main.c: 1601: }
  9258  003C8E  D0B1               	goto	l16715
  9259  003C90                     l16601:
  9260                           
  9261                           ; BSR set to: 1
  9262                           ;main.c: 1603: else if (1 ==
  9263                           ;main.c: 1604: cmdbuf[ 0 ]) {
  9264  003C90  0505               	decf	_cmdbuf& (0+255),w,b
  9265  003C92  E103               	bnz	l16605
  9266  003C94                     l16603:
  9267                           
  9268                           ;main.c: 1605: sendVSCPDriverNack();
  9269  003C94  ECB4  F00C         	call	_sendVSCPDriverNack	;wreg free
  9270                           
  9271                           ;main.c: 1606: }
  9272  003C98  D0AC               	goto	l16715
  9273  003C9A                     l16605:
  9274                           
  9275                           ; BSR set to: 1
  9276                           ;main.c: 1608: else if (2 ==
  9277                           ;main.c: 1609: cmdbuf[ 0 ]) {
  9278  003C9A  5105               	movf	_cmdbuf& (0+255),w,b
  9279  003C9C  0A02               	xorlw	2
  9280  003C9E  E105               	bnz	l16613
  9281                           
  9282                           ; BSR set to: 1
  9283                           ;main.c: 1610: if ( receiveVSCPModeCanalMsg() ) {
  9284  003CA0  ECF5  F010         	call	_receiveVSCPModeCanalMsg	;wreg free
  9285  003CA4  0900               	iorlw	0
  9286  003CA6  E1F1               	bnz	l16599
  9287  003CA8  D7F5               	goto	l16603
  9288  003CAA                     l16613:
  9289                           
  9290                           ; BSR set to: 1
  9291                           ;main.c: 1618: else if (6 ==
  9292                           ;main.c: 1619: cmdbuf[ 0 ]) {
  9293  003CAA  5105               	movf	_cmdbuf& (0+255),w,b
  9294  003CAC  0A06               	xorlw	6
  9295  003CAE  E103               	bnz	l16621
  9296                           
  9297                           ; BSR set to: 1
  9298                           ;main.c: 1620: if (receiveVSCPModeMultiCanalMsg()) {
  9299  003CB0  EC41  F004         	call	_receiveVSCPModeMultiCanalMsg	;wreg free
  9300  003CB4  D7F7               	goto	L5
  9301  003CB6                     l16621:
  9302                           
  9303                           ; BSR set to: 1
  9304                           ;main.c: 1628: else if (6 ==
  9305                           ;main.c: 1629: cmdbuf[ 0 ]) {
  9306  003CB6  5105               	movf	_cmdbuf& (0+255),w,b
  9307  003CB8  0A06               	xorlw	6
  9308  003CBA  E0EC               	bz	l16603
  9309                           
  9310                           ; BSR set to: 1
  9311                           ;main.c: 1633: else if (3 ==
  9312                           ;main.c: 1634: cmdbuf[ 0 ]) {
  9313  003CBC  5105               	movf	_cmdbuf& (0+255),w,b
  9314  003CBE  0A03               	xorlw	3
  9315  003CC0  E141               	bnz	l16667
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;main.c: 1636: if ( cmdbuf[ 5 ] ==
  9319                           ;main.c: 1637: 0) {
  9320  003CC2  670A               	tstfsz	(_cmdbuf+5)& (0+255),b
  9321  003CC4  D001               	goto	l16631
  9322  003CC6  D7E1               	goto	l16599
  9323  003CC8                     l16631:
  9324                           
  9325                           ; BSR set to: 1
  9326                           ;main.c: 1641: else if ( cmdbuf[ 5 ] ==
  9327                           ;main.c: 1642: 1 ) {
  9328  003CC8  050A               	decf	(_cmdbuf+5)& (0+255),w,b
  9329  003CCA  E11B               	bnz	l16649
  9330                           
  9331                           ; BSR set to: 1
  9332                           ;main.c: 1644: if ( 2 == ( cmdbuf[ 3 ]<<8 +
  9333                           ;main.c: 1645: cmdbuf[ 4 ] ) ) {
  9334  003CCC  C109  F0B0         	movff	_cmdbuf+4,??_doModeVscp
  9335  003CD0  D8A0               	call	PL148	;call to abstracted procedure
  9336  003CD2  D001               	goto	u20684
  9337  003CD4                     u20685:
  9338  003CD4  D89A               	call	PL146	;call to abstracted procedure
  9339  003CD6                     u20684:
  9340  003CD6  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9341  003CD8  D7FD               	goto	u20685
  9342  003CDA  51B1               	movf	(??_doModeVscp+1)& (0+255),w,b
  9343  003CDC  0A02               	xorlw	2
  9344  003CDE  11B2               	iorwf	(??_doModeVscp+2)& (0+255),w,b
  9345  003CE0  E1D9               	bnz	l16603
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;main.c: 1647: if ( cmdbuf[ 5 + 1 ] < 4 ) {
  9349  003CE2  0E04               	movlw	4
  9350  003CE4  0101               	movlb	1	; () banked
  9351  003CE6  610B               	cpfslt	(_cmdbuf+6)& (0+255),b
  9352  003CE8  D7D5               	goto	l16603
  9353                           
  9354                           ; BSR set to: 1
  9355                           ;main.c: 1648: mode = cmdbuf[ 5 + 1 ];
  9356  003CEA  C10B  F0EC         	movff	_cmdbuf+6,_mode
  9357                           
  9358                           ; BSR set to: 1
  9359                           ;main.c: 1649: (Busy_eep(), Write_b_eep(0x03,cmdbuf[ 5 + 1 ]));
  9360  003CEE  EC43  F004         	call	_Busy_eep	;wreg free
  9361  003CF2  6A20               	clrf	?_Write_b_eep+1,c
  9362  003CF4  0E03               	movlw	3
  9363  003CF6  6E1F               	movwf	?_Write_b_eep,c
  9364  003CF8  C10B  F021         	movff	_cmdbuf+6,?_Write_b_eep+2
  9365  003CFC  EC2D  F005         	call	_Write_b_eep	;wreg free
  9366  003D00  D7C4               	goto	l16599
  9367  003D02                     l16649:
  9368                           
  9369                           ; BSR set to: 1
  9370                           ;main.c: 1663: else if ( cmdbuf[ 5 ] ==
  9371                           ;main.c: 1664: 2 ) {
  9372  003D02  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9373  003D04  0A02               	xorlw	2
  9374  003D06  E1C6               	bnz	l16603
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;main.c: 1666: if ( 2 == ( cmdbuf[ 3 ]<<8 +
  9378                           ;main.c: 1667: cmdbuf[ 4 ] ) ) {
  9379  003D08  C109  F0B0         	movff	_cmdbuf+4,??_doModeVscp
  9380  003D0C  D882               	call	PL148	;call to abstracted procedure
  9381  003D0E  D001               	goto	u20724
  9382  003D10                     u20725:
  9383  003D10  D87C               	call	PL146	;call to abstracted procedure
  9384  003D12                     u20724:
  9385  003D12  2FB0               	decfsz	??_doModeVscp& (0+255),f,b
  9386  003D14  D7FD               	goto	u20725
  9387  003D16  51B1               	movf	(??_doModeVscp+1)& (0+255),w,b
  9388  003D18  0A02               	xorlw	2
  9389  003D1A  11B2               	iorwf	(??_doModeVscp+2)& (0+255),w,b
  9390  003D1C  E1BB               	bnz	l16603
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;main.c: 1669: if ( cmdbuf[ 5 + 1 ] ) {
  9394  003D1E  0101               	movlb	1	; () banked
  9395  003D20  510B               	movf	(_cmdbuf+6)& (0+255),w,b
  9396  003D22  E004               	bz	l820
  9397                           
  9398                           ; BSR set to: 1
  9399                           ;main.c: 1670: bTimestamp = 1;
  9400  003D24  0E01               	movlw	1
  9401  003D26  0100               	movlb	0	; () banked
  9402  003D28  6FEB               	movwf	_bTimestamp& (0+255),b
  9403                           
  9404                           ;main.c: 1671: }
  9405  003D2A  D002               	goto	l16657
  9406  003D2C                     l820:
  9407                           
  9408                           ; BSR set to: 1
  9409                           ;main.c: 1672: else {
  9410                           ;main.c: 1673: bTimestamp = 0;
  9411  003D2C  0100               	movlb	0	; () banked
  9412  003D2E  6BEB               	clrf	_bTimestamp& (0+255),b
  9413  003D30                     l16657:
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;main.c: 1674: }
  9417                           ;main.c: 1676: (Busy_eep(), Write_b_eep(0x66,cmdbuf[ 5 + 1 ]));
  9418  003D30  EC43  F004         	call	_Busy_eep	;wreg free
  9419  003D34  6A20               	clrf	?_Write_b_eep+1,c
  9420  003D36  0E66               	movlw	102
  9421  003D38  6E1F               	movwf	?_Write_b_eep,c
  9422  003D3A  C10B  F021         	movff	_cmdbuf+6,?_Write_b_eep+2
  9423  003D3E  EC2D  F005         	call	_Write_b_eep	;wreg free
  9424  003D42  D7A3               	goto	l16599
  9425  003D44                     l16667:
  9426                           
  9427                           ; BSR set to: 1
  9428                           ;main.c: 1690: else if (4 ==
  9429                           ;main.c: 1691: cmdbuf[ 0 ]) {
  9430  003D44  5105               	movf	_cmdbuf& (0+255),w,b
  9431  003D46  0A04               	xorlw	4
  9432  003D48  E0A5               	bz	l16603
  9433                           
  9434                           ; BSR set to: 1
  9435                           ;main.c: 1695: else if (8 ==
  9436                           ;main.c: 1696: cmdbuf[ 0 ]) {
  9437  003D4A  5105               	movf	_cmdbuf& (0+255),w,b
  9438  003D4C  0A08               	xorlw	8
  9439  003D4E  E107               	bnz	l16677
  9440                           
  9441                           ; BSR set to: 1
  9442                           ;main.c: 1697: caps.maxVscpFrames = cmdbuf[ 5 ];
  9443  003D50  C10A  F03F         	movff	_cmdbuf+5,_caps
  9444                           
  9445                           ;main.c: 1698: caps.maxCanalFrames = cmdbuf[ 5 + 1 ];
  9446  003D54  C10B  F040         	movff	_cmdbuf+6,_caps+1
  9447                           
  9448                           ; BSR set to: 1
  9449                           ;main.c: 1699: sendVSCPModeCapabilities();
  9450  003D58  ECB3  F00D         	call	_sendVSCPModeCapabilities	;wreg free
  9451                           
  9452                           ;main.c: 1700: }
  9453  003D5C  D04A               	goto	l16715
  9454  003D5E                     l16677:
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;main.c: 1702: else if (255 ==
  9458                           ;main.c: 1703: cmdbuf[ 0 ]) {
  9459  003D5E  2905               	incf	_cmdbuf& (0+255),w,b
  9460  003D60  E145               	bnz	l16713
  9461                           
  9462                           ; BSR set to: 1
  9463                           ;main.c: 1705: if (cmdbuf[ 5 ] ==
  9464                           ;main.c: 1706: 0) {
  9465  003D62  670A               	tstfsz	(_cmdbuf+5)& (0+255),b
  9466  003D64  D006               	goto	l16683
  9467                           
  9468                           ; BSR set to: 1
  9469                           ;main.c: 1707: sendVSCPDriverCommandReply(0, 0);
  9470  003D66  0E00               	movlw	0
  9471  003D68  0100               	movlb	0	; () banked
  9472  003D6A  6B66               	clrf	?_sendVSCPDriverCommandReply& (0+255),b
  9473  003D6C  EC15  F010         	call	_sendVSCPDriverCommandReply
  9474                           
  9475                           ;main.c: 1708: }
  9476  003D70  D040               	goto	l16715
  9477  003D72                     l16683:
  9478                           
  9479                           ; BSR set to: 1
  9480                           ;main.c: 1710: else if (cmdbuf[ 5 ] ==
  9481                           ;main.c: 1711: 1) {
  9482  003D72  050A               	decf	(_cmdbuf+5)& (0+255),w,b
  9483  003D74  E10A               	bnz	l16689
  9484                           
  9485                           ; BSR set to: 1
  9486                           ;main.c: 1712: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  9487  003D76  0E00               	movlw	0
  9488  003D78  EC8C  F004         	call	_ECANSetOperationMode
  9489                           
  9490                           ;main.c: 1713: sendVSCPDriverCommandReply(0, 1);
  9491  003D7C  0E01               	movlw	1
  9492  003D7E  0100               	movlb	0	; () banked
  9493  003D80  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9494  003D82  0E00               	movlw	0
  9495  003D84  EC15  F010         	call	_sendVSCPDriverCommandReply
  9496                           
  9497                           ;main.c: 1714: }
  9498  003D88  D034               	goto	l16715
  9499  003D8A                     l16689:
  9500                           
  9501                           ; BSR set to: 1
  9502                           ;main.c: 1716: else if (cmdbuf[ 5 ] ==
  9503                           ;main.c: 1717: 2) {
  9504  003D8A  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9505  003D8C  0A02               	xorlw	2
  9506  003D8E  E10A               	bnz	l16695
  9507                           
  9508                           ; BSR set to: 1
  9509                           ;main.c: 1718: ECANSetOperationMode(ECAN_OP_MODE_LOOP);
  9510  003D90  0E40               	movlw	64
  9511  003D92  EC8C  F004         	call	_ECANSetOperationMode
  9512                           
  9513                           ;main.c: 1719: sendVSCPDriverCommandReply(0, 2);
  9514  003D96  0E02               	movlw	2
  9515  003D98  0100               	movlb	0	; () banked
  9516  003D9A  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9517  003D9C  0E00               	movlw	0
  9518  003D9E  EC15  F010         	call	_sendVSCPDriverCommandReply
  9519                           
  9520                           ;main.c: 1720: }
  9521  003DA2  D027               	goto	l16715
  9522  003DA4                     l16695:
  9523                           
  9524                           ; BSR set to: 1
  9525                           ;main.c: 1722: else if (cmdbuf[ 5 ] ==
  9526                           ;main.c: 1723: 3) {
  9527  003DA4  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9528  003DA6  0A03               	xorlw	3
  9529  003DA8  E10A               	bnz	l16701
  9530                           
  9531                           ; BSR set to: 1
  9532                           ;main.c: 1724: ECANSetOperationMode(ECAN_OP_MODE_LISTEN);
  9533  003DAA  0E60               	movlw	96
  9534  003DAC  EC8C  F004         	call	_ECANSetOperationMode
  9535                           
  9536                           ;main.c: 1725: sendVSCPDriverCommandReply(0, 3);
  9537  003DB0  0E03               	movlw	3
  9538  003DB2  0100               	movlb	0	; () banked
  9539  003DB4  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9540  003DB6  0E00               	movlw	0
  9541  003DB8  EC15  F010         	call	_sendVSCPDriverCommandReply
  9542                           
  9543                           ;main.c: 1726: }
  9544  003DBC  D01A               	goto	l16715
  9545  003DBE                     l16701:
  9546                           
  9547                           ; BSR set to: 1
  9548                           ;main.c: 1728: else if (cmdbuf[ 5 ] ==
  9549                           ;main.c: 1729: 4) {
  9550  003DBE  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9551  003DC0  0A04               	xorlw	4
  9552  003DC2  E10A               	bnz	l16707
  9553                           
  9554                           ; BSR set to: 1
  9555                           ;main.c: 1730: ECANSetOperationMode(0x20);
  9556  003DC4  0E20               	movlw	32
  9557  003DC6  EC8C  F004         	call	_ECANSetOperationMode
  9558                           
  9559                           ;main.c: 1731: sendVSCPDriverCommandReply(0, 4);
  9560  003DCA  0E04               	movlw	4
  9561  003DCC  0100               	movlb	0	; () banked
  9562  003DCE  6F66               	movwf	?_sendVSCPDriverCommandReply& (0+255),b
  9563  003DD0  0E00               	movlw	0
  9564  003DD2  EC15  F010         	call	_sendVSCPDriverCommandReply
  9565                           
  9566                           ;main.c: 1732: }
  9567  003DD6  D00D               	goto	l16715
  9568  003DD8                     l16707:
  9569                           
  9570                           ; BSR set to: 1
  9571                           ;main.c: 1734: else if (cmdbuf[ 5 ] ==
  9572                           ;main.c: 1735: 5) {
  9573  003DD8  510A               	movf	(_cmdbuf+5)& (0+255),w,b
  9574  003DDA  0A05               	xorlw	5
  9575  003DDC  E001 D75A          	bnz	l16603
  9576                           
  9577                           ; BSR set to: 1
  9578                           ;main.c: 1736: sendVSCPDriverCommandReply(0, 0);
  9579  003DE0  0E00               	movlw	0
  9580  003DE2  0100               	movlb	0	; () banked
  9581  003DE4  6B66               	clrf	?_sendVSCPDriverCommandReply& (0+255),b
  9582  003DE6  EC15  F010         	call	_sendVSCPDriverCommandReply
  9583                           
  9584                           ;main.c: 1737: }
  9585  003DEA  D003               	goto	l16715
  9586  003DEC                     l16713:
  9587                           
  9588                           ; BSR set to: 1
  9589                           ;main.c: 1743: else {
  9590                           ;main.c: 1745: sendVSCPDriverErrorFrame(2);
  9591  003DEC  0E02               	movlw	2
  9592  003DEE  EC14  F00E         	call	_sendVSCPDriverErrorFrame
  9593  003DF2                     l16715:
  9594                           
  9595                           ;main.c: 1746: }
  9596                           ;main.c: 1749: pos = 0;
  9597  003DF2  0101               	movlb	1	; () banked
  9598  003DF4  6B03               	clrf	_pos& (0+255),b
  9599                           
  9600                           ; BSR set to: 1
  9601                           ;main.c: 1750: stateVscpDriver = 0;
  9602  003DF6  6A38               	clrf	_stateVscpDriver,c
  9603  003DF8                     l16719:
  9604                           
  9605                           ;main.c: 1752: }
  9606                           ;main.c: 1754: }
  9607                           ;main.c: 1757: (INTCONbits.GIE = 1);
  9608  003DF8  8EF2               	bsf	intcon,7,c	;volatile
  9609  003DFA                     l781:
  9610  003DFA  0012               	return	
  9611  003DFC                     __end_of_doModeVscp:
  9612                           	opt stack 0
  9613  003DFC                     PL48:
  9614                           	opt stack 19
  9615  003DFC  0E05               	movlw	low _cmdbuf
  9616  003DFE  2503               	addwf	_pos& (0+255),w,b
  9617  003E00  6ED9               	movwf	fsr2l,c
  9618  003E02  6ADA               	clrf	fsr2h,c
  9619  003E04  0E01               	movlw	high _cmdbuf
  9620  003E06  22DA               	addwfc	fsr2h,f,c
  9621  003E08  0012               	return	
  9622  003E0A                     __end_ofPL48:
  9623                           	opt stack 0
  9624  003E0A                     PL146:
  9625                           	opt stack 22
  9626  003E0A  90D8               	bcf	status,0,c
  9627  003E0C  37B1               	rlcf	(??_doModeVscp+1)& (0+255),f,b
  9628  003E0E  37B2               	rlcf	(??_doModeVscp+2)& (0+255),f,b
  9629  003E10  0012               	return	
  9630  003E12                     __end_ofPL146:
  9631                           	opt stack 0
  9632  003E12                     PL148:
  9633                           	opt stack 22
  9634  003E12  0E08               	movlw	8
  9635  003E14  0100               	movlb	0	; () banked
  9636  003E16  27B0               	addwf	??_doModeVscp& (0+255),f,b
  9637  003E18  0101               	movlb	1	; () banked
  9638  003E1A  5108               	movf	(_cmdbuf+3)& (0+255),w,b
  9639  003E1C  0100               	movlb	0	; () banked
  9640  003E1E  6FB1               	movwf	(??_doModeVscp+1)& (0+255),b
  9641  003E20  6BB2               	clrf	(??_doModeVscp+2)& (0+255),b
  9642  003E22  2BB0               	incf	??_doModeVscp& (0+255),f,b
  9643  003E24  0012               	return	
  9644  003E26                     __end_ofPL148:
  9645                           	opt stack 0
  9646                           tblptru	equ	0xFF8
  9647                           tblptrh	equ	0xFF7
  9648                           tblptrl	equ	0xFF6
  9649                           tablat	equ	0xFF5
  9650                           prodh	equ	0xFF4
  9651                           prodl	equ	0xFF3
  9652                           intcon	equ	0xFF2
  9653                           indf0	equ	0xFEF
  9654                           postinc0	equ	0xFEE
  9655                           fsr0h	equ	0xFEA
  9656                           fsr0l	equ	0xFE9
  9657                           wreg	equ	0xFE8
  9658                           indf1	equ	0xFE7
  9659                           postinc1	equ	0xFE6
  9660                           postdec1	equ	0xFE5
  9661                           fsr1h	equ	0xFE2
  9662                           fsr1l	equ	0xFE1
  9663                           indf2	equ	0xFDF
  9664                           postinc2	equ	0xFDE
  9665                           postdec2	equ	0xFDD
  9666                           plusw2	equ	0xFDB
  9667                           fsr2h	equ	0xFDA
  9668                           fsr2l	equ	0xFD9
  9669                           status	equ	0xFD8
  9670                           
  9671 ;; *************** function _sendVSCPDriverErrorFrame *****************
  9672 ;; Defined at:
  9673 ;;		line 2018 in file "main.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;  errorcode       1    wreg     unsigned char 
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;  errorcode       1    6[BANK0 ] unsigned char 
  9678 ;;  crc             1    7[BANK0 ] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;		None               void
  9681 ;; Registers used:
  9682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : F/1
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9688 ;;      Params:         0       0       0       0       0       0       0
  9689 ;;      Locals:         0       2       0       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0
  9691 ;;      Totals:         0       2       0       0       0       0       0
  9692 ;;Total ram usage:        2 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    6
  9695 ;; This function calls:
  9696 ;;		_WriteUSART
  9697 ;;		_sendEscapedUartData
  9698 ;;		_crc8
  9699 ;; This function is called by:
  9700 ;;		_doModeVscp
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text8
  9705  001C28                     __ptext8:
  9706                           	opt stack 0
  9707  001C28                     _sendVSCPDriverErrorFrame:
  9708                           	opt stack 22
  9709                           
  9710                           ;incstack = 0
  9711                           ;incstack = 0
  9712                           ;sendVSCPDriverErrorFrame@errorcode stored from wreg
  9713  001C28  CFE8 F066          	movff	wreg,sendVSCPDriverErrorFrame@errorcode
  9714                           
  9715                           ; BSR set to: 1
  9716                           ;main.c: 2019: uint8_t crc = 0;
  9717  001C2C  0100               	movlb	0	; () banked
  9718  001C2E  6B67               	clrf	sendVSCPDriverErrorFrame@crc& (0+255),b
  9719  001C30                     l914:
  9720  001C30  A2AC               	btfss	4012,1,c	;volatile
  9721  001C32  D7FE               	goto	l914
  9722                           
  9723                           ;main.c: 2023: WriteUSART(0x10);
  9724  001C34  0E10               	movlw	16
  9725  001C36  EC77  F004         	call	_WriteUSART
  9726  001C3A                     l917:
  9727  001C3A  A2AC               	btfss	4012,1,c	;volatile
  9728  001C3C  D7FE               	goto	l917
  9729                           
  9730                           ;main.c: 2025: WriteUSART(0x02);
  9731  001C3E  0E02               	movlw	2
  9732  001C40  EC77  F004         	call	_WriteUSART
  9733  001C44                     l920:
  9734  001C44  A2AC               	btfss	4012,1,c	;volatile
  9735  001C46  D7FE               	goto	l920
  9736                           
  9737                           ;main.c: 2029: WriteUSART(253);
  9738  001C48  0EFD               	movlw	253
  9739  001C4A  EC77  F004         	call	_WriteUSART
  9740                           
  9741                           ;main.c: 2030: crc8(&crc, 253);
  9742  001C4E  0100               	movlb	0	; () banked
  9743  001C50  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9744  001C52  6F61               	movwf	(?_crc8+1)& (0+255),b
  9745  001C54  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
  9746  001C56  6F60               	movwf	?_crc8& (0+255),b
  9747  001C58  0EFD               	movlw	253
  9748  001C5A  6F62               	movwf	(?_crc8+2)& (0+255),b
  9749  001C5C  EC7F  F005         	call	_crc8	;wreg free
  9750  001C60                     l923:
  9751  001C60  A2AC               	btfss	4012,1,c	;volatile
  9752  001C62  D7FE               	goto	l923
  9753                           
  9754                           ;main.c: 2034: WriteUSART(0);
  9755  001C64  0E00               	movlw	0
  9756  001C66  EC77  F004         	call	_WriteUSART
  9757                           
  9758                           ;main.c: 2035: crc8(&crc, 0);
  9759  001C6A  D839               	call	PL126	;call to abstracted procedure
  9760  001C6C  EC7F  F005         	call	_crc8	;wreg free
  9761                           
  9762                           ; BSR set to: 3
  9763                           ;main.c: 2038: sendEscapedUartData(cmdbuf[ 2 ], &crc);
  9764  001C70  0100               	movlb	0	; () banked
  9765  001C72  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9766  001C74  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
  9767  001C76  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
  9768  001C78  6F63               	movwf	?_sendEscapedUartData& (0+255),b
  9769  001C7A  0101               	movlb	1	; () banked
  9770  001C7C  5107               	movf	(_cmdbuf+2)& (0+255),w,b
  9771  001C7E  ECE3  F007         	call	_sendEscapedUartData
  9772  001C82                     l926:
  9773  001C82  A2AC               	btfss	4012,1,c	;volatile
  9774  001C84  D7FE               	goto	l926
  9775                           
  9776                           ;main.c: 2042: WriteUSART(0);
  9777  001C86  0E00               	movlw	0
  9778  001C88  EC77  F004         	call	_WriteUSART
  9779                           
  9780                           ;main.c: 2043: crc8(&crc, 0);
  9781  001C8C  D828               	call	PL126	;call to abstracted procedure
  9782  001C8E  EC7F  F005         	call	_crc8	;wreg free
  9783  001C92                     l929:
  9784  001C92  A2AC               	btfss	4012,1,c	;volatile
  9785  001C94  D7FE               	goto	l929
  9786                           
  9787                           ;main.c: 2045: WriteUSART(1);
  9788  001C96  0E01               	movlw	1
  9789  001C98  EC77  F004         	call	_WriteUSART
  9790                           
  9791                           ;main.c: 2046: crc8(&crc, 1);
  9792  001C9C  0100               	movlb	0	; () banked
  9793  001C9E  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9794  001CA0  6F61               	movwf	(?_crc8+1)& (0+255),b
  9795  001CA2  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
  9796  001CA4  6F60               	movwf	?_crc8& (0+255),b
  9797  001CA6  0E01               	movlw	1
  9798  001CA8  6F62               	movwf	(?_crc8+2)& (0+255),b
  9799  001CAA  EC7F  F005         	call	_crc8	;wreg free
  9800                           
  9801                           ; BSR set to: 3
  9802                           ;main.c: 2049: sendEscapedUartData(errorcode, &crc);
  9803  001CAE  0100               	movlb	0	; () banked
  9804  001CB0  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9805  001CB2  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
  9806  001CB4  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
  9807  001CB6  6F63               	movwf	?_sendEscapedUartData& (0+255),b
  9808  001CB8  5166               	movf	sendVSCPDriverErrorFrame@errorcode& (0+255),w,b
  9809  001CBA  ECE3  F007         	call	_sendEscapedUartData
  9810                           
  9811                           ;main.c: 2052: sendEscapedUartData(crc, (0));
  9812  001CBE  0100               	movlb	0	; () banked
  9813  001CC0  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
  9814  001CC2  6B63               	clrf	?_sendEscapedUartData& (0+255),b
  9815  001CC4  5167               	movf	sendVSCPDriverErrorFrame@crc& (0+255),w,b
  9816  001CC6  ECE3  F007         	call	_sendEscapedUartData
  9817  001CCA                     l932:
  9818  001CCA  A2AC               	btfss	4012,1,c	;volatile
  9819  001CCC  D7FE               	goto	l932
  9820                           
  9821                           ;main.c: 2056: WriteUSART(0x10);
  9822  001CCE  0E10               	movlw	16
  9823  001CD0  EC77  F004         	call	_WriteUSART
  9824  001CD4                     l935:
  9825  001CD4  A2AC               	btfss	4012,1,c	;volatile
  9826  001CD6  D7FE               	goto	l935
  9827                           
  9828                           ;main.c: 2058: WriteUSART(0x03);
  9829  001CD8  0E03               	movlw	3
  9830  001CDA  EF77  F004         	goto	_WriteUSART
  9831  001CDE                     __end_of_sendVSCPDriverErrorFrame:
  9832                           	opt stack 0
  9833  001CDE                     PL126:
  9834                           	opt stack 22
  9835  001CDE  0100               	movlb	0	; () banked
  9836  001CE0  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9837  001CE2  6F61               	movwf	(?_crc8+1)& (0+255),b
  9838  001CE4  0E67               	movlw	low sendVSCPDriverErrorFrame@crc
  9839  001CE6  6F60               	movwf	?_crc8& (0+255),b
  9840  001CE8  6B62               	clrf	(?_crc8+2)& (0+255),b
  9841  001CEA  0C00               	retlw	0
  9842  001CEC                     __end_ofPL126:
  9843                           	opt stack 0
  9844                           tblptru	equ	0xFF8
  9845                           tblptrh	equ	0xFF7
  9846                           tblptrl	equ	0xFF6
  9847                           tablat	equ	0xFF5
  9848                           prodh	equ	0xFF4
  9849                           prodl	equ	0xFF3
  9850                           intcon	equ	0xFF2
  9851                           indf0	equ	0xFEF
  9852                           postinc0	equ	0xFEE
  9853                           fsr0h	equ	0xFEA
  9854                           fsr0l	equ	0xFE9
  9855                           wreg	equ	0xFE8
  9856                           indf1	equ	0xFE7
  9857                           postinc1	equ	0xFE6
  9858                           postdec1	equ	0xFE5
  9859                           fsr1h	equ	0xFE2
  9860                           fsr1l	equ	0xFE1
  9861                           indf2	equ	0xFDF
  9862                           postinc2	equ	0xFDE
  9863                           postdec2	equ	0xFDD
  9864                           plusw2	equ	0xFDB
  9865                           fsr2h	equ	0xFDA
  9866                           fsr2l	equ	0xFD9
  9867                           status	equ	0xFD8
  9868                           
  9869 ;; *************** function _sendVSCPDriverCommandReply *****************
  9870 ;; Defined at:
  9871 ;;		line 2155 in file "main.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  cmdReplyCode    1    wreg     unsigned char 
  9874 ;;  cmdCode         1    6[BANK0 ] unsigned char 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  cmdReplyCode    1    7[BANK0 ] unsigned char 
  9877 ;;  crc             1    8[BANK0 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;		None               void
  9880 ;; Registers used:
  9881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : F/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9887 ;;      Params:         0       1       0       0       0       0       0
  9888 ;;      Locals:         0       2       0       0       0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0
  9890 ;;      Totals:         0       3       0       0       0       0       0
  9891 ;;Total ram usage:        3 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    6
  9894 ;; This function calls:
  9895 ;;		_WriteUSART
  9896 ;;		_sendEscapedUartData
  9897 ;;		_crc8
  9898 ;; This function is called by:
  9899 ;;		_doModeVscp
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text9
  9904  00202A                     __ptext9:
  9905                           	opt stack 0
  9906  00202A                     _sendVSCPDriverCommandReply:
  9907                           	opt stack 22
  9908                           
  9909                           ;incstack = 0
  9910                           ;incstack = 0
  9911                           ;sendVSCPDriverCommandReply@cmdReplyCode stored from wreg
  9912  00202A  CFE8 F067          	movff	wreg,sendVSCPDriverCommandReply@cmdReplyCode
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;main.c: 2156: uint8_t crc = 0;
  9916  00202E  6B68               	clrf	sendVSCPDriverCommandReply@crc& (0+255),b
  9917  002030                     l995:
  9918                           
  9919                           ; BSR set to: 0
  9920  002030  A2AC               	btfss	4012,1,c	;volatile
  9921  002032  D7FE               	goto	l995
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;main.c: 2160: WriteUSART(0x10);
  9925  002034  0E10               	movlw	16
  9926  002036  EC77  F004         	call	_WriteUSART
  9927  00203A                     l998:
  9928  00203A  A2AC               	btfss	4012,1,c	;volatile
  9929  00203C  D7FE               	goto	l998
  9930                           
  9931                           ;main.c: 2162: WriteUSART(0x02);
  9932  00203E  0E02               	movlw	2
  9933  002040  EC77  F004         	call	_WriteUSART
  9934  002044                     l1001:
  9935  002044  A2AC               	btfss	4012,1,c	;volatile
  9936  002046  D7FE               	goto	l1001
  9937                           
  9938                           ;main.c: 2166: WriteUSART(254);
  9939  002048  0EFE               	movlw	254
  9940  00204A  EC77  F004         	call	_WriteUSART
  9941                           
  9942                           ;main.c: 2167: crc8(&crc, 254);
  9943  00204E  0100               	movlb	0	; () banked
  9944  002050  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  9945  002052  6F61               	movwf	(?_crc8+1)& (0+255),b
  9946  002054  0E68               	movlw	low sendVSCPDriverCommandReply@crc
  9947  002056  6F60               	movwf	?_crc8& (0+255),b
  9948  002058  0EFE               	movlw	254
  9949  00205A  6F62               	movwf	(?_crc8+2)& (0+255),b
  9950  00205C  EC7F  F005         	call	_crc8	;wreg free
  9951  002060                     l1004:
  9952  002060  A2AC               	btfss	4012,1,c	;volatile
  9953  002062  D7FE               	goto	l1004
  9954                           
  9955                           ;main.c: 2171: WriteUSART(0);
  9956  002064  0E00               	movlw	0
  9957  002066  EC77  F004         	call	_WriteUSART
  9958                           
  9959                           ;main.c: 2172: crc8(&crc, 0);
  9960  00206A  D845               	call	PL110	;call to abstracted procedure
  9961  00206C  EC7F  F005         	call	_crc8	;wreg free
  9962                           
  9963                           ; BSR set to: 3
  9964                           ;main.c: 2175: sendEscapedUartData(cmdbuf[ 2 ], &crc);
  9965  002070  0100               	movlb	0	; () banked
  9966  002072  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  9967  002074  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
  9968  002076  0E68               	movlw	low sendVSCPDriverCommandReply@crc
  9969  002078  6F63               	movwf	?_sendEscapedUartData& (0+255),b
  9970  00207A  0101               	movlb	1	; () banked
  9971  00207C  5107               	movf	(_cmdbuf+2)& (0+255),w,b
  9972  00207E  ECE3  F007         	call	_sendEscapedUartData
  9973  002082                     l1007:
  9974  002082  A2AC               	btfss	4012,1,c	;volatile
  9975  002084  D7FE               	goto	l1007
  9976                           
  9977                           ;main.c: 2179: WriteUSART(0);
  9978  002086  0E00               	movlw	0
  9979  002088  EC77  F004         	call	_WriteUSART
  9980                           
  9981                           ;main.c: 2180: crc8(&crc, 0);
  9982  00208C  D834               	call	PL110	;call to abstracted procedure
  9983  00208E  EC7F  F005         	call	_crc8	;wreg free
  9984  002092                     l1010:
  9985  002092  A2AC               	btfss	4012,1,c	;volatile
  9986  002094  D7FE               	goto	l1010
  9987                           
  9988                           ;main.c: 2182: WriteUSART(2);
  9989  002096  0E02               	movlw	2
  9990  002098  EC77  F004         	call	_WriteUSART
  9991                           
  9992                           ;main.c: 2183: crc8(&crc, 2);
  9993  00209C  0100               	movlb	0	; () banked
  9994  00209E  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  9995  0020A0  6F61               	movwf	(?_crc8+1)& (0+255),b
  9996  0020A2  0E68               	movlw	low sendVSCPDriverCommandReply@crc
  9997  0020A4  6F60               	movwf	?_crc8& (0+255),b
  9998  0020A6  0E02               	movlw	2
  9999  0020A8  6F62               	movwf	(?_crc8+2)& (0+255),b
 10000  0020AA  EC7F  F005         	call	_crc8	;wreg free
 10001  0020AE                     l1013:
 10002  0020AE  A2AC               	btfss	4012,1,c	;volatile
 10003  0020B0  D7FE               	goto	l1013
 10004                           
 10005                           ;main.c: 2187: sendEscapedUartData(cmdReplyCode, &crc);
 10006  0020B2  0100               	movlb	0	; () banked
 10007  0020B4  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10008  0020B6  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10009  0020B8  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10010  0020BA  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10011  0020BC  5167               	movf	sendVSCPDriverCommandReply@cmdReplyCode& (0+255),w,b
 10012  0020BE  ECE3  F007         	call	_sendEscapedUartData
 10013  0020C2                     l1016:
 10014  0020C2  A2AC               	btfss	4012,1,c	;volatile
 10015  0020C4  D7FE               	goto	l1016
 10016                           
 10017                           ;main.c: 2191: sendEscapedUartData(cmdCode, &crc);
 10018  0020C6  0100               	movlb	0	; () banked
 10019  0020C8  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10020  0020CA  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10021  0020CC  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10022  0020CE  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10023  0020D0  5166               	movf	sendVSCPDriverCommandReply@cmdCode& (0+255),w,b
 10024  0020D2  ECE3  F007         	call	_sendEscapedUartData
 10025                           
 10026                           ;main.c: 2194: sendEscapedUartData(crc, (0));
 10027  0020D6  0100               	movlb	0	; () banked
 10028  0020D8  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10029  0020DA  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10030  0020DC  5168               	movf	sendVSCPDriverCommandReply@crc& (0+255),w,b
 10031  0020DE  ECE3  F007         	call	_sendEscapedUartData
 10032  0020E2                     l1019:
 10033  0020E2  A2AC               	btfss	4012,1,c	;volatile
 10034  0020E4  D7FE               	goto	l1019
 10035                           
 10036                           ;main.c: 2198: WriteUSART(0x10);
 10037  0020E6  0E10               	movlw	16
 10038  0020E8  EC77  F004         	call	_WriteUSART
 10039  0020EC                     l1022:
 10040  0020EC  A2AC               	btfss	4012,1,c	;volatile
 10041  0020EE  D7FE               	goto	l1022
 10042                           
 10043                           ;main.c: 2200: WriteUSART(0x03);
 10044  0020F0  0E03               	movlw	3
 10045  0020F2  EF77  F004         	goto	_WriteUSART
 10046  0020F6                     __end_of_sendVSCPDriverCommandReply:
 10047                           	opt stack 0
 10048  0020F6                     PL110:
 10049                           	opt stack 22
 10050  0020F6  0100               	movlb	0	; () banked
 10051  0020F8  0E00               	movlw	high sendVSCPDriverCommandReply@crc
 10052  0020FA  6F61               	movwf	(?_crc8+1)& (0+255),b
 10053  0020FC  0E68               	movlw	low sendVSCPDriverCommandReply@crc
 10054  0020FE  6F60               	movwf	?_crc8& (0+255),b
 10055  002100  6B62               	clrf	(?_crc8+2)& (0+255),b
 10056  002102  0C00               	retlw	0
 10057  002104                     __end_ofPL110:
 10058                           	opt stack 0
 10059                           tblptru	equ	0xFF8
 10060                           tblptrh	equ	0xFF7
 10061                           tblptrl	equ	0xFF6
 10062                           tablat	equ	0xFF5
 10063                           prodh	equ	0xFF4
 10064                           prodl	equ	0xFF3
 10065                           intcon	equ	0xFF2
 10066                           indf0	equ	0xFEF
 10067                           postinc0	equ	0xFEE
 10068                           fsr0h	equ	0xFEA
 10069                           fsr0l	equ	0xFE9
 10070                           wreg	equ	0xFE8
 10071                           indf1	equ	0xFE7
 10072                           postinc1	equ	0xFE6
 10073                           postdec1	equ	0xFE5
 10074                           fsr1h	equ	0xFE2
 10075                           fsr1l	equ	0xFE1
 10076                           indf2	equ	0xFDF
 10077                           postinc2	equ	0xFDE
 10078                           postdec2	equ	0xFDD
 10079                           plusw2	equ	0xFDB
 10080                           fsr2h	equ	0xFDA
 10081                           fsr2l	equ	0xFD9
 10082                           status	equ	0xFD8
 10083                           
 10084 ;; *************** function _sendVSCPModeCapabilities *****************
 10085 ;; Defined at:
 10086 ;;		line 2562 in file "main.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;		None
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  crc             1    6[BANK0 ] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      enum E15660
 10093 ;; Registers used:
 10094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10095 ;; Tracked objects:
 10096 ;;		On entry : F/1
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10100 ;;      Params:         0       0       0       0       0       0       0
 10101 ;;      Locals:         0       1       0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0
 10103 ;;      Totals:         0       1       0       0       0       0       0
 10104 ;;Total ram usage:        1 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:    6
 10107 ;; This function calls:
 10108 ;;		_WriteUSART
 10109 ;;		_sendEscapedUartData
 10110 ;;		_crc8
 10111 ;; This function is called by:
 10112 ;;		_doModeVscp
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text10
 10117  001B66                     __ptext10:
 10118                           	opt stack 0
 10119  001B66                     _sendVSCPModeCapabilities:
 10120                           	opt stack 22
 10121                           
 10122                           ; BSR set to: 1
 10123                           ;main.c: 2563: uint8_t crc = 0;
 10124                           
 10125                           ;incstack = 0
 10126                           ;incstack = 0
 10127  001B66  0100               	movlb	0	; () banked
 10128  001B68  6B66               	clrf	sendVSCPModeCapabilities@crc& (0+255),b
 10129  001B6A                     l1155:
 10130  001B6A  A2AC               	btfss	4012,1,c	;volatile
 10131  001B6C  D7FE               	goto	l1155
 10132                           
 10133                           ;main.c: 2567: WriteUSART(0x10);
 10134  001B6E  0E10               	movlw	16
 10135  001B70  EC77  F004         	call	_WriteUSART
 10136  001B74                     l1158:
 10137  001B74  A2AC               	btfss	4012,1,c	;volatile
 10138  001B76  D7FE               	goto	l1158
 10139                           
 10140                           ;main.c: 2569: WriteUSART(0x02);
 10141  001B78  0E02               	movlw	2
 10142  001B7A  EC77  F004         	call	_WriteUSART
 10143  001B7E                     l1161:
 10144  001B7E  A2AC               	btfss	4012,1,c	;volatile
 10145  001B80  D7FE               	goto	l1161
 10146                           
 10147                           ;main.c: 2573: WriteUSART(9);
 10148  001B82  0E09               	movlw	9
 10149  001B84  EC77  F004         	call	_WriteUSART
 10150                           
 10151                           ;main.c: 2574: crc8(&crc, 9);
 10152  001B88  0100               	movlb	0	; () banked
 10153  001B8A  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10154  001B8C  6F61               	movwf	(?_crc8+1)& (0+255),b
 10155  001B8E  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10156  001B90  6F60               	movwf	?_crc8& (0+255),b
 10157  001B92  0E09               	movlw	9
 10158  001B94  6F62               	movwf	(?_crc8+2)& (0+255),b
 10159  001B96  EC7F  F005         	call	_crc8	;wreg free
 10160  001B9A                     l1164:
 10161  001B9A  A2AC               	btfss	4012,1,c	;volatile
 10162  001B9C  D7FE               	goto	l1164
 10163                           
 10164                           ;main.c: 2578: WriteUSART(0);
 10165  001B9E  0E00               	movlw	0
 10166  001BA0  EC77  F004         	call	_WriteUSART
 10167                           
 10168                           ;main.c: 2579: crc8(&crc, 0);
 10169  001BA4  0100               	movlb	0	; () banked
 10170  001BA6  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10171  001BA8  6F61               	movwf	(?_crc8+1)& (0+255),b
 10172  001BAA  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10173  001BAC  6F60               	movwf	?_crc8& (0+255),b
 10174  001BAE  0E00               	movlw	0
 10175  001BB0  6B62               	clrf	(?_crc8+2)& (0+255),b
 10176  001BB2  EC7F  F005         	call	_crc8	;wreg free
 10177                           
 10178                           ; BSR set to: 3
 10179                           ;main.c: 2582: sendEscapedUartData(sequencyno, &crc );
 10180  001BB6  0100               	movlb	0	; () banked
 10181  001BB8  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10182  001BBA  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10183  001BBC  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10184  001BBE  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10185  001BC0  51EE               	movf	_sequencyno& (0+255),w,b
 10186  001BC2  ECE3  F007         	call	_sendEscapedUartData
 10187                           
 10188                           ;main.c: 2583: sequencyno++;
 10189  001BC6  0100               	movlb	0	; () banked
 10190  001BC8  2BEE               	incf	_sequencyno& (0+255),f,b
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;main.c: 2586: sendEscapedUartData( 0, &crc );
 10194  001BCA  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10195  001BCC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10196  001BCE  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10197  001BD0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10198  001BD2  0E00               	movlw	0
 10199  001BD4  ECE3  F007         	call	_sendEscapedUartData
 10200                           
 10201                           ;main.c: 2587: sendEscapedUartData( 2, &crc );
 10202  001BD8  0100               	movlb	0	; () banked
 10203  001BDA  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10204  001BDC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10205  001BDE  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10206  001BE0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10207  001BE2  0E02               	movlw	2
 10208  001BE4  ECE3  F007         	call	_sendEscapedUartData
 10209                           
 10210                           ;main.c: 2590: sendEscapedUartData( 1, &crc );
 10211  001BE8  0100               	movlb	0	; () banked
 10212  001BEA  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10213  001BEC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10214  001BEE  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10215  001BF0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10216  001BF2  0E01               	movlw	1
 10217  001BF4  ECE3  F007         	call	_sendEscapedUartData
 10218                           
 10219                           ;main.c: 2591: sendEscapedUartData( 0, &crc );
 10220  001BF8  0100               	movlb	0	; () banked
 10221  001BFA  0E00               	movlw	high sendVSCPModeCapabilities@crc
 10222  001BFC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10223  001BFE  0E66               	movlw	low sendVSCPModeCapabilities@crc
 10224  001C00  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10225  001C02  0E00               	movlw	0
 10226  001C04  ECE3  F007         	call	_sendEscapedUartData
 10227                           
 10228                           ;main.c: 2594: sendEscapedUartData(crc, (0));
 10229  001C08  0100               	movlb	0	; () banked
 10230  001C0A  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10231  001C0C  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10232  001C0E  5166               	movf	sendVSCPModeCapabilities@crc& (0+255),w,b
 10233  001C10  ECE3  F007         	call	_sendEscapedUartData
 10234  001C14                     l1167:
 10235  001C14  A2AC               	btfss	4012,1,c	;volatile
 10236  001C16  D7FE               	goto	l1167
 10237                           
 10238                           ;main.c: 2598: WriteUSART(0x10);
 10239  001C18  0E10               	movlw	16
 10240  001C1A  EC77  F004         	call	_WriteUSART
 10241  001C1E                     l1170:
 10242  001C1E  A2AC               	btfss	4012,1,c	;volatile
 10243  001C20  D7FE               	goto	l1170
 10244                           
 10245                           ;main.c: 2600: WriteUSART(0x03);
 10246  001C22  0E03               	movlw	3
 10247  001C24  EF77  F004         	goto	_WriteUSART
 10248  001C28                     __end_of_sendVSCPModeCapabilities:
 10249                           	opt stack 0
 10250                           tblptru	equ	0xFF8
 10251                           tblptrh	equ	0xFF7
 10252                           tblptrl	equ	0xFF6
 10253                           tablat	equ	0xFF5
 10254                           prodh	equ	0xFF4
 10255                           prodl	equ	0xFF3
 10256                           intcon	equ	0xFF2
 10257                           indf0	equ	0xFEF
 10258                           postinc0	equ	0xFEE
 10259                           fsr0h	equ	0xFEA
 10260                           fsr0l	equ	0xFE9
 10261                           wreg	equ	0xFE8
 10262                           indf1	equ	0xFE7
 10263                           postinc1	equ	0xFE6
 10264                           postdec1	equ	0xFE5
 10265                           fsr1h	equ	0xFE2
 10266                           fsr1l	equ	0xFE1
 10267                           indf2	equ	0xFDF
 10268                           postinc2	equ	0xFDE
 10269                           postdec2	equ	0xFDD
 10270                           plusw2	equ	0xFDB
 10271                           fsr2h	equ	0xFDA
 10272                           fsr2l	equ	0xFD9
 10273                           status	equ	0xFD8
 10274                           
 10275 ;; *************** function _receiveVSCPModeMultiCanalMsg *****************
 10276 ;; Defined at:
 10277 ;;		line 2696 in file "main.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1    wreg      enum E15660
 10284 ;; Registers used:
 10285 ;;		wreg
 10286 ;; Tracked objects:
 10287 ;;		On entry : F/1
 10288 ;;		On exit  : F/1
 10289 ;;		Unchanged: F/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10291 ;;      Params:         0       0       0       0       0       0       0
 10292 ;;      Locals:         0       0       0       0       0       0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0
 10294 ;;      Totals:         0       0       0       0       0       0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    3
 10298 ;; This function calls:
 10299 ;;		Nothing
 10300 ;; This function is called by:
 10301 ;;		_doModeVscp
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text11
 10306  000882                     __ptext11:
 10307                           	opt stack 0
 10308  000882                     _receiveVSCPModeMultiCanalMsg:
 10309                           	opt stack 25
 10310                           
 10311                           ; BSR set to: 1
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;main.c: 2698: return 0;
 10315                           
 10316                           ;incstack = 0
 10317                           ;incstack = 0
 10318  000882  0C00               	retlw	0
 10319  000884                     __end_of_receiveVSCPModeMultiCanalMsg:
 10320                           	opt stack 0
 10321                           tblptru	equ	0xFF8
 10322                           tblptrh	equ	0xFF7
 10323                           tblptrl	equ	0xFF6
 10324                           tablat	equ	0xFF5
 10325                           prodh	equ	0xFF4
 10326                           prodl	equ	0xFF3
 10327                           intcon	equ	0xFF2
 10328                           indf0	equ	0xFEF
 10329                           postinc0	equ	0xFEE
 10330                           fsr0h	equ	0xFEA
 10331                           fsr0l	equ	0xFE9
 10332                           wreg	equ	0xFE8
 10333                           indf1	equ	0xFE7
 10334                           postinc1	equ	0xFE6
 10335                           postdec1	equ	0xFE5
 10336                           fsr1h	equ	0xFE2
 10337                           fsr1l	equ	0xFE1
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           postdec2	equ	0xFDD
 10341                           plusw2	equ	0xFDB
 10342                           fsr2h	equ	0xFDA
 10343                           fsr2l	equ	0xFD9
 10344                           status	equ	0xFD8
 10345                           
 10346 ;; *************** function _receiveVSCPModeCanalMsg *****************
 10347 ;; Defined at:
 10348 ;;		line 2672 in file "main.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;		None
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;  data            8   67[BANK0 ] unsigned char [8]
 10353 ;;  id              4   75[BANK0 ] unsigned long 
 10354 ;;  dlc             1   79[BANK0 ] unsigned char 
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      enum E15660
 10357 ;; Registers used:
 10358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : F/1
 10361 ;;		On exit  : F/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10364 ;;      Params:         0       0       0       0       0       0       0
 10365 ;;      Locals:         0      13       0       0       0       0       0
 10366 ;;      Temps:          0      20       0       0       0       0       0
 10367 ;;      Totals:         0      33       0       0       0       0       0
 10368 ;;Total ram usage:       33 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    6
 10371 ;; This function calls:
 10372 ;;		_memcpy
 10373 ;;		_sendCANFrame
 10374 ;; This function is called by:
 10375 ;;		_doModeVscp
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text12
 10380  0021EA                     __ptext12:
 10381                           	opt stack 0
 10382  0021EA                     _receiveVSCPModeCanalMsg:
 10383                           	opt stack 22
 10384                           
 10385                           ; BSR set to: 1
 10386                           ;main.c: 2673: uint32_t id;
 10387                           ;main.c: 2674: uint8_t dlc;
 10388                           ;main.c: 2675: uint8_t data[8];
 10389                           ;main.c: 2677: id = ((uint32_t) cmdbuf[5] << 26) |
 10390                           ;main.c: 2678: ((uint32_t) cmdbuf[5 + 1] << 16) |
 10391                           ;main.c: 2679: ((uint32_t) cmdbuf[5 + 2] << 8) |
 10392                           ;main.c: 2680: cmdbuf[5 + 3];
 10393                           
 10394                           ; BSR set to: 1
 10395                           ;incstack = 0
 10396                           ;incstack = 0
 10397  0021EA  C10C  F08F         	movff	_cmdbuf+7,??_receiveVSCPModeCanalMsg
 10398  0021EE  0100               	movlb	0	; () banked
 10399  0021F0  6B90               	clrf	(??_receiveVSCPModeCanalMsg+1)& (0+255),b
 10400  0021F2  6B91               	clrf	(??_receiveVSCPModeCanalMsg+2)& (0+255),b
 10401  0021F4  6B92               	clrf	(??_receiveVSCPModeCanalMsg+3)& (0+255),b
 10402  0021F6  C091  F092         	movff	??_receiveVSCPModeCanalMsg+2,??_receiveVSCPModeCanalMsg+3
 10403  0021FA  C090  F091         	movff	??_receiveVSCPModeCanalMsg+1,??_receiveVSCPModeCanalMsg+2
 10404  0021FE  C08F  F090         	movff	??_receiveVSCPModeCanalMsg,??_receiveVSCPModeCanalMsg+1
 10405  002202  6B8F               	clrf	??_receiveVSCPModeCanalMsg& (0+255),b
 10406  002204  C10B  F093         	movff	_cmdbuf+6,??_receiveVSCPModeCanalMsg+4
 10407  002208  6B94               	clrf	(??_receiveVSCPModeCanalMsg+5)& (0+255),b
 10408  00220A  6B95               	clrf	(??_receiveVSCPModeCanalMsg+6)& (0+255),b
 10409  00220C  6B96               	clrf	(??_receiveVSCPModeCanalMsg+7)& (0+255),b
 10410  00220E  C094  F096         	movff	??_receiveVSCPModeCanalMsg+5,??_receiveVSCPModeCanalMsg+7
 10411  002212  C093  F095         	movff	??_receiveVSCPModeCanalMsg+4,??_receiveVSCPModeCanalMsg+6
 10412  002216  6B94               	clrf	(??_receiveVSCPModeCanalMsg+5)& (0+255),b
 10413  002218  6B93               	clrf	(??_receiveVSCPModeCanalMsg+4)& (0+255),b
 10414  00221A  C10A  F097         	movff	_cmdbuf+5,??_receiveVSCPModeCanalMsg+8
 10415  00221E  6B98               	clrf	(??_receiveVSCPModeCanalMsg+9)& (0+255),b
 10416  002220  6B99               	clrf	(??_receiveVSCPModeCanalMsg+10)& (0+255),b
 10417  002222  6B9A               	clrf	(??_receiveVSCPModeCanalMsg+11)& (0+255),b
 10418  002224  0E1A               	movlw	26
 10419  002226                     u23475:
 10420  002226  90D8               	bcf	status,0,c
 10421  002228  3797               	rlcf	(??_receiveVSCPModeCanalMsg+8)& (0+255),f,b
 10422  00222A  3798               	rlcf	(??_receiveVSCPModeCanalMsg+9)& (0+255),f,b
 10423  00222C  3799               	rlcf	(??_receiveVSCPModeCanalMsg+10)& (0+255),f,b
 10424  00222E  379A               	rlcf	(??_receiveVSCPModeCanalMsg+11)& (0+255),f,b
 10425  002230  2EE8               	decfsz	wreg,f,c
 10426  002232  D7F9               	goto	u23475
 10427  002234  5193               	movf	(??_receiveVSCPModeCanalMsg+4)& (0+255),w,b
 10428  002236  1197               	iorwf	(??_receiveVSCPModeCanalMsg+8)& (0+255),w,b
 10429  002238  6F9B               	movwf	(??_receiveVSCPModeCanalMsg+12)& (0+255),b
 10430  00223A  5194               	movf	(??_receiveVSCPModeCanalMsg+5)& (0+255),w,b
 10431  00223C  1198               	iorwf	(??_receiveVSCPModeCanalMsg+9)& (0+255),w,b
 10432  00223E  6F9C               	movwf	(??_receiveVSCPModeCanalMsg+13)& (0+255),b
 10433  002240  5195               	movf	(??_receiveVSCPModeCanalMsg+6)& (0+255),w,b
 10434  002242  1199               	iorwf	(??_receiveVSCPModeCanalMsg+10)& (0+255),w,b
 10435  002244  6F9D               	movwf	(??_receiveVSCPModeCanalMsg+14)& (0+255),b
 10436  002246  5196               	movf	(??_receiveVSCPModeCanalMsg+7)& (0+255),w,b
 10437  002248  119A               	iorwf	(??_receiveVSCPModeCanalMsg+11)& (0+255),w,b
 10438  00224A  6F9E               	movwf	(??_receiveVSCPModeCanalMsg+15)& (0+255),b
 10439  00224C  518F               	movf	??_receiveVSCPModeCanalMsg& (0+255),w,b
 10440  00224E  119B               	iorwf	(??_receiveVSCPModeCanalMsg+12)& (0+255),w,b
 10441  002250  6F9F               	movwf	(??_receiveVSCPModeCanalMsg+16)& (0+255),b
 10442  002252  5190               	movf	(??_receiveVSCPModeCanalMsg+1)& (0+255),w,b
 10443  002254  119C               	iorwf	(??_receiveVSCPModeCanalMsg+13)& (0+255),w,b
 10444  002256  6FA0               	movwf	(??_receiveVSCPModeCanalMsg+17)& (0+255),b
 10445  002258  5191               	movf	(??_receiveVSCPModeCanalMsg+2)& (0+255),w,b
 10446  00225A  119D               	iorwf	(??_receiveVSCPModeCanalMsg+14)& (0+255),w,b
 10447  00225C  6FA1               	movwf	(??_receiveVSCPModeCanalMsg+18)& (0+255),b
 10448  00225E  5192               	movf	(??_receiveVSCPModeCanalMsg+3)& (0+255),w,b
 10449  002260  119E               	iorwf	(??_receiveVSCPModeCanalMsg+15)& (0+255),w,b
 10450  002262  6FA2               	movwf	(??_receiveVSCPModeCanalMsg+19)& (0+255),b
 10451  002264  0101               	movlb	1	; () banked
 10452  002266  510D               	movf	(_cmdbuf+8)& (0+255),w,b
 10453  002268  0100               	movlb	0	; () banked
 10454  00226A  119F               	iorwf	(??_receiveVSCPModeCanalMsg+16)& (0+255),w,b
 10455  00226C  6FAB               	movwf	receiveVSCPModeCanalMsg@id& (0+255),b
 10456  00226E  51A0               	movf	(??_receiveVSCPModeCanalMsg+17)& (0+255),w,b
 10457  002270  6FAC               	movwf	(receiveVSCPModeCanalMsg@id+1)& (0+255),b
 10458  002272  51A1               	movf	(??_receiveVSCPModeCanalMsg+18)& (0+255),w,b
 10459  002274  6FAD               	movwf	(receiveVSCPModeCanalMsg@id+2)& (0+255),b
 10460  002276  51A2               	movf	(??_receiveVSCPModeCanalMsg+19)& (0+255),w,b
 10461  002278  6FAE               	movwf	(receiveVSCPModeCanalMsg@id+3)& (0+255),b
 10462                           
 10463                           ;main.c: 2681: dlc = ( cmdbuf[4] - 4 ) & 0x07;
 10464  00227A  0101               	movlb	1	; () banked
 10465  00227C  5109               	movf	(_cmdbuf+4)& (0+255),w,b
 10466  00227E  0FFC               	addlw	252
 10467  002280  0B07               	andlw	7
 10468  002282  0100               	movlb	0	; () banked
 10469  002284  6FAF               	movwf	receiveVSCPModeCanalMsg@dlc& (0+255),b
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;main.c: 2682: if ( dlc > 8 ) {
 10473  002286  0E08               	movlw	8
 10474  002288  65AF               	cpfsgt	receiveVSCPModeCanalMsg@dlc& (0+255),b
 10475  00228A  D002               	goto	l18427
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;main.c: 2683: return 0;
 10479  00228C  0E00               	movlw	0
 10480  00228E  D022               	goto	l1208
 10481  002290                     l18427:
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;main.c: 2684: }
 10485                           ;main.c: 2685: memcpy( data, cmdbuf + 5 + 4, dlc );
 10486  002290  0E00               	movlw	high receiveVSCPModeCanalMsg@data
 10487  002292  6E20               	movwf	?_memcpy+1,c
 10488  002294  0EA3               	movlw	low receiveVSCPModeCanalMsg@data
 10489  002296  6E1F               	movwf	?_memcpy,c
 10490  002298  0E0E               	movlw	low (_cmdbuf+9)
 10491  00229A  6F8F               	movwf	??_receiveVSCPModeCanalMsg& (0+255),b
 10492  00229C  0E01               	movlw	high (_cmdbuf+9)
 10493  00229E  6F90               	movwf	(??_receiveVSCPModeCanalMsg+1)& (0+255),b
 10494  0022A0  C08F  F021         	movff	??_receiveVSCPModeCanalMsg,?_memcpy+2
 10495  0022A4  C090  F022         	movff	??_receiveVSCPModeCanalMsg+1,?_memcpy+3
 10496  0022A8  C0AF  F023         	movff	receiveVSCPModeCanalMsg@dlc,?_memcpy+4
 10497  0022AC  6A24               	clrf	?_memcpy+5,c
 10498  0022AE  EC54  F006         	call	_memcpy	;wreg free
 10499                           
 10500                           ;main.c: 2687: return sendCANFrame(id, dlc, data);
 10501  0022B2  C0AB  F088         	movff	receiveVSCPModeCanalMsg@id,?_sendCANFrame
 10502  0022B6  C0AC  F089         	movff	receiveVSCPModeCanalMsg@id+1,?_sendCANFrame+1
 10503  0022BA  C0AD  F08A         	movff	receiveVSCPModeCanalMsg@id+2,?_sendCANFrame+2
 10504  0022BE  C0AE  F08B         	movff	receiveVSCPModeCanalMsg@id+3,?_sendCANFrame+3
 10505  0022C2  C0AF  F08C         	movff	receiveVSCPModeCanalMsg@dlc,?_sendCANFrame+4
 10506  0022C6  0100               	movlb	0	; () banked
 10507  0022C8  0E00               	movlw	high receiveVSCPModeCanalMsg@data
 10508  0022CA  6F8E               	movwf	(?_sendCANFrame+6)& (0+255),b
 10509  0022CC  0EA3               	movlw	low receiveVSCPModeCanalMsg@data
 10510  0022CE  6F8D               	movwf	(?_sendCANFrame+5)& (0+255),b
 10511  0022D0  EC63  F005         	call	_sendCANFrame	;wreg free
 10512  0022D4                     l1208:
 10513                           
 10514                           ; BSR set to: 0
 10515  0022D4  0012               	return	
 10516  0022D6                     __end_of_receiveVSCPModeCanalMsg:
 10517                           	opt stack 0
 10518                           tblptru	equ	0xFF8
 10519                           tblptrh	equ	0xFF7
 10520                           tblptrl	equ	0xFF6
 10521                           tablat	equ	0xFF5
 10522                           prodh	equ	0xFF4
 10523                           prodl	equ	0xFF3
 10524                           intcon	equ	0xFF2
 10525                           indf0	equ	0xFEF
 10526                           postinc0	equ	0xFEE
 10527                           fsr0h	equ	0xFEA
 10528                           fsr0l	equ	0xFE9
 10529                           wreg	equ	0xFE8
 10530                           indf1	equ	0xFE7
 10531                           postinc1	equ	0xFE6
 10532                           postdec1	equ	0xFE5
 10533                           fsr1h	equ	0xFE2
 10534                           fsr1l	equ	0xFE1
 10535                           indf2	equ	0xFDF
 10536                           postinc2	equ	0xFDE
 10537                           postdec2	equ	0xFDD
 10538                           plusw2	equ	0xFDB
 10539                           fsr2h	equ	0xFDA
 10540                           fsr2l	equ	0xFD9
 10541                           status	equ	0xFD8
 10542                           
 10543 ;; *************** function _memcpy *****************
 10544 ;; Defined at:
 10545 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memcpy.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  d1              2   30[COMRAM] PTR void 
 10548 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 10549 ;;  s1              2   32[COMRAM] PTR const void 
 10550 ;;		 -> vscpData(8), cmdbuf(80), 
 10551 ;;  n               2   34[COMRAM] unsigned int 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  s               2    2[BANK0 ] PTR const unsigned char 
 10554 ;;		 -> vscpData(8), cmdbuf(80), 
 10555 ;;  d               2    0[BANK0 ] PTR unsigned char 
 10556 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  2   30[COMRAM] PTR void 
 10559 ;; Registers used:
 10560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10561 ;; Tracked objects:
 10562 ;;		On entry : F/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10566 ;;      Params:         6       0       0       0       0       0       0
 10567 ;;      Locals:         0       4       0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0
 10569 ;;      Totals:         6       4       0       0       0       0       0
 10570 ;;Total ram usage:       10 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    3
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_doModeSLCAN
 10577 ;;		_receiveVSCPModeCanalMsg
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text13
 10582  000CA8                     __ptext13:
 10583                           	opt stack 0
 10584  000CA8                     _memcpy:
 10585                           	opt stack 25
 10586                           
 10587                           ; BSR set to: 0
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;incstack = 0
 10591                           ;incstack = 0
 10592  000CA8  C021  F062         	movff	memcpy@s1,memcpy@s
 10593  000CAC  C022  F063         	movff	memcpy@s1+1,memcpy@s+1
 10594  000CB0  C01F  F060         	movff	memcpy@d1,memcpy@d
 10595  000CB4  C020  F061         	movff	memcpy@d1+1,memcpy@d+1
 10596  000CB8  D00F               	goto	l18637
 10597  000CBA                     l18631:
 10598  000CBA  C062  FFD9         	movff	memcpy@s,fsr2l
 10599  000CBE  C063  FFDA         	movff	memcpy@s+1,fsr2h
 10600  000CC2  C060  FFE1         	movff	memcpy@d,fsr1l
 10601  000CC6  C061  FFE2         	movff	memcpy@d+1,fsr1h
 10602  000CCA  CFDF FFE7          	movff	indf2,indf1
 10603  000CCE  0100               	movlb	0	; () banked
 10604  000CD0  4B62               	infsnz	memcpy@s& (0+255),f,b
 10605  000CD2  2B63               	incf	(memcpy@s+1)& (0+255),f,b
 10606                           
 10607                           ; BSR set to: 0
 10608  000CD4  4B60               	infsnz	memcpy@d& (0+255),f,b
 10609  000CD6  2B61               	incf	(memcpy@d+1)& (0+255),f,b
 10610  000CD8                     l18637:
 10611                           
 10612                           ; BSR set to: 0
 10613  000CD8  0623               	decf	memcpy@n,f,c
 10614  000CDA  A0D8               	btfss	status,0,c
 10615  000CDC  0624               	decf	memcpy@n+1,f,c
 10616  000CDE  2823               	incf	memcpy@n& (0+255),w,c
 10617  000CE0  B4D8               	btfsc	status,2,c
 10618  000CE2  2824               	incf	(memcpy@n+1)& (0+255),w,c
 10619  000CE4  B4D8               	btfsc	status,2,c
 10620  000CE6  0012               	return	
 10621  000CE8  D7E8               	goto	l18631
 10622  000CEA                     __end_of_memcpy:
 10623                           	opt stack 0
 10624                           tblptru	equ	0xFF8
 10625                           tblptrh	equ	0xFF7
 10626                           tblptrl	equ	0xFF6
 10627                           tablat	equ	0xFF5
 10628                           prodh	equ	0xFF4
 10629                           prodl	equ	0xFF3
 10630                           intcon	equ	0xFF2
 10631                           indf0	equ	0xFEF
 10632                           postinc0	equ	0xFEE
 10633                           fsr0h	equ	0xFEA
 10634                           fsr0l	equ	0xFE9
 10635                           wreg	equ	0xFE8
 10636                           indf1	equ	0xFE7
 10637                           postinc1	equ	0xFE6
 10638                           postdec1	equ	0xFE5
 10639                           fsr1h	equ	0xFE2
 10640                           fsr1l	equ	0xFE1
 10641                           indf2	equ	0xFDF
 10642                           postinc2	equ	0xFDE
 10643                           postdec2	equ	0xFDD
 10644                           plusw2	equ	0xFDB
 10645                           fsr2h	equ	0xFDA
 10646                           fsr2l	equ	0xFD9
 10647                           status	equ	0xFD8
 10648                           
 10649 ;; *************** function _sendVSCPDriverAck *****************
 10650 ;; Defined at:
 10651 ;;		line 2066 in file "main.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  crc             1    6[BANK0 ] unsigned char 
 10656 ;; Return value:  Size  Location     Type
 10657 ;;		None               void
 10658 ;; Registers used:
 10659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/1
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10665 ;;      Params:         0       0       0       0       0       0       0
 10666 ;;      Locals:         0       1       0       0       0       0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0
 10668 ;;      Totals:         0       1       0       0       0       0       0
 10669 ;;Total ram usage:        1 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:    6
 10672 ;; This function calls:
 10673 ;;		_WriteUSART
 10674 ;;		_sendEscapedUartData
 10675 ;;		_crc8
 10676 ;; This function is called by:
 10677 ;;		_doModeVscp
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text14
 10682  001A0C                     __ptext14:
 10683                           	opt stack 0
 10684  001A0C                     _sendVSCPDriverAck:
 10685                           	opt stack 22
 10686                           
 10687                           ;main.c: 2067: uint8_t crc = 0;
 10688                           
 10689                           ;incstack = 0
 10690                           ;incstack = 0
 10691  001A0C  0100               	movlb	0	; () banked
 10692  001A0E  6B66               	clrf	sendVSCPDriverAck@crc& (0+255),b
 10693  001A10                     l941:
 10694  001A10  A2AC               	btfss	4012,1,c	;volatile
 10695  001A12  D7FE               	goto	l941
 10696                           
 10697                           ;main.c: 2071: WriteUSART(0x10);
 10698  001A14  0E10               	movlw	16
 10699  001A16  EC77  F004         	call	_WriteUSART
 10700  001A1A                     l944:
 10701  001A1A  A2AC               	btfss	4012,1,c	;volatile
 10702  001A1C  D7FE               	goto	l944
 10703                           
 10704                           ;main.c: 2073: WriteUSART(0x02);
 10705  001A1E  0E02               	movlw	2
 10706  001A20  EC77  F004         	call	_WriteUSART
 10707  001A24                     l947:
 10708  001A24  A2AC               	btfss	4012,1,c	;volatile
 10709  001A26  D7FE               	goto	l947
 10710                           
 10711                           ;main.c: 2077: WriteUSART(251);
 10712  001A28  0EFB               	movlw	251
 10713  001A2A  EC77  F004         	call	_WriteUSART
 10714                           
 10715                           ;main.c: 2078: crc8(&crc, 251);
 10716  001A2E  0100               	movlb	0	; () banked
 10717  001A30  0E00               	movlw	high sendVSCPDriverAck@crc
 10718  001A32  6F61               	movwf	(?_crc8+1)& (0+255),b
 10719  001A34  0E66               	movlw	low sendVSCPDriverAck@crc
 10720  001A36  6F60               	movwf	?_crc8& (0+255),b
 10721  001A38  0EFB               	movlw	251
 10722  001A3A  6F62               	movwf	(?_crc8+2)& (0+255),b
 10723  001A3C  EC7F  F005         	call	_crc8	;wreg free
 10724  001A40                     l950:
 10725  001A40  A2AC               	btfss	4012,1,c	;volatile
 10726  001A42  D7FE               	goto	l950
 10727                           
 10728                           ;main.c: 2082: WriteUSART(0);
 10729  001A44  0E00               	movlw	0
 10730  001A46  EC77  F004         	call	_WriteUSART
 10731                           
 10732                           ;main.c: 2083: crc8(&crc, 0);
 10733  001A4A  D82B               	call	PL60	;call to abstracted procedure
 10734  001A4C  EC7F  F005         	call	_crc8	;wreg free
 10735                           
 10736                           ; BSR set to: 3
 10737                           ;main.c: 2086: sendEscapedUartData(cmdbuf[ 2 ], &crc);
 10738  001A50  0100               	movlb	0	; () banked
 10739  001A52  0E00               	movlw	high sendVSCPDriverAck@crc
 10740  001A54  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10741  001A56  0E66               	movlw	low sendVSCPDriverAck@crc
 10742  001A58  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10743  001A5A  0101               	movlb	1	; () banked
 10744  001A5C  5107               	movf	(_cmdbuf+2)& (0+255),w,b
 10745  001A5E  ECE3  F007         	call	_sendEscapedUartData
 10746  001A62                     l953:
 10747  001A62  A2AC               	btfss	4012,1,c	;volatile
 10748  001A64  D7FE               	goto	l953
 10749                           
 10750                           ;main.c: 2090: WriteUSART(0);
 10751  001A66  0E00               	movlw	0
 10752  001A68  EC77  F004         	call	_WriteUSART
 10753                           
 10754                           ;main.c: 2091: crc8(&crc, 0);
 10755  001A6C  D81A               	call	PL60	;call to abstracted procedure
 10756  001A6E  EC7F  F005         	call	_crc8	;wreg free
 10757  001A72                     l956:
 10758  001A72  A2AC               	btfss	4012,1,c	;volatile
 10759  001A74  D7FE               	goto	l956
 10760                           
 10761                           ;main.c: 2093: WriteUSART(0);
 10762  001A76  0E00               	movlw	0
 10763  001A78  EC77  F004         	call	_WriteUSART
 10764                           
 10765                           ;main.c: 2094: crc8(&crc, 0);
 10766  001A7C  D812               	call	PL60	;call to abstracted procedure
 10767  001A7E  EC7F  F005         	call	_crc8	;wreg free
 10768                           
 10769                           ; BSR set to: 3
 10770                           ;main.c: 2097: sendEscapedUartData(crc, (0));
 10771  001A82  0100               	movlb	0	; () banked
 10772  001A84  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10773  001A86  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10774  001A88  5166               	movf	sendVSCPDriverAck@crc& (0+255),w,b
 10775  001A8A  ECE3  F007         	call	_sendEscapedUartData
 10776  001A8E                     l959:
 10777  001A8E  A2AC               	btfss	4012,1,c	;volatile
 10778  001A90  D7FE               	goto	l959
 10779                           
 10780                           ;main.c: 2101: WriteUSART(0x10);
 10781  001A92  0E10               	movlw	16
 10782  001A94  EC77  F004         	call	_WriteUSART
 10783  001A98                     l962:
 10784  001A98  A2AC               	btfss	4012,1,c	;volatile
 10785  001A9A  D7FE               	goto	l962
 10786                           
 10787                           ;main.c: 2103: WriteUSART(0x03);
 10788  001A9C  0E03               	movlw	3
 10789  001A9E  EF77  F004         	goto	_WriteUSART
 10790  001AA2                     __end_of_sendVSCPDriverAck:
 10791                           	opt stack 0
 10792  001AA2                     PL60:
 10793                           	opt stack 22
 10794  001AA2  0100               	movlb	0	; () banked
 10795  001AA4  0E00               	movlw	high sendVSCPDriverAck@crc
 10796  001AA6  6F61               	movwf	(?_crc8+1)& (0+255),b
 10797  001AA8  0E66               	movlw	low sendVSCPDriverAck@crc
 10798  001AAA  6F60               	movwf	?_crc8& (0+255),b
 10799  001AAC  6B62               	clrf	(?_crc8+2)& (0+255),b
 10800  001AAE  0C00               	retlw	0
 10801  001AB0                     __end_ofPL60:
 10802                           	opt stack 0
 10803                           tblptru	equ	0xFF8
 10804                           tblptrh	equ	0xFF7
 10805                           tblptrl	equ	0xFF6
 10806                           tablat	equ	0xFF5
 10807                           prodh	equ	0xFF4
 10808                           prodl	equ	0xFF3
 10809                           intcon	equ	0xFF2
 10810                           indf0	equ	0xFEF
 10811                           postinc0	equ	0xFEE
 10812                           fsr0h	equ	0xFEA
 10813                           fsr0l	equ	0xFE9
 10814                           wreg	equ	0xFE8
 10815                           indf1	equ	0xFE7
 10816                           postinc1	equ	0xFE6
 10817                           postdec1	equ	0xFE5
 10818                           fsr1h	equ	0xFE2
 10819                           fsr1l	equ	0xFE1
 10820                           indf2	equ	0xFDF
 10821                           postinc2	equ	0xFDE
 10822                           postdec2	equ	0xFDD
 10823                           plusw2	equ	0xFDB
 10824                           fsr2h	equ	0xFDA
 10825                           fsr2l	equ	0xFD9
 10826                           status	equ	0xFD8
 10827                           
 10828 ;; *************** function _sendVSCPDriverNack *****************
 10829 ;; Defined at:
 10830 ;;		line 2110 in file "main.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;		None
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  crc             1    6[BANK0 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;		None               void
 10837 ;; Registers used:
 10838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : E/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10844 ;;      Params:         0       0       0       0       0       0       0
 10845 ;;      Locals:         0       1       0       0       0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0
 10847 ;;      Totals:         0       1       0       0       0       0       0
 10848 ;;Total ram usage:        1 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    6
 10851 ;; This function calls:
 10852 ;;		_WriteUSART
 10853 ;;		_sendEscapedUartData
 10854 ;;		_crc8
 10855 ;; This function is called by:
 10856 ;;		_doModeVscp
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text15
 10861  001968                     __ptext15:
 10862                           	opt stack 0
 10863  001968                     _sendVSCPDriverNack:
 10864                           	opt stack 22
 10865                           
 10866                           ;main.c: 2111: uint8_t crc = 0;
 10867                           
 10868                           ;incstack = 0
 10869                           ;incstack = 0
 10870  001968  0100               	movlb	0	; () banked
 10871  00196A  6B66               	clrf	sendVSCPDriverNack@crc& (0+255),b
 10872  00196C                     l968:
 10873  00196C  A2AC               	btfss	4012,1,c	;volatile
 10874  00196E  D7FE               	goto	l968
 10875                           
 10876                           ;main.c: 2115: WriteUSART(0x10);
 10877  001970  0E10               	movlw	16
 10878  001972  EC77  F004         	call	_WriteUSART
 10879  001976                     l971:
 10880  001976  A2AC               	btfss	4012,1,c	;volatile
 10881  001978  D7FE               	goto	l971
 10882                           
 10883                           ;main.c: 2117: WriteUSART(0x02);
 10884  00197A  0E02               	movlw	2
 10885  00197C  EC77  F004         	call	_WriteUSART
 10886  001980                     l974:
 10887  001980  A2AC               	btfss	4012,1,c	;volatile
 10888  001982  D7FE               	goto	l974
 10889                           
 10890                           ;main.c: 2121: WriteUSART(252);
 10891  001984  0EFC               	movlw	252
 10892  001986  EC77  F004         	call	_WriteUSART
 10893                           
 10894                           ;main.c: 2122: crc8(&crc, 252);
 10895  00198A  0100               	movlb	0	; () banked
 10896  00198C  0E00               	movlw	high sendVSCPDriverNack@crc
 10897  00198E  6F61               	movwf	(?_crc8+1)& (0+255),b
 10898  001990  0E66               	movlw	low sendVSCPDriverNack@crc
 10899  001992  6F60               	movwf	?_crc8& (0+255),b
 10900  001994  0EFC               	movlw	252
 10901  001996  6F62               	movwf	(?_crc8+2)& (0+255),b
 10902  001998  EC7F  F005         	call	_crc8	;wreg free
 10903  00199C                     l977:
 10904  00199C  A2AC               	btfss	4012,1,c	;volatile
 10905  00199E  D7FE               	goto	l977
 10906                           
 10907                           ;main.c: 2126: WriteUSART(0);
 10908  0019A0  0E00               	movlw	0
 10909  0019A2  EC77  F004         	call	_WriteUSART
 10910                           
 10911                           ;main.c: 2127: crc8(&crc, 0);
 10912  0019A6  D82B               	call	PL58	;call to abstracted procedure
 10913  0019A8  EC7F  F005         	call	_crc8	;wreg free
 10914                           
 10915                           ; BSR set to: 3
 10916                           ;main.c: 2130: sendEscapedUartData(cmdbuf[ 2 ], &crc);
 10917  0019AC  0100               	movlb	0	; () banked
 10918  0019AE  0E00               	movlw	high sendVSCPDriverNack@crc
 10919  0019B0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 10920  0019B2  0E66               	movlw	low sendVSCPDriverNack@crc
 10921  0019B4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 10922  0019B6  0101               	movlb	1	; () banked
 10923  0019B8  5107               	movf	(_cmdbuf+2)& (0+255),w,b
 10924  0019BA  ECE3  F007         	call	_sendEscapedUartData
 10925  0019BE                     l980:
 10926  0019BE  A2AC               	btfss	4012,1,c	;volatile
 10927  0019C0  D7FE               	goto	l980
 10928                           
 10929                           ;main.c: 2134: WriteUSART(0);
 10930  0019C2  0E00               	movlw	0
 10931  0019C4  EC77  F004         	call	_WriteUSART
 10932                           
 10933                           ;main.c: 2135: crc8(&crc, 0);
 10934  0019C8  D81A               	call	PL58	;call to abstracted procedure
 10935  0019CA  EC7F  F005         	call	_crc8	;wreg free
 10936  0019CE                     l983:
 10937  0019CE  A2AC               	btfss	4012,1,c	;volatile
 10938  0019D0  D7FE               	goto	l983
 10939                           
 10940                           ;main.c: 2137: WriteUSART(0);
 10941  0019D2  0E00               	movlw	0
 10942  0019D4  EC77  F004         	call	_WriteUSART
 10943                           
 10944                           ;main.c: 2138: crc8(&crc, 0);
 10945  0019D8  D812               	call	PL58	;call to abstracted procedure
 10946  0019DA  EC7F  F005         	call	_crc8	;wreg free
 10947                           
 10948                           ; BSR set to: 3
 10949                           ;main.c: 2141: sendEscapedUartData(crc, (0));
 10950  0019DE  0100               	movlb	0	; () banked
 10951  0019E0  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 10952  0019E2  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 10953  0019E4  5166               	movf	sendVSCPDriverNack@crc& (0+255),w,b
 10954  0019E6  ECE3  F007         	call	_sendEscapedUartData
 10955  0019EA                     l986:
 10956  0019EA  A2AC               	btfss	4012,1,c	;volatile
 10957  0019EC  D7FE               	goto	l986
 10958                           
 10959                           ;main.c: 2145: WriteUSART(0x10);
 10960  0019EE  0E10               	movlw	16
 10961  0019F0  EC77  F004         	call	_WriteUSART
 10962  0019F4                     l989:
 10963  0019F4  A2AC               	btfss	4012,1,c	;volatile
 10964  0019F6  D7FE               	goto	l989
 10965                           
 10966                           ;main.c: 2147: WriteUSART(0x03);
 10967  0019F8  0E03               	movlw	3
 10968  0019FA  EF77  F004         	goto	_WriteUSART
 10969  0019FE                     __end_of_sendVSCPDriverNack:
 10970                           	opt stack 0
 10971  0019FE                     PL58:
 10972                           	opt stack 22
 10973  0019FE  0100               	movlb	0	; () banked
 10974  001A00  0E00               	movlw	high sendVSCPDriverNack@crc
 10975  001A02  6F61               	movwf	(?_crc8+1)& (0+255),b
 10976  001A04  0E66               	movlw	low sendVSCPDriverNack@crc
 10977  001A06  6F60               	movwf	?_crc8& (0+255),b
 10978  001A08  6B62               	clrf	(?_crc8+2)& (0+255),b
 10979  001A0A  0C00               	retlw	0
 10980  001A0C                     __end_ofPL58:
 10981                           	opt stack 0
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           intcon	equ	0xFF2
 10989                           indf0	equ	0xFEF
 10990                           postinc0	equ	0xFEE
 10991                           fsr0h	equ	0xFEA
 10992                           fsr0l	equ	0xFE9
 10993                           wreg	equ	0xFE8
 10994                           indf1	equ	0xFE7
 10995                           postinc1	equ	0xFE6
 10996                           postdec1	equ	0xFE5
 10997                           fsr1h	equ	0xFE2
 10998                           fsr1l	equ	0xFE1
 10999                           indf2	equ	0xFDF
 11000                           postinc2	equ	0xFDE
 11001                           postdec2	equ	0xFDD
 11002                           plusw2	equ	0xFDB
 11003                           fsr2h	equ	0xFDA
 11004                           fsr2l	equ	0xFD9
 11005                           status	equ	0xFD8
 11006                           
 11007 ;; *************** function _calcCRC *****************
 11008 ;; Defined at:
 11009 ;;		line 2912 in file "main.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  p               2    3[BANK0 ] PTR unsigned char 
 11012 ;;		 -> cmdbuf(80), 
 11013 ;;  len             1    5[BANK0 ] unsigned char 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  crc             1    7[BANK0 ] unsigned char 
 11016 ;;  j               1    6[BANK0 ] unsigned char 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      unsigned char 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11021 ;; Tracked objects:
 11022 ;;		On entry : F/0
 11023 ;;		On exit  : F/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11026 ;;      Params:         0       3       0       0       0       0       0
 11027 ;;      Locals:         0       2       0       0       0       0       0
 11028 ;;      Temps:          0       0       0       0       0       0       0
 11029 ;;      Totals:         0       5       0       0       0       0       0
 11030 ;;Total ram usage:        5 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    5
 11033 ;; This function calls:
 11034 ;;		_crc8
 11035 ;; This function is called by:
 11036 ;;		_doModeVscp
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text16
 11041  000A2A                     __ptext16:
 11042                           	opt stack 0
 11043  000A2A                     _calcCRC:
 11044                           	opt stack 23
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;main.c: 2913: uint8_t j;
 11048                           ;main.c: 2914: uint8_t crc = 0;
 11049                           
 11050                           ;incstack = 0
 11051                           ;incstack = 0
 11052  000A2A  6B67               	clrf	calcCRC@crc& (0+255),b
 11053                           
 11054                           ;main.c: 2916: for (j = 0; j < len; j++) {
 11055  000A2C  6B66               	clrf	calcCRC@j& (0+255),b
 11056  000A2E  D010               	goto	l18353
 11057  000A30                     l18349:
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;main.c: 2917: crc8(&crc, p[j]);
 11061  000A30  0E00               	movlw	high calcCRC@crc
 11062  000A32  6F61               	movwf	(?_crc8+1)& (0+255),b
 11063  000A34  0E67               	movlw	low calcCRC@crc
 11064  000A36  6F60               	movwf	?_crc8& (0+255),b
 11065  000A38  5166               	movf	calcCRC@j& (0+255),w,b
 11066  000A3A  2563               	addwf	calcCRC@p& (0+255),w,b
 11067  000A3C  6ED9               	movwf	fsr2l,c
 11068  000A3E  0E00               	movlw	0
 11069  000A40  2164               	addwfc	(calcCRC@p+1)& (0+255),w,b
 11070  000A42  6EDA               	movwf	fsr2h,c
 11071  000A44  50DF               	movf	indf2,w,c
 11072  000A46  6F62               	movwf	(?_crc8+2)& (0+255),b
 11073  000A48  EC7F  F005         	call	_crc8	;wreg free
 11074                           
 11075                           ; BSR set to: 3
 11076  000A4C  0100               	movlb	0	; () banked
 11077  000A4E  2B66               	incf	calcCRC@j& (0+255),f,b
 11078  000A50                     l18353:
 11079                           
 11080                           ; BSR set to: 0
 11081  000A50  5165               	movf	calcCRC@len& (0+255),w,b
 11082  000A52  5D66               	subwf	calcCRC@j& (0+255),w,b
 11083  000A54  E3ED               	bnc	l18349
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;main.c: 2918: }
 11087                           ;main.c: 2920: return crc;
 11088  000A56  5167               	movf	calcCRC@crc& (0+255),w,b
 11089                           
 11090                           ; BSR set to: 0
 11091  000A58  0012               	return	
 11092  000A5A                     __end_of_calcCRC:
 11093                           	opt stack 0
 11094                           tblptru	equ	0xFF8
 11095                           tblptrh	equ	0xFF7
 11096                           tblptrl	equ	0xFF6
 11097                           tablat	equ	0xFF5
 11098                           prodh	equ	0xFF4
 11099                           prodl	equ	0xFF3
 11100                           intcon	equ	0xFF2
 11101                           indf0	equ	0xFEF
 11102                           postinc0	equ	0xFEE
 11103                           fsr0h	equ	0xFEA
 11104                           fsr0l	equ	0xFE9
 11105                           wreg	equ	0xFE8
 11106                           indf1	equ	0xFE7
 11107                           postinc1	equ	0xFE6
 11108                           postdec1	equ	0xFE5
 11109                           fsr1h	equ	0xFE2
 11110                           fsr1l	equ	0xFE1
 11111                           indf2	equ	0xFDF
 11112                           postinc2	equ	0xFDE
 11113                           postdec2	equ	0xFDD
 11114                           plusw2	equ	0xFDB
 11115                           fsr2h	equ	0xFDA
 11116                           fsr2l	equ	0xFD9
 11117                           status	equ	0xFD8
 11118                           
 11119 ;; *************** function _receiveSendEventCANAL *****************
 11120 ;; Defined at:
 11121 ;;		line 2267 in file "main.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;		None
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  timestamp       4   22[BANK0 ] unsigned long 
 11126 ;;  crc             1   31[BANK0 ] unsigned char 
 11127 ;;  data            8   13[BANK0 ] unsigned char [8]
 11128 ;;  id              4   26[BANK0 ] unsigned long 
 11129 ;;  dlc             1   30[BANK0 ] unsigned char 
 11130 ;;  i               1   21[BANK0 ] unsigned char 
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      enum E15660
 11133 ;; Registers used:
 11134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11140 ;;      Params:         0       0       0       0       0       0       0
 11141 ;;      Locals:         0      19       0       0       0       0       0
 11142 ;;      Temps:          0       4       0       0       0       0       0
 11143 ;;      Totals:         0      23       0       0       0       0       0
 11144 ;;Total ram usage:       23 bytes
 11145 ;; Hardware stack levels used:    1
 11146 ;; Hardware stack levels required when called:    6
 11147 ;; This function calls:
 11148 ;;		_WriteUSART
 11149 ;;		_sendEscapedUartData
 11150 ;;		_crc8
 11151 ;;		_ReadTimer3
 11152 ;;		_getCANFrame
 11153 ;;		___wmul
 11154 ;; This function is called by:
 11155 ;;		_doModeVscp
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text17
 11160  003340                     __ptext17:
 11161                           	opt stack 0
 11162  003340                     _receiveSendEventCANAL:
 11163                           	opt stack 22
 11164                           
 11165                           ;main.c: 2268: uint8_t i;
 11166                           ;main.c: 2269: uint32_t id;
 11167                           ;main.c: 2270: uint8_t dlc;
 11168                           ;main.c: 2271: uint8_t data[8];
 11169                           ;main.c: 2273: if ( getCANFrame( &id, &dlc, &data ) ) {
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;incstack = 0
 11173                           ;incstack = 0
 11174  003340  0100               	movlb	0	; () banked
 11175  003342  0E00               	movlw	high receiveSendEventCANAL@dlc
 11176  003344  6F66               	movwf	(?_getCANFrame+1)& (0+255),b
 11177  003346  0E7E               	movlw	low receiveSendEventCANAL@dlc
 11178  003348  6F65               	movwf	?_getCANFrame& (0+255),b
 11179  00334A  0E00               	movlw	high receiveSendEventCANAL@data
 11180  00334C  6F68               	movwf	(?_getCANFrame+3)& (0+255),b
 11181  00334E  0E6D               	movlw	low receiveSendEventCANAL@data
 11182  003350  6F67               	movwf	(?_getCANFrame+2)& (0+255),b
 11183  003352  0E7A               	movlw	receiveSendEventCANAL@id& (0+255)
 11184  003354  EC94  F00A         	call	_getCANFrame
 11185  003358  0900               	iorlw	0
 11186  00335A  E101 D0E4          	bz	l1092
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;main.c: 2275: uint8_t crc = 0;
 11190  00335E  6B7F               	clrf	receiveSendEventCANAL@crc& (0+255),b
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;main.c: 2278: cntRxFrames++;
 11194  003360  2BCD               	incf	_cntRxFrames& (0+255),f,b
 11195  003362  0E00               	movlw	0
 11196  003364  23CE               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 11197  003366  23CF               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 11198  003368  23D0               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 11199                           
 11200                           ;main.c: 2279: cntRxBytes += dlc;
 11201  00336A  517E               	movf	receiveSendEventCANAL@dlc& (0+255),w,b
 11202  00336C  27C9               	addwf	_cntRxBytes& (0+255),f,b
 11203  00336E  0E00               	movlw	0
 11204  003370  23CA               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 11205  003372  23CB               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 11206  003374  23CC               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 11207  003376                     l1068:
 11208  003376  A2AC               	btfss	4012,1,c	;volatile
 11209  003378  D7FE               	goto	l1068
 11210                           
 11211                           ;main.c: 2283: WriteUSART(0x10);
 11212  00337A  0E10               	movlw	16
 11213  00337C  EC77  F004         	call	_WriteUSART
 11214  003380                     l1071:
 11215  003380  A2AC               	btfss	4012,1,c	;volatile
 11216  003382  D7FE               	goto	l1071
 11217                           
 11218                           ;main.c: 2285: WriteUSART(0x02);
 11219  003384  0E02               	movlw	2
 11220  003386  EC77  F004         	call	_WriteUSART
 11221  00338A                     l1074:
 11222  00338A  A2AC               	btfss	4012,1,c	;volatile
 11223  00338C  D7FE               	goto	l1074
 11224                           
 11225                           ;main.c: 2289: if ( bTimestamp ) {
 11226  00338E  0100               	movlb	0	; () banked
 11227  003390  51EB               	movf	_bTimestamp& (0+255),w,b
 11228  003392  E00D               	bz	l18293
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;main.c: 2290: WriteUSART( 11 );
 11232  003394  0E0B               	movlw	11
 11233  003396  EC77  F004         	call	_WriteUSART
 11234                           
 11235                           ;main.c: 2291: crc8(&crc, 11 );
 11236  00339A  0100               	movlb	0	; () banked
 11237  00339C  0E00               	movlw	high receiveSendEventCANAL@crc
 11238  00339E  6F61               	movwf	(?_crc8+1)& (0+255),b
 11239  0033A0  0E7F               	movlw	low receiveSendEventCANAL@crc
 11240  0033A2  6F60               	movwf	?_crc8& (0+255),b
 11241  0033A4  0E0B               	movlw	11
 11242  0033A6  6F62               	movwf	(?_crc8+2)& (0+255),b
 11243  0033A8  EC7F  F005         	call	_crc8	;wreg free
 11244                           
 11245                           ;main.c: 2292: }
 11246  0033AC  D00C               	goto	l1079
 11247  0033AE                     l18293:
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;main.c: 2293: else {
 11251                           ;main.c: 2294: WriteUSART(2);
 11252  0033AE  0E02               	movlw	2
 11253  0033B0  EC77  F004         	call	_WriteUSART
 11254                           
 11255                           ;main.c: 2295: crc8(&crc, 2);
 11256  0033B4  0100               	movlb	0	; () banked
 11257  0033B6  0E00               	movlw	high receiveSendEventCANAL@crc
 11258  0033B8  6F61               	movwf	(?_crc8+1)& (0+255),b
 11259  0033BA  0E7F               	movlw	low receiveSendEventCANAL@crc
 11260  0033BC  6F60               	movwf	?_crc8& (0+255),b
 11261  0033BE  0E02               	movlw	2
 11262  0033C0  6F62               	movwf	(?_crc8+2)& (0+255),b
 11263  0033C2  EC7F  F005         	call	_crc8	;wreg free
 11264  0033C6                     l1079:
 11265  0033C6  A2AC               	btfss	4012,1,c	;volatile
 11266  0033C8  D7FE               	goto	l1079
 11267                           
 11268                           ;main.c: 2300: WriteUSART(0);
 11269  0033CA  0E00               	movlw	0
 11270  0033CC  EC77  F004         	call	_WriteUSART
 11271                           
 11272                           ;main.c: 2301: crc8(&crc, 0);
 11273  0033D0  0100               	movlb	0	; () banked
 11274  0033D2  0E00               	movlw	high receiveSendEventCANAL@crc
 11275  0033D4  6F61               	movwf	(?_crc8+1)& (0+255),b
 11276  0033D6  0E7F               	movlw	low receiveSendEventCANAL@crc
 11277  0033D8  6F60               	movwf	?_crc8& (0+255),b
 11278  0033DA  0E00               	movlw	0
 11279  0033DC  6B62               	clrf	(?_crc8+2)& (0+255),b
 11280  0033DE  EC7F  F005         	call	_crc8	;wreg free
 11281                           
 11282                           ; BSR set to: 3
 11283                           ;main.c: 2304: sendEscapedUartData(sequencyno, &crc);
 11284  0033E2  0100               	movlb	0	; () banked
 11285  0033E4  0E00               	movlw	high receiveSendEventCANAL@crc
 11286  0033E6  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11287  0033E8  0E7F               	movlw	low receiveSendEventCANAL@crc
 11288  0033EA  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11289  0033EC  51EE               	movf	_sequencyno& (0+255),w,b
 11290  0033EE  ECE3  F007         	call	_sendEscapedUartData
 11291                           
 11292                           ;main.c: 2305: sequencyno++;
 11293  0033F2  0100               	movlb	0	; () banked
 11294  0033F4  2BEE               	incf	_sequencyno& (0+255),f,b
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;main.c: 2308: sendEscapedUartData(0, &crc);
 11298  0033F6  0E00               	movlw	high receiveSendEventCANAL@crc
 11299  0033F8  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11300  0033FA  0E7F               	movlw	low receiveSendEventCANAL@crc
 11301  0033FC  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11302  0033FE  0E00               	movlw	0
 11303  003400  ECE3  F007         	call	_sendEscapedUartData
 11304                           
 11305                           ;main.c: 2309: sendEscapedUartData(5 + dlc, &crc);
 11306  003404  D891               	call	PL138	;call to abstracted procedure
 11307  003406  0F05               	addlw	5
 11308  003408  ECE3  F007         	call	_sendEscapedUartData
 11309                           
 11310                           ;main.c: 2315: sendEscapedUartData( ((id >> 24) & 0xff), &crc);
 11311  00340C  0100               	movlb	0	; () banked
 11312  00340E  0E00               	movlw	high receiveSendEventCANAL@crc
 11313  003410  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11314  003412  0E7F               	movlw	low receiveSendEventCANAL@crc
 11315  003414  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11316  003416  517D               	movf	(receiveSendEventCANAL@id+3)& (0+255),w,b
 11317  003418  ECE3  F007         	call	_sendEscapedUartData
 11318                           
 11319                           ;main.c: 2316: sendEscapedUartData(((id >> 16) & 0xff), &crc);
 11320  00341C  0100               	movlb	0	; () banked
 11321  00341E  0E00               	movlw	high receiveSendEventCANAL@crc
 11322  003420  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11323  003422  0E7F               	movlw	low receiveSendEventCANAL@crc
 11324  003424  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11325  003426  517C               	movf	(receiveSendEventCANAL@id+2)& (0+255),w,b
 11326  003428  ECE3  F007         	call	_sendEscapedUartData
 11327                           
 11328                           ;main.c: 2317: sendEscapedUartData(((id >> 8) & 0xff), &crc);
 11329  00342C  0100               	movlb	0	; () banked
 11330  00342E  0E00               	movlw	high receiveSendEventCANAL@crc
 11331  003430  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11332  003432  0E7F               	movlw	low receiveSendEventCANAL@crc
 11333  003434  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11334  003436  517B               	movf	(receiveSendEventCANAL@id+1)& (0+255),w,b
 11335  003438  ECE3  F007         	call	_sendEscapedUartData
 11336                           
 11337                           ;main.c: 2318: sendEscapedUartData((id & 0xff), &crc);
 11338  00343C  0100               	movlb	0	; () banked
 11339  00343E  0E00               	movlw	high receiveSendEventCANAL@crc
 11340  003440  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11341  003442  0E7F               	movlw	low receiveSendEventCANAL@crc
 11342  003444  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11343  003446  517A               	movf	receiveSendEventCANAL@id& (0+255),w,b
 11344  003448  ECE3  F007         	call	_sendEscapedUartData
 11345                           
 11346                           ;main.c: 2321: if ( bTimestamp ) {
 11347  00344C  0100               	movlb	0	; () banked
 11348  00344E  51EB               	movf	_bTimestamp& (0+255),w,b
 11349  003450  E045               	bz	l18329
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;main.c: 2322: uint32_t timestamp = (timer<<16) | ReadTimer3()*10;
 11353  003452  EC6E  F004         	call	_ReadTimer3	;wreg free
 11354  003456  C01F  F023         	movff	?_ReadTimer3,?___wmul
 11355  00345A  C020  F024         	movff	?_ReadTimer3+1,?___wmul+1
 11356  00345E  6A26               	clrf	?___wmul+3,c
 11357  003460  0E0A               	movlw	10
 11358  003462  6E25               	movwf	?___wmul+2,c
 11359  003464  EC9B  F005         	call	___wmul	;wreg free
 11360  003468  C0DD  F069         	movff	_timer,??_receiveSendEventCANAL	;volatile
 11361  00346C  C0DE  F06A         	movff	_timer+1,??_receiveSendEventCANAL+1	;volatile
 11362  003470  C0DF  F06B         	movff	_timer+2,??_receiveSendEventCANAL+2	;volatile
 11363  003474  C0E0  F06C         	movff	_timer+3,??_receiveSendEventCANAL+3	;volatile
 11364  003478  C06A  F06C         	movff	??_receiveSendEventCANAL+1,??_receiveSendEventCANAL+3
 11365  00347C  C069  F06B         	movff	??_receiveSendEventCANAL,??_receiveSendEventCANAL+2
 11366  003480  6B6A               	clrf	(??_receiveSendEventCANAL+1)& (0+255),b
 11367  003482  6B69               	clrf	??_receiveSendEventCANAL& (0+255),b
 11368  003484  5123               	movf	?___wmul& (0+255),w,b
 11369  003486  1169               	iorwf	??_receiveSendEventCANAL& (0+255),w,b
 11370  003488  6F76               	movwf	receiveSendEventCANAL@timestamp& (0+255),b
 11371  00348A  5124               	movf	(?___wmul+1)& (0+255),w,b
 11372  00348C  116A               	iorwf	(??_receiveSendEventCANAL+1)& (0+255),w,b
 11373  00348E  6F77               	movwf	(receiveSendEventCANAL@timestamp+1)& (0+255),b
 11374  003490  0E00               	movlw	0
 11375  003492  116B               	iorwf	(??_receiveSendEventCANAL+2)& (0+255),w,b
 11376  003494  6F78               	movwf	(receiveSendEventCANAL@timestamp+2)& (0+255),b
 11377  003496  0E00               	movlw	0
 11378  003498  116C               	iorwf	(??_receiveSendEventCANAL+3)& (0+255),w,b
 11379  00349A  6F79               	movwf	(receiveSendEventCANAL@timestamp+3)& (0+255),b
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;main.c: 2323: sendEscapedUartData( ((timestamp >> 24) & 0xff), &crc);
 11383  00349C  0E00               	movlw	high receiveSendEventCANAL@crc
 11384  00349E  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11385  0034A0  0E7F               	movlw	low receiveSendEventCANAL@crc
 11386  0034A2  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11387  0034A4  0100               	movlb	0	; () banked
 11388  0034A6  5179               	movf	(receiveSendEventCANAL@timestamp+3)& (0+255),w,b
 11389  0034A8  ECE3  F007         	call	_sendEscapedUartData
 11390                           
 11391                           ;main.c: 2324: sendEscapedUartData(((timestamp >> 16) & 0xff), &crc);
 11392  0034AC  0100               	movlb	0	; () banked
 11393  0034AE  0E00               	movlw	high receiveSendEventCANAL@crc
 11394  0034B0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11395  0034B2  0E7F               	movlw	low receiveSendEventCANAL@crc
 11396  0034B4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11397  0034B6  5178               	movf	(receiveSendEventCANAL@timestamp+2)& (0+255),w,b
 11398  0034B8  ECE3  F007         	call	_sendEscapedUartData
 11399                           
 11400                           ;main.c: 2325: sendEscapedUartData(((timestamp >> 8) & 0xff), &crc);
 11401  0034BC  0100               	movlb	0	; () banked
 11402  0034BE  0E00               	movlw	high receiveSendEventCANAL@crc
 11403  0034C0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11404  0034C2  0E7F               	movlw	low receiveSendEventCANAL@crc
 11405  0034C4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11406  0034C6  5177               	movf	(receiveSendEventCANAL@timestamp+1)& (0+255),w,b
 11407  0034C8  ECE3  F007         	call	_sendEscapedUartData
 11408                           
 11409                           ;main.c: 2326: sendEscapedUartData((timestamp & 0xff), &crc);
 11410  0034CC  0100               	movlb	0	; () banked
 11411  0034CE  0E00               	movlw	high receiveSendEventCANAL@crc
 11412  0034D0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11413  0034D2  0E7F               	movlw	low receiveSendEventCANAL@crc
 11414  0034D4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11415  0034D6  5176               	movf	receiveSendEventCANAL@timestamp& (0+255),w,b
 11416  0034D8  ECE3  F007         	call	_sendEscapedUartData
 11417  0034DC                     l18329:
 11418                           
 11419                           ;main.c: 2327: }
 11420                           ;main.c: 2330: sendEscapedUartData(dlc, &crc);
 11421  0034DC  D825               	call	PL138	;call to abstracted procedure
 11422  0034DE  ECE3  F007         	call	_sendEscapedUartData
 11423                           
 11424                           ;main.c: 2333: for (i = 0; i < dlc; i++) {
 11425  0034E2  0100               	movlb	0	; () banked
 11426  0034E4  6B75               	clrf	receiveSendEventCANAL@i& (0+255),b
 11427  0034E6  D00D               	goto	l18337
 11428  0034E8                     l18333:
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;main.c: 2334: sendEscapedUartData( data[ i ], &crc );
 11432  0034E8  0E00               	movlw	high receiveSendEventCANAL@crc
 11433  0034EA  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11434  0034EC  0E7F               	movlw	low receiveSendEventCANAL@crc
 11435  0034EE  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11436  0034F0  5175               	movf	receiveSendEventCANAL@i& (0+255),w,b
 11437  0034F2  0F6D               	addlw	low receiveSendEventCANAL@data
 11438  0034F4  6ED9               	movwf	fsr2l,c
 11439  0034F6  6ADA               	clrf	fsr2h,c
 11440  0034F8  50DF               	movf	indf2,w,c
 11441  0034FA  ECE3  F007         	call	_sendEscapedUartData
 11442  0034FE  0100               	movlb	0	; () banked
 11443  003500  2B75               	incf	receiveSendEventCANAL@i& (0+255),f,b
 11444  003502                     l18337:
 11445                           
 11446                           ; BSR set to: 0
 11447  003502  517E               	movf	receiveSendEventCANAL@dlc& (0+255),w,b
 11448  003504  5D75               	subwf	receiveSendEventCANAL@i& (0+255),w,b
 11449  003506  E3F0               	bnc	l18333
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;main.c: 2335: }
 11453                           ;main.c: 2340: sendEscapedUartData(crc, (0));
 11454  003508  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 11455  00350A  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 11456  00350C  517F               	movf	receiveSendEventCANAL@crc& (0+255),w,b
 11457  00350E  ECE3  F007         	call	_sendEscapedUartData
 11458  003512                     l1086:
 11459  003512  A2AC               	btfss	4012,1,c	;volatile
 11460  003514  D7FE               	goto	l1086
 11461                           
 11462                           ;main.c: 2344: WriteUSART(0x10);
 11463  003516  0E10               	movlw	16
 11464  003518  EC77  F004         	call	_WriteUSART
 11465  00351C                     l1089:
 11466  00351C  A2AC               	btfss	4012,1,c	;volatile
 11467  00351E  D7FE               	goto	l1089
 11468                           
 11469                           ;main.c: 2346: WriteUSART(0x03);
 11470  003520  0E03               	movlw	3
 11471  003522  EC77  F004         	call	_WriteUSART
 11472  003526                     l1092:
 11473  003526  0012               	return	
 11474  003528                     __end_of_receiveSendEventCANAL:
 11475                           	opt stack 0
 11476  003528                     PL138:
 11477                           	opt stack 22
 11478  003528  0100               	movlb	0	; () banked
 11479  00352A  0E00               	movlw	high receiveSendEventCANAL@crc
 11480  00352C  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11481  00352E  0E7F               	movlw	low receiveSendEventCANAL@crc
 11482  003530  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11483  003532  517E               	movf	receiveSendEventCANAL@dlc& (0+255),w,b
 11484  003534  0012               	return	
 11485  003536                     __end_ofPL138:
 11486                           	opt stack 0
 11487                           tblptru	equ	0xFF8
 11488                           tblptrh	equ	0xFF7
 11489                           tblptrl	equ	0xFF6
 11490                           tablat	equ	0xFF5
 11491                           prodh	equ	0xFF4
 11492                           prodl	equ	0xFF3
 11493                           intcon	equ	0xFF2
 11494                           indf0	equ	0xFEF
 11495                           postinc0	equ	0xFEE
 11496                           fsr0h	equ	0xFEA
 11497                           fsr0l	equ	0xFE9
 11498                           wreg	equ	0xFE8
 11499                           indf1	equ	0xFE7
 11500                           postinc1	equ	0xFE6
 11501                           postdec1	equ	0xFE5
 11502                           fsr1h	equ	0xFE2
 11503                           fsr1l	equ	0xFE1
 11504                           indf2	equ	0xFDF
 11505                           postinc2	equ	0xFDE
 11506                           postdec2	equ	0xFDD
 11507                           plusw2	equ	0xFDB
 11508                           fsr2h	equ	0xFDA
 11509                           fsr2l	equ	0xFD9
 11510                           status	equ	0xFD8
 11511                           
 11512 ;; *************** function _receiveSendMultiEventCANAL *****************
 11513 ;; Defined at:
 11514 ;;		line 2359 in file "main.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;  timestamp       4   22[BANK0 ] unsigned long 
 11519 ;;  crc             1   32[BANK0 ] unsigned char 
 11520 ;;  data            8   13[BANK0 ] unsigned char [8]
 11521 ;;  id              4   27[BANK0 ] unsigned long 
 11522 ;;  pos             1   33[BANK0 ] unsigned char 
 11523 ;;  dlc             1   31[BANK0 ] unsigned char 
 11524 ;;  i               1   26[BANK0 ] unsigned char 
 11525 ;;  msgcount        1   21[BANK0 ] unsigned char 
 11526 ;; Return value:  Size  Location     Type
 11527 ;;                  1    wreg      enum E15660
 11528 ;; Registers used:
 11529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11535 ;;      Params:         0       0       0       0       0       0       0
 11536 ;;      Locals:         0      21       0       0       0       0       0
 11537 ;;      Temps:          0       4       0       0       0       0       0
 11538 ;;      Totals:         0      25       0       0       0       0       0
 11539 ;;Total ram usage:       25 bytes
 11540 ;; Hardware stack levels used:    1
 11541 ;; Hardware stack levels required when called:    6
 11542 ;; This function calls:
 11543 ;;		_WriteUSART
 11544 ;;		_sendEscapedUartData
 11545 ;;		_crc8
 11546 ;;		_ReadTimer3
 11547 ;;		_getCANFrame
 11548 ;;		___wmul
 11549 ;; This function is called by:
 11550 ;;		_doModeVscp
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text18
 11555  003742                     __ptext18:
 11556                           	opt stack 0
 11557  003742                     _receiveSendMultiEventCANAL:
 11558                           	opt stack 22
 11559                           
 11560                           ;main.c: 2360: uint8_t i;
 11561                           ;main.c: 2361: uint8_t pos=0;
 11562                           
 11563                           ;incstack = 0
 11564                           ;incstack = 0
 11565  003742  0100               	movlb	0	; () banked
 11566  003744  6B81               	clrf	receiveSendMultiEventCANAL@pos& (0+255),b
 11567                           
 11568                           ;main.c: 2362: uint8_t msgcount=0;
 11569  003746  6B75               	clrf	receiveSendMultiEventCANAL@msgcount& (0+255),b
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;main.c: 2363: uint32_t id;
 11573                           ;main.c: 2364: uint8_t dlc;
 11574                           ;main.c: 2365: uint8_t data[8];
 11575                           ;main.c: 2367: if ( getCANFrame( &id, &dlc, &data ) ) {
 11576  003748  0E00               	movlw	high receiveSendMultiEventCANAL@dlc
 11577  00374A  D8FD               	call	PL100	;call to abstracted procedure
 11578  00374C  EC94  F00A         	call	_getCANFrame
 11579  003750  0900               	iorlw	0
 11580  003752  E101 D0E7          	bz	l1127
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;main.c: 2369: uint8_t crc = 0;
 11584  003756  6B80               	clrf	receiveSendMultiEventCANAL@crc& (0+255),b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;main.c: 2372: cntRxFrames++;
 11588  003758  2BCD               	incf	_cntRxFrames& (0+255),f,b
 11589  00375A  0E00               	movlw	0
 11590  00375C  23CE               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 11591  00375E  23CF               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 11592  003760  23D0               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 11593                           
 11594                           ;main.c: 2373: cntRxBytes += dlc;
 11595  003762  517F               	movf	receiveSendMultiEventCANAL@dlc& (0+255),w,b
 11596  003764  27C9               	addwf	_cntRxBytes& (0+255),f,b
 11597  003766  0E00               	movlw	0
 11598  003768  23CA               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 11599  00376A  23CB               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 11600  00376C  23CC               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 11601  00376E                     l1096:
 11602  00376E  A2AC               	btfss	4012,1,c	;volatile
 11603  003770  D7FE               	goto	l1096
 11604                           
 11605                           ;main.c: 2377: WriteUSART(0x10);
 11606  003772  0E10               	movlw	16
 11607  003774  EC77  F004         	call	_WriteUSART
 11608  003778                     l1099:
 11609  003778  A2AC               	btfss	4012,1,c	;volatile
 11610  00377A  D7FE               	goto	l1099
 11611                           
 11612                           ;main.c: 2379: WriteUSART(0x02);
 11613  00377C  0E02               	movlw	2
 11614  00377E  EC77  F004         	call	_WriteUSART
 11615  003782                     l1102:
 11616  003782  A2AC               	btfss	4012,1,c	;volatile
 11617  003784  D7FE               	goto	l1102
 11618                           
 11619                           ;main.c: 2383: if ( bTimestamp ) {
 11620  003786  0100               	movlb	0	; () banked
 11621  003788  51EB               	movf	_bTimestamp& (0+255),w,b
 11622  00378A  E00D               	bz	l18189
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;main.c: 2384: WriteUSART( 12 );
 11626  00378C  0E0C               	movlw	12
 11627  00378E  EC77  F004         	call	_WriteUSART
 11628                           
 11629                           ;main.c: 2385: crc8(&crc, 12 );
 11630  003792  0100               	movlb	0	; () banked
 11631  003794  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11632  003796  6F61               	movwf	(?_crc8+1)& (0+255),b
 11633  003798  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11634  00379A  6F60               	movwf	?_crc8& (0+255),b
 11635  00379C  0E0C               	movlw	12
 11636  00379E  6F62               	movwf	(?_crc8+2)& (0+255),b
 11637  0037A0  EC7F  F005         	call	_crc8	;wreg free
 11638                           
 11639                           ;main.c: 2386: }
 11640  0037A4  D00C               	goto	l1107
 11641  0037A6                     l18189:
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;main.c: 2387: else {
 11645                           ;main.c: 2388: WriteUSART( 6 );
 11646  0037A6  0E06               	movlw	6
 11647  0037A8  EC77  F004         	call	_WriteUSART
 11648                           
 11649                           ;main.c: 2389: crc8(&crc, 6 );
 11650  0037AC  0100               	movlb	0	; () banked
 11651  0037AE  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11652  0037B0  6F61               	movwf	(?_crc8+1)& (0+255),b
 11653  0037B2  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11654  0037B4  6F60               	movwf	?_crc8& (0+255),b
 11655  0037B6  0E06               	movlw	6
 11656  0037B8  6F62               	movwf	(?_crc8+2)& (0+255),b
 11657  0037BA  EC7F  F005         	call	_crc8	;wreg free
 11658  0037BE                     l1107:
 11659  0037BE  A2AC               	btfss	4012,1,c	;volatile
 11660  0037C0  D7FE               	goto	l1107
 11661                           
 11662                           ;main.c: 2394: WriteUSART(0);
 11663  0037C2  0E00               	movlw	0
 11664  0037C4  EC77  F004         	call	_WriteUSART
 11665                           
 11666                           ;main.c: 2395: crc8(&crc, 0);
 11667  0037C8  0100               	movlb	0	; () banked
 11668  0037CA  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11669  0037CC  6F61               	movwf	(?_crc8+1)& (0+255),b
 11670  0037CE  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11671  0037D0  6F60               	movwf	?_crc8& (0+255),b
 11672  0037D2  0E00               	movlw	0
 11673  0037D4  6B62               	clrf	(?_crc8+2)& (0+255),b
 11674  0037D6  EC7F  F005         	call	_crc8	;wreg free
 11675                           
 11676                           ; BSR set to: 3
 11677                           ;main.c: 2398: sendEscapedUartData(sequencyno, &crc);
 11678  0037DA  0100               	movlb	0	; () banked
 11679  0037DC  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11680  0037DE  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11681  0037E0  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11682  0037E2  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11683  0037E4  51EE               	movf	_sequencyno& (0+255),w,b
 11684  0037E6  ECE3  F007         	call	_sendEscapedUartData
 11685                           
 11686                           ;main.c: 2399: sequencyno++;
 11687  0037EA  0100               	movlb	0	; () banked
 11688  0037EC  2BEE               	incf	_sequencyno& (0+255),f,b
 11689  0037EE                     l18201:
 11690                           
 11691                           ; BSR set to: 0
 11692                           ;main.c: 2409: wrkbuf[ pos ] = (id >> 24) & 0xff;
 11693  0037EE  D8A3               	call	PL56	;call to abstracted procedure
 11694  0037F0  C07E  FFDF         	movff	receiveSendMultiEventCANAL@id+3,indf2
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;main.c: 2410: pos++;
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;main.c: 2411: wrkbuf[ pos ] = (id >> 16) & 0xff;
 11701  0037F4  D898               	call	PL18	;call to abstracted procedure
 11702  0037F6  C07D  FFDF         	movff	receiveSendMultiEventCANAL@id+2,indf2
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;main.c: 2412: pos++;
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;main.c: 2413: wrkbuf[ pos ] = (id >> 8) & 0xff;
 11709  0037FA  D895               	call	PL18	;call to abstracted procedure
 11710  0037FC  C07C  FFDF         	movff	receiveSendMultiEventCANAL@id+1,indf2
 11711                           
 11712                           ; BSR set to: 0
 11713                           ;main.c: 2414: pos++;
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;main.c: 2415: wrkbuf[ pos ] = id & 0xff;
 11717  003800  D892               	call	PL18	;call to abstracted procedure
 11718  003802  C07B  FFDF         	movff	receiveSendMultiEventCANAL@id,indf2
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;main.c: 2416: pos++;
 11722  003806  2B81               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;main.c: 2418: if ( bTimestamp ) {
 11726  003808  51EB               	movf	_bTimestamp& (0+255),w,b
 11727  00380A  E032               	bz	l18237
 11728                           
 11729                           ; BSR set to: 0
 11730                           ;main.c: 2419: uint32_t timestamp = (timer<<16) | ReadTimer3()*10;
 11731  00380C  EC6E  F004         	call	_ReadTimer3	;wreg free
 11732  003810  C01F  F023         	movff	?_ReadTimer3,?___wmul
 11733  003814  C020  F024         	movff	?_ReadTimer3+1,?___wmul+1
 11734  003818  6A26               	clrf	?___wmul+3,c
 11735  00381A  0E0A               	movlw	10
 11736  00381C  6E25               	movwf	?___wmul+2,c
 11737  00381E  EC9B  F005         	call	___wmul	;wreg free
 11738  003822  C0DD  F069         	movff	_timer,??_receiveSendMultiEventCANAL	;volatile
 11739  003826  C0DE  F06A         	movff	_timer+1,??_receiveSendMultiEventCANAL+1	;volatile
 11740  00382A  C0DF  F06B         	movff	_timer+2,??_receiveSendMultiEventCANAL+2	;volatile
 11741  00382E  C0E0  F06C         	movff	_timer+3,??_receiveSendMultiEventCANAL+3	;volatile
 11742  003832  C06A  F06C         	movff	??_receiveSendMultiEventCANAL+1,??_receiveSendMultiEventCANAL+3
 11743  003836  C069  F06B         	movff	??_receiveSendMultiEventCANAL,??_receiveSendMultiEventCANAL+2
 11744  00383A  6B6A               	clrf	(??_receiveSendMultiEventCANAL+1)& (0+255),b
 11745  00383C  6B69               	clrf	??_receiveSendMultiEventCANAL& (0+255),b
 11746  00383E  5123               	movf	?___wmul& (0+255),w,b
 11747  003840  1169               	iorwf	??_receiveSendMultiEventCANAL& (0+255),w,b
 11748  003842  6F76               	movwf	receiveSendMultiEventCANAL@timestamp& (0+255),b
 11749  003844  5124               	movf	(?___wmul+1)& (0+255),w,b
 11750  003846  116A               	iorwf	(??_receiveSendMultiEventCANAL+1)& (0+255),w,b
 11751  003848  6F77               	movwf	(receiveSendMultiEventCANAL@timestamp+1)& (0+255),b
 11752  00384A  0E00               	movlw	0
 11753  00384C  116B               	iorwf	(??_receiveSendMultiEventCANAL+2)& (0+255),w,b
 11754  00384E  6F78               	movwf	(receiveSendMultiEventCANAL@timestamp+2)& (0+255),b
 11755  003850  0E00               	movlw	0
 11756  003852  116C               	iorwf	(??_receiveSendMultiEventCANAL+3)& (0+255),w,b
 11757  003854  6F79               	movwf	(receiveSendMultiEventCANAL@timestamp+3)& (0+255),b
 11758                           
 11759                           ; BSR set to: 0
 11760                           ;main.c: 2420: wrkbuf[ pos ] = (timestamp >> 24) & 0xff;
 11761  003856  D86F               	call	PL56	;call to abstracted procedure
 11762  003858  C079  FFDF         	movff	receiveSendMultiEventCANAL@timestamp+3,indf2
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;main.c: 2421: pos++;
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;main.c: 2422: wrkbuf[ pos ] = (timestamp >> 16) & 0xff;
 11769  00385C  D864               	call	PL18	;call to abstracted procedure
 11770  00385E  C078  FFDF         	movff	receiveSendMultiEventCANAL@timestamp+2,indf2
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;main.c: 2423: pos++;
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;main.c: 2424: wrkbuf[ pos ] = (timestamp >> 8) & 0xff;
 11777  003862  D861               	call	PL18	;call to abstracted procedure
 11778  003864  C077  FFDF         	movff	receiveSendMultiEventCANAL@timestamp+1,indf2
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;main.c: 2425: pos++;
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;main.c: 2426: wrkbuf[ pos ] = timestamp & 0xff;
 11785  003868  D85E               	call	PL18	;call to abstracted procedure
 11786  00386A  C076  FFDF         	movff	receiveSendMultiEventCANAL@timestamp,indf2
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;main.c: 2427: pos++;
 11790  00386E  2B81               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 11791  003870                     l18237:
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;main.c: 2428: }
 11795                           ;main.c: 2431: wrkbuf[ pos ] = dlc;
 11796  003870  D862               	call	PL56	;call to abstracted procedure
 11797  003872  C07F  FFDF         	movff	receiveSendMultiEventCANAL@dlc,indf2
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;main.c: 2432: pos++;
 11801  003876  2B81               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;main.c: 2435: for (i = 0; i < dlc; i++) {
 11805  003878  6B7A               	clrf	receiveSendMultiEventCANAL@i& (0+255),b
 11806  00387A  D00F               	goto	l18249
 11807  00387C                     l18243:
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;main.c: 2436: wrkbuf[ pos ] = data[ i ];
 11811  00387C  517A               	movf	receiveSendMultiEventCANAL@i& (0+255),w,b
 11812  00387E  0F6D               	addlw	low receiveSendMultiEventCANAL@data
 11813  003880  6ED9               	movwf	fsr2l,c
 11814  003882  6ADA               	clrf	fsr2h,c
 11815  003884  0E55               	movlw	low _wrkbuf
 11816  003886  0100               	movlb	0	; () banked
 11817  003888  2581               	addwf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 11818  00388A  6EE1               	movwf	fsr1l,c
 11819  00388C  6AE2               	clrf	fsr1h,c
 11820  00388E  0E01               	movlw	high _wrkbuf
 11821  003890  22E2               	addwfc	fsr1h,f,c
 11822  003892  CFDF FFE7          	movff	indf2,indf1
 11823                           
 11824                           ; BSR set to: 1
 11825                           ;main.c: 2437: pos++;
 11826  003896  2B81               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 11827                           
 11828                           ; BSR set to: 0
 11829  003898  2B7A               	incf	receiveSendMultiEventCANAL@i& (0+255),f,b
 11830  00389A                     l18249:
 11831                           
 11832                           ; BSR set to: 0
 11833  00389A  517F               	movf	receiveSendMultiEventCANAL@dlc& (0+255),w,b
 11834  00389C  5D7A               	subwf	receiveSendMultiEventCANAL@i& (0+255),w,b
 11835  00389E  E3EE               	bnc	l18243
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;main.c: 2438: }
 11839                           ;main.c: 2440: msgcount++;
 11840  0038A0  2B75               	incf	receiveSendMultiEventCANAL@msgcount& (0+255),f,b
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;main.c: 2442: } while ( ( msgcount < caps.maxCanalFrames ) &&
 11844                           ;main.c: 2443: ( msgcount < 5 ) &&
 11845                           ;main.c: 2444: getCANFrame( &id, &dlc, &data ) );
 11846  0038A2  5040               	movf	_caps+1,w,c
 11847  0038A4  6175               	cpfslt	receiveSendMultiEventCANAL@msgcount& (0+255),b
 11848  0038A6  D009               	goto	l18259
 11849                           
 11850                           ; BSR set to: 0
 11851  0038A8  0E05               	movlw	5
 11852  0038AA  6175               	cpfslt	receiveSendMultiEventCANAL@msgcount& (0+255),b
 11853  0038AC  D006               	goto	l18259
 11854                           
 11855                           ; BSR set to: 0
 11856  0038AE  0E00               	movlw	high receiveSendMultiEventCANAL@dlc
 11857  0038B0  D84A               	call	PL100	;call to abstracted procedure
 11858  0038B2  EC94  F00A         	call	_getCANFrame
 11859  0038B6  0900               	iorlw	0
 11860  0038B8  E19A               	bnz	l18201
 11861  0038BA                     l18259:
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;main.c: 2449: sendEscapedUartData(0, &crc);
 11865  0038BA  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11866  0038BC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11867  0038BE  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11868  0038C0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11869  0038C2  0E00               	movlw	0
 11870  0038C4  ECE3  F007         	call	_sendEscapedUartData
 11871                           
 11872                           ;main.c: 2450: sendEscapedUartData(pos, &crc);
 11873  0038C8  0100               	movlb	0	; () banked
 11874  0038CA  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11875  0038CC  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11876  0038CE  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11877  0038D0  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11878  0038D2  5181               	movf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 11879  0038D4  ECE3  F007         	call	_sendEscapedUartData
 11880                           
 11881                           ;main.c: 2453: for (i = 0; i < pos; i++) {
 11882  0038D8  0100               	movlb	0	; () banked
 11883  0038DA  6B7A               	clrf	receiveSendMultiEventCANAL@i& (0+255),b
 11884  0038DC  D011               	goto	l18267
 11885  0038DE                     l18263:
 11886                           
 11887                           ; BSR set to: 0
 11888                           ;main.c: 2454: sendEscapedUartData( wrkbuf[ i ], &crc);
 11889  0038DE  0E00               	movlw	high receiveSendMultiEventCANAL@crc
 11890  0038E0  6F64               	movwf	(?_sendEscapedUartData+1)& (0+255),b
 11891  0038E2  0E80               	movlw	low receiveSendMultiEventCANAL@crc
 11892  0038E4  6F63               	movwf	?_sendEscapedUartData& (0+255),b
 11893  0038E6  0E55               	movlw	low _wrkbuf
 11894  0038E8  0100               	movlb	0	; () banked
 11895  0038EA  257A               	addwf	receiveSendMultiEventCANAL@i& (0+255),w,b
 11896  0038EC  6ED9               	movwf	fsr2l,c
 11897  0038EE  6ADA               	clrf	fsr2h,c
 11898  0038F0  0101               	movlb	1	; () banked
 11899  0038F2  0E01               	movlw	high _wrkbuf
 11900  0038F4  22DA               	addwfc	fsr2h,f,c
 11901  0038F6  50DF               	movf	indf2,w,c
 11902  0038F8  ECE3  F007         	call	_sendEscapedUartData
 11903  0038FC  0100               	movlb	0	; () banked
 11904  0038FE  2B7A               	incf	receiveSendMultiEventCANAL@i& (0+255),f,b
 11905  003900                     l18267:
 11906                           
 11907                           ; BSR set to: 0
 11908  003900  5181               	movf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 11909  003902  5D7A               	subwf	receiveSendMultiEventCANAL@i& (0+255),w,b
 11910  003904  E3EC               	bnc	l18263
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;main.c: 2455: }
 11914                           ;main.c: 2458: sendEscapedUartData(crc, (0));
 11915  003906  6B64               	clrf	(?_sendEscapedUartData+1)& (0+255),b
 11916  003908  6B63               	clrf	?_sendEscapedUartData& (0+255),b
 11917  00390A  5180               	movf	receiveSendMultiEventCANAL@crc& (0+255),w,b
 11918  00390C  ECE3  F007         	call	_sendEscapedUartData
 11919  003910                     l1121:
 11920  003910  A2AC               	btfss	4012,1,c	;volatile
 11921  003912  D7FE               	goto	l1121
 11922                           
 11923                           ;main.c: 2462: WriteUSART(0x10);
 11924  003914  0E10               	movlw	16
 11925  003916  EC77  F004         	call	_WriteUSART
 11926  00391A                     l1124:
 11927  00391A  A2AC               	btfss	4012,1,c	;volatile
 11928  00391C  D7FE               	goto	l1124
 11929                           
 11930                           ;main.c: 2464: WriteUSART(0x03);
 11931  00391E  0E03               	movlw	3
 11932  003920  EC77  F004         	call	_WriteUSART
 11933  003924                     l1127:
 11934  003924  0012               	return	
 11935  003926                     __end_of_receiveSendMultiEventCANAL:
 11936                           	opt stack 0
 11937  003926                     PL18:
 11938                           	opt stack 22
 11939  003926  2B81               	incf	receiveSendMultiEventCANAL@pos& (0+255),f,b
 11940  003928  0E55               	movlw	low _wrkbuf
 11941  00392A  2581               	addwf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 11942  00392C  6ED9               	movwf	fsr2l,c
 11943  00392E  6ADA               	clrf	fsr2h,c
 11944  003930  0E01               	movlw	high _wrkbuf
 11945  003932  22DA               	addwfc	fsr2h,f,c
 11946  003934  0012               	return	
 11947  003936                     __end_ofPL18:
 11948                           	opt stack 0
 11949  003936                     PL56:
 11950                           	opt stack 22
 11951  003936  0E55               	movlw	low _wrkbuf
 11952  003938  0100               	movlb	0	; () banked
 11953  00393A  2581               	addwf	receiveSendMultiEventCANAL@pos& (0+255),w,b
 11954  00393C  6ED9               	movwf	fsr2l,c
 11955  00393E  6ADA               	clrf	fsr2h,c
 11956  003940  0E01               	movlw	high _wrkbuf
 11957  003942  22DA               	addwfc	fsr2h,f,c
 11958  003944  0012               	return	
 11959  003946                     __end_ofPL56:
 11960                           	opt stack 0
 11961  003946                     PL100:
 11962                           	opt stack 22
 11963  003946  6F66               	movwf	(?_getCANFrame+1)& (0+255),b
 11964  003948  0E7F               	movlw	low receiveSendMultiEventCANAL@dlc
 11965  00394A  6F65               	movwf	?_getCANFrame& (0+255),b
 11966  00394C  0E00               	movlw	high receiveSendMultiEventCANAL@data
 11967  00394E  6F68               	movwf	(?_getCANFrame+3)& (0+255),b
 11968  003950  0E6D               	movlw	low receiveSendMultiEventCANAL@data
 11969  003952  6F67               	movwf	(?_getCANFrame+2)& (0+255),b
 11970  003954  0E7B               	movlw	receiveSendMultiEventCANAL@id& (0+255)
 11971  003956  0012               	return	
 11972  003958                     __end_ofPL100:
 11973                           	opt stack 0
 11974                           tblptru	equ	0xFF8
 11975                           tblptrh	equ	0xFF7
 11976                           tblptrl	equ	0xFF6
 11977                           tablat	equ	0xFF5
 11978                           prodh	equ	0xFF4
 11979                           prodl	equ	0xFF3
 11980                           intcon	equ	0xFF2
 11981                           indf0	equ	0xFEF
 11982                           postinc0	equ	0xFEE
 11983                           fsr0h	equ	0xFEA
 11984                           fsr0l	equ	0xFE9
 11985                           wreg	equ	0xFE8
 11986                           indf1	equ	0xFE7
 11987                           postinc1	equ	0xFE6
 11988                           postdec1	equ	0xFE5
 11989                           fsr1h	equ	0xFE2
 11990                           fsr1l	equ	0xFE1
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           plusw2	equ	0xFDB
 11995                           fsr2h	equ	0xFDA
 11996                           fsr2l	equ	0xFD9
 11997                           status	equ	0xFD8
 11998                           
 11999 ;; *************** function _sendEscapedUartData *****************
 12000 ;; Defined at:
 12001 ;;		line 1992 in file "main.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;  c               1    wreg     unsigned char 
 12004 ;;  pcrc            2    3[BANK0 ] PTR unsigned char 
 12005 ;;		 -> sendVSCPModeCapabilities@crc(1), receiveSendEventVSCP@crc(1), receiveSendMultiEventCANAL@crc(1), receiveSendEven
      +tCANAL@crc(1), 
 12006 ;;		 -> sendVSCPDriverCommandReply@crc(1), sendVSCPDriverNack@crc(1), sendVSCPDriverAck@crc(1), sendVSCPDriverErrorFrame
      +@crc(1), 
 12007 ;;		 -> NULL(0), 
 12008 ;; Auto vars:     Size  Location     Type
 12009 ;;  c               1    5[BANK0 ] unsigned char 
 12010 ;; Return value:  Size  Location     Type
 12011 ;;		None               void
 12012 ;; Registers used:
 12013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12014 ;; Tracked objects:
 12015 ;;		On entry : E/1
 12016 ;;		On exit  : C/0
 12017 ;;		Unchanged: 0/0
 12018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12019 ;;      Params:         0       2       0       0       0       0       0
 12020 ;;      Locals:         0       1       0       0       0       0       0
 12021 ;;      Temps:          0       0       0       0       0       0       0
 12022 ;;      Totals:         0       3       0       0       0       0       0
 12023 ;;Total ram usage:        3 bytes
 12024 ;; Hardware stack levels used:    1
 12025 ;; Hardware stack levels required when called:    5
 12026 ;; This function calls:
 12027 ;;		_WriteUSART
 12028 ;;		_crc8
 12029 ;; This function is called by:
 12030 ;;		_sendVSCPDriverErrorFrame
 12031 ;;		_sendVSCPDriverAck
 12032 ;;		_sendVSCPDriverNack
 12033 ;;		_sendVSCPDriverCommandReply
 12034 ;;		_receiveSendEventCANAL
 12035 ;;		_receiveSendMultiEventCANAL
 12036 ;;		_sendVSCPModeCapabilities
 12037 ;; This function uses a non-reentrant model
 12038 ;;
 12039                           
 12040                           	psect	text19
 12041  000FC6                     __ptext19:
 12042                           	opt stack 0
 12043  000FC6                     _sendEscapedUartData:
 12044                           	opt stack 22
 12045                           
 12046                           ;incstack = 0
 12047                           ;incstack = 0
 12048                           ;sendEscapedUartData@c stored from wreg
 12049  000FC6  CFE8 F065          	movff	wreg,sendEscapedUartData@c
 12050                           
 12051                           ;main.c: 1993: if (0x10 == c) {
 12052  000FCA  0100               	movlb	0	; () banked
 12053  000FCC  5165               	movf	sendEscapedUartData@c& (0+255),w,b
 12054  000FCE  0A10               	xorlw	16
 12055  000FD0  E117               	bnz	l907
 12056  000FD2                     l899:
 12057  000FD2  A2AC               	btfss	4012,1,c	;volatile
 12058  000FD4  D7FE               	goto	l899
 12059                           
 12060                           ;main.c: 1996: WriteUSART(0x10);
 12061  000FD6  0E10               	movlw	16
 12062  000FD8  EC77  F004         	call	_WriteUSART
 12063  000FDC                     l902:
 12064  000FDC  A2AC               	btfss	4012,1,c	;volatile
 12065  000FDE  D7FE               	goto	l902
 12066                           
 12067                           ;main.c: 2000: WriteUSART(0x10);
 12068  000FE0  0E10               	movlw	16
 12069  000FE2  EC77  F004         	call	_WriteUSART
 12070                           
 12071                           ;main.c: 2001: if ((0) != pcrc) crc8(pcrc, 0x10);
 12072  000FE6  0100               	movlb	0	; () banked
 12073  000FE8  5164               	movf	(sendEscapedUartData@pcrc+1)& (0+255),w,b
 12074  000FEA  1163               	iorwf	sendEscapedUartData@pcrc& (0+255),w,b
 12075  000FEC  E01B               	bz	l911
 12076                           
 12077                           ; BSR set to: 0
 12078  000FEE  C063  F060         	movff	sendEscapedUartData@pcrc,?_crc8
 12079  000FF2  C064  F061         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 12080  000FF6  0E10               	movlw	16
 12081  000FF8  6F62               	movwf	(?_crc8+2)& (0+255),b
 12082  000FFA  EC7F  F005         	call	_crc8	;wreg free
 12083  000FFE  D012               	goto	l911
 12084  001000                     l907:
 12085  001000  A2AC               	btfss	4012,1,c	;volatile
 12086  001002  D7FE               	goto	l907
 12087                           
 12088                           ;main.c: 2007: WriteUSART(c);
 12089  001004  0100               	movlb	0	; () banked
 12090  001006  5165               	movf	sendEscapedUartData@c& (0+255),w,b
 12091  001008  EC77  F004         	call	_WriteUSART
 12092                           
 12093                           ;main.c: 2008: if ((0) != pcrc) crc8(pcrc, c);
 12094  00100C  0100               	movlb	0	; () banked
 12095  00100E  5164               	movf	(sendEscapedUartData@pcrc+1)& (0+255),w,b
 12096  001010  1163               	iorwf	sendEscapedUartData@pcrc& (0+255),w,b
 12097  001012  E008               	bz	l911
 12098                           
 12099                           ; BSR set to: 0
 12100  001014  C063  F060         	movff	sendEscapedUartData@pcrc,?_crc8
 12101  001018  C064  F061         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 12102  00101C  C065  F062         	movff	sendEscapedUartData@c,?_crc8+2
 12103  001020  EC7F  F005         	call	_crc8	;wreg free
 12104  001024                     l911:
 12105  001024  0012               	return	
 12106  001026                     __end_of_sendEscapedUartData:
 12107                           	opt stack 0
 12108                           tblptru	equ	0xFF8
 12109                           tblptrh	equ	0xFF7
 12110                           tblptrl	equ	0xFF6
 12111                           tablat	equ	0xFF5
 12112                           prodh	equ	0xFF4
 12113                           prodl	equ	0xFF3
 12114                           intcon	equ	0xFF2
 12115                           indf0	equ	0xFEF
 12116                           postinc0	equ	0xFEE
 12117                           fsr0h	equ	0xFEA
 12118                           fsr0l	equ	0xFE9
 12119                           wreg	equ	0xFE8
 12120                           indf1	equ	0xFE7
 12121                           postinc1	equ	0xFE6
 12122                           postdec1	equ	0xFE5
 12123                           fsr1h	equ	0xFE2
 12124                           fsr1l	equ	0xFE1
 12125                           indf2	equ	0xFDF
 12126                           postinc2	equ	0xFDE
 12127                           postdec2	equ	0xFDD
 12128                           plusw2	equ	0xFDB
 12129                           fsr2h	equ	0xFDA
 12130                           fsr2l	equ	0xFD9
 12131                           status	equ	0xFD8
 12132                           
 12133 ;; *************** function _crc8 *****************
 12134 ;; Defined at:
 12135 ;;		line 47 in file "crc8.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  crc             2    0[BANK0 ] PTR unsigned char 
 12138 ;;		 -> calcCRC@crc(1), sendVSCPModeCapabilities@crc(1), receiveSendEventVSCP@crc(1), receiveSendMultiEventCANAL@crc(1), 
 12139 ;;		 -> receiveSendEventCANAL@crc(1), sendVSCPDriverCommandReply@crc(1), sendVSCPDriverNack@crc(1), sendVSCPDriverAck@cr
      +c(1), 
 12140 ;;		 -> sendVSCPDriverErrorFrame@crc(1), NULL(0), 
 12141 ;;  m               1    2[BANK0 ] unsigned char 
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;		None
 12144 ;; Return value:  Size  Location     Type
 12145 ;;		None               void
 12146 ;; Registers used:
 12147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12148 ;; Tracked objects:
 12149 ;;		On entry : F/0
 12150 ;;		On exit  : F/3
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12153 ;;      Params:         0       3       0       0       0       0       0
 12154 ;;      Locals:         0       0       0       0       0       0       0
 12155 ;;      Temps:          2       0       0       0       0       0       0
 12156 ;;      Totals:         2       3       0       0       0       0       0
 12157 ;;Total ram usage:        5 bytes
 12158 ;; Hardware stack levels used:    1
 12159 ;; Hardware stack levels required when called:    4
 12160 ;; This function calls:
 12161 ;;		_init_crc8
 12162 ;; This function is called by:
 12163 ;;		_sendEscapedUartData
 12164 ;;		_sendVSCPDriverErrorFrame
 12165 ;;		_sendVSCPDriverAck
 12166 ;;		_sendVSCPDriverNack
 12167 ;;		_sendVSCPDriverCommandReply
 12168 ;;		_receiveSendEventCANAL
 12169 ;;		_receiveSendMultiEventCANAL
 12170 ;;		_sendVSCPModeCapabilities
 12171 ;;		_calcCRC
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           	psect	text20
 12176  000AFE                     __ptext20:
 12177                           	opt stack 0
 12178  000AFE                     _crc8:
 12179                           	opt stack 23
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;crc8.c: 48: if ( !made_table ) {
 12183                           
 12184                           ;incstack = 0
 12185                           ;incstack = 0
 12186  000AFE  5029               	movf	_made_table+1,w,c
 12187  000B00  1028               	iorwf	_made_table,w,c
 12188  000B02  B4D8               	btfsc	status,2,c
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;crc8.c: 49: init_crc8();
 12192  000B04  ECA9  F008         	call	_init_crc8	;wreg free
 12193                           
 12194                           ;crc8.c: 50: }
 12195                           ;crc8.c: 52: *crc = crc8_table[(*crc) ^ m];
 12196  000B08  C060  FFD9         	movff	crc8@crc,fsr2l
 12197  000B0C  C061  FFDA         	movff	crc8@crc+1,fsr2h
 12198  000B10  50DF               	movf	indf2,w,c
 12199  000B12  0100               	movlb	0	; () banked
 12200  000B14  1962               	xorwf	crc8@m& (0+255),w,b
 12201  000B16  6E26               	movwf	??_crc8& (0+255),c
 12202  000B18  6A27               	clrf	(??_crc8+1)& (0+255),c
 12203  000B1A  0103               	movlb	3	; () banked
 12204  000B1C  0E00               	movlw	low _crc8_table
 12205  000B1E  2426               	addwf	??_crc8,w,c
 12206  000B20  6ED9               	movwf	fsr2l,c
 12207  000B22  0E03               	movlw	high _crc8_table
 12208  000B24  2027               	addwfc	??_crc8+1,w,c
 12209  000B26  6EDA               	movwf	fsr2h,c
 12210  000B28  C060  FFE1         	movff	crc8@crc,fsr1l
 12211  000B2C  C061  FFE2         	movff	crc8@crc+1,fsr1h
 12212  000B30  CFDF FFE7          	movff	indf2,indf1
 12213                           
 12214                           ; BSR set to: 3
 12215  000B34  0012               	return	
 12216  000B36                     __end_of_crc8:
 12217                           	opt stack 0
 12218                           tblptru	equ	0xFF8
 12219                           tblptrh	equ	0xFF7
 12220                           tblptrl	equ	0xFF6
 12221                           tablat	equ	0xFF5
 12222                           prodh	equ	0xFF4
 12223                           prodl	equ	0xFF3
 12224                           intcon	equ	0xFF2
 12225                           indf0	equ	0xFEF
 12226                           postinc0	equ	0xFEE
 12227                           fsr0h	equ	0xFEA
 12228                           fsr0l	equ	0xFE9
 12229                           wreg	equ	0xFE8
 12230                           indf1	equ	0xFE7
 12231                           postinc1	equ	0xFE6
 12232                           postdec1	equ	0xFE5
 12233                           fsr1h	equ	0xFE2
 12234                           fsr1l	equ	0xFE1
 12235                           indf2	equ	0xFDF
 12236                           postinc2	equ	0xFDE
 12237                           postdec2	equ	0xFDD
 12238                           plusw2	equ	0xFDB
 12239                           fsr2h	equ	0xFDA
 12240                           fsr2l	equ	0xFD9
 12241                           status	equ	0xFD8
 12242                           
 12243 ;; *************** function _init_crc8 *****************
 12244 ;; Defined at:
 12245 ;;		line 25 in file "crc8.c"
 12246 ;; Parameters:    Size  Location     Type
 12247 ;;		None
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;  i               2   35[COMRAM] int 
 12250 ;;  j               2   32[COMRAM] int 
 12251 ;;  crc             1   34[COMRAM] unsigned char 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;		None               void
 12254 ;; Registers used:
 12255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12256 ;; Tracked objects:
 12257 ;;		On entry : F/0
 12258 ;;		On exit  : C/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12261 ;;      Params:         0       0       0       0       0       0       0
 12262 ;;      Locals:         7       0       0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0
 12264 ;;      Totals:         7       0       0       0       0       0       0
 12265 ;;Total ram usage:        7 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    3
 12268 ;; This function calls:
 12269 ;;		Nothing
 12270 ;; This function is called by:
 12271 ;;		_main
 12272 ;;		_crc8
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           	psect	text21
 12277  001152                     __ptext21:
 12278                           	opt stack 0
 12279  001152                     _init_crc8:
 12280                           	opt stack 23
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;crc8.c: 26: int i,j;
 12284                           ;crc8.c: 27: unsigned char crc;
 12285                           ;crc8.c: 29: if (!made_table) {
 12286                           
 12287                           ; BSR set to: 3
 12288                           ;incstack = 0
 12289                           ;incstack = 0
 12290  001152  5029               	movf	_made_table+1,w,c
 12291  001154  1028               	iorwf	_made_table,w,c
 12292  001156  E131               	bnz	l1711
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;crc8.c: 30: for ( i=0; i<256; i++ ) {
 12296  001158  6A24               	clrf	init_crc8@i,c
 12297  00115A  6A25               	clrf	init_crc8@i+1,c
 12298  00115C                     l1703:
 12299                           
 12300                           ;crc8.c: 31: crc = i;
 12301  00115C  C024  F023         	movff	init_crc8@i,init_crc8@crc
 12302                           
 12303                           ;crc8.c: 32: for (j=0; j<8; j++) {
 12304  001160  6A21               	clrf	init_crc8@j,c
 12305  001162  6A22               	clrf	init_crc8@j+1,c
 12306  001164                     l1705:
 12307                           
 12308                           ;crc8.c: 33: crc = (crc << 1) ^ ((crc & 0x80) ? 0x07 : 0);
 12309  001164  BE23               	btfsc	init_crc8@crc,7,c
 12310  001166  D003               	goto	l15419
 12311  001168  6A1F               	clrf	_init_crc8$2194,c
 12312  00116A  6A20               	clrf	_init_crc8$2194+1,c
 12313  00116C  D003               	goto	l15421
 12314  00116E                     l15419:
 12315  00116E  6A20               	clrf	_init_crc8$2194+1,c
 12316  001170  0E07               	movlw	7
 12317  001172  6E1F               	movwf	_init_crc8$2194,c
 12318  001174                     l15421:
 12319  001174  5023               	movf	init_crc8@crc,w,c
 12320  001176  2423               	addwf	init_crc8@crc,w,c
 12321  001178  181F               	xorwf	_init_crc8$2194,w,c
 12322  00117A  6E23               	movwf	init_crc8@crc,c
 12323  00117C  4A21               	infsnz	init_crc8@j,f,c
 12324  00117E  2A22               	incf	init_crc8@j+1,f,c
 12325  001180  5022               	movf	init_crc8@j+1,w,c
 12326  001182  0A80               	xorlw	128
 12327  001184  0F80               	addlw	-128
 12328  001186  0E08               	movlw	8
 12329  001188  B4D8               	btfsc	status,2,c
 12330  00118A  5C21               	subwf	init_crc8@j,w,c
 12331  00118C  E3EB               	bnc	l1705
 12332                           
 12333                           ;crc8.c: 34: }
 12334                           ;crc8.c: 35: crc8_table[i] = crc & 0xFF;
 12335  00118E  0103               	movlb	3	; () banked
 12336  001190  0E00               	movlw	low _crc8_table
 12337  001192  2424               	addwf	init_crc8@i,w,c
 12338  001194  6ED9               	movwf	fsr2l,c
 12339  001196  0E03               	movlw	high _crc8_table
 12340  001198  2025               	addwfc	init_crc8@i+1,w,c
 12341  00119A  6EDA               	movwf	fsr2h,c
 12342  00119C  C023  FFDF         	movff	init_crc8@crc,indf2
 12343                           
 12344                           ; BSR set to: 3
 12345  0011A0  4A24               	infsnz	init_crc8@i,f,c
 12346  0011A2  2A25               	incf	init_crc8@i+1,f,c
 12347                           
 12348                           ; BSR set to: 3
 12349  0011A4  5025               	movf	init_crc8@i+1,w,c
 12350  0011A6  0A80               	xorlw	128
 12351  0011A8  0F7F               	addlw	-129
 12352  0011AA  0E00               	movlw	0
 12353  0011AC  B4D8               	btfsc	status,2,c
 12354  0011AE  5C24               	subwf	init_crc8@i,w,c
 12355  0011B0  E3D5               	bnc	l1703
 12356                           
 12357                           ; BSR set to: 3
 12358                           ;crc8.c: 37: }
 12359                           ;crc8.c: 38: made_table=1;
 12360  0011B2  0E00               	movlw	0
 12361  0011B4  6E29               	movwf	_made_table+1,c
 12362  0011B6  0E01               	movlw	1
 12363  0011B8  6E28               	movwf	_made_table,c
 12364  0011BA                     l1711:
 12365  0011BA  0012               	return	
 12366  0011BC                     __end_of_init_crc8:
 12367                           	opt stack 0
 12368                           tblptru	equ	0xFF8
 12369                           tblptrh	equ	0xFF7
 12370                           tblptrl	equ	0xFF6
 12371                           tablat	equ	0xFF5
 12372                           prodh	equ	0xFF4
 12373                           prodl	equ	0xFF3
 12374                           intcon	equ	0xFF2
 12375                           indf0	equ	0xFEF
 12376                           postinc0	equ	0xFEE
 12377                           fsr0h	equ	0xFEA
 12378                           fsr0l	equ	0xFE9
 12379                           wreg	equ	0xFE8
 12380                           indf1	equ	0xFE7
 12381                           postinc1	equ	0xFE6
 12382                           postdec1	equ	0xFE5
 12383                           fsr1h	equ	0xFE2
 12384                           fsr1l	equ	0xFE1
 12385                           indf2	equ	0xFDF
 12386                           postinc2	equ	0xFDE
 12387                           postdec2	equ	0xFDD
 12388                           plusw2	equ	0xFDB
 12389                           fsr2h	equ	0xFDA
 12390                           fsr2l	equ	0xFD9
 12391                           status	equ	0xFD8
 12392                           
 12393 ;; *************** function _doModeVerbose *****************
 12394 ;; Defined at:
 12395 ;;		line 632 in file "main.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;		None
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  baud            4   56[BANK2 ] unsigned long 
 12400 ;;  preg            2    6[BANK2 ] PTR unsigned char 
 12401 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 12402 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 12403 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 12404 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 12405 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 12406 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 12407 ;;		 -> cmdbuf(80), 
 12408 ;;  preg            2    4[BANK2 ] PTR unsigned char 
 12409 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 12410 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 12411 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 12412 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 12413 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 12414 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 12415 ;;		 -> cmdbuf(80), 
 12416 ;;  id              4   68[BANK2 ] unsigned long 
 12417 ;;  p               2   72[BANK2 ] PTR unsigned char 
 12418 ;;		 -> NULL(0), cmdbuf(80), 
 12419 ;;  mask_class      2   10[BANK2 ] unsigned short 
 12420 ;;  maskno          1   50[BANK2 ] unsigned char 
 12421 ;;  bPersistent     1    0        enum E15660
 12422 ;;  mask_nodeid     1   17[BANK2 ] unsigned char 
 12423 ;;  mask_type       1   16[BANK2 ] unsigned char 
 12424 ;;  mask_priorit    1   15[BANK2 ] unsigned char 
 12425 ;;  id              4    0[BANK2 ] unsigned long 
 12426 ;;  p               2   74[BANK2 ] PTR unsigned char 
 12427 ;;		 -> NULL(0), cmdbuf(80), 
 12428 ;;  filter_class    2    8[BANK2 ] unsigned short 
 12429 ;;  filterno        1   44[BANK2 ] unsigned char 
 12430 ;;  bPersistent     1   43[BANK2 ] enum E15660
 12431 ;;  filter_nodei    1   14[BANK2 ] unsigned char 
 12432 ;;  filter_type     1   13[BANK2 ] unsigned char 
 12433 ;;  filter_prior    1   12[BANK2 ] unsigned char 
 12434 ;;  nodeid          1   54[BANK2 ] unsigned char 
 12435 ;;  value           1   42[BANK2 ] unsigned char 
 12436 ;;  p               2   63[BANK2 ] PTR unsigned char 
 12437 ;;		 -> NULL(0), cmdbuf(80), 
 12438 ;;  nodeid          1   49[BANK2 ] unsigned char 
 12439 ;;  value           1   46[BANK2 ] unsigned char 
 12440 ;;  reg             1   41[BANK2 ] unsigned char 
 12441 ;;  page            1   40[BANK2 ] unsigned char 
 12442 ;;  p               2   61[BANK2 ] PTR unsigned char 
 12443 ;;		 -> NULL(0), cmdbuf(80), 
 12444 ;;  value           1   60[BANK2 ] unsigned char 
 12445 ;;  i               1   53[BANK2 ] unsigned char 
 12446 ;;  reg             1   52[BANK2 ] unsigned char 
 12447 ;;  page            1   51[BANK2 ] unsigned char 
 12448 ;;  nodeid          1   48[BANK2 ] unsigned char 
 12449 ;;  count           1   47[BANK2 ] unsigned char 
 12450 ;;  rv              1   39[BANK2 ] enum E15660
 12451 ;;  p               2   66[BANK2 ] PTR unsigned char 
 12452 ;;		 -> NULL(0), cmdbuf(80), 
 12453 ;;  ifmode          1   65[BANK2 ] enum E16371
 12454 ;;  c               1   55[BANK2 ] unsigned char 
 12455 ;;  i               1   45[BANK2 ] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;		None               void
 12458 ;; Registers used:
 12459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 12460 ;; Tracked objects:
 12461 ;;		On entry : F/0
 12462 ;;		On exit  : C/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12465 ;;      Params:         0       0       0       0       0       0       0
 12466 ;;      Locals:         0       0       0      76       0       0       0
 12467 ;;      Temps:          0       0      20       0       0       0       0
 12468 ;;      Totals:         0       0      20      76       0       0       0
 12469 ;;Total ram usage:       96 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:   10
 12472 ;; This function calls:
 12473 ;;		_vscp_restoreDefaults
 12474 ;;		_putsUSART
 12475 ;;		_printFirmwareVersion
 12476 ;;		_fifo_read
 12477 ;;		_ECANSetOperationMode
 12478 ;;		_OpenUSART
 12479 ;;		_setFilter
 12480 ;;		__CANIDToRegs
 12481 ;;		_Busy_eep
 12482 ;;		_Write_b_eep
 12483 ;;		_receivePrintEventVerbose
 12484 ;;		_WriteUSART
 12485 ;;		_stristr
 12486 ;;		_strtok
 12487 ;;		_atoi
 12488 ;;		_memset
 12489 ;;		_sendVSCPFrame
 12490 ;;		_printStatistics
 12491 ;;		_printErrors
 12492 ;;		_printHelp
 12493 ;;		_findNodes
 12494 ;;		_strcpy
 12495 ;;		_strchr
 12496 ;;		_readRegisterExtended
 12497 ;;		_sprintf
 12498 ;;		_printBinary
 12499 ;;		_writeRegisterExtended
 12500 ;;		_printNodeFirmwareVersion
 12501 ;;		_printGUID
 12502 ;;		_printMDF
 12503 ;; This function is called by:
 12504 ;;		_main
 12505 ;; This function uses a non-reentrant model
 12506 ;;
 12507                           
 12508                           	psect	text22
 12509  0051E4                     __ptext22:
 12510                           	opt stack 0
 12511  0051E4                     _doModeVerbose:
 12512                           	opt stack 19
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;main.c: 633: uint8_t c;
 12516                           ;main.c: 634: uint8_t i;
 12517                           ;main.c: 637: if (!bSilent) {
 12518                           
 12519                           ;incstack = 0
 12520                           ;incstack = 0
 12521  0051E4  0101               	movlb	1	; () banked
 12522  0051E6  6702               	tstfsz	_bSilent& (0+255),b
 12523  0051E8  D002               	goto	l15567
 12524                           
 12525                           ; BSR set to: 1
 12526                           ;main.c: 638: receivePrintEventVerbose();
 12527  0051EA  ECBB  F021         	call	_receivePrintEventVerbose	;wreg free
 12528  0051EE                     l15567:
 12529                           
 12530                           ;main.c: 639: }
 12531                           ;main.c: 642: (INTCONbits.GIE = 0);
 12532  0051EE  9EF2               	bcf	intcon,7,c	;volatile
 12533                           
 12534                           ;main.c: 644: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
 12535  0051F0  0E02               	movlw	high doModeVerbose@c
 12536  0051F2  6E20               	movwf	?_fifo_read+1,c
 12537  0051F4  0EBF               	movlw	low doModeVerbose@c
 12538  0051F6  6E1F               	movwf	?_fifo_read,c
 12539  0051F8  6A22               	clrf	?_fifo_read+3,c
 12540  0051FA  0E01               	movlw	1
 12541  0051FC  6E21               	movwf	?_fifo_read+2,c
 12542  0051FE  0100               	movlb	0	; () banked
 12543  005200  0EF7               	movlw	_serialInputFifo& (0+255)
 12544  005202  EC42  F00F         	call	_fifo_read
 12545  005206  041F               	decf	?_fifo_read,w,c
 12546  005208  1020               	iorwf	?_fifo_read+1,w,c
 12547  00520A  E002 EF96  F034    	bnz	l16503
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;main.c: 647: (INTCONbits.GIE = 1);
 12551  005210  8EF2               	bsf	intcon,7,c	;volatile
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;main.c: 650: if ( bLocalEcho ) {
 12555  005212  0101               	movlb	1	; () banked
 12556  005214  5101               	movf	_bLocalEcho& (0+255),w,b
 12557  005216  E00F               	bz	l15581
 12558                           
 12559                           ; BSR set to: 1
 12560                           ;main.c: 651: WriteUSART( c );
 12561  005218  0102               	movlb	2	; () banked
 12562  00521A  51BF               	movf	doModeVerbose@c& (0+255),w,b
 12563  00521C  EC77  F004         	call	_WriteUSART
 12564  005220                     l519:
 12565  005220  A2AC               	btfss	4012,1,c	;volatile
 12566  005222  D7FE               	goto	l519
 12567                           
 12568                           ;main.c: 653: if ( 0x0d == c ) {
 12569  005224  0102               	movlb	2	; () banked
 12570  005226  51BF               	movf	doModeVerbose@c& (0+255),w,b
 12571  005228  0A0D               	xorlw	13
 12572  00522A  E105               	bnz	l15581
 12573                           
 12574                           ; BSR set to: 2
 12575                           ;main.c: 654: WriteUSART( 0x0a );
 12576  00522C  0E0A               	movlw	10
 12577  00522E  EC77  F004         	call	_WriteUSART
 12578  005232                     l523:
 12579  005232  A2AC               	btfss	4012,1,c	;volatile
 12580  005234  D7FE               	goto	l523
 12581  005236                     l15581:
 12582                           
 12583                           ;main.c: 656: }
 12584                           ;main.c: 657: }
 12585                           ;main.c: 660: cmdbuf[ pos++ ] = c;
 12586  005236  0101               	movlb	1	; () banked
 12587  005238  ECFE  F01E         	call	PL48	;call to abstracted procedure
 12588  00523C  C2BF  FFDF         	movff	doModeVerbose@c,indf2
 12589                           
 12590                           ; BSR set to: 2
 12591  005240  2B03               	incf	_pos& (0+255),f,b
 12592                           
 12593                           ; BSR set to: 1
 12594                           ;main.c: 661: if (pos >= sizeof( cmdbuf ) ) {
 12595  005242  0E4F               	movlw	79
 12596  005244  6503               	cpfsgt	_pos& (0+255),b
 12597  005246  D001               	goto	l15589
 12598                           
 12599                           ; BSR set to: 1
 12600                           ;main.c: 664: pos = 0;
 12601  005248  6B03               	clrf	_pos& (0+255),b
 12602  00524A                     l15589:
 12603                           
 12604                           ; BSR set to: 1
 12605                           ;main.c: 665: }
 12606                           ;main.c: 668: if (0x0d == c) {
 12607  00524A  0102               	movlb	2	; () banked
 12608  00524C  51BF               	movf	doModeVerbose@c& (0+255),w,b
 12609  00524E  0A0D               	xorlw	13
 12610  005250  E002 EF96  F034    	bnz	l16503
 12611                           
 12612                           ; BSR set to: 2
 12613                           ;main.c: 670: cmdbuf[ pos ] = 0;
 12614  005256  0101               	movlb	1	; () banked
 12615  005258  ECFE  F01E         	call	PL48	;call to abstracted procedure
 12616  00525C  6ADF               	clrf	indf2,c
 12617                           
 12618                           ; BSR set to: 1
 12619                           ;main.c: 673: if (cmdbuf == stristr(cmdbuf, "BOOT")) {
 12620  00525E  0100               	movlb	0	; () banked
 12621  005260  6F67               	movwf	(?_stristr+1)& (0+255),b
 12622  005262  0E05               	movlw	low _cmdbuf
 12623  005264  6F66               	movwf	?_stristr& (0+255),b
 12624  005266  0E7C               	movlw	high STR_6
 12625  005268  6F69               	movwf	(?_stristr+3)& (0+255),b
 12626  00526A  0EC1               	movlw	low STR_6
 12627  00526C  6F68               	movwf	(?_stristr+2)& (0+255),b
 12628  00526E  EC8D  F009         	call	_stristr	;wreg free
 12629  005272  EC98  F034         	call	PL2	;call to abstracted procedure
 12630  005276  E104               	bnz	u19325
 12631  005278  0100               	movlb	0	; () banked
 12632  00527A  5166               	movf	?_stristr& (0+255),w,b
 12633  00527C  0101               	movlb	1	; () banked
 12634  00527E  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12635  005280                     u19325:
 12636  005280  E111               	bnz	l15601
 12637                           
 12638                           ; BSR set to: 1
 12639                           ;main.c: 674: putsUSART((char *) "Will enter bootloader now...\r\n");
 12640  005282  0E76               	movlw	high STR_7
 12641  005284  6E21               	movwf	?_putsUSART+1,c
 12642  005286  0EEC               	movlw	low STR_7
 12643  005288  6E20               	movwf	?_putsUSART,c
 12644  00528A  EC03  F007         	call	_putsUSART	;wreg free
 12645                           
 12646                           ;main.c: 675: (Busy_eep(), Write_b_eep(0x00,0xFF));
 12647  00528E  EC43  F004         	call	_Busy_eep	;wreg free
 12648  005292  6A20               	clrf	?_Write_b_eep+1,c
 12649  005294  6A1F               	clrf	?_Write_b_eep,c
 12650  005296  0EFF               	movlw	255
 12651  005298  6821               	setf	?_Write_b_eep+2,c
 12652  00529A  EC2D  F005         	call	_Write_b_eep	;wreg free
 12653  00529E  00FF               	reset		;# 
 12654                           
 12655                           ;main.c: 677: }
 12656  0052A0  EF8C  F034         	goto	l16499
 12657  0052A4                     l15601:
 12658                           
 12659                           ; BSR set to: 1
 12660                           ;main.c: 679: else if (cmdbuf == stristr(cmdbuf, "OPEN")) {
 12661  0052A4  EC4A  F035         	call	PL84	;call to abstracted procedure
 12662  0052A8  EC8D  F009         	call	_stristr	;wreg free
 12663  0052AC  EC98  F034         	call	PL2	;call to abstracted procedure
 12664  0052B0  E104               	bnz	u19335
 12665  0052B2  0100               	movlb	0	; () banked
 12666  0052B4  5166               	movf	?_stristr& (0+255),w,b
 12667  0052B6  0101               	movlb	1	; () banked
 12668  0052B8  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12669  0052BA                     u19335:
 12670  0052BA  E10C               	bnz	l15609
 12671                           
 12672                           ; BSR set to: 1
 12673                           ;main.c: 680: bSilent = 0;
 12674  0052BC  6B02               	clrf	_bSilent& (0+255),b
 12675                           
 12676                           ; BSR set to: 1
 12677                           ;main.c: 681: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 12678  0052BE  0E00               	movlw	0
 12679  0052C0  EC8C  F004         	call	_ECANSetOperationMode
 12680                           
 12681                           ;main.c: 682: putsUSART((char *) "+OK\r\n");
 12682  0052C4  0E7C               	movlw	high STR_9
 12683  0052C6  6E21               	movwf	?_putsUSART+1,c
 12684  0052C8  0E6B               	movlw	low STR_9
 12685  0052CA  6E20               	movwf	?_putsUSART,c
 12686  0052CC  EC03  F007         	call	_putsUSART	;wreg free
 12687                           
 12688                           ;main.c: 683: }
 12689  0052D0  EF8C  F034         	goto	l16499
 12690  0052D4                     l15609:
 12691                           
 12692                           ; BSR set to: 1
 12693                           ;main.c: 685: else if (cmdbuf == stristr(cmdbuf, "SILENT")) {
 12694  0052D4  0E01               	movlw	high _cmdbuf
 12695  0052D6  EC54  F035         	call	PL98	;call to abstracted procedure
 12696  0052DA  EC8D  F009         	call	_stristr	;wreg free
 12697  0052DE  EC98  F034         	call	PL2	;call to abstracted procedure
 12698  0052E2  E104               	bnz	u19345
 12699  0052E4  0100               	movlb	0	; () banked
 12700  0052E6  5166               	movf	?_stristr& (0+255),w,b
 12701  0052E8  0101               	movlb	1	; () banked
 12702  0052EA  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12703  0052EC                     u19345:
 12704  0052EC  E10D               	bnz	l15617
 12705                           
 12706                           ; BSR set to: 1
 12707                           ;main.c: 686: bSilent = 1;
 12708  0052EE  0E01               	movlw	1
 12709  0052F0  6F02               	movwf	_bSilent& (0+255),b
 12710                           
 12711                           ; BSR set to: 1
 12712                           ;main.c: 687: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 12713  0052F2  0E00               	movlw	0
 12714  0052F4  EC8C  F004         	call	_ECANSetOperationMode
 12715                           
 12716                           ;main.c: 688: putsUSART((char *) "+OK\r\n");
 12717  0052F8  0E7C               	movlw	high STR_9
 12718  0052FA  6E21               	movwf	?_putsUSART+1,c
 12719  0052FC  0E6B               	movlw	low STR_9
 12720  0052FE  6E20               	movwf	?_putsUSART,c
 12721  005300  EC03  F007         	call	_putsUSART	;wreg free
 12722                           
 12723                           ;main.c: 689: }
 12724  005304  EF8C  F034         	goto	l16499
 12725  005308                     l15617:
 12726                           
 12727                           ; BSR set to: 1
 12728                           ;main.c: 691: else if (cmdbuf == stristr(cmdbuf, "CLOSE")) {
 12729  005308  0E01               	movlw	high _cmdbuf
 12730  00530A  0100               	movlb	0	; () banked
 12731  00530C  EC5D  F035         	call	PL112	;call to abstracted procedure
 12732  005310  EC8D  F009         	call	_stristr	;wreg free
 12733  005314  EC98  F034         	call	PL2	;call to abstracted procedure
 12734  005318  E104               	bnz	u19355
 12735  00531A  0100               	movlb	0	; () banked
 12736  00531C  5166               	movf	?_stristr& (0+255),w,b
 12737  00531E  0101               	movlb	1	; () banked
 12738  005320  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12739  005322                     u19355:
 12740  005322  E10D               	bnz	l15625
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;main.c: 692: bSilent = 1;
 12744  005324  0E01               	movlw	1
 12745  005326  6F02               	movwf	_bSilent& (0+255),b
 12746                           
 12747                           ; BSR set to: 1
 12748                           ;main.c: 693: ECANSetOperationMode( ECAN_OP_MODE_CONFIG );
 12749  005328  0E80               	movlw	128
 12750  00532A  EC8C  F004         	call	_ECANSetOperationMode
 12751                           
 12752                           ;main.c: 694: putsUSART((char *) "+OK\r\n");
 12753  00532E  0E7C               	movlw	high STR_9
 12754  005330  6E21               	movwf	?_putsUSART+1,c
 12755  005332  0E6B               	movlw	low STR_9
 12756  005334  6E20               	movwf	?_putsUSART,c
 12757  005336  EC03  F007         	call	_putsUSART	;wreg free
 12758                           
 12759                           ;main.c: 695: }
 12760  00533A  EF8C  F034         	goto	l16499
 12761  00533E                     l15625:
 12762                           
 12763                           ; BSR set to: 1
 12764                           ;main.c: 697: else if (cmdbuf == stristr(cmdbuf, "LOOPBACK")) {
 12765  00533E  0E01               	movlw	high _cmdbuf
 12766  005340  0100               	movlb	0	; () banked
 12767  005342  EC7D  F035         	call	PL128	;call to abstracted procedure
 12768  005346  EC8D  F009         	call	_stristr	;wreg free
 12769  00534A  EC98  F034         	call	PL2	;call to abstracted procedure
 12770  00534E  E104               	bnz	u19365
 12771  005350  0100               	movlb	0	; () banked
 12772  005352  5166               	movf	?_stristr& (0+255),w,b
 12773  005354  0101               	movlb	1	; () banked
 12774  005356  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12775  005358                     u19365:
 12776  005358  E10C               	bnz	l15633
 12777                           
 12778                           ; BSR set to: 1
 12779                           ;main.c: 698: bSilent = 0;
 12780  00535A  6B02               	clrf	_bSilent& (0+255),b
 12781                           
 12782                           ; BSR set to: 1
 12783                           ;main.c: 699: ECANSetOperationMode(ECAN_OP_MODE_LOOP);
 12784  00535C  0E40               	movlw	64
 12785  00535E  EC8C  F004         	call	_ECANSetOperationMode
 12786                           
 12787                           ;main.c: 700: putsUSART((char *) "+OK\r\n");
 12788  005362  0E7C               	movlw	high STR_9
 12789  005364  6E21               	movwf	?_putsUSART+1,c
 12790  005366  0E6B               	movlw	low STR_9
 12791  005368  6E20               	movwf	?_putsUSART,c
 12792  00536A  EC03  F007         	call	_putsUSART	;wreg free
 12793                           
 12794                           ;main.c: 701: }
 12795  00536E  EF8C  F034         	goto	l16499
 12796  005372                     l15633:
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;main.c: 703: else if (cmdbuf == stristr(cmdbuf, "LISTEN")) {
 12800  005372  0E01               	movlw	high _cmdbuf
 12801  005374  0100               	movlb	0	; () banked
 12802  005376  EC75  F035         	call	PL124	;call to abstracted procedure
 12803  00537A  EC8D  F009         	call	_stristr	;wreg free
 12804  00537E  EC98  F034         	call	PL2	;call to abstracted procedure
 12805  005382  E104               	bnz	u19375
 12806  005384  0100               	movlb	0	; () banked
 12807  005386  5166               	movf	?_stristr& (0+255),w,b
 12808  005388  0101               	movlb	1	; () banked
 12809  00538A  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12810  00538C                     u19375:
 12811  00538C  E10C               	bnz	l15641
 12812                           
 12813                           ; BSR set to: 1
 12814                           ;main.c: 704: bSilent = 0;
 12815  00538E  6B02               	clrf	_bSilent& (0+255),b
 12816                           
 12817                           ; BSR set to: 1
 12818                           ;main.c: 705: ECANSetOperationMode(ECAN_OP_MODE_LISTEN);
 12819  005390  0E60               	movlw	96
 12820  005392  EC8C  F004         	call	_ECANSetOperationMode
 12821                           
 12822                           ;main.c: 706: putsUSART((char *) "+OK\r\n");
 12823  005396  0E7C               	movlw	high STR_9
 12824  005398  6E21               	movwf	?_putsUSART+1,c
 12825  00539A  0E6B               	movlw	low STR_9
 12826  00539C  6E20               	movwf	?_putsUSART,c
 12827  00539E  EC03  F007         	call	_putsUSART	;wreg free
 12828                           
 12829                           ;main.c: 707: }
 12830  0053A2  EF8C  F034         	goto	l16499
 12831  0053A6                     l15641:
 12832                           
 12833                           ; BSR set to: 1
 12834                           ;main.c: 709: else if (cmdbuf == stristr(cmdbuf, "VERSION")) {
 12835  0053A6  0E01               	movlw	high _cmdbuf
 12836  0053A8  0100               	movlb	0	; () banked
 12837  0053AA  6F67               	movwf	(?_stristr+1)& (0+255),b
 12838  0053AC  0E05               	movlw	low _cmdbuf
 12839  0053AE  6F66               	movwf	?_stristr& (0+255),b
 12840  0053B0  0E7B               	movlw	high STR_18
 12841  0053B2  6F69               	movwf	(?_stristr+3)& (0+255),b
 12842  0053B4  0EF9               	movlw	low STR_18
 12843  0053B6  6F68               	movwf	(?_stristr+2)& (0+255),b
 12844  0053B8  EC8D  F009         	call	_stristr	;wreg free
 12845  0053BC  EC98  F034         	call	PL2	;call to abstracted procedure
 12846  0053C0  E104               	bnz	u19385
 12847  0053C2  0100               	movlb	0	; () banked
 12848  0053C4  5166               	movf	?_stristr& (0+255),w,b
 12849  0053C6  0101               	movlb	1	; () banked
 12850  0053C8  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12851  0053CA                     u19385:
 12852  0053CA  E10A               	bnz	l15647
 12853                           
 12854                           ; BSR set to: 1
 12855                           ;main.c: 710: printFirmwareVersion();
 12856  0053CC  EC4D  F00A         	call	_printFirmwareVersion	;wreg free
 12857                           
 12858                           ;main.c: 711: putsUSART((char *) "+OK\r\n");
 12859  0053D0  0E7C               	movlw	high STR_9
 12860  0053D2  6E21               	movwf	?_putsUSART+1,c
 12861  0053D4  0E6B               	movlw	low STR_9
 12862  0053D6  6E20               	movwf	?_putsUSART,c
 12863  0053D8  EC03  F007         	call	_putsUSART	;wreg free
 12864                           
 12865                           ;main.c: 712: }
 12866  0053DC  EF8C  F034         	goto	l16499
 12867  0053E0                     l15647:
 12868                           
 12869                           ; BSR set to: 1
 12870                           ;main.c: 714: else if (cmdbuf == stristr(cmdbuf, "IFMODE")) {
 12871  0053E0  0E01               	movlw	high _cmdbuf
 12872  0053E2  0100               	movlb	0	; () banked
 12873  0053E4  6F67               	movwf	(?_stristr+1)& (0+255),b
 12874  0053E6  0E05               	movlw	low _cmdbuf
 12875  0053E8  6F66               	movwf	?_stristr& (0+255),b
 12876  0053EA  0E7C               	movlw	high STR_20
 12877  0053EC  6F69               	movwf	(?_stristr+3)& (0+255),b
 12878  0053EE  0E34               	movlw	low STR_20
 12879  0053F0  6F68               	movwf	(?_stristr+2)& (0+255),b
 12880  0053F2  EC8D  F009         	call	_stristr	;wreg free
 12881  0053F6  EC98  F034         	call	PL2	;call to abstracted procedure
 12882  0053FA  E104               	bnz	u19395
 12883  0053FC  0100               	movlb	0	; () banked
 12884  0053FE  5166               	movf	?_stristr& (0+255),w,b
 12885  005400  0101               	movlb	1	; () banked
 12886  005402  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 12887  005404                     u19395:
 12888  005404  E161               	bnz	l15683
 12889                           
 12890                           ; BSR set to: 1
 12891                           ;main.c: 715: ECAN_OP_MODE ifmode = (CANCON & ECAN_OP_MODE_BITS);
 12892  005406  506F               	movf	3951,w,c	;volatile
 12893  005408  0BE0               	andlw	224
 12894  00540A  0102               	movlb	2	; () banked
 12895  00540C  6FC9               	movwf	doModeVerbose@ifmode& (0+255),b
 12896                           
 12897                           ; BSR set to: 2
 12898                           ;main.c: 716: if ((ECAN_OP_MODE_NORMAL == ifmode) & !bSilent) {
 12899  00540E  67C9               	tstfsz	doModeVerbose@ifmode& (0+255),b
 12900  005410  D00B               	goto	l15657
 12901                           
 12902                           ; BSR set to: 2
 12903  005412  0101               	movlb	1	; () banked
 12904  005414  6702               	tstfsz	_bSilent& (0+255),b
 12905  005416  D008               	goto	l15657
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;main.c: 717: putsUSART((char *) "+OK - Normal mode\r\n");
 12909  005418  0E7A               	movlw	high STR_21
 12910  00541A  6E21               	movwf	?_putsUSART+1,c
 12911  00541C  0E0E               	movlw	low STR_21
 12912  00541E  6E20               	movwf	?_putsUSART,c
 12913  005420  EC03  F007         	call	_putsUSART	;wreg free
 12914                           
 12915                           ;main.c: 718: }
 12916  005424  EF8C  F034         	goto	l16499
 12917  005428                     l15657:
 12918                           
 12919                           ;main.c: 719: else if ((ECAN_OP_MODE_NORMAL == ifmode) & bSilent) {
 12920  005428  0102               	movlb	2	; () banked
 12921  00542A  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 12922  00542C  0E01               	movlw	1
 12923  00542E  A4D8               	btfss	status,2,c
 12924  005430  0E00               	movlw	0
 12925  005432  0101               	movlb	1	; () banked
 12926  005434  1502               	andwf	_bSilent& (0+255),w,b
 12927  005436  E008               	bz	l15661
 12928                           
 12929                           ; BSR set to: 1
 12930                           ;main.c: 720: putsUSART((char *) "+OK - Silent mode\r\n");
 12931  005438  0E7A               	movlw	high STR_22
 12932  00543A  6E21               	movwf	?_putsUSART+1,c
 12933  00543C  0E22               	movlw	low STR_22
 12934  00543E  6E20               	movwf	?_putsUSART,c
 12935  005440  EC03  F007         	call	_putsUSART	;wreg free
 12936                           
 12937                           ;main.c: 721: }
 12938  005444  EF8C  F034         	goto	l16499
 12939  005448                     l15661:
 12940                           
 12941                           ; BSR set to: 1
 12942                           ;main.c: 722: else if (ECAN_OP_MODE_SLEEP == ifmode) {
 12943  005448  0102               	movlb	2	; () banked
 12944  00544A  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 12945  00544C  0A20               	xorlw	32
 12946  00544E  E108               	bnz	l15665
 12947                           
 12948                           ; BSR set to: 2
 12949                           ;main.c: 723: putsUSART((char *) "+OK - Sleep mode\r\n");
 12950  005450  0E7A               	movlw	high STR_23
 12951  005452  6E21               	movwf	?_putsUSART+1,c
 12952  005454  0E5E               	movlw	low STR_23
 12953  005456  6E20               	movwf	?_putsUSART,c
 12954  005458  EC03  F007         	call	_putsUSART	;wreg free
 12955                           
 12956                           ;main.c: 724: }
 12957  00545C  EF8C  F034         	goto	l16499
 12958  005460                     l15665:
 12959                           
 12960                           ; BSR set to: 2
 12961                           ;main.c: 725: else if (ECAN_OP_MODE_LOOP == ifmode) {
 12962  005460  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 12963  005462  0A40               	xorlw	64
 12964  005464  E108               	bnz	l15669
 12965                           
 12966                           ; BSR set to: 2
 12967                           ;main.c: 726: putsUSART((char *) "+OK - Loopback mode\r\n");
 12968  005466  0E79               	movlw	high STR_24
 12969  005468  6E21               	movwf	?_putsUSART+1,c
 12970  00546A  0E50               	movlw	low STR_24
 12971  00546C  6E20               	movwf	?_putsUSART,c
 12972  00546E  EC03  F007         	call	_putsUSART	;wreg free
 12973                           
 12974                           ;main.c: 727: }
 12975  005472  EF8C  F034         	goto	l16499
 12976  005476                     l15669:
 12977                           
 12978                           ; BSR set to: 2
 12979                           ;main.c: 728: else if (ECAN_OP_MODE_LISTEN == ifmode) {
 12980  005476  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 12981  005478  0A60               	xorlw	96
 12982  00547A  E108               	bnz	l15673
 12983                           
 12984                           ; BSR set to: 2
 12985                           ;main.c: 729: putsUSART((char *) "+OK - Listen only mode\r\n");
 12986  00547C  0E77               	movlw	high STR_25
 12987  00547E  6E21               	movwf	?_putsUSART+1,c
 12988  005480  0EE9               	movlw	low STR_25
 12989  005482  6E20               	movwf	?_putsUSART,c
 12990  005484  EC03  F007         	call	_putsUSART	;wreg free
 12991                           
 12992                           ;main.c: 730: }
 12993  005488  EF8C  F034         	goto	l16499
 12994  00548C                     l15673:
 12995                           
 12996                           ; BSR set to: 2
 12997                           ;main.c: 731: else if (ECAN_OP_MODE_CONFIG == ifmode) {
 12998  00548C  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 12999  00548E  0A80               	xorlw	128
 13000  005490  E108               	bnz	l15677
 13001                           
 13002                           ; BSR set to: 2
 13003                           ;main.c: 732: putsUSART((char *) "+OK - Closed mode\r\n");
 13004  005492  0E79               	movlw	high STR_26
 13005  005494  6E21               	movwf	?_putsUSART+1,c
 13006  005496  0EFA               	movlw	low STR_26
 13007  005498  6E20               	movwf	?_putsUSART,c
 13008  00549A  EC03  F007         	call	_putsUSART	;wreg free
 13009                           
 13010                           ;main.c: 733: }
 13011  00549E  EF8C  F034         	goto	l16499
 13012  0054A2                     l15677:
 13013                           
 13014                           ; BSR set to: 2
 13015                           ;main.c: 734: else if (ECAN_OP_MODE_BITS == ifmode) {
 13016  0054A2  51C9               	movf	doModeVerbose@ifmode& (0+255),w,b
 13017  0054A4  0AE0               	xorlw	224
 13018  0054A6  E108               	bnz	l15681
 13019                           
 13020                           ; BSR set to: 2
 13021                           ;main.c: 735: putsUSART((char *) "+OK - Bits mode\r\n");
 13022  0054A8  0E7A               	movlw	high STR_27
 13023  0054AA  6E21               	movwf	?_putsUSART+1,c
 13024  0054AC  0E71               	movlw	low STR_27
 13025  0054AE  6E20               	movwf	?_putsUSART,c
 13026  0054B0  EC03  F007         	call	_putsUSART	;wreg free
 13027                           
 13028                           ;main.c: 736: }
 13029  0054B4  EF8C  F034         	goto	l16499
 13030  0054B8                     l15681:
 13031                           
 13032                           ; BSR set to: 2
 13033                           ;main.c: 737: else {
 13034                           ;main.c: 738: putsUSART((char *) "-ERROR - Unknown mode\r\n");
 13035  0054B8  0E78               	movlw	high STR_28
 13036  0054BA  6E21               	movwf	?_putsUSART+1,c
 13037  0054BC  0E7C               	movlw	low STR_28
 13038  0054BE  6E20               	movwf	?_putsUSART,c
 13039  0054C0  EC03  F007         	call	_putsUSART	;wreg free
 13040  0054C4  EF8C  F034         	goto	l16499
 13041  0054C8                     l15683:
 13042                           
 13043                           ; BSR set to: 1
 13044                           ;main.c: 743: else if (cmdbuf == stristr(cmdbuf, "TX")) {
 13045  0054C8  0E01               	movlw	high _cmdbuf
 13046  0054CA  0100               	movlb	0	; () banked
 13047  0054CC  6F67               	movwf	(?_stristr+1)& (0+255),b
 13048  0054CE  0E05               	movlw	low _cmdbuf
 13049  0054D0  6F66               	movwf	?_stristr& (0+255),b
 13050  0054D2  0E7C               	movlw	high STR_29
 13051  0054D4  6F69               	movwf	(?_stristr+3)& (0+255),b
 13052  0054D6  0EEB               	movlw	low STR_29
 13053  0054D8  6F68               	movwf	(?_stristr+2)& (0+255),b
 13054  0054DA  EC8D  F009         	call	_stristr	;wreg free
 13055  0054DE  EC98  F034         	call	PL2	;call to abstracted procedure
 13056  0054E2  E104               	bnz	u19495
 13057  0054E4  0100               	movlb	0	; () banked
 13058  0054E6  5166               	movf	?_stristr& (0+255),w,b
 13059  0054E8  0101               	movlb	1	; () banked
 13060  0054EA  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13061  0054EC                     u19495:
 13062  0054EC  E001 D0D9          	bnz	l15737
 13063                           
 13064                           ; BSR set to: 1
 13065                           ;main.c: 745: char *p = strtok(cmdbuf, ",");
 13066  0054F0  ECF9  F034         	call	PL36	;call to abstracted procedure
 13067  0054F4  ECDC  F00A         	call	_strtok	;wreg free
 13068  0054F8  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13069  0054FC  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;main.c: 748: vscpPriority = 3;
 13073  005500  0E03               	movlw	3
 13074  005502  0101               	movlb	1	; () banked
 13075  005504  6FB0               	movwf	_vscpPriority& (0+255),b
 13076                           
 13077                           ; BSR set to: 1
 13078                           ;main.c: 749: if ((0) != p) {
 13079  005506  0102               	movlb	2	; () banked
 13080  005508  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13081  00550A  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13082  00550C  E009               	bz	l15693
 13083                           
 13084                           ; BSR set to: 2
 13085                           ;main.c: 750: vscpPriority = atoi(p);
 13086  00550E  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13087  005512  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13088  005516  EC6C  F012         	call	_atoi	;wreg free
 13089  00551A  5162               	movf	?_atoi& (0+255),w,b
 13090  00551C  0101               	movlb	1	; () banked
 13091  00551E  6FB0               	movwf	_vscpPriority& (0+255),b
 13092  005520                     l15693:
 13093                           
 13094                           ;main.c: 751: }
 13095                           ;main.c: 754: vscpClass = 0;
 13096  005520  0101               	movlb	1	; () banked
 13097  005522  6BAD               	clrf	_vscpClass& (0+255),b
 13098  005524  6BAE               	clrf	(_vscpClass+1)& (0+255),b
 13099                           
 13100                           ; BSR set to: 1
 13101                           ;main.c: 755: if ((0) != (p = strtok((0), ","))) {
 13102  005526  ECA2  F034         	call	PL4	;call to abstracted procedure
 13103  00552A  ECDC  F00A         	call	_strtok	;wreg free
 13104  00552E  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13105  005532  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13106  005536  0102               	movlb	2	; () banked
 13107  005538  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13108  00553A  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13109  00553C  E00A               	bz	l15699
 13110                           
 13111                           ; BSR set to: 2
 13112                           ;main.c: 756: vscpClass = atoi(p);
 13113  00553E  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13114  005542  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13115  005546  EC6C  F012         	call	_atoi	;wreg free
 13116  00554A  C062  F1AD         	movff	?_atoi,_vscpClass
 13117  00554E  C063  F1AE         	movff	?_atoi+1,_vscpClass+1
 13118  005552                     l15699:
 13119                           
 13120                           ;main.c: 757: }
 13121                           ;main.c: 760: vscpType = 0;
 13122  005552  0101               	movlb	1	; () banked
 13123  005554  6BB2               	clrf	_vscpType& (0+255),b
 13124                           
 13125                           ; BSR set to: 1
 13126                           ;main.c: 761: if ((0) != (p = strtok((0), ","))) {
 13127  005556  ECA2  F034         	call	PL4	;call to abstracted procedure
 13128  00555A  ECDC  F00A         	call	_strtok	;wreg free
 13129  00555E  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13130  005562  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13131  005566  0102               	movlb	2	; () banked
 13132  005568  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13133  00556A  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13134  00556C  E009               	bz	l15705
 13135                           
 13136                           ; BSR set to: 2
 13137                           ;main.c: 762: vscpType = atoi(p);
 13138  00556E  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13139  005572  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13140  005576  EC6C  F012         	call	_atoi	;wreg free
 13141  00557A  5162               	movf	?_atoi& (0+255),w,b
 13142  00557C  0101               	movlb	1	; () banked
 13143  00557E  6FB2               	movwf	_vscpType& (0+255),b
 13144  005580                     l15705:
 13145                           
 13146                           ;main.c: 763: }
 13147                           ;main.c: 766: vscpNodeId = 0;
 13148  005580  0101               	movlb	1	; () banked
 13149  005582  6BAF               	clrf	_vscpNodeId& (0+255),b
 13150                           
 13151                           ; BSR set to: 1
 13152                           ;main.c: 767: if ((0) != (p = strtok((0), ","))) {
 13153  005584  ECA2  F034         	call	PL4	;call to abstracted procedure
 13154  005588  ECDC  F00A         	call	_strtok	;wreg free
 13155  00558C  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13156  005590  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13157  005594  0102               	movlb	2	; () banked
 13158  005596  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13159  005598  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13160  00559A  E009               	bz	l15711
 13161                           
 13162                           ; BSR set to: 2
 13163                           ;main.c: 768: vscpNodeId = atoi(p);
 13164  00559C  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13165  0055A0  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13166  0055A4  EC6C  F012         	call	_atoi	;wreg free
 13167  0055A8  5162               	movf	?_atoi& (0+255),w,b
 13168  0055AA  0101               	movlb	1	; () banked
 13169  0055AC  6FAF               	movwf	_vscpNodeId& (0+255),b
 13170  0055AE                     l15711:
 13171                           
 13172                           ;main.c: 769: }
 13173                           ;main.c: 772: vscpSize = 0;
 13174  0055AE  0101               	movlb	1	; () banked
 13175  0055B0  6BB1               	clrf	_vscpSize& (0+255),b
 13176                           
 13177                           ; BSR set to: 1
 13178                           ;main.c: 773: if ((0) != (p = strtok((0), ","))) {
 13179  0055B2  ECA2  F034         	call	PL4	;call to abstracted procedure
 13180  0055B6  ECDC  F00A         	call	_strtok	;wreg free
 13181  0055BA  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13182  0055BE  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13183  0055C2  0102               	movlb	2	; () banked
 13184  0055C4  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13185  0055C6  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13186  0055C8  E009               	bz	l15717
 13187                           
 13188                           ; BSR set to: 2
 13189                           ;main.c: 774: vscpSize = atoi(p);
 13190  0055CA  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13191  0055CE  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13192  0055D2  EC6C  F012         	call	_atoi	;wreg free
 13193  0055D6  5162               	movf	?_atoi& (0+255),w,b
 13194  0055D8  0101               	movlb	1	; () banked
 13195  0055DA  6FB1               	movwf	_vscpSize& (0+255),b
 13196  0055DC                     l15717:
 13197                           
 13198                           ;main.c: 775: }
 13199                           ;main.c: 777: memset( vscpData, 0, 8 );
 13200  0055DC  0101               	movlb	1	; () banked
 13201  0055DE  0E01               	movlw	high _vscpData
 13202  0055E0  6E20               	movwf	?_memset+1,c
 13203  0055E2  0EA5               	movlw	low _vscpData
 13204  0055E4  6E1F               	movwf	?_memset,c
 13205  0055E6  6A22               	clrf	?_memset+3,c
 13206  0055E8  6A21               	clrf	?_memset+2,c
 13207  0055EA  6A24               	clrf	?_memset+5,c
 13208  0055EC  0E08               	movlw	8
 13209  0055EE  6E23               	movwf	?_memset+4,c
 13210  0055F0  ECE8  F004         	call	_memset	;wreg free
 13211                           
 13212                           ;main.c: 778: for (i = 0; i < vscpSize; i++) {
 13213  0055F4  0102               	movlb	2	; () banked
 13214  0055F6  6BB5               	clrf	doModeVerbose@i& (0+255),b
 13215  0055F8  D01D               	goto	l15727
 13216  0055FA                     l15721:
 13217                           
 13218                           ; BSR set to: 2
 13219                           ;main.c: 779: if ((0) != (p = strtok((0), ","))) {
 13220  0055FA  ECA2  F034         	call	PL4	;call to abstracted procedure
 13221  0055FE  ECDC  F00A         	call	_strtok	;wreg free
 13222  005602  C064  F2CA         	movff	?_strtok,doModeVerbose@p
 13223  005606  C065  F2CB         	movff	?_strtok+1,doModeVerbose@p+1
 13224  00560A  0102               	movlb	2	; () banked
 13225  00560C  51CB               	movf	(doModeVerbose@p+1)& (0+255),w,b
 13226  00560E  11CA               	iorwf	doModeVerbose@p& (0+255),w,b
 13227  005610  E016               	bz	l15729
 13228                           
 13229                           ; BSR set to: 2
 13230                           ;main.c: 780: vscpData[ i ] = atoi(p);
 13231  005612  0EA5               	movlw	low _vscpData
 13232  005614  25B5               	addwf	doModeVerbose@i& (0+255),w,b
 13233  005616  6ED9               	movwf	fsr2l,c
 13234  005618  6ADA               	clrf	fsr2h,c
 13235  00561A  0101               	movlb	1	; () banked
 13236  00561C  0E01               	movlw	high _vscpData
 13237  00561E  22DA               	addwfc	fsr2h,f,c
 13238  005620  C2CA  F062         	movff	doModeVerbose@p,?_atoi
 13239  005624  C2CB  F063         	movff	doModeVerbose@p+1,?_atoi+1
 13240  005628  EC6C  F012         	call	_atoi	;wreg free
 13241  00562C  5162               	movf	?_atoi& (0+255),w,b
 13242  00562E  6EDF               	movwf	indf2,c
 13243                           
 13244                           ; BSR set to: 0
 13245                           
 13246                           ;main.c: 781: }
 13247  005630  0102               	movlb	2	; () banked
 13248  005632  2BB5               	incf	doModeVerbose@i& (0+255),f,b
 13249  005634                     l15727:
 13250                           
 13251                           ; BSR set to: 2
 13252  005634  0101               	movlb	1	; () banked
 13253  005636  51B1               	movf	_vscpSize& (0+255),w,b
 13254  005638  0102               	movlb	2	; () banked
 13255  00563A  5DB5               	subwf	doModeVerbose@i& (0+255),w,b
 13256  00563C  E3DE               	bnc	l15721
 13257  00563E                     l15729:
 13258                           
 13259                           ; BSR set to: 2
 13260                           ;main.c: 784: }
 13261                           ;main.c: 785: }
 13262                           ;main.c: 787: if ( sendVSCPFrame(vscpClass,
 13263                           ;main.c: 788: vscpType,
 13264                           ;main.c: 789: vscpNodeId,
 13265                           ;main.c: 790: vscpPriority,
 13266                           ;main.c: 791: vscpSize,
 13267                           ;main.c: 792: vscpData ) ) {
 13268  00563E  C1AD  F08F         	movff	_vscpClass,?_sendVSCPFrame
 13269  005642  C1AE  F090         	movff	_vscpClass+1,?_sendVSCPFrame+1
 13270  005646  C1B2  F091         	movff	_vscpType,?_sendVSCPFrame+2
 13271  00564A  C1AF  F092         	movff	_vscpNodeId,?_sendVSCPFrame+3
 13272  00564E  C1B0  F093         	movff	_vscpPriority,?_sendVSCPFrame+4
 13273  005652  C1B1  F094         	movff	_vscpSize,?_sendVSCPFrame+5
 13274  005656  0E01               	movlw	high _vscpData
 13275  005658  0100               	movlb	0	; () banked
 13276  00565A  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 13277  00565C  0EA5               	movlw	low _vscpData
 13278  00565E  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 13279  005660  EC58  F00D         	call	_sendVSCPFrame	;wreg free
 13280  005664  0900               	iorlw	0
 13281  005666  E015               	bz	l15735
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;main.c: 794: cntTxFrames++;
 13285  005668  2BD5               	incf	_cntTxFrames& (0+255),f,b
 13286  00566A  0E00               	movlw	0
 13287  00566C  23D6               	addwfc	(_cntTxFrames+1)& (0+255),f,b
 13288  00566E  23D7               	addwfc	(_cntTxFrames+2)& (0+255),f,b
 13289  005670  23D8               	addwfc	(_cntTxFrames+3)& (0+255),f,b
 13290                           
 13291                           ;main.c: 795: cntTxBytes += vscpSize;
 13292  005672  0101               	movlb	1	; () banked
 13293  005674  51B1               	movf	_vscpSize& (0+255),w,b
 13294  005676  0100               	movlb	0	; () banked
 13295  005678  27D1               	addwf	_cntTxBytes& (0+255),f,b
 13296  00567A  0E00               	movlw	0
 13297  00567C  23D2               	addwfc	(_cntTxBytes+1)& (0+255),f,b
 13298  00567E  23D3               	addwfc	(_cntTxBytes+2)& (0+255),f,b
 13299  005680  23D4               	addwfc	(_cntTxBytes+3)& (0+255),f,b
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;main.c: 796: putsUSART((char *) "+OK\r\n");
 13303  005682  0E7C               	movlw	high STR_9
 13304  005684  6E21               	movwf	?_putsUSART+1,c
 13305  005686  0E6B               	movlw	low STR_9
 13306  005688  6E20               	movwf	?_putsUSART,c
 13307  00568A  EC03  F007         	call	_putsUSART	;wreg free
 13308                           
 13309                           ;main.c: 797: }
 13310  00568E  EF8C  F034         	goto	l16499
 13311  005692                     l15735:
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;main.c: 798: else {
 13315                           ;main.c: 799: putsUSART((char *) "-ERROR - Failed to send event.\r\n");
 13316  005692  0E76               	movlw	high STR_37
 13317  005694  6E21               	movwf	?_putsUSART+1,c
 13318  005696  0E69               	movlw	low STR_37
 13319  005698  6E20               	movwf	?_putsUSART,c
 13320  00569A  EC03  F007         	call	_putsUSART	;wreg free
 13321  00569E  EF8C  F034         	goto	l16499
 13322  0056A2                     l15737:
 13323                           
 13324                           ; BSR set to: 1
 13325                           ;main.c: 803: else if (cmdbuf == stristr(cmdbuf, "RX")) {
 13326  0056A2  0E01               	movlw	high _cmdbuf
 13327  0056A4  0100               	movlb	0	; () banked
 13328  0056A6  6F67               	movwf	(?_stristr+1)& (0+255),b
 13329  0056A8  0E05               	movlw	low _cmdbuf
 13330  0056AA  6F66               	movwf	?_stristr& (0+255),b
 13331  0056AC  0E7C               	movlw	high STR_38
 13332  0056AE  6F69               	movwf	(?_stristr+3)& (0+255),b
 13333  0056B0  0EE8               	movlw	low STR_38
 13334  0056B2  6F68               	movwf	(?_stristr+2)& (0+255),b
 13335  0056B4  EC8D  F009         	call	_stristr	;wreg free
 13336  0056B8  EC98  F034         	call	PL2	;call to abstracted procedure
 13337  0056BC  E104               	bnz	u19585
 13338  0056BE  0100               	movlb	0	; () banked
 13339  0056C0  5166               	movf	?_stristr& (0+255),w,b
 13340  0056C2  0101               	movlb	1	; () banked
 13341  0056C4  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13342  0056C6                     u19585:
 13343  0056C6  E114               	bnz	l15745
 13344                           
 13345                           ; BSR set to: 1
 13346                           ;main.c: 804: if (receivePrintEventVerbose()) {
 13347  0056C8  ECBB  F021         	call	_receivePrintEventVerbose	;wreg free
 13348  0056CC  0900               	iorlw	0
 13349  0056CE  E008               	bz	l15743
 13350                           
 13351                           ;main.c: 805: putsUSART((char *) "+OK\r\n");
 13352  0056D0  0E7C               	movlw	high STR_9
 13353  0056D2  6E21               	movwf	?_putsUSART+1,c
 13354  0056D4  0E6B               	movlw	low STR_9
 13355  0056D6  6E20               	movwf	?_putsUSART,c
 13356  0056D8  EC03  F007         	call	_putsUSART	;wreg free
 13357                           
 13358                           ;main.c: 806: }
 13359  0056DC  EF8C  F034         	goto	l16499
 13360  0056E0                     l15743:
 13361                           
 13362                           ;main.c: 807: else {
 13363                           ;main.c: 808: putsUSART((char *) "+OK - no events\r\n");
 13364  0056E0  0E7A               	movlw	high STR_40
 13365  0056E2  6E21               	movwf	?_putsUSART+1,c
 13366  0056E4  0E83               	movlw	low STR_40
 13367  0056E6  6E20               	movwf	?_putsUSART,c
 13368  0056E8  EC03  F007         	call	_putsUSART	;wreg free
 13369  0056EC  EF8C  F034         	goto	l16499
 13370  0056F0                     l15745:
 13371                           
 13372                           ; BSR set to: 1
 13373                           ;main.c: 812: else if (cmdbuf == stristr(cmdbuf, "STAT")) {
 13374  0056F0  0E01               	movlw	high _cmdbuf
 13375  0056F2  0100               	movlb	0	; () banked
 13376  0056F4  6F67               	movwf	(?_stristr+1)& (0+255),b
 13377  0056F6  0E05               	movlw	low _cmdbuf
 13378  0056F8  6F66               	movwf	?_stristr& (0+255),b
 13379  0056FA  0E7C               	movlw	high STR_41
 13380  0056FC  6F69               	movwf	(?_stristr+3)& (0+255),b
 13381  0056FE  0EBC               	movlw	low STR_41
 13382  005700  6F68               	movwf	(?_stristr+2)& (0+255),b
 13383  005702  EC8D  F009         	call	_stristr	;wreg free
 13384  005706  EC98  F034         	call	PL2	;call to abstracted procedure
 13385  00570A  E104               	bnz	u19605
 13386  00570C  0100               	movlb	0	; () banked
 13387  00570E  5166               	movf	?_stristr& (0+255),w,b
 13388  005710  0101               	movlb	1	; () banked
 13389  005712  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13390  005714                     u19605:
 13391  005714  E10A               	bnz	l15751
 13392                           
 13393                           ; BSR set to: 1
 13394                           ;main.c: 813: printStatistics();
 13395  005716  ECFA  F017         	call	_printStatistics	;wreg free
 13396                           
 13397                           ;main.c: 814: putsUSART((char *) "+OK\r\n");
 13398  00571A  0E7C               	movlw	high STR_9
 13399  00571C  6E21               	movwf	?_putsUSART+1,c
 13400  00571E  0E6B               	movlw	low STR_9
 13401  005720  6E20               	movwf	?_putsUSART,c
 13402  005722  EC03  F007         	call	_putsUSART	;wreg free
 13403                           
 13404                           ;main.c: 815: }
 13405  005726  EF8C  F034         	goto	l16499
 13406  00572A                     l15751:
 13407                           
 13408                           ; BSR set to: 1
 13409                           ;main.c: 817: else if (cmdbuf == stristr(cmdbuf, "ERR")) {
 13410  00572A  0E01               	movlw	high _cmdbuf
 13411  00572C  0100               	movlb	0	; () banked
 13412  00572E  6F67               	movwf	(?_stristr+1)& (0+255),b
 13413  005730  0E05               	movlw	low _cmdbuf
 13414  005732  6F66               	movwf	?_stristr& (0+255),b
 13415  005734  0E7C               	movlw	high STR_43
 13416  005736  6F69               	movwf	(?_stristr+3)& (0+255),b
 13417  005738  0ED6               	movlw	low STR_43
 13418  00573A  6F68               	movwf	(?_stristr+2)& (0+255),b
 13419  00573C  EC8D  F009         	call	_stristr	;wreg free
 13420  005740  EC98  F034         	call	PL2	;call to abstracted procedure
 13421  005744  E104               	bnz	u19615
 13422  005746  0100               	movlb	0	; () banked
 13423  005748  5166               	movf	?_stristr& (0+255),w,b
 13424  00574A  0101               	movlb	1	; () banked
 13425  00574C  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13426  00574E                     u19615:
 13427  00574E  E10A               	bnz	l15757
 13428                           
 13429                           ; BSR set to: 1
 13430                           ;main.c: 818: printErrors();
 13431  005750  EC62  F020         	call	_printErrors	;wreg free
 13432                           
 13433                           ;main.c: 819: putsUSART((char *) "+OK\r\n");
 13434  005754  0E7C               	movlw	high STR_9
 13435  005756  6E21               	movwf	?_putsUSART+1,c
 13436  005758  0E6B               	movlw	low STR_9
 13437  00575A  6E20               	movwf	?_putsUSART,c
 13438  00575C  EC03  F007         	call	_putsUSART	;wreg free
 13439                           
 13440                           ;main.c: 820: }
 13441  005760  EF8C  F034         	goto	l16499
 13442  005764                     l15757:
 13443                           
 13444                           ; BSR set to: 1
 13445                           ;main.c: 822: else if (cmdbuf == stristr(cmdbuf, "HELP")) {
 13446  005764  0E01               	movlw	high _cmdbuf
 13447  005766  0100               	movlb	0	; () banked
 13448  005768  6F67               	movwf	(?_stristr+1)& (0+255),b
 13449  00576A  0E05               	movlw	low _cmdbuf
 13450  00576C  6F66               	movwf	?_stristr& (0+255),b
 13451  00576E  0E7C               	movlw	high STR_45
 13452  005770  6F69               	movwf	(?_stristr+3)& (0+255),b
 13453  005772  0EB7               	movlw	low STR_45
 13454  005774  6F68               	movwf	(?_stristr+2)& (0+255),b
 13455  005776  EC8D  F009         	call	_stristr	;wreg free
 13456  00577A  EC98  F034         	call	PL2	;call to abstracted procedure
 13457  00577E  E104               	bnz	u19625
 13458  005780  0100               	movlb	0	; () banked
 13459  005782  5166               	movf	?_stristr& (0+255),w,b
 13460  005784  0101               	movlb	1	; () banked
 13461  005786  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13462  005788                     u19625:
 13463  005788  E10A               	bnz	l15761
 13464                           
 13465                           ; BSR set to: 1
 13466                           ;main.c: 823: printHelp();
 13467  00578A  EC74  F016         	call	_printHelp	;wreg free
 13468                           
 13469                           ;main.c: 824: putsUSART((char *) "+OK\r\n");
 13470  00578E  0E7C               	movlw	high STR_9
 13471  005790  6E21               	movwf	?_putsUSART+1,c
 13472  005792  0E6B               	movlw	low STR_9
 13473  005794  6E20               	movwf	?_putsUSART,c
 13474  005796  EC03  F007         	call	_putsUSART	;wreg free
 13475                           
 13476                           ;main.c: 825: }
 13477  00579A  EF8C  F034         	goto	l16499
 13478  00579E                     l15761:
 13479                           
 13480                           ; BSR set to: 1
 13481                           ;main.c: 827: else if (cmdbuf == stristr(cmdbuf, "FIND")) {
 13482  00579E  0E01               	movlw	high _cmdbuf
 13483  0057A0  0100               	movlb	0	; () banked
 13484  0057A2  6F67               	movwf	(?_stristr+1)& (0+255),b
 13485  0057A4  0E05               	movlw	low _cmdbuf
 13486  0057A6  6F66               	movwf	?_stristr& (0+255),b
 13487  0057A8  0E7C               	movlw	high STR_47
 13488  0057AA  6F69               	movwf	(?_stristr+3)& (0+255),b
 13489  0057AC  0E94               	movlw	low STR_47
 13490  0057AE  6F68               	movwf	(?_stristr+2)& (0+255),b
 13491  0057B0  EC8D  F009         	call	_stristr	;wreg free
 13492  0057B4  EC98  F034         	call	PL2	;call to abstracted procedure
 13493  0057B8  E104               	bnz	u19635
 13494  0057BA  0100               	movlb	0	; () banked
 13495  0057BC  5166               	movf	?_stristr& (0+255),w,b
 13496  0057BE  0101               	movlb	1	; () banked
 13497  0057C0  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13498  0057C2                     u19635:
 13499  0057C2  E10A               	bnz	l15767
 13500                           
 13501                           ; BSR set to: 1
 13502                           ;main.c: 828: findNodes();
 13503  0057C4  EC23  F015         	call	_findNodes	;wreg free
 13504                           
 13505                           ;main.c: 829: putsUSART((char *) "+OK\r\n");
 13506  0057C8  0E7C               	movlw	high STR_9
 13507  0057CA  6E21               	movwf	?_putsUSART+1,c
 13508  0057CC  0E6B               	movlw	low STR_9
 13509  0057CE  6E20               	movwf	?_putsUSART,c
 13510  0057D0  EC03  F007         	call	_putsUSART	;wreg free
 13511                           
 13512                           ;main.c: 830: }
 13513  0057D4  EF8C  F034         	goto	l16499
 13514  0057D8                     l15767:
 13515                           
 13516                           ; BSR set to: 1
 13517                           ;main.c: 833: else if (cmdbuf == stristr(cmdbuf, "RREG")) {
 13518  0057D8  0E01               	movlw	high _cmdbuf
 13519  0057DA  0100               	movlb	0	; () banked
 13520  0057DC  6F67               	movwf	(?_stristr+1)& (0+255),b
 13521  0057DE  0E05               	movlw	low _cmdbuf
 13522  0057E0  6F66               	movwf	?_stristr& (0+255),b
 13523  0057E2  0E7C               	movlw	high STR_49
 13524  0057E4  6F69               	movwf	(?_stristr+3)& (0+255),b
 13525  0057E6  0E99               	movlw	low STR_49
 13526  0057E8  6F68               	movwf	(?_stristr+2)& (0+255),b
 13527  0057EA  EC8D  F009         	call	_stristr	;wreg free
 13528  0057EE  EC98  F034         	call	PL2	;call to abstracted procedure
 13529  0057F2  E104               	bnz	u19645
 13530  0057F4  0100               	movlb	0	; () banked
 13531  0057F6  5166               	movf	?_stristr& (0+255),w,b
 13532  0057F8  0101               	movlb	1	; () banked
 13533  0057FA  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 13534  0057FC                     u19645:
 13535  0057FC  E001 D213          	bnz	l15935
 13536                           
 13537                           ; BSR set to: 1
 13538                           ;main.c: 835: uint8_t i;
 13539                           ;main.c: 836: uint8_t nodeid;
 13540                           ;main.c: 837: uint8_t page = 0;
 13541  005800  0102               	movlb	2	; () banked
 13542  005802  6BBB               	clrf	doModeVerbose@page& (0+255),b
 13543                           
 13544                           ; BSR set to: 2
 13545                           ;main.c: 838: uint8_t reg;
 13546                           ;main.c: 839: uint8_t value;
 13547                           ;main.c: 840: uint8_t count = 1;
 13548  005804  0E01               	movlw	1
 13549  005806  6FB7               	movwf	doModeVerbose@count& (0+255),b
 13550                           
 13551                           ; BSR set to: 2
 13552                           ;main.c: 842: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 13553  005808  506F               	movf	3951,w,c	;volatile
 13554  00580A  0BE0               	andlw	224
 13555  00580C  E012               	bz	l15783
 13556                           
 13557                           ; BSR set to: 2
 13558                           ;main.c: 843: putsUSART( (const char *)"-ERROR - Command only works if interface is open
      +                          .\r\n" );
 13559  00580E  0E70               	movlw	high STR_50
 13560  005810  6E21               	movwf	?_putsUSART+1,c
 13561  005812  0E31               	movlw	low STR_50
 13562  005814  6E20               	movwf	?_putsUSART,c
 13563  005816  EC03  F007         	call	_putsUSART	;wreg free
 13564  00581A                     l15777:
 13565                           
 13566                           ;main.c: 844: memset( cmdbuf, 0, sizeof( cmdbuf ) );
 13567  00581A  0101               	movlb	1	; () banked
 13568  00581C  0E01               	movlw	high _cmdbuf
 13569  00581E  6E20               	movwf	?_memset+1,c
 13570  005820  0E05               	movlw	low _cmdbuf
 13571  005822  ECBD  F00B         	call	PL26	;call to abstracted procedure
 13572  005826  ECE8  F004         	call	_memset	;wreg free
 13573                           
 13574                           ;main.c: 845: pos = 0;
 13575  00582A  0101               	movlb	1	; () banked
 13576  00582C  6B03               	clrf	_pos& (0+255),b
 13577  00582E  EF97  F034         	goto	l586
 13578  005832                     l15783:
 13579                           
 13580                           ; BSR set to: 2
 13581                           ;main.c: 847: }
 13582                           ;main.c: 849: strcpy(cmdbuf, cmdbuf + 5);
 13583  005832  0101               	movlb	1	; () banked
 13584  005834  ECB1  F034         	call	PL8	;call to abstracted procedure
 13585  005838  ECFE  F004         	call	_strcpy	;wreg free
 13586                           
 13587                           ; BSR set to: 1
 13588                           ;main.c: 850: char *p = strtok(cmdbuf, " ");
 13589  00583C  0E01               	movlw	high _cmdbuf
 13590  00583E  EC03  F035         	call	PL44	;call to abstracted procedure
 13591  005842  ECDC  F00A         	call	_strtok	;wreg free
 13592  005846  C064  F2C5         	movff	?_strtok,doModeVerbose@p_1295
 13593  00584A  C065  F2C6         	movff	?_strtok+1,doModeVerbose@p_1295+1
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;main.c: 851: if ((0) != p) {
 13597  00584E  0102               	movlb	2	; () banked
 13598  005850  51C6               	movf	(doModeVerbose@p_1295+1)& (0+255),w,b
 13599  005852  11C5               	iorwf	doModeVerbose@p_1295& (0+255),w,b
 13600  005854  E00A               	bz	l15791
 13601                           
 13602                           ; BSR set to: 2
 13603                           ;main.c: 852: nodeid = atoi(p);
 13604  005856  C2C5  F062         	movff	doModeVerbose@p_1295,?_atoi
 13605  00585A  C2C6  F063         	movff	doModeVerbose@p_1295+1,?_atoi+1
 13606  00585E  EC6C  F012         	call	_atoi	;wreg free
 13607  005862  5162               	movf	?_atoi& (0+255),w,b
 13608  005864  0102               	movlb	2	; () banked
 13609  005866  6FB8               	movwf	doModeVerbose@nodeid& (0+255),b
 13610                           
 13611                           ;main.c: 853: }
 13612  005868  D007               	goto	l15799
 13613  00586A                     l15791:
 13614                           
 13615                           ; BSR set to: 2
 13616                           ;main.c: 854: else {
 13617                           ;main.c: 855: putsUSART((char *) "-ERROR - Needs nodeid\r\n");
 13618  00586A  0E78               	movlw	high STR_52
 13619  00586C  6E21               	movwf	?_putsUSART+1,c
 13620  00586E  0E64               	movlw	low STR_52
 13621  005870  6E20               	movwf	?_putsUSART,c
 13622  005872  EC03  F007         	call	_putsUSART	;wreg free
 13623  005876  D7D1               	goto	l15777
 13624  005878                     l15799:
 13625                           
 13626                           ; BSR set to: 2
 13627                           ;main.c: 859: }
 13628                           ;main.c: 861: if ((0) != (p = strtok((0), " "))) {
 13629  005878  ECF1  F034         	call	PL32	;call to abstracted procedure
 13630  00587C  ECDC  F00A         	call	_strtok	;wreg free
 13631  005880  C064  F2C5         	movff	?_strtok,doModeVerbose@p_1295
 13632  005884  C065  F2C6         	movff	?_strtok+1,doModeVerbose@p_1295+1
 13633  005888  0102               	movlb	2	; () banked
 13634  00588A  51C6               	movf	(doModeVerbose@p_1295+1)& (0+255),w,b
 13635  00588C  11C5               	iorwf	doModeVerbose@p_1295& (0+255),w,b
 13636  00588E  E033               	bz	l15807
 13637                           
 13638                           ; BSR set to: 2
 13639                           ;main.c: 863: char *preg;
 13640                           ;main.c: 864: if (preg = strchr(p, ':')) {
 13641  005890  C2C5  F01F         	movff	doModeVerbose@p_1295,?_strchr
 13642  005894  C2C6  F020         	movff	doModeVerbose@p_1295+1,?_strchr+1
 13643  005898  6A22               	clrf	?_strchr+3,c
 13644  00589A  0E3A               	movlw	58
 13645  00589C  6E21               	movwf	?_strchr+2,c
 13646  00589E  EC86  F007         	call	_strchr	;wreg free
 13647  0058A2  C01F  F28C         	movff	?_strchr,doModeVerbose@preg
 13648  0058A6  C020  F28D         	movff	?_strchr+1,doModeVerbose@preg+1
 13649  0058AA  0102               	movlb	2	; () banked
 13650  0058AC  518D               	movf	(doModeVerbose@preg+1)& (0+255),w,b
 13651  0058AE  118C               	iorwf	doModeVerbose@preg& (0+255),w,b
 13652  0058B0  E018               	bz	l15805
 13653                           
 13654                           ; BSR set to: 2
 13655                           ;main.c: 865: page = atoi(p);
 13656  0058B2  C2C5  F062         	movff	doModeVerbose@p_1295,?_atoi
 13657  0058B6  C2C6  F063         	movff	doModeVerbose@p_1295+1,?_atoi+1
 13658  0058BA  EC6C  F012         	call	_atoi	;wreg free
 13659  0058BE  5162               	movf	?_atoi& (0+255),w,b
 13660  0058C0  0102               	movlb	2	; () banked
 13661  0058C2  6FBB               	movwf	doModeVerbose@page& (0+255),b
 13662                           
 13663                           ;main.c: 866: reg = atoi(preg + 1);
 13664  0058C4  298C               	incf	doModeVerbose@preg& (0+255),w,b
 13665  0058C6  0101               	movlb	1	; () banked
 13666  0058C8  6FB9               	movwf	??_doModeVerbose& (0+255),b
 13667  0058CA  0E00               	movlw	0
 13668  0058CC  0102               	movlb	2	; () banked
 13669  0058CE  218D               	addwfc	(doModeVerbose@preg+1)& (0+255),w,b
 13670  0058D0  0101               	movlb	1	; () banked
 13671  0058D2  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 13672  0058D4  C1B9  F062         	movff	??_doModeVerbose,?_atoi
 13673  0058D8  C1BA  F063         	movff	??_doModeVerbose+1,?_atoi+1
 13674  0058DC  EC6C  F012         	call	_atoi	;wreg free
 13675  0058E0  D006               	goto	L7
 13676  0058E2                     l15805:
 13677                           
 13678                           ; BSR set to: 2
 13679                           ;main.c: 868: else {
 13680                           ;main.c: 869: reg = atoi(p);
 13681  0058E2  C2C5  F062         	movff	doModeVerbose@p_1295,?_atoi
 13682  0058E6  C2C6  F063         	movff	doModeVerbose@p_1295+1,?_atoi+1
 13683  0058EA  EC6C  F012         	call	_atoi	;wreg free
 13684  0058EE                     L7:
 13685  0058EE  5162               	movf	?_atoi& (0+255),w,b
 13686  0058F0  0102               	movlb	2	; () banked
 13687  0058F2  6FBC               	movwf	doModeVerbose@reg& (0+255),b
 13688  0058F4  D007               	goto	l15815
 13689  0058F6                     l15807:
 13690                           
 13691                           ; BSR set to: 2
 13692                           ;main.c: 873: else {
 13693                           ;main.c: 874: putsUSART((char *) "-ERROR - Needs [page:]register\r\n");
 13694  0058F6  0E76               	movlw	high STR_54
 13695  0058F8  6E21               	movwf	?_putsUSART+1,c
 13696  0058FA  0EAB               	movlw	low STR_54
 13697  0058FC  6E20               	movwf	?_putsUSART,c
 13698  0058FE  EC03  F007         	call	_putsUSART	;wreg free
 13699  005902  D78B               	goto	l15777
 13700  005904                     l15815:
 13701                           
 13702                           ; BSR set to: 2
 13703                           ;main.c: 878: }
 13704                           ;main.c: 881: if ((0) != (p = strtok((0), " "))) {
 13705  005904  ECF1  F034         	call	PL32	;call to abstracted procedure
 13706  005908  ECDC  F00A         	call	_strtok	;wreg free
 13707  00590C  C064  F2C5         	movff	?_strtok,doModeVerbose@p_1295
 13708  005910  C065  F2C6         	movff	?_strtok+1,doModeVerbose@p_1295+1
 13709  005914  0102               	movlb	2	; () banked
 13710  005916  51C6               	movf	(doModeVerbose@p_1295+1)& (0+255),w,b
 13711  005918  11C5               	iorwf	doModeVerbose@p_1295& (0+255),w,b
 13712  00591A  E00D               	bz	l593
 13713                           
 13714                           ; BSR set to: 2
 13715                           ;main.c: 882: count = atoi(p);
 13716  00591C  C2C5  F062         	movff	doModeVerbose@p_1295,?_atoi
 13717  005920  C2C6  F063         	movff	doModeVerbose@p_1295+1,?_atoi+1
 13718  005924  EC6C  F012         	call	_atoi	;wreg free
 13719  005928  5162               	movf	?_atoi& (0+255),w,b
 13720  00592A  0102               	movlb	2	; () banked
 13721  00592C  6FB7               	movwf	doModeVerbose@count& (0+255),b
 13722                           
 13723                           ; BSR set to: 2
 13724                           ;main.c: 883: if (0 == count) count = 1;
 13725  00592E  67B7               	tstfsz	doModeVerbose@count& (0+255),b
 13726  005930  D002               	goto	l593
 13727                           
 13728                           ; BSR set to: 2
 13729  005932  0E01               	movlw	1
 13730  005934  6FB7               	movwf	doModeVerbose@count& (0+255),b
 13731  005936                     l593:
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;main.c: 884: }
 13735                           ;main.c: 886: BOOL rv = 1;
 13736  005936  0E01               	movlw	1
 13737  005938  6FAF               	movwf	doModeVerbose@rv& (0+255),b
 13738                           
 13739                           ; BSR set to: 2
 13740                           ;main.c: 887: for ( i = 0; i < count; i++ ) {
 13741  00593A  6BBD               	clrf	doModeVerbose@i_1288& (0+255),b
 13742  00593C  D15E               	goto	l15927
 13743  00593E                     l15825:
 13744                           
 13745                           ; BSR set to: 2
 13746                           ;main.c: 889: if ( readRegisterExtended( nodeid,
 13747                           ;main.c: 890: page,
 13748                           ;main.c: 891: (reg + i) & 0xff,
 13749                           ;main.c: 892: rwtimeout,
 13750                           ;main.c: 893: &value ) ) {
 13751  00593E  0100               	movlb	0	; () banked
 13752  005940  C2BB  F0AF         	movff	doModeVerbose@page,?_readRegisterExtended
 13753  005944  6BB0               	clrf	(?_readRegisterExtended+1)& (0+255),b
 13754  005946  0102               	movlb	2	; () banked
 13755  005948  51BC               	movf	doModeVerbose@reg& (0+255),w,b
 13756  00594A  25BD               	addwf	doModeVerbose@i_1288& (0+255),w,b
 13757  00594C  0100               	movlb	0	; () banked
 13758  00594E  6FB1               	movwf	(?_readRegisterExtended+2)& (0+255),b
 13759  005950  C104  F0B2         	movff	_rwtimeout,?_readRegisterExtended+3
 13760  005954  6BB3               	clrf	(?_readRegisterExtended+4)& (0+255),b
 13761  005956  0E02               	movlw	high doModeVerbose@value
 13762  005958  6FB5               	movwf	(?_readRegisterExtended+6)& (0+255),b
 13763  00595A  0EC4               	movlw	low doModeVerbose@value
 13764  00595C  6FB4               	movwf	(?_readRegisterExtended+5)& (0+255),b
 13765  00595E  0102               	movlb	2	; () banked
 13766  005960  51B8               	movf	doModeVerbose@nodeid& (0+255),w,b
 13767  005962  EC6B  F011         	call	_readRegisterExtended
 13768  005966  0900               	iorlw	0
 13769  005968  E101 D0C7          	bz	l597
 13770                           
 13771                           ;main.c: 894: putsUSART((char *) "+OK - nodeid=");
 13772  00596C  0E7B               	movlw	high STR_56
 13773  00596E  6E21               	movwf	?_putsUSART+1,c
 13774  005970  0E19               	movlw	low STR_56
 13775  005972  6E20               	movwf	?_putsUSART,c
 13776  005974  EC03  F007         	call	_putsUSART	;wreg free
 13777                           
 13778                           ;main.c: 895: sprintf(wrkbuf, bHex ? "0x%02X - " : "%d - ", nodeid);
 13779  005978  0101               	movlb	1	; () banked
 13780  00597A  6700               	tstfsz	_bHex& (0+255),b
 13781  00597C  D005               	goto	l15833
 13782                           
 13783                           ; BSR set to: 1
 13784  00597E  0E7C               	movlw	high STR_58
 13785  005980  0102               	movlb	2	; () banked
 13786  005982  6F9C               	movwf	(_doModeVerbose$1307+1)& (0+255),b
 13787  005984  0E71               	movlw	low STR_58
 13788  005986  D004               	goto	L8
 13789  005988                     l15833:
 13790                           
 13791                           ; BSR set to: 1
 13792  005988  0E7B               	movlw	high STR_57
 13793  00598A  0102               	movlb	2	; () banked
 13794  00598C  6F9C               	movwf	(_doModeVerbose$1307+1)& (0+255),b
 13795  00598E  0E6B               	movlw	low STR_57
 13796  005990                     L8:
 13797  005990  6F9B               	movwf	_doModeVerbose$1307& (0+255),b
 13798                           
 13799                           ; BSR set to: 2
 13800  005992  0E01               	movlw	high _wrkbuf
 13801  005994  0100               	movlb	0	; () banked
 13802  005996  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 13803  005998  0E55               	movlw	low _wrkbuf
 13804  00599A  6F6D               	movwf	?_sprintf& (0+255),b
 13805  00599C  C29B  F06F         	movff	_doModeVerbose$1307,?_sprintf+2
 13806  0059A0  C29C  F070         	movff	_doModeVerbose$1307+1,?_sprintf+3
 13807  0059A4  C2B8  F071         	movff	doModeVerbose@nodeid,?_sprintf+4
 13808  0059A8  6B72               	clrf	(?_sprintf+5)& (0+255),b
 13809  0059AA  EC4E  F025         	call	_sprintf	;wreg free
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;main.c: 896: putsUSART(wrkbuf);
 13813  0059AE  0101               	movlb	1	; () banked
 13814  0059B0  0E01               	movlw	high _wrkbuf
 13815  0059B2  6E21               	movwf	?_putsUSART+1,c
 13816  0059B4  0E55               	movlw	low _wrkbuf
 13817  0059B6  6E20               	movwf	?_putsUSART,c
 13818  0059B8  EC03  F007         	call	_putsUSART	;wreg free
 13819                           
 13820                           ;main.c: 897: putsUSART((char *) "Value for reg ");
 13821  0059BC  0E7A               	movlw	high STR_59
 13822  0059BE  6E21               	movwf	?_putsUSART+1,c
 13823  0059C0  0EFC               	movlw	low STR_59
 13824  0059C2  6E20               	movwf	?_putsUSART,c
 13825  0059C4  EC03  F007         	call	_putsUSART	;wreg free
 13826                           
 13827                           ;main.c: 898: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", page);
 13828  0059C8  0101               	movlb	1	; () banked
 13829  0059CA  6700               	tstfsz	_bHex& (0+255),b
 13830  0059CC  D005               	goto	l15845
 13831                           
 13832                           ; BSR set to: 1
 13833  0059CE  0E7C               	movlw	high STR_61
 13834  0059D0  0102               	movlb	2	; () banked
 13835  0059D2  6F9E               	movwf	(_doModeVerbose$1312+1)& (0+255),b
 13836  0059D4  0EEE               	movlw	low STR_61
 13837  0059D6  D004               	goto	L9
 13838  0059D8                     l15845:
 13839                           
 13840                           ; BSR set to: 1
 13841  0059D8  0E7C               	movlw	high STR_60
 13842  0059DA  0102               	movlb	2	; () banked
 13843  0059DC  6F9E               	movwf	(_doModeVerbose$1312+1)& (0+255),b
 13844  0059DE  0E50               	movlw	low STR_60
 13845  0059E0                     L9:
 13846  0059E0  6F9D               	movwf	_doModeVerbose$1312& (0+255),b
 13847                           
 13848                           ; BSR set to: 2
 13849  0059E2  0E01               	movlw	high _wrkbuf
 13850  0059E4  0100               	movlb	0	; () banked
 13851  0059E6  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 13852  0059E8  0E55               	movlw	low _wrkbuf
 13853  0059EA  6F6D               	movwf	?_sprintf& (0+255),b
 13854  0059EC  C29D  F06F         	movff	_doModeVerbose$1312,?_sprintf+2
 13855  0059F0  C29E  F070         	movff	_doModeVerbose$1312+1,?_sprintf+3
 13856  0059F4  C2BB  F071         	movff	doModeVerbose@page,?_sprintf+4
 13857  0059F8  6B72               	clrf	(?_sprintf+5)& (0+255),b
 13858  0059FA  EC4E  F025         	call	_sprintf	;wreg free
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;main.c: 899: putsUSART(wrkbuf);
 13862  0059FE  0101               	movlb	1	; () banked
 13863  005A00  0E01               	movlw	high _wrkbuf
 13864  005A02  6E21               	movwf	?_putsUSART+1,c
 13865  005A04  0E55               	movlw	low _wrkbuf
 13866  005A06  6E20               	movwf	?_putsUSART,c
 13867  005A08  EC03  F007         	call	_putsUSART	;wreg free
 13868                           
 13869                           ;main.c: 900: WriteUSART(':');
 13870  005A0C  0E3A               	movlw	58
 13871  005A0E  EC77  F004         	call	_WriteUSART
 13872  005A12                     l606:
 13873  005A12  A2AC               	btfss	4012,1,c	;volatile
 13874  005A14  D7FE               	goto	l606
 13875                           
 13876                           ;main.c: 902: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", (reg + i) & 0xff);
 13877  005A16  0101               	movlb	1	; () banked
 13878  005A18  6700               	tstfsz	_bHex& (0+255),b
 13879  005A1A  D005               	goto	l15855
 13880                           
 13881                           ; BSR set to: 1
 13882  005A1C  0E7C               	movlw	high STR_61
 13883  005A1E  0102               	movlb	2	; () banked
 13884  005A20  6FA0               	movwf	(_doModeVerbose$1316+1)& (0+255),b
 13885  005A22  0EEE               	movlw	low STR_61
 13886  005A24  D004               	goto	L10
 13887  005A26                     l15855:
 13888                           
 13889                           ; BSR set to: 1
 13890  005A26  0E7C               	movlw	high STR_60
 13891  005A28  0102               	movlb	2	; () banked
 13892  005A2A  6FA0               	movwf	(_doModeVerbose$1316+1)& (0+255),b
 13893  005A2C  0E50               	movlw	low STR_60
 13894  005A2E                     L10:
 13895  005A2E  6F9F               	movwf	_doModeVerbose$1316& (0+255),b
 13896                           
 13897                           ; BSR set to: 2
 13898  005A30  0E01               	movlw	high _wrkbuf
 13899  005A32  0100               	movlb	0	; () banked
 13900  005A34  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 13901  005A36  0E55               	movlw	low _wrkbuf
 13902  005A38  6F6D               	movwf	?_sprintf& (0+255),b
 13903  005A3A  C29F  F06F         	movff	_doModeVerbose$1316,?_sprintf+2
 13904  005A3E  C2A0  F070         	movff	_doModeVerbose$1316+1,?_sprintf+3
 13905  005A42  EC0C  F035         	call	PL46	;call to abstracted procedure
 13906  005A46  EC4E  F025         	call	_sprintf	;wreg free
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;main.c: 903: putsUSART(wrkbuf);
 13910  005A4A  0101               	movlb	1	; () banked
 13911  005A4C  0E01               	movlw	high _wrkbuf
 13912  005A4E  6E21               	movwf	?_putsUSART+1,c
 13913  005A50  0E55               	movlw	low _wrkbuf
 13914  005A52  6E20               	movwf	?_putsUSART,c
 13915  005A54  EC03  F007         	call	_putsUSART	;wreg free
 13916                           
 13917                           ;main.c: 904: putsUSART((char *) " = ");
 13918  005A58  0E7B               	movlw	high (STR_288+4)
 13919  005A5A  6E21               	movwf	?_putsUSART+1,c
 13920  005A5C  0EDD               	movlw	low (STR_288+4)
 13921  005A5E  6E20               	movwf	?_putsUSART,c
 13922  005A60  EC03  F007         	call	_putsUSART	;wreg free
 13923                           
 13924                           ;main.c: 905: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", value);
 13925  005A64  0101               	movlb	1	; () banked
 13926  005A66  6700               	tstfsz	_bHex& (0+255),b
 13927  005A68  D005               	goto	l15867
 13928                           
 13929                           ; BSR set to: 1
 13930  005A6A  0E7C               	movlw	high STR_61
 13931  005A6C  0102               	movlb	2	; () banked
 13932  005A6E  6FA2               	movwf	(_doModeVerbose$1321+1)& (0+255),b
 13933  005A70  0EEE               	movlw	low STR_61
 13934  005A72  D004               	goto	L11
 13935  005A74                     l15867:
 13936                           
 13937                           ; BSR set to: 1
 13938  005A74  0E7C               	movlw	high STR_60
 13939  005A76  0102               	movlb	2	; () banked
 13940  005A78  6FA2               	movwf	(_doModeVerbose$1321+1)& (0+255),b
 13941  005A7A  0E50               	movlw	low STR_60
 13942  005A7C                     L11:
 13943  005A7C  6FA1               	movwf	_doModeVerbose$1321& (0+255),b
 13944                           
 13945                           ; BSR set to: 2
 13946  005A7E  0E01               	movlw	high _wrkbuf
 13947  005A80  0100               	movlb	0	; () banked
 13948  005A82  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 13949  005A84  0E55               	movlw	low _wrkbuf
 13950  005A86  6F6D               	movwf	?_sprintf& (0+255),b
 13951  005A88  C2A1  F06F         	movff	_doModeVerbose$1321,?_sprintf+2
 13952  005A8C  C2A2  F070         	movff	_doModeVerbose$1321+1,?_sprintf+3
 13953  005A90  C2C4  F071         	movff	doModeVerbose@value,?_sprintf+4
 13954  005A94  6B72               	clrf	(?_sprintf+5)& (0+255),b
 13955  005A96  EC4E  F025         	call	_sprintf	;wreg free
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;main.c: 906: putsUSART(wrkbuf);
 13959  005A9A  0101               	movlb	1	; () banked
 13960  005A9C  0E01               	movlw	high _wrkbuf
 13961  005A9E  6E21               	movwf	?_putsUSART+1,c
 13962  005AA0  0E55               	movlw	low _wrkbuf
 13963  005AA2  6E20               	movwf	?_putsUSART,c
 13964  005AA4  EC03  F007         	call	_putsUSART	;wreg free
 13965  005AA8                     l617:
 13966  005AA8  A2AC               	btfss	4012,1,c	;volatile
 13967  005AAA  D7FE               	goto	l617
 13968                           
 13969                           ;main.c: 908: putsUSART((const char *)"\t\'");
 13970  005AAC  0E7C               	movlw	high STR_67
 13971  005AAE  6E21               	movwf	?_putsUSART+1,c
 13972  005AB0  0EE2               	movlw	low STR_67
 13973  005AB2  6E20               	movwf	?_putsUSART,c
 13974  005AB4  EC03  F007         	call	_putsUSART	;wreg free
 13975                           
 13976                           ;main.c: 909: if ((value > 32) && (value < 127)) {
 13977  005AB8  0E20               	movlw	32
 13978  005ABA  0102               	movlb	2	; () banked
 13979  005ABC  65C4               	cpfsgt	doModeVerbose@value& (0+255),b
 13980  005ABE  D007               	goto	l15881
 13981                           
 13982                           ; BSR set to: 2
 13983  005AC0  0E7F               	movlw	127
 13984  005AC2  61C4               	cpfslt	doModeVerbose@value& (0+255),b
 13985  005AC4  D004               	goto	l15881
 13986                           
 13987                           ; BSR set to: 2
 13988                           ;main.c: 910: WriteUSART(value);
 13989  005AC6  51C4               	movf	doModeVerbose@value& (0+255),w,b
 13990  005AC8  EC77  F004         	call	_WriteUSART
 13991                           
 13992                           ;main.c: 911: }
 13993  005ACC  D003               	goto	l622
 13994  005ACE                     l15881:
 13995                           
 13996                           ; BSR set to: 2
 13997                           ;main.c: 912: else {
 13998                           ;main.c: 913: WriteUSART('.');
 13999  005ACE  0E2E               	movlw	46
 14000  005AD0  EC77  F004         	call	_WriteUSART
 14001  005AD4                     l622:
 14002  005AD4  A2AC               	btfss	4012,1,c	;volatile
 14003  005AD6  D7FE               	goto	l622
 14004                           
 14005                           ;main.c: 916: putsUSART((const char *)"\' \t");
 14006  005AD8  0E7C               	movlw	high STR_68
 14007  005ADA  6E21               	movwf	?_putsUSART+1,c
 14008  005ADC  0EC6               	movlw	low STR_68
 14009  005ADE  6E20               	movwf	?_putsUSART,c
 14010  005AE0  EC03  F007         	call	_putsUSART	;wreg free
 14011                           
 14012                           ;main.c: 917: printBinary(value);
 14013  005AE4  0102               	movlb	2	; () banked
 14014  005AE6  51C4               	movf	doModeVerbose@value& (0+255),w,b
 14015  005AE8  ECBB  F006         	call	_printBinary
 14016                           
 14017                           ;main.c: 918: putsUSART((char *) "\r\n");
 14018  005AEC  0E6F               	movlw	high (STR_240+51)
 14019  005AEE  6E21               	movwf	?_putsUSART+1,c
 14020  005AF0  0EF8               	movlw	low (STR_240+51)
 14021  005AF2  6E20               	movwf	?_putsUSART,c
 14022  005AF4  EC03  F007         	call	_putsUSART	;wreg free
 14023                           
 14024                           ;main.c: 919: }
 14025  005AF8  D07E               	goto	l15925
 14026  005AFA                     l597:
 14027                           
 14028                           ;main.c: 920: else {
 14029                           ;main.c: 921: rv = 0;
 14030  005AFA  0102               	movlb	2	; () banked
 14031  005AFC  6BAF               	clrf	doModeVerbose@rv& (0+255),b
 14032                           
 14033                           ; BSR set to: 2
 14034                           ;main.c: 922: putsUSART((char *) "-ERROR - nodeid=");
 14035  005AFE  0E7A               	movlw	high STR_70
 14036  005B00  6E21               	movwf	?_putsUSART+1,c
 14037  005B02  0EEB               	movlw	low STR_70
 14038  005B04  6E20               	movwf	?_putsUSART,c
 14039  005B06  EC03  F007         	call	_putsUSART	;wreg free
 14040                           
 14041                           ;main.c: 923: sprintf(wrkbuf, bHex ? "0x%02X - " : "%d - ", nodeid);
 14042  005B0A  0101               	movlb	1	; () banked
 14043  005B0C  6700               	tstfsz	_bHex& (0+255),b
 14044  005B0E  D005               	goto	l15895
 14045                           
 14046                           ; BSR set to: 1
 14047  005B10  0E7C               	movlw	high STR_58
 14048  005B12  0102               	movlb	2	; () banked
 14049  005B14  6FA4               	movwf	(_doModeVerbose$1329+1)& (0+255),b
 14050  005B16  0E71               	movlw	low STR_58
 14051  005B18  D004               	goto	L12
 14052  005B1A                     l15895:
 14053                           
 14054                           ; BSR set to: 1
 14055  005B1A  0E7B               	movlw	high STR_57
 14056  005B1C  0102               	movlb	2	; () banked
 14057  005B1E  6FA4               	movwf	(_doModeVerbose$1329+1)& (0+255),b
 14058  005B20  0E6B               	movlw	low STR_57
 14059  005B22                     L12:
 14060  005B22  6FA3               	movwf	_doModeVerbose$1329& (0+255),b
 14061                           
 14062                           ; BSR set to: 2
 14063  005B24  0E01               	movlw	high _wrkbuf
 14064  005B26  0100               	movlb	0	; () banked
 14065  005B28  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14066  005B2A  0E55               	movlw	low _wrkbuf
 14067  005B2C  6F6D               	movwf	?_sprintf& (0+255),b
 14068  005B2E  C2A3  F06F         	movff	_doModeVerbose$1329,?_sprintf+2
 14069  005B32  C2A4  F070         	movff	_doModeVerbose$1329+1,?_sprintf+3
 14070  005B36  C2B8  F071         	movff	doModeVerbose@nodeid,?_sprintf+4
 14071  005B3A  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14072  005B3C  EC4E  F025         	call	_sprintf	;wreg free
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;main.c: 924: putsUSART(wrkbuf);
 14076  005B40  0101               	movlb	1	; () banked
 14077  005B42  0E01               	movlw	high _wrkbuf
 14078  005B44  6E21               	movwf	?_putsUSART+1,c
 14079  005B46  0E55               	movlw	low _wrkbuf
 14080  005B48  6E20               	movwf	?_putsUSART,c
 14081  005B4A  EC03  F007         	call	_putsUSART	;wreg free
 14082                           
 14083                           ;main.c: 925: putsUSART((char *) "Unable to read register ");
 14084  005B4E  0E78               	movlw	high STR_73
 14085  005B50  6E21               	movwf	?_putsUSART+1,c
 14086  005B52  0E1B               	movlw	low STR_73
 14087  005B54  6E20               	movwf	?_putsUSART,c
 14088  005B56  EC03  F007         	call	_putsUSART	;wreg free
 14089  005B5A                     l630:
 14090  005B5A  A2AC               	btfss	4012,1,c	;volatile
 14091  005B5C  D7FE               	goto	l630
 14092                           
 14093                           ;main.c: 927: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", page);
 14094  005B5E  0101               	movlb	1	; () banked
 14095  005B60  6700               	tstfsz	_bHex& (0+255),b
 14096  005B62  D005               	goto	l15905
 14097                           
 14098                           ; BSR set to: 1
 14099  005B64  0E7C               	movlw	high STR_61
 14100  005B66  0102               	movlb	2	; () banked
 14101  005B68  6FA6               	movwf	(_doModeVerbose$1334+1)& (0+255),b
 14102  005B6A  0EEE               	movlw	low STR_61
 14103  005B6C  D004               	goto	L13
 14104  005B6E                     l15905:
 14105                           
 14106                           ; BSR set to: 1
 14107  005B6E  0E7C               	movlw	high STR_60
 14108  005B70  0102               	movlb	2	; () banked
 14109  005B72  6FA6               	movwf	(_doModeVerbose$1334+1)& (0+255),b
 14110  005B74  0E50               	movlw	low STR_60
 14111  005B76                     L13:
 14112  005B76  6FA5               	movwf	_doModeVerbose$1334& (0+255),b
 14113                           
 14114                           ; BSR set to: 2
 14115  005B78  0E01               	movlw	high _wrkbuf
 14116  005B7A  0100               	movlb	0	; () banked
 14117  005B7C  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14118  005B7E  0E55               	movlw	low _wrkbuf
 14119  005B80  6F6D               	movwf	?_sprintf& (0+255),b
 14120  005B82  C2A5  F06F         	movff	_doModeVerbose$1334,?_sprintf+2
 14121  005B86  C2A6  F070         	movff	_doModeVerbose$1334+1,?_sprintf+3
 14122  005B8A  C2BB  F071         	movff	doModeVerbose@page,?_sprintf+4
 14123  005B8E  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14124  005B90  EC4E  F025         	call	_sprintf	;wreg free
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;main.c: 928: putsUSART(wrkbuf);
 14128  005B94  0101               	movlb	1	; () banked
 14129  005B96  0E01               	movlw	high _wrkbuf
 14130  005B98  6E21               	movwf	?_putsUSART+1,c
 14131  005B9A  0E55               	movlw	low _wrkbuf
 14132  005B9C  6E20               	movwf	?_putsUSART,c
 14133  005B9E  EC03  F007         	call	_putsUSART	;wreg free
 14134                           
 14135                           ;main.c: 929: WriteUSART(':');
 14136  005BA2  0E3A               	movlw	58
 14137  005BA4  EC77  F004         	call	_WriteUSART
 14138                           
 14139                           ;main.c: 930: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", (reg + i) & 0xff);
 14140  005BA8  0101               	movlb	1	; () banked
 14141  005BAA  6700               	tstfsz	_bHex& (0+255),b
 14142  005BAC  D005               	goto	l15917
 14143                           
 14144                           ; BSR set to: 1
 14145  005BAE  0E7C               	movlw	high STR_61
 14146  005BB0  0102               	movlb	2	; () banked
 14147  005BB2  6FA8               	movwf	(_doModeVerbose$1338+1)& (0+255),b
 14148  005BB4  0EEE               	movlw	low STR_61
 14149  005BB6  D004               	goto	L14
 14150  005BB8                     l15917:
 14151                           
 14152                           ; BSR set to: 1
 14153  005BB8  0E7C               	movlw	high STR_60
 14154  005BBA  0102               	movlb	2	; () banked
 14155  005BBC  6FA8               	movwf	(_doModeVerbose$1338+1)& (0+255),b
 14156  005BBE  0E50               	movlw	low STR_60
 14157  005BC0                     L14:
 14158  005BC0  6FA7               	movwf	_doModeVerbose$1338& (0+255),b
 14159                           
 14160                           ; BSR set to: 2
 14161  005BC2  0E01               	movlw	high _wrkbuf
 14162  005BC4  0100               	movlb	0	; () banked
 14163  005BC6  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14164  005BC8  0E55               	movlw	low _wrkbuf
 14165  005BCA  6F6D               	movwf	?_sprintf& (0+255),b
 14166  005BCC  C2A7  F06F         	movff	_doModeVerbose$1338,?_sprintf+2
 14167  005BD0  C2A8  F070         	movff	_doModeVerbose$1338+1,?_sprintf+3
 14168  005BD4  EC0C  F035         	call	PL46	;call to abstracted procedure
 14169  005BD8  EC4E  F025         	call	_sprintf	;wreg free
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;main.c: 931: putsUSART(wrkbuf);
 14173  005BDC  0101               	movlb	1	; () banked
 14174  005BDE  0E01               	movlw	high _wrkbuf
 14175  005BE0  6E21               	movwf	?_putsUSART+1,c
 14176  005BE2  0E55               	movlw	low _wrkbuf
 14177  005BE4  6E20               	movwf	?_putsUSART,c
 14178  005BE6  EC03  F007         	call	_putsUSART	;wreg free
 14179                           
 14180                           ;main.c: 933: putsUSART((char *) "\r\n");
 14181  005BEA  0E6F               	movlw	high (STR_240+51)
 14182  005BEC  6E21               	movwf	?_putsUSART+1,c
 14183  005BEE  0EF8               	movlw	low (STR_240+51)
 14184  005BF0  6E20               	movwf	?_putsUSART,c
 14185  005BF2  EC03  F007         	call	_putsUSART	;wreg free
 14186  005BF6                     l15925:
 14187  005BF6  0102               	movlb	2	; () banked
 14188  005BF8  2BBD               	incf	doModeVerbose@i_1288& (0+255),f,b
 14189  005BFA                     l15927:
 14190                           
 14191                           ; BSR set to: 2
 14192  005BFA  51B7               	movf	doModeVerbose@count& (0+255),w,b
 14193  005BFC  5DBD               	subwf	doModeVerbose@i_1288& (0+255),w,b
 14194  005BFE  E201 D69E          	bnc	l15825
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;main.c: 934: }
 14198                           ;main.c: 935: }
 14199                           ;main.c: 937: if (rv) {
 14200  005C02  51AF               	movf	doModeVerbose@rv& (0+255),w,b
 14201  005C04  E008               	bz	l15933
 14202                           
 14203                           ; BSR set to: 2
 14204                           ;main.c: 938: putsUSART((char *) "+OK\r\n");
 14205  005C06  0E7C               	movlw	high STR_9
 14206  005C08  6E21               	movwf	?_putsUSART+1,c
 14207  005C0A  0E6B               	movlw	low STR_9
 14208  005C0C  6E20               	movwf	?_putsUSART,c
 14209  005C0E  EC03  F007         	call	_putsUSART	;wreg free
 14210                           
 14211                           ;main.c: 939: }
 14212  005C12  EF8C  F034         	goto	l16499
 14213  005C16                     l15933:
 14214                           
 14215                           ; BSR set to: 2
 14216                           ;main.c: 940: else {
 14217                           ;main.c: 941: putsUSART((char *) "-ERROR - One or more register(s) could not be read.\r\
      +                          n");
 14218  005C16  0E6F               	movlw	high STR_80
 14219  005C18  6E21               	movwf	?_putsUSART+1,c
 14220  005C1A  0EFB               	movlw	low STR_80
 14221  005C1C  6E20               	movwf	?_putsUSART,c
 14222  005C1E  EC03  F007         	call	_putsUSART	;wreg free
 14223  005C22  EF8C  F034         	goto	l16499
 14224  005C26                     l15935:
 14225                           
 14226                           ; BSR set to: 1
 14227                           ;main.c: 947: else if (cmdbuf == stristr(cmdbuf, "WREG")) {
 14228  005C26  0E01               	movlw	high _cmdbuf
 14229  005C28  0100               	movlb	0	; () banked
 14230  005C2A  6F67               	movwf	(?_stristr+1)& (0+255),b
 14231  005C2C  0E05               	movlw	low _cmdbuf
 14232  005C2E  6F66               	movwf	?_stristr& (0+255),b
 14233  005C30  0E7C               	movlw	high STR_81
 14234  005C32  6F69               	movwf	(?_stristr+3)& (0+255),b
 14235  005C34  0E9E               	movlw	low STR_81
 14236  005C36  6F68               	movwf	(?_stristr+2)& (0+255),b
 14237  005C38  EC8D  F009         	call	_stristr	;wreg free
 14238  005C3C  EC98  F034         	call	PL2	;call to abstracted procedure
 14239  005C40  E104               	bnz	u19875
 14240  005C42  0100               	movlb	0	; () banked
 14241  005C44  5166               	movf	?_stristr& (0+255),w,b
 14242  005C46  0101               	movlb	1	; () banked
 14243  005C48  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 14244  005C4A                     u19875:
 14245  005C4A  E001 D0FE          	bnz	l16017
 14246                           
 14247                           ; BSR set to: 1
 14248                           ;main.c: 949: uint8_t nodeid;
 14249                           ;main.c: 950: uint8_t page = 0;
 14250  005C4E  0102               	movlb	2	; () banked
 14251  005C50  6BB0               	clrf	doModeVerbose@page_1344& (0+255),b
 14252                           
 14253                           ; BSR set to: 2
 14254                           ;main.c: 951: uint8_t reg;
 14255                           ;main.c: 952: uint8_t value;
 14256                           ;main.c: 954: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 14257  005C52  506F               	movf	3951,w,c	;volatile
 14258  005C54  0BE0               	andlw	224
 14259  005C56  E007               	bz	l15949
 14260                           
 14261                           ; BSR set to: 2
 14262                           ;main.c: 955: putsUSART( (const char *)"-ERROR - Command only works if interface is open
      +                          .\r\n" );
 14263  005C58  0E70               	movlw	high STR_50
 14264  005C5A  6E21               	movwf	?_putsUSART+1,c
 14265  005C5C  0E31               	movlw	low STR_50
 14266  005C5E  6E20               	movwf	?_putsUSART,c
 14267  005C60  EC03  F007         	call	_putsUSART	;wreg free
 14268  005C64  D5DA               	goto	l15777
 14269  005C66                     l15949:
 14270                           
 14271                           ; BSR set to: 2
 14272                           ;main.c: 959: }
 14273                           ;main.c: 961: strcpy(cmdbuf, cmdbuf + 5);
 14274  005C66  0101               	movlb	1	; () banked
 14275  005C68  ECB1  F034         	call	PL8	;call to abstracted procedure
 14276  005C6C  ECFE  F004         	call	_strcpy	;wreg free
 14277                           
 14278                           ; BSR set to: 1
 14279                           ;main.c: 962: char *p = strtok(cmdbuf, " ");
 14280  005C70  0E01               	movlw	high _cmdbuf
 14281  005C72  EC03  F035         	call	PL44	;call to abstracted procedure
 14282  005C76  ECDC  F00A         	call	_strtok	;wreg free
 14283  005C7A  C064  F2C7         	movff	?_strtok,doModeVerbose@p_1348
 14284  005C7E  C065  F2C8         	movff	?_strtok+1,doModeVerbose@p_1348+1
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;main.c: 963: if ((0) != p) {
 14288  005C82  0102               	movlb	2	; () banked
 14289  005C84  51C8               	movf	(doModeVerbose@p_1348+1)& (0+255),w,b
 14290  005C86  11C7               	iorwf	doModeVerbose@p_1348& (0+255),w,b
 14291  005C88  E00A               	bz	l15957
 14292                           
 14293                           ; BSR set to: 2
 14294                           ;main.c: 964: nodeid = atoi(p);
 14295  005C8A  C2C7  F062         	movff	doModeVerbose@p_1348,?_atoi
 14296  005C8E  C2C8  F063         	movff	doModeVerbose@p_1348+1,?_atoi+1
 14297  005C92  EC6C  F012         	call	_atoi	;wreg free
 14298  005C96  5162               	movf	?_atoi& (0+255),w,b
 14299  005C98  0102               	movlb	2	; () banked
 14300  005C9A  6FB9               	movwf	doModeVerbose@nodeid_1343& (0+255),b
 14301                           
 14302                           ;main.c: 965: }
 14303  005C9C  D007               	goto	l15965
 14304  005C9E                     l15957:
 14305                           
 14306                           ; BSR set to: 2
 14307                           ;main.c: 966: else {
 14308                           ;main.c: 967: putsUSART((char *) "-ERROR - Needs nodeid\r\n");
 14309  005C9E  0E78               	movlw	high STR_52
 14310  005CA0  6E21               	movwf	?_putsUSART+1,c
 14311  005CA2  0E64               	movlw	low STR_52
 14312  005CA4  6E20               	movwf	?_putsUSART,c
 14313  005CA6  EC03  F007         	call	_putsUSART	;wreg free
 14314  005CAA  D5B7               	goto	l15777
 14315  005CAC                     l15965:
 14316                           
 14317                           ; BSR set to: 2
 14318                           ;main.c: 971: }
 14319                           ;main.c: 973: if ( (0) != ( p = strtok((0), " ") ) ) {
 14320  005CAC  ECF1  F034         	call	PL32	;call to abstracted procedure
 14321  005CB0  ECDC  F00A         	call	_strtok	;wreg free
 14322  005CB4  C064  F2C7         	movff	?_strtok,doModeVerbose@p_1348
 14323  005CB8  C065  F2C8         	movff	?_strtok+1,doModeVerbose@p_1348+1
 14324  005CBC  0102               	movlb	2	; () banked
 14325  005CBE  51C8               	movf	(doModeVerbose@p_1348+1)& (0+255),w,b
 14326  005CC0  11C7               	iorwf	doModeVerbose@p_1348& (0+255),w,b
 14327  005CC2  E033               	bz	l15973
 14328                           
 14329                           ; BSR set to: 2
 14330                           ;main.c: 975: char *preg;
 14331                           ;main.c: 976: if (preg = strchr(p, ':')) {
 14332  005CC4  C2C7  F01F         	movff	doModeVerbose@p_1348,?_strchr
 14333  005CC8  C2C8  F020         	movff	doModeVerbose@p_1348+1,?_strchr+1
 14334  005CCC  6A22               	clrf	?_strchr+3,c
 14335  005CCE  0E3A               	movlw	58
 14336  005CD0  6E21               	movwf	?_strchr+2,c
 14337  005CD2  EC86  F007         	call	_strchr	;wreg free
 14338  005CD6  C01F  F28E         	movff	?_strchr,doModeVerbose@preg_1352
 14339  005CDA  C020  F28F         	movff	?_strchr+1,doModeVerbose@preg_1352+1
 14340  005CDE  0102               	movlb	2	; () banked
 14341  005CE0  518F               	movf	(doModeVerbose@preg_1352+1)& (0+255),w,b
 14342  005CE2  118E               	iorwf	doModeVerbose@preg_1352& (0+255),w,b
 14343  005CE4  E018               	bz	l15971
 14344                           
 14345                           ; BSR set to: 2
 14346                           ;main.c: 977: page = atoi(p);
 14347  005CE6  C2C7  F062         	movff	doModeVerbose@p_1348,?_atoi
 14348  005CEA  C2C8  F063         	movff	doModeVerbose@p_1348+1,?_atoi+1
 14349  005CEE  EC6C  F012         	call	_atoi	;wreg free
 14350  005CF2  5162               	movf	?_atoi& (0+255),w,b
 14351  005CF4  0102               	movlb	2	; () banked
 14352  005CF6  6FB0               	movwf	doModeVerbose@page_1344& (0+255),b
 14353                           
 14354                           ;main.c: 978: reg = atoi(preg + 1);
 14355  005CF8  298E               	incf	doModeVerbose@preg_1352& (0+255),w,b
 14356  005CFA  0101               	movlb	1	; () banked
 14357  005CFC  6FB9               	movwf	??_doModeVerbose& (0+255),b
 14358  005CFE  0E00               	movlw	0
 14359  005D00  0102               	movlb	2	; () banked
 14360  005D02  218F               	addwfc	(doModeVerbose@preg_1352+1)& (0+255),w,b
 14361  005D04  0101               	movlb	1	; () banked
 14362  005D06  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 14363  005D08  C1B9  F062         	movff	??_doModeVerbose,?_atoi
 14364  005D0C  C1BA  F063         	movff	??_doModeVerbose+1,?_atoi+1
 14365  005D10  EC6C  F012         	call	_atoi	;wreg free
 14366  005D14  D006               	goto	L15
 14367  005D16                     l15971:
 14368                           
 14369                           ; BSR set to: 2
 14370                           ;main.c: 980: else {
 14371                           ;main.c: 981: reg = atoi(p);
 14372  005D16  C2C7  F062         	movff	doModeVerbose@p_1348,?_atoi
 14373  005D1A  C2C8  F063         	movff	doModeVerbose@p_1348+1,?_atoi+1
 14374  005D1E  EC6C  F012         	call	_atoi	;wreg free
 14375  005D22                     L15:
 14376  005D22  5162               	movf	?_atoi& (0+255),w,b
 14377  005D24  0102               	movlb	2	; () banked
 14378  005D26  6FB1               	movwf	doModeVerbose@reg_1345& (0+255),b
 14379  005D28  D007               	goto	l15981
 14380  005D2A                     l15973:
 14381                           
 14382                           ; BSR set to: 2
 14383                           ;main.c: 985: else {
 14384                           ;main.c: 986: putsUSART((char *) "-ERROR - Needs [page:]register\r\n");
 14385  005D2A  0E76               	movlw	high STR_54
 14386  005D2C  6E21               	movwf	?_putsUSART+1,c
 14387  005D2E  0EAB               	movlw	low STR_54
 14388  005D30  6E20               	movwf	?_putsUSART,c
 14389  005D32  EC03  F007         	call	_putsUSART	;wreg free
 14390  005D36  D571               	goto	l15777
 14391  005D38                     l15981:
 14392                           
 14393                           ; BSR set to: 2
 14394                           ;main.c: 990: }
 14395                           ;main.c: 993: if ((0) != (p = strtok((0), " "))) {
 14396  005D38  ECF1  F034         	call	PL32	;call to abstracted procedure
 14397  005D3C  ECDC  F00A         	call	_strtok	;wreg free
 14398  005D40  C064  F2C7         	movff	?_strtok,doModeVerbose@p_1348
 14399  005D44  C065  F2C8         	movff	?_strtok+1,doModeVerbose@p_1348+1
 14400  005D48  0102               	movlb	2	; () banked
 14401  005D4A  51C8               	movf	(doModeVerbose@p_1348+1)& (0+255),w,b
 14402  005D4C  11C7               	iorwf	doModeVerbose@p_1348& (0+255),w,b
 14403  005D4E  E00A               	bz	l15985
 14404                           
 14405                           ; BSR set to: 2
 14406                           ;main.c: 994: value = atoi(p);
 14407  005D50  C2C7  F062         	movff	doModeVerbose@p_1348,?_atoi
 14408  005D54  C2C8  F063         	movff	doModeVerbose@p_1348+1,?_atoi+1
 14409  005D58  EC6C  F012         	call	_atoi	;wreg free
 14410  005D5C  5162               	movf	?_atoi& (0+255),w,b
 14411  005D5E  0102               	movlb	2	; () banked
 14412  005D60  6FB6               	movwf	doModeVerbose@value_1346& (0+255),b
 14413                           
 14414                           ;main.c: 995: }
 14415  005D62  D007               	goto	l15993
 14416  005D64                     l15985:
 14417                           
 14418                           ; BSR set to: 2
 14419                           ;main.c: 996: else {
 14420                           ;main.c: 997: putsUSART((char *) "-ERROR - Need a value\r\n");
 14421  005D64  0E78               	movlw	high STR_88
 14422  005D66  6E21               	movwf	?_putsUSART+1,c
 14423  005D68  0E94               	movlw	low STR_88
 14424  005D6A  6E20               	movwf	?_putsUSART,c
 14425  005D6C  EC03  F007         	call	_putsUSART	;wreg free
 14426  005D70  D554               	goto	l15777
 14427  005D72                     l15993:
 14428                           
 14429                           ; BSR set to: 2
 14430                           ;main.c: 1001: }
 14431                           ;main.c: 1003: if (writeRegisterExtended(nodeid,
 14432                           ;main.c: 1004: page,
 14433                           ;main.c: 1005: reg,
 14434                           ;main.c: 1006: rwtimeout,
 14435                           ;main.c: 1007: &value)) {
 14436  005D72  0100               	movlb	0	; () banked
 14437  005D74  C2B0  F0AF         	movff	doModeVerbose@page_1344,?_writeRegisterExtended
 14438  005D78  6BB0               	clrf	(?_writeRegisterExtended+1)& (0+255),b
 14439  005D7A  C2B1  F0B1         	movff	doModeVerbose@reg_1345,?_writeRegisterExtended+2
 14440  005D7E  C104  F0B2         	movff	_rwtimeout,?_writeRegisterExtended+3
 14441  005D82  6BB3               	clrf	(?_writeRegisterExtended+4)& (0+255),b
 14442  005D84  0E02               	movlw	high doModeVerbose@value_1346
 14443  005D86  6FB5               	movwf	(?_writeRegisterExtended+6)& (0+255),b
 14444  005D88  0EB6               	movlw	low doModeVerbose@value_1346
 14445  005D8A  6FB4               	movwf	(?_writeRegisterExtended+5)& (0+255),b
 14446  005D8C  0102               	movlb	2	; () banked
 14447  005D8E  51B9               	movf	doModeVerbose@nodeid_1343& (0+255),w,b
 14448  005D90  ECF0  F012         	call	_writeRegisterExtended
 14449  005D94  0900               	iorlw	0
 14450  005D96  E030               	bz	l16007
 14451                           
 14452                           ;main.c: 1008: putsUSART((char *) "+OK - Value written successfully for ");
 14453  005D98  0E75               	movlw	high STR_89
 14454  005D9A  6E21               	movwf	?_putsUSART+1,c
 14455  005D9C  0E04               	movlw	low STR_89
 14456  005D9E  6E20               	movwf	?_putsUSART,c
 14457  005DA0  EC03  F007         	call	_putsUSART	;wreg free
 14458                           
 14459                           ;main.c: 1009: putsUSART((char *) "nodeid=");
 14460  005DA4  0E7B               	movlw	high (STR_56+6)
 14461  005DA6  6E21               	movwf	?_putsUSART+1,c
 14462  005DA8  0E1F               	movlw	low (STR_56+6)
 14463  005DAA  6E20               	movwf	?_putsUSART,c
 14464  005DAC  EC03  F007         	call	_putsUSART	;wreg free
 14465                           
 14466                           ;main.c: 1010: sprintf(wrkbuf, bHex ? "0x%02X\n" : "%d\n", nodeid);
 14467  005DB0  0101               	movlb	1	; () banked
 14468  005DB2  6700               	tstfsz	_bHex& (0+255),b
 14469  005DB4  D005               	goto	l16001
 14470                           
 14471                           ; BSR set to: 1
 14472  005DB6  0E7C               	movlw	high STR_92
 14473  005DB8  0102               	movlb	2	; () banked
 14474  005DBA  6FAA               	movwf	(_doModeVerbose$1361+1)& (0+255),b
 14475  005DBC  0ECE               	movlw	low STR_92
 14476  005DBE  D004               	goto	L16
 14477  005DC0                     l16001:
 14478                           
 14479                           ; BSR set to: 1
 14480  005DC0  0E7B               	movlw	high STR_91
 14481  005DC2  0102               	movlb	2	; () banked
 14482  005DC4  6FAA               	movwf	(_doModeVerbose$1361+1)& (0+255),b
 14483  005DC6  0ED1               	movlw	low STR_91
 14484  005DC8                     L16:
 14485  005DC8  6FA9               	movwf	_doModeVerbose$1361& (0+255),b
 14486                           
 14487                           ; BSR set to: 2
 14488  005DCA  0E01               	movlw	high _wrkbuf
 14489  005DCC  0100               	movlb	0	; () banked
 14490  005DCE  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14491  005DD0  0E55               	movlw	low _wrkbuf
 14492  005DD2  6F6D               	movwf	?_sprintf& (0+255),b
 14493  005DD4  C2A9  F06F         	movff	_doModeVerbose$1361,?_sprintf+2
 14494  005DD8  C2AA  F070         	movff	_doModeVerbose$1361+1,?_sprintf+3
 14495  005DDC  C2B9  F071         	movff	doModeVerbose@nodeid_1343,?_sprintf+4
 14496  005DE0  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14497  005DE2  EC4E  F025         	call	_sprintf	;wreg free
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;main.c: 1011: putsUSART(wrkbuf);
 14501  005DE6  0101               	movlb	1	; () banked
 14502  005DE8  0E01               	movlw	high _wrkbuf
 14503  005DEA  6E21               	movwf	?_putsUSART+1,c
 14504  005DEC  0E55               	movlw	low _wrkbuf
 14505  005DEE  6E20               	movwf	?_putsUSART,c
 14506  005DF0  EC03  F007         	call	_putsUSART	;wreg free
 14507                           
 14508                           ;main.c: 1012: }
 14509  005DF4  EF8C  F034         	goto	l16499
 14510  005DF8                     l16007:
 14511                           
 14512                           ;main.c: 1013: else {
 14513                           ;main.c: 1014: putsUSART((char *) "-ERROR - Failed to write value for ");
 14514  005DF8  0E75               	movlw	high STR_93
 14515  005DFA  6E21               	movwf	?_putsUSART+1,c
 14516  005DFC  0EBD               	movlw	low STR_93
 14517  005DFE  6E20               	movwf	?_putsUSART,c
 14518  005E00  EC03  F007         	call	_putsUSART	;wreg free
 14519                           
 14520                           ;main.c: 1015: putsUSART((char *) "nodeid=");
 14521  005E04  0E7B               	movlw	high (STR_56+6)
 14522  005E06  6E21               	movwf	?_putsUSART+1,c
 14523  005E08  0E1F               	movlw	low (STR_56+6)
 14524  005E0A  6E20               	movwf	?_putsUSART,c
 14525  005E0C  EC03  F007         	call	_putsUSART	;wreg free
 14526                           
 14527                           ;main.c: 1016: sprintf(wrkbuf, bHex ? "0x%02X\n" : "%d\n", nodeid);
 14528  005E10  0101               	movlb	1	; () banked
 14529  005E12  6700               	tstfsz	_bHex& (0+255),b
 14530  005E14  D005               	goto	l16013
 14531                           
 14532                           ; BSR set to: 1
 14533  005E16  0E7C               	movlw	high STR_92
 14534  005E18  0102               	movlb	2	; () banked
 14535  005E1A  6FAC               	movwf	(_doModeVerbose$1367+1)& (0+255),b
 14536  005E1C  0ECE               	movlw	low STR_92
 14537  005E1E  D004               	goto	L17
 14538  005E20                     l16013:
 14539                           
 14540                           ; BSR set to: 1
 14541  005E20  0E7B               	movlw	high STR_91
 14542  005E22  0102               	movlb	2	; () banked
 14543  005E24  6FAC               	movwf	(_doModeVerbose$1367+1)& (0+255),b
 14544  005E26  0ED1               	movlw	low STR_91
 14545  005E28                     L17:
 14546  005E28  6FAB               	movwf	_doModeVerbose$1367& (0+255),b
 14547                           
 14548                           ; BSR set to: 2
 14549  005E2A  0E01               	movlw	high _wrkbuf
 14550  005E2C  0100               	movlb	0	; () banked
 14551  005E2E  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14552  005E30  0E55               	movlw	low _wrkbuf
 14553  005E32  6F6D               	movwf	?_sprintf& (0+255),b
 14554  005E34  C2AB  F06F         	movff	_doModeVerbose$1367,?_sprintf+2
 14555  005E38  C2AC  F070         	movff	_doModeVerbose$1367+1,?_sprintf+3
 14556  005E3C  C2B9  F071         	movff	doModeVerbose@nodeid_1343,?_sprintf+4
 14557  005E40  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14558  005E42  EC4E  F025         	call	_sprintf	;wreg free
 14559  005E46  EF8C  F034         	goto	l16499
 14560  005E4A                     l16017:
 14561                           
 14562                           ; BSR set to: 1
 14563                           ;main.c: 1022: else if (cmdbuf == stristr(cmdbuf, "INFO")) {
 14564  005E4A  0E01               	movlw	high _cmdbuf
 14565  005E4C  0100               	movlb	0	; () banked
 14566  005E4E  6F67               	movwf	(?_stristr+1)& (0+255),b
 14567  005E50  0E05               	movlw	low _cmdbuf
 14568  005E52  6F66               	movwf	?_stristr& (0+255),b
 14569  005E54  0E7C               	movlw	high STR_97
 14570  005E56  6F69               	movwf	(?_stristr+3)& (0+255),b
 14571  005E58  0EAD               	movlw	low STR_97
 14572  005E5A  6F68               	movwf	(?_stristr+2)& (0+255),b
 14573  005E5C  EC8D  F009         	call	_stristr	;wreg free
 14574  005E60  EC98  F034         	call	PL2	;call to abstracted procedure
 14575  005E64  E104               	bnz	u19965
 14576  005E66  0100               	movlb	0	; () banked
 14577  005E68  5166               	movf	?_stristr& (0+255),w,b
 14578  005E6A  0101               	movlb	1	; () banked
 14579  005E6C  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 14580  005E6E                     u19965:
 14581  005E6E  E173               	bnz	l16061
 14582                           
 14583                           ; BSR set to: 1
 14584                           ;main.c: 1024: uint8_t nodeid;
 14585                           ;main.c: 1025: uint8_t value;
 14586                           ;main.c: 1027: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 14587  005E70  506F               	movf	3951,w,c	;volatile
 14588  005E72  0BE0               	andlw	224
 14589  005E74  E007               	bz	l16029
 14590                           
 14591                           ; BSR set to: 1
 14592                           ;main.c: 1028: putsUSART( (const char *)"-ERROR - Command only works if interface is ope
      +                          n.\r\n" );
 14593  005E76  0E70               	movlw	high STR_50
 14594  005E78  6E21               	movwf	?_putsUSART+1,c
 14595  005E7A  0E31               	movlw	low STR_50
 14596  005E7C  6E20               	movwf	?_putsUSART,c
 14597  005E7E  EC03  F007         	call	_putsUSART	;wreg free
 14598  005E82  D4CB               	goto	l15777
 14599  005E84                     l16029:
 14600                           
 14601                           ; BSR set to: 1
 14602                           ;main.c: 1032: }
 14603                           ;main.c: 1034: strcpy(cmdbuf, cmdbuf + 5);
 14604  005E84  ECB1  F034         	call	PL8	;call to abstracted procedure
 14605  005E88  ECFE  F004         	call	_strcpy	;wreg free
 14606                           
 14607                           ; BSR set to: 1
 14608                           ;main.c: 1035: nodeid = atoi(cmdbuf);
 14609  005E8C  0E01               	movlw	high _cmdbuf
 14610  005E8E  0100               	movlb	0	; () banked
 14611  005E90  6F63               	movwf	(?_atoi+1)& (0+255),b
 14612  005E92  0E05               	movlw	low _cmdbuf
 14613  005E94  6F62               	movwf	?_atoi& (0+255),b
 14614  005E96  EC6C  F012         	call	_atoi	;wreg free
 14615  005E9A  5162               	movf	?_atoi& (0+255),w,b
 14616  005E9C  0102               	movlb	2	; () banked
 14617  005E9E  6FBE               	movwf	doModeVerbose@nodeid_1369& (0+255),b
 14618                           
 14619                           ; BSR set to: 2
 14620                           ;main.c: 1037: putsUSART((char *) "Info for node id = ");
 14621  005EA0  0E7A               	movlw	high STR_99
 14622  005EA2  6E21               	movwf	?_putsUSART+1,c
 14623  005EA4  0E36               	movlw	low STR_99
 14624  005EA6  6E20               	movwf	?_putsUSART,c
 14625  005EA8  EC03  F007         	call	_putsUSART	;wreg free
 14626                           
 14627                           ;main.c: 1038: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", nodeid);
 14628  005EAC  0101               	movlb	1	; () banked
 14629  005EAE  6700               	tstfsz	_bHex& (0+255),b
 14630  005EB0  D005               	goto	l16039
 14631                           
 14632                           ; BSR set to: 1
 14633  005EB2  0E7C               	movlw	high STR_61
 14634  005EB4  0102               	movlb	2	; () banked
 14635  005EB6  6FAE               	movwf	(_doModeVerbose$1376+1)& (0+255),b
 14636  005EB8  0EEE               	movlw	low STR_61
 14637  005EBA  D004               	goto	L18
 14638  005EBC                     l16039:
 14639                           
 14640                           ; BSR set to: 1
 14641  005EBC  0E7C               	movlw	high STR_60
 14642  005EBE  0102               	movlb	2	; () banked
 14643  005EC0  6FAE               	movwf	(_doModeVerbose$1376+1)& (0+255),b
 14644  005EC2  0E50               	movlw	low STR_60
 14645  005EC4                     L18:
 14646  005EC4  6FAD               	movwf	_doModeVerbose$1376& (0+255),b
 14647                           
 14648                           ; BSR set to: 2
 14649  005EC6  0E01               	movlw	high _wrkbuf
 14650  005EC8  0100               	movlb	0	; () banked
 14651  005ECA  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 14652  005ECC  0E55               	movlw	low _wrkbuf
 14653  005ECE  6F6D               	movwf	?_sprintf& (0+255),b
 14654  005ED0  C2AD  F06F         	movff	_doModeVerbose$1376,?_sprintf+2
 14655  005ED4  C2AE  F070         	movff	_doModeVerbose$1376+1,?_sprintf+3
 14656  005ED8  C2BE  F071         	movff	doModeVerbose@nodeid_1369,?_sprintf+4
 14657  005EDC  6B72               	clrf	(?_sprintf+5)& (0+255),b
 14658  005EDE  EC4E  F025         	call	_sprintf	;wreg free
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;main.c: 1039: putsUSART(wrkbuf);
 14662  005EE2  0101               	movlb	1	; () banked
 14663  005EE4  0E01               	movlw	high _wrkbuf
 14664  005EE6  6E21               	movwf	?_putsUSART+1,c
 14665  005EE8  0E55               	movlw	low _wrkbuf
 14666  005EEA  6E20               	movwf	?_putsUSART,c
 14667  005EEC  EC03  F007         	call	_putsUSART	;wreg free
 14668                           
 14669                           ;main.c: 1040: putsUSART((char *) "\r\n");
 14670  005EF0  0E6F               	movlw	high (STR_240+51)
 14671  005EF2  6E21               	movwf	?_putsUSART+1,c
 14672  005EF4  0EF8               	movlw	low (STR_240+51)
 14673  005EF6  6E20               	movwf	?_putsUSART,c
 14674  005EF8  EC03  F007         	call	_putsUSART	;wreg free
 14675                           
 14676                           ;main.c: 1042: if (!readRegisterExtended(nodeid,
 14677                           ;main.c: 1043: 0,
 14678                           ;main.c: 1044: 0xd0,
 14679                           ;main.c: 1045: rwtimeout,
 14680                           ;main.c: 1046: &value)) {
 14681  005EFC  0100               	movlb	0	; () banked
 14682  005EFE  6BB0               	clrf	(?_readRegisterExtended+1)& (0+255),b
 14683  005F00  6BAF               	clrf	?_readRegisterExtended& (0+255),b
 14684  005F02  0ED0               	movlw	208
 14685  005F04  6FB1               	movwf	(?_readRegisterExtended+2)& (0+255),b
 14686  005F06  C104  F0B2         	movff	_rwtimeout,?_readRegisterExtended+3
 14687  005F0A  6BB3               	clrf	(?_readRegisterExtended+4)& (0+255),b
 14688  005F0C  0E02               	movlw	high doModeVerbose@value_1370
 14689  005F0E  6FB5               	movwf	(?_readRegisterExtended+6)& (0+255),b
 14690  005F10  0EB2               	movlw	low doModeVerbose@value_1370
 14691  005F12  6FB4               	movwf	(?_readRegisterExtended+5)& (0+255),b
 14692  005F14  0102               	movlb	2	; () banked
 14693  005F16  51BE               	movf	doModeVerbose@nodeid_1369& (0+255),w,b
 14694  005F18  EC6B  F011         	call	_readRegisterExtended
 14695  005F1C  0900               	iorlw	0
 14696  005F1E  E107               	bnz	l16057
 14697                           
 14698                           ;main.c: 1047: putsUSART((char *) "-ERROR - Node not found.\r\n");
 14699  005F20  0E77               	movlw	high STR_103
 14700  005F22  6E21               	movwf	?_putsUSART+1,c
 14701  005F24  0E63               	movlw	low STR_103
 14702  005F26  6E20               	movwf	?_putsUSART,c
 14703  005F28  EC03  F007         	call	_putsUSART	;wreg free
 14704  005F2C  D476               	goto	l15777
 14705  005F2E                     l16057:
 14706                           
 14707                           ;main.c: 1051: }
 14708                           ;main.c: 1053: printNodeFirmwareVersion(nodeid);
 14709  005F2E  0102               	movlb	2	; () banked
 14710  005F30  51BE               	movf	doModeVerbose@nodeid_1369& (0+255),w,b
 14711  005F32  ECDB  F00E         	call	_printNodeFirmwareVersion
 14712                           
 14713                           ;main.c: 1054: printGUID(nodeid);
 14714  005F36  0102               	movlb	2	; () banked
 14715  005F38  51BE               	movf	doModeVerbose@nodeid_1369& (0+255),w,b
 14716  005F3A  ECEB  F011         	call	_printGUID
 14717                           
 14718                           ;main.c: 1055: printMDF(nodeid);
 14719  005F3E  0102               	movlb	2	; () banked
 14720  005F40  51BE               	movf	doModeVerbose@nodeid_1369& (0+255),w,b
 14721  005F42  EC75  F00B         	call	_printMDF
 14722                           
 14723                           ;main.c: 1056: putsUSART((char *) "+OK\r\n");
 14724  005F46  0E7C               	movlw	high STR_9
 14725  005F48  6E21               	movwf	?_putsUSART+1,c
 14726  005F4A  0E6B               	movlw	low STR_9
 14727  005F4C  6E20               	movwf	?_putsUSART,c
 14728  005F4E  EC03  F007         	call	_putsUSART	;wreg free
 14729                           
 14730                           ;main.c: 1057: }
 14731  005F52  EF8C  F034         	goto	l16499
 14732  005F56                     l16061:
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;main.c: 1061: else if (cmdbuf == stristr(cmdbuf, "FILTER")) {
 14736  005F56  0E01               	movlw	high _cmdbuf
 14737  005F58  0100               	movlb	0	; () banked
 14738  005F5A  6F67               	movwf	(?_stristr+1)& (0+255),b
 14739  005F5C  0E05               	movlw	low _cmdbuf
 14740  005F5E  6F66               	movwf	?_stristr& (0+255),b
 14741  005F60  0E7C               	movlw	high STR_105
 14742  005F62  6F69               	movwf	(?_stristr+3)& (0+255),b
 14743  005F64  0E42               	movlw	low STR_105
 14744  005F66  6F68               	movwf	(?_stristr+2)& (0+255),b
 14745  005F68  EC8D  F009         	call	_stristr	;wreg free
 14746  005F6C  EC98  F034         	call	PL2	;call to abstracted procedure
 14747  005F70  E104               	bnz	u20005
 14748  005F72  0100               	movlb	0	; () banked
 14749  005F74  5166               	movf	?_stristr& (0+255),w,b
 14750  005F76  0101               	movlb	1	; () banked
 14751  005F78  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 14752  005F7A                     u20005:
 14753  005F7A  E001 D0F6          	bnz	l16161
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;main.c: 1064: uint8_t filterno;
 14757                           ;main.c: 1065: uint8_t filter_priority;
 14758                           ;main.c: 1066: uint16_t filter_class;
 14759                           ;main.c: 1067: uint8_t filter_type;
 14760                           ;main.c: 1068: uint8_t filter_nodeid;
 14761                           ;main.c: 1069: BOOL bPersistent = 0;
 14762  005F7E  0102               	movlb	2	; () banked
 14763  005F80  6BB3               	clrf	doModeVerbose@bPersistent& (0+255),b
 14764                           
 14765                           ; BSR set to: 2
 14766                           ;main.c: 1071: strcpy(cmdbuf, cmdbuf + 8);
 14767  005F82  ECE3  F034         	call	PL20	;call to abstracted procedure
 14768  005F86  ECFE  F004         	call	_strcpy	;wreg free
 14769                           
 14770                           ; BSR set to: 1
 14771                           ;main.c: 1072: char *p = strtok(cmdbuf, ",");
 14772  005F8A  ECF9  F034         	call	PL36	;call to abstracted procedure
 14773  005F8E  ECDC  F00A         	call	_strtok	;wreg free
 14774  005F92  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1387
 14775  005F96  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1387+1
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;main.c: 1073: if ((0) != p) {
 14779  005F9A  0102               	movlb	2	; () banked
 14780  005F9C  51D3               	movf	(doModeVerbose@p_1387+1)& (0+255),w,b
 14781  005F9E  11D2               	iorwf	doModeVerbose@p_1387& (0+255),w,b
 14782  005FA0  E013               	bz	l16083
 14783                           
 14784                           ; BSR set to: 2
 14785                           ;main.c: 1074: filterno = atoi(p);
 14786  005FA2  C2D2  F062         	movff	doModeVerbose@p_1387,?_atoi
 14787  005FA6  C2D3  F063         	movff	doModeVerbose@p_1387+1,?_atoi+1
 14788  005FAA  EC6C  F012         	call	_atoi	;wreg free
 14789  005FAE  5162               	movf	?_atoi& (0+255),w,b
 14790  005FB0  0102               	movlb	2	; () banked
 14791  005FB2  6FB4               	movwf	doModeVerbose@filterno& (0+255),b
 14792                           
 14793                           ; BSR set to: 2
 14794                           ;main.c: 1075: if (filterno > 15) {
 14795  005FB4  0E0F               	movlw	15
 14796  005FB6  65B4               	cpfsgt	doModeVerbose@filterno& (0+255),b
 14797  005FB8  D00E               	goto	l16091
 14798                           
 14799                           ; BSR set to: 2
 14800                           ;main.c: 1076: putsUSART((char *) "-ERROR - Filter number can only be set to a value bet
      +                          ween 0-15.\r\n");
 14801  005FBA  0E6D               	movlw	high STR_107
 14802  005FBC  6E21               	movwf	?_putsUSART+1,c
 14803  005FBE  0E80               	movlw	low STR_107
 14804  005FC0  6E20               	movwf	?_putsUSART,c
 14805  005FC2  EC03  F007         	call	_putsUSART	;wreg free
 14806  005FC6  D429               	goto	l15777
 14807  005FC8                     l16083:
 14808                           
 14809                           ; BSR set to: 2
 14810                           ;main.c: 1082: else {
 14811                           ;main.c: 1083: putsUSART((char *) "-ERROR - No filter number specified.\r\n");
 14812  005FC8  0E73               	movlw	high STR_108
 14813  005FCA  6E21               	movwf	?_putsUSART+1,c
 14814  005FCC  0EF4               	movlw	low STR_108
 14815  005FCE  6E20               	movwf	?_putsUSART,c
 14816  005FD0  EC03  F007         	call	_putsUSART	;wreg free
 14817  005FD4  D422               	goto	l15777
 14818  005FD6                     l16091:
 14819                           
 14820                           ; BSR set to: 2
 14821                           ;main.c: 1087: }
 14822                           ;main.c: 1090: p = strtok((0), ",");
 14823  005FD6  ECA2  F034         	call	PL4	;call to abstracted procedure
 14824  005FDA  ECDC  F00A         	call	_strtok	;wreg free
 14825  005FDE  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1387
 14826  005FE2  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1387+1
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;main.c: 1091: if ((0) != p) {
 14830  005FE6  0102               	movlb	2	; () banked
 14831  005FE8  51D3               	movf	(doModeVerbose@p_1387+1)& (0+255),w,b
 14832  005FEA  11D2               	iorwf	doModeVerbose@p_1387& (0+255),w,b
 14833  005FEC  E00A               	bz	l16097
 14834                           
 14835                           ; BSR set to: 2
 14836                           ;main.c: 1092: filter_priority = atoi(p);
 14837  005FEE  C2D2  F062         	movff	doModeVerbose@p_1387,?_atoi
 14838  005FF2  C2D3  F063         	movff	doModeVerbose@p_1387+1,?_atoi+1
 14839  005FF6  EC6C  F012         	call	_atoi	;wreg free
 14840  005FFA  5162               	movf	?_atoi& (0+255),w,b
 14841  005FFC  0102               	movlb	2	; () banked
 14842  005FFE  6F94               	movwf	doModeVerbose@filter_priority& (0+255),b
 14843                           
 14844                           ;main.c: 1093: }
 14845  006000  D007               	goto	l16105
 14846  006002                     l16097:
 14847                           
 14848                           ; BSR set to: 2
 14849                           ;main.c: 1094: else {
 14850                           ;main.c: 1095: putsUSART((char *) "-ERROR - filter for priority is missing\r\n");
 14851  006002  0E73               	movlw	high STR_110
 14852  006004  6E21               	movwf	?_putsUSART+1,c
 14853  006006  0E00               	movlw	low STR_110
 14854  006008  6E20               	movwf	?_putsUSART,c
 14855  00600A  EC03  F007         	call	_putsUSART	;wreg free
 14856  00600E  D405               	goto	l15777
 14857  006010                     l16105:
 14858                           
 14859                           ; BSR set to: 2
 14860                           ;main.c: 1099: }
 14861                           ;main.c: 1102: p = strtok((0), ",");
 14862  006010  ECA2  F034         	call	PL4	;call to abstracted procedure
 14863  006014  ECDC  F00A         	call	_strtok	;wreg free
 14864  006018  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1387
 14865  00601C  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1387+1
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;main.c: 1103: if ((0) != p) {
 14869  006020  0102               	movlb	2	; () banked
 14870  006022  51D3               	movf	(doModeVerbose@p_1387+1)& (0+255),w,b
 14871  006024  11D2               	iorwf	doModeVerbose@p_1387& (0+255),w,b
 14872  006026  E00B               	bz	l16111
 14873                           
 14874                           ; BSR set to: 2
 14875                           ;main.c: 1104: filter_class = atoi(p);
 14876  006028  C2D2  F062         	movff	doModeVerbose@p_1387,?_atoi
 14877  00602C  C2D3  F063         	movff	doModeVerbose@p_1387+1,?_atoi+1
 14878  006030  EC6C  F012         	call	_atoi	;wreg free
 14879  006034  C062  F290         	movff	?_atoi,doModeVerbose@filter_class
 14880  006038  C063  F291         	movff	?_atoi+1,doModeVerbose@filter_class+1
 14881                           
 14882                           ;main.c: 1105: }
 14883  00603C  D008               	goto	l16119
 14884  00603E                     l16111:
 14885                           
 14886                           ; BSR set to: 2
 14887                           ;main.c: 1106: else {
 14888                           ;main.c: 1107: putsUSART((char *) "-ERROR - filter for class is missing\r\n");
 14889  00603E  0E74               	movlw	high STR_112
 14890  006040  6E21               	movwf	?_putsUSART+1,c
 14891  006042  0E90               	movlw	low STR_112
 14892  006044  6E20               	movwf	?_putsUSART,c
 14893  006046  EC03  F007         	call	_putsUSART	;wreg free
 14894  00604A  EF0D  F02C         	goto	l15777
 14895  00604E                     l16119:
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;main.c: 1111: }
 14899                           ;main.c: 1114: p = strtok((0), ",");
 14900  00604E  ECAA  F034         	call	PL6	;call to abstracted procedure
 14901  006052  ECDC  F00A         	call	_strtok	;wreg free
 14902  006056  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1387
 14903  00605A  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1387+1
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;main.c: 1115: if ((0) != p) {
 14907  00605E  0102               	movlb	2	; () banked
 14908  006060  51D3               	movf	(doModeVerbose@p_1387+1)& (0+255),w,b
 14909  006062  11D2               	iorwf	doModeVerbose@p_1387& (0+255),w,b
 14910  006064  E00A               	bz	l16125
 14911                           
 14912                           ; BSR set to: 2
 14913                           ;main.c: 1116: filter_type = atoi(p);
 14914  006066  C2D2  F062         	movff	doModeVerbose@p_1387,?_atoi
 14915  00606A  C2D3  F063         	movff	doModeVerbose@p_1387+1,?_atoi+1
 14916  00606E  EC6C  F012         	call	_atoi	;wreg free
 14917  006072  5162               	movf	?_atoi& (0+255),w,b
 14918  006074  0102               	movlb	2	; () banked
 14919  006076  6F95               	movwf	doModeVerbose@filter_type& (0+255),b
 14920                           
 14921                           ;main.c: 1117: }
 14922  006078  D008               	goto	l16133
 14923  00607A                     l16125:
 14924                           
 14925                           ; BSR set to: 2
 14926                           ;main.c: 1118: else {
 14927                           ;main.c: 1119: putsUSART((char *) "-ERROR - filter for type is missing\r\n");
 14928  00607A  0E74               	movlw	high STR_114
 14929  00607C  6E21               	movwf	?_putsUSART+1,c
 14930  00607E  0EDE               	movlw	low STR_114
 14931  006080  6E20               	movwf	?_putsUSART,c
 14932  006082  EC03  F007         	call	_putsUSART	;wreg free
 14933  006086  EF0D  F02C         	goto	l15777
 14934  00608A                     l16133:
 14935                           
 14936                           ; BSR set to: 2
 14937                           ;main.c: 1123: }
 14938                           ;main.c: 1126: p = strtok((0), ",");
 14939  00608A  ECA2  F034         	call	PL4	;call to abstracted procedure
 14940  00608E  ECDC  F00A         	call	_strtok	;wreg free
 14941  006092  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1387
 14942  006096  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1387+1
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;main.c: 1127: if ((0) != p) {
 14946  00609A  0102               	movlb	2	; () banked
 14947  00609C  51D3               	movf	(doModeVerbose@p_1387+1)& (0+255),w,b
 14948  00609E  11D2               	iorwf	doModeVerbose@p_1387& (0+255),w,b
 14949  0060A0  E00A               	bz	l16139
 14950                           
 14951                           ; BSR set to: 2
 14952                           ;main.c: 1128: filter_nodeid = atoi(p);
 14953  0060A2  C2D2  F062         	movff	doModeVerbose@p_1387,?_atoi
 14954  0060A6  C2D3  F063         	movff	doModeVerbose@p_1387+1,?_atoi+1
 14955  0060AA  EC6C  F012         	call	_atoi	;wreg free
 14956  0060AE  5162               	movf	?_atoi& (0+255),w,b
 14957  0060B0  0102               	movlb	2	; () banked
 14958  0060B2  6F96               	movwf	doModeVerbose@filter_nodeid& (0+255),b
 14959                           
 14960                           ;main.c: 1129: }
 14961  0060B4  D008               	goto	l16147
 14962  0060B6                     l16139:
 14963                           
 14964                           ; BSR set to: 2
 14965                           ;main.c: 1130: else {
 14966                           ;main.c: 1131: putsUSART((char *) "-ERROR - filter for nide id is missing\r\n");
 14967  0060B6  0E73               	movlw	high STR_116
 14968  0060B8  6E21               	movwf	?_putsUSART+1,c
 14969  0060BA  0E53               	movlw	low STR_116
 14970  0060BC  6E20               	movwf	?_putsUSART,c
 14971  0060BE  EC03  F007         	call	_putsUSART	;wreg free
 14972  0060C2  EF0D  F02C         	goto	l15777
 14973  0060C6                     l16147:
 14974                           
 14975                           ; BSR set to: 2
 14976                           ;main.c: 1135: }
 14977                           ;main.c: 1138: p = strtok((0), ",");
 14978  0060C6  ECA2  F034         	call	PL4	;call to abstracted procedure
 14979  0060CA  ECDC  F00A         	call	_strtok	;wreg free
 14980  0060CE  C064  F2D2         	movff	?_strtok,doModeVerbose@p_1387
 14981  0060D2  C065  F2D3         	movff	?_strtok+1,doModeVerbose@p_1387+1
 14982                           
 14983                           ;main.c: 1139: if ( (0) != stristr(p, "PERSISTENT") ) {
 14984  0060D6  C2D2  F066         	movff	doModeVerbose@p_1387,?_stristr
 14985  0060DA  C2D3  F067         	movff	doModeVerbose@p_1387+1,?_stristr+1
 14986  0060DE  0E7B               	movlw	high STR_118
 14987  0060E0  6F69               	movwf	(?_stristr+3)& (0+255),b
 14988  0060E2  0E55               	movlw	low STR_118
 14989  0060E4  6F68               	movwf	(?_stristr+2)& (0+255),b
 14990  0060E6  EC8D  F009         	call	_stristr	;wreg free
 14991  0060EA  5167               	movf	(?_stristr+1)& (0+255),w,b
 14992  0060EC  1166               	iorwf	?_stristr& (0+255),w,b
 14993  0060EE  E003               	bz	l16151
 14994                           
 14995                           ; BSR set to: 0
 14996                           ;main.c: 1140: bPersistent = 1;
 14997  0060F0  0E01               	movlw	1
 14998  0060F2  0102               	movlb	2	; () banked
 14999  0060F4  6FB3               	movwf	doModeVerbose@bPersistent& (0+255),b
 15000  0060F6                     l16151:
 15001                           
 15002                           ;main.c: 1141: }
 15003                           ;main.c: 1144: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 15004  0060F6  0E80               	movlw	128
 15005  0060F8  EC8C  F004         	call	_ECANSetOperationMode
 15006                           
 15007                           ;main.c: 1146: uint32_t id = ((uint32_t) filter_priority << 26) |
 15008                           ;main.c: 1147: ((uint32_t) filter_class << 16) |
 15009                           ;main.c: 1148: ((uint32_t) filter_type << 8) |
 15010                           ;main.c: 1149: filter_nodeid;
 15011  0060FC  C295  F1B9         	movff	doModeVerbose@filter_type,??_doModeVerbose
 15012  006100  EC1A  F035         	call	PL52	;call to abstracted procedure
 15013  006104  5190               	movf	doModeVerbose@filter_class& (0+255),w,b
 15014  006106  0101               	movlb	1	; () banked
 15015  006108  6FBD               	movwf	(??_doModeVerbose+4)& (0+255),b
 15016  00610A  0102               	movlb	2	; () banked
 15017  00610C  5191               	movf	(doModeVerbose@filter_class+1)& (0+255),w,b
 15018  00610E  EC3F  F035         	call	PL72	;call to abstracted procedure
 15019  006112  C294  F1C1         	movff	doModeVerbose@filter_priority,??_doModeVerbose+8
 15020  006116  ECBE  F034         	call	PL12	;call to abstracted procedure
 15021  00611A  5196               	movf	doModeVerbose@filter_nodeid& (0+255),w,b
 15022  00611C  0101               	movlb	1	; () banked
 15023  00611E  11C9               	iorwf	(??_doModeVerbose+16)& (0+255),w,b
 15024  006120  0102               	movlb	2	; () banked
 15025  006122  6F88               	movwf	doModeVerbose@id& (0+255),b
 15026  006124  0101               	movlb	1	; () banked
 15027  006126  51CA               	movf	(??_doModeVerbose+17)& (0+255),w,b
 15028  006128  0102               	movlb	2	; () banked
 15029  00612A  6F89               	movwf	(doModeVerbose@id+1)& (0+255),b
 15030  00612C  0101               	movlb	1	; () banked
 15031  00612E  51CB               	movf	(??_doModeVerbose+18)& (0+255),w,b
 15032  006130  0102               	movlb	2	; () banked
 15033  006132  6F8A               	movwf	(doModeVerbose@id+2)& (0+255),b
 15034  006134  0101               	movlb	1	; () banked
 15035  006136  51CC               	movf	(??_doModeVerbose+19)& (0+255),w,b
 15036  006138  0102               	movlb	2	; () banked
 15037  00613A  6F8B               	movwf	(doModeVerbose@id+3)& (0+255),b
 15038                           
 15039                           ; BSR set to: 2
 15040                           ;main.c: 1151: setFilter(filterno, id, bPersistent );
 15041  00613C  C288  F023         	movff	doModeVerbose@id,?_setFilter
 15042  006140  C289  F024         	movff	doModeVerbose@id+1,?_setFilter+1
 15043  006144  C28A  F025         	movff	doModeVerbose@id+2,?_setFilter+2
 15044  006148  C28B  F026         	movff	doModeVerbose@id+3,?_setFilter+3
 15045  00614C  C2B3  F027         	movff	doModeVerbose@bPersistent,?_setFilter+4
 15046  006150  51B4               	movf	doModeVerbose@filterno& (0+255),w,b
 15047  006152  ECAC  F01C         	call	_setFilter
 15048                           
 15049                           ;main.c: 1154: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 15050  006156  0E00               	movlw	0
 15051  006158  EC8C  F004         	call	_ECANSetOperationMode
 15052                           
 15053                           ;main.c: 1156: putsUSART((char *) "+OK\r\n");
 15054  00615C  0E7C               	movlw	high STR_9
 15055  00615E  6E21               	movwf	?_putsUSART+1,c
 15056  006160  0E6B               	movlw	low STR_9
 15057  006162  6E20               	movwf	?_putsUSART,c
 15058  006164  EC03  F007         	call	_putsUSART	;wreg free
 15059                           
 15060                           ;main.c: 1157: }
 15061  006168  D3D7               	goto	l16499
 15062  00616A                     l16161:
 15063                           
 15064                           ; BSR set to: 1
 15065                           ;main.c: 1161: else if (cmdbuf == stristr(cmdbuf, "MASK")) {
 15066  00616A  0E01               	movlw	high _cmdbuf
 15067  00616C  0100               	movlb	0	; () banked
 15068  00616E  6F67               	movwf	(?_stristr+1)& (0+255),b
 15069  006170  0E05               	movlw	low _cmdbuf
 15070  006172  6F66               	movwf	?_stristr& (0+255),b
 15071  006174  0E7C               	movlw	high STR_120
 15072  006176  6F69               	movwf	(?_stristr+3)& (0+255),b
 15073  006178  0EA3               	movlw	low STR_120
 15074  00617A  6F68               	movwf	(?_stristr+2)& (0+255),b
 15075  00617C  EC8D  F009         	call	_stristr	;wreg free
 15076  006180  DBD7               	call	PL2	;call to abstracted procedure
 15077  006182  E104               	bnz	u20095
 15078  006184  0100               	movlb	0	; () banked
 15079  006186  5166               	movf	?_stristr& (0+255),w,b
 15080  006188  0101               	movlb	1	; () banked
 15081  00618A  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 15082  00618C                     u20095:
 15083  00618C  E001 D0E7          	bnz	l16289
 15084                           
 15085                           ; BSR set to: 1
 15086                           ;main.c: 1170: strcpy(cmdbuf, cmdbuf + 8);
 15087                           
 15088                           ; BSR set to: 1
 15089  006190  0E01               	movlw	high _cmdbuf
 15090  006192  6E20               	movwf	?_strcpy+1,c
 15091  006194  0E05               	movlw	low _cmdbuf
 15092  006196  6E1F               	movwf	?_strcpy,c
 15093  006198  0E0D               	movlw	low (_cmdbuf+8)
 15094  00619A  6FB9               	movwf	??_doModeVerbose& (0+255),b
 15095  00619C  0E01               	movlw	high (_cmdbuf+8)
 15096  00619E  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 15097  0061A0  C1B9  F021         	movff	??_doModeVerbose,?_strcpy+2
 15098  0061A4  C1BA  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 15099  0061A8  ECFE  F004         	call	_strcpy	;wreg free
 15100                           
 15101                           ; BSR set to: 1
 15102                           ;main.c: 1171: char *p = strtok(cmdbuf, ",");
 15103  0061AC  ECF9  F034         	call	PL36	;call to abstracted procedure
 15104  0061B0  ECDC  F00A         	call	_strtok	;wreg free
 15105  0061B4  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1410
 15106  0061B8  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1410+1
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;main.c: 1172: if ((0) != p) {
 15110  0061BC  0102               	movlb	2	; () banked
 15111  0061BE  51D1               	movf	(doModeVerbose@p_1410+1)& (0+255),w,b
 15112  0061C0  11D0               	iorwf	doModeVerbose@p_1410& (0+255),w,b
 15113  0061C2  E014               	bz	l16183
 15114                           
 15115                           ; BSR set to: 2
 15116                           ;main.c: 1173: maskno = atoi(p);
 15117  0061C4  C2D0  F062         	movff	doModeVerbose@p_1410,?_atoi
 15118  0061C8  C2D1  F063         	movff	doModeVerbose@p_1410+1,?_atoi+1
 15119  0061CC  EC6C  F012         	call	_atoi	;wreg free
 15120  0061D0  5162               	movf	?_atoi& (0+255),w,b
 15121  0061D2  0102               	movlb	2	; () banked
 15122  0061D4  6FBA               	movwf	doModeVerbose@maskno& (0+255),b
 15123                           
 15124                           ; BSR set to: 2
 15125                           ;main.c: 1174: if (maskno > 1) {
 15126  0061D6  0E01               	movlw	1
 15127  0061D8  65BA               	cpfsgt	doModeVerbose@maskno& (0+255),b
 15128  0061DA  D010               	goto	l16191
 15129                           
 15130                           ; BSR set to: 2
 15131                           ;main.c: 1175: putsUSART((char *) "-ERROR - Mask number can only be set as 0 or 1.\r\n");
 15132  0061DC  0E70               	movlw	high STR_122
 15133  0061DE  6E21               	movwf	?_putsUSART+1,c
 15134  0061E0  0ECC               	movlw	low STR_122
 15135  0061E2  6E20               	movwf	?_putsUSART,c
 15136  0061E4  EC03  F007         	call	_putsUSART	;wreg free
 15137  0061E8  EF0D  F02C         	goto	l15777
 15138  0061EC                     l16183:
 15139                           
 15140                           ; BSR set to: 2
 15141                           ;main.c: 1181: else {
 15142                           ;main.c: 1182: putsUSART((char *) "-ERROR - No mask number specified.\r\n");
 15143  0061EC  0E75               	movlw	high STR_123
 15144  0061EE  6E21               	movwf	?_putsUSART+1,c
 15145  0061F0  0E2A               	movlw	low STR_123
 15146  0061F2  6E20               	movwf	?_putsUSART,c
 15147  0061F4  EC03  F007         	call	_putsUSART	;wreg free
 15148  0061F8  EF0D  F02C         	goto	l15777
 15149  0061FC                     l16191:
 15150                           
 15151                           ; BSR set to: 2
 15152                           ;main.c: 1186: }
 15153                           ;main.c: 1189: p = strtok((0), ",");
 15154  0061FC  DBA3               	call	PL4	;call to abstracted procedure
 15155  0061FE  ECDC  F00A         	call	_strtok	;wreg free
 15156  006202  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1410
 15157  006206  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1410+1
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;main.c: 1190: if ((0) != p) {
 15161  00620A  0102               	movlb	2	; () banked
 15162  00620C  51D1               	movf	(doModeVerbose@p_1410+1)& (0+255),w,b
 15163  00620E  11D0               	iorwf	doModeVerbose@p_1410& (0+255),w,b
 15164  006210  E00A               	bz	l16197
 15165                           
 15166                           ; BSR set to: 2
 15167                           ;main.c: 1191: mask_priority = atoi(p);
 15168  006212  C2D0  F062         	movff	doModeVerbose@p_1410,?_atoi
 15169  006216  C2D1  F063         	movff	doModeVerbose@p_1410+1,?_atoi+1
 15170  00621A  EC6C  F012         	call	_atoi	;wreg free
 15171  00621E  5162               	movf	?_atoi& (0+255),w,b
 15172  006220  0102               	movlb	2	; () banked
 15173  006222  6F97               	movwf	doModeVerbose@mask_priority& (0+255),b
 15174                           
 15175                           ;main.c: 1192: }
 15176  006224  D008               	goto	l16205
 15177  006226                     l16197:
 15178                           
 15179                           ; BSR set to: 2
 15180                           ;main.c: 1193: else {
 15181                           ;main.c: 1194: putsUSART((char *) "-ERROR - mask for priority is missing\r\n");
 15182  006226  0E73               	movlw	high STR_125
 15183  006228  6E21               	movwf	?_putsUSART+1,c
 15184  00622A  0EA4               	movlw	low STR_125
 15185  00622C  6E20               	movwf	?_putsUSART,c
 15186  00622E  EC03  F007         	call	_putsUSART	;wreg free
 15187  006232  EF0D  F02C         	goto	l15777
 15188  006236                     l16205:
 15189                           
 15190                           ; BSR set to: 2
 15191                           ;main.c: 1198: }
 15192                           ;main.c: 1201: p = strtok((0), ",");
 15193  006236  DB86               	call	PL4	;call to abstracted procedure
 15194  006238  ECDC  F00A         	call	_strtok	;wreg free
 15195  00623C  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1410
 15196  006240  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1410+1
 15197                           
 15198                           ; BSR set to: 0
 15199                           ;main.c: 1202: if ((0) != p) {
 15200  006244  0102               	movlb	2	; () banked
 15201  006246  51D1               	movf	(doModeVerbose@p_1410+1)& (0+255),w,b
 15202  006248  11D0               	iorwf	doModeVerbose@p_1410& (0+255),w,b
 15203  00624A  E00B               	bz	l16211
 15204                           
 15205                           ; BSR set to: 2
 15206                           ;main.c: 1203: mask_class = atoi(p);
 15207  00624C  C2D0  F062         	movff	doModeVerbose@p_1410,?_atoi
 15208  006250  C2D1  F063         	movff	doModeVerbose@p_1410+1,?_atoi+1
 15209  006254  EC6C  F012         	call	_atoi	;wreg free
 15210  006258  C062  F292         	movff	?_atoi,doModeVerbose@mask_class
 15211  00625C  C063  F293         	movff	?_atoi+1,doModeVerbose@mask_class+1
 15212                           
 15213                           ;main.c: 1204: }
 15214  006260  D008               	goto	l16219
 15215  006262                     l16211:
 15216                           
 15217                           ; BSR set to: 2
 15218                           ;main.c: 1205: else {
 15219                           ;main.c: 1206: putsUSART((char *) "-ERROR - mask for class is missing\r\n");
 15220  006262  0E75               	movlw	high STR_127
 15221  006264  6E21               	movwf	?_putsUSART+1,c
 15222  006266  0E74               	movlw	low STR_127
 15223  006268  6E20               	movwf	?_putsUSART,c
 15224  00626A  EC03  F007         	call	_putsUSART	;wreg free
 15225  00626E  EF0D  F02C         	goto	l15777
 15226  006272                     l16219:
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;main.c: 1210: }
 15230                           ;main.c: 1213: p = strtok((0), ",");
 15231  006272  DB70               	call	PL6	;call to abstracted procedure
 15232  006274  ECDC  F00A         	call	_strtok	;wreg free
 15233  006278  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1410
 15234  00627C  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1410+1
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;main.c: 1214: if ((0) != p) {
 15238  006280  0102               	movlb	2	; () banked
 15239  006282  51D1               	movf	(doModeVerbose@p_1410+1)& (0+255),w,b
 15240  006284  11D0               	iorwf	doModeVerbose@p_1410& (0+255),w,b
 15241  006286  E00A               	bz	l16225
 15242                           
 15243                           ; BSR set to: 2
 15244                           ;main.c: 1215: mask_type = atoi(p);
 15245  006288  C2D0  F062         	movff	doModeVerbose@p_1410,?_atoi
 15246  00628C  C2D1  F063         	movff	doModeVerbose@p_1410+1,?_atoi+1
 15247  006290  EC6C  F012         	call	_atoi	;wreg free
 15248  006294  5162               	movf	?_atoi& (0+255),w,b
 15249  006296  0102               	movlb	2	; () banked
 15250  006298  6F98               	movwf	doModeVerbose@mask_type& (0+255),b
 15251                           
 15252                           ;main.c: 1216: }
 15253  00629A  D008               	goto	l16233
 15254  00629C                     l16225:
 15255                           
 15256                           ; BSR set to: 2
 15257                           ;main.c: 1217: else {
 15258                           ;main.c: 1218: putsUSART((char *) "-ERROR - mask for type is missing\r\n");
 15259  00629C  0E75               	movlw	high STR_129
 15260  00629E  6E21               	movwf	?_putsUSART+1,c
 15261  0062A0  0E99               	movlw	low STR_129
 15262  0062A2  6E20               	movwf	?_putsUSART,c
 15263  0062A4  EC03  F007         	call	_putsUSART	;wreg free
 15264  0062A8  EF0D  F02C         	goto	l15777
 15265  0062AC                     l16233:
 15266                           
 15267                           ; BSR set to: 2
 15268                           ;main.c: 1222: }
 15269                           ;main.c: 1225: p = strtok((0), ",");
 15270  0062AC  DB4B               	call	PL4	;call to abstracted procedure
 15271  0062AE  ECDC  F00A         	call	_strtok	;wreg free
 15272  0062B2  C064  F2D0         	movff	?_strtok,doModeVerbose@p_1410
 15273  0062B6  C065  F2D1         	movff	?_strtok+1,doModeVerbose@p_1410+1
 15274                           
 15275                           ; BSR set to: 0
 15276                           ;main.c: 1226: if ((0) != p) {
 15277  0062BA  0102               	movlb	2	; () banked
 15278  0062BC  51D1               	movf	(doModeVerbose@p_1410+1)& (0+255),w,b
 15279  0062BE  11D0               	iorwf	doModeVerbose@p_1410& (0+255),w,b
 15280  0062C0  E00A               	bz	l16239
 15281                           
 15282                           ; BSR set to: 2
 15283                           ;main.c: 1227: mask_nodeid = atoi(p);
 15284  0062C2  C2D0  F062         	movff	doModeVerbose@p_1410,?_atoi
 15285  0062C6  C2D1  F063         	movff	doModeVerbose@p_1410+1,?_atoi+1
 15286  0062CA  EC6C  F012         	call	_atoi	;wreg free
 15287  0062CE  5162               	movf	?_atoi& (0+255),w,b
 15288  0062D0  0102               	movlb	2	; () banked
 15289  0062D2  6F99               	movwf	doModeVerbose@mask_nodeid& (0+255),b
 15290                           
 15291                           ;main.c: 1228: }
 15292  0062D4  D008               	goto	l16247
 15293  0062D6                     l16239:
 15294                           
 15295                           ; BSR set to: 2
 15296                           ;main.c: 1229: else {
 15297                           ;main.c: 1230: putsUSART((char *) "-ERROR - mask for nide id is missing\r\n");
 15298  0062D6  0E74               	movlw	high STR_131
 15299  0062D8  6E21               	movwf	?_putsUSART+1,c
 15300  0062DA  0E69               	movlw	low STR_131
 15301  0062DC  6E20               	movwf	?_putsUSART,c
 15302  0062DE  EC03  F007         	call	_putsUSART	;wreg free
 15303  0062E2  EF0D  F02C         	goto	l15777
 15304  0062E6                     l16247:
 15305                           
 15306                           ; BSR set to: 2
 15307                           ;main.c: 1234: }
 15308                           ;main.c: 1235: uint32_t id = ((uint32_t) mask_priority << 26) |
 15309                           ;main.c: 1236: ((uint32_t) mask_class << 16) |
 15310                           ;main.c: 1237: ((uint32_t) mask_type << 8) |
 15311                           ;main.c: 1238: mask_nodeid;
 15312  0062E6  C298  F1B9         	movff	doModeVerbose@mask_type,??_doModeVerbose
 15313  0062EA  DBA4               	call	PL52	;call to abstracted procedure
 15314  0062EC  5192               	movf	doModeVerbose@mask_class& (0+255),w,b
 15315  0062EE  0101               	movlb	1	; () banked
 15316  0062F0  6FBD               	movwf	(??_doModeVerbose+4)& (0+255),b
 15317  0062F2  0102               	movlb	2	; () banked
 15318  0062F4  5193               	movf	(doModeVerbose@mask_class+1)& (0+255),w,b
 15319  0062F6  DBC3               	call	PL72	;call to abstracted procedure
 15320  0062F8  C297  F1C1         	movff	doModeVerbose@mask_priority,??_doModeVerbose+8
 15321  0062FC  DB3F               	call	PL12	;call to abstracted procedure
 15322  0062FE  5199               	movf	doModeVerbose@mask_nodeid& (0+255),w,b
 15323  006300  0101               	movlb	1	; () banked
 15324  006302  11C9               	iorwf	(??_doModeVerbose+16)& (0+255),w,b
 15325  006304  0102               	movlb	2	; () banked
 15326  006306  6FCC               	movwf	doModeVerbose@id_1422& (0+255),b
 15327  006308  0101               	movlb	1	; () banked
 15328  00630A  51CA               	movf	(??_doModeVerbose+17)& (0+255),w,b
 15329  00630C  0102               	movlb	2	; () banked
 15330  00630E  6FCD               	movwf	(doModeVerbose@id_1422+1)& (0+255),b
 15331  006310  0101               	movlb	1	; () banked
 15332  006312  51CB               	movf	(??_doModeVerbose+18)& (0+255),w,b
 15333  006314  0102               	movlb	2	; () banked
 15334  006316  6FCE               	movwf	(doModeVerbose@id_1422+2)& (0+255),b
 15335  006318  0101               	movlb	1	; () banked
 15336  00631A  51CC               	movf	(??_doModeVerbose+19)& (0+255),w,b
 15337  00631C  0102               	movlb	2	; () banked
 15338  00631E  6FCF               	movwf	(doModeVerbose@id_1422+3)& (0+255),b
 15339                           
 15340                           ; BSR set to: 2
 15341                           ;main.c: 1241: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 15342  006320  0E80               	movlw	128
 15343  006322  EC8C  F004         	call	_ECANSetOperationMode
 15344                           
 15345                           ;main.c: 1243: maskno ? _CANIDToRegs((BYTE*)&RXM0SIDH, id, 1) :
 15346                           ;main.c: 1244: _CANIDToRegs((BYTE*)&RXM1SIDH, id, 1);
 15347  006326  0102               	movlb	2	; () banked
 15348  006328  51BA               	movf	doModeVerbose@maskno& (0+255),w,b
 15349  00632A  E008               	bz	l16255
 15350                           
 15351                           ; BSR set to: 2
 15352  00632C  010F               	movlb	15	; () banked
 15353  00632E  0E0F               	movlw	15	;volatile
 15354  006330  6E22               	movwf	?__CANIDToRegs+1,c
 15355  006332  0E18               	movlw	24	;volatile
 15356  006334  DB98               	call	PL70	;call to abstracted procedure
 15357  006336  EC75  F013         	call	__CANIDToRegs	;wreg free
 15358  00633A  D007               	goto	l16257
 15359  00633C                     l16255:
 15360                           
 15361                           ; BSR set to: 2
 15362  00633C  010F               	movlb	15	; () banked
 15363  00633E  0E0F               	movlw	15	;volatile
 15364  006340  6E22               	movwf	?__CANIDToRegs+1,c
 15365  006342  0E1C               	movlw	28	;volatile
 15366  006344  DB90               	call	PL70	;call to abstracted procedure
 15367  006346  EC75  F013         	call	__CANIDToRegs	;wreg free
 15368  00634A                     l16257:
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;main.c: 1247: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 15372  00634A  0E00               	movlw	0
 15373  00634C  EC8C  F004         	call	_ECANSetOperationMode
 15374                           
 15375                           ;main.c: 1261: }
 15376                           ;main.c: 1262: }
 15377                           ;main.c: 1264: putsUSART((char *) "+OK\r\n");
 15378  006350  0E7C               	movlw	high STR_9
 15379  006352  6E21               	movwf	?_putsUSART+1,c
 15380  006354  0E6B               	movlw	low STR_9
 15381  006356  6E20               	movwf	?_putsUSART,c
 15382  006358  EC03  F007         	call	_putsUSART	;wreg free
 15383                           
 15384                           ;main.c: 1266: }
 15385  00635C  D2DD               	goto	l16499
 15386  00635E                     l16289:
 15387                           
 15388                           ; BSR set to: 1
 15389                           ;main.c: 1276: else if (cmdbuf == stristr(cmdbuf, "SET ")) {
 15390  00635E  0E01               	movlw	high _cmdbuf
 15391  006360  0100               	movlb	0	; () banked
 15392  006362  6F67               	movwf	(?_stristr+1)& (0+255),b
 15393  006364  0E05               	movlw	low _cmdbuf
 15394  006366  6F66               	movwf	?_stristr& (0+255),b
 15395  006368  0E7C               	movlw	high STR_133
 15396  00636A  6F69               	movwf	(?_stristr+3)& (0+255),b
 15397  00636C  0E8F               	movlw	low STR_133
 15398  00636E  6F68               	movwf	(?_stristr+2)& (0+255),b
 15399  006370  EC8D  F009         	call	_stristr	;wreg free
 15400  006374  DADD               	call	PL2	;call to abstracted procedure
 15401  006376  E104               	bnz	u20185
 15402  006378  0100               	movlb	0	; () banked
 15403  00637A  5166               	movf	?_stristr& (0+255),w,b
 15404  00637C  0101               	movlb	1	; () banked
 15405  00637E  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 15406  006380                     u20185:
 15407  006380  E001 D2BA          	bnz	l16493
 15408                           
 15409                           ; BSR set to: 1
 15410                           ;main.c: 1279: strcpy(cmdbuf, cmdbuf + 4);
 15411  006384  0E01               	movlw	high _cmdbuf
 15412  006386  6E20               	movwf	?_strcpy+1,c
 15413  006388  0E05               	movlw	low _cmdbuf
 15414  00638A  6E1F               	movwf	?_strcpy,c
 15415  00638C  0E09               	movlw	low (_cmdbuf+4)
 15416  00638E  6FB9               	movwf	??_doModeVerbose& (0+255),b
 15417  006390  0E01               	movlw	high (_cmdbuf+4)
 15418  006392  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 15419  006394  C1B9  F021         	movff	??_doModeVerbose,?_strcpy+2
 15420  006398  C1BA  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 15421  00639C  ECFE  F004         	call	_strcpy	;wreg free
 15422                           
 15423                           ; BSR set to: 1
 15424                           ;main.c: 1282: if (cmdbuf == stristr(cmdbuf, "HEX")) {
 15425  0063A0  0E01               	movlw	high _cmdbuf
 15426  0063A2  0100               	movlb	0	; () banked
 15427  0063A4  6F67               	movwf	(?_stristr+1)& (0+255),b
 15428  0063A6  0E05               	movlw	low _cmdbuf
 15429  0063A8  6F66               	movwf	?_stristr& (0+255),b
 15430  0063AA  0E7C               	movlw	high STR_134
 15431  0063AC  6F69               	movwf	(?_stristr+3)& (0+255),b
 15432  0063AE  0EDA               	movlw	low STR_134
 15433  0063B0  6F68               	movwf	(?_stristr+2)& (0+255),b
 15434  0063B2  EC8D  F009         	call	_stristr	;wreg free
 15435  0063B6  DABC               	call	PL2	;call to abstracted procedure
 15436  0063B8  E104               	bnz	u20195
 15437  0063BA  0100               	movlb	0	; () banked
 15438  0063BC  5166               	movf	?_stristr& (0+255),w,b
 15439  0063BE  0101               	movlb	1	; () banked
 15440  0063C0  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 15441  0063C2                     u20195:
 15442  0063C2  E112               	bnz	l16301
 15443                           
 15444                           ; BSR set to: 1
 15445                           ;main.c: 1283: bHex = 1;
 15446  0063C4  0E01               	movlw	1
 15447  0063C6  6F00               	movwf	_bHex& (0+255),b
 15448                           
 15449                           ; BSR set to: 1
 15450                           ;main.c: 1284: (Busy_eep(), Write_b_eep(0x06,1));
 15451  0063C8  EC43  F004         	call	_Busy_eep	;wreg free
 15452  0063CC  6A20               	clrf	?_Write_b_eep+1,c
 15453  0063CE  0E06               	movlw	6
 15454  0063D0  6E1F               	movwf	?_Write_b_eep,c
 15455  0063D2  0E01               	movlw	1
 15456  0063D4  6E21               	movwf	?_Write_b_eep+2,c
 15457  0063D6  EC2D  F005         	call	_Write_b_eep	;wreg free
 15458                           
 15459                           ;main.c: 1285: putsUSART((char *) "+OK - Numerical output now in hexadecimal\r\n");
 15460  0063DA  0E72               	movlw	high STR_135
 15461  0063DC  6E21               	movwf	?_putsUSART+1,c
 15462  0063DE  0ED4               	movlw	low STR_135
 15463  0063E0  6E20               	movwf	?_putsUSART,c
 15464  0063E2  EC03  F007         	call	_putsUSART	;wreg free
 15465                           
 15466                           ;main.c: 1286: }
 15467  0063E6  D298               	goto	l16499
 15468  0063E8                     l16301:
 15469                           
 15470                           ; BSR set to: 1
 15471                           ;main.c: 1288: else if (cmdbuf == stristr(cmdbuf, "DECIMAL")) {
 15472  0063E8  0E01               	movlw	high _cmdbuf
 15473  0063EA  0100               	movlb	0	; () banked
 15474  0063EC  6F67               	movwf	(?_stristr+1)& (0+255),b
 15475  0063EE  0E05               	movlw	low _cmdbuf
 15476  0063F0  6F66               	movwf	?_stristr& (0+255),b
 15477  0063F2  0E7B               	movlw	high STR_136
 15478  0063F4  6F69               	movwf	(?_stristr+3)& (0+255),b
 15479  0063F6  0EF1               	movlw	low STR_136
 15480  0063F8  6F68               	movwf	(?_stristr+2)& (0+255),b
 15481  0063FA  EC8D  F009         	call	_stristr	;wreg free
 15482  0063FE  DA98               	call	PL2	;call to abstracted procedure
 15483  006400  E104               	bnz	u20205
 15484  006402  0100               	movlb	0	; () banked
 15485  006404  5166               	movf	?_stristr& (0+255),w,b
 15486  006406  0101               	movlb	1	; () banked
 15487  006408  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 15488  00640A                     u20205:
 15489  00640A  E111               	bnz	l16311
 15490                           
 15491                           ; BSR set to: 1
 15492                           ;main.c: 1289: bHex = 0;
 15493  00640C  6B00               	clrf	_bHex& (0+255),b
 15494                           
 15495                           ; BSR set to: 1
 15496                           ;main.c: 1290: (Busy_eep(), Write_b_eep(0x06,0));
 15497  00640E  EC43  F004         	call	_Busy_eep	;wreg free
 15498  006412  6A20               	clrf	?_Write_b_eep+1,c
 15499  006414  0E06               	movlw	6
 15500  006416  6E1F               	movwf	?_Write_b_eep,c
 15501  006418  0E00               	movlw	0
 15502  00641A  6A21               	clrf	?_Write_b_eep+2,c
 15503  00641C  EC2D  F005         	call	_Write_b_eep	;wreg free
 15504                           
 15505                           ;main.c: 1291: putsUSART((char *) "+OK - Numerical output now in decimal\r\n");
 15506  006420  0E73               	movlw	high STR_137
 15507  006422  6E21               	movwf	?_putsUSART+1,c
 15508  006424  0ECC               	movlw	low STR_137
 15509  006426  6E20               	movwf	?_putsUSART,c
 15510  006428  EC03  F007         	call	_putsUSART	;wreg free
 15511                           
 15512                           ;main.c: 1292: }
 15513  00642C  D275               	goto	l16499
 15514  00642E                     l16311:
 15515                           
 15516                           ; BSR set to: 1
 15517                           ;main.c: 1293: else if (0 != stristr(cmdbuf, "RWTIMEOUT ")) {
 15518  00642E  0E01               	movlw	high _cmdbuf
 15519  006430  0100               	movlb	0	; () banked
 15520  006432  6F67               	movwf	(?_stristr+1)& (0+255),b
 15521  006434  0E05               	movlw	low _cmdbuf
 15522  006436  6F66               	movwf	?_stristr& (0+255),b
 15523  006438  0E7B               	movlw	high STR_138
 15524  00643A  6F69               	movwf	(?_stristr+3)& (0+255),b
 15525  00643C  0E4A               	movlw	low STR_138
 15526  00643E  6F68               	movwf	(?_stristr+2)& (0+255),b
 15527  006440  EC8D  F009         	call	_stristr	;wreg free
 15528  006444  5167               	movf	(?_stristr+1)& (0+255),w,b
 15529  006446  1166               	iorwf	?_stristr& (0+255),w,b
 15530  006448  E023               	bz	l16325
 15531                           
 15532                           ; BSR set to: 0
 15533                           ;main.c: 1294: strcpy(cmdbuf, cmdbuf + 10);
 15534  00644A  0101               	movlb	1	; () banked
 15535  00644C  0E01               	movlw	high _cmdbuf
 15536  00644E  DAFF               	call	PL66	;call to abstracted procedure
 15537  006450  ECFE  F004         	call	_strcpy	;wreg free
 15538                           
 15539                           ; BSR set to: 1
 15540                           ;main.c: 1295: rwtimeout = atoi(cmdbuf);
 15541  006454  0E01               	movlw	high _cmdbuf
 15542  006456  0100               	movlb	0	; () banked
 15543  006458  6F63               	movwf	(?_atoi+1)& (0+255),b
 15544  00645A  0E05               	movlw	low _cmdbuf
 15545  00645C  6F62               	movwf	?_atoi& (0+255),b
 15546  00645E  EC6C  F012         	call	_atoi	;wreg free
 15547  006462  5162               	movf	?_atoi& (0+255),w,b
 15548  006464  0101               	movlb	1	; () banked
 15549  006466  6F04               	movwf	_rwtimeout& (0+255),b
 15550                           
 15551                           ; BSR set to: 1
 15552                           ;main.c: 1296: if (rwtimeout < 20u) {
 15553  006468  0E14               	movlw	20
 15554  00646A  6104               	cpfslt	_rwtimeout& (0+255),b
 15555  00646C  D001               	goto	l16321
 15556                           
 15557                           ; BSR set to: 1
 15558                           ;main.c: 1297: rwtimeout = 20u;
 15559  00646E  6F04               	movwf	_rwtimeout& (0+255),b
 15560  006470                     l16321:
 15561                           
 15562                           ; BSR set to: 1
 15563                           ;main.c: 1298: }
 15564                           ;main.c: 1299: (Busy_eep(), Write_b_eep(0x09,rwtimeout));
 15565  006470  EC43  F004         	call	_Busy_eep	;wreg free
 15566  006474  6A20               	clrf	?_Write_b_eep+1,c
 15567  006476  0E09               	movlw	9
 15568  006478  6E1F               	movwf	?_Write_b_eep,c
 15569  00647A  C104  F021         	movff	_rwtimeout,?_Write_b_eep+2
 15570  00647E  EC2D  F005         	call	_Write_b_eep	;wreg free
 15571                           
 15572                           ;main.c: 1300: putsUSART((char *) "+OK\r\n");
 15573  006482  0E7C               	movlw	high STR_9
 15574  006484  6E21               	movwf	?_putsUSART+1,c
 15575  006486  0E6B               	movlw	low STR_9
 15576  006488  6E20               	movwf	?_putsUSART,c
 15577  00648A  EC03  F007         	call	_putsUSART	;wreg free
 15578                           
 15579                           ;main.c: 1301: }
 15580  00648E  D244               	goto	l16499
 15581  006490                     l16325:
 15582                           
 15583                           ; BSR set to: 0
 15584                           ;main.c: 1303: else if (0 != stristr(cmdbuf, "STARTIF ")) {
 15585  006490  0E01               	movlw	high _cmdbuf
 15586  006492  0100               	movlb	0	; () banked
 15587  006494  6F67               	movwf	(?_stristr+1)& (0+255),b
 15588  006496  0E05               	movlw	low _cmdbuf
 15589  006498  6F66               	movwf	?_stristr& (0+255),b
 15590  00649A  0E7B               	movlw	high STR_140
 15591  00649C  6F69               	movwf	(?_stristr+3)& (0+255),b
 15592  00649E  0E9D               	movlw	low STR_140
 15593  0064A0  6F68               	movwf	(?_stristr+2)& (0+255),b
 15594  0064A2  EC8D  F009         	call	_stristr	;wreg free
 15595  0064A6  5167               	movf	(?_stristr+1)& (0+255),w,b
 15596  0064A8  1166               	iorwf	?_stristr& (0+255),w,b
 15597  0064AA  E05B               	bz	l16359
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;main.c: 1304: strcpy(cmdbuf, cmdbuf + 8);
 15601  0064AC  DA8C               	call	PL20	;call to abstracted procedure
 15602  0064AE  ECFE  F004         	call	_strcpy	;wreg free
 15603                           
 15604                           ; BSR set to: 1
 15605                           ;main.c: 1305: if (0 != stristr(cmdbuf, "CLOSE")) {
 15606  0064B2  0E01               	movlw	high _cmdbuf
 15607  0064B4  0100               	movlb	0	; () banked
 15608  0064B6  DB01               	call	PL112	;call to abstracted procedure
 15609  0064B8  EC8D  F009         	call	_stristr	;wreg free
 15610  0064BC  5167               	movf	(?_stristr+1)& (0+255),w,b
 15611  0064BE  1166               	iorwf	?_stristr& (0+255),w,b
 15612  0064C0  E00A               	bz	l16335
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;main.c: 1306: (Busy_eep(), Write_b_eep(0x07,0));
 15616  0064C2  EC43  F004         	call	_Busy_eep	;wreg free
 15617  0064C6  6A20               	clrf	?_Write_b_eep+1,c
 15618  0064C8  0E07               	movlw	7
 15619  0064CA  6E1F               	movwf	?_Write_b_eep,c
 15620  0064CC  0E00               	movlw	0
 15621  0064CE  6A21               	clrf	?_Write_b_eep+2,c
 15622  0064D0  EC2D  F005         	call	_Write_b_eep	;wreg free
 15623                           
 15624                           ;main.c: 1307: }
 15625  0064D4  D221               	goto	l16499
 15626  0064D6                     l16335:
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;main.c: 1308: else if (0 != stristr(cmdbuf, "OPEN")) {
 15630  0064D6  DADE               	call	PL84	;call to abstracted procedure
 15631  0064D8  EC8D  F009         	call	_stristr	;wreg free
 15632  0064DC  5167               	movf	(?_stristr+1)& (0+255),w,b
 15633  0064DE  1166               	iorwf	?_stristr& (0+255),w,b
 15634  0064E0  E00A               	bz	l16341
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;main.c: 1309: (Busy_eep(), Write_b_eep(0x07,1));
 15638  0064E2  EC43  F004         	call	_Busy_eep	;wreg free
 15639  0064E6  6A20               	clrf	?_Write_b_eep+1,c
 15640  0064E8  0E07               	movlw	7
 15641  0064EA  6E1F               	movwf	?_Write_b_eep,c
 15642  0064EC  0E01               	movlw	1
 15643  0064EE  6E21               	movwf	?_Write_b_eep+2,c
 15644  0064F0  EC2D  F005         	call	_Write_b_eep	;wreg free
 15645                           
 15646                           ;main.c: 1310: }
 15647  0064F4  D211               	goto	l16499
 15648  0064F6                     l16341:
 15649                           
 15650                           ; BSR set to: 0
 15651                           ;main.c: 1311: else if (0 != stristr(cmdbuf, "SILENT")) {
 15652  0064F6  0E01               	movlw	high _cmdbuf
 15653  0064F8  DAD7               	call	PL98	;call to abstracted procedure
 15654  0064FA  EC8D  F009         	call	_stristr	;wreg free
 15655  0064FE  5167               	movf	(?_stristr+1)& (0+255),w,b
 15656  006500  1166               	iorwf	?_stristr& (0+255),w,b
 15657  006502  E00A               	bz	l16347
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;main.c: 1312: (Busy_eep(), Write_b_eep(0x07,2));
 15661  006504  EC43  F004         	call	_Busy_eep	;wreg free
 15662  006508  6A20               	clrf	?_Write_b_eep+1,c
 15663  00650A  0E07               	movlw	7
 15664  00650C  6E1F               	movwf	?_Write_b_eep,c
 15665  00650E  0E02               	movlw	2
 15666  006510  6E21               	movwf	?_Write_b_eep+2,c
 15667  006512  EC2D  F005         	call	_Write_b_eep	;wreg free
 15668                           
 15669                           ;main.c: 1313: }
 15670  006516  D200               	goto	l16499
 15671  006518                     l16347:
 15672                           
 15673                           ; BSR set to: 0
 15674                           ;main.c: 1314: else if (0 != stristr(cmdbuf, "LISTEN")) {
 15675  006518  0E01               	movlw	high _cmdbuf
 15676  00651A  0100               	movlb	0	; () banked
 15677  00651C  DAE6               	call	PL124	;call to abstracted procedure
 15678  00651E  EC8D  F009         	call	_stristr	;wreg free
 15679  006522  5167               	movf	(?_stristr+1)& (0+255),w,b
 15680  006524  1166               	iorwf	?_stristr& (0+255),w,b
 15681  006526  E00A               	bz	l16353
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;main.c: 1315: (Busy_eep(), Write_b_eep(0x07,3));
 15685  006528  EC43  F004         	call	_Busy_eep	;wreg free
 15686  00652C  6A20               	clrf	?_Write_b_eep+1,c
 15687  00652E  0E07               	movlw	7
 15688  006530  6E1F               	movwf	?_Write_b_eep,c
 15689  006532  0E03               	movlw	3
 15690  006534  6E21               	movwf	?_Write_b_eep+2,c
 15691  006536  EC2D  F005         	call	_Write_b_eep	;wreg free
 15692                           
 15693                           ;main.c: 1316: }
 15694  00653A  D1EE               	goto	l16499
 15695  00653C                     l16353:
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;main.c: 1317: else if (0 != stristr(cmdbuf, "LOOPBACK")) {
 15699  00653C  0E01               	movlw	high _cmdbuf
 15700  00653E  0100               	movlb	0	; () banked
 15701  006540  DADC               	call	PL128	;call to abstracted procedure
 15702  006542  EC8D  F009         	call	_stristr	;wreg free
 15703  006546  5167               	movf	(?_stristr+1)& (0+255),w,b
 15704  006548  1166               	iorwf	?_stristr& (0+255),w,b
 15705  00654A  E101 D1E5          	bz	l16499
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;main.c: 1318: (Busy_eep(), Write_b_eep(0x07,4));
 15709  00654E  EC43  F004         	call	_Busy_eep	;wreg free
 15710  006552  6A20               	clrf	?_Write_b_eep+1,c
 15711  006554  0E07               	movlw	7
 15712  006556  6E1F               	movwf	?_Write_b_eep,c
 15713  006558  0E04               	movlw	4
 15714  00655A  6E21               	movwf	?_Write_b_eep+2,c
 15715  00655C  EC2D  F005         	call	_Write_b_eep	;wreg free
 15716                           
 15717                           ; BSR set to: 0
 15718  006560  D1DB               	goto	l16499
 15719  006562                     l16359:
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;main.c: 1321: else if (0 != stristr(cmdbuf, "MODE ")) {
 15723  006562  0E01               	movlw	high _cmdbuf
 15724  006564  0100               	movlb	0	; () banked
 15725  006566  6F67               	movwf	(?_stristr+1)& (0+255),b
 15726  006568  0E05               	movlw	low _cmdbuf
 15727  00656A  6F66               	movwf	?_stristr& (0+255),b
 15728  00656C  0E7C               	movlw	high STR_146
 15729  00656E  6F69               	movwf	(?_stristr+3)& (0+255),b
 15730  006570  0E77               	movlw	low STR_146
 15731  006572  6F68               	movwf	(?_stristr+2)& (0+255),b
 15732  006574  EC8D  F009         	call	_stristr	;wreg free
 15733  006578  5167               	movf	(?_stristr+1)& (0+255),w,b
 15734  00657A  1166               	iorwf	?_stristr& (0+255),w,b
 15735  00657C  E064               	bz	l16389
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;main.c: 1322: strcpy(cmdbuf, cmdbuf + 5);
 15739  00657E  0101               	movlb	1	; () banked
 15740  006580  D9F0               	call	PL8	;call to abstracted procedure
 15741  006582  ECFE  F004         	call	_strcpy	;wreg free
 15742                           
 15743                           ; BSR set to: 1
 15744                           ;main.c: 1323: if (0 != stristr(cmdbuf, "VERBOSE")) {
 15745  006586  0E01               	movlw	high _cmdbuf
 15746  006588  0100               	movlb	0	; () banked
 15747  00658A  6F67               	movwf	(?_stristr+1)& (0+255),b
 15748  00658C  0E05               	movlw	low _cmdbuf
 15749  00658E  6F66               	movwf	?_stristr& (0+255),b
 15750  006590  0E7B               	movlw	high STR_147
 15751  006592  6F69               	movwf	(?_stristr+3)& (0+255),b
 15752  006594  0EE9               	movlw	low STR_147
 15753  006596  6F68               	movwf	(?_stristr+2)& (0+255),b
 15754  006598  EC8D  F009         	call	_stristr	;wreg free
 15755  00659C  5167               	movf	(?_stristr+1)& (0+255),w,b
 15756  00659E  1166               	iorwf	?_stristr& (0+255),w,b
 15757  0065A0  E011               	bz	l16373
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;main.c: 1324: mode = 0;
 15761  0065A2  6BEC               	clrf	_mode& (0+255),b
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;main.c: 1325: (Busy_eep(), Write_b_eep(0x03,0));
 15765  0065A4  EC43  F004         	call	_Busy_eep	;wreg free
 15766  0065A8  6A20               	clrf	?_Write_b_eep+1,c
 15767  0065AA  0E03               	movlw	3
 15768  0065AC  6E1F               	movwf	?_Write_b_eep,c
 15769  0065AE  0E00               	movlw	0
 15770  0065B0  6A21               	clrf	?_Write_b_eep+2,c
 15771  0065B2  EC2D  F005         	call	_Write_b_eep	;wreg free
 15772                           
 15773                           ;main.c: 1326: putsUSART((char *) "+OK - Mode is now verbose\r\n");
 15774  0065B6  0E77               	movlw	high STR_148
 15775  0065B8  6E21               	movwf	?_putsUSART+1,c
 15776  0065BA  0E47               	movlw	low STR_148
 15777  0065BC  6E20               	movwf	?_putsUSART,c
 15778  0065BE  EC03  F007         	call	_putsUSART	;wreg free
 15779                           
 15780                           ;main.c: 1327: }
 15781  0065C2  D1AA               	goto	l16499
 15782  0065C4                     l16373:
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;main.c: 1328: else if (0 != stristr(cmdbuf, "VSCP")) {
 15786  0065C4  0E01               	movlw	high _cmdbuf
 15787  0065C6  0100               	movlb	0	; () banked
 15788  0065C8  6F67               	movwf	(?_stristr+1)& (0+255),b
 15789  0065CA  0E05               	movlw	low _cmdbuf
 15790  0065CC  6F66               	movwf	?_stristr& (0+255),b
 15791  0065CE  0E7C               	movlw	high STR_149
 15792  0065D0  6F69               	movwf	(?_stristr+3)& (0+255),b
 15793  0065D2  0EB2               	movlw	low STR_149
 15794  0065D4  6F68               	movwf	(?_stristr+2)& (0+255),b
 15795  0065D6  EC8D  F009         	call	_stristr	;wreg free
 15796  0065DA  5167               	movf	(?_stristr+1)& (0+255),w,b
 15797  0065DC  1166               	iorwf	?_stristr& (0+255),w,b
 15798  0065DE  E012               	bz	l16381
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;main.c: 1329: mode = 1;
 15802  0065E0  0E01               	movlw	1
 15803  0065E2  6FEC               	movwf	_mode& (0+255),b
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;main.c: 1330: (Busy_eep(), Write_b_eep(0x03,1));
 15807  0065E4  EC43  F004         	call	_Busy_eep	;wreg free
 15808  0065E8  6A20               	clrf	?_Write_b_eep+1,c
 15809  0065EA  0E03               	movlw	3
 15810  0065EC  6E1F               	movwf	?_Write_b_eep,c
 15811  0065EE  0E01               	movlw	1
 15812  0065F0  6E21               	movwf	?_Write_b_eep+2,c
 15813  0065F2  EC2D  F005         	call	_Write_b_eep	;wreg free
 15814                           
 15815                           ;main.c: 1331: putsUSART((char *) "+OK - Mode is now VSCP Driver\r\n");
 15816  0065F6  0E76               	movlw	high STR_150
 15817  0065F8  6E21               	movwf	?_putsUSART+1,c
 15818  0065FA  0ECC               	movlw	low STR_150
 15819  0065FC  6E20               	movwf	?_putsUSART,c
 15820  0065FE  EC03  F007         	call	_putsUSART	;wreg free
 15821                           
 15822                           ;main.c: 1332: }
 15823  006602  D18A               	goto	l16499
 15824  006604                     l16381:
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;main.c: 1333: else if (0 != stristr(cmdbuf, "SLCAN")) {
 15828  006604  0E01               	movlw	high _cmdbuf
 15829  006606  0100               	movlb	0	; () banked
 15830  006608  6F67               	movwf	(?_stristr+1)& (0+255),b
 15831  00660A  0E05               	movlw	low _cmdbuf
 15832  00660C  6F66               	movwf	?_stristr& (0+255),b
 15833  00660E  0E7C               	movlw	high STR_151
 15834  006610  6F69               	movwf	(?_stristr+3)& (0+255),b
 15835  006612  0E89               	movlw	low STR_151
 15836  006614  6F68               	movwf	(?_stristr+2)& (0+255),b
 15837  006616  EC8D  F009         	call	_stristr	;wreg free
 15838  00661A  5167               	movf	(?_stristr+1)& (0+255),w,b
 15839  00661C  1166               	iorwf	?_stristr& (0+255),w,b
 15840  00661E  E101 D17B          	bz	l16499
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;main.c: 1334: mode = 2;
 15844  006622  0E02               	movlw	2
 15845  006624  6FEC               	movwf	_mode& (0+255),b
 15846                           
 15847                           ; BSR set to: 0
 15848                           ;main.c: 1335: (Busy_eep(), Write_b_eep(0x03,2));
 15849  006626  EC43  F004         	call	_Busy_eep	;wreg free
 15850  00662A  6A20               	clrf	?_Write_b_eep+1,c
 15851  00662C  0E03               	movlw	3
 15852  00662E  6E1F               	movwf	?_Write_b_eep,c
 15853  006630  0E02               	movlw	2
 15854  006632  6E21               	movwf	?_Write_b_eep+2,c
 15855  006634  EC2D  F005         	call	_Write_b_eep	;wreg free
 15856                           
 15857                           ;main.c: 1336: putsUSART((char *) "+OK - Mode is now SLCAN\r\n");
 15858  006638  0E77               	movlw	high STR_152
 15859  00663A  6E21               	movwf	?_putsUSART+1,c
 15860  00663C  0ECF               	movlw	low STR_152
 15861  00663E  6E20               	movwf	?_putsUSART,c
 15862  006640  EC03  F007         	call	_putsUSART	;wreg free
 15863  006644  D169               	goto	l16499
 15864  006646                     l16389:
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;main.c: 1340: else if (cmdbuf == stristr(cmdbuf, "ECHO ")) {
 15868  006646  0E01               	movlw	high _cmdbuf
 15869  006648  0100               	movlb	0	; () banked
 15870  00664A  6F67               	movwf	(?_stristr+1)& (0+255),b
 15871  00664C  0E05               	movlw	low _cmdbuf
 15872  00664E  6F66               	movwf	?_stristr& (0+255),b
 15873  006650  0E7C               	movlw	high STR_153
 15874  006652  6F69               	movwf	(?_stristr+3)& (0+255),b
 15875  006654  0E7D               	movlw	low STR_153
 15876  006656  6F68               	movwf	(?_stristr+2)& (0+255),b
 15877  006658  EC8D  F009         	call	_stristr	;wreg free
 15878  00665C  D969               	call	PL2	;call to abstracted procedure
 15879  00665E  E104               	bnz	u20335
 15880  006660  0100               	movlb	0	; () banked
 15881  006662  5166               	movf	?_stristr& (0+255),w,b
 15882  006664  0101               	movlb	1	; () banked
 15883  006666  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 15884  006668                     u20335:
 15885  006668  E13F               	bnz	l16413
 15886                           
 15887                           ; BSR set to: 1
 15888                           ;main.c: 1341: strcpy(cmdbuf, cmdbuf + 5);
 15889  00666A  D97B               	call	PL8	;call to abstracted procedure
 15890  00666C  ECFE  F004         	call	_strcpy	;wreg free
 15891                           
 15892                           ; BSR set to: 1
 15893                           ;main.c: 1342: if (0 != stristr(cmdbuf, "ON")) {
 15894  006670  0E01               	movlw	high _cmdbuf
 15895  006672  0100               	movlb	0	; () banked
 15896  006674  DA32               	call	PL118	;call to abstracted procedure
 15897  006676  EC8D  F009         	call	_stristr	;wreg free
 15898  00667A  5167               	movf	(?_stristr+1)& (0+255),w,b
 15899  00667C  1166               	iorwf	?_stristr& (0+255),w,b
 15900  00667E  E013               	bz	l16401
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;main.c: 1343: bLocalEcho = 1;
 15904  006680  0E01               	movlw	1
 15905  006682  0101               	movlb	1	; () banked
 15906  006684  6F01               	movwf	_bLocalEcho& (0+255),b
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;main.c: 1344: (Busy_eep(), Write_b_eep(0x65,1));
 15910  006686  EC43  F004         	call	_Busy_eep	;wreg free
 15911  00668A  6A20               	clrf	?_Write_b_eep+1,c
 15912  00668C  0E65               	movlw	101
 15913  00668E  6E1F               	movwf	?_Write_b_eep,c
 15914  006690  0E01               	movlw	1
 15915  006692  6E21               	movwf	?_Write_b_eep+2,c
 15916  006694  EC2D  F005         	call	_Write_b_eep	;wreg free
 15917                           
 15918                           ;main.c: 1345: putsUSART((char *) "+OK - Local echo on\r\n");
 15919  006698  0E79               	movlw	high STR_155
 15920  00669A  6E21               	movwf	?_putsUSART+1,c
 15921  00669C  0E7C               	movlw	low STR_155
 15922  00669E  6E20               	movwf	?_putsUSART,c
 15923  0066A0  EC03  F007         	call	_putsUSART	;wreg free
 15924                           
 15925                           ;main.c: 1346: }
 15926  0066A4  D139               	goto	l16499
 15927  0066A6                     l16401:
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;main.c: 1347: else if (0 != stristr(cmdbuf, "OFF")) {
 15931  0066A6  0E01               	movlw	high _cmdbuf
 15932  0066A8  0100               	movlb	0	; () banked
 15933  0066AA  DA0F               	call	PL116	;call to abstracted procedure
 15934  0066AC  EC8D  F009         	call	_stristr	;wreg free
 15935  0066B0  5167               	movf	(?_stristr+1)& (0+255),w,b
 15936  0066B2  1166               	iorwf	?_stristr& (0+255),w,b
 15937  0066B4  E012               	bz	l16411
 15938                           
 15939                           ; BSR set to: 0
 15940                           ;main.c: 1348: bLocalEcho = 0;
 15941  0066B6  0101               	movlb	1	; () banked
 15942  0066B8  6B01               	clrf	_bLocalEcho& (0+255),b
 15943                           
 15944                           ; BSR set to: 1
 15945                           ;main.c: 1349: (Busy_eep(), Write_b_eep(0x65,0));
 15946  0066BA  EC43  F004         	call	_Busy_eep	;wreg free
 15947  0066BE  6A20               	clrf	?_Write_b_eep+1,c
 15948  0066C0  0E65               	movlw	101
 15949  0066C2  6E1F               	movwf	?_Write_b_eep,c
 15950  0066C4  0E00               	movlw	0
 15951  0066C6  6A21               	clrf	?_Write_b_eep+2,c
 15952  0066C8  EC2D  F005         	call	_Write_b_eep	;wreg free
 15953                           
 15954                           ;main.c: 1350: putsUSART((char *) "+OK - Local echo off\r\n");
 15955  0066CC  0E79               	movlw	high STR_157
 15956  0066CE  6E21               	movwf	?_putsUSART+1,c
 15957  0066D0  0E0B               	movlw	low STR_157
 15958  0066D2  6E20               	movwf	?_putsUSART,c
 15959  0066D4  EC03  F007         	call	_putsUSART	;wreg free
 15960                           
 15961                           ;main.c: 1351: }
 15962  0066D8  D11F               	goto	l16499
 15963  0066DA                     l16411:
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;main.c: 1352: else {
 15967                           ;main.c: 1353: putsUSART((char *) "+ERROR - Wrong argument to 'set echo'.\r\n");
 15968  0066DA  0E73               	movlw	high STR_158
 15969  0066DC  6E21               	movwf	?_putsUSART+1,c
 15970  0066DE  0E2A               	movlw	low STR_158
 15971  0066E0  6E20               	movwf	?_putsUSART,c
 15972  0066E2  EC03  F007         	call	_putsUSART	;wreg free
 15973  0066E6  D118               	goto	l16499
 15974  0066E8                     l16413:
 15975                           
 15976                           ; BSR set to: 1
 15977                           ;main.c: 1357: else if (cmdbuf == stristr(cmdbuf, "TIMESTAMP ")) {
 15978  0066E8  0E01               	movlw	high _cmdbuf
 15979  0066EA  0100               	movlb	0	; () banked
 15980  0066EC  6F67               	movwf	(?_stristr+1)& (0+255),b
 15981  0066EE  0E05               	movlw	low _cmdbuf
 15982  0066F0  6F66               	movwf	?_stristr& (0+255),b
 15983  0066F2  0E7B               	movlw	high STR_159
 15984  0066F4  6F69               	movwf	(?_stristr+3)& (0+255),b
 15985  0066F6  0E3F               	movlw	low STR_159
 15986  0066F8  6F68               	movwf	(?_stristr+2)& (0+255),b
 15987  0066FA  EC8D  F009         	call	_stristr	;wreg free
 15988  0066FE  D918               	call	PL2	;call to abstracted procedure
 15989  006700  E104               	bnz	u20365
 15990  006702  0100               	movlb	0	; () banked
 15991  006704  5166               	movf	?_stristr& (0+255),w,b
 15992  006706  0101               	movlb	1	; () banked
 15993  006708  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 15994  00670A                     u20365:
 15995  00670A  E13E               	bnz	l16437
 15996                           
 15997                           ; BSR set to: 1
 15998                           ;main.c: 1358: strcpy(cmdbuf, cmdbuf + 10);
 15999  00670C  0E01               	movlw	high _cmdbuf
 16000  00670E  D99F               	call	PL66	;call to abstracted procedure
 16001  006710  ECFE  F004         	call	_strcpy	;wreg free
 16002                           
 16003                           ; BSR set to: 1
 16004                           ;main.c: 1359: if (0 != stristr(cmdbuf, "ON")) {
 16005  006714  0E01               	movlw	high _cmdbuf
 16006  006716  0100               	movlb	0	; () banked
 16007  006718  D9E0               	call	PL118	;call to abstracted procedure
 16008  00671A  EC8D  F009         	call	_stristr	;wreg free
 16009  00671E  5167               	movf	(?_stristr+1)& (0+255),w,b
 16010  006720  1166               	iorwf	?_stristr& (0+255),w,b
 16011  006722  E012               	bz	l16425
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;main.c: 1360: bTimestamp = 1;
 16015  006724  0E01               	movlw	1
 16016  006726  6FEB               	movwf	_bTimestamp& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;main.c: 1361: (Busy_eep(), Write_b_eep(0x66,1));
 16020  006728  EC43  F004         	call	_Busy_eep	;wreg free
 16021  00672C  6A20               	clrf	?_Write_b_eep+1,c
 16022  00672E  0E66               	movlw	102
 16023  006730  6E1F               	movwf	?_Write_b_eep,c
 16024  006732  0E01               	movlw	1
 16025  006734  6E21               	movwf	?_Write_b_eep+2,c
 16026  006736  EC2D  F005         	call	_Write_b_eep	;wreg free
 16027                           
 16028                           ;main.c: 1362: putsUSART((char *) "+OK - Timestamp on\r\n");
 16029  00673A  0E79               	movlw	high STR_161
 16030  00673C  6E21               	movwf	?_putsUSART+1,c
 16031  00673E  0EA8               	movlw	low STR_161
 16032  006740  6E20               	movwf	?_putsUSART,c
 16033  006742  EC03  F007         	call	_putsUSART	;wreg free
 16034                           
 16035                           ;main.c: 1363: }
 16036  006746  D0E8               	goto	l16499
 16037  006748                     l16425:
 16038                           
 16039                           ; BSR set to: 0
 16040                           ;main.c: 1364: else if (0 != stristr(cmdbuf, "OFF")) {
 16041  006748  0E01               	movlw	high _cmdbuf
 16042  00674A  0100               	movlb	0	; () banked
 16043  00674C  D9BE               	call	PL116	;call to abstracted procedure
 16044  00674E  EC8D  F009         	call	_stristr	;wreg free
 16045  006752  5167               	movf	(?_stristr+1)& (0+255),w,b
 16046  006754  1166               	iorwf	?_stristr& (0+255),w,b
 16047  006756  E011               	bz	l16435
 16048                           
 16049                           ; BSR set to: 0
 16050                           ;main.c: 1365: bTimestamp = 0;
 16051  006758  6BEB               	clrf	_bTimestamp& (0+255),b
 16052                           
 16053                           ; BSR set to: 0
 16054                           ;main.c: 1366: (Busy_eep(), Write_b_eep(0x66,0));
 16055  00675A  EC43  F004         	call	_Busy_eep	;wreg free
 16056  00675E  6A20               	clrf	?_Write_b_eep+1,c
 16057  006760  0E66               	movlw	102
 16058  006762  6E1F               	movwf	?_Write_b_eep,c
 16059  006764  0E00               	movlw	0
 16060  006766  6A21               	clrf	?_Write_b_eep+2,c
 16061  006768  EC2D  F005         	call	_Write_b_eep	;wreg free
 16062                           
 16063                           ;main.c: 1367: putsUSART((char *) "+OK - Timestamp off\r\n");
 16064  00676C  0E79               	movlw	high STR_163
 16065  00676E  6E21               	movwf	?_putsUSART+1,c
 16066  006770  0E66               	movlw	low STR_163
 16067  006772  6E20               	movwf	?_putsUSART,c
 16068  006774  EC03  F007         	call	_putsUSART	;wreg free
 16069                           
 16070                           ;main.c: 1368: }
 16071  006778  D0CF               	goto	l16499
 16072  00677A                     l16435:
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;main.c: 1369: else {
 16076                           ;main.c: 1370: putsUSART((char *) "+ERROR - Wrong argument to 'set timestamp'.\r\n");
 16077  00677A  0E72               	movlw	high STR_164
 16078  00677C  6E21               	movwf	?_putsUSART+1,c
 16079  00677E  0E20               	movlw	low STR_164
 16080  006780  6E20               	movwf	?_putsUSART,c
 16081  006782  EC03  F007         	call	_putsUSART	;wreg free
 16082  006786  D0C8               	goto	l16499
 16083  006788                     l16437:
 16084                           
 16085                           ; BSR set to: 1
 16086                           ;main.c: 1374: else if (cmdbuf == stristr(cmdbuf, "BAUDRATE ")) {
 16087  006788  0E01               	movlw	high _cmdbuf
 16088  00678A  0100               	movlb	0	; () banked
 16089  00678C  6F67               	movwf	(?_stristr+1)& (0+255),b
 16090  00678E  0E05               	movlw	low _cmdbuf
 16091  006790  6F66               	movwf	?_stristr& (0+255),b
 16092  006792  0E7B               	movlw	high STR_165
 16093  006794  6F69               	movwf	(?_stristr+3)& (0+255),b
 16094  006796  0E7F               	movlw	low STR_165
 16095  006798  6F68               	movwf	(?_stristr+2)& (0+255),b
 16096  00679A  EC8D  F009         	call	_stristr	;wreg free
 16097  00679E  D8C8               	call	PL2	;call to abstracted procedure
 16098  0067A0  E104               	bnz	u20395
 16099  0067A2  0100               	movlb	0	; () banked
 16100  0067A4  5166               	movf	?_stristr& (0+255),w,b
 16101  0067A6  0101               	movlb	1	; () banked
 16102  0067A8  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 16103  0067AA                     u20395:
 16104  0067AA  E178               	bnz	l16483
 16105                           
 16106                           ; BSR set to: 1
 16107                           ;main.c: 1376: uint32_t baud;
 16108                           ;main.c: 1377: strcpy( cmdbuf, cmdbuf + 9 );
 16109  0067AC  0E01               	movlw	high _cmdbuf
 16110  0067AE  6E20               	movwf	?_strcpy+1,c
 16111  0067B0  0E05               	movlw	low _cmdbuf
 16112  0067B2  6E1F               	movwf	?_strcpy,c
 16113  0067B4  0E0E               	movlw	low (_cmdbuf+9)
 16114  0067B6  6FB9               	movwf	??_doModeVerbose& (0+255),b
 16115  0067B8  0E01               	movlw	high (_cmdbuf+9)
 16116  0067BA  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 16117  0067BC  C1B9  F021         	movff	??_doModeVerbose,?_strcpy+2
 16118  0067C0  C1BA  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16119  0067C4  ECFE  F004         	call	_strcpy	;wreg free
 16120                           
 16121                           ; BSR set to: 1
 16122                           ;main.c: 1379: baud = atoi( cmdbuf );
 16123  0067C8  0E01               	movlw	high _cmdbuf
 16124  0067CA  0100               	movlb	0	; () banked
 16125  0067CC  6F63               	movwf	(?_atoi+1)& (0+255),b
 16126  0067CE  0E05               	movlw	low _cmdbuf
 16127  0067D0  6F62               	movwf	?_atoi& (0+255),b
 16128  0067D2  EC6C  F012         	call	_atoi	;wreg free
 16129  0067D6  C062  F2C0         	movff	?_atoi,doModeVerbose@baud
 16130  0067DA  0102               	movlb	2	; () banked
 16131  0067DC  C063  F2C1         	movff	?_atoi+1,doModeVerbose@baud+1
 16132  0067E0  0E00               	movlw	0
 16133  0067E2  BFC1               	btfsc	(doModeVerbose@baud+1)& (0+255),7,b
 16134  0067E4  0EFF               	movlw	-1
 16135  0067E6  6FC2               	movwf	(doModeVerbose@baud+2)& (0+255),b
 16136  0067E8  6FC3               	movwf	(doModeVerbose@baud+3)& (0+255),b
 16137                           
 16138                           ;main.c: 1380: switch( baud ) {
 16139  0067EA  D019               	goto	l16471
 16140  0067EC                     l16443:
 16141                           
 16142                           ; BSR set to: 1
 16143                           ;main.c: 1383: baud = 19;
 16144  0067EC  0E13               	movlw	19
 16145  0067EE  D011               	goto	L27
 16146  0067F0                     l16445:
 16147                           
 16148                           ; BSR set to: 1
 16149                           ;main.c: 1387: baud = 10;
 16150  0067F0  0E0A               	movlw	10
 16151  0067F2  D00F               	goto	L27
 16152  0067F4                     l16447:
 16153                           
 16154                           ; BSR set to: 1
 16155                           ;main.c: 1391: baud = 9;
 16156  0067F4  0E09               	movlw	9
 16157  0067F6  D00D               	goto	L27
 16158  0067F8                     l16449:
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;main.c: 1395: baud = 4;
 16162  0067F8  0E04               	movlw	4
 16163  0067FA  D00B               	goto	L27
 16164  0067FC                     l16453:
 16165                           
 16166                           ; BSR set to: 1
 16167                           ;main.c: 1403: baud = 3;
 16168  0067FC  0E03               	movlw	3
 16169  0067FE  D009               	goto	L27
 16170  006800                     l16455:
 16171                           
 16172                           ; BSR set to: 1
 16173                           ;main.c: 1407: baud = 2;
 16174  006800  0E02               	movlw	2
 16175  006802  D007               	goto	L27
 16176  006804                     l16459:
 16177                           
 16178                           ; BSR set to: 1
 16179                           ;main.c: 1415: baud = 64;
 16180  006804  0E40               	movlw	64
 16181  006806  D005               	goto	L27
 16182  006808                     l16461:
 16183                           
 16184                           ; BSR set to: 1
 16185                           ;main.c: 1419: baud = 128;
 16186  006808  0E80               	movlw	128
 16187  00680A  D003               	goto	L27
 16188  00680C                     l16465:
 16189                           
 16190                           ; BSR set to: 1
 16191                           ;main.c: 1427: baud = 42;
 16192  00680C  0E2A               	movlw	42
 16193  00680E  D001               	goto	L27
 16194  006810                     l16467:
 16195                           
 16196                           ; BSR set to: 1
 16197                           ;main.c: 1432: baud = 21;
 16198  006810  0E15               	movlw	21
 16199  006812                     L27:
 16200  006812  0102               	movlb	2	; () banked
 16201  006814  6FC0               	movwf	doModeVerbose@baud& (0+255),b
 16202  006816  6BC1               	clrf	(doModeVerbose@baud+1)& (0+255),b
 16203  006818  6BC2               	clrf	(doModeVerbose@baud+2)& (0+255),b
 16204  00681A  6BC3               	clrf	(doModeVerbose@baud+3)& (0+255),b
 16205                           
 16206                           ;main.c: 1433: break;
 16207  00681C  D02C               	goto	l16473
 16208  00681E                     l16471:
 16209                           
 16210                           ; BSR set to: 2
 16211  00681E  C2C0  F1B9         	movff	doModeVerbose@baud,??_doModeVerbose
 16212  006822  C2C1  F1BA         	movff	doModeVerbose@baud+1,??_doModeVerbose+1
 16213  006826  C2C2  F1BB         	movff	doModeVerbose@baud+2,??_doModeVerbose+2
 16214  00682A  C2C3  F1BC         	movff	doModeVerbose@baud+3,??_doModeVerbose+3
 16215                           
 16216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16217                           ; Switch size 1, requested type "space"
 16218                           ; Number of cases is 1, Range of values is 0 to 0
 16219                           ; switch strategies available:
 16220                           ; Name         Instructions Cycles
 16221                           ; simple_byte            4     3 (average)
 16222                           ;	Chosen strategy is simple_byte
 16223  00682E  0101               	movlb	1	; () banked
 16224  006830  51BC               	movf	(??_doModeVerbose+3)& (0+255),w,b
 16225  006832  E01E               	bz	l19157
 16226  006834  D7ED               	goto	l16467
 16227  006836                     l19155:
 16228                           
 16229                           ; BSR set to: 1
 16230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16231                           ; Switch size 1, requested type "space"
 16232                           ; Number of cases is 1, Range of values is 0 to 0
 16233                           ; switch strategies available:
 16234                           ; Name         Instructions Cycles
 16235                           ; simple_byte            4     3 (average)
 16236                           ;	Chosen strategy is simple_byte
 16237  006836  51BA               	movf	(??_doModeVerbose+1)& (0+255),w,b
 16238  006838  E1EB               	bnz	l16467
 16239                           
 16240                           ; BSR set to: 1
 16241                           ; Switch size 1, requested type "space"
 16242                           ; Number of cases is 13, Range of values is 0 to 12
 16243                           ; switch strategies available:
 16244                           ; Name         Instructions Cycles
 16245                           ; simple_byte           40    21 (average)
 16246                           ;	Chosen strategy is simple_byte
 16247  00683A  51B9               	movf	??_doModeVerbose& (0+255),w,b
 16248  00683C  E0E9               	bz	l16467
 16249  00683E  0A01               	xorlw	1	; case 1
 16250  006840  E0D5               	bz	l16443
 16251  006842  0A03               	xorlw	3	; case 2
 16252  006844  E0D5               	bz	l16445
 16253  006846  0A01               	xorlw	1	; case 3
 16254  006848  E0D5               	bz	l16447
 16255  00684A  0A07               	xorlw	7	; case 4
 16256  00684C  E0D5               	bz	l16449
 16257  00684E  0A01               	xorlw	1	; case 5
 16258  006850  E0D3               	bz	l16449
 16259  006852  0A03               	xorlw	3	; case 6
 16260  006854  E0D3               	bz	l16453
 16261  006856  0A01               	xorlw	1	; case 7
 16262  006858  E0D3               	bz	l16455
 16263  00685A  0A0F               	xorlw	15	; case 8
 16264  00685C  E0D1               	bz	l16455
 16265  00685E  0A01               	xorlw	1	; case 9
 16266  006860  E0D1               	bz	l16459
 16267  006862  0A03               	xorlw	3	; case 10
 16268  006864  E0D1               	bz	l16461
 16269  006866  0A01               	xorlw	1	; case 11
 16270  006868  E0CD               	bz	l16459
 16271  00686A  0A07               	xorlw	7	; case 12
 16272  00686C  E0CF               	bz	l16465
 16273  00686E  D7D0               	goto	l16467
 16274  006870                     l19157:
 16275                           
 16276                           ; BSR set to: 1
 16277                           ; Switch size 1, requested type "space"
 16278                           ; Number of cases is 1, Range of values is 0 to 0
 16279                           ; switch strategies available:
 16280                           ; Name         Instructions Cycles
 16281                           ; simple_byte            4     3 (average)
 16282                           ;	Chosen strategy is simple_byte
 16283  006870  51BB               	movf	(??_doModeVerbose+2)& (0+255),w,b
 16284  006872  E0E1               	bz	l19155
 16285  006874  D7CD               	goto	l16467
 16286  006876                     l16473:
 16287                           
 16288                           ; BSR set to: 2
 16289                           ;main.c: 1437: putsUSART((char *) "+OK - New baudrate will be set.\r\n");
 16290  006876  0E76               	movlw	high STR_166
 16291  006878  6E21               	movwf	?_putsUSART+1,c
 16292  00687A  0E04               	movlw	low STR_166
 16293  00687C  6E20               	movwf	?_putsUSART,c
 16294  00687E  EC03  F007         	call	_putsUSART	;wreg free
 16295                           
 16296                           ;main.c: 1438: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 16297  006882  0E4F               	movlw	79
 16298  006884  16AB               	andwf	4011,f,c	;volatile
 16299  006886  9AAC               	bcf	4012,5,c	;volatile
 16300  006888  0ECF               	movlw	207
 16301  00688A  169D               	andwf	3997,f,c	;volatile
 16302                           
 16303                           ;main.c: 1439: OpenUSART( 0b01111111 &
 16304                           ;main.c: 1440: 0b11111111 &
 16305                           ;main.c: 1441: 0b11111110 &
 16306                           ;main.c: 1442: 0b11111101 &
 16307                           ;main.c: 1443: 0b11111111,
 16308                           ;main.c: 1444: baud );
 16309  00688C  C2C0  F01F         	movff	doModeVerbose@baud,?_OpenUSART
 16310  006890  C2C1  F020         	movff	doModeVerbose@baud+1,?_OpenUSART+1
 16311  006894  0E7C               	movlw	124
 16312  006896  EC58  F007         	call	_OpenUSART
 16313                           
 16314                           ;main.c: 1445: }
 16315  00689A  D03E               	goto	l16499
 16316  00689C                     l16483:
 16317                           
 16318                           ; BSR set to: 1
 16319                           ;main.c: 1447: else if (cmdbuf == stristr(cmdbuf, "DEFAULTS")) {
 16320  00689C  0E01               	movlw	high _cmdbuf
 16321  00689E  0100               	movlb	0	; () banked
 16322  0068A0  6F67               	movwf	(?_stristr+1)& (0+255),b
 16323  0068A2  0E05               	movlw	low _cmdbuf
 16324  0068A4  6F66               	movwf	?_stristr& (0+255),b
 16325  0068A6  0E7B               	movlw	high STR_167
 16326  0068A8  6F69               	movwf	(?_stristr+3)& (0+255),b
 16327  0068AA  0EB8               	movlw	low STR_167
 16328  0068AC  6F68               	movwf	(?_stristr+2)& (0+255),b
 16329  0068AE  EC8D  F009         	call	_stristr	;wreg free
 16330  0068B2  D83E               	call	PL2	;call to abstracted procedure
 16331  0068B4  E104               	bnz	u20405
 16332  0068B6  0100               	movlb	0	; () banked
 16333  0068B8  5166               	movf	?_stristr& (0+255),w,b
 16334  0068BA  0101               	movlb	1	; () banked
 16335  0068BC  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 16336  0068BE                     u20405:
 16337  0068BE  E103               	bnz	l16487
 16338                           
 16339                           ; BSR set to: 1
 16340                           ;main.c: 1448: vscp_restoreDefaults();
 16341  0068C0  EC46  F004         	call	_vscp_restoreDefaults	;wreg free
 16342                           
 16343                           ;main.c: 1449: }
 16344  0068C4  D029               	goto	l16499
 16345  0068C6                     l16487:
 16346                           
 16347                           ; BSR set to: 1
 16348                           ;main.c: 1451: else if (cmdbuf == stristr(cmdbuf, "?")) {
 16349  0068C6  0E01               	movlw	high _cmdbuf
 16350  0068C8  0100               	movlb	0	; () banked
 16351  0068CA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16352  0068CC  0E05               	movlw	low _cmdbuf
 16353  0068CE  6F66               	movwf	?_stristr& (0+255),b
 16354  0068D0  0E7C               	movlw	high STR_168
 16355  0068D2  6F69               	movwf	(?_stristr+3)& (0+255),b
 16356  0068D4  0EFD               	movlw	low STR_168
 16357  0068D6  6F68               	movwf	(?_stristr+2)& (0+255),b
 16358  0068D8  EC8D  F009         	call	_stristr	;wreg free
 16359  0068DC  D829               	call	PL2	;call to abstracted procedure
 16360  0068DE  E104               	bnz	u20415
 16361  0068E0  0100               	movlb	0	; () banked
 16362  0068E2  5166               	movf	?_stristr& (0+255),w,b
 16363  0068E4  0101               	movlb	1	; () banked
 16364  0068E6  19B9               	xorwf	??_doModeVerbose& (0+255),w,b
 16365  0068E8                     u20415:
 16366  0068E8  E017               	bz	l16499
 16367                           
 16368                           ; BSR set to: 1
 16369                           ;main.c: 1454: else {
 16370                           ;main.c: 1455: putsUSART((char *) "-ERROR - Unknown 'SET' command\r\n");
 16371  0068EA  0E76               	movlw	high STR_169
 16372  0068EC  6E21               	movwf	?_putsUSART+1,c
 16373  0068EE  0E8A               	movlw	low STR_169
 16374  0068F0  6E20               	movwf	?_putsUSART,c
 16375  0068F2  EC03  F007         	call	_putsUSART	;wreg free
 16376  0068F6  D010               	goto	l16499
 16377  0068F8                     l16493:
 16378                           
 16379                           ; BSR set to: 1
 16380                           ;main.c: 1459: else {
 16381                           ;main.c: 1460: if ( 0x0d == cmdbuf[ 0 ] ) {
 16382  0068F8  5105               	movf	_cmdbuf& (0+255),w,b
 16383  0068FA  0A0D               	xorlw	13
 16384  0068FC  E107               	bnz	l16497
 16385                           
 16386                           ; BSR set to: 1
 16387                           ;main.c: 1461: putsUSART((char *) "+OK\r\n");
 16388  0068FE  0E7C               	movlw	high STR_9
 16389  006900  6E21               	movwf	?_putsUSART+1,c
 16390  006902  0E6B               	movlw	low STR_9
 16391  006904  6E20               	movwf	?_putsUSART,c
 16392  006906  EC03  F007         	call	_putsUSART	;wreg free
 16393                           
 16394                           ;main.c: 1462: }
 16395  00690A  D006               	goto	l16499
 16396  00690C                     l16497:
 16397                           
 16398                           ; BSR set to: 1
 16399                           ;main.c: 1463: else {
 16400                           ;main.c: 1464: putsUSART((char *) "-ERROR - Unknown command\r\n");
 16401  00690C  0E77               	movlw	high STR_171
 16402  00690E  6E21               	movwf	?_putsUSART+1,c
 16403  006910  0E99               	movlw	low STR_171
 16404  006912  6E20               	movwf	?_putsUSART,c
 16405  006914  EC03  F007         	call	_putsUSART	;wreg free
 16406  006918                     l16499:
 16407                           
 16408                           ;main.c: 1465: }
 16409                           ;main.c: 1466: }
 16410                           ;main.c: 1468: memset( cmdbuf, 0, sizeof( cmdbuf ) );
 16411  006918  0101               	movlb	1	; () banked
 16412  00691A  0E01               	movlw	high _cmdbuf
 16413  00691C  6E20               	movwf	?_memset+1,c
 16414  00691E  0E05               	movlw	low _cmdbuf
 16415  006920  ECBD  F00B         	call	PL26	;call to abstracted procedure
 16416  006924  ECE8  F004         	call	_memset	;wreg free
 16417                           
 16418                           ;main.c: 1469: pos = 0;
 16419  006928  0101               	movlb	1	; () banked
 16420  00692A  6B03               	clrf	_pos& (0+255),b
 16421  00692C                     l16503:
 16422                           
 16423                           ;main.c: 1470: }
 16424                           ;main.c: 1471: }
 16425                           ;main.c: 1474: (INTCONbits.GIE = 1);
 16426  00692C  8EF2               	bsf	intcon,7,c	;volatile
 16427  00692E                     l586:
 16428  00692E  0012               	return	
 16429  006930                     __end_of_doModeVerbose:
 16430                           	opt stack 0
 16431  006930                     PL2:
 16432                           	opt stack 19
 16433  006930  0E05               	movlw	low _cmdbuf
 16434  006932  0101               	movlb	1	; () banked
 16435  006934  6FB9               	movwf	??_doModeVerbose& (0+255),b
 16436  006936  0E01               	movlw	high _cmdbuf
 16437  006938  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 16438  00693A  0100               	movlb	0	; () banked
 16439  00693C  5167               	movf	(?_stristr+1)& (0+255),w,b
 16440  00693E  0101               	movlb	1	; () banked
 16441  006940  19BA               	xorwf	(??_doModeVerbose+1)& (0+255),w,b
 16442  006942  0012               	return	
 16443  006944                     __end_ofPL2:
 16444                           	opt stack 0
 16445  006944                     PL4:
 16446                           	opt stack 19
 16447  006944  0100               	movlb	0	; () banked
 16448  006946  6B65               	clrf	(?_strtok+1)& (0+255),b
 16449  006948  6B64               	clrf	?_strtok& (0+255),b
 16450  00694A  0E7C               	movlw	high STR_30
 16451  00694C  6F67               	movwf	(?_strtok+3)& (0+255),b
 16452  00694E  0EF5               	movlw	low STR_30
 16453  006950  6F66               	movwf	(?_strtok+2)& (0+255),b
 16454  006952  0012               	return	
 16455  006954                     __end_ofPL4:
 16456                           	opt stack 0
 16457  006954                     PL6:
 16458                           	opt stack 19
 16459  006954  6B65               	clrf	(?_strtok+1)& (0+255),b
 16460  006956  6B64               	clrf	?_strtok& (0+255),b
 16461  006958  0E7C               	movlw	high STR_30
 16462  00695A  6F67               	movwf	(?_strtok+3)& (0+255),b
 16463  00695C  0EF5               	movlw	low STR_30
 16464  00695E  6F66               	movwf	(?_strtok+2)& (0+255),b
 16465  006960  0012               	return	
 16466  006962                     __end_ofPL6:
 16467                           	opt stack 0
 16468  006962                     PL8:
 16469                           	opt stack 19
 16470  006962  0E01               	movlw	high _cmdbuf
 16471  006964  6E20               	movwf	?_strcpy+1,c
 16472  006966  0E05               	movlw	low _cmdbuf
 16473  006968  6E1F               	movwf	?_strcpy,c
 16474  00696A  0E0A               	movlw	low (_cmdbuf+5)
 16475  00696C  6FB9               	movwf	??_doModeVerbose& (0+255),b
 16476  00696E  0E01               	movlw	high (_cmdbuf+5)
 16477  006970  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 16478  006972  C1B9  F021         	movff	??_doModeVerbose,?_strcpy+2
 16479  006976  C1BA  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16480  00697A  0012               	return	
 16481  00697C                     __end_ofPL8:
 16482                           	opt stack 0
 16483  00697C                     PL12:
 16484                           	opt stack 19
 16485  00697C  6BC2               	clrf	(??_doModeVerbose+9)& (0+255),b
 16486  00697E  6BC3               	clrf	(??_doModeVerbose+10)& (0+255),b
 16487  006980  6BC4               	clrf	(??_doModeVerbose+11)& (0+255),b
 16488  006982  0E1A               	movlw	26
 16489  006984                     u20085:
 16490  006984  90D8               	bcf	status,0,c
 16491  006986  37C1               	rlcf	(??_doModeVerbose+8)& (0+255),f,b
 16492  006988  37C2               	rlcf	(??_doModeVerbose+9)& (0+255),f,b
 16493  00698A  37C3               	rlcf	(??_doModeVerbose+10)& (0+255),f,b
 16494  00698C  37C4               	rlcf	(??_doModeVerbose+11)& (0+255),f,b
 16495  00698E  2EE8               	decfsz	wreg,f,c
 16496  006990  D7F9               	goto	u20085
 16497  006992  51BD               	movf	(??_doModeVerbose+4)& (0+255),w,b
 16498  006994  11C1               	iorwf	(??_doModeVerbose+8)& (0+255),w,b
 16499  006996  6FC5               	movwf	(??_doModeVerbose+12)& (0+255),b
 16500  006998  51BE               	movf	(??_doModeVerbose+5)& (0+255),w,b
 16501  00699A  11C2               	iorwf	(??_doModeVerbose+9)& (0+255),w,b
 16502  00699C  6FC6               	movwf	(??_doModeVerbose+13)& (0+255),b
 16503  00699E  51BF               	movf	(??_doModeVerbose+6)& (0+255),w,b
 16504  0069A0  11C3               	iorwf	(??_doModeVerbose+10)& (0+255),w,b
 16505  0069A2  6FC7               	movwf	(??_doModeVerbose+14)& (0+255),b
 16506  0069A4  51C0               	movf	(??_doModeVerbose+7)& (0+255),w,b
 16507  0069A6  11C4               	iorwf	(??_doModeVerbose+11)& (0+255),w,b
 16508  0069A8  6FC8               	movwf	(??_doModeVerbose+15)& (0+255),b
 16509  0069AA  51B9               	movf	??_doModeVerbose& (0+255),w,b
 16510  0069AC  11C5               	iorwf	(??_doModeVerbose+12)& (0+255),w,b
 16511  0069AE  6FC9               	movwf	(??_doModeVerbose+16)& (0+255),b
 16512  0069B0  51BA               	movf	(??_doModeVerbose+1)& (0+255),w,b
 16513  0069B2  11C6               	iorwf	(??_doModeVerbose+13)& (0+255),w,b
 16514  0069B4  6FCA               	movwf	(??_doModeVerbose+17)& (0+255),b
 16515  0069B6  51BB               	movf	(??_doModeVerbose+2)& (0+255),w,b
 16516  0069B8  11C7               	iorwf	(??_doModeVerbose+14)& (0+255),w,b
 16517  0069BA  6FCB               	movwf	(??_doModeVerbose+18)& (0+255),b
 16518  0069BC  51BC               	movf	(??_doModeVerbose+3)& (0+255),w,b
 16519  0069BE  11C8               	iorwf	(??_doModeVerbose+15)& (0+255),w,b
 16520  0069C0  6FCC               	movwf	(??_doModeVerbose+19)& (0+255),b
 16521  0069C2  0102               	movlb	2	; () banked
 16522  0069C4  0012               	return	
 16523  0069C6                     __end_ofPL12:
 16524                           	opt stack 0
 16525  0069C6                     PL20:
 16526                           	opt stack 19
 16527  0069C6  0101               	movlb	1	; () banked
 16528  0069C8  0E01               	movlw	high _cmdbuf
 16529  0069CA  6E20               	movwf	?_strcpy+1,c
 16530  0069CC  0E05               	movlw	low _cmdbuf
 16531  0069CE  6E1F               	movwf	?_strcpy,c
 16532  0069D0  0E0D               	movlw	low (_cmdbuf+8)
 16533  0069D2  6FB9               	movwf	??_doModeVerbose& (0+255),b
 16534  0069D4  0E01               	movlw	high (_cmdbuf+8)
 16535  0069D6  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 16536  0069D8  C1B9  F021         	movff	??_doModeVerbose,?_strcpy+2
 16537  0069DC  C1BA  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16538  0069E0  0012               	return	
 16539  0069E2                     __end_ofPL20:
 16540                           	opt stack 0
 16541  0069E2                     PL32:
 16542                           	opt stack 19
 16543  0069E2  0100               	movlb	0	; () banked
 16544  0069E4  6B65               	clrf	(?_strtok+1)& (0+255),b
 16545  0069E6  6B64               	clrf	?_strtok& (0+255),b
 16546  0069E8  0E7B               	movlw	high (STR_57+8)
 16547  0069EA  6F67               	movwf	(?_strtok+3)& (0+255),b
 16548  0069EC  0E73               	movlw	low (STR_57+8)
 16549  0069EE  6F66               	movwf	(?_strtok+2)& (0+255),b
 16550  0069F0  0012               	return	
 16551  0069F2                     __end_ofPL32:
 16552                           	opt stack 0
 16553  0069F2                     PL36:
 16554                           	opt stack 19
 16555  0069F2  0E01               	movlw	high _cmdbuf
 16556  0069F4  0100               	movlb	0	; () banked
 16557  0069F6  6F65               	movwf	(?_strtok+1)& (0+255),b
 16558  0069F8  0E05               	movlw	low _cmdbuf
 16559  0069FA  6F64               	movwf	?_strtok& (0+255),b
 16560  0069FC  0E7C               	movlw	high STR_30
 16561  0069FE  6F67               	movwf	(?_strtok+3)& (0+255),b
 16562  006A00  0EF5               	movlw	low STR_30
 16563  006A02  6F66               	movwf	(?_strtok+2)& (0+255),b
 16564  006A04  0012               	return	
 16565  006A06                     __end_ofPL36:
 16566                           	opt stack 0
 16567  006A06                     PL44:
 16568                           	opt stack 19
 16569  006A06  0100               	movlb	0	; () banked
 16570  006A08  6F65               	movwf	(?_strtok+1)& (0+255),b
 16571  006A0A  0E05               	movlw	low _cmdbuf
 16572  006A0C  6F64               	movwf	?_strtok& (0+255),b
 16573  006A0E  0E7B               	movlw	high (STR_57+8)
 16574  006A10  6F67               	movwf	(?_strtok+3)& (0+255),b
 16575  006A12  0E73               	movlw	low (STR_57+8)
 16576  006A14  6F66               	movwf	(?_strtok+2)& (0+255),b
 16577  006A16  0012               	return	
 16578  006A18                     __end_ofPL44:
 16579                           	opt stack 0
 16580  006A18                     PL46:
 16581                           	opt stack 19
 16582  006A18  0102               	movlb	2	; () banked
 16583  006A1A  51BD               	movf	doModeVerbose@i_1288& (0+255),w,b
 16584  006A1C  C2BC  F1B9         	movff	doModeVerbose@reg,??_doModeVerbose
 16585  006A20  0101               	movlb	1	; () banked
 16586  006A22  6BBA               	clrf	(??_doModeVerbose+1)& (0+255),b
 16587  006A24  27B9               	addwf	??_doModeVerbose& (0+255),f,b
 16588  006A26  0E00               	movlw	0
 16589  006A28  23BA               	addwfc	(??_doModeVerbose+1)& (0+255),f,b
 16590  006A2A  51B9               	movf	??_doModeVerbose& (0+255),w,b
 16591  006A2C  0100               	movlb	0	; () banked
 16592  006A2E  6F71               	movwf	(?_sprintf+4)& (0+255),b
 16593  006A30  6B72               	clrf	(?_sprintf+5)& (0+255),b
 16594  006A32  0012               	return	
 16595  006A34                     __end_ofPL46:
 16596                           	opt stack 0
 16597  006A34                     PL52:
 16598                           	opt stack 19
 16599  006A34  0101               	movlb	1	; () banked
 16600  006A36  6BBA               	clrf	(??_doModeVerbose+1)& (0+255),b
 16601  006A38  6BBB               	clrf	(??_doModeVerbose+2)& (0+255),b
 16602  006A3A  6BBC               	clrf	(??_doModeVerbose+3)& (0+255),b
 16603  006A3C  C1BB  F1BC         	movff	??_doModeVerbose+2,??_doModeVerbose+3
 16604  006A40  C1BA  F1BB         	movff	??_doModeVerbose+1,??_doModeVerbose+2
 16605  006A44  C1B9  F1BA         	movff	??_doModeVerbose,??_doModeVerbose+1
 16606  006A48  6BB9               	clrf	??_doModeVerbose& (0+255),b
 16607  006A4A  0102               	movlb	2	; () banked
 16608  006A4C  0012               	return	
 16609  006A4E                     __end_ofPL52:
 16610                           	opt stack 0
 16611  006A4E                     PL66:
 16612                           	opt stack 19
 16613  006A4E  6E20               	movwf	?_strcpy+1,c
 16614  006A50  0E05               	movlw	low _cmdbuf
 16615  006A52  6E1F               	movwf	?_strcpy,c
 16616  006A54  0E0F               	movlw	low (_cmdbuf+10)
 16617  006A56  6FB9               	movwf	??_doModeVerbose& (0+255),b
 16618  006A58  0E01               	movlw	high (_cmdbuf+10)
 16619  006A5A  6FBA               	movwf	(??_doModeVerbose+1)& (0+255),b
 16620  006A5C  C1B9  F021         	movff	??_doModeVerbose,?_strcpy+2
 16621  006A60  C1BA  F022         	movff	??_doModeVerbose+1,?_strcpy+3
 16622  006A64  0012               	return	
 16623  006A66                     __end_ofPL66:
 16624                           	opt stack 0
 16625  006A66                     PL70:
 16626                           	opt stack 19
 16627  006A66  6E21               	movwf	?__CANIDToRegs,c
 16628  006A68  C2CC  F023         	movff	doModeVerbose@id_1422,?__CANIDToRegs+2
 16629  006A6C  C2CD  F024         	movff	doModeVerbose@id_1422+1,?__CANIDToRegs+3
 16630  006A70  C2CE  F025         	movff	doModeVerbose@id_1422+2,?__CANIDToRegs+4
 16631  006A74  C2CF  F026         	movff	doModeVerbose@id_1422+3,?__CANIDToRegs+5
 16632  006A78  0E01               	movlw	1
 16633  006A7A  6E27               	movwf	?__CANIDToRegs+6,c
 16634  006A7C  0C01               	retlw	1
 16635  006A7E                     __end_ofPL70:
 16636                           	opt stack 0
 16637  006A7E                     PL72:
 16638                           	opt stack 19
 16639  006A7E  0101               	movlb	1	; () banked
 16640  006A80  6FBE               	movwf	(??_doModeVerbose+5)& (0+255),b
 16641  006A82  6BBF               	clrf	(??_doModeVerbose+6)& (0+255),b
 16642  006A84  6BC0               	clrf	(??_doModeVerbose+7)& (0+255),b
 16643  006A86  C1BE  F1C0         	movff	??_doModeVerbose+5,??_doModeVerbose+7
 16644  006A8A  C1BD  F1BF         	movff	??_doModeVerbose+4,??_doModeVerbose+6
 16645  006A8E  6BBE               	clrf	(??_doModeVerbose+5)& (0+255),b
 16646  006A90  6BBD               	clrf	(??_doModeVerbose+4)& (0+255),b
 16647  006A92  0012               	return	
 16648  006A94                     __end_ofPL72:
 16649                           	opt stack 0
 16650  006A94                     PL84:
 16651                           	opt stack 19
 16652  006A94  0E01               	movlw	high _cmdbuf
 16653  006A96  0100               	movlb	0	; () banked
 16654  006A98  6F67               	movwf	(?_stristr+1)& (0+255),b
 16655  006A9A  0E05               	movlw	low _cmdbuf
 16656  006A9C  6F66               	movwf	?_stristr& (0+255),b
 16657  006A9E  0E7C               	movlw	high STR_8
 16658  006AA0  6F69               	movwf	(?_stristr+3)& (0+255),b
 16659  006AA2  0EA8               	movlw	low STR_8
 16660  006AA4  6F68               	movwf	(?_stristr+2)& (0+255),b
 16661  006AA6  0012               	return	
 16662  006AA8                     __end_ofPL84:
 16663                           	opt stack 0
 16664  006AA8                     PL98:
 16665                           	opt stack 19
 16666  006AA8  0100               	movlb	0	; () banked
 16667  006AAA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16668  006AAC  0E05               	movlw	low _cmdbuf
 16669  006AAE  6F66               	movwf	?_stristr& (0+255),b
 16670  006AB0  0E7C               	movlw	high STR_10
 16671  006AB2  6F69               	movwf	(?_stristr+3)& (0+255),b
 16672  006AB4  0E49               	movlw	low STR_10
 16673  006AB6  6F68               	movwf	(?_stristr+2)& (0+255),b
 16674  006AB8  0012               	return	
 16675  006ABA                     __end_ofPL98:
 16676                           	opt stack 0
 16677  006ABA                     PL112:
 16678                           	opt stack 19
 16679  006ABA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16680  006ABC  0E05               	movlw	low _cmdbuf
 16681  006ABE  6F66               	movwf	?_stristr& (0+255),b
 16682  006AC0  0E7C               	movlw	high STR_12
 16683  006AC2  6F69               	movwf	(?_stristr+3)& (0+255),b
 16684  006AC4  0E83               	movlw	low STR_12
 16685  006AC6  6F68               	movwf	(?_stristr+2)& (0+255),b
 16686  006AC8  0012               	return	
 16687  006ACA                     __end_ofPL112:
 16688                           	opt stack 0
 16689  006ACA                     PL116:
 16690                           	opt stack 19
 16691  006ACA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16692  006ACC  0E05               	movlw	low _cmdbuf
 16693  006ACE  6F66               	movwf	?_stristr& (0+255),b
 16694  006AD0  0E7C               	movlw	high STR_156
 16695  006AD2  6F69               	movwf	(?_stristr+3)& (0+255),b
 16696  006AD4  0ED2               	movlw	low STR_156
 16697  006AD6  6F68               	movwf	(?_stristr+2)& (0+255),b
 16698  006AD8  0012               	return	
 16699  006ADA                     __end_ofPL116:
 16700                           	opt stack 0
 16701  006ADA                     PL118:
 16702                           	opt stack 19
 16703  006ADA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16704  006ADC  0E05               	movlw	low _cmdbuf
 16705  006ADE  6F66               	movwf	?_stristr& (0+255),b
 16706  006AE0  0E7B               	movlw	high (STR_18+5)
 16707  006AE2  6F69               	movwf	(?_stristr+3)& (0+255),b
 16708  006AE4  0EFE               	movlw	low (STR_18+5)
 16709  006AE6  6F68               	movwf	(?_stristr+2)& (0+255),b
 16710  006AE8  0012               	return	
 16711  006AEA                     __end_ofPL118:
 16712                           	opt stack 0
 16713  006AEA                     PL124:
 16714                           	opt stack 19
 16715  006AEA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16716  006AEC  0E05               	movlw	low _cmdbuf
 16717  006AEE  6F66               	movwf	?_stristr& (0+255),b
 16718  006AF0  0E7C               	movlw	high STR_16
 16719  006AF2  6F69               	movwf	(?_stristr+3)& (0+255),b
 16720  006AF4  0E3B               	movlw	low STR_16
 16721  006AF6  6F68               	movwf	(?_stristr+2)& (0+255),b
 16722  006AF8  0012               	return	
 16723  006AFA                     __end_ofPL124:
 16724                           	opt stack 0
 16725  006AFA                     PL128:
 16726                           	opt stack 19
 16727  006AFA  6F67               	movwf	(?_stristr+1)& (0+255),b
 16728  006AFC  0E05               	movlw	low _cmdbuf
 16729  006AFE  6F66               	movwf	?_stristr& (0+255),b
 16730  006B00  0E7B               	movlw	high STR_14
 16731  006B02  6F69               	movwf	(?_stristr+3)& (0+255),b
 16732  006B04  0EAF               	movlw	low STR_14
 16733  006B06  6F68               	movwf	(?_stristr+2)& (0+255),b
 16734  006B08  0012               	return	
 16735  006B0A                     __end_ofPL128:
 16736                           	opt stack 0
 16737                           tblptru	equ	0xFF8
 16738                           tblptrh	equ	0xFF7
 16739                           tblptrl	equ	0xFF6
 16740                           tablat	equ	0xFF5
 16741                           prodh	equ	0xFF4
 16742                           prodl	equ	0xFF3
 16743                           intcon	equ	0xFF2
 16744                           indf0	equ	0xFEF
 16745                           postinc0	equ	0xFEE
 16746                           fsr0h	equ	0xFEA
 16747                           fsr0l	equ	0xFE9
 16748                           wreg	equ	0xFE8
 16749                           indf1	equ	0xFE7
 16750                           postinc1	equ	0xFE6
 16751                           postdec1	equ	0xFE5
 16752                           fsr1h	equ	0xFE2
 16753                           fsr1l	equ	0xFE1
 16754                           indf2	equ	0xFDF
 16755                           postinc2	equ	0xFDE
 16756                           postdec2	equ	0xFDD
 16757                           plusw2	equ	0xFDB
 16758                           fsr2h	equ	0xFDA
 16759                           fsr2l	equ	0xFD9
 16760                           status	equ	0xFD8
 16761                           
 16762 ;; *************** function _writeRegisterExtended *****************
 16763 ;; Defined at:
 16764 ;;		line 2860 in file "main.c"
 16765 ;; Parameters:    Size  Location     Type
 16766 ;;  nodeid          1    wreg     unsigned char 
 16767 ;;  page            2   79[BANK0 ] unsigned short 
 16768 ;;  reg             1   81[BANK0 ] unsigned char 
 16769 ;;  timeout         2   82[BANK0 ] unsigned short 
 16770 ;;  value           2   84[BANK0 ] PTR unsigned char 
 16771 ;;		 -> doModeVerbose@value_1346(1), 
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;  nodeid          1   90[BANK0 ] unsigned char 
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  1    wreg      enum E15660
 16776 ;; Registers used:
 16777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16778 ;; Tracked objects:
 16779 ;;		On entry : F/2
 16780 ;;		On exit  : E/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16783 ;;      Params:         0       7       0       0       0       0       0
 16784 ;;      Locals:         0       1       0       0       0       0       0
 16785 ;;      Temps:          0       4       0       0       0       0       0
 16786 ;;      Totals:         0      12       0       0       0       0       0
 16787 ;;Total ram usage:       12 bytes
 16788 ;; Hardware stack levels used:    1
 16789 ;; Hardware stack levels required when called:    7
 16790 ;; This function calls:
 16791 ;;		_checkCANBusState
 16792 ;;		_sendVSCPFrame
 16793 ;;		_getVSCPFrame
 16794 ;; This function is called by:
 16795 ;;		_doModeVerbose
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text23
 16800  0025E0                     __ptext23:
 16801                           	opt stack 0
 16802  0025E0                     _writeRegisterExtended:
 16803                           	opt stack 21
 16804                           
 16805                           ;incstack = 0
 16806                           ;incstack = 0
 16807                           ;writeRegisterExtended@nodeid stored from wreg
 16808  0025E0  CFE8 F0BA          	movff	wreg,writeRegisterExtended@nodeid
 16809                           
 16810                           ; BSR set to: 2
 16811                           ;main.c: 2861: vscpData[ 0 ] = nodeid;
 16812  0025E4  C0BA  F1A5         	movff	writeRegisterExtended@nodeid,_vscpData
 16813                           
 16814                           ; BSR set to: 2
 16815                           ;main.c: 2862: vscpData[ 1 ] = page >> 8;
 16816  0025E8  0100               	movlb	0	; () banked
 16817  0025EA  51B0               	movf	(writeRegisterExtended@page+1)& (0+255),w,b
 16818  0025EC  0101               	movlb	1	; () banked
 16819  0025EE  6FA6               	movwf	(_vscpData+1)& (0+255),b
 16820                           
 16821                           ; BSR set to: 1
 16822                           ;main.c: 2863: vscpData[ 2 ] = page & 0xff;
 16823  0025F0  C0AF  F1A7         	movff	writeRegisterExtended@page,_vscpData+2
 16824                           
 16825                           ; BSR set to: 1
 16826                           ;main.c: 2864: vscpData[ 3 ] = reg;
 16827  0025F4  C0B1  F1A8         	movff	writeRegisterExtended@reg,_vscpData+3
 16828                           
 16829                           ; BSR set to: 1
 16830                           ;main.c: 2865: vscpData[ 4 ] = *value;
 16831  0025F8  C0B4  FFD9         	movff	writeRegisterExtended@value,fsr2l
 16832  0025FC  C0B5  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 16833  002600  50DF               	movf	indf2,w,c
 16834  002602  6FA9               	movwf	(_vscpData+4)& (0+255),b
 16835                           
 16836                           ; BSR set to: 1
 16837                           ;main.c: 2867: if (sendVSCPFrame(0,
 16838                           ;main.c: 2868: 38,
 16839                           ;main.c: 2869: 0,
 16840                           ;main.c: 2870: 0,
 16841                           ;main.c: 2871: 5,
 16842                           ;main.c: 2872: vscpData)) {
 16843  002604  0100               	movlb	0	; () banked
 16844  002606  6B90               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 16845  002608  6B8F               	clrf	?_sendVSCPFrame& (0+255),b
 16846  00260A  0E26               	movlw	38
 16847  00260C  6F91               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 16848  00260E  6B92               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 16849  002610  6B93               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 16850  002612  0E05               	movlw	5
 16851  002614  6F94               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 16852  002616  0E01               	movlw	high _vscpData
 16853  002618  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 16854  00261A  0EA5               	movlw	low _vscpData
 16855  00261C  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 16856  00261E  EC58  F00D         	call	_sendVSCPFrame	;wreg free
 16857  002622  0900               	iorlw	0
 16858  002624  E060               	bz	l18079
 16859                           
 16860                           ; BSR set to: 0
 16861                           ;main.c: 2874: timekeeper = 0;
 16862  002626  6BD9               	clrf	_timekeeper& (0+255),b	;volatile
 16863  002628  6BDA               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 16864  00262A  6BDB               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 16865  00262C  6BDC               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 16866                           
 16867                           ;main.c: 2875: while (timekeeper < timeout) {
 16868  00262E  D04B               	goto	l18077
 16869  002630                     l1243:
 16870                           
 16871                           ; BSR set to: 0
 16872  002630  0004               	clrwdt		;# 
 16873                           
 16874                           ;main.c: 2878: checkCANBusState();
 16875  002632  ECC5  F004         	call	_checkCANBusState	;wreg free
 16876                           
 16877                           ;main.c: 2880: if (getVSCPFrame(&vscpClass,
 16878                           ;main.c: 2881: &vscpType,
 16879                           ;main.c: 2882: &vscpNodeId,
 16880                           ;main.c: 2883: &vscpPriority,
 16881                           ;main.c: 2884: &vscpSize,
 16882                           ;main.c: 2885: vscpData)) {
 16883  002636  0E01               	movlw	high _vscpClass
 16884  002638  0100               	movlb	0	; () banked
 16885  00263A  6F6A               	movwf	(?_getVSCPFrame+1)& (0+255),b
 16886  00263C  0EAD               	movlw	low _vscpClass
 16887  00263E  6F69               	movwf	?_getVSCPFrame& (0+255),b
 16888  002640  0E01               	movlw	high _vscpType
 16889  002642  6F6C               	movwf	(?_getVSCPFrame+3)& (0+255),b
 16890  002644  0EB2               	movlw	low _vscpType
 16891  002646  6F6B               	movwf	(?_getVSCPFrame+2)& (0+255),b
 16892  002648  0E01               	movlw	high _vscpNodeId
 16893  00264A  6F6E               	movwf	(?_getVSCPFrame+5)& (0+255),b
 16894  00264C  0EAF               	movlw	low _vscpNodeId
 16895  00264E  6F6D               	movwf	(?_getVSCPFrame+4)& (0+255),b
 16896  002650  0E01               	movlw	high _vscpPriority
 16897  002652  6F70               	movwf	(?_getVSCPFrame+7)& (0+255),b
 16898  002654  0EB0               	movlw	low _vscpPriority
 16899  002656  6F6F               	movwf	(?_getVSCPFrame+6)& (0+255),b
 16900  002658  0E01               	movlw	high _vscpSize
 16901  00265A  6F72               	movwf	(?_getVSCPFrame+9)& (0+255),b
 16902  00265C  0EB1               	movlw	low _vscpSize
 16903  00265E  6F71               	movwf	(?_getVSCPFrame+8)& (0+255),b
 16904  002660  0E01               	movlw	high _vscpData
 16905  002662  6F74               	movwf	(?_getVSCPFrame+11)& (0+255),b
 16906  002664  0EA5               	movlw	low _vscpData
 16907  002666  6F73               	movwf	(?_getVSCPFrame+10)& (0+255),b
 16908  002668  EC0A  F00A         	call	_getVSCPFrame	;wreg free
 16909  00266C  0900               	iorlw	0
 16910  00266E  E02B               	bz	l18077
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;main.c: 2887: if ((nodeid == vscpNodeId) &&
 16914                           ;main.c: 2888: (5 == vscpSize) &&
 16915                           ;main.c: 2889: (0 == vscpData[ 0 ]) &&
 16916                           ;main.c: 2890: ((page >> 8) == vscpData[ 1 ]) &&
 16917                           ;main.c: 2891: ((page & 0xff) == vscpData[ 2 ]) &&
 16918                           ;main.c: 2892: (reg == vscpData[ 3 ]) &&
 16919                           ;main.c: 2893: (*value == vscpData[ 4 ])) {
 16920  002670  0101               	movlb	1	; () banked
 16921  002672  51AF               	movf	_vscpNodeId& (0+255),w,b
 16922  002674  0100               	movlb	0	; () banked
 16923  002676  63BA               	cpfseq	writeRegisterExtended@nodeid& (0+255),b
 16924  002678  D026               	goto	l18077
 16925                           
 16926                           ; BSR set to: 0
 16927  00267A  0101               	movlb	1	; () banked
 16928  00267C  51B1               	movf	_vscpSize& (0+255),w,b
 16929  00267E  0A05               	xorlw	5
 16930  002680  E122               	bnz	l18077
 16931                           
 16932                           ; BSR set to: 1
 16933  002682  67A5               	tstfsz	_vscpData& (0+255),b
 16934  002684  D020               	goto	l18077
 16935                           
 16936                           ; BSR set to: 1
 16937  002686  0100               	movlb	0	; () banked
 16938  002688  51B0               	movf	(writeRegisterExtended@page+1)& (0+255),w,b
 16939  00268A  0101               	movlb	1	; () banked
 16940  00268C  19A6               	xorwf	(_vscpData+1)& (0+255),w,b
 16941  00268E  E11B               	bnz	l18077
 16942                           
 16943                           ; BSR set to: 1
 16944  002690  0100               	movlb	0	; () banked
 16945  002692  51AF               	movf	writeRegisterExtended@page& (0+255),w,b
 16946  002694  EE21  F0A7         	lfsr	2,_vscpData+2
 16947  002698  62DF               	cpfseq	indf2,c
 16948  00269A  D015               	goto	l18077
 16949                           
 16950                           ; BSR set to: 1
 16951  00269C  51B1               	movf	writeRegisterExtended@reg& (0+255),w,b
 16952  00269E  0101               	movlb	1	; () banked
 16953  0026A0  EE21  F0A8         	lfsr	2,_vscpData+3
 16954  0026A4  62DF               	cpfseq	indf2,c
 16955  0026A6  D00F               	goto	l18077
 16956                           
 16957                           ; BSR set to: 1
 16958  0026A8  51A9               	movf	(_vscpData+4)& (0+255),w,b
 16959  0026AA  C0B4  FFD9         	movff	writeRegisterExtended@value,fsr2l
 16960  0026AE  C0B5  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 16961  0026B2  62DF               	cpfseq	indf2,c
 16962  0026B4  D008               	goto	l18077
 16963                           
 16964                           ; BSR set to: 1
 16965                           ;main.c: 2894: *value = vscpData[ 1 ];
 16966  0026B6  C0B4  FFD9         	movff	writeRegisterExtended@value,fsr2l
 16967  0026BA  C0B5  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 16968  0026BE  C1A6  FFDF         	movff	_vscpData+1,indf2
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;main.c: 2895: return 1;
 16972  0026C2  0E01               	movlw	1
 16973  0026C4  D011               	goto	l1246
 16974  0026C6                     l18077:
 16975  0026C6  0100               	movlb	0	; () banked
 16976  0026C8  51B2               	movf	writeRegisterExtended@timeout& (0+255),w,b
 16977  0026CA  6FB6               	movwf	??_writeRegisterExtended& (0+255),b
 16978  0026CC  51B3               	movf	(writeRegisterExtended@timeout+1)& (0+255),w,b
 16979  0026CE  6FB7               	movwf	(??_writeRegisterExtended+1)& (0+255),b
 16980  0026D0  6BB8               	clrf	(??_writeRegisterExtended+2)& (0+255),b
 16981  0026D2  6BB9               	clrf	(??_writeRegisterExtended+3)& (0+255),b
 16982  0026D4  51B6               	movf	??_writeRegisterExtended& (0+255),w,b
 16983  0026D6  5DD9               	subwf	_timekeeper& (0+255),w,b	;volatile
 16984  0026D8  51B7               	movf	(??_writeRegisterExtended+1)& (0+255),w,b
 16985  0026DA  59DA               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 16986  0026DC  51B8               	movf	(??_writeRegisterExtended+2)& (0+255),w,b
 16987  0026DE  59DB               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 16988  0026E0  51B9               	movf	(??_writeRegisterExtended+3)& (0+255),w,b
 16989  0026E2  59DC               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 16990  0026E4  E3A5               	bnc	l1243
 16991  0026E6                     l18079:
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;main.c: 2896: }
 16995                           ;main.c: 2898: }
 16996                           ;main.c: 2900: }
 16997                           ;main.c: 2902: }
 16998                           ;main.c: 2904: return 0;
 16999  0026E6  0E00               	movlw	0
 17000  0026E8                     l1246:
 17001  0026E8  0012               	return	
 17002  0026EA                     __end_of_writeRegisterExtended:
 17003                           	opt stack 0
 17004                           tblptru	equ	0xFF8
 17005                           tblptrh	equ	0xFF7
 17006                           tblptrl	equ	0xFF6
 17007                           tablat	equ	0xFF5
 17008                           prodh	equ	0xFF4
 17009                           prodl	equ	0xFF3
 17010                           intcon	equ	0xFF2
 17011                           indf0	equ	0xFEF
 17012                           postinc0	equ	0xFEE
 17013                           fsr0h	equ	0xFEA
 17014                           fsr0l	equ	0xFE9
 17015                           wreg	equ	0xFE8
 17016                           indf1	equ	0xFE7
 17017                           postinc1	equ	0xFE6
 17018                           postdec1	equ	0xFE5
 17019                           fsr1h	equ	0xFE2
 17020                           fsr1l	equ	0xFE1
 17021                           indf2	equ	0xFDF
 17022                           postinc2	equ	0xFDE
 17023                           postdec2	equ	0xFDD
 17024                           plusw2	equ	0xFDB
 17025                           fsr2h	equ	0xFDA
 17026                           fsr2l	equ	0xFD9
 17027                           status	equ	0xFD8
 17028                           
 17029 ;; *************** function _printBinary *****************
 17030 ;; Defined at:
 17031 ;;		line 2948 in file "main.c"
 17032 ;; Parameters:    Size  Location     Type
 17033 ;;  value           1    wreg     unsigned char 
 17034 ;; Auto vars:     Size  Location     Type
 17035 ;;  value           1   33[COMRAM] unsigned char 
 17036 ;;  i               2   34[COMRAM] int 
 17037 ;; Return value:  Size  Location     Type
 17038 ;;		None               void
 17039 ;; Registers used:
 17040 ;;		wreg, status,2, status,0, cstack
 17041 ;; Tracked objects:
 17042 ;;		On entry : F/2
 17043 ;;		On exit  : 0/0
 17044 ;;		Unchanged: 0/0
 17045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17046 ;;      Params:         0       0       0       0       0       0       0
 17047 ;;      Locals:         3       0       0       0       0       0       0
 17048 ;;      Temps:          2       0       0       0       0       0       0
 17049 ;;      Totals:         5       0       0       0       0       0       0
 17050 ;;Total ram usage:        5 bytes
 17051 ;; Hardware stack levels used:    1
 17052 ;; Hardware stack levels required when called:    4
 17053 ;; This function calls:
 17054 ;;		_WriteUSART
 17055 ;; This function is called by:
 17056 ;;		_doModeVerbose
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text24
 17061  000D76                     __ptext24:
 17062                           	opt stack 0
 17063  000D76                     _printBinary:
 17064                           	opt stack 24
 17065                           
 17066                           ;incstack = 0
 17067                           ;incstack = 0
 17068                           ;printBinary@value stored from wreg
 17069  000D76  CFE8 F022          	movff	wreg,printBinary@value
 17070                           
 17071                           ; BSR set to: 2
 17072                           ;main.c: 2949: int i;
 17073                           ;main.c: 2951: for (i = 7; i >= 0; i--) {
 17074  000D7A  6A24               	clrf	printBinary@i+1,c
 17075  000D7C  0E07               	movlw	7
 17076  000D7E  6E23               	movwf	printBinary@i,c
 17077  000D80                     l18027:
 17078                           
 17079                           ;main.c: 2952: if (value & (1 << i)) {
 17080  000D80  C023  F020         	movff	printBinary@i,??_printBinary
 17081  000D84  0E01               	movlw	1
 17082  000D86  6E21               	movwf	(??_printBinary+1)& (0+255),c
 17083  000D88  2A20               	incf	??_printBinary,f,c
 17084  000D8A  D002               	goto	u22824
 17085  000D8C                     u22825:
 17086  000D8C  90D8               	bcf	status,0,c
 17087  000D8E  3621               	rlcf	??_printBinary+1,f,c
 17088  000D90                     u22824:
 17089  000D90  2E20               	decfsz	??_printBinary,f,c
 17090  000D92  D7FC               	goto	u22825
 17091  000D94  5021               	movf	??_printBinary+1,w,c
 17092  000D96  1422               	andwf	printBinary@value,w,c
 17093  000D98  E006               	bz	l1266
 17094  000D9A                     l1262:
 17095  000D9A  A2AC               	btfss	4012,1,c	;volatile
 17096  000D9C  D7FE               	goto	l1262
 17097                           
 17098                           ;main.c: 2954: WriteUSART('1');
 17099  000D9E  0E31               	movlw	49
 17100  000DA0  EC77  F004         	call	_WriteUSART
 17101                           
 17102                           ;main.c: 2955: } else {
 17103  000DA4  D005               	goto	l18035
 17104  000DA6                     l1266:
 17105  000DA6  A2AC               	btfss	4012,1,c	;volatile
 17106  000DA8  D7FE               	goto	l1266
 17107                           
 17108                           ;main.c: 2957: WriteUSART('0');
 17109  000DAA  0E30               	movlw	48
 17110  000DAC  EC77  F004         	call	_WriteUSART
 17111  000DB0                     l18035:
 17112  000DB0  0623               	decf	printBinary@i,f,c
 17113  000DB2  A0D8               	btfss	status,0,c
 17114  000DB4  0624               	decf	printBinary@i+1,f,c
 17115  000DB6  BE24               	btfsc	printBinary@i+1,7,c
 17116  000DB8  0012               	return	
 17117  000DBA  D7E2               	goto	l18027
 17118  000DBC                     __end_of_printBinary:
 17119                           	opt stack 0
 17120                           tblptru	equ	0xFF8
 17121                           tblptrh	equ	0xFF7
 17122                           tblptrl	equ	0xFF6
 17123                           tablat	equ	0xFF5
 17124                           prodh	equ	0xFF4
 17125                           prodl	equ	0xFF3
 17126                           intcon	equ	0xFF2
 17127                           indf0	equ	0xFEF
 17128                           postinc0	equ	0xFEE
 17129                           fsr0h	equ	0xFEA
 17130                           fsr0l	equ	0xFE9
 17131                           wreg	equ	0xFE8
 17132                           indf1	equ	0xFE7
 17133                           postinc1	equ	0xFE6
 17134                           postdec1	equ	0xFE5
 17135                           fsr1h	equ	0xFE2
 17136                           fsr1l	equ	0xFE1
 17137                           indf2	equ	0xFDF
 17138                           postinc2	equ	0xFDE
 17139                           postdec2	equ	0xFDD
 17140                           plusw2	equ	0xFDB
 17141                           fsr2h	equ	0xFDA
 17142                           fsr2l	equ	0xFD9
 17143                           status	equ	0xFD8
 17144                           
 17145 ;; *************** function _readRegisterExtended *****************
 17146 ;; Defined at:
 17147 ;;		line 2757 in file "main.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;  nodeid          1    wreg     unsigned char 
 17150 ;;  page            2   79[BANK0 ] unsigned short 
 17151 ;;  reg             1   81[BANK0 ] unsigned char 
 17152 ;;  timeout         2   82[BANK0 ] unsigned short 
 17153 ;;  value           2   84[BANK0 ] PTR unsigned char 
 17154 ;;		 -> doModeVerbose@value_1370(1), doModeVerbose@value(1), 
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;  nodeid          1   90[BANK0 ] unsigned char 
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  1    wreg      enum E15660
 17159 ;; Registers used:
 17160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17161 ;; Tracked objects:
 17162 ;;		On entry : F/2
 17163 ;;		On exit  : E/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17166 ;;      Params:         0       7       0       0       0       0       0
 17167 ;;      Locals:         0       1       0       0       0       0       0
 17168 ;;      Temps:          0       4       0       0       0       0       0
 17169 ;;      Totals:         0      12       0       0       0       0       0
 17170 ;;Total ram usage:       12 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; Hardware stack levels required when called:    7
 17173 ;; This function calls:
 17174 ;;		_checkCANBusState
 17175 ;;		_sendVSCPFrame
 17176 ;;		_getVSCPFrame
 17177 ;; This function is called by:
 17178 ;;		_doModeVerbose
 17179 ;; This function uses a non-reentrant model
 17180 ;;
 17181                           
 17182                           	psect	text25
 17183  0022D6                     __ptext25:
 17184                           	opt stack 0
 17185  0022D6                     _readRegisterExtended:
 17186                           	opt stack 21
 17187                           
 17188                           ;incstack = 0
 17189                           ;incstack = 0
 17190                           ;readRegisterExtended@nodeid stored from wreg
 17191  0022D6  CFE8 F0BA          	movff	wreg,readRegisterExtended@nodeid
 17192                           
 17193                           ; BSR set to: 2
 17194                           ;main.c: 2758: vscpData[ 0 ] = nodeid;
 17195  0022DA  C0BA  F1A5         	movff	readRegisterExtended@nodeid,_vscpData
 17196                           
 17197                           ; BSR set to: 2
 17198                           ;main.c: 2759: vscpData[ 1 ] = page >> 8;
 17199  0022DE  0100               	movlb	0	; () banked
 17200  0022E0  51B0               	movf	(readRegisterExtended@page+1)& (0+255),w,b
 17201  0022E2  0101               	movlb	1	; () banked
 17202  0022E4  6FA6               	movwf	(_vscpData+1)& (0+255),b
 17203                           
 17204                           ; BSR set to: 1
 17205                           ;main.c: 2760: vscpData[ 2 ] = page & 0xff;
 17206  0022E6  C0AF  F1A7         	movff	readRegisterExtended@page,_vscpData+2
 17207                           
 17208                           ; BSR set to: 1
 17209                           ;main.c: 2761: vscpData[ 3 ] = reg;
 17210  0022EA  C0B1  F1A8         	movff	readRegisterExtended@reg,_vscpData+3
 17211                           
 17212                           ; BSR set to: 1
 17213                           ;main.c: 2762: vscpData[ 4 ] = 1;
 17214  0022EE  0E01               	movlw	1
 17215  0022F0  6FA9               	movwf	(_vscpData+4)& (0+255),b
 17216                           
 17217                           ; BSR set to: 1
 17218                           ;main.c: 2764: if ( sendVSCPFrame(0,
 17219                           ;main.c: 2765: 37,
 17220                           ;main.c: 2766: 0,
 17221                           ;main.c: 2767: 0,
 17222                           ;main.c: 2768: 5,
 17223                           ;main.c: 2769: vscpData ) ) {
 17224  0022F2  0100               	movlb	0	; () banked
 17225  0022F4  6B90               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 17226  0022F6  6B8F               	clrf	?_sendVSCPFrame& (0+255),b
 17227  0022F8  0E25               	movlw	37
 17228  0022FA  6F91               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 17229  0022FC  6B92               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 17230  0022FE  6B93               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 17231  002300  0E05               	movlw	5
 17232  002302  6F94               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 17233  002304  0E01               	movlw	high _vscpData
 17234  002306  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 17235  002308  0EA5               	movlw	low _vscpData
 17236  00230A  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 17237  00230C  EC58  F00D         	call	_sendVSCPFrame	;wreg free
 17238  002310  0900               	iorlw	0
 17239  002312  E05F               	bz	l17675
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;main.c: 2771: timekeeper = 0;
 17243  002314  6BD9               	clrf	_timekeeper& (0+255),b	;volatile
 17244  002316  6BDA               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 17245  002318  6BDB               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 17246  00231A  6BDC               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 17247                           
 17248                           ;main.c: 2772: while (timekeeper < timeout) {
 17249  00231C  D04A               	goto	l17673
 17250  00231E                     l1225:
 17251                           
 17252                           ; BSR set to: 0
 17253  00231E  0004               	clrwdt		;# 
 17254                           
 17255                           ;main.c: 2775: checkCANBusState();
 17256  002320  ECC5  F004         	call	_checkCANBusState	;wreg free
 17257                           
 17258                           ;main.c: 2777: if ( getVSCPFrame( &vscpClass,
 17259                           ;main.c: 2778: &vscpType,
 17260                           ;main.c: 2779: &vscpNodeId,
 17261                           ;main.c: 2780: &vscpPriority,
 17262                           ;main.c: 2781: &vscpSize,
 17263                           ;main.c: 2782: vscpData ) ) {
 17264  002324  0E01               	movlw	high _vscpClass
 17265  002326  0100               	movlb	0	; () banked
 17266  002328  6F6A               	movwf	(?_getVSCPFrame+1)& (0+255),b
 17267  00232A  0EAD               	movlw	low _vscpClass
 17268  00232C  6F69               	movwf	?_getVSCPFrame& (0+255),b
 17269  00232E  0E01               	movlw	high _vscpType
 17270  002330  6F6C               	movwf	(?_getVSCPFrame+3)& (0+255),b
 17271  002332  0EB2               	movlw	low _vscpType
 17272  002334  6F6B               	movwf	(?_getVSCPFrame+2)& (0+255),b
 17273  002336  0E01               	movlw	high _vscpNodeId
 17274  002338  6F6E               	movwf	(?_getVSCPFrame+5)& (0+255),b
 17275  00233A  0EAF               	movlw	low _vscpNodeId
 17276  00233C  6F6D               	movwf	(?_getVSCPFrame+4)& (0+255),b
 17277  00233E  0E01               	movlw	high _vscpPriority
 17278  002340  6F70               	movwf	(?_getVSCPFrame+7)& (0+255),b
 17279  002342  0EB0               	movlw	low _vscpPriority
 17280  002344  6F6F               	movwf	(?_getVSCPFrame+6)& (0+255),b
 17281  002346  0E01               	movlw	high _vscpSize
 17282  002348  6F72               	movwf	(?_getVSCPFrame+9)& (0+255),b
 17283  00234A  0EB1               	movlw	low _vscpSize
 17284  00234C  6F71               	movwf	(?_getVSCPFrame+8)& (0+255),b
 17285  00234E  0E01               	movlw	high _vscpData
 17286  002350  6F74               	movwf	(?_getVSCPFrame+11)& (0+255),b
 17287  002352  0EA5               	movlw	low _vscpData
 17288  002354  6F73               	movwf	(?_getVSCPFrame+10)& (0+255),b
 17289  002356  EC0A  F00A         	call	_getVSCPFrame	;wreg free
 17290  00235A  0900               	iorlw	0
 17291  00235C  E02A               	bz	l17673
 17292                           
 17293                           ; BSR set to: 0
 17294                           ;main.c: 2783: if ( ( nodeid == vscpNodeId ) &&
 17295                           ;main.c: 2784: ( 0 == vscpClass ) &&
 17296                           ;main.c: 2785: ( 39 == vscpType ) &&
 17297                           ;main.c: 2786: ( 5 == vscpSize ) &&
 17298                           ;main.c: 2787: ( 0 == vscpData[ 0 ] ) &&
 17299                           ;main.c: 2788: ( (page >> 8) == vscpData[ 1 ] ) &&
 17300                           ;main.c: 2789: ( (page & 0xff) == vscpData[ 2 ] ) &&
 17301                           ;main.c: 2790: ( reg == vscpData[ 3 ] ) ) {
 17302  00235E  0101               	movlb	1	; () banked
 17303  002360  51AF               	movf	_vscpNodeId& (0+255),w,b
 17304  002362  0100               	movlb	0	; () banked
 17305  002364  63BA               	cpfseq	readRegisterExtended@nodeid& (0+255),b
 17306  002366  D025               	goto	l17673
 17307                           
 17308                           ; BSR set to: 0
 17309  002368  0101               	movlb	1	; () banked
 17310  00236A  51AE               	movf	(_vscpClass+1)& (0+255),w,b
 17311  00236C  11AD               	iorwf	_vscpClass& (0+255),w,b
 17312  00236E  E121               	bnz	l17673
 17313                           
 17314                           ; BSR set to: 1
 17315  002370  51B2               	movf	_vscpType& (0+255),w,b
 17316  002372  0A27               	xorlw	39
 17317  002374  E11E               	bnz	l17673
 17318                           
 17319                           ; BSR set to: 1
 17320  002376  51B1               	movf	_vscpSize& (0+255),w,b
 17321  002378  0A05               	xorlw	5
 17322  00237A  E11B               	bnz	l17673
 17323                           
 17324                           ; BSR set to: 1
 17325  00237C  67A5               	tstfsz	_vscpData& (0+255),b
 17326  00237E  D019               	goto	l17673
 17327                           
 17328                           ; BSR set to: 1
 17329  002380  0100               	movlb	0	; () banked
 17330  002382  51B0               	movf	(readRegisterExtended@page+1)& (0+255),w,b
 17331  002384  0101               	movlb	1	; () banked
 17332  002386  19A6               	xorwf	(_vscpData+1)& (0+255),w,b
 17333  002388  E114               	bnz	l17673
 17334                           
 17335                           ; BSR set to: 1
 17336  00238A  0100               	movlb	0	; () banked
 17337  00238C  51AF               	movf	readRegisterExtended@page& (0+255),w,b
 17338  00238E  EE21  F0A7         	lfsr	2,_vscpData+2
 17339  002392  62DF               	cpfseq	indf2,c
 17340  002394  D00E               	goto	l17673
 17341                           
 17342                           ; BSR set to: 1
 17343  002396  51B1               	movf	readRegisterExtended@reg& (0+255),w,b
 17344  002398  0101               	movlb	1	; () banked
 17345  00239A  EE21  F0A8         	lfsr	2,_vscpData+3
 17346  00239E  62DF               	cpfseq	indf2,c
 17347  0023A0  D008               	goto	l17673
 17348                           
 17349                           ; BSR set to: 1
 17350                           ;main.c: 2791: *value = vscpData[ 4 ];
 17351  0023A2  C0B4  FFD9         	movff	readRegisterExtended@value,fsr2l
 17352  0023A6  C0B5  FFDA         	movff	readRegisterExtended@value+1,fsr2h
 17353  0023AA  C1A9  FFDF         	movff	_vscpData+4,indf2
 17354                           
 17355                           ; BSR set to: 1
 17356                           ;main.c: 2792: return 1;
 17357  0023AE  0E01               	movlw	1
 17358  0023B0  D011               	goto	l1228
 17359  0023B2                     l17673:
 17360  0023B2  0100               	movlb	0	; () banked
 17361  0023B4  51B2               	movf	readRegisterExtended@timeout& (0+255),w,b
 17362  0023B6  6FB6               	movwf	??_readRegisterExtended& (0+255),b
 17363  0023B8  51B3               	movf	(readRegisterExtended@timeout+1)& (0+255),w,b
 17364  0023BA  6FB7               	movwf	(??_readRegisterExtended+1)& (0+255),b
 17365  0023BC  6BB8               	clrf	(??_readRegisterExtended+2)& (0+255),b
 17366  0023BE  6BB9               	clrf	(??_readRegisterExtended+3)& (0+255),b
 17367  0023C0  51B6               	movf	??_readRegisterExtended& (0+255),w,b
 17368  0023C2  5DD9               	subwf	_timekeeper& (0+255),w,b	;volatile
 17369  0023C4  51B7               	movf	(??_readRegisterExtended+1)& (0+255),w,b
 17370  0023C6  59DA               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 17371  0023C8  51B8               	movf	(??_readRegisterExtended+2)& (0+255),w,b
 17372  0023CA  59DB               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 17373  0023CC  51B9               	movf	(??_readRegisterExtended+3)& (0+255),w,b
 17374  0023CE  59DC               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 17375  0023D0  E3A6               	bnc	l1225
 17376  0023D2                     l17675:
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;main.c: 2793: }
 17380                           ;main.c: 2794: }
 17381                           ;main.c: 2795: }
 17382                           ;main.c: 2796: }
 17383                           ;main.c: 2798: return 0;
 17384  0023D2  0E00               	movlw	0
 17385  0023D4                     l1228:
 17386  0023D4  0012               	return	
 17387  0023D6                     __end_of_readRegisterExtended:
 17388                           	opt stack 0
 17389                           tblptru	equ	0xFF8
 17390                           tblptrh	equ	0xFF7
 17391                           tblptrl	equ	0xFF6
 17392                           tablat	equ	0xFF5
 17393                           prodh	equ	0xFF4
 17394                           prodl	equ	0xFF3
 17395                           intcon	equ	0xFF2
 17396                           indf0	equ	0xFEF
 17397                           postinc0	equ	0xFEE
 17398                           fsr0h	equ	0xFEA
 17399                           fsr0l	equ	0xFE9
 17400                           wreg	equ	0xFE8
 17401                           indf1	equ	0xFE7
 17402                           postinc1	equ	0xFE6
 17403                           postdec1	equ	0xFE5
 17404                           fsr1h	equ	0xFE2
 17405                           fsr1l	equ	0xFE1
 17406                           indf2	equ	0xFDF
 17407                           postinc2	equ	0xFDE
 17408                           postdec2	equ	0xFDD
 17409                           plusw2	equ	0xFDB
 17410                           fsr2h	equ	0xFDA
 17411                           fsr2l	equ	0xFD9
 17412                           status	equ	0xFD8
 17413                           
 17414 ;; *************** function _strcpy *****************
 17415 ;; Defined at:
 17416 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcpy.c"
 17417 ;; Parameters:    Size  Location     Type
 17418 ;;  to              2   30[COMRAM] PTR unsigned char 
 17419 ;;		 -> cmdbuf(80), 
 17420 ;;  from            2   32[COMRAM] PTR const unsigned char 
 17421 ;;		 -> cmdbuf(80), 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;  cp              2   34[COMRAM] PTR unsigned char 
 17424 ;;		 -> cmdbuf(80), 
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  2   30[COMRAM] PTR unsigned char 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17429 ;; Tracked objects:
 17430 ;;		On entry : F/1
 17431 ;;		On exit  : F/1
 17432 ;;		Unchanged: F/0
 17433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17434 ;;      Params:         4       0       0       0       0       0       0
 17435 ;;      Locals:         2       0       0       0       0       0       0
 17436 ;;      Temps:          0       0       0       0       0       0       0
 17437 ;;      Totals:         6       0       0       0       0       0       0
 17438 ;;Total ram usage:        6 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:    3
 17441 ;; This function calls:
 17442 ;;		Nothing
 17443 ;; This function is called by:
 17444 ;;		_doModeVerbose
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           	psect	text26
 17449  0009FC                     __ptext26:
 17450                           	opt stack 0
 17451  0009FC                     _strcpy:
 17452                           	opt stack 25
 17453                           
 17454                           ; BSR set to: 1
 17455                           
 17456                           ;incstack = 0
 17457                           ;incstack = 0
 17458  0009FC  C01F  F023         	movff	strcpy@to,strcpy@cp
 17459  000A00  C020  F024         	movff	strcpy@to+1,strcpy@cp+1
 17460  000A04  D004               	goto	l17625
 17461  000A06                     l17623:
 17462                           
 17463                           ; BSR set to: 1
 17464  000A06  4A23               	infsnz	strcpy@cp,f,c
 17465  000A08  2A24               	incf	strcpy@cp+1,f,c
 17466  000A0A  4A21               	infsnz	strcpy@from,f,c
 17467  000A0C  2A22               	incf	strcpy@from+1,f,c
 17468  000A0E                     l17625:
 17469                           
 17470                           ; BSR set to: 1
 17471  000A0E  C021  FFD9         	movff	strcpy@from,fsr2l
 17472  000A12  C022  FFDA         	movff	strcpy@from+1,fsr2h
 17473  000A16  C023  FFE1         	movff	strcpy@cp,fsr1l
 17474  000A1A  C024  FFE2         	movff	strcpy@cp+1,fsr1h
 17475  000A1E  CFDF FFE7          	movff	indf2,indf1
 17476  000A22  50E7               	movf	indf1,w,c
 17477  000A24  B4D8               	btfsc	status,2,c
 17478                           
 17479                           ; BSR set to: 1
 17480  000A26  0012               	return	
 17481  000A28  D7EE               	goto	l17623
 17482  000A2A                     __end_of_strcpy:
 17483                           	opt stack 0
 17484                           tblptru	equ	0xFF8
 17485                           tblptrh	equ	0xFF7
 17486                           tblptrl	equ	0xFF6
 17487                           tablat	equ	0xFF5
 17488                           prodh	equ	0xFF4
 17489                           prodl	equ	0xFF3
 17490                           intcon	equ	0xFF2
 17491                           indf0	equ	0xFEF
 17492                           postinc0	equ	0xFEE
 17493                           fsr0h	equ	0xFEA
 17494                           fsr0l	equ	0xFE9
 17495                           wreg	equ	0xFE8
 17496                           indf1	equ	0xFE7
 17497                           postinc1	equ	0xFE6
 17498                           postdec1	equ	0xFE5
 17499                           fsr1h	equ	0xFE2
 17500                           fsr1l	equ	0xFE1
 17501                           indf2	equ	0xFDF
 17502                           postinc2	equ	0xFDE
 17503                           postdec2	equ	0xFDD
 17504                           plusw2	equ	0xFDB
 17505                           fsr2h	equ	0xFDA
 17506                           fsr2l	equ	0xFD9
 17507                           status	equ	0xFD8
 17508                           
 17509 ;; *************** function _findNodes *****************
 17510 ;; Defined at:
 17511 ;;		line 3098 in file "main.c"
 17512 ;; Parameters:    Size  Location     Type
 17513 ;;		None
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;  i               1    5[BANK1 ] unsigned char 
 17516 ;;  bDot            1    4[BANK1 ] enum E15660
 17517 ;;  value           1    3[BANK1 ] unsigned char 
 17518 ;;  nFound          1    2[BANK1 ] unsigned char 
 17519 ;; Return value:  Size  Location     Type
 17520 ;;		None               void
 17521 ;; Registers used:
 17522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17523 ;; Tracked objects:
 17524 ;;		On entry : F/1
 17525 ;;		On exit  : 0/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17528 ;;      Params:         0       0       0       0       0       0       0
 17529 ;;      Locals:         0       0       6       0       0       0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0
 17531 ;;      Totals:         0       0       6       0       0       0       0
 17532 ;;Total ram usage:        6 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    9
 17535 ;; This function calls:
 17536 ;;		_putsUSART
 17537 ;;		_WriteUSART
 17538 ;;		_printNodeFirmwareVersion
 17539 ;;		_printGUID
 17540 ;;		_printMDF
 17541 ;;		_itoa
 17542 ;;		_readRegister
 17543 ;; This function is called by:
 17544 ;;		_doModeVerbose
 17545 ;; This function uses a non-reentrant model
 17546 ;;
 17547                           
 17548                           	psect	text27
 17549  002A46                     __ptext27:
 17550                           	opt stack 0
 17551  002A46                     _findNodes:
 17552                           	opt stack 19
 17553                           
 17554                           ; BSR set to: 1
 17555                           ;main.c: 3099: uint8_t nFound = 0;
 17556                           
 17557                           ; BSR set to: 1
 17558                           ;incstack = 0
 17559                           ;incstack = 0
 17560  002A46  6BB5               	clrf	findNodes@nFound& (0+255),b
 17561                           
 17562                           ;main.c: 3100: uint8_t i;
 17563                           ;main.c: 3101: uint8_t value;
 17564                           ;main.c: 3102: BOOL bDot = 0;
 17565  002A48  6BB7               	clrf	findNodes@bDot& (0+255),b
 17566                           
 17567                           ; BSR set to: 1
 17568                           ;main.c: 3104: if ( ECAN_OP_MODE_NORMAL != (CANCON & ECAN_OP_MODE_BITS) ) {
 17569  002A4A  506F               	movf	3951,w,c	;volatile
 17570  002A4C  0BE0               	andlw	224
 17571  002A4E  E007               	bz	l17567
 17572                           
 17573                           ; BSR set to: 1
 17574                           ;main.c: 3105: putsUSART( (const char *)"-ERROR - Command only works if interface is ope
      +                          n.\r\n" );
 17575  002A50  0E70               	movlw	high STR_50
 17576  002A52  6E21               	movwf	?_putsUSART+1,c
 17577  002A54  0E31               	movlw	low STR_50
 17578  002A56  6E20               	movwf	?_putsUSART,c
 17579  002A58  EC03  F007         	call	_putsUSART	;wreg free
 17580  002A5C  D08D               	goto	l1328
 17581  002A5E                     l17567:
 17582                           
 17583                           ; BSR set to: 1
 17584                           ;main.c: 3107: }
 17585                           ;main.c: 3109: putsUSART((char *) "-----------------------------------------------------
      +                          -----------\r\n");
 17586  002A5E  0E6C               	movlw	high STR_281
 17587  002A60  6E21               	movwf	?_putsUSART+1,c
 17588  002A62  0EFA               	movlw	low STR_281
 17589  002A64  6E20               	movwf	?_putsUSART,c
 17590  002A66  EC03  F007         	call	_putsUSART	;wreg free
 17591                           
 17592                           ;main.c: 3111: for (i = 1; i != 0; i++) {
 17593  002A6A  0E01               	movlw	1
 17594  002A6C  0101               	movlb	1	; () banked
 17595  002A6E  6FB8               	movwf	findNodes@i& (0+255),b
 17596  002A70                     l1329:
 17597                           
 17598                           ; BSR set to: 1
 17599  002A70  0004               	clrwdt		;# 
 17600                           
 17601                           ;main.c: 3115: if (readRegister( i,
 17602                           ;main.c: 3116: 0xE0,
 17603                           ;main.c: 3117: rwtimeout,
 17604                           ;main.c: 3118: &value ) ) {
 17605  002A72  0EE0               	movlw	224
 17606  002A74  0100               	movlb	0	; () banked
 17607  002A76  6FAF               	movwf	?_readRegister& (0+255),b
 17608  002A78  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 17609  002A7C  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 17610  002A7E  0E01               	movlw	high findNodes@value
 17611  002A80  6FB3               	movwf	(?_readRegister+4)& (0+255),b
 17612  002A82  0EB6               	movlw	low findNodes@value
 17613  002A84  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 17614  002A86  0101               	movlb	1	; () banked
 17615  002A88  51B8               	movf	findNodes@i& (0+255),w,b
 17616  002A8A  ECAB  F00F         	call	_readRegister
 17617  002A8E  0900               	iorlw	0
 17618  002A90  E048               	bz	l17603
 17619                           
 17620                           ;main.c: 3119: if ( bDot ) {
 17621  002A92  0101               	movlb	1	; () banked
 17622  002A94  51B7               	movf	findNodes@bDot& (0+255),w,b
 17623  002A96  E006               	bz	l1332
 17624                           
 17625                           ; BSR set to: 1
 17626                           ;main.c: 3120: putsUSART((char *) "\r\n");
 17627  002A98  0E6F               	movlw	high (STR_240+51)
 17628  002A9A  6E21               	movwf	?_putsUSART+1,c
 17629  002A9C  0EF8               	movlw	low (STR_240+51)
 17630  002A9E  6E20               	movwf	?_putsUSART,c
 17631  002AA0  EC03  F007         	call	_putsUSART	;wreg free
 17632  002AA4                     l1332:
 17633                           
 17634                           ;main.c: 3121: }
 17635                           ;main.c: 3122: putsUSART((char *) "Node found with node id = ");
 17636  002AA4  0E77               	movlw	high STR_283
 17637  002AA6  6E21               	movwf	?_putsUSART+1,c
 17638  002AA8  0EB4               	movlw	low STR_283
 17639  002AAA  6E20               	movwf	?_putsUSART,c
 17640  002AAC  EC03  F007         	call	_putsUSART	;wreg free
 17641                           
 17642                           ;main.c: 3123: itoa(wrkbuf, vscpNodeId, bHex ? 16 : 10);
 17643  002AB0  0101               	movlb	1	; () banked
 17644  002AB2  6700               	tstfsz	_bHex& (0+255),b
 17645  002AB4  D003               	goto	l17585
 17646                           
 17647                           ; BSR set to: 1
 17648  002AB6  6BB4               	clrf	(_findNodes$1703+1)& (0+255),b
 17649  002AB8  0E0A               	movlw	10
 17650  002ABA  D002               	goto	L28
 17651  002ABC                     l17585:
 17652                           
 17653                           ; BSR set to: 1
 17654  002ABC  6BB4               	clrf	(_findNodes$1703+1)& (0+255),b
 17655  002ABE  0E10               	movlw	16
 17656  002AC0                     L28:
 17657  002AC0  6FB3               	movwf	_findNodes$1703& (0+255),b
 17658                           
 17659                           ; BSR set to: 1
 17660  002AC2  0E01               	movlw	high _wrkbuf
 17661  002AC4  0100               	movlb	0	; () banked
 17662  002AC6  6F6A               	movwf	(?_itoa+1)& (0+255),b
 17663  002AC8  0E55               	movlw	low _wrkbuf
 17664  002ACA  6F69               	movwf	?_itoa& (0+255),b
 17665  002ACC  C1AF  F06B         	movff	_vscpNodeId,?_itoa+2
 17666  002AD0  6B6C               	clrf	(?_itoa+3)& (0+255),b
 17667  002AD2  C1B3  F06D         	movff	_findNodes$1703,?_itoa+4
 17668  002AD6  C1B4  F06E         	movff	_findNodes$1703+1,?_itoa+5
 17669  002ADA  EC47  F005         	call	_itoa	;wreg free
 17670                           
 17671                           ; BSR set to: 0
 17672                           ;main.c: 3124: putsUSART(wrkbuf);
 17673  002ADE  0101               	movlb	1	; () banked
 17674  002AE0  0E01               	movlw	high _wrkbuf
 17675  002AE2  6E21               	movwf	?_putsUSART+1,c
 17676  002AE4  0E55               	movlw	low _wrkbuf
 17677  002AE6  6E20               	movwf	?_putsUSART,c
 17678  002AE8  EC03  F007         	call	_putsUSART	;wreg free
 17679                           
 17680                           ;main.c: 3125: putsUSART((char *) "\r\n");
 17681  002AEC  0E6F               	movlw	high (STR_240+51)
 17682  002AEE  6E21               	movwf	?_putsUSART+1,c
 17683  002AF0  0EF8               	movlw	low (STR_240+51)
 17684  002AF2  6E20               	movwf	?_putsUSART,c
 17685  002AF4  EC03  F007         	call	_putsUSART	;wreg free
 17686                           
 17687                           ;main.c: 3126: printNodeFirmwareVersion(i);
 17688  002AF8  0101               	movlb	1	; () banked
 17689  002AFA  51B8               	movf	findNodes@i& (0+255),w,b
 17690  002AFC  ECDB  F00E         	call	_printNodeFirmwareVersion
 17691                           
 17692                           ;main.c: 3127: printGUID(i);
 17693  002B00  0101               	movlb	1	; () banked
 17694  002B02  51B8               	movf	findNodes@i& (0+255),w,b
 17695  002B04  ECEB  F011         	call	_printGUID
 17696                           
 17697                           ;main.c: 3128: printMDF(i);
 17698  002B08  0101               	movlb	1	; () banked
 17699  002B0A  51B8               	movf	findNodes@i& (0+255),w,b
 17700  002B0C  EC75  F00B         	call	_printMDF
 17701                           
 17702                           ;main.c: 3129: putsUSART((char *) "-----------------------------------------------------
      +                          -----------\r\n");
 17703  002B10  0E6C               	movlw	high STR_281
 17704  002B12  6E21               	movwf	?_putsUSART+1,c
 17705  002B14  0EFA               	movlw	low STR_281
 17706  002B16  6E20               	movwf	?_putsUSART,c
 17707  002B18  EC03  F007         	call	_putsUSART	;wreg free
 17708                           
 17709                           ;main.c: 3130: nFound++;
 17710  002B1C  0101               	movlb	1	; () banked
 17711  002B1E  2BB5               	incf	findNodes@nFound& (0+255),f,b
 17712                           
 17713                           ;main.c: 3131: }
 17714  002B20  D007               	goto	l17609
 17715  002B22                     l17603:
 17716                           
 17717                           ;main.c: 3132: else {
 17718                           ;main.c: 3133: bDot = 1;
 17719  002B22  0E01               	movlw	1
 17720  002B24  0101               	movlb	1	; () banked
 17721  002B26  6FB7               	movwf	findNodes@bDot& (0+255),b
 17722                           
 17723                           ; BSR set to: 1
 17724                           ;main.c: 3134: WriteUSART('.');
 17725  002B28  0E2E               	movlw	46
 17726  002B2A  EC77  F004         	call	_WriteUSART
 17727                           
 17728                           ;main.c: 3135: (!TXSTAbits.TRMT);
 17729  002B2E  50AC               	movf	4012,w,c	;volatile
 17730  002B30                     l17609:
 17731  002B30  0101               	movlb	1	; () banked
 17732  002B32  2BB8               	incf	findNodes@i& (0+255),f,b
 17733                           
 17734                           ; BSR set to: 1
 17735  002B34  67B8               	tstfsz	findNodes@i& (0+255),b
 17736  002B36  D79C               	goto	l1329
 17737                           
 17738                           ; BSR set to: 1
 17739                           ;main.c: 3136: }
 17740                           ;main.c: 3138: }
 17741                           ;main.c: 3140: putsUSART((char *) "\r\n");
 17742  002B38  0E6F               	movlw	high (STR_240+51)
 17743  002B3A  6E21               	movwf	?_putsUSART+1,c
 17744  002B3C  0EF8               	movlw	low (STR_240+51)
 17745  002B3E  6E20               	movwf	?_putsUSART,c
 17746  002B40  EC03  F007         	call	_putsUSART	;wreg free
 17747                           
 17748                           ;main.c: 3141: itoa(wrkbuf, nFound, 10);
 17749  002B44  0E01               	movlw	high _wrkbuf
 17750  002B46  0100               	movlb	0	; () banked
 17751  002B48  6F6A               	movwf	(?_itoa+1)& (0+255),b
 17752  002B4A  0E55               	movlw	low _wrkbuf
 17753  002B4C  6F69               	movwf	?_itoa& (0+255),b
 17754  002B4E  C1B5  F06B         	movff	findNodes@nFound,?_itoa+2
 17755  002B52  6B6C               	clrf	(?_itoa+3)& (0+255),b
 17756  002B54  6B6E               	clrf	(?_itoa+5)& (0+255),b
 17757  002B56  0E0A               	movlw	10
 17758  002B58  6F6D               	movwf	(?_itoa+4)& (0+255),b
 17759  002B5A  EC47  F005         	call	_itoa	;wreg free
 17760                           
 17761                           ; BSR set to: 0
 17762                           ;main.c: 3142: putsUSART(wrkbuf);
 17763  002B5E  0101               	movlb	1	; () banked
 17764  002B60  0E01               	movlw	high _wrkbuf
 17765  002B62  6E21               	movwf	?_putsUSART+1,c
 17766  002B64  0E55               	movlw	low _wrkbuf
 17767  002B66  6E20               	movwf	?_putsUSART,c
 17768  002B68  EC03  F007         	call	_putsUSART	;wreg free
 17769                           
 17770                           ;main.c: 3143: putsUSART((char *) " node(s) found\r\n");
 17771  002B6C  0E7A               	movlw	high STR_287
 17772  002B6E  6E21               	movwf	?_putsUSART+1,c
 17773  002B70  0EC9               	movlw	low STR_287
 17774  002B72  6E20               	movwf	?_putsUSART,c
 17775  002B74  EC03  F007         	call	_putsUSART	;wreg free
 17776  002B78                     l1328:
 17777  002B78  0012               	return	
 17778  002B7A                     __end_of_findNodes:
 17779                           	opt stack 0
 17780                           tblptru	equ	0xFF8
 17781                           tblptrh	equ	0xFF7
 17782                           tblptrl	equ	0xFF6
 17783                           tablat	equ	0xFF5
 17784                           prodh	equ	0xFF4
 17785                           prodl	equ	0xFF3
 17786                           intcon	equ	0xFF2
 17787                           indf0	equ	0xFEF
 17788                           postinc0	equ	0xFEE
 17789                           fsr0h	equ	0xFEA
 17790                           fsr0l	equ	0xFE9
 17791                           wreg	equ	0xFE8
 17792                           indf1	equ	0xFE7
 17793                           postinc1	equ	0xFE6
 17794                           postdec1	equ	0xFE5
 17795                           fsr1h	equ	0xFE2
 17796                           fsr1l	equ	0xFE1
 17797                           indf2	equ	0xFDF
 17798                           postinc2	equ	0xFDE
 17799                           postdec2	equ	0xFDD
 17800                           plusw2	equ	0xFDB
 17801                           fsr2h	equ	0xFDA
 17802                           fsr2l	equ	0xFD9
 17803                           status	equ	0xFD8
 17804                           
 17805 ;; *************** function _printMDF *****************
 17806 ;; Defined at:
 17807 ;;		line 3194 in file "main.c"
 17808 ;; Parameters:    Size  Location     Type
 17809 ;;  nodeid          1    wreg     unsigned char 
 17810 ;; Auto vars:     Size  Location     Type
 17811 ;;  nodeid          1   89[BANK0 ] unsigned char 
 17812 ;;  p               2   91[BANK0 ] PTR unsigned char 
 17813 ;;		 -> wrkbuf(80), 
 17814 ;;  i               1   93[BANK0 ] unsigned char 
 17815 ;;  value           1   90[BANK0 ] unsigned char 
 17816 ;; Return value:  Size  Location     Type
 17817 ;;		None               void
 17818 ;; Registers used:
 17819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17820 ;; Tracked objects:
 17821 ;;		On entry : C/2
 17822 ;;		On exit  : 0/0
 17823 ;;		Unchanged: 0/0
 17824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17825 ;;      Params:         0       0       0       0       0       0       0
 17826 ;;      Locals:         0       5       0       0       0       0       0
 17827 ;;      Temps:          0       0       0       0       0       0       0
 17828 ;;      Totals:         0       5       0       0       0       0       0
 17829 ;;Total ram usage:        5 bytes
 17830 ;; Hardware stack levels used:    1
 17831 ;; Hardware stack levels required when called:    8
 17832 ;; This function calls:
 17833 ;;		_putsUSART
 17834 ;;		_memset
 17835 ;;		_readRegister
 17836 ;; This function is called by:
 17837 ;;		_doModeVerbose
 17838 ;;		_findNodes
 17839 ;; This function uses a non-reentrant model
 17840 ;;
 17841                           
 17842                           	psect	text28
 17843  0016EA                     __ptext28:
 17844                           	opt stack 0
 17845  0016EA                     _printMDF:
 17846                           	opt stack 20
 17847                           
 17848                           ;incstack = 0
 17849                           ;incstack = 0
 17850                           ;printMDF@nodeid stored from wreg
 17851  0016EA  CFE8 F0B9          	movff	wreg,printMDF@nodeid
 17852                           
 17853                           ;main.c: 3195: uint8_t i;
 17854                           ;main.c: 3196: uint8_t value;
 17855                           ;main.c: 3197: char *p = wrkbuf;
 17856  0016EE  0E01               	movlw	high _wrkbuf
 17857  0016F0  0100               	movlb	0	; () banked
 17858  0016F2  6FBC               	movwf	(printMDF@p+1)& (0+255),b
 17859  0016F4  0E55               	movlw	low _wrkbuf
 17860  0016F6  6FBB               	movwf	printMDF@p& (0+255),b
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;main.c: 3198: memset( wrkbuf, 0, sizeof( wrkbuf ) );
 17864  0016F8  0101               	movlb	1	; () banked
 17865  0016FA  0E01               	movlw	high _wrkbuf
 17866  0016FC  6E20               	movwf	?_memset+1,c
 17867  0016FE  0E55               	movlw	low _wrkbuf
 17868  001700  D83C               	call	PL26	;call to abstracted procedure
 17869  001702  ECE8  F004         	call	_memset	;wreg free
 17870                           
 17871                           ;main.c: 3199: putsUSART((char *) "MDF = http://");
 17872  001706  0E7B               	movlw	high STR_293
 17873  001708  6E21               	movwf	?_putsUSART+1,c
 17874  00170A  0E0B               	movlw	low STR_293
 17875  00170C  6E20               	movwf	?_putsUSART,c
 17876  00170E  EC03  F007         	call	_putsUSART	;wreg free
 17877                           
 17878                           ;main.c: 3201: for (i = 0; i < 32; i++) {
 17879  001712  0100               	movlb	0	; () banked
 17880  001714  6BBD               	clrf	printMDF@i& (0+255),b
 17881  001716                     l18155:
 17882                           
 17883                           ; BSR set to: 0
 17884                           ;main.c: 3202: if (readRegister(nodeid,
 17885                           ;main.c: 3203: 0xE0 + i,
 17886                           ;main.c: 3204: rwtimeout,
 17887                           ;main.c: 3205: &value)) {
 17888  001716  51BD               	movf	printMDF@i& (0+255),w,b
 17889  001718  0FE0               	addlw	224
 17890  00171A  6FAF               	movwf	?_readRegister& (0+255),b
 17891  00171C  0100               	movlb	0	; () banked
 17892  00171E  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 17893  001722  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 17894  001724  0E00               	movlw	high printMDF@value
 17895  001726  6FB3               	movwf	(?_readRegister+4)& (0+255),b
 17896  001728  0EBA               	movlw	low printMDF@value
 17897  00172A  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 17898  00172C  51B9               	movf	printMDF@nodeid& (0+255),w,b
 17899  00172E  ECAB  F00F         	call	_readRegister
 17900  001732  0900               	iorlw	0
 17901  001734  E00A               	bz	l18161
 17902                           
 17903                           ;main.c: 3206: *p = value;
 17904  001736  C0BB  FFD9         	movff	printMDF@p,fsr2l
 17905  00173A  C0BC  FFDA         	movff	printMDF@p+1,fsr2h
 17906  00173E  C0BA  FFDF         	movff	printMDF@value,indf2
 17907  001742                     l18159:
 17908                           
 17909                           ;main.c: 3207: p++;
 17910  001742  0100               	movlb	0	; () banked
 17911  001744  4BBB               	infsnz	printMDF@p& (0+255),f,b
 17912  001746  2BBC               	incf	(printMDF@p+1)& (0+255),f,b
 17913                           
 17914                           ;main.c: 3209: }
 17915  001748  D007               	goto	l18165
 17916  00174A                     l18161:
 17917                           
 17918                           ;main.c: 3210: else {
 17919                           ;main.c: 3211: *p = '?';
 17920  00174A  C0BB  FFD9         	movff	printMDF@p,fsr2l
 17921  00174E  C0BC  FFDA         	movff	printMDF@p+1,fsr2h
 17922  001752  0E3F               	movlw	63
 17923  001754  6EDF               	movwf	indf2,c
 17924  001756  D7F5               	goto	l18159
 17925  001758                     l18165:
 17926                           
 17927                           ; BSR set to: 0
 17928  001758  2BBD               	incf	printMDF@i& (0+255),f,b
 17929                           
 17930                           ; BSR set to: 0
 17931  00175A  0E1F               	movlw	31
 17932  00175C  65BD               	cpfsgt	printMDF@i& (0+255),b
 17933  00175E  D7DB               	goto	l18155
 17934                           
 17935                           ; BSR set to: 0
 17936                           ;main.c: 3213: }
 17937                           ;main.c: 3214: }
 17938                           ;main.c: 3216: putsUSART(wrkbuf);
 17939  001760  0101               	movlb	1	; () banked
 17940  001762  0E01               	movlw	high _wrkbuf
 17941  001764  6E21               	movwf	?_putsUSART+1,c
 17942  001766  0E55               	movlw	low _wrkbuf
 17943  001768  6E20               	movwf	?_putsUSART,c
 17944  00176A  EC03  F007         	call	_putsUSART	;wreg free
 17945                           
 17946                           ;main.c: 3217: putsUSART((char *) "\r\n");
 17947  00176E  0E6F               	movlw	high (STR_240+51)
 17948  001770  6E21               	movwf	?_putsUSART+1,c
 17949  001772  0EF8               	movlw	low (STR_240+51)
 17950  001774  6E20               	movwf	?_putsUSART,c
 17951  001776  EF03  F007         	goto	_putsUSART	;wreg free
 17952  00177A                     __end_of_printMDF:
 17953                           	opt stack 0
 17954  00177A                     PL26:
 17955                           	opt stack 19
 17956  00177A  6E1F               	movwf	?_memset,c
 17957  00177C  6A22               	clrf	?_memset+3,c
 17958  00177E  6A21               	clrf	?_memset+2,c
 17959  001780  6A24               	clrf	?_memset+5,c
 17960  001782  0E50               	movlw	80
 17961  001784  6E23               	movwf	?_memset+4,c
 17962  001786  0C50               	retlw	80
 17963  001788                     __end_ofPL26:
 17964                           	opt stack 0
 17965                           tblptru	equ	0xFF8
 17966                           tblptrh	equ	0xFF7
 17967                           tblptrl	equ	0xFF6
 17968                           tablat	equ	0xFF5
 17969                           prodh	equ	0xFF4
 17970                           prodl	equ	0xFF3
 17971                           intcon	equ	0xFF2
 17972                           indf0	equ	0xFEF
 17973                           postinc0	equ	0xFEE
 17974                           fsr0h	equ	0xFEA
 17975                           fsr0l	equ	0xFE9
 17976                           wreg	equ	0xFE8
 17977                           indf1	equ	0xFE7
 17978                           postinc1	equ	0xFE6
 17979                           postdec1	equ	0xFE5
 17980                           fsr1h	equ	0xFE2
 17981                           fsr1l	equ	0xFE1
 17982                           indf2	equ	0xFDF
 17983                           postinc2	equ	0xFDE
 17984                           postdec2	equ	0xFDD
 17985                           plusw2	equ	0xFDB
 17986                           fsr2h	equ	0xFDA
 17987                           fsr2l	equ	0xFD9
 17988                           status	equ	0xFD8
 17989                           
 17990 ;; *************** function _printGUID *****************
 17991 ;; Defined at:
 17992 ;;		line 3153 in file "main.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;  nodeid          1    wreg     unsigned char 
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;  nodeid          1   89[BANK0 ] unsigned char 
 17997 ;;  buf             3   90[BANK0 ] unsigned char [3]
 17998 ;;  i               1   94[BANK0 ] unsigned char 
 17999 ;;  value           1   93[BANK0 ] unsigned char 
 18000 ;; Return value:  Size  Location     Type
 18001 ;;		None               void
 18002 ;; Registers used:
 18003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18004 ;; Tracked objects:
 18005 ;;		On entry : C/2
 18006 ;;		On exit  : 0/0
 18007 ;;		Unchanged: 0/0
 18008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18009 ;;      Params:         0       0       0       0       0       0       0
 18010 ;;      Locals:         0       6       0       0       0       0       0
 18011 ;;      Temps:          0       0       0       0       0       0       0
 18012 ;;      Totals:         0       6       0       0       0       0       0
 18013 ;;Total ram usage:        6 bytes
 18014 ;; Hardware stack levels used:    1
 18015 ;; Hardware stack levels required when called:    8
 18016 ;; This function calls:
 18017 ;;		_putsUSART
 18018 ;;		_memset
 18019 ;;		_strlen
 18020 ;;		_itoa
 18021 ;;		_readRegister
 18022 ;;		_strcat
 18023 ;; This function is called by:
 18024 ;;		_doModeVerbose
 18025 ;;		_findNodes
 18026 ;; This function uses a non-reentrant model
 18027 ;;
 18028                           
 18029                           	psect	text29
 18030  0023D6                     __ptext29:
 18031                           	opt stack 0
 18032  0023D6                     _printGUID:
 18033                           	opt stack 20
 18034                           
 18035                           ;incstack = 0
 18036                           ;incstack = 0
 18037                           ;printGUID@nodeid stored from wreg
 18038  0023D6  CFE8 F0B9          	movff	wreg,printGUID@nodeid
 18039                           
 18040                           ;main.c: 3154: uint8_t i;
 18041                           ;main.c: 3155: uint8_t value;
 18042                           ;main.c: 3156: char buf[3];
 18043                           ;main.c: 3158: memset( wrkbuf, 0, sizeof( wrkbuf ) );
 18044  0023DA  0101               	movlb	1	; () banked
 18045  0023DC  0E01               	movlw	high _wrkbuf
 18046  0023DE  6E20               	movwf	?_memset+1,c
 18047  0023E0  0E55               	movlw	low _wrkbuf
 18048  0023E2  ECBD  F00B         	call	PL26	;call to abstracted procedure
 18049  0023E6  ECE8  F004         	call	_memset	;wreg free
 18050                           
 18051                           ;main.c: 3159: putsUSART((char *) "GUID = ");
 18052  0023EA  0E7B               	movlw	high STR_288
 18053  0023EC  6E21               	movwf	?_putsUSART+1,c
 18054  0023EE  0ED9               	movlw	low STR_288
 18055  0023F0  6E20               	movwf	?_putsUSART,c
 18056  0023F2  EC03  F007         	call	_putsUSART	;wreg free
 18057                           
 18058                           ;main.c: 3161: for (i = 0; i < 16; i++) {
 18059  0023F6  0100               	movlb	0	; () banked
 18060  0023F8  6BBE               	clrf	printGUID@i& (0+255),b
 18061  0023FA                     l18121:
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;main.c: 3162: if (readRegister(nodeid,
 18065                           ;main.c: 3163: 0xD0 + i,
 18066                           ;main.c: 3164: rwtimeout,
 18067                           ;main.c: 3165: &value)) {
 18068  0023FA  51BE               	movf	printGUID@i& (0+255),w,b
 18069  0023FC  0FD0               	addlw	208
 18070  0023FE  6FAF               	movwf	?_readRegister& (0+255),b
 18071  002400  0100               	movlb	0	; () banked
 18072  002402  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 18073  002406  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 18074  002408  0E00               	movlw	high printGUID@value
 18075  00240A  6FB3               	movwf	(?_readRegister+4)& (0+255),b
 18076  00240C  0EBD               	movlw	low printGUID@value
 18077  00240E  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 18078  002410  51B9               	movf	printGUID@nodeid& (0+255),w,b
 18079  002412  ECAB  F00F         	call	_readRegister
 18080  002416  0900               	iorlw	0
 18081  002418  E029               	bz	l18131
 18082                           
 18083                           ;main.c: 3166: itoa(buf, value, 16);
 18084  00241A  0100               	movlb	0	; () banked
 18085  00241C  0E00               	movlw	high printGUID@buf
 18086  00241E  6F6A               	movwf	(?_itoa+1)& (0+255),b
 18087  002420  0EBA               	movlw	low printGUID@buf
 18088  002422  6F69               	movwf	?_itoa& (0+255),b
 18089  002424  C0BD  F06B         	movff	printGUID@value,?_itoa+2
 18090  002428  6B6C               	clrf	(?_itoa+3)& (0+255),b
 18091  00242A  6B6E               	clrf	(?_itoa+5)& (0+255),b
 18092  00242C  0E10               	movlw	16
 18093  00242E  6F6D               	movwf	(?_itoa+4)& (0+255),b
 18094  002430  EC47  F005         	call	_itoa	;wreg free
 18095                           
 18096                           ; BSR set to: 0
 18097                           ;main.c: 3167: if (1 == strlen(buf)) {
 18098  002434  0E00               	movlw	high printGUID@buf
 18099  002436  6E20               	movwf	?_strlen+1,c
 18100  002438  0EBA               	movlw	low printGUID@buf
 18101  00243A  6E1F               	movwf	?_strlen,c
 18102  00243C  ECB9  F005         	call	_strlen	;wreg free
 18103  002440  041F               	decf	?_strlen,w,c
 18104  002442  1020               	iorwf	?_strlen+1,w,c
 18105  002444  E10F               	bnz	l18129
 18106                           
 18107                           ;main.c: 3168: strcat(wrkbuf, "0");
 18108  002446  0101               	movlb	1	; () banked
 18109  002448  0E01               	movlw	high _wrkbuf
 18110  00244A  6E20               	movwf	?_strcat+1,c
 18111  00244C  0E55               	movlw	low _wrkbuf
 18112  00244E  6E1F               	movwf	?_strcat,c
 18113  002450  0E7C               	movlw	high STR_289
 18114  002452  6E22               	movwf	?_strcat+3,c
 18115  002454  0EF9               	movlw	low STR_289
 18116  002456  6E21               	movwf	?_strcat+2,c
 18117  002458  EC2D  F007         	call	_strcat	;wreg free
 18118                           
 18119                           ;main.c: 3169: strcat(wrkbuf, buf);
 18120  00245C  D833               	call	PL96	;call to abstracted procedure
 18121  00245E  EC2D  F007         	call	_strcat	;wreg free
 18122                           
 18123                           ;main.c: 3170: } else {
 18124  002462  D00F               	goto	l18133
 18125  002464                     l18129:
 18126                           
 18127                           ;main.c: 3171: strcat(wrkbuf, buf);
 18128  002464  D82F               	call	PL96	;call to abstracted procedure
 18129  002466  EC2D  F007         	call	_strcat	;wreg free
 18130  00246A  D00B               	goto	l18133
 18131  00246C                     l18131:
 18132                           
 18133                           ;main.c: 3175: strcat(wrkbuf, "--");
 18134  00246C  0101               	movlb	1	; () banked
 18135  00246E  0E01               	movlw	high _wrkbuf
 18136  002470  6E20               	movwf	?_strcat+1,c
 18137  002472  0E55               	movlw	low _wrkbuf
 18138  002474  6E1F               	movwf	?_strcat,c
 18139  002476  0E7C               	movlw	high STR_290
 18140  002478  6E22               	movwf	?_strcat+3,c
 18141  00247A  0EE5               	movlw	low STR_290
 18142  00247C  6E21               	movwf	?_strcat+2,c
 18143  00247E  EC2D  F007         	call	_strcat	;wreg free
 18144  002482                     l18133:
 18145                           
 18146                           ;main.c: 3176: }
 18147                           ;main.c: 3178: if (i < 15) {
 18148  002482  0E0F               	movlw	15
 18149  002484  0100               	movlb	0	; () banked
 18150  002486  61BE               	cpfslt	printGUID@i& (0+255),b
 18151  002488  D00B               	goto	l18137
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;main.c: 3179: strcat(wrkbuf, ":");
 18155  00248A  0101               	movlb	1	; () banked
 18156  00248C  0E01               	movlw	high _wrkbuf
 18157  00248E  6E20               	movwf	?_strcat+1,c
 18158  002490  0E55               	movlw	low _wrkbuf
 18159  002492  6E1F               	movwf	?_strcat,c
 18160  002494  0E7C               	movlw	high STR_291
 18161  002496  6E22               	movwf	?_strcat+3,c
 18162  002498  0EFB               	movlw	low STR_291
 18163  00249A  6E21               	movwf	?_strcat+2,c
 18164  00249C  EC2D  F007         	call	_strcat	;wreg free
 18165  0024A0                     l18137:
 18166  0024A0  0100               	movlb	0	; () banked
 18167  0024A2  2BBE               	incf	printGUID@i& (0+255),f,b
 18168                           
 18169                           ; BSR set to: 0
 18170  0024A4  0E0F               	movlw	15
 18171  0024A6  65BE               	cpfsgt	printGUID@i& (0+255),b
 18172  0024A8  D7A8               	goto	l18121
 18173                           
 18174                           ; BSR set to: 0
 18175                           ;main.c: 3180: }
 18176                           ;main.c: 3182: }
 18177                           ;main.c: 3184: putsUSART(wrkbuf);
 18178  0024AA  0101               	movlb	1	; () banked
 18179  0024AC  0E01               	movlw	high _wrkbuf
 18180  0024AE  6E21               	movwf	?_putsUSART+1,c
 18181  0024B0  0E55               	movlw	low _wrkbuf
 18182  0024B2  6E20               	movwf	?_putsUSART,c
 18183  0024B4  EC03  F007         	call	_putsUSART	;wreg free
 18184                           
 18185                           ;main.c: 3185: putsUSART((char *) "\r\n");
 18186  0024B8  0E6F               	movlw	high (STR_240+51)
 18187  0024BA  6E21               	movwf	?_putsUSART+1,c
 18188  0024BC  0EF8               	movlw	low (STR_240+51)
 18189  0024BE  6E20               	movwf	?_putsUSART,c
 18190  0024C0  EF03  F007         	goto	_putsUSART	;wreg free
 18191  0024C4                     __end_of_printGUID:
 18192                           	opt stack 0
 18193  0024C4                     PL96:
 18194                           	opt stack 20
 18195  0024C4  0E01               	movlw	high _wrkbuf
 18196  0024C6  6E20               	movwf	?_strcat+1,c
 18197  0024C8  0E55               	movlw	low _wrkbuf
 18198  0024CA  6E1F               	movwf	?_strcat,c
 18199  0024CC  0100               	movlb	0	; () banked
 18200  0024CE  0E00               	movlw	high printGUID@buf
 18201  0024D0  6E22               	movwf	?_strcat+3,c
 18202  0024D2  0EBA               	movlw	low printGUID@buf
 18203  0024D4  6E21               	movwf	?_strcat+2,c
 18204  0024D6  0012               	return	
 18205  0024D8                     __end_ofPL96:
 18206                           	opt stack 0
 18207                           tblptru	equ	0xFF8
 18208                           tblptrh	equ	0xFF7
 18209                           tblptrl	equ	0xFF6
 18210                           tablat	equ	0xFF5
 18211                           prodh	equ	0xFF4
 18212                           prodl	equ	0xFF3
 18213                           intcon	equ	0xFF2
 18214                           indf0	equ	0xFEF
 18215                           postinc0	equ	0xFEE
 18216                           fsr0h	equ	0xFEA
 18217                           fsr0l	equ	0xFE9
 18218                           wreg	equ	0xFE8
 18219                           indf1	equ	0xFE7
 18220                           postinc1	equ	0xFE6
 18221                           postdec1	equ	0xFE5
 18222                           fsr1h	equ	0xFE2
 18223                           fsr1l	equ	0xFE1
 18224                           indf2	equ	0xFDF
 18225                           postinc2	equ	0xFDE
 18226                           postdec2	equ	0xFDD
 18227                           plusw2	equ	0xFDB
 18228                           fsr2h	equ	0xFDA
 18229                           fsr2l	equ	0xFD9
 18230                           status	equ	0xFD8
 18231                           
 18232 ;; *************** function _printNodeFirmwareVersion *****************
 18233 ;; Defined at:
 18234 ;;		line 3225 in file "main.c"
 18235 ;; Parameters:    Size  Location     Type
 18236 ;;  nodeid          1    wreg     unsigned char 
 18237 ;; Auto vars:     Size  Location     Type
 18238 ;;  nodeid          1   89[BANK0 ] unsigned char 
 18239 ;;  buf             3   90[BANK0 ] unsigned char [3]
 18240 ;;  i               1   94[BANK0 ] unsigned char 
 18241 ;;  value           1   93[BANK0 ] unsigned char 
 18242 ;; Return value:  Size  Location     Type
 18243 ;;		None               void
 18244 ;; Registers used:
 18245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18246 ;; Tracked objects:
 18247 ;;		On entry : C/2
 18248 ;;		On exit  : 0/0
 18249 ;;		Unchanged: 0/0
 18250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18251 ;;      Params:         0       0       0       0       0       0       0
 18252 ;;      Locals:         0       6       0       0       0       0       0
 18253 ;;      Temps:          0       0       0       0       0       0       0
 18254 ;;      Totals:         0       6       0       0       0       0       0
 18255 ;;Total ram usage:        6 bytes
 18256 ;; Hardware stack levels used:    1
 18257 ;; Hardware stack levels required when called:    8
 18258 ;; This function calls:
 18259 ;;		_putsUSART
 18260 ;;		_memset
 18261 ;;		_itoa
 18262 ;;		_readRegister
 18263 ;;		_strcat
 18264 ;; This function is called by:
 18265 ;;		_doModeVerbose
 18266 ;;		_findNodes
 18267 ;; This function uses a non-reentrant model
 18268 ;;
 18269                           
 18270                           	psect	text30
 18271  001DB6                     __ptext30:
 18272                           	opt stack 0
 18273  001DB6                     _printNodeFirmwareVersion:
 18274                           	opt stack 20
 18275                           
 18276                           ;incstack = 0
 18277                           ;incstack = 0
 18278                           ;printNodeFirmwareVersion@nodeid stored from wreg
 18279  001DB6  CFE8 F0B9          	movff	wreg,printNodeFirmwareVersion@nodeid
 18280                           
 18281                           ;main.c: 3226: uint8_t i;
 18282                           ;main.c: 3227: uint8_t value;
 18283                           ;main.c: 3228: char buf[3];
 18284                           ;main.c: 3230: memset( wrkbuf, 0, sizeof(wrkbuf) );
 18285  001DBA  0101               	movlb	1	; () banked
 18286  001DBC  0E01               	movlw	high _wrkbuf
 18287  001DBE  6E20               	movwf	?_memset+1,c
 18288  001DC0  0E55               	movlw	low _wrkbuf
 18289  001DC2  ECBD  F00B         	call	PL26	;call to abstracted procedure
 18290  001DC6  ECE8  F004         	call	_memset	;wreg free
 18291                           
 18292                           ;main.c: 3231: putsUSART((char *) "Firmware version = ");
 18293  001DCA  0E7A               	movlw	high STR_295
 18294  001DCC  6E21               	movwf	?_putsUSART+1,c
 18295  001DCE  0E4A               	movlw	low STR_295
 18296  001DD0  6E20               	movwf	?_putsUSART,c
 18297  001DD2  EC03  F007         	call	_putsUSART	;wreg free
 18298                           
 18299                           ;main.c: 3233: for (i = 0; i < 3; i++) {
 18300  001DD6  0100               	movlb	0	; () banked
 18301  001DD8  6BBE               	clrf	printNodeFirmwareVersion@i& (0+255),b
 18302  001DDA                     l18093:
 18303                           
 18304                           ; BSR set to: 0
 18305                           ;main.c: 3234: if (readRegister(nodeid,
 18306                           ;main.c: 3235: 0x94 + i,
 18307                           ;main.c: 3236: rwtimeout,
 18308                           ;main.c: 3237: &value)) {
 18309  001DDA  51BE               	movf	printNodeFirmwareVersion@i& (0+255),w,b
 18310  001DDC  0F94               	addlw	148
 18311  001DDE  6FAF               	movwf	?_readRegister& (0+255),b
 18312  001DE0  0100               	movlb	0	; () banked
 18313  001DE2  C104  F0B0         	movff	_rwtimeout,?_readRegister+1
 18314  001DE6  6BB1               	clrf	(?_readRegister+2)& (0+255),b
 18315  001DE8  0E00               	movlw	high printNodeFirmwareVersion@value
 18316  001DEA  6FB3               	movwf	(?_readRegister+4)& (0+255),b
 18317  001DEC  0EBD               	movlw	low printNodeFirmwareVersion@value
 18318  001DEE  6FB2               	movwf	(?_readRegister+3)& (0+255),b
 18319  001DF0  51B9               	movf	printNodeFirmwareVersion@nodeid& (0+255),w,b
 18320  001DF2  ECAB  F00F         	call	_readRegister
 18321  001DF6  0900               	iorlw	0
 18322  001DF8  E019               	bz	l18099
 18323                           
 18324                           ;main.c: 3238: itoa(buf, value, 16);
 18325  001DFA  0100               	movlb	0	; () banked
 18326  001DFC  0E00               	movlw	high printNodeFirmwareVersion@buf
 18327  001DFE  6F6A               	movwf	(?_itoa+1)& (0+255),b
 18328  001E00  0EBA               	movlw	low printNodeFirmwareVersion@buf
 18329  001E02  6F69               	movwf	?_itoa& (0+255),b
 18330  001E04  C0BD  F06B         	movff	printNodeFirmwareVersion@value,?_itoa+2
 18331  001E08  6B6C               	clrf	(?_itoa+3)& (0+255),b
 18332  001E0A  6B6E               	clrf	(?_itoa+5)& (0+255),b
 18333  001E0C  0E10               	movlw	16
 18334  001E0E  6F6D               	movwf	(?_itoa+4)& (0+255),b
 18335  001E10  EC47  F005         	call	_itoa	;wreg free
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;main.c: 3239: strcat(wrkbuf, buf);
 18339  001E14  0E01               	movlw	high _wrkbuf
 18340  001E16  6E20               	movwf	?_strcat+1,c
 18341  001E18  0E55               	movlw	low _wrkbuf
 18342  001E1A  6E1F               	movwf	?_strcat,c
 18343  001E1C  0100               	movlb	0	; () banked
 18344  001E1E  0E00               	movlw	high printNodeFirmwareVersion@buf
 18345  001E20  6E22               	movwf	?_strcat+3,c
 18346  001E22  0EBA               	movlw	low printNodeFirmwareVersion@buf
 18347  001E24  6E21               	movwf	?_strcat+2,c
 18348  001E26  EC2D  F007         	call	_strcat	;wreg free
 18349                           
 18350                           ;main.c: 3240: }
 18351  001E2A  D00B               	goto	l18101
 18352  001E2C                     l18099:
 18353                           
 18354                           ;main.c: 3241: else {
 18355                           ;main.c: 3242: strcat(wrkbuf, "?");
 18356  001E2C  0101               	movlb	1	; () banked
 18357  001E2E  0E01               	movlw	high _wrkbuf
 18358  001E30  6E20               	movwf	?_strcat+1,c
 18359  001E32  0E55               	movlw	low _wrkbuf
 18360  001E34  6E1F               	movwf	?_strcat,c
 18361  001E36  0E7C               	movlw	high STR_168
 18362  001E38  6E22               	movwf	?_strcat+3,c
 18363  001E3A  0EFD               	movlw	low STR_168
 18364  001E3C  6E21               	movwf	?_strcat+2,c
 18365  001E3E  EC2D  F007         	call	_strcat	;wreg free
 18366  001E42                     l18101:
 18367                           
 18368                           ;main.c: 3243: }
 18369                           ;main.c: 3245: if (i < 2) {
 18370  001E42  0E02               	movlw	2
 18371  001E44  0100               	movlb	0	; () banked
 18372  001E46  61BE               	cpfslt	printNodeFirmwareVersion@i& (0+255),b
 18373  001E48  D00B               	goto	l18105
 18374                           
 18375                           ; BSR set to: 0
 18376                           ;main.c: 3246: strcat(wrkbuf, ".");
 18377  001E4A  0101               	movlb	1	; () banked
 18378  001E4C  0E01               	movlw	high _wrkbuf
 18379  001E4E  6E20               	movwf	?_strcat+1,c
 18380  001E50  0E55               	movlw	low _wrkbuf
 18381  001E52  6E1F               	movwf	?_strcat,c
 18382  001E54  0E7C               	movlw	high STR_297
 18383  001E56  6E22               	movwf	?_strcat+3,c
 18384  001E58  0EF7               	movlw	low STR_297
 18385  001E5A  6E21               	movwf	?_strcat+2,c
 18386  001E5C  EC2D  F007         	call	_strcat	;wreg free
 18387  001E60                     l18105:
 18388  001E60  0100               	movlb	0	; () banked
 18389  001E62  2BBE               	incf	printNodeFirmwareVersion@i& (0+255),f,b
 18390                           
 18391                           ; BSR set to: 0
 18392  001E64  0E02               	movlw	2
 18393  001E66  65BE               	cpfsgt	printNodeFirmwareVersion@i& (0+255),b
 18394  001E68  D7B8               	goto	l18093
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;main.c: 3247: }
 18398                           ;main.c: 3249: }
 18399                           ;main.c: 3251: putsUSART(wrkbuf);
 18400  001E6A  0101               	movlb	1	; () banked
 18401  001E6C  0E01               	movlw	high _wrkbuf
 18402  001E6E  6E21               	movwf	?_putsUSART+1,c
 18403  001E70  0E55               	movlw	low _wrkbuf
 18404  001E72  6E20               	movwf	?_putsUSART,c
 18405  001E74  EC03  F007         	call	_putsUSART	;wreg free
 18406                           
 18407                           ;main.c: 3252: putsUSART((char *) "\r\n");
 18408  001E78  0E6F               	movlw	high (STR_240+51)
 18409  001E7A  6E21               	movwf	?_putsUSART+1,c
 18410  001E7C  0EF8               	movlw	low (STR_240+51)
 18411  001E7E  6E20               	movwf	?_putsUSART,c
 18412  001E80  EF03  F007         	goto	_putsUSART	;wreg free
 18413  001E84                     __end_of_printNodeFirmwareVersion:
 18414                           	opt stack 0
 18415                           tblptru	equ	0xFF8
 18416                           tblptrh	equ	0xFF7
 18417                           tblptrl	equ	0xFF6
 18418                           tablat	equ	0xFF5
 18419                           prodh	equ	0xFF4
 18420                           prodl	equ	0xFF3
 18421                           intcon	equ	0xFF2
 18422                           indf0	equ	0xFEF
 18423                           postinc0	equ	0xFEE
 18424                           fsr0h	equ	0xFEA
 18425                           fsr0l	equ	0xFE9
 18426                           wreg	equ	0xFE8
 18427                           indf1	equ	0xFE7
 18428                           postinc1	equ	0xFE6
 18429                           postdec1	equ	0xFE5
 18430                           fsr1h	equ	0xFE2
 18431                           fsr1l	equ	0xFE1
 18432                           indf2	equ	0xFDF
 18433                           postinc2	equ	0xFDE
 18434                           postdec2	equ	0xFDD
 18435                           plusw2	equ	0xFDB
 18436                           fsr2h	equ	0xFDA
 18437                           fsr2l	equ	0xFD9
 18438                           status	equ	0xFD8
 18439                           
 18440 ;; *************** function _strcat *****************
 18441 ;; Defined at:
 18442 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcat.c"
 18443 ;; Parameters:    Size  Location     Type
 18444 ;;  to              2   30[COMRAM] PTR unsigned char 
 18445 ;;		 -> wrkbuf(80), 
 18446 ;;  from            2   32[COMRAM] PTR const unsigned char 
 18447 ;;		 -> STR_297(2), STR_296(2), printNodeFirmwareVersion@buf(3), STR_291(2), 
 18448 ;;		 -> STR_290(3), STR_289(2), printGUID@buf(3), 
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;  cp              2   34[COMRAM] PTR unsigned char 
 18451 ;;		 -> wrkbuf(80), 
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  2   30[COMRAM] PTR unsigned char 
 18454 ;; Registers used:
 18455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18456 ;; Tracked objects:
 18457 ;;		On entry : E/1
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18461 ;;      Params:         4       0       0       0       0       0       0
 18462 ;;      Locals:         2       0       0       0       0       0       0
 18463 ;;      Temps:          0       0       0       0       0       0       0
 18464 ;;      Totals:         6       0       0       0       0       0       0
 18465 ;;Total ram usage:        6 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; Hardware stack levels required when called:    3
 18468 ;; This function calls:
 18469 ;;		Nothing
 18470 ;; This function is called by:
 18471 ;;		_printGUID
 18472 ;;		_printNodeFirmwareVersion
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text31
 18477  000E5A                     __ptext31:
 18478                           	opt stack 0
 18479  000E5A                     _strcat:
 18480                           	opt stack 24
 18481                           
 18482                           ;incstack = 0
 18483                           ;incstack = 0
 18484  000E5A  C01F  F023         	movff	strcat@to,strcat@cp
 18485  000E5E  C020  F024         	movff	strcat@to+1,strcat@cp+1
 18486  000E62  D002               	goto	l18813
 18487  000E64                     l18811:
 18488  000E64  4A23               	infsnz	strcat@cp,f,c
 18489  000E66  2A24               	incf	strcat@cp+1,f,c
 18490  000E68                     l18813:
 18491  000E68  C023  FFD9         	movff	strcat@cp,fsr2l
 18492  000E6C  C024  FFDA         	movff	strcat@cp+1,fsr2h
 18493  000E70  50DF               	movf	indf2,w,c
 18494  000E72  E005               	bz	l18817
 18495  000E74  D7F7               	goto	l18811
 18496  000E76                     l18815:
 18497  000E76  4A23               	infsnz	strcat@cp,f,c
 18498  000E78  2A24               	incf	strcat@cp+1,f,c
 18499  000E7A  4A21               	infsnz	strcat@from,f,c
 18500  000E7C  2A22               	incf	strcat@from+1,f,c
 18501  000E7E                     l18817:
 18502  000E7E  C021  FFF6         	movff	strcat@from,tblptrl
 18503  000E82  C022  FFF7         	movff	strcat@from+1,tblptrh
 18504  000E86  6AF8               	clrf	tblptru,c
 18505  000E88  C023  FFD9         	movff	strcat@cp,fsr2l
 18506  000E8C  C024  FFDA         	movff	strcat@cp+1,fsr2h
 18507  000E90  0E05               	movlw	(high __ramtop+-1)
 18508  000E92  64F7               	cpfsgt	tblptrh,c
 18509  000E94  D003               	bra	u24187
 18510  000E96  0008               	tblrd		*
 18511  000E98  50F5               	movf	tablat,w,c
 18512  000E9A  D005               	bra	u24180
 18513  000E9C                     u24187:
 18514  000E9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18515  000EA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18516  000EA4  50EF               	movf	indf0,w,c
 18517  000EA6                     u24180:
 18518  000EA6  6EDF               	movwf	indf2,c
 18519  000EA8  50DF               	movf	indf2,w,c
 18520  000EAA  B4D8               	btfsc	status,2,c
 18521  000EAC  0012               	return	
 18522  000EAE  D7E3               	goto	l18815
 18523  000EB0                     __end_of_strcat:
 18524                           	opt stack 0
 18525                           tblptru	equ	0xFF8
 18526                           tblptrh	equ	0xFF7
 18527                           tblptrl	equ	0xFF6
 18528                           tablat	equ	0xFF5
 18529                           prodh	equ	0xFF4
 18530                           prodl	equ	0xFF3
 18531                           intcon	equ	0xFF2
 18532                           indf0	equ	0xFEF
 18533                           postinc0	equ	0xFEE
 18534                           fsr0h	equ	0xFEA
 18535                           fsr0l	equ	0xFE9
 18536                           wreg	equ	0xFE8
 18537                           indf1	equ	0xFE7
 18538                           postinc1	equ	0xFE6
 18539                           postdec1	equ	0xFE5
 18540                           fsr1h	equ	0xFE2
 18541                           fsr1l	equ	0xFE1
 18542                           indf2	equ	0xFDF
 18543                           postinc2	equ	0xFDE
 18544                           postdec2	equ	0xFDD
 18545                           plusw2	equ	0xFDB
 18546                           fsr2h	equ	0xFDA
 18547                           fsr2l	equ	0xFD9
 18548                           status	equ	0xFD8
 18549                           
 18550 ;; *************** function _readRegister *****************
 18551 ;; Defined at:
 18552 ;;		line 2710 in file "main.c"
 18553 ;; Parameters:    Size  Location     Type
 18554 ;;  nodeid          1    wreg     unsigned char 
 18555 ;;  reg             1   79[BANK0 ] unsigned char 
 18556 ;;  timeout         2   80[BANK0 ] unsigned short 
 18557 ;;  value           2   82[BANK0 ] PTR unsigned char 
 18558 ;;		 -> printNodeFirmwareVersion@value(1), printMDF@value(1), printGUID@value(1), findNodes@value(1), 
 18559 ;; Auto vars:     Size  Location     Type
 18560 ;;  nodeid          1   88[BANK0 ] unsigned char 
 18561 ;; Return value:  Size  Location     Type
 18562 ;;                  1    wreg      enum E15660
 18563 ;; Registers used:
 18564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18565 ;; Tracked objects:
 18566 ;;		On entry : E/1
 18567 ;;		On exit  : E/0
 18568 ;;		Unchanged: 0/0
 18569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18570 ;;      Params:         0       5       0       0       0       0       0
 18571 ;;      Locals:         0       1       0       0       0       0       0
 18572 ;;      Temps:          0       4       0       0       0       0       0
 18573 ;;      Totals:         0      10       0       0       0       0       0
 18574 ;;Total ram usage:       10 bytes
 18575 ;; Hardware stack levels used:    1
 18576 ;; Hardware stack levels required when called:    7
 18577 ;; This function calls:
 18578 ;;		_checkCANBusState
 18579 ;;		_sendVSCPFrame
 18580 ;;		_getVSCPFrame
 18581 ;; This function is called by:
 18582 ;;		_findNodes
 18583 ;;		_printGUID
 18584 ;;		_printMDF
 18585 ;;		_printNodeFirmwareVersion
 18586 ;; This function uses a non-reentrant model
 18587 ;;
 18588                           
 18589                           	psect	text32
 18590  001F56                     __ptext32:
 18591                           	opt stack 0
 18592  001F56                     _readRegister:
 18593                           	opt stack 20
 18594                           
 18595                           ;incstack = 0
 18596                           ;incstack = 0
 18597                           ;readRegister@nodeid stored from wreg
 18598  001F56  CFE8 F0B8          	movff	wreg,readRegister@nodeid
 18599                           
 18600                           ;main.c: 2711: vscpData[ 0 ] = nodeid;
 18601  001F5A  C0B8  F1A5         	movff	readRegister@nodeid,_vscpData
 18602                           
 18603                           ;main.c: 2712: vscpData[ 1 ] = reg;
 18604  001F5E  C0AF  F1A6         	movff	readRegister@reg,_vscpData+1
 18605                           
 18606                           ;main.c: 2714: if (sendVSCPFrame(0,
 18607                           ;main.c: 2715: 9,
 18608                           ;main.c: 2716: 0,
 18609                           ;main.c: 2717: 0,
 18610                           ;main.c: 2718: 2,
 18611                           ;main.c: 2719: vscpData)) {
 18612  001F62  0100               	movlb	0	; () banked
 18613  001F64  6B90               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 18614  001F66  6B8F               	clrf	?_sendVSCPFrame& (0+255),b
 18615  001F68  0E09               	movlw	9
 18616  001F6A  6F91               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 18617  001F6C  6B92               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 18618  001F6E  6B93               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 18619  001F70  0E02               	movlw	2
 18620  001F72  6F94               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 18621  001F74  0E01               	movlw	high _vscpData
 18622  001F76  6F96               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 18623  001F78  0EA5               	movlw	low _vscpData
 18624  001F7A  6F95               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 18625  001F7C  EC58  F00D         	call	_sendVSCPFrame	;wreg free
 18626  001F80  0900               	iorlw	0
 18627  001F82  E051               	bz	l18805
 18628                           
 18629                           ; BSR set to: 0
 18630                           ;main.c: 2721: timekeeper = 0;
 18631  001F84  6BD9               	clrf	_timekeeper& (0+255),b	;volatile
 18632  001F86  6BDA               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 18633  001F88  6BDB               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 18634  001F8A  6BDC               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 18635                           
 18636                           ;main.c: 2722: while (timekeeper < timeout) {
 18637  001F8C  D03C               	goto	l18803
 18638  001F8E                     l1216:
 18639                           
 18640                           ; BSR set to: 0
 18641  001F8E  0004               	clrwdt		;# 
 18642                           
 18643                           ;main.c: 2725: checkCANBusState();
 18644  001F90  ECC5  F004         	call	_checkCANBusState	;wreg free
 18645                           
 18646                           ;main.c: 2727: if (getVSCPFrame(&vscpClass,
 18647                           ;main.c: 2728: &vscpType,
 18648                           ;main.c: 2729: &vscpNodeId,
 18649                           ;main.c: 2730: &vscpPriority,
 18650                           ;main.c: 2731: &vscpSize,
 18651                           ;main.c: 2732: vscpData)) {
 18652  001F94  0E01               	movlw	high _vscpClass
 18653  001F96  0100               	movlb	0	; () banked
 18654  001F98  6F6A               	movwf	(?_getVSCPFrame+1)& (0+255),b
 18655  001F9A  0EAD               	movlw	low _vscpClass
 18656  001F9C  6F69               	movwf	?_getVSCPFrame& (0+255),b
 18657  001F9E  0E01               	movlw	high _vscpType
 18658  001FA0  6F6C               	movwf	(?_getVSCPFrame+3)& (0+255),b
 18659  001FA2  0EB2               	movlw	low _vscpType
 18660  001FA4  6F6B               	movwf	(?_getVSCPFrame+2)& (0+255),b
 18661  001FA6  0E01               	movlw	high _vscpNodeId
 18662  001FA8  6F6E               	movwf	(?_getVSCPFrame+5)& (0+255),b
 18663  001FAA  0EAF               	movlw	low _vscpNodeId
 18664  001FAC  6F6D               	movwf	(?_getVSCPFrame+4)& (0+255),b
 18665  001FAE  0E01               	movlw	high _vscpPriority
 18666  001FB0  6F70               	movwf	(?_getVSCPFrame+7)& (0+255),b
 18667  001FB2  0EB0               	movlw	low _vscpPriority
 18668  001FB4  6F6F               	movwf	(?_getVSCPFrame+6)& (0+255),b
 18669  001FB6  0E01               	movlw	high _vscpSize
 18670  001FB8  6F72               	movwf	(?_getVSCPFrame+9)& (0+255),b
 18671  001FBA  0EB1               	movlw	low _vscpSize
 18672  001FBC  6F71               	movwf	(?_getVSCPFrame+8)& (0+255),b
 18673  001FBE  0E01               	movlw	high _vscpData
 18674  001FC0  6F74               	movwf	(?_getVSCPFrame+11)& (0+255),b
 18675  001FC2  0EA5               	movlw	low _vscpData
 18676  001FC4  6F73               	movwf	(?_getVSCPFrame+10)& (0+255),b
 18677  001FC6  EC0A  F00A         	call	_getVSCPFrame	;wreg free
 18678  001FCA  0900               	iorlw	0
 18679  001FCC  E01C               	bz	l18803
 18680                           
 18681                           ; BSR set to: 0
 18682                           ;main.c: 2733: if ((nodeid == vscpNodeId) &&
 18683                           ;main.c: 2734: (0 == vscpClass) &&
 18684                           ;main.c: 2735: (10 == vscpType) &&
 18685                           ;main.c: 2736: (2 == vscpSize) &&
 18686                           ;main.c: 2737: (reg == vscpData[ 0 ])) {
 18687  001FCE  0101               	movlb	1	; () banked
 18688  001FD0  51AF               	movf	_vscpNodeId& (0+255),w,b
 18689  001FD2  0100               	movlb	0	; () banked
 18690  001FD4  63B8               	cpfseq	readRegister@nodeid& (0+255),b
 18691  001FD6  D017               	goto	l18803
 18692                           
 18693                           ; BSR set to: 0
 18694  001FD8  0101               	movlb	1	; () banked
 18695  001FDA  51AE               	movf	(_vscpClass+1)& (0+255),w,b
 18696  001FDC  11AD               	iorwf	_vscpClass& (0+255),w,b
 18697  001FDE  E113               	bnz	l18803
 18698                           
 18699                           ; BSR set to: 1
 18700  001FE0  51B2               	movf	_vscpType& (0+255),w,b
 18701  001FE2  0A0A               	xorlw	10
 18702  001FE4  E110               	bnz	l18803
 18703                           
 18704                           ; BSR set to: 1
 18705  001FE6  51B1               	movf	_vscpSize& (0+255),w,b
 18706  001FE8  0A02               	xorlw	2
 18707  001FEA  E10D               	bnz	l18803
 18708                           
 18709                           ; BSR set to: 1
 18710  001FEC  51A5               	movf	_vscpData& (0+255),w,b
 18711  001FEE  0100               	movlb	0	; () banked
 18712  001FF0  63AF               	cpfseq	readRegister@reg& (0+255),b
 18713  001FF2  D009               	goto	l18803
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;main.c: 2738: *value = vscpData[ 1 ];
 18717  001FF4  C0B2  FFD9         	movff	readRegister@value,fsr2l
 18718  001FF8  C0B3  FFDA         	movff	readRegister@value+1,fsr2h
 18719  001FFC  0101               	movlb	1	; () banked
 18720  001FFE  C1A6  FFDF         	movff	_vscpData+1,indf2
 18721                           
 18722                           ; BSR set to: 1
 18723                           ;main.c: 2739: return 1;
 18724  002002  0E01               	movlw	1
 18725  002004  D011               	goto	l1219
 18726  002006                     l18803:
 18727  002006  0100               	movlb	0	; () banked
 18728  002008  51B0               	movf	readRegister@timeout& (0+255),w,b
 18729  00200A  6FB4               	movwf	??_readRegister& (0+255),b
 18730  00200C  51B1               	movf	(readRegister@timeout+1)& (0+255),w,b
 18731  00200E  6FB5               	movwf	(??_readRegister+1)& (0+255),b
 18732  002010  6BB6               	clrf	(??_readRegister+2)& (0+255),b
 18733  002012  6BB7               	clrf	(??_readRegister+3)& (0+255),b
 18734  002014  51B4               	movf	??_readRegister& (0+255),w,b
 18735  002016  5DD9               	subwf	_timekeeper& (0+255),w,b	;volatile
 18736  002018  51B5               	movf	(??_readRegister+1)& (0+255),w,b
 18737  00201A  59DA               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 18738  00201C  51B6               	movf	(??_readRegister+2)& (0+255),w,b
 18739  00201E  59DB               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 18740  002020  51B7               	movf	(??_readRegister+3)& (0+255),w,b
 18741  002022  59DC               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 18742  002024  E3B4               	bnc	l1216
 18743  002026                     l18805:
 18744                           
 18745                           ; BSR set to: 0
 18746                           ;main.c: 2740: }
 18747                           ;main.c: 2741: }
 18748                           ;main.c: 2742: }
 18749                           ;main.c: 2743: }
 18750                           ;main.c: 2745: return 0;
 18751  002026  0E00               	movlw	0
 18752  002028                     l1219:
 18753  002028  0012               	return	
 18754  00202A                     __end_of_readRegister:
 18755                           	opt stack 0
 18756                           tblptru	equ	0xFF8
 18757                           tblptrh	equ	0xFF7
 18758                           tblptrl	equ	0xFF6
 18759                           tablat	equ	0xFF5
 18760                           prodh	equ	0xFF4
 18761                           prodl	equ	0xFF3
 18762                           intcon	equ	0xFF2
 18763                           indf0	equ	0xFEF
 18764                           postinc0	equ	0xFEE
 18765                           fsr0h	equ	0xFEA
 18766                           fsr0l	equ	0xFE9
 18767                           wreg	equ	0xFE8
 18768                           indf1	equ	0xFE7
 18769                           postinc1	equ	0xFE6
 18770                           postdec1	equ	0xFE5
 18771                           fsr1h	equ	0xFE2
 18772                           fsr1l	equ	0xFE1
 18773                           indf2	equ	0xFDF
 18774                           postinc2	equ	0xFDE
 18775                           postdec2	equ	0xFDD
 18776                           plusw2	equ	0xFDB
 18777                           fsr2h	equ	0xFDA
 18778                           fsr2l	equ	0xFD9
 18779                           status	equ	0xFD8
 18780                           
 18781 ;; *************** function _sendVSCPFrame *****************
 18782 ;; Defined at:
 18783 ;;		line 3456 in file "main.c"
 18784 ;; Parameters:    Size  Location     Type
 18785 ;;  vscpclass       2   47[BANK0 ] unsigned short 
 18786 ;;  vscptype        1   49[BANK0 ] unsigned char 
 18787 ;;  nodeid          1   50[BANK0 ] unsigned char 
 18788 ;;  priority        1   51[BANK0 ] unsigned char 
 18789 ;;  size            1   52[BANK0 ] unsigned char 
 18790 ;;  pData           2   53[BANK0 ] PTR unsigned char 
 18791 ;;		 -> vscpData(8), 
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;  id              4   75[BANK0 ] unsigned long 
 18794 ;; Return value:  Size  Location     Type
 18795 ;;                  1    wreg      unsigned char 
 18796 ;; Registers used:
 18797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18798 ;; Tracked objects:
 18799 ;;		On entry : F/0
 18800 ;;		On exit  : F/0
 18801 ;;		Unchanged: 0/0
 18802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18803 ;;      Params:         0       8       0       0       0       0       0
 18804 ;;      Locals:         0       4       0       0       0       0       0
 18805 ;;      Temps:          0      20       0       0       0       0       0
 18806 ;;      Totals:         0      32       0       0       0       0       0
 18807 ;;Total ram usage:       32 bytes
 18808 ;; Hardware stack levels used:    1
 18809 ;; Hardware stack levels required when called:    6
 18810 ;; This function calls:
 18811 ;;		_sendCANFrame
 18812 ;; This function is called by:
 18813 ;;		_doModeVerbose
 18814 ;;		_readRegister
 18815 ;;		_readRegisterExtended
 18816 ;;		_writeRegisterExtended
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text33
 18821  001AB0                     __ptext33:
 18822                           	opt stack 0
 18823  001AB0                     _sendVSCPFrame:
 18824                           	opt stack 20
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;main.c: 3457: uint32_t id = ((uint32_t) priority << 26) |
 18828                           ;main.c: 3458: ((uint32_t) vscpclass << 16) |
 18829                           ;main.c: 3459: ((uint32_t) vscptype << 8) |
 18830                           ;main.c: 3460: nodeid;
 18831                           
 18832                           ;incstack = 0
 18833                           ;incstack = 0
 18834  001AB0  C091  F097         	movff	sendVSCPFrame@vscptype,??_sendVSCPFrame
 18835  001AB4  6B98               	clrf	(??_sendVSCPFrame+1)& (0+255),b
 18836  001AB6  6B99               	clrf	(??_sendVSCPFrame+2)& (0+255),b
 18837  001AB8  6B9A               	clrf	(??_sendVSCPFrame+3)& (0+255),b
 18838  001ABA  C099  F09A         	movff	??_sendVSCPFrame+2,??_sendVSCPFrame+3
 18839  001ABE  C098  F099         	movff	??_sendVSCPFrame+1,??_sendVSCPFrame+2
 18840  001AC2  C097  F098         	movff	??_sendVSCPFrame,??_sendVSCPFrame+1
 18841  001AC6  6B97               	clrf	??_sendVSCPFrame& (0+255),b
 18842  001AC8  518F               	movf	sendVSCPFrame@vscpclass& (0+255),w,b
 18843  001ACA  6F9B               	movwf	(??_sendVSCPFrame+4)& (0+255),b
 18844  001ACC  5190               	movf	(sendVSCPFrame@vscpclass+1)& (0+255),w,b
 18845  001ACE  6F9C               	movwf	(??_sendVSCPFrame+5)& (0+255),b
 18846  001AD0  6B9D               	clrf	(??_sendVSCPFrame+6)& (0+255),b
 18847  001AD2  6B9E               	clrf	(??_sendVSCPFrame+7)& (0+255),b
 18848  001AD4  C09C  F09E         	movff	??_sendVSCPFrame+5,??_sendVSCPFrame+7
 18849  001AD8  C09B  F09D         	movff	??_sendVSCPFrame+4,??_sendVSCPFrame+6
 18850  001ADC  6B9C               	clrf	(??_sendVSCPFrame+5)& (0+255),b
 18851  001ADE  6B9B               	clrf	(??_sendVSCPFrame+4)& (0+255),b
 18852  001AE0  C093  F09F         	movff	sendVSCPFrame@priority,??_sendVSCPFrame+8
 18853  001AE4  6BA0               	clrf	(??_sendVSCPFrame+9)& (0+255),b
 18854  001AE6  6BA1               	clrf	(??_sendVSCPFrame+10)& (0+255),b
 18855  001AE8  6BA2               	clrf	(??_sendVSCPFrame+11)& (0+255),b
 18856  001AEA  0E1A               	movlw	26
 18857  001AEC                     u21835:
 18858  001AEC  90D8               	bcf	status,0,c
 18859  001AEE  379F               	rlcf	(??_sendVSCPFrame+8)& (0+255),f,b
 18860  001AF0  37A0               	rlcf	(??_sendVSCPFrame+9)& (0+255),f,b
 18861  001AF2  37A1               	rlcf	(??_sendVSCPFrame+10)& (0+255),f,b
 18862  001AF4  37A2               	rlcf	(??_sendVSCPFrame+11)& (0+255),f,b
 18863  001AF6  2EE8               	decfsz	wreg,f,c
 18864  001AF8  D7F9               	goto	u21835
 18865  001AFA  519B               	movf	(??_sendVSCPFrame+4)& (0+255),w,b
 18866  001AFC  119F               	iorwf	(??_sendVSCPFrame+8)& (0+255),w,b
 18867  001AFE  6FA3               	movwf	(??_sendVSCPFrame+12)& (0+255),b
 18868  001B00  519C               	movf	(??_sendVSCPFrame+5)& (0+255),w,b
 18869  001B02  11A0               	iorwf	(??_sendVSCPFrame+9)& (0+255),w,b
 18870  001B04  6FA4               	movwf	(??_sendVSCPFrame+13)& (0+255),b
 18871  001B06  519D               	movf	(??_sendVSCPFrame+6)& (0+255),w,b
 18872  001B08  11A1               	iorwf	(??_sendVSCPFrame+10)& (0+255),w,b
 18873  001B0A  6FA5               	movwf	(??_sendVSCPFrame+14)& (0+255),b
 18874  001B0C  519E               	movf	(??_sendVSCPFrame+7)& (0+255),w,b
 18875  001B0E  11A2               	iorwf	(??_sendVSCPFrame+11)& (0+255),w,b
 18876  001B10  6FA6               	movwf	(??_sendVSCPFrame+15)& (0+255),b
 18877  001B12  5197               	movf	??_sendVSCPFrame& (0+255),w,b
 18878  001B14  11A3               	iorwf	(??_sendVSCPFrame+12)& (0+255),w,b
 18879  001B16  6FA7               	movwf	(??_sendVSCPFrame+16)& (0+255),b
 18880  001B18  5198               	movf	(??_sendVSCPFrame+1)& (0+255),w,b
 18881  001B1A  11A4               	iorwf	(??_sendVSCPFrame+13)& (0+255),w,b
 18882  001B1C  6FA8               	movwf	(??_sendVSCPFrame+17)& (0+255),b
 18883  001B1E  5199               	movf	(??_sendVSCPFrame+2)& (0+255),w,b
 18884  001B20  11A5               	iorwf	(??_sendVSCPFrame+14)& (0+255),w,b
 18885  001B22  6FA9               	movwf	(??_sendVSCPFrame+18)& (0+255),b
 18886  001B24  519A               	movf	(??_sendVSCPFrame+3)& (0+255),w,b
 18887  001B26  11A6               	iorwf	(??_sendVSCPFrame+15)& (0+255),w,b
 18888  001B28  6FAA               	movwf	(??_sendVSCPFrame+19)& (0+255),b
 18889  001B2A  5192               	movf	sendVSCPFrame@nodeid& (0+255),w,b
 18890  001B2C  11A7               	iorwf	(??_sendVSCPFrame+16)& (0+255),w,b
 18891  001B2E  6FAB               	movwf	sendVSCPFrame@id& (0+255),b
 18892  001B30  51A8               	movf	(??_sendVSCPFrame+17)& (0+255),w,b
 18893  001B32  6FAC               	movwf	(sendVSCPFrame@id+1)& (0+255),b
 18894  001B34  51A9               	movf	(??_sendVSCPFrame+18)& (0+255),w,b
 18895  001B36  6FAD               	movwf	(sendVSCPFrame@id+2)& (0+255),b
 18896  001B38  51AA               	movf	(??_sendVSCPFrame+19)& (0+255),w,b
 18897  001B3A  6FAE               	movwf	(sendVSCPFrame@id+3)& (0+255),b
 18898                           
 18899                           ; BSR set to: 0
 18900                           ;main.c: 3462: if (!sendCANFrame(id, size, pData)) {
 18901  001B3C  C0AB  F088         	movff	sendVSCPFrame@id,?_sendCANFrame
 18902  001B40  C0AC  F089         	movff	sendVSCPFrame@id+1,?_sendCANFrame+1
 18903  001B44  C0AD  F08A         	movff	sendVSCPFrame@id+2,?_sendCANFrame+2
 18904  001B48  C0AE  F08B         	movff	sendVSCPFrame@id+3,?_sendCANFrame+3
 18905  001B4C  C094  F08C         	movff	sendVSCPFrame@size,?_sendCANFrame+4
 18906  001B50  C095  F08D         	movff	sendVSCPFrame@pData,?_sendCANFrame+5
 18907  001B54  C096  F08E         	movff	sendVSCPFrame@pData+1,?_sendCANFrame+6
 18908  001B58  EC63  F005         	call	_sendCANFrame	;wreg free
 18909  001B5C  0900               	iorlw	0
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;main.c: 3464: return 0;
 18913  001B5E  0E00               	movlw	0
 18914  001B60  A4D8               	btfss	status,2,c
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;main.c: 3465: }
 18918                           ;main.c: 3467: return 1;
 18919  001B62  0E01               	movlw	1
 18920                           
 18921                           ; BSR set to: 0
 18922  001B64  0012               	return	
 18923  001B66                     __end_of_sendVSCPFrame:
 18924                           	opt stack 0
 18925                           tblptru	equ	0xFF8
 18926                           tblptrh	equ	0xFF7
 18927                           tblptrl	equ	0xFF6
 18928                           tablat	equ	0xFF5
 18929                           prodh	equ	0xFF4
 18930                           prodl	equ	0xFF3
 18931                           intcon	equ	0xFF2
 18932                           indf0	equ	0xFEF
 18933                           postinc0	equ	0xFEE
 18934                           fsr0h	equ	0xFEA
 18935                           fsr0l	equ	0xFE9
 18936                           wreg	equ	0xFE8
 18937                           indf1	equ	0xFE7
 18938                           postinc1	equ	0xFE6
 18939                           postdec1	equ	0xFE5
 18940                           fsr1h	equ	0xFE2
 18941                           fsr1l	equ	0xFE1
 18942                           indf2	equ	0xFDF
 18943                           postinc2	equ	0xFDE
 18944                           postdec2	equ	0xFDD
 18945                           plusw2	equ	0xFDB
 18946                           fsr2h	equ	0xFDA
 18947                           fsr2l	equ	0xFD9
 18948                           status	equ	0xFD8
 18949                           
 18950 ;; *************** function _sendCANFrame *****************
 18951 ;; Defined at:
 18952 ;;		line 3502 in file "main.c"
 18953 ;; Parameters:    Size  Location     Type
 18954 ;;  id              4   40[BANK0 ] unsigned long 
 18955 ;;  dlc             1   44[BANK0 ] unsigned char 
 18956 ;;  pdata           2   45[BANK0 ] PTR unsigned char 
 18957 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;		None
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      unsigned char 
 18962 ;; Registers used:
 18963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : F/0
 18966 ;;		On exit  : F/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18969 ;;      Params:         0       7       0       0       0       0       0
 18970 ;;      Locals:         0       0       0       0       0       0       0
 18971 ;;      Temps:          0       0       0       0       0       0       0
 18972 ;;      Totals:         0       7       0       0       0       0       0
 18973 ;;Total ram usage:        7 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:    5
 18976 ;; This function calls:
 18977 ;;		_ECANSendMessage
 18978 ;; This function is called by:
 18979 ;;		_doModeSLCAN
 18980 ;;		_receiveVSCPModeCanalMsg
 18981 ;;		_sendVSCPFrame
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           	psect	text34
 18986  000AC6                     __ptext34:
 18987                           	opt stack 0
 18988  000AC6                     _sendCANFrame:
 18989                           	opt stack 23
 18990                           
 18991                           ; BSR set to: 0
 18992                           ;main.c: 3503: if (!ECANSendMessage(id, pdata, dlc, ECAN_TX_XTD_FRAME)) {
 18993                           
 18994                           ; BSR set to: 0
 18995                           ;incstack = 0
 18996                           ;incstack = 0
 18997  000AC6  C088  F063         	movff	sendCANFrame@id,?_ECANSendMessage
 18998  000ACA  C089  F064         	movff	sendCANFrame@id+1,?_ECANSendMessage+1
 18999  000ACE  C08A  F065         	movff	sendCANFrame@id+2,?_ECANSendMessage+2
 19000  000AD2  C08B  F066         	movff	sendCANFrame@id+3,?_ECANSendMessage+3
 19001  000AD6  C08D  F067         	movff	sendCANFrame@pdata,?_ECANSendMessage+4
 19002  000ADA  C08E  F068         	movff	sendCANFrame@pdata+1,?_ECANSendMessage+5
 19003  000ADE  C08C  F069         	movff	sendCANFrame@dlc,?_ECANSendMessage+6
 19004  000AE2  0E20               	movlw	32
 19005  000AE4  6F6A               	movwf	(?_ECANSendMessage+7)& (0+255),b
 19006  000AE6  ECBD  F015         	call	_ECANSendMessage	;wreg free
 19007  000AEA  0900               	iorlw	0
 19008  000AEC  E106               	bnz	l18647
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;main.c: 3505: can_transmitOverruns++;
 19012  000AEE  2BC5               	incf	_can_transmitOverruns& (0+255),f,b
 19013  000AF0  0E00               	movlw	0
 19014  000AF2  23C6               	addwfc	(_can_transmitOverruns+1)& (0+255),f,b
 19015  000AF4  23C7               	addwfc	(_can_transmitOverruns+2)& (0+255),f,b
 19016  000AF6  23C8               	addwfc	(_can_transmitOverruns+3)& (0+255),f,b
 19017                           
 19018                           ; BSR set to: 0
 19019                           ;main.c: 3506: return 0;
 19020  000AF8  D001               	goto	l1419
 19021  000AFA                     l18647:
 19022                           
 19023                           ; BSR set to: 0
 19024                           ;main.c: 3507: }
 19025                           ;main.c: 3509: return 1;
 19026  000AFA  0E01               	movlw	1
 19027  000AFC                     l1419:
 19028                           
 19029                           ; BSR set to: 0
 19030  000AFC  0012               	return	
 19031  000AFE                     __end_of_sendCANFrame:
 19032                           	opt stack 0
 19033                           tblptru	equ	0xFF8
 19034                           tblptrh	equ	0xFF7
 19035                           tblptrl	equ	0xFF6
 19036                           tablat	equ	0xFF5
 19037                           prodh	equ	0xFF4
 19038                           prodl	equ	0xFF3
 19039                           intcon	equ	0xFF2
 19040                           indf0	equ	0xFEF
 19041                           postinc0	equ	0xFEE
 19042                           fsr0h	equ	0xFEA
 19043                           fsr0l	equ	0xFE9
 19044                           wreg	equ	0xFE8
 19045                           indf1	equ	0xFE7
 19046                           postinc1	equ	0xFE6
 19047                           postdec1	equ	0xFE5
 19048                           fsr1h	equ	0xFE2
 19049                           fsr1l	equ	0xFE1
 19050                           indf2	equ	0xFDF
 19051                           postinc2	equ	0xFDE
 19052                           postdec2	equ	0xFDD
 19053                           plusw2	equ	0xFDB
 19054                           fsr2h	equ	0xFDA
 19055                           fsr2l	equ	0xFD9
 19056                           status	equ	0xFD8
 19057                           
 19058 ;; *************** function _ECANSendMessage *****************
 19059 ;; Defined at:
 19060 ;;		line 617 in file "ECAN.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;  id              4    3[BANK0 ] unsigned long 
 19063 ;;  data            2    7[BANK0 ] PTR unsigned char 
 19064 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 19065 ;;  dataLen         1    9[BANK0 ] unsigned char 
 19066 ;;  msgFlags        1   10[BANK0 ] enum E16315
 19067 ;; Auto vars:     Size  Location     Type
 19068 ;;  pb             18   12[BANK0 ] PTR unsigned char [9]
 19069 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19070 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19071 ;;		 -> B0CON(1), 
 19072 ;;  ptr             2   38[BANK0 ] PTR unsigned char 
 19073 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19074 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19075 ;;		 -> B0CON(1), 
 19076 ;;  tempPtr         2   34[BANK0 ] PTR unsigned char 
 19077 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19078 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19079 ;;		 -> B0CON(1), 
 19080 ;;  i               1   37[BANK0 ] unsigned char 
 19081 ;;  temp            1   36[BANK0 ] unsigned char 
 19082 ;;  tempBSEL0       1   33[BANK0 ] struct .
 19083 ;;  j               1   32[BANK0 ] unsigned char 
 19084 ;;  buffers         1   31[BANK0 ] unsigned char 
 19085 ;;  mode            1   30[BANK0 ] unsigned char 
 19086 ;; Return value:  Size  Location     Type
 19087 ;;                  1    wreg      enum E15660
 19088 ;; Registers used:
 19089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19090 ;; Tracked objects:
 19091 ;;		On entry : F/0
 19092 ;;		On exit  : F/0
 19093 ;;		Unchanged: 0/0
 19094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19095 ;;      Params:         0       8       0       0       0       0       0
 19096 ;;      Locals:         0      28       0       0       0       0       0
 19097 ;;      Temps:          0       1       0       0       0       0       0
 19098 ;;      Totals:         0      37       0       0       0       0       0
 19099 ;;Total ram usage:       37 bytes
 19100 ;; Hardware stack levels used:    1
 19101 ;; Hardware stack levels required when called:    4
 19102 ;; This function calls:
 19103 ;;		__CANIDToRegs
 19104 ;; This function is called by:
 19105 ;;		_sendCANFrame
 19106 ;; This function uses a non-reentrant model
 19107 ;;
 19108                           
 19109                           	psect	text35
 19110  002B7A                     __ptext35:
 19111                           	opt stack 0
 19112  002B7A                     _ECANSendMessage:
 19113                           	opt stack 23
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;ECAN.c: 619: BYTE mode;
 19117                           ;ECAN.c: 620: BYTE buffers;
 19118                           ;ECAN.c: 628: BYTE i,j;
 19119                           ;ECAN.c: 629: BYTE *ptr, *tempPtr;
 19120                           ;ECAN.c: 630: BYTE* pb[9];
 19121                           ;ECAN.c: 631: BYTE temp;
 19122                           ;ECAN.c: 634: BYTE_VAL tempBSEL0;
 19123                           ;ECAN.c: 641: pb[0]=(BYTE*)&TXB0CON;
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;incstack = 0
 19127                           ;incstack = 0
 19128  002B7A  0E0F               	movlw	15	;volatile
 19129  002B7C  0100               	movlb	0	; () banked
 19130  002B7E  6F6D               	movwf	(ECANSendMessage@pb+1)& (0+255),b
 19131  002B80  0E40               	movlw	64	;volatile
 19132  002B82  6F6C               	movwf	ECANSendMessage@pb& (0+255),b
 19133                           
 19134                           ;ECAN.c: 642: pb[1]=(BYTE*)&TXB1CON;
 19135  002B84  0E0F               	movlw	15	;volatile
 19136  002B86  6F6F               	movwf	(ECANSendMessage@pb+3)& (0+255),b
 19137  002B88  0E30               	movlw	48	;volatile
 19138  002B8A  6F6E               	movwf	(ECANSendMessage@pb+2)& (0+255),b
 19139                           
 19140                           ;ECAN.c: 643: pb[2]=(BYTE*)&TXB2CON;
 19141  002B8C  0E0F               	movlw	15	;volatile
 19142  002B8E  6F71               	movwf	(ECANSendMessage@pb+5)& (0+255),b
 19143  002B90  0E20               	movlw	32	;volatile
 19144  002B92  6F70               	movwf	(ECANSendMessage@pb+4)& (0+255),b
 19145                           
 19146                           ;ECAN.c: 650: pb[3]=(BYTE*)&B0CON;
 19147  002B94  0E0E               	movlw	14	;volatile
 19148  002B96  6F73               	movwf	(ECANSendMessage@pb+7)& (0+255),b
 19149  002B98  0E20               	movlw	32	;volatile
 19150  002B9A  6F72               	movwf	(ECANSendMessage@pb+6)& (0+255),b
 19151                           
 19152                           ;ECAN.c: 651: pb[4]=(BYTE*)&B1CON;
 19153  002B9C  0E0E               	movlw	14	;volatile
 19154  002B9E  6F75               	movwf	(ECANSendMessage@pb+9)& (0+255),b
 19155  002BA0  0E30               	movlw	48	;volatile
 19156  002BA2  6F74               	movwf	(ECANSendMessage@pb+8)& (0+255),b
 19157                           
 19158                           ;ECAN.c: 652: pb[5]=(BYTE*)&B2CON;
 19159  002BA4  0E0E               	movlw	14	;volatile
 19160  002BA6  6F77               	movwf	(ECANSendMessage@pb+11)& (0+255),b
 19161  002BA8  0E40               	movlw	64	;volatile
 19162  002BAA  6F76               	movwf	(ECANSendMessage@pb+10)& (0+255),b
 19163                           
 19164                           ;ECAN.c: 653: pb[6]=(BYTE*)&B3CON;
 19165  002BAC  0E0E               	movlw	14	;volatile
 19166  002BAE  6F79               	movwf	(ECANSendMessage@pb+13)& (0+255),b
 19167  002BB0  0E50               	movlw	80	;volatile
 19168  002BB2  6F78               	movwf	(ECANSendMessage@pb+12)& (0+255),b
 19169                           
 19170                           ;ECAN.c: 654: pb[7]=(BYTE*)&B4CON;
 19171  002BB4  0E0E               	movlw	14	;volatile
 19172  002BB6  6F7B               	movwf	(ECANSendMessage@pb+15)& (0+255),b
 19173  002BB8  0E60               	movlw	96	;volatile
 19174  002BBA  6F7A               	movwf	(ECANSendMessage@pb+14)& (0+255),b
 19175                           
 19176                           ;ECAN.c: 655: pb[8]=(BYTE*)&B5CON;
 19177  002BBC  0E0E               	movlw	14	;volatile
 19178  002BBE  6F7D               	movwf	(ECANSendMessage@pb+17)& (0+255),b
 19179  002BC0  0E70               	movlw	112	;volatile
 19180  002BC2  6F7C               	movwf	(ECANSendMessage@pb+16)& (0+255),b
 19181                           
 19182                           ; BSR set to: 0
 19183                           ;ECAN.c: 659: mode = ECANCON&0xC0;
 19184  002BC4  5077               	movf	3959,w,c	;volatile
 19185  002BC6  0BC0               	andlw	192
 19186  002BC8  6F7E               	movwf	ECANSendMessage@mode& (0+255),b
 19187                           
 19188                           ; BSR set to: 0
 19189                           ;ECAN.c: 660: if ( mode == 0x00 )
 19190  002BCA  677E               	tstfsz	ECANSendMessage@mode& (0+255),b
 19191  002BCC  D002               	goto	l18827
 19192                           
 19193                           ; BSR set to: 0
 19194                           ;ECAN.c: 661: buffers = 2;
 19195  002BCE  0E02               	movlw	2
 19196  002BD0  D001               	goto	L29
 19197  002BD2                     l18827:
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;ECAN.c: 662: else
 19201                           ;ECAN.c: 663: buffers = 8;
 19202  002BD2  0E08               	movlw	8
 19203  002BD4                     L29:
 19204  002BD4  6F7F               	movwf	ECANSendMessage@buffers& (0+255),b
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;ECAN.c: 684: tempBSEL0.Val = BSEL0 >> 1;
 19208  002BD6  010D               	movlb	13	; () banked
 19209  002BD8  90D8               	bcf	status,0,c
 19210  002BDA  31F8               	rrcf	248,w,b	;volatile
 19211  002BDC  0100               	movlb	0	; () banked
 19212  002BDE  6F81               	movwf	ECANSendMessage@tempBSEL0& (0+255),b
 19213                           
 19214                           ; BSR set to: 0
 19215                           ;ECAN.c: 686: for ( i = 0; i < buffers; i++ )
 19216  002BE0  6B85               	clrf	ECANSendMessage@i& (0+255),b
 19217  002BE2  D07D               	goto	l18887
 19218  002BE4                     l18833:
 19219                           
 19220                           ; BSR set to: 0
 19221                           ;ECAN.c: 688: {
 19222                           ;ECAN.c: 693: ptr = pb[i];
 19223  002BE4  5185               	movf	ECANSendMessage@i& (0+255),w,b
 19224  002BE6  0D02               	mullw	2
 19225  002BE8  50F3               	movf	prodl,w,c
 19226  002BEA  0F6C               	addlw	low ECANSendMessage@pb
 19227  002BEC  6ED9               	movwf	fsr2l,c
 19228  002BEE  6ADA               	clrf	fsr2h,c
 19229  002BF0  CFDE F086          	movff	postinc2,ECANSendMessage@ptr
 19230  002BF4  CFDD F087          	movff	postdec2,ECANSendMessage@ptr+1
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;ECAN.c: 694: tempPtr = ptr;
 19234  002BF8  C086  F082         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
 19235  002BFC  C087  F083         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;ECAN.c: 702: if ( i > 2 )
 19239  002C00  0E02               	movlw	2
 19240  002C02  6585               	cpfsgt	ECANSendMessage@i& (0+255),b
 19241  002C04  D004               	goto	l18845
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;ECAN.c: 703: {
 19245                           ;ECAN.c: 707: tempBSEL0.Val >>= 1;
 19246  002C06  90D8               	bcf	status,0,c
 19247  002C08  3381               	rrcf	ECANSendMessage@tempBSEL0& (0+255),f,b
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;ECAN.c: 712: if ( !tempBSEL0.bits.b0 )
 19251  002C0A  A181               	btfss	ECANSendMessage@tempBSEL0& (0+255),0,b
 19252  002C0C  D067               	goto	l18885
 19253  002C0E                     l18845:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;ECAN.c: 714: }
 19257                           ;ECAN.c: 720: if ( !(*ptr & 0x08) )
 19258  002C0E  C086  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19259  002C12  C087  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19260  002C16  50DF               	movf	indf2,w,c
 19261  002C18  6F6B               	movwf	??_ECANSendMessage& (0+255),b
 19262  002C1A  B76B               	btfsc	??_ECANSendMessage& (0+255),3,b
 19263  002C1C  D05F               	goto	l18885
 19264                           
 19265                           ; BSR set to: 0
 19266                           ;ECAN.c: 721: {
 19267                           ;ECAN.c: 723: *ptr &= ~ECAN_TX_PRIORITY_BITS;
 19268  002C1E  C086  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19269  002C22  C087  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19270  002C26  0EFC               	movlw	252
 19271  002C28  16DF               	andwf	indf2,f,c
 19272                           
 19273                           ; BSR set to: 0
 19274                           ;ECAN.c: 724: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
 19275  002C2A  C06A  F06B         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
 19276  002C2E  0E03               	movlw	3
 19277  002C30  176B               	andwf	??_ECANSendMessage& (0+255),f,b
 19278  002C32  C086  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19279  002C36  C087  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19280  002C3A  516B               	movf	??_ECANSendMessage& (0+255),w,b
 19281  002C3C  12DF               	iorwf	indf2,f,c
 19282                           
 19283                           ; BSR set to: 0
 19284                           ;ECAN.c: 727: if ( msgFlags & ECAN_TX_RTR_BIT )
 19285  002C3E  AD6A               	btfss	ECANSendMessage@msgFlags& (0+255),6,b
 19286  002C40  D004               	goto	l1587
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;ECAN.c: 728: temp = 0x40 | dataLen;
 19290  002C42  5169               	movf	ECANSendMessage@dataLen& (0+255),w,b
 19291  002C44  0940               	iorlw	64
 19292  002C46  6F84               	movwf	ECANSendMessage@temp& (0+255),b
 19293  002C48  D002               	goto	l18855
 19294  002C4A                     l1587:
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;ECAN.c: 729: else
 19298                           ;ECAN.c: 730: temp = dataLen;
 19299  002C4A  C069  F084         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
 19300  002C4E                     l18855:
 19301                           
 19302                           ; BSR set to: 0
 19303                           ;ECAN.c: 732: *(ptr+5) = temp;
 19304  002C4E  EE20 F005          	lfsr	2,5
 19305  002C52  5186               	movf	ECANSendMessage@ptr& (0+255),w,b
 19306  002C54  26D9               	addwf	fsr2l,f,c
 19307  002C56  5187               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
 19308  002C58  22DA               	addwfc	fsr2h,f,c
 19309  002C5A  C084  FFDF         	movff	ECANSendMessage@temp,indf2
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;ECAN.c: 735: if ( msgFlags & ECAN_TX_FRAME_BIT )
 19313  002C5E  AB6A               	btfss	ECANSendMessage@msgFlags& (0+255),5,b
 19314  002C60  D003               	goto	l1589
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;ECAN.c: 736: temp = 1;
 19318  002C62  0E01               	movlw	1
 19319  002C64  6F84               	movwf	ECANSendMessage@temp& (0+255),b
 19320  002C66  D001               	goto	l18861
 19321  002C68                     l1589:
 19322                           
 19323                           ; BSR set to: 0
 19324                           ;ECAN.c: 738: else
 19325                           ;ECAN.c: 739: temp = 0;
 19326  002C68  6B84               	clrf	ECANSendMessage@temp& (0+255),b
 19327  002C6A                     l18861:
 19328                           
 19329                           ; BSR set to: 0
 19330                           ;ECAN.c: 742: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
 19331  002C6A  2986               	incf	ECANSendMessage@ptr& (0+255),w,b
 19332  002C6C  6E21               	movwf	?__CANIDToRegs,c
 19333  002C6E  0E00               	movlw	0
 19334  002C70  2187               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
 19335  002C72  6E22               	movwf	?__CANIDToRegs+1,c
 19336  002C74  C063  F023         	movff	ECANSendMessage@id,?__CANIDToRegs+2
 19337  002C78  C064  F024         	movff	ECANSendMessage@id+1,?__CANIDToRegs+3
 19338  002C7C  C065  F025         	movff	ECANSendMessage@id+2,?__CANIDToRegs+4
 19339  002C80  C066  F026         	movff	ECANSendMessage@id+3,?__CANIDToRegs+5
 19340  002C84  C084  F027         	movff	ECANSendMessage@temp,?__CANIDToRegs+6
 19341  002C88  EC75  F013         	call	__CANIDToRegs	;wreg free
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;ECAN.c: 745: ptr += 6;
 19345  002C8C  0E06               	movlw	6
 19346  002C8E  2786               	addwf	ECANSendMessage@ptr& (0+255),f,b
 19347  002C90  0E00               	movlw	0
 19348  002C92  2387               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;ECAN.c: 747: for ( j = 0 ; j < dataLen; j++ )
 19352  002C94  6B80               	clrf	ECANSendMessage@j& (0+255),b
 19353  002C96  D00F               	goto	l18875
 19354  002C98                     l18867:
 19355                           
 19356                           ; BSR set to: 0
 19357                           ;ECAN.c: 748: *ptr++ = *data++;
 19358  002C98  C067  FFD9         	movff	ECANSendMessage@data,fsr2l
 19359  002C9C  C068  FFDA         	movff	ECANSendMessage@data+1,fsr2h
 19360  002CA0  C086  FFE1         	movff	ECANSendMessage@ptr,fsr1l
 19361  002CA4  C087  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
 19362  002CA8  CFDF FFE7          	movff	indf2,indf1
 19363                           
 19364                           ; BSR set to: 0
 19365  002CAC  4B67               	infsnz	ECANSendMessage@data& (0+255),f,b
 19366  002CAE  2B68               	incf	(ECANSendMessage@data+1)& (0+255),f,b
 19367                           
 19368                           ; BSR set to: 0
 19369  002CB0  4B86               	infsnz	ECANSendMessage@ptr& (0+255),f,b
 19370  002CB2  2B87               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
 19371                           
 19372                           ; BSR set to: 0
 19373  002CB4  2B80               	incf	ECANSendMessage@j& (0+255),f,b
 19374  002CB6                     l18875:
 19375                           
 19376                           ; BSR set to: 0
 19377  002CB6  5169               	movf	ECANSendMessage@dataLen& (0+255),w,b
 19378  002CB8  5D80               	subwf	ECANSendMessage@j& (0+255),w,b
 19379  002CBA  E3EE               	bnc	l18867
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;ECAN.c: 752: if ( !(*tempPtr & 0x04) )
 19383  002CBC  C082  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 19384  002CC0  C083  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 19385  002CC4  50DF               	movf	indf2,w,c
 19386  002CC6  6F6B               	movwf	??_ECANSendMessage& (0+255),b
 19387  002CC8  B56B               	btfsc	??_ECANSendMessage& (0+255),2,b
 19388  002CCA  D006               	goto	l18881
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;ECAN.c: 753: *tempPtr |= 0x08;
 19392  002CCC  C082  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 19393  002CD0  C083  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 19394  002CD4  0E00               	movlw	0
 19395  002CD6  86DB               	bsf	plusw2,3,c
 19396  002CD8                     l18881:
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;ECAN.c: 755: return TRUE;
 19400  002CD8  0E01               	movlw	1
 19401  002CDA  D005               	goto	l1595
 19402  002CDC                     l18885:
 19403                           
 19404                           ; BSR set to: 0
 19405  002CDC  2B85               	incf	ECANSendMessage@i& (0+255),f,b
 19406  002CDE                     l18887:
 19407                           
 19408                           ; BSR set to: 0
 19409  002CDE  517F               	movf	ECANSendMessage@buffers& (0+255),w,b
 19410  002CE0  5D85               	subwf	ECANSendMessage@i& (0+255),w,b
 19411  002CE2  E380               	bnc	l18833
 19412                           
 19413                           ; BSR set to: 0
 19414                           ;ECAN.c: 756: }
 19415                           ;ECAN.c: 757: }
 19416                           ;ECAN.c: 760: return FALSE;
 19417  002CE4  0E00               	movlw	0
 19418  002CE6                     l1595:
 19419                           
 19420                           ; BSR set to: 0
 19421  002CE6  0012               	return	
 19422  002CE8                     __end_of_ECANSendMessage:
 19423                           	opt stack 0
 19424                           tblptru	equ	0xFF8
 19425                           tblptrh	equ	0xFF7
 19426                           tblptrl	equ	0xFF6
 19427                           tablat	equ	0xFF5
 19428                           prodh	equ	0xFF4
 19429                           prodl	equ	0xFF3
 19430                           intcon	equ	0xFF2
 19431                           indf0	equ	0xFEF
 19432                           postinc0	equ	0xFEE
 19433                           fsr0h	equ	0xFEA
 19434                           fsr0l	equ	0xFE9
 19435                           wreg	equ	0xFE8
 19436                           indf1	equ	0xFE7
 19437                           postinc1	equ	0xFE6
 19438                           postdec1	equ	0xFE5
 19439                           fsr1h	equ	0xFE2
 19440                           fsr1l	equ	0xFE1
 19441                           indf2	equ	0xFDF
 19442                           postinc2	equ	0xFDE
 19443                           postdec2	equ	0xFDD
 19444                           plusw2	equ	0xFDB
 19445                           fsr2h	equ	0xFDA
 19446                           fsr2l	equ	0xFD9
 19447                           status	equ	0xFD8
 19448                           
 19449 ;; *************** function _checkCANBusState *****************
 19450 ;; Defined at:
 19451 ;;		line 606 in file "main.c"
 19452 ;; Parameters:    Size  Location     Type
 19453 ;;		None
 19454 ;; Auto vars:     Size  Location     Type
 19455 ;;		None
 19456 ;; Return value:  Size  Location     Type
 19457 ;;		None               void
 19458 ;; Registers used:
 19459 ;;		wreg, status,2
 19460 ;; Tracked objects:
 19461 ;;		On entry : 0/0
 19462 ;;		On exit  : 0/0
 19463 ;;		Unchanged: 0/0
 19464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19465 ;;      Params:         0       0       0       0       0       0       0
 19466 ;;      Locals:         0       0       0       0       0       0       0
 19467 ;;      Temps:          0       0       0       0       0       0       0
 19468 ;;      Totals:         0       0       0       0       0       0       0
 19469 ;;Total ram usage:        0 bytes
 19470 ;; Hardware stack levels used:    1
 19471 ;; Hardware stack levels required when called:    3
 19472 ;; This function calls:
 19473 ;;		Nothing
 19474 ;; This function is called by:
 19475 ;;		_readRegister
 19476 ;;		_readRegisterExtended
 19477 ;;		_writeRegisterExtended
 19478 ;; This function uses a non-reentrant model
 19479 ;;
 19480                           
 19481                           	psect	text36
 19482  00098A                     __ptext36:
 19483                           	opt stack 0
 19484  00098A                     _checkCANBusState:
 19485                           	opt stack 23
 19486                           
 19487                           ;main.c: 608: if ( COMSTATbits.TXBO ) {
 19488                           
 19489                           ; BSR set to: 0
 19490                           ;incstack = 0
 19491                           ;incstack = 0
 19492  00098A  AA74               	btfss	3956,5,c	;volatile
 19493  00098C  D002               	goto	l505
 19494                           
 19495                           ;main.c: 610: ledFunctionality = 6;
 19496  00098E  0E06               	movlw	6
 19497  000990  D009               	goto	L30
 19498  000992                     l505:
 19499                           
 19500                           ;main.c: 612: else if ( COMSTATbits.TXBP || COMSTATbits.RXBP ) {
 19501  000992  B874               	btfsc	3956,4,c	;volatile
 19502  000994  D002               	goto	l17191
 19503  000996  A674               	btfss	3956,3,c	;volatile
 19504  000998  D002               	goto	l507
 19505  00099A                     l17191:
 19506                           
 19507                           ;main.c: 614: ledFunctionality = 5;
 19508  00099A  0E05               	movlw	5
 19509  00099C  D003               	goto	L30
 19510  00099E                     l507:
 19511                           
 19512                           ;main.c: 618: ledFunctionality = 4;
 19513  00099E  0E04               	movlw	4
 19514                           
 19515                           ;main.c: 616: else if ( COMSTATbits.EWARN ) {
 19516  0009A0  A074               	btfss	3956,0,c	;volatile
 19517                           
 19518                           ;main.c: 620: else {
 19519                           ;main.c: 622: ledFunctionality = 1;
 19520                           
 19521                           ;main.c: 619: }
 19522  0009A2  0E01               	movlw	1
 19523  0009A4                     L30:
 19524  0009A4  6E37               	movwf	_ledFunctionality,c	;volatile
 19525  0009A6  0012               	return	
 19526  0009A8                     __end_of_checkCANBusState:
 19527                           	opt stack 0
 19528                           tblptru	equ	0xFF8
 19529                           tblptrh	equ	0xFF7
 19530                           tblptrl	equ	0xFF6
 19531                           tablat	equ	0xFF5
 19532                           prodh	equ	0xFF4
 19533                           prodl	equ	0xFF3
 19534                           intcon	equ	0xFF2
 19535                           indf0	equ	0xFEF
 19536                           postinc0	equ	0xFEE
 19537                           fsr0h	equ	0xFEA
 19538                           fsr0l	equ	0xFE9
 19539                           wreg	equ	0xFE8
 19540                           indf1	equ	0xFE7
 19541                           postinc1	equ	0xFE6
 19542                           postdec1	equ	0xFE5
 19543                           fsr1h	equ	0xFE2
 19544                           fsr1l	equ	0xFE1
 19545                           indf2	equ	0xFDF
 19546                           postinc2	equ	0xFDE
 19547                           postdec2	equ	0xFDD
 19548                           plusw2	equ	0xFDB
 19549                           fsr2h	equ	0xFDA
 19550                           fsr2l	equ	0xFD9
 19551                           status	equ	0xFD8
 19552                           
 19553 ;; *************** function _memset *****************
 19554 ;; Defined at:
 19555 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memset.c"
 19556 ;; Parameters:    Size  Location     Type
 19557 ;;  p1              2   30[COMRAM] PTR void 
 19558 ;;		 -> wrkbuf(80), vscpData(8), cmdbuf(80), 
 19559 ;;  c               2   32[COMRAM] int 
 19560 ;;  n               2   34[COMRAM] unsigned int 
 19561 ;; Auto vars:     Size  Location     Type
 19562 ;;  p               2   36[COMRAM] PTR unsigned char 
 19563 ;;		 -> wrkbuf(80), vscpData(8), cmdbuf(80), 
 19564 ;; Return value:  Size  Location     Type
 19565 ;;                  2   30[COMRAM] PTR void 
 19566 ;; Registers used:
 19567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19568 ;; Tracked objects:
 19569 ;;		On entry : F/1
 19570 ;;		On exit  : 0/0
 19571 ;;		Unchanged: 0/0
 19572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19573 ;;      Params:         6       0       0       0       0       0       0
 19574 ;;      Locals:         2       0       0       0       0       0       0
 19575 ;;      Temps:          0       0       0       0       0       0       0
 19576 ;;      Totals:         8       0       0       0       0       0       0
 19577 ;;Total ram usage:        8 bytes
 19578 ;; Hardware stack levels used:    1
 19579 ;; Hardware stack levels required when called:    3
 19580 ;; This function calls:
 19581 ;;		Nothing
 19582 ;; This function is called by:
 19583 ;;		_doModeVerbose
 19584 ;;		_doModeSLCAN
 19585 ;;		_printGUID
 19586 ;;		_printMDF
 19587 ;;		_printNodeFirmwareVersion
 19588 ;; This function uses a non-reentrant model
 19589 ;;
 19590                           
 19591                           	psect	text37
 19592  0009D0                     __ptext37:
 19593                           	opt stack 0
 19594  0009D0                     _memset:
 19595                           	opt stack 25
 19596                           
 19597                           ; BSR set to: 1
 19598                           
 19599                           ;incstack = 0
 19600                           ;incstack = 0
 19601  0009D0  C01F  F025         	movff	memset@p1,memset@p
 19602  0009D4  C020  F026         	movff	memset@p1+1,memset@p+1
 19603  0009D8  D008               	goto	l17383
 19604  0009DA                     l17379:
 19605  0009DA  C025  FFD9         	movff	memset@p,fsr2l
 19606  0009DE  C026  FFDA         	movff	memset@p+1,fsr2h
 19607  0009E2  C021  FFDF         	movff	memset@c,indf2
 19608  0009E6  4A25               	infsnz	memset@p,f,c
 19609  0009E8  2A26               	incf	memset@p+1,f,c
 19610  0009EA                     l17383:
 19611  0009EA  0623               	decf	memset@n,f,c
 19612  0009EC  A0D8               	btfss	status,0,c
 19613  0009EE  0624               	decf	memset@n+1,f,c
 19614  0009F0  2823               	incf	memset@n& (0+255),w,c
 19615  0009F2  B4D8               	btfsc	status,2,c
 19616  0009F4  2824               	incf	(memset@n+1)& (0+255),w,c
 19617  0009F6  B4D8               	btfsc	status,2,c
 19618  0009F8  0012               	return	
 19619  0009FA  D7EF               	goto	l17379
 19620  0009FC                     __end_of_memset:
 19621                           	opt stack 0
 19622                           tblptru	equ	0xFF8
 19623                           tblptrh	equ	0xFF7
 19624                           tblptrl	equ	0xFF6
 19625                           tablat	equ	0xFF5
 19626                           prodh	equ	0xFF4
 19627                           prodl	equ	0xFF3
 19628                           intcon	equ	0xFF2
 19629                           indf0	equ	0xFEF
 19630                           postinc0	equ	0xFEE
 19631                           fsr0h	equ	0xFEA
 19632                           fsr0l	equ	0xFE9
 19633                           wreg	equ	0xFE8
 19634                           indf1	equ	0xFE7
 19635                           postinc1	equ	0xFE6
 19636                           postdec1	equ	0xFE5
 19637                           fsr1h	equ	0xFE2
 19638                           fsr1l	equ	0xFE1
 19639                           indf2	equ	0xFDF
 19640                           postinc2	equ	0xFDE
 19641                           postdec2	equ	0xFDD
 19642                           plusw2	equ	0xFDB
 19643                           fsr2h	equ	0xFDA
 19644                           fsr2l	equ	0xFD9
 19645                           status	equ	0xFD8
 19646                           
 19647 ;; *************** function _printHelp *****************
 19648 ;; Defined at:
 19649 ;;		line 3057 in file "main.c"
 19650 ;; Parameters:    Size  Location     Type
 19651 ;;		None
 19652 ;; Auto vars:     Size  Location     Type
 19653 ;;		None
 19654 ;; Return value:  Size  Location     Type
 19655 ;;		None               void
 19656 ;; Registers used:
 19657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19658 ;; Tracked objects:
 19659 ;;		On entry : F/1
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19663 ;;      Params:         0       0       0       0       0       0       0
 19664 ;;      Locals:         0       0       0       0       0       0       0
 19665 ;;      Temps:          0       0       0       0       0       0       0
 19666 ;;      Totals:         0       0       0       0       0       0       0
 19667 ;;Total ram usage:        0 bytes
 19668 ;; Hardware stack levels used:    1
 19669 ;; Hardware stack levels required when called:    5
 19670 ;; This function calls:
 19671 ;;		_putsUSART
 19672 ;; This function is called by:
 19673 ;;		_doModeVerbose
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           	psect	text38
 19678  002CE8                     __ptext38:
 19679                           	opt stack 0
 19680  002CE8                     _printHelp:
 19681                           	opt stack 23
 19682                           
 19683                           ; BSR set to: 1
 19684                           ;main.c: 3058: putsUSART((char *) "Help for the Frankfurt RS-232 module\r\n");
 19685                           
 19686                           ;incstack = 0
 19687                           ;incstack = 0
 19688  002CE8  0E74               	movlw	high STR_248
 19689  002CEA  6E21               	movwf	?_putsUSART+1,c
 19690  002CEC  0E42               	movlw	low STR_248
 19691  002CEE  6E20               	movwf	?_putsUSART,c
 19692  002CF0  EC03  F007         	call	_putsUSART	;wreg free
 19693                           
 19694                           ;main.c: 3059: putsUSART((char *) "------------------------------------\r\n");
 19695  002CF4  0E6D               	movlw	high (STR_281+28)
 19696  002CF6  6E21               	movwf	?_putsUSART+1,c
 19697  002CF8  0E16               	movlw	low (STR_281+28)
 19698  002CFA  6E20               	movwf	?_putsUSART,c
 19699  002CFC  EC03  F007         	call	_putsUSART	;wreg free
 19700                           
 19701                           ;main.c: 3060: putsUSART((char *) "BOOT - Enter bootloader.\r\n");
 19702  002D00  0E77               	movlw	high STR_250
 19703  002D02  6E21               	movwf	?_putsUSART+1,c
 19704  002D04  0E7E               	movlw	low STR_250
 19705  002D06  6E20               	movwf	?_putsUSART,c
 19706  002D08  EC03  F007         	call	_putsUSART	;wreg free
 19707                           
 19708                           ;main.c: 3061: putsUSART((char *) "OPEN - Open CAN interface in normal mode.\r\n");
 19709  002D0C  0E72               	movlw	high STR_251
 19710  002D0E  6E21               	movwf	?_putsUSART+1,c
 19711  002D10  0EA8               	movlw	low STR_251
 19712  002D12  6E20               	movwf	?_putsUSART,c
 19713  002D14  EC03  F007         	call	_putsUSART	;wreg free
 19714                           
 19715                           ;main.c: 3062: putsUSART((char *) "SILENT - Open CAN interface in silent mode.\r\n");
 19716  002D18  0E72               	movlw	high STR_252
 19717  002D1A  6E21               	movwf	?_putsUSART+1,c
 19718  002D1C  0E4E               	movlw	low STR_252
 19719  002D1E  6E20               	movwf	?_putsUSART,c
 19720  002D20  EC03  F007         	call	_putsUSART	;wreg free
 19721                           
 19722                           ;main.c: 3063: putsUSART((char *) "LISTEN - Open CAN interface in listen only mode.\r\n"
      +                          );
 19723  002D24  0E70               	movlw	high STR_253
 19724  002D26  6E21               	movwf	?_putsUSART+1,c
 19725  002D28  0E99               	movlw	low STR_253
 19726  002D2A  6E20               	movwf	?_putsUSART,c
 19727  002D2C  EC03  F007         	call	_putsUSART	;wreg free
 19728                           
 19729                           ;main.c: 3064: putsUSART((char *) "LOOPBACK - Open CAN interface in loopback mode.\r\n");
 19730  002D30  0E70               	movlw	high STR_254
 19731  002D32  6E21               	movwf	?_putsUSART+1,c
 19732  002D34  0EFE               	movlw	low STR_254
 19733  002D36  6E20               	movwf	?_putsUSART,c
 19734  002D38  EC03  F007         	call	_putsUSART	;wreg free
 19735                           
 19736                           ;main.c: 3065: putsUSART((char *) "CLOSE - Close CAN interface.\r\n");
 19737  002D3C  0E77               	movlw	high STR_255
 19738  002D3E  6E21               	movwf	?_putsUSART+1,c
 19739  002D40  0E0B               	movlw	low STR_255
 19740  002D42  6E20               	movwf	?_putsUSART,c
 19741  002D44  EC03  F007         	call	_putsUSART	;wreg free
 19742                           
 19743                           ;main.c: 3066: putsUSART((char *) "VERSION - Display firmware version information.\r\n");
 19744  002D48  0E71               	movlw	high STR_256
 19745  002D4A  6E21               	movwf	?_putsUSART+1,c
 19746  002D4C  0E30               	movlw	low STR_256
 19747  002D4E  6E20               	movwf	?_putsUSART,c
 19748  002D50  EC03  F007         	call	_putsUSART	;wreg free
 19749                           
 19750                           ;main.c: 3067: putsUSART((char *) "IFMODE - Display selected interface mode.\r\n");
 19751  002D54  0E72               	movlw	high STR_257
 19752  002D56  6E21               	movwf	?_putsUSART+1,c
 19753  002D58  0E7C               	movlw	low STR_257
 19754  002D5A  6E20               	movwf	?_putsUSART,c
 19755  002D5C  EC03  F007         	call	_putsUSART	;wreg free
 19756                           
 19757                           ;main.c: 3068: putsUSART((char *) "TX - Send CAN frame .\r\n");
 19758  002D60  0E78               	movlw	high STR_258
 19759  002D62  6E21               	movwf	?_putsUSART+1,c
 19760  002D64  0E34               	movlw	low STR_258
 19761  002D66  6E20               	movwf	?_putsUSART,c
 19762  002D68  EC03  F007         	call	_putsUSART	;wreg free
 19763                           
 19764                           ;main.c: 3069: putsUSART((char *) "     Format: priority,class,type,nodeid,count,data,,,
      +                          \r\n");
 19765  002D6C  0E6E               	movlw	high STR_259
 19766  002D6E  6E21               	movwf	?_putsUSART+1,c
 19767  002D70  0EE8               	movlw	low STR_259
 19768  002D72  6E20               	movwf	?_putsUSART,c
 19769  002D74  EC03  F007         	call	_putsUSART	;wreg free
 19770                           
 19771                           ;main.c: 3070: putsUSART((char *) "RX - Read CAN frame.\r\n");
 19772  002D78  0E78               	movlw	high STR_260
 19773  002D7A  6E21               	movwf	?_putsUSART+1,c
 19774  002D7C  0EF4               	movlw	low STR_260
 19775  002D7E  6E20               	movwf	?_putsUSART,c
 19776  002D80  EC03  F007         	call	_putsUSART	;wreg free
 19777                           
 19778                           ;main.c: 3071: putsUSART((char *) "STAT - Display CAN statistics.\r\n");
 19779  002D84  0E76               	movlw	high STR_261
 19780  002D86  6E21               	movwf	?_putsUSART+1,c
 19781  002D88  0E48               	movlw	low STR_261
 19782  002D8A  6E20               	movwf	?_putsUSART,c
 19783  002D8C  EC03  F007         	call	_putsUSART	;wreg free
 19784                           
 19785                           ;main.c: 3072: putsUSART((char *) "ERR - Display CAN error information.\r\n");
 19786  002D90  0E74               	movlw	high STR_262
 19787  002D92  6E21               	movwf	?_putsUSART+1,c
 19788  002D94  0E1B               	movlw	low STR_262
 19789  002D96  6E20               	movwf	?_putsUSART,c
 19790  002D98  EC03  F007         	call	_putsUSART	;wreg free
 19791                           
 19792                           ;main.c: 3073: putsUSART((char *) "HELP - Display this help information.\r\n");
 19793  002D9C  0E73               	movlw	high STR_263
 19794  002D9E  6E21               	movwf	?_putsUSART+1,c
 19795  002DA0  0E7C               	movlw	low STR_263
 19796  002DA2  6E20               	movwf	?_putsUSART,c
 19797  002DA4  EC03  F007         	call	_putsUSART	;wreg free
 19798                           
 19799                           ;main.c: 3074: putsUSART((char *) "FIND - Find available CAN4VSCP nodes on bus.\r\n");
 19800  002DA8  0E71               	movlw	high STR_264
 19801  002DAA  6E21               	movwf	?_putsUSART+1,c
 19802  002DAC  0EF1               	movlw	low STR_264
 19803  002DAE  6E20               	movwf	?_putsUSART,c
 19804  002DB0  EC03  F007         	call	_putsUSART	;wreg free
 19805                           
 19806                           ;main.c: 3075: putsUSART((char *) "RREG - Read register(s) of node (Format: rreg nodeid 
      +                          [page:]reg [count]).\r\n");
 19807  002DB4  0E6C               	movlw	high STR_265
 19808  002DB6  6E21               	movwf	?_putsUSART+1,c
 19809  002DB8  0E1D               	movlw	low STR_265
 19810  002DBA  6E20               	movwf	?_putsUSART,c
 19811  002DBC  EC03  F007         	call	_putsUSART	;wreg free
 19812                           
 19813                           ;main.c: 3076: putsUSART((char *) "WREG - Write register of node (Format: wreg nodeid [p
      +                          age:]reg content).\r\n");
 19814  002DC0  0E6C               	movlw	high STR_266
 19815  002DC2  6E21               	movwf	?_putsUSART+1,c
 19816  002DC4  0E69               	movlw	low STR_266
 19817  002DC6  6E20               	movwf	?_putsUSART,c
 19818  002DC8  EC03  F007         	call	_putsUSART	;wreg free
 19819                           
 19820                           ;main.c: 3077: putsUSART((char *) "INFO - Get info about an existent node on the bus (Fo
      +                          rmat: info nickname).\r\n");
 19821  002DCC  0E6B               	movlw	high STR_267
 19822  002DCE  6E21               	movwf	?_putsUSART+1,c
 19823  002DD0  0ED0               	movlw	low STR_267
 19824  002DD2  6E20               	movwf	?_putsUSART,c
 19825  002DD4  EC03  F007         	call	_putsUSART	;wreg free
 19826                           
 19827                           ;main.c: 3078: putsUSART((char *) "FILTER - Set filter .\r\n");
 19828  002DD8  0E78               	movlw	high STR_268
 19829  002DDA  6E21               	movwf	?_putsUSART+1,c
 19830  002DDC  0E4C               	movlw	low STR_268
 19831  002DDE  6E20               	movwf	?_putsUSART,c
 19832  002DE0  EC03  F007         	call	_putsUSART	;wreg free
 19833                           
 19834                           ;main.c: 3079: putsUSART((char *) "         Format: filter filterno,prio,class,type,node
      +                          id  (filterno = 0-15).\r\n");
 19835  002DE4  0E6B               	movlw	high STR_269
 19836  002DE6  6E21               	movwf	?_putsUSART+1,c
 19837  002DE8  0E82               	movlw	low STR_269
 19838  002DEA  6E20               	movwf	?_putsUSART,c
 19839  002DEC  EC03  F007         	call	_putsUSART	;wreg free
 19840                           
 19841                           ;main.c: 3080: putsUSART((char *) "MASK - Set mask .\r\n");
 19842  002DF0  0E79               	movlw	high STR_270
 19843  002DF2  6E21               	movwf	?_putsUSART+1,c
 19844  002DF4  0ED2               	movlw	low STR_270
 19845  002DF6  6E20               	movwf	?_putsUSART,c
 19846  002DF8  EC03  F007         	call	_putsUSART	;wreg free
 19847                           
 19848                           ;main.c: 3081: putsUSART((char *) "       Format: mask maskno,prio,class,type,nodeid (ma
      +                          skno = 0 or 1).\r\n");
 19849  002DFC  0E6C               	movlw	high STR_271
 19850  002DFE  6E21               	movwf	?_putsUSART+1,c
 19851  002E00  0EB3               	movlw	low STR_271
 19852  002E02  6E20               	movwf	?_putsUSART,c
 19853  002E04  EC03  F007         	call	_putsUSART	;wreg free
 19854                           
 19855                           ;main.c: 3082: putsUSART((char *) "SET - Persistent functionality.\r\n");
 19856  002E08  0E76               	movlw	high STR_272
 19857  002E0A  6E21               	movwf	?_putsUSART+1,c
 19858  002E0C  0E26               	movlw	low STR_272
 19859  002E0E  6E20               	movwf	?_putsUSART,c
 19860  002E10  EC03  F007         	call	_putsUSART	;wreg free
 19861                           
 19862                           ;main.c: 3083: putsUSART((char *) "    HEX - Display numericals in hexadecimal.\r\n");
 19863  002E14  0E71               	movlw	high STR_273
 19864  002E16  6E21               	movwf	?_putsUSART+1,c
 19865  002E18  0EC2               	movlw	low STR_273
 19866  002E1A  6E20               	movwf	?_putsUSART,c
 19867  002E1C  EC03  F007         	call	_putsUSART	;wreg free
 19868                           
 19869                           ;main.c: 3084: putsUSART((char *) "    DECIMAL - Display numericals in decimal.\r\n");
 19870  002E20  0E71               	movlw	high STR_274
 19871  002E22  6E21               	movwf	?_putsUSART+1,c
 19872  002E24  0E93               	movlw	low STR_274
 19873  002E26  6E20               	movwf	?_putsUSART,c
 19874  002E28  EC03  F007         	call	_putsUSART	;wreg free
 19875                           
 19876                           ;main.c: 3085: putsUSART((char *) "    RWTIMEOUT - Set register read/write timeout. Defa
      +                          ult=20 ms .\r\n");
 19877  002E2C  0E6D               	movlw	high STR_275
 19878  002E2E  6E21               	movwf	?_putsUSART+1,c
 19879  002E30  0E3D               	movlw	low STR_275
 19880  002E32  6E20               	movwf	?_putsUSART,c
 19881  002E34  EC03  F007         	call	_putsUSART	;wreg free
 19882                           
 19883                           ;main.c: 3086: putsUSART((char *) "                Format: set rwtimeout timeout.\r\n");
 19884  002E38  0E71               	movlw	high STR_276
 19885  002E3A  6E21               	movwf	?_putsUSART+1,c
 19886  002E3C  0E62               	movlw	low STR_276
 19887  002E3E  6E20               	movwf	?_putsUSART,c
 19888  002E40  EC03  F007         	call	_putsUSART	;wreg free
 19889                           
 19890                           ;main.c: 3087: putsUSART((char *) "    STARTIF - Set interface state to use on startup.\
      +                          r\n");
 19891  002E44  0E6F               	movlw	high STR_277
 19892  002E46  6E21               	movwf	?_putsUSART+1,c
 19893  002E48  0E57               	movlw	low STR_277
 19894  002E4A  6E20               	movwf	?_putsUSART,c
 19895  002E4C  EC03  F007         	call	_putsUSART	;wreg free
 19896                           
 19897                           ;main.c: 3088: putsUSART((char *) "    MODE - Set adapter mode that should be used on st
      +                          artup.\r\n");
 19898  002E50  0E6D               	movlw	high STR_278
 19899  002E52  6E21               	movwf	?_putsUSART+1,c
 19900  002E54  0EC2               	movlw	low STR_278
 19901  002E56  6E20               	movwf	?_putsUSART,c
 19902  002E58  EC03  F007         	call	_putsUSART	;wreg free
 19903                           
 19904                           ;main.c: 3089: putsUSART((char *) "           Modes: verbose|vscp|slcan\r\n");
 19905  002E5C  0E74               	movlw	high STR_279
 19906  002E5E  6E21               	movwf	?_putsUSART+1,c
 19907  002E60  0EB7               	movlw	low STR_279
 19908  002E62  6E20               	movwf	?_putsUSART,c
 19909  002E64  EF03  F007         	goto	_putsUSART	;wreg free
 19910  002E68                     __end_of_printHelp:
 19911                           	opt stack 0
 19912                           tblptru	equ	0xFF8
 19913                           tblptrh	equ	0xFF7
 19914                           tblptrl	equ	0xFF6
 19915                           tablat	equ	0xFF5
 19916                           prodh	equ	0xFF4
 19917                           prodl	equ	0xFF3
 19918                           intcon	equ	0xFF2
 19919                           indf0	equ	0xFEF
 19920                           postinc0	equ	0xFEE
 19921                           fsr0h	equ	0xFEA
 19922                           fsr0l	equ	0xFE9
 19923                           wreg	equ	0xFE8
 19924                           indf1	equ	0xFE7
 19925                           postinc1	equ	0xFE6
 19926                           postdec1	equ	0xFE5
 19927                           fsr1h	equ	0xFE2
 19928                           fsr1l	equ	0xFE1
 19929                           indf2	equ	0xFDF
 19930                           postinc2	equ	0xFDE
 19931                           postdec2	equ	0xFDD
 19932                           plusw2	equ	0xFDB
 19933                           fsr2h	equ	0xFDA
 19934                           fsr2l	equ	0xFD9
 19935                           status	equ	0xFD8
 19936                           
 19937 ;; *************** function _printErrors *****************
 19938 ;; Defined at:
 19939 ;;		line 2994 in file "main.c"
 19940 ;; Parameters:    Size  Location     Type
 19941 ;;		None
 19942 ;; Auto vars:     Size  Location     Type
 19943 ;;		None
 19944 ;; Return value:  Size  Location     Type
 19945 ;;		None               void
 19946 ;; Registers used:
 19947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19948 ;; Tracked objects:
 19949 ;;		On entry : F/1
 19950 ;;		On exit  : 0/0
 19951 ;;		Unchanged: 0/0
 19952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19953 ;;      Params:         0       0       0       0       0       0       0
 19954 ;;      Locals:         0      12       0       0       0       0       0
 19955 ;;      Temps:          0       0       0       0       0       0       0
 19956 ;;      Totals:         0      12       0       0       0       0       0
 19957 ;;Total ram usage:       12 bytes
 19958 ;; Hardware stack levels used:    1
 19959 ;; Hardware stack levels required when called:    5
 19960 ;; This function calls:
 19961 ;;		_putsUSART
 19962 ;;		_sprintf
 19963 ;; This function is called by:
 19964 ;;		_doModeVerbose
 19965 ;; This function uses a non-reentrant model
 19966 ;;
 19967                           
 19968                           	psect	text39
 19969  0040C4                     __ptext39:
 19970                           	opt stack 0
 19971  0040C4                     _printErrors:
 19972                           	opt stack 23
 19973                           
 19974                           ; BSR set to: 1
 19975                           ;main.c: 2995: putsUSART((char *) "CAN Receive overruns: ");
 19976                           
 19977                           ;incstack = 0
 19978                           ;incstack = 0
 19979  0040C4  0E79               	movlw	high STR_218
 19980  0040C6  6E21               	movwf	?_putsUSART+1,c
 19981  0040C8  0E22               	movlw	low STR_218
 19982  0040CA  6E20               	movwf	?_putsUSART,c
 19983  0040CC  EC03  F007         	call	_putsUSART	;wreg free
 19984                           
 19985                           ;main.c: 2996: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", can_receiveOverruns);
 19986  0040D0  0101               	movlb	1	; () banked
 19987  0040D2  6700               	tstfsz	_bHex& (0+255),b
 19988  0040D4  D005               	goto	l17459
 19989                           
 19990                           ; BSR set to: 1
 19991  0040D6  0E7C               	movlw	high STR_183
 19992  0040D8  0100               	movlb	0	; () banked
 19993  0040DA  6F8C               	movwf	(_printErrors$1623+1)& (0+255),b
 19994  0040DC  0EDE               	movlw	low STR_183
 19995  0040DE  D004               	goto	L31
 19996  0040E0                     l17459:
 19997                           
 19998                           ; BSR set to: 1
 19999  0040E0  0E7C               	movlw	high STR_182
 20000  0040E2  0100               	movlb	0	; () banked
 20001  0040E4  6F8C               	movwf	(_printErrors$1623+1)& (0+255),b
 20002  0040E6  0E01               	movlw	low STR_182
 20003  0040E8                     L31:
 20004  0040E8  6F8B               	movwf	_printErrors$1623& (0+255),b
 20005                           
 20006                           ; BSR set to: 0
 20007  0040EA  0E01               	movlw	high _wrkbuf
 20008  0040EC  0100               	movlb	0	; () banked
 20009  0040EE  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20010  0040F0  0E55               	movlw	low _wrkbuf
 20011  0040F2  6F6D               	movwf	?_sprintf& (0+255),b
 20012  0040F4  C08B  F06F         	movff	_printErrors$1623,?_sprintf+2
 20013  0040F8  C08C  F070         	movff	_printErrors$1623+1,?_sprintf+3
 20014  0040FC  C0C1  F071         	movff	_can_receiveOverruns,?_sprintf+4
 20015  004100  C0C2  F072         	movff	_can_receiveOverruns+1,?_sprintf+5
 20016  004104  C0C3  F073         	movff	_can_receiveOverruns+2,?_sprintf+6
 20017  004108  C0C4  F074         	movff	_can_receiveOverruns+3,?_sprintf+7
 20018  00410C  EC4E  F025         	call	_sprintf	;wreg free
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;main.c: 2997: putsUSART(wrkbuf);
 20022  004110  0101               	movlb	1	; () banked
 20023  004112  0E01               	movlw	high _wrkbuf
 20024  004114  6E21               	movwf	?_putsUSART+1,c
 20025  004116  0E55               	movlw	low _wrkbuf
 20026  004118  6E20               	movwf	?_putsUSART,c
 20027  00411A  EC03  F007         	call	_putsUSART	;wreg free
 20028                           
 20029                           ;main.c: 2998: putsUSART((char *) "\r\n");
 20030  00411E  0E6F               	movlw	high (STR_240+51)
 20031  004120  6E21               	movwf	?_putsUSART+1,c
 20032  004122  0EF8               	movlw	low (STR_240+51)
 20033  004124  6E20               	movwf	?_putsUSART,c
 20034  004126  EC03  F007         	call	_putsUSART	;wreg free
 20035                           
 20036                           ;main.c: 3000: putsUSART((char *) "CAN Transmit overruns: ");
 20037  00412A  0E78               	movlw	high STR_222
 20038  00412C  6E21               	movwf	?_putsUSART+1,c
 20039  00412E  0EDC               	movlw	low STR_222
 20040  004130  6E20               	movwf	?_putsUSART,c
 20041  004132  EC03  F007         	call	_putsUSART	;wreg free
 20042                           
 20043                           ;main.c: 3001: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", can_transmitOverruns);
 20044  004136  0101               	movlb	1	; () banked
 20045  004138  6700               	tstfsz	_bHex& (0+255),b
 20046  00413A  D005               	goto	l17473
 20047                           
 20048                           ; BSR set to: 1
 20049  00413C  0E7C               	movlw	high STR_183
 20050  00413E  0100               	movlb	0	; () banked
 20051  004140  6F8E               	movwf	(_printErrors$1629+1)& (0+255),b
 20052  004142  0EDE               	movlw	low STR_183
 20053  004144  D004               	goto	L32
 20054  004146                     l17473:
 20055                           
 20056                           ; BSR set to: 1
 20057  004146  0E7C               	movlw	high STR_182
 20058  004148  0100               	movlb	0	; () banked
 20059  00414A  6F8E               	movwf	(_printErrors$1629+1)& (0+255),b
 20060  00414C  0E01               	movlw	low STR_182
 20061  00414E                     L32:
 20062  00414E  6F8D               	movwf	_printErrors$1629& (0+255),b
 20063                           
 20064                           ; BSR set to: 0
 20065  004150  0E01               	movlw	high _wrkbuf
 20066  004152  0100               	movlb	0	; () banked
 20067  004154  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20068  004156  0E55               	movlw	low _wrkbuf
 20069  004158  6F6D               	movwf	?_sprintf& (0+255),b
 20070  00415A  C08D  F06F         	movff	_printErrors$1629,?_sprintf+2
 20071  00415E  C08E  F070         	movff	_printErrors$1629+1,?_sprintf+3
 20072  004162  C0C5  F071         	movff	_can_transmitOverruns,?_sprintf+4
 20073  004166  C0C6  F072         	movff	_can_transmitOverruns+1,?_sprintf+5
 20074  00416A  C0C7  F073         	movff	_can_transmitOverruns+2,?_sprintf+6
 20075  00416E  C0C8  F074         	movff	_can_transmitOverruns+3,?_sprintf+7
 20076  004172  EC4E  F025         	call	_sprintf	;wreg free
 20077                           
 20078                           ; BSR set to: 0
 20079                           ;main.c: 3002: putsUSART(wrkbuf);
 20080  004176  0101               	movlb	1	; () banked
 20081  004178  0E01               	movlw	high _wrkbuf
 20082  00417A  6E21               	movwf	?_putsUSART+1,c
 20083  00417C  0E55               	movlw	low _wrkbuf
 20084  00417E  6E20               	movwf	?_putsUSART,c
 20085  004180  EC03  F007         	call	_putsUSART	;wreg free
 20086                           
 20087                           ;main.c: 3003: putsUSART((char *) "\r\n");
 20088  004184  0E6F               	movlw	high (STR_240+51)
 20089  004186  6E21               	movwf	?_putsUSART+1,c
 20090  004188  0EF8               	movlw	low (STR_240+51)
 20091  00418A  6E20               	movwf	?_putsUSART,c
 20092  00418C  EC03  F007         	call	_putsUSART	;wreg free
 20093                           
 20094                           ;main.c: 3005: putsUSART((char *) "UART Receive overruns: ");
 20095  004190  0E78               	movlw	high STR_226
 20096  004192  6E21               	movwf	?_putsUSART+1,c
 20097  004194  0EC4               	movlw	low STR_226
 20098  004196  6E20               	movwf	?_putsUSART,c
 20099  004198  EC03  F007         	call	_putsUSART	;wreg free
 20100                           
 20101                           ;main.c: 3006: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", uart_receiveOverruns);
 20102  00419C  0101               	movlb	1	; () banked
 20103  00419E  6700               	tstfsz	_bHex& (0+255),b
 20104  0041A0  D005               	goto	l17487
 20105                           
 20106                           ; BSR set to: 1
 20107  0041A2  0E7C               	movlw	high STR_183
 20108  0041A4  0100               	movlb	0	; () banked
 20109  0041A6  6F90               	movwf	(_printErrors$1635+1)& (0+255),b
 20110  0041A8  0EDE               	movlw	low STR_183
 20111  0041AA  D004               	goto	L33
 20112  0041AC                     l17487:
 20113                           
 20114                           ; BSR set to: 1
 20115  0041AC  0E7C               	movlw	high STR_182
 20116  0041AE  0100               	movlb	0	; () banked
 20117  0041B0  6F90               	movwf	(_printErrors$1635+1)& (0+255),b
 20118  0041B2  0E01               	movlw	low STR_182
 20119  0041B4                     L33:
 20120  0041B4  6F8F               	movwf	_printErrors$1635& (0+255),b
 20121                           
 20122                           ; BSR set to: 0
 20123  0041B6  0E01               	movlw	high _wrkbuf
 20124  0041B8  0100               	movlb	0	; () banked
 20125  0041BA  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20126  0041BC  0E55               	movlw	low _wrkbuf
 20127  0041BE  6F6D               	movwf	?_sprintf& (0+255),b
 20128  0041C0  C08F  F06F         	movff	_printErrors$1635,?_sprintf+2
 20129  0041C4  C090  F070         	movff	_printErrors$1635+1,?_sprintf+3
 20130  0041C8  C0E1  F071         	movff	_uart_receiveOverruns,?_sprintf+4
 20131  0041CC  C0E2  F072         	movff	_uart_receiveOverruns+1,?_sprintf+5
 20132  0041D0  C0E3  F073         	movff	_uart_receiveOverruns+2,?_sprintf+6
 20133  0041D4  C0E4  F074         	movff	_uart_receiveOverruns+3,?_sprintf+7
 20134  0041D8  EC4E  F025         	call	_sprintf	;wreg free
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;main.c: 3007: putsUSART(wrkbuf);
 20138  0041DC  0101               	movlb	1	; () banked
 20139  0041DE  0E01               	movlw	high _wrkbuf
 20140  0041E0  6E21               	movwf	?_putsUSART+1,c
 20141  0041E2  0E55               	movlw	low _wrkbuf
 20142  0041E4  6E20               	movwf	?_putsUSART,c
 20143  0041E6  EC03  F007         	call	_putsUSART	;wreg free
 20144                           
 20145                           ;main.c: 3008: putsUSART((char *) "\r\n");
 20146  0041EA  0E6F               	movlw	high (STR_240+51)
 20147  0041EC  6E21               	movwf	?_putsUSART+1,c
 20148  0041EE  0EF8               	movlw	low (STR_240+51)
 20149  0041F0  6E20               	movwf	?_putsUSART,c
 20150  0041F2  EC03  F007         	call	_putsUSART	;wreg free
 20151                           
 20152                           ;main.c: 3010: putsUSART((char *) "UART Receive overruns: ");
 20153  0041F6  0E78               	movlw	high STR_226
 20154  0041F8  6E21               	movwf	?_putsUSART+1,c
 20155  0041FA  0EC4               	movlw	low STR_226
 20156  0041FC  6E20               	movwf	?_putsUSART,c
 20157  0041FE  EC03  F007         	call	_putsUSART	;wreg free
 20158                           
 20159                           ;main.c: 3011: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", uart_transmitOverruns);
 20160  004202  0101               	movlb	1	; () banked
 20161  004204  6700               	tstfsz	_bHex& (0+255),b
 20162  004206  D005               	goto	l17501
 20163                           
 20164                           ; BSR set to: 1
 20165  004208  0E7C               	movlw	high STR_183
 20166  00420A  0100               	movlb	0	; () banked
 20167  00420C  6F92               	movwf	(_printErrors$1641+1)& (0+255),b
 20168  00420E  0EDE               	movlw	low STR_183
 20169  004210  D004               	goto	L34
 20170  004212                     l17501:
 20171                           
 20172                           ; BSR set to: 1
 20173  004212  0E7C               	movlw	high STR_182
 20174  004214  0100               	movlb	0	; () banked
 20175  004216  6F92               	movwf	(_printErrors$1641+1)& (0+255),b
 20176  004218  0E01               	movlw	low STR_182
 20177  00421A                     L34:
 20178  00421A  6F91               	movwf	_printErrors$1641& (0+255),b
 20179                           
 20180                           ; BSR set to: 0
 20181  00421C  0E01               	movlw	high _wrkbuf
 20182  00421E  0100               	movlb	0	; () banked
 20183  004220  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20184  004222  0E55               	movlw	low _wrkbuf
 20185  004224  6F6D               	movwf	?_sprintf& (0+255),b
 20186  004226  C091  F06F         	movff	_printErrors$1641,?_sprintf+2
 20187  00422A  C092  F070         	movff	_printErrors$1641+1,?_sprintf+3
 20188  00422E  C0E5  F071         	movff	_uart_transmitOverruns,?_sprintf+4
 20189  004232  C0E6  F072         	movff	_uart_transmitOverruns+1,?_sprintf+5
 20190  004236  C0E7  F073         	movff	_uart_transmitOverruns+2,?_sprintf+6
 20191  00423A  C0E8  F074         	movff	_uart_transmitOverruns+3,?_sprintf+7
 20192  00423E  EC4E  F025         	call	_sprintf	;wreg free
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;main.c: 3012: putsUSART(wrkbuf);
 20196  004242  0101               	movlb	1	; () banked
 20197  004244  0E01               	movlw	high _wrkbuf
 20198  004246  6E21               	movwf	?_putsUSART+1,c
 20199  004248  0E55               	movlw	low _wrkbuf
 20200  00424A  6E20               	movwf	?_putsUSART,c
 20201  00424C  EC03  F007         	call	_putsUSART	;wreg free
 20202                           
 20203                           ;main.c: 3013: putsUSART((char *) "\r\n");
 20204  004250  0E6F               	movlw	high (STR_240+51)
 20205  004252  6E21               	movwf	?_putsUSART+1,c
 20206  004254  0EF8               	movlw	low (STR_240+51)
 20207  004256  6E20               	movwf	?_putsUSART,c
 20208  004258  EC03  F007         	call	_putsUSART	;wreg free
 20209                           
 20210                           ;main.c: 3015: if (COMSTATbits.EWARN) {
 20211  00425C  A074               	btfss	3956,0,c	;volatile
 20212  00425E  D006               	goto	l1307
 20213                           
 20214                           ;main.c: 3016: putsUSART((char *) "Transmitter or Receiver is in Error State Warning\r\n
      +                          ");
 20215  004260  0E70               	movlw	high STR_234
 20216  004262  6E21               	movwf	?_putsUSART+1,c
 20217  004264  0E65               	movlw	low STR_234
 20218  004266  6E20               	movwf	?_putsUSART,c
 20219  004268  EC03  F007         	call	_putsUSART	;wreg free
 20220  00426C                     l1307:
 20221                           
 20222                           ;main.c: 3017: }
 20223                           ;main.c: 3019: putsUSART((char *) "Transmit Error Counter: ");
 20224  00426C  0E78               	movlw	high STR_235
 20225  00426E  6E21               	movwf	?_putsUSART+1,c
 20226  004270  0E02               	movlw	low STR_235
 20227  004272  6E20               	movwf	?_putsUSART,c
 20228  004274  EC03  F007         	call	_putsUSART	;wreg free
 20229                           
 20230                           ;main.c: 3020: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", TXERRCNT);
 20231  004278  0101               	movlb	1	; () banked
 20232  00427A  6700               	tstfsz	_bHex& (0+255),b
 20233  00427C  D005               	goto	l17517
 20234                           
 20235                           ; BSR set to: 1
 20236  00427E  0E7C               	movlw	high STR_61
 20237  004280  0100               	movlb	0	; () banked
 20238  004282  6F94               	movwf	(_printErrors$1648+1)& (0+255),b
 20239  004284  0EEE               	movlw	low STR_61
 20240  004286  D004               	goto	L35
 20241  004288                     l17517:
 20242                           
 20243                           ; BSR set to: 1
 20244  004288  0E7C               	movlw	high STR_60
 20245  00428A  0100               	movlb	0	; () banked
 20246  00428C  6F94               	movwf	(_printErrors$1648+1)& (0+255),b
 20247  00428E  0E50               	movlw	low STR_60
 20248  004290                     L35:
 20249  004290  6F93               	movwf	_printErrors$1648& (0+255),b
 20250                           
 20251                           ; BSR set to: 0
 20252  004292  0E01               	movlw	high _wrkbuf
 20253  004294  0100               	movlb	0	; () banked
 20254  004296  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20255  004298  0E55               	movlw	low _wrkbuf
 20256  00429A  6F6D               	movwf	?_sprintf& (0+255),b
 20257  00429C  C093  F06F         	movff	_printErrors$1648,?_sprintf+2
 20258  0042A0  C094  F070         	movff	_printErrors$1648+1,?_sprintf+3
 20259  0042A4  CF76 F071          	movff	3958,?_sprintf+4	;volatile
 20260  0042A8  6B72               	clrf	(?_sprintf+5)& (0+255),b
 20261  0042AA  EC4E  F025         	call	_sprintf	;wreg free
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;main.c: 3021: putsUSART(wrkbuf);
 20265  0042AE  0101               	movlb	1	; () banked
 20266  0042B0  0E01               	movlw	high _wrkbuf
 20267  0042B2  6E21               	movwf	?_putsUSART+1,c
 20268  0042B4  0E55               	movlw	low _wrkbuf
 20269  0042B6  6E20               	movwf	?_putsUSART,c
 20270  0042B8  EC03  F007         	call	_putsUSART	;wreg free
 20271                           
 20272                           ;main.c: 3022: putsUSART((char *) "\r\n");
 20273  0042BC  0E6F               	movlw	high (STR_240+51)
 20274  0042BE  6E21               	movwf	?_putsUSART+1,c
 20275  0042C0  0EF8               	movlw	low (STR_240+51)
 20276  0042C2  6E20               	movwf	?_putsUSART,c
 20277  0042C4  EC03  F007         	call	_putsUSART	;wreg free
 20278                           
 20279                           ;main.c: 3024: if (COMSTATbits.TXWARN) {
 20280  0042C8  A474               	btfss	3956,2,c	;volatile
 20281  0042CA  D006               	goto	l17529
 20282                           
 20283                           ;main.c: 3025: putsUSART((char *) "Transmitter in Error State Warning (128 > TXERRCNT > 
      +                          96)\r\n");
 20284  0042CC  0E6E               	movlw	high STR_239
 20285  0042CE  6E21               	movwf	?_putsUSART+1,c
 20286  0042D0  0E00               	movlw	low STR_239
 20287  0042D2  6E20               	movwf	?_putsUSART,c
 20288  0042D4  EC03  F007         	call	_putsUSART	;wreg free
 20289  0042D8                     l17529:
 20290                           
 20291                           ;main.c: 3026: }
 20292                           ;main.c: 3028: if (COMSTATbits.TXBO) {
 20293  0042D8  AA74               	btfss	3956,5,c	;volatile
 20294  0042DA  D006               	goto	l17533
 20295                           
 20296                           ;main.c: 3029: putsUSART((char *) "Transmitter in Error State Bus OFF (TXERRCNT ? 256)\r
      +                          \n");
 20297  0042DC  0E6F               	movlw	high STR_240
 20298  0042DE  6E21               	movwf	?_putsUSART+1,c
 20299  0042E0  0EC5               	movlw	low STR_240
 20300  0042E2  6E20               	movwf	?_putsUSART,c
 20301  0042E4  EC03  F007         	call	_putsUSART	;wreg free
 20302  0042E8                     l17533:
 20303                           
 20304                           ;main.c: 3030: }
 20305                           ;main.c: 3032: if (COMSTATbits.TXBP) {
 20306  0042E8  A874               	btfss	3956,4,c	;volatile
 20307  0042EA  D006               	goto	l1314
 20308                           
 20309                           ;main.c: 3033: putsUSART((char *) "Transmitter in Error State Bus Passive (TXERRCNT ? 12
      +                          8)\r\n");
 20310  0042EC  0E6E               	movlw	high STR_241
 20311  0042EE  6E21               	movwf	?_putsUSART+1,c
 20312  0042F0  0E3B               	movlw	low STR_241
 20313  0042F2  6E20               	movwf	?_putsUSART,c
 20314  0042F4  EC03  F007         	call	_putsUSART	;wreg free
 20315  0042F8                     l1314:
 20316                           
 20317                           ;main.c: 3034: }
 20318                           ;main.c: 3036: putsUSART((char *) "Receive Error Counter: ");
 20319  0042F8  0E78               	movlw	high STR_242
 20320  0042FA  6E21               	movwf	?_putsUSART+1,c
 20321  0042FC  0EAC               	movlw	low STR_242
 20322  0042FE  6E20               	movwf	?_putsUSART,c
 20323  004300  EC03  F007         	call	_putsUSART	;wreg free
 20324                           
 20325                           ;main.c: 3037: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", RXERRCNT);
 20326  004304  0101               	movlb	1	; () banked
 20327  004306  6700               	tstfsz	_bHex& (0+255),b
 20328  004308  D005               	goto	l17541
 20329                           
 20330                           ; BSR set to: 1
 20331  00430A  0E7C               	movlw	high STR_61
 20332  00430C  0100               	movlb	0	; () banked
 20333  00430E  6F96               	movwf	(_printErrors$1657+1)& (0+255),b
 20334  004310  0EEE               	movlw	low STR_61
 20335  004312  D004               	goto	L36
 20336  004314                     l17541:
 20337                           
 20338                           ; BSR set to: 1
 20339  004314  0E7C               	movlw	high STR_60
 20340  004316  0100               	movlb	0	; () banked
 20341  004318  6F96               	movwf	(_printErrors$1657+1)& (0+255),b
 20342  00431A  0E50               	movlw	low STR_60
 20343  00431C                     L36:
 20344  00431C  6F95               	movwf	_printErrors$1657& (0+255),b
 20345                           
 20346                           ; BSR set to: 0
 20347  00431E  0E01               	movlw	high _wrkbuf
 20348  004320  0100               	movlb	0	; () banked
 20349  004322  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20350  004324  0E55               	movlw	low _wrkbuf
 20351  004326  6F6D               	movwf	?_sprintf& (0+255),b
 20352  004328  C095  F06F         	movff	_printErrors$1657,?_sprintf+2
 20353  00432C  C096  F070         	movff	_printErrors$1657+1,?_sprintf+3
 20354  004330  CF75 F071          	movff	3957,?_sprintf+4	;volatile
 20355  004334  6B72               	clrf	(?_sprintf+5)& (0+255),b
 20356  004336  EC4E  F025         	call	_sprintf	;wreg free
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;main.c: 3038: putsUSART(wrkbuf);
 20360  00433A  0101               	movlb	1	; () banked
 20361  00433C  0E01               	movlw	high _wrkbuf
 20362  00433E  6E21               	movwf	?_putsUSART+1,c
 20363  004340  0E55               	movlw	low _wrkbuf
 20364  004342  6E20               	movwf	?_putsUSART,c
 20365  004344  EC03  F007         	call	_putsUSART	;wreg free
 20366                           
 20367                           ;main.c: 3039: putsUSART((char *) "\r\n");
 20368  004348  0E6F               	movlw	high (STR_240+51)
 20369  00434A  6E21               	movwf	?_putsUSART+1,c
 20370  00434C  0EF8               	movlw	low (STR_240+51)
 20371  00434E  6E20               	movwf	?_putsUSART,c
 20372  004350  EC03  F007         	call	_putsUSART	;wreg free
 20373                           
 20374                           ;main.c: 3041: if (COMSTATbits.RXBP) {
 20375  004354  A674               	btfss	3956,3,c	;volatile
 20376  004356  D006               	goto	l17553
 20377                           
 20378                           ;main.c: 3042: putsUSART((char *) "Receiver in Error State Bus Passive (RXERRCNT > 127)\
      +                          r\n");
 20379  004358  0E6F               	movlw	high STR_246
 20380  00435A  6E21               	movwf	?_putsUSART+1,c
 20381  00435C  0E20               	movlw	low STR_246
 20382  00435E  6E20               	movwf	?_putsUSART,c
 20383  004360  EC03  F007         	call	_putsUSART	;wreg free
 20384  004364                     l17553:
 20385                           
 20386                           ;main.c: 3043: }
 20387                           ;main.c: 3045: if (COMSTATbits.RXWARN) {
 20388  004364  A274               	btfss	3956,1,c	;volatile
 20389  004366  D006               	goto	l1321
 20390                           
 20391                           ;main.c: 3046: putsUSART((char *) "Receiver  in Error State Warning (128 > RXERRCNT > 96
      +                          )\r\n");
 20392  004368  0E6E               	movlw	high STR_247
 20393  00436A  6E21               	movwf	?_putsUSART+1,c
 20394  00436C  0EAF               	movlw	low STR_247
 20395  00436E  6E20               	movwf	?_putsUSART,c
 20396  004370  EC03  F007         	call	_putsUSART	;wreg free
 20397  004374                     l1321:
 20398  004374  0012               	return	
 20399  004376                     __end_of_printErrors:
 20400                           	opt stack 0
 20401                           tblptru	equ	0xFF8
 20402                           tblptrh	equ	0xFF7
 20403                           tblptrl	equ	0xFF6
 20404                           tablat	equ	0xFF5
 20405                           prodh	equ	0xFF4
 20406                           prodl	equ	0xFF3
 20407                           intcon	equ	0xFF2
 20408                           indf0	equ	0xFEF
 20409                           postinc0	equ	0xFEE
 20410                           fsr0h	equ	0xFEA
 20411                           fsr0l	equ	0xFE9
 20412                           wreg	equ	0xFE8
 20413                           indf1	equ	0xFE7
 20414                           postinc1	equ	0xFE6
 20415                           postdec1	equ	0xFE5
 20416                           fsr1h	equ	0xFE2
 20417                           fsr1l	equ	0xFE1
 20418                           indf2	equ	0xFDF
 20419                           postinc2	equ	0xFDE
 20420                           postdec2	equ	0xFDD
 20421                           plusw2	equ	0xFDB
 20422                           fsr2h	equ	0xFDA
 20423                           fsr2l	equ	0xFD9
 20424                           status	equ	0xFD8
 20425                           
 20426 ;; *************** function _printStatistics *****************
 20427 ;; Defined at:
 20428 ;;		line 2967 in file "main.c"
 20429 ;; Parameters:    Size  Location     Type
 20430 ;;		None
 20431 ;; Auto vars:     Size  Location     Type
 20432 ;;		None
 20433 ;; Return value:  Size  Location     Type
 20434 ;;		None               void
 20435 ;; Registers used:
 20436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20437 ;; Tracked objects:
 20438 ;;		On entry : F/1
 20439 ;;		On exit  : 0/0
 20440 ;;		Unchanged: 0/0
 20441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20442 ;;      Params:         0       0       0       0       0       0       0
 20443 ;;      Locals:         0       8       0       0       0       0       0
 20444 ;;      Temps:          0       0       0       0       0       0       0
 20445 ;;      Totals:         0       8       0       0       0       0       0
 20446 ;;Total ram usage:        8 bytes
 20447 ;; Hardware stack levels used:    1
 20448 ;; Hardware stack levels required when called:    5
 20449 ;; This function calls:
 20450 ;;		_putsUSART
 20451 ;;		_sprintf
 20452 ;; This function is called by:
 20453 ;;		_doModeVerbose
 20454 ;; This function uses a non-reentrant model
 20455 ;;
 20456                           
 20457                           	psect	text40
 20458  002FF4                     __ptext40:
 20459                           	opt stack 0
 20460  002FF4                     _printStatistics:
 20461                           	opt stack 23
 20462                           
 20463                           ; BSR set to: 1
 20464                           ;main.c: 2968: putsUSART((char *) "Sent CAN frames: ");
 20465                           
 20466                           ;incstack = 0
 20467                           ;incstack = 0
 20468  002FF4  0E7A               	movlw	high STR_202
 20469  002FF6  6E21               	movwf	?_putsUSART+1,c
 20470  002FF8  0E95               	movlw	low STR_202
 20471  002FFA  6E20               	movwf	?_putsUSART,c
 20472  002FFC  EC03  F007         	call	_putsUSART	;wreg free
 20473                           
 20474                           ;main.c: 2969: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntTxFrames);
 20475  003000  0101               	movlb	1	; () banked
 20476  003002  6700               	tstfsz	_bHex& (0+255),b
 20477  003004  D005               	goto	l17403
 20478                           
 20479                           ; BSR set to: 1
 20480  003006  0E7C               	movlw	high STR_183
 20481  003008  0100               	movlb	0	; () banked
 20482  00300A  6F8C               	movwf	(_printStatistics$1598+1)& (0+255),b
 20483  00300C  0EDE               	movlw	low STR_183
 20484  00300E  D004               	goto	L37
 20485  003010                     l17403:
 20486                           
 20487                           ; BSR set to: 1
 20488  003010  0E7C               	movlw	high STR_203
 20489  003012  0100               	movlb	0	; () banked
 20490  003014  6F8C               	movwf	(_printStatistics$1598+1)& (0+255),b
 20491  003016  0E5E               	movlw	low STR_203
 20492  003018                     L37:
 20493  003018  6F8B               	movwf	_printStatistics$1598& (0+255),b
 20494                           
 20495                           ; BSR set to: 0
 20496  00301A  0E01               	movlw	high _wrkbuf
 20497  00301C  0100               	movlb	0	; () banked
 20498  00301E  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20499  003020  0E55               	movlw	low _wrkbuf
 20500  003022  6F6D               	movwf	?_sprintf& (0+255),b
 20501  003024  C08B  F06F         	movff	_printStatistics$1598,?_sprintf+2
 20502  003028  C08C  F070         	movff	_printStatistics$1598+1,?_sprintf+3
 20503  00302C  C0D5  F071         	movff	_cntTxFrames,?_sprintf+4
 20504  003030  C0D6  F072         	movff	_cntTxFrames+1,?_sprintf+5
 20505  003034  C0D7  F073         	movff	_cntTxFrames+2,?_sprintf+6
 20506  003038  C0D8  F074         	movff	_cntTxFrames+3,?_sprintf+7
 20507  00303C  EC4E  F025         	call	_sprintf	;wreg free
 20508                           
 20509                           ; BSR set to: 0
 20510                           ;main.c: 2970: putsUSART(wrkbuf);
 20511  003040  0101               	movlb	1	; () banked
 20512  003042  0E01               	movlw	high _wrkbuf
 20513  003044  6E21               	movwf	?_putsUSART+1,c
 20514  003046  0E55               	movlw	low _wrkbuf
 20515  003048  6E20               	movwf	?_putsUSART,c
 20516  00304A  EC03  F007         	call	_putsUSART	;wreg free
 20517                           
 20518                           ;main.c: 2971: putsUSART((char *) "\r\n");
 20519  00304E  0E6F               	movlw	high (STR_240+51)
 20520  003050  6E21               	movwf	?_putsUSART+1,c
 20521  003052  0EF8               	movlw	low (STR_240+51)
 20522  003054  6E20               	movwf	?_putsUSART,c
 20523  003056  EC03  F007         	call	_putsUSART	;wreg free
 20524                           
 20525                           ;main.c: 2973: putsUSART((char *) "Sent CAN bytes: ");
 20526  00305A  0E7A               	movlw	high STR_206
 20527  00305C  6E21               	movwf	?_putsUSART+1,c
 20528  00305E  0EDA               	movlw	low STR_206
 20529  003060  6E20               	movwf	?_putsUSART,c
 20530  003062  EC03  F007         	call	_putsUSART	;wreg free
 20531                           
 20532                           ;main.c: 2974: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntTxBytes);
 20533  003066  0101               	movlb	1	; () banked
 20534  003068  6700               	tstfsz	_bHex& (0+255),b
 20535  00306A  D005               	goto	l17417
 20536                           
 20537                           ; BSR set to: 1
 20538  00306C  0E7C               	movlw	high STR_183
 20539  00306E  0100               	movlb	0	; () banked
 20540  003070  6F8E               	movwf	(_printStatistics$1604+1)& (0+255),b
 20541  003072  0EDE               	movlw	low STR_183
 20542  003074  D004               	goto	L38
 20543  003076                     l17417:
 20544                           
 20545                           ; BSR set to: 1
 20546  003076  0E7C               	movlw	high STR_203
 20547  003078  0100               	movlb	0	; () banked
 20548  00307A  6F8E               	movwf	(_printStatistics$1604+1)& (0+255),b
 20549  00307C  0E5E               	movlw	low STR_203
 20550  00307E                     L38:
 20551  00307E  6F8D               	movwf	_printStatistics$1604& (0+255),b
 20552                           
 20553                           ; BSR set to: 0
 20554  003080  0E01               	movlw	high _wrkbuf
 20555  003082  0100               	movlb	0	; () banked
 20556  003084  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20557  003086  0E55               	movlw	low _wrkbuf
 20558  003088  6F6D               	movwf	?_sprintf& (0+255),b
 20559  00308A  C08D  F06F         	movff	_printStatistics$1604,?_sprintf+2
 20560  00308E  C08E  F070         	movff	_printStatistics$1604+1,?_sprintf+3
 20561  003092  C0D1  F071         	movff	_cntTxBytes,?_sprintf+4
 20562  003096  C0D2  F072         	movff	_cntTxBytes+1,?_sprintf+5
 20563  00309A  C0D3  F073         	movff	_cntTxBytes+2,?_sprintf+6
 20564  00309E  C0D4  F074         	movff	_cntTxBytes+3,?_sprintf+7
 20565  0030A2  EC4E  F025         	call	_sprintf	;wreg free
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;main.c: 2975: putsUSART(wrkbuf);
 20569  0030A6  0101               	movlb	1	; () banked
 20570  0030A8  0E01               	movlw	high _wrkbuf
 20571  0030AA  6E21               	movwf	?_putsUSART+1,c
 20572  0030AC  0E55               	movlw	low _wrkbuf
 20573  0030AE  6E20               	movwf	?_putsUSART,c
 20574  0030B0  EC03  F007         	call	_putsUSART	;wreg free
 20575                           
 20576                           ;main.c: 2976: putsUSART((char *) "\r\n");
 20577  0030B4  0E6F               	movlw	high (STR_240+51)
 20578  0030B6  6E21               	movwf	?_putsUSART+1,c
 20579  0030B8  0EF8               	movlw	low (STR_240+51)
 20580  0030BA  6E20               	movwf	?_putsUSART,c
 20581  0030BC  EC03  F007         	call	_putsUSART	;wreg free
 20582                           
 20583                           ;main.c: 2978: putsUSART((char *) "Received CAN frames: ");
 20584  0030C0  0E79               	movlw	high STR_210
 20585  0030C2  6E21               	movwf	?_putsUSART+1,c
 20586  0030C4  0E92               	movlw	low STR_210
 20587  0030C6  6E20               	movwf	?_putsUSART,c
 20588  0030C8  EC03  F007         	call	_putsUSART	;wreg free
 20589                           
 20590                           ;main.c: 2979: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntRxFrames);
 20591  0030CC  0101               	movlb	1	; () banked
 20592  0030CE  6700               	tstfsz	_bHex& (0+255),b
 20593  0030D0  D005               	goto	l17431
 20594                           
 20595                           ; BSR set to: 1
 20596  0030D2  0E7C               	movlw	high STR_183
 20597  0030D4  0100               	movlb	0	; () banked
 20598  0030D6  6F90               	movwf	(_printStatistics$1610+1)& (0+255),b
 20599  0030D8  0EDE               	movlw	low STR_183
 20600  0030DA  D004               	goto	L39
 20601  0030DC                     l17431:
 20602                           
 20603                           ; BSR set to: 1
 20604  0030DC  0E7C               	movlw	high STR_203
 20605  0030DE  0100               	movlb	0	; () banked
 20606  0030E0  6F90               	movwf	(_printStatistics$1610+1)& (0+255),b
 20607  0030E2  0E5E               	movlw	low STR_203
 20608  0030E4                     L39:
 20609  0030E4  6F8F               	movwf	_printStatistics$1610& (0+255),b
 20610                           
 20611                           ; BSR set to: 0
 20612  0030E6  0E01               	movlw	high _wrkbuf
 20613  0030E8  0100               	movlb	0	; () banked
 20614  0030EA  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20615  0030EC  0E55               	movlw	low _wrkbuf
 20616  0030EE  6F6D               	movwf	?_sprintf& (0+255),b
 20617  0030F0  C08F  F06F         	movff	_printStatistics$1610,?_sprintf+2
 20618  0030F4  C090  F070         	movff	_printStatistics$1610+1,?_sprintf+3
 20619  0030F8  C0CD  F071         	movff	_cntRxFrames,?_sprintf+4
 20620  0030FC  C0CE  F072         	movff	_cntRxFrames+1,?_sprintf+5
 20621  003100  C0CF  F073         	movff	_cntRxFrames+2,?_sprintf+6
 20622  003104  C0D0  F074         	movff	_cntRxFrames+3,?_sprintf+7
 20623  003108  EC4E  F025         	call	_sprintf	;wreg free
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;main.c: 2980: putsUSART(wrkbuf);
 20627  00310C  0101               	movlb	1	; () banked
 20628  00310E  0E01               	movlw	high _wrkbuf
 20629  003110  6E21               	movwf	?_putsUSART+1,c
 20630  003112  0E55               	movlw	low _wrkbuf
 20631  003114  6E20               	movwf	?_putsUSART,c
 20632  003116  EC03  F007         	call	_putsUSART	;wreg free
 20633                           
 20634                           ;main.c: 2981: putsUSART((char *) "\r\n");
 20635  00311A  0E6F               	movlw	high (STR_240+51)
 20636  00311C  6E21               	movwf	?_putsUSART+1,c
 20637  00311E  0EF8               	movlw	low (STR_240+51)
 20638  003120  6E20               	movwf	?_putsUSART,c
 20639  003122  EC03  F007         	call	_putsUSART	;wreg free
 20640                           
 20641                           ;main.c: 2983: putsUSART((char *) "Received CAN bytes: ");
 20642  003126  0E79               	movlw	high STR_214
 20643  003128  6E21               	movwf	?_putsUSART+1,c
 20644  00312A  0EBD               	movlw	low STR_214
 20645  00312C  6E20               	movwf	?_putsUSART,c
 20646  00312E  EC03  F007         	call	_putsUSART	;wreg free
 20647                           
 20648                           ;main.c: 2984: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntRxBytes);
 20649  003132  0101               	movlb	1	; () banked
 20650  003134  6700               	tstfsz	_bHex& (0+255),b
 20651  003136  D005               	goto	l17445
 20652                           
 20653                           ; BSR set to: 1
 20654  003138  0E7C               	movlw	high STR_183
 20655  00313A  0100               	movlb	0	; () banked
 20656  00313C  6F92               	movwf	(_printStatistics$1616+1)& (0+255),b
 20657  00313E  0EDE               	movlw	low STR_183
 20658  003140  D004               	goto	L40
 20659  003142                     l17445:
 20660                           
 20661                           ; BSR set to: 1
 20662  003142  0E7C               	movlw	high STR_203
 20663  003144  0100               	movlb	0	; () banked
 20664  003146  6F92               	movwf	(_printStatistics$1616+1)& (0+255),b
 20665  003148  0E5E               	movlw	low STR_203
 20666  00314A                     L40:
 20667  00314A  6F91               	movwf	_printStatistics$1616& (0+255),b
 20668                           
 20669                           ; BSR set to: 0
 20670  00314C  0E01               	movlw	high _wrkbuf
 20671  00314E  0100               	movlb	0	; () banked
 20672  003150  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 20673  003152  0E55               	movlw	low _wrkbuf
 20674  003154  6F6D               	movwf	?_sprintf& (0+255),b
 20675  003156  C091  F06F         	movff	_printStatistics$1616,?_sprintf+2
 20676  00315A  C092  F070         	movff	_printStatistics$1616+1,?_sprintf+3
 20677  00315E  C0C9  F071         	movff	_cntRxBytes,?_sprintf+4
 20678  003162  C0CA  F072         	movff	_cntRxBytes+1,?_sprintf+5
 20679  003166  C0CB  F073         	movff	_cntRxBytes+2,?_sprintf+6
 20680  00316A  C0CC  F074         	movff	_cntRxBytes+3,?_sprintf+7
 20681  00316E  EC4E  F025         	call	_sprintf	;wreg free
 20682                           
 20683                           ; BSR set to: 0
 20684                           ;main.c: 2985: putsUSART(wrkbuf);
 20685  003172  0101               	movlb	1	; () banked
 20686  003174  0E01               	movlw	high _wrkbuf
 20687  003176  6E21               	movwf	?_putsUSART+1,c
 20688  003178  0E55               	movlw	low _wrkbuf
 20689  00317A  6E20               	movwf	?_putsUSART,c
 20690  00317C  EC03  F007         	call	_putsUSART	;wreg free
 20691                           
 20692                           ;main.c: 2986: putsUSART((char *) "\r\n");
 20693  003180  0E6F               	movlw	high (STR_240+51)
 20694  003182  6E21               	movwf	?_putsUSART+1,c
 20695  003184  0EF8               	movlw	low (STR_240+51)
 20696  003186  6E20               	movwf	?_putsUSART,c
 20697  003188  EF03  F007         	goto	_putsUSART	;wreg free
 20698  00318C                     __end_of_printStatistics:
 20699                           	opt stack 0
 20700                           tblptru	equ	0xFF8
 20701                           tblptrh	equ	0xFF7
 20702                           tblptrl	equ	0xFF6
 20703                           tablat	equ	0xFF5
 20704                           prodh	equ	0xFF4
 20705                           prodl	equ	0xFF3
 20706                           intcon	equ	0xFF2
 20707                           indf0	equ	0xFEF
 20708                           postinc0	equ	0xFEE
 20709                           fsr0h	equ	0xFEA
 20710                           fsr0l	equ	0xFE9
 20711                           wreg	equ	0xFE8
 20712                           indf1	equ	0xFE7
 20713                           postinc1	equ	0xFE6
 20714                           postdec1	equ	0xFE5
 20715                           fsr1h	equ	0xFE2
 20716                           fsr1l	equ	0xFE1
 20717                           indf2	equ	0xFDF
 20718                           postinc2	equ	0xFDE
 20719                           postdec2	equ	0xFDD
 20720                           plusw2	equ	0xFDB
 20721                           fsr2h	equ	0xFDA
 20722                           fsr2l	equ	0xFD9
 20723                           status	equ	0xFD8
 20724                           
 20725 ;; *************** function _atoi *****************
 20726 ;; Defined at:
 20727 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\atoi.c"
 20728 ;; Parameters:    Size  Location     Type
 20729 ;;  s               2    2[BANK0 ] PTR const unsigned char 
 20730 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 20731 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 20732 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 20733 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 20734 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 20735 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 20736 ;;		 -> cmdbuf(80), 
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  a               2    7[BANK0 ] int 
 20739 ;;  sign            1    6[BANK0 ] unsigned char 
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  2    2[BANK0 ] int 
 20742 ;; Registers used:
 20743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20744 ;; Tracked objects:
 20745 ;;		On entry : C/2
 20746 ;;		On exit  : F/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20749 ;;      Params:         0       2       0       0       0       0       0
 20750 ;;      Locals:         0       3       0       0       0       0       0
 20751 ;;      Temps:          0       2       0       0       0       0       0
 20752 ;;      Totals:         0       7       0       0       0       0       0
 20753 ;;Total ram usage:        7 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; Hardware stack levels required when called:    4
 20756 ;; This function calls:
 20757 ;;		_isdigit
 20758 ;;		___wmul
 20759 ;; This function is called by:
 20760 ;;		_doModeVerbose
 20761 ;; This function uses a non-reentrant model
 20762 ;;
 20763                           
 20764                           	psect	text41
 20765  0024D8                     __ptext41:
 20766                           	opt stack 0
 20767  0024D8                     _atoi:
 20768                           	opt stack 24
 20769                           
 20770                           ;incstack = 0
 20771                           ;incstack = 0
 20772  0024D8  D003               	goto	l17355
 20773  0024DA                     l17353:
 20774  0024DA  0100               	movlb	0	; () banked
 20775  0024DC  4B62               	infsnz	atoi@s& (0+255),f,b
 20776  0024DE  2B63               	incf	(atoi@s+1)& (0+255),f,b
 20777  0024E0                     l17355:
 20778  0024E0  0100               	movlb	0	; () banked
 20779  0024E2  D877               	call	PL28	;call to abstracted procedure
 20780  0024E4  64EA               	cpfsgt	fsr0h,c
 20781  0024E6  D003               	bra	u21707
 20782  0024E8  6EEA               	movwf	fsr0h,c
 20783  0024EA  50EF               	movf	indf0,w,c
 20784  0024EC  D003               	bra	u21700
 20785  0024EE                     u21707:
 20786  0024EE  6EF7               	movwf	tblptrh,c
 20787  0024F0  0008               	tblrd		*
 20788  0024F2  50F5               	movf	tablat,w,c
 20789  0024F4                     u21700:
 20790  0024F4  0A20               	xorlw	32
 20791  0024F6  E0F1               	bz	l17353
 20792  0024F8  0100               	movlb	0	; () banked
 20793  0024FA  D86B               	call	PL28	;call to abstracted procedure
 20794  0024FC  64EA               	cpfsgt	fsr0h,c
 20795  0024FE  D003               	bra	u21727
 20796  002500  6EEA               	movwf	fsr0h,c
 20797  002502  50EF               	movf	indf0,w,c
 20798  002504  D003               	bra	u21720
 20799  002506                     u21727:
 20800  002506  6EF7               	movwf	tblptrh,c
 20801  002508  0008               	tblrd		*
 20802  00250A  50F5               	movf	tablat,w,c
 20803  00250C                     u21720:
 20804  00250C  0A09               	xorlw	9
 20805  00250E  E0E5               	bz	l17353
 20806  002510  0100               	movlb	0	; () banked
 20807  002512  6B67               	clrf	atoi@a& (0+255),b
 20808  002514  6B68               	clrf	(atoi@a+1)& (0+255),b
 20809  002516  6B66               	clrf	atoi@sign& (0+255),b
 20810                           
 20811                           ; BSR set to: 0
 20812  002518  D85C               	call	PL28	;call to abstracted procedure
 20813  00251A  64EA               	cpfsgt	fsr0h,c
 20814  00251C  D003               	bra	u21747
 20815  00251E  6EEA               	movwf	fsr0h,c
 20816  002520  50EF               	movf	indf0,w,c
 20817  002522  D003               	bra	u21740
 20818  002524                     u21747:
 20819  002524  6EF7               	movwf	tblptrh,c
 20820  002526  0008               	tblrd		*
 20821  002528  50F5               	movf	tablat,w,c
 20822  00252A                     u21740:
 20823  00252A  0A2D               	xorlw	45
 20824  00252C  E103               	bnz	l17363
 20825  00252E  0100               	movlb	0	; () banked
 20826  002530  2B66               	incf	atoi@sign& (0+255),f,b
 20827  002532  D00D               	goto	L41
 20828  002534                     l17363:
 20829  002534  0100               	movlb	0	; () banked
 20830  002536  D84D               	call	PL28	;call to abstracted procedure
 20831  002538  64EA               	cpfsgt	fsr0h,c
 20832  00253A  D003               	bra	u21767
 20833  00253C  6EEA               	movwf	fsr0h,c
 20834  00253E  50EF               	movf	indf0,w,c
 20835  002540  D003               	bra	u21760
 20836  002542                     u21767:
 20837  002542  6EF7               	movwf	tblptrh,c
 20838  002544  0008               	tblrd		*
 20839  002546  50F5               	movf	tablat,w,c
 20840  002548                     u21760:
 20841  002548  0A2B               	xorlw	43
 20842  00254A  E121               	bnz	l17371
 20843  00254C                     l17365:
 20844  00254C  0100               	movlb	0	; () banked
 20845  00254E                     L41:
 20846  00254E  4B62               	infsnz	atoi@s& (0+255),f,b
 20847  002550  2B63               	incf	(atoi@s+1)& (0+255),f,b
 20848  002552  D01D               	goto	l17371
 20849  002554                     l17367:
 20850  002554  C067  F023         	movff	atoi@a,?___wmul
 20851  002558  C068  F024         	movff	atoi@a+1,?___wmul+1
 20852  00255C  6A26               	clrf	?___wmul+3,c
 20853  00255E  0E0A               	movlw	10
 20854  002560  6E25               	movwf	?___wmul+2,c
 20855  002562  EC9B  F005         	call	___wmul	;wreg free
 20856  002566  D835               	call	PL28	;call to abstracted procedure
 20857  002568  64EA               	cpfsgt	fsr0h,c
 20858  00256A  D003               	bra	u21787
 20859  00256C  6EEA               	movwf	fsr0h,c
 20860  00256E  50EF               	movf	indf0,w,c
 20861  002570  D003               	bra	u21780
 20862  002572                     u21787:
 20863  002572  6EF7               	movwf	tblptrh,c
 20864  002574  0008               	tblrd		*
 20865  002576  50F5               	movf	tablat,w,c
 20866  002578                     u21780:
 20867  002578  2623               	addwf	?___wmul,f,c
 20868  00257A  0E00               	movlw	0
 20869  00257C  2224               	addwfc	?___wmul+1,f,c
 20870  00257E  0ED0               	movlw	208
 20871  002580  2423               	addwf	?___wmul,w,c
 20872  002582  0100               	movlb	0	; () banked
 20873  002584  6F67               	movwf	atoi@a& (0+255),b
 20874  002586  0EFF               	movlw	255
 20875  002588  2024               	addwfc	?___wmul+1,w,c
 20876  00258A  6F68               	movwf	(atoi@a+1)& (0+255),b
 20877  00258C  D7DF               	goto	l17365
 20878  00258E                     l17371:
 20879  00258E  0100               	movlb	0	; () banked
 20880  002590  D820               	call	PL28	;call to abstracted procedure
 20881  002592  64EA               	cpfsgt	fsr0h,c
 20882  002594  D003               	bra	u21797
 20883  002596  6EEA               	movwf	fsr0h,c
 20884  002598  50EF               	movf	indf0,w,c
 20885  00259A  D003               	bra	u21790
 20886  00259C                     u21797:
 20887  00259C  6EF7               	movwf	tblptrh,c
 20888  00259E  0008               	tblrd		*
 20889  0025A0  50F5               	movf	tablat,w,c
 20890  0025A2                     u21790:
 20891  0025A2  ECB6  F004         	call	_isdigit
 20892  0025A6  E2D6               	bc	l17367
 20893  0025A8  0100               	movlb	0	; () banked
 20894  0025AA  5166               	movf	atoi@sign& (0+255),w,b
 20895  0025AC  E00D               	bz	l2233
 20896                           
 20897                           ; BSR set to: 0
 20898  0025AE  C067  F064         	movff	atoi@a,??_atoi
 20899  0025B2  C068  F065         	movff	atoi@a+1,??_atoi+1
 20900  0025B6  1F64               	comf	??_atoi& (0+255),f,b
 20901  0025B8  1F65               	comf	(??_atoi+1)& (0+255),f,b
 20902  0025BA  4B64               	infsnz	??_atoi& (0+255),f,b
 20903  0025BC  2B65               	incf	(??_atoi+1)& (0+255),f,b
 20904  0025BE  C064  F062         	movff	??_atoi,?_atoi
 20905  0025C2  C065  F063         	movff	??_atoi+1,?_atoi+1
 20906  0025C6  D004               	goto	l2234
 20907  0025C8                     l2233:
 20908                           
 20909                           ; BSR set to: 0
 20910  0025C8  C067  F062         	movff	atoi@a,?_atoi
 20911  0025CC  C068  F063         	movff	atoi@a+1,?_atoi+1
 20912  0025D0                     l2234:
 20913                           
 20914                           ; BSR set to: 0
 20915  0025D0  0012               	return	
 20916  0025D2                     __end_of_atoi:
 20917                           	opt stack 0
 20918  0025D2                     PL28:
 20919                           	opt stack 24
 20920  0025D2  5162               	movf	atoi@s& (0+255),w,b
 20921  0025D4  6EF6               	movwf	tblptrl,c
 20922  0025D6  6EE9               	movwf	fsr0l,c
 20923  0025D8  0E05               	movlw	(high __ramtop+-1)
 20924  0025DA  6EEA               	movwf	fsr0h,c
 20925  0025DC  5163               	movf	(atoi@s+1)& (0+255),w,b
 20926  0025DE  0012               	return	
 20927  0025E0                     __end_ofPL28:
 20928                           	opt stack 0
 20929                           tblptru	equ	0xFF8
 20930                           tblptrh	equ	0xFF7
 20931                           tblptrl	equ	0xFF6
 20932                           tablat	equ	0xFF5
 20933                           prodh	equ	0xFF4
 20934                           prodl	equ	0xFF3
 20935                           intcon	equ	0xFF2
 20936                           indf0	equ	0xFEF
 20937                           postinc0	equ	0xFEE
 20938                           fsr0h	equ	0xFEA
 20939                           fsr0l	equ	0xFE9
 20940                           wreg	equ	0xFE8
 20941                           indf1	equ	0xFE7
 20942                           postinc1	equ	0xFE6
 20943                           postdec1	equ	0xFE5
 20944                           fsr1h	equ	0xFE2
 20945                           fsr1l	equ	0xFE1
 20946                           indf2	equ	0xFDF
 20947                           postinc2	equ	0xFDE
 20948                           postdec2	equ	0xFDD
 20949                           plusw2	equ	0xFDB
 20950                           fsr2h	equ	0xFDA
 20951                           fsr2l	equ	0xFD9
 20952                           status	equ	0xFD8
 20953                           
 20954 ;; *************** function _strtok *****************
 20955 ;; Defined at:
 20956 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strtok.c"
 20957 ;; Parameters:    Size  Location     Type
 20958 ;;  s1              2    4[BANK0 ] PTR unsigned char 
 20959 ;;		 -> NULL(0), cmdbuf(80), 
 20960 ;;  s2              2    6[BANK0 ] PTR const unsigned char 
 20961 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 20962 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 20963 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 20964 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 20965 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 20966 ;;		 -> STR_32(2), STR_31(2), STR_30(2), 
 20967 ;; Auto vars:     Size  Location     Type
 20968 ;;		None
 20969 ;; Return value:  Size  Location     Type
 20970 ;;                  2    4[BANK0 ] PTR unsigned char 
 20971 ;; Registers used:
 20972 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20973 ;; Tracked objects:
 20974 ;;		On entry : F/0
 20975 ;;		On exit  : F/0
 20976 ;;		Unchanged: 0/0
 20977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20978 ;;      Params:         0       4       0       0       0       0       0
 20979 ;;      Locals:         0       0       0       0       0       0       0
 20980 ;;      Temps:          0       0       0       0       0       0       0
 20981 ;;      Totals:         0       4       0       0       0       0       0
 20982 ;;Total ram usage:        4 bytes
 20983 ;; Hardware stack levels used:    1
 20984 ;; Hardware stack levels required when called:    5
 20985 ;; This function calls:
 20986 ;;		_strspn
 20987 ;;		_strcspn
 20988 ;; This function is called by:
 20989 ;;		_doModeVerbose
 20990 ;; This function uses a non-reentrant model
 20991 ;;
 20992                           
 20993                           	psect	text42
 20994  0015B8                     __ptext42:
 20995                           	opt stack 0
 20996  0015B8                     _strtok:
 20997                           	opt stack 23
 20998                           
 20999                           ; BSR set to: 0
 21000                           
 21001                           ; BSR set to: 0
 21002                           ;incstack = 0
 21003                           ;incstack = 0
 21004  0015B8  5165               	movf	(strtok@s1+1)& (0+255),w,b
 21005  0015BA  1164               	iorwf	strtok@s1& (0+255),w,b
 21006  0015BC  E104               	bnz	l17333
 21007                           
 21008                           ; BSR set to: 0
 21009  0015BE  C02C  F064         	movff	strtok@sp,strtok@s1
 21010  0015C2  C02D  F065         	movff	strtok@sp+1,strtok@s1+1
 21011  0015C6                     l17333:
 21012                           
 21013                           ; BSR set to: 0
 21014  0015C6  5165               	movf	(strtok@s1+1)& (0+255),w,b
 21015  0015C8  1164               	iorwf	strtok@s1& (0+255),w,b
 21016  0015CA  E017               	bz	L42
 21017                           
 21018                           ; BSR set to: 0
 21019                           
 21020                           ; BSR set to: 0
 21021  0015CC  C064  F060         	movff	strtok@s1,?_strspn
 21022  0015D0  C065  F061         	movff	strtok@s1+1,?_strspn+1
 21023  0015D4  C066  F062         	movff	strtok@s2,?_strspn+2
 21024  0015D8  C067  F063         	movff	strtok@s2+1,?_strspn+3
 21025  0015DC  EC75  F006         	call	_strspn	;wreg free
 21026  0015E0  0100               	movlb	0	; () banked
 21027  0015E2  5160               	movf	?_strspn& (0+255),w,b
 21028  0015E4  2764               	addwf	strtok@s1& (0+255),f,b
 21029  0015E6  5161               	movf	(?_strspn+1)& (0+255),w,b
 21030  0015E8  2365               	addwfc	(strtok@s1+1)& (0+255),f,b
 21031                           
 21032                           ; BSR set to: 0
 21033  0015EA  C064  FFD9         	movff	strtok@s1,fsr2l
 21034  0015EE  C065  FFDA         	movff	strtok@s1+1,fsr2h
 21035  0015F2  50DF               	movf	indf2,w,c
 21036  0015F4  E105               	bnz	l17343
 21037                           
 21038                           ; BSR set to: 0
 21039  0015F6  6A2C               	clrf	strtok@sp,c
 21040  0015F8  6A2D               	clrf	strtok@sp+1,c
 21041  0015FA                     L42:
 21042  0015FA  6B64               	clrf	?_strtok& (0+255),b
 21043  0015FC  6B65               	clrf	(?_strtok+1)& (0+255),b
 21044  0015FE  D026               	goto	l2726
 21045  001600                     l17343:
 21046                           
 21047                           ; BSR set to: 0
 21048  001600  C064  F060         	movff	strtok@s1,?_strcspn
 21049  001604  C065  F061         	movff	strtok@s1+1,?_strcspn+1
 21050  001608  C066  F062         	movff	strtok@s2,?_strcspn+2
 21051  00160C  C067  F063         	movff	strtok@s2+1,?_strcspn+3
 21052  001610  EC98  F006         	call	_strcspn	;wreg free
 21053  001614  0100               	movlb	0	; () banked
 21054  001616  5160               	movf	?_strcspn& (0+255),w,b
 21055  001618  2564               	addwf	strtok@s1& (0+255),w,b
 21056  00161A  6E2C               	movwf	strtok@sp,c
 21057  00161C  5161               	movf	(?_strcspn+1)& (0+255),w,b
 21058  00161E  2165               	addwfc	(strtok@s1+1)& (0+255),w,b
 21059  001620  6E2D               	movwf	strtok@sp+1,c
 21060                           
 21061                           ; BSR set to: 0
 21062  001622  C02C  FFD9         	movff	strtok@sp,fsr2l
 21063  001626  C02D  FFDA         	movff	strtok@sp+1,fsr2h
 21064  00162A  50DF               	movf	indf2,w,c
 21065  00162C  E009               	bz	l2728
 21066                           
 21067                           ; BSR set to: 0
 21068  00162E  C02C  FFD9         	movff	strtok@sp,fsr2l
 21069  001632  C02D  FFDA         	movff	strtok@sp+1,fsr2h
 21070  001636  0E00               	movlw	0
 21071  001638  6EDF               	movwf	indf2,c
 21072                           
 21073                           ; BSR set to: 0
 21074  00163A  4A2C               	infsnz	strtok@sp,f,c
 21075  00163C  2A2D               	incf	strtok@sp+1,f,c
 21076  00163E  D002               	goto	l2729
 21077  001640                     l2728:
 21078                           
 21079                           ; BSR set to: 0
 21080  001640  6A2C               	clrf	strtok@sp,c
 21081  001642  6A2D               	clrf	strtok@sp+1,c
 21082  001644                     l2729:
 21083                           
 21084                           ; BSR set to: 0
 21085  001644  C064  F064         	movff	strtok@s1,?_strtok
 21086  001648  C065  F065         	movff	strtok@s1+1,?_strtok+1
 21087  00164C                     l2726:
 21088                           
 21089                           ; BSR set to: 0
 21090  00164C  0012               	return	
 21091  00164E                     __end_of_strtok:
 21092                           	opt stack 0
 21093                           tblptru	equ	0xFF8
 21094                           tblptrh	equ	0xFF7
 21095                           tblptrl	equ	0xFF6
 21096                           tablat	equ	0xFF5
 21097                           prodh	equ	0xFF4
 21098                           prodl	equ	0xFF3
 21099                           intcon	equ	0xFF2
 21100                           indf0	equ	0xFEF
 21101                           postinc0	equ	0xFEE
 21102                           fsr0h	equ	0xFEA
 21103                           fsr0l	equ	0xFE9
 21104                           wreg	equ	0xFE8
 21105                           indf1	equ	0xFE7
 21106                           postinc1	equ	0xFE6
 21107                           postdec1	equ	0xFE5
 21108                           fsr1h	equ	0xFE2
 21109                           fsr1l	equ	0xFE1
 21110                           indf2	equ	0xFDF
 21111                           postinc2	equ	0xFDE
 21112                           postdec2	equ	0xFDD
 21113                           plusw2	equ	0xFDB
 21114                           fsr2h	equ	0xFDA
 21115                           fsr2l	equ	0xFD9
 21116                           status	equ	0xFD8
 21117                           
 21118 ;; *************** function _strcspn *****************
 21119 ;; Defined at:
 21120 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcspn.c"
 21121 ;; Parameters:    Size  Location     Type
 21122 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 21123 ;;		 -> NULL(0), cmdbuf(80), 
 21124 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 21125 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21126 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21127 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21128 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21129 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21130 ;;		 -> STR_32(2), STR_31(2), STR_30(2), 
 21131 ;; Auto vars:     Size  Location     Type
 21132 ;;  i               2   36[COMRAM] unsigned int 
 21133 ;; Return value:  Size  Location     Type
 21134 ;;                  2    0[BANK0 ] unsigned int 
 21135 ;; Registers used:
 21136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21137 ;; Tracked objects:
 21138 ;;		On entry : F/0
 21139 ;;		On exit  : 0/0
 21140 ;;		Unchanged: 0/0
 21141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21142 ;;      Params:         0       4       0       0       0       0       0
 21143 ;;      Locals:         2       0       0       0       0       0       0
 21144 ;;      Temps:          0       0       0       0       0       0       0
 21145 ;;      Totals:         2       4       0       0       0       0       0
 21146 ;;Total ram usage:        6 bytes
 21147 ;; Hardware stack levels used:    1
 21148 ;; Hardware stack levels required when called:    4
 21149 ;; This function calls:
 21150 ;;		_strchr
 21151 ;; This function is called by:
 21152 ;;		_strtok
 21153 ;; This function uses a non-reentrant model
 21154 ;;
 21155                           
 21156                           	psect	text43
 21157  000D30                     __ptext43:
 21158                           	opt stack 0
 21159  000D30                     _strcspn:
 21160                           	opt stack 23
 21161                           
 21162                           ; BSR set to: 0
 21163                           
 21164                           ; BSR set to: 0
 21165                           ;incstack = 0
 21166                           ;incstack = 0
 21167  000D30  6A25               	clrf	strcspn@i,c
 21168  000D32  6A26               	clrf	strcspn@i+1,c
 21169  000D34  D005               	goto	l19085
 21170  000D36                     l19083:
 21171  000D36  0100               	movlb	0	; () banked
 21172  000D38  4B60               	infsnz	strcspn@s1& (0+255),f,b
 21173  000D3A  2B61               	incf	(strcspn@s1+1)& (0+255),f,b
 21174  000D3C  4A25               	infsnz	strcspn@i,f,c
 21175  000D3E  2A26               	incf	strcspn@i+1,f,c
 21176  000D40                     l19085:
 21177                           
 21178                           ; BSR set to: 0
 21179  000D40  C060  FFD9         	movff	strcspn@s1,fsr2l
 21180  000D44  C061  FFDA         	movff	strcspn@s1+1,fsr2h
 21181  000D48  50DF               	movf	indf2,w,c
 21182  000D4A  E010               	bz	l2753
 21183                           
 21184                           ; BSR set to: 0
 21185  000D4C  C062  F01F         	movff	strcspn@s2,?_strchr
 21186  000D50  C063  F020         	movff	strcspn@s2+1,?_strchr+1
 21187  000D54  C060  FFD9         	movff	strcspn@s1,fsr2l
 21188  000D58  C061  FFDA         	movff	strcspn@s1+1,fsr2h
 21189  000D5C  50DF               	movf	indf2,w,c
 21190  000D5E  6E21               	movwf	?_strchr+2,c
 21191  000D60  6A22               	clrf	?_strchr+3,c
 21192  000D62  EC86  F007         	call	_strchr	;wreg free
 21193  000D66  5020               	movf	?_strchr+1,w,c
 21194  000D68  101F               	iorwf	?_strchr,w,c
 21195  000D6A  E0E5               	bz	l19083
 21196  000D6C                     l2753:
 21197  000D6C  C025  F060         	movff	strcspn@i,?_strcspn
 21198  000D70  C026  F061         	movff	strcspn@i+1,?_strcspn+1
 21199  000D74  0012               	return	
 21200  000D76                     __end_of_strcspn:
 21201                           	opt stack 0
 21202                           tblptru	equ	0xFF8
 21203                           tblptrh	equ	0xFF7
 21204                           tblptrl	equ	0xFF6
 21205                           tablat	equ	0xFF5
 21206                           prodh	equ	0xFF4
 21207                           prodl	equ	0xFF3
 21208                           intcon	equ	0xFF2
 21209                           indf0	equ	0xFEF
 21210                           postinc0	equ	0xFEE
 21211                           fsr0h	equ	0xFEA
 21212                           fsr0l	equ	0xFE9
 21213                           wreg	equ	0xFE8
 21214                           indf1	equ	0xFE7
 21215                           postinc1	equ	0xFE6
 21216                           postdec1	equ	0xFE5
 21217                           fsr1h	equ	0xFE2
 21218                           fsr1l	equ	0xFE1
 21219                           indf2	equ	0xFDF
 21220                           postinc2	equ	0xFDE
 21221                           postdec2	equ	0xFDD
 21222                           plusw2	equ	0xFDB
 21223                           fsr2h	equ	0xFDA
 21224                           fsr2l	equ	0xFD9
 21225                           status	equ	0xFD8
 21226                           
 21227 ;; *************** function _strspn *****************
 21228 ;; Defined at:
 21229 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strspn.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 21232 ;;		 -> NULL(0), cmdbuf(80), 
 21233 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 21234 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21235 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21236 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21237 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21238 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21239 ;;		 -> STR_32(2), STR_31(2), STR_30(2), 
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;  i               2   36[COMRAM] unsigned int 
 21242 ;; Return value:  Size  Location     Type
 21243 ;;                  2    0[BANK0 ] unsigned int 
 21244 ;; Registers used:
 21245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21246 ;; Tracked objects:
 21247 ;;		On entry : F/0
 21248 ;;		On exit  : 0/0
 21249 ;;		Unchanged: 0/0
 21250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21251 ;;      Params:         0       4       0       0       0       0       0
 21252 ;;      Locals:         2       0       0       0       0       0       0
 21253 ;;      Temps:          0       0       0       0       0       0       0
 21254 ;;      Totals:         2       4       0       0       0       0       0
 21255 ;;Total ram usage:        6 bytes
 21256 ;; Hardware stack levels used:    1
 21257 ;; Hardware stack levels required when called:    4
 21258 ;; This function calls:
 21259 ;;		_strchr
 21260 ;; This function is called by:
 21261 ;;		_strtok
 21262 ;; This function uses a non-reentrant model
 21263 ;;
 21264                           
 21265                           	psect	text44
 21266  000CEA                     __ptext44:
 21267                           	opt stack 0
 21268  000CEA                     _strspn:
 21269                           	opt stack 23
 21270                           
 21271                           ; BSR set to: 0
 21272                           
 21273                           ;incstack = 0
 21274                           ;incstack = 0
 21275  000CEA  6A25               	clrf	strspn@i,c
 21276  000CEC  6A26               	clrf	strspn@i+1,c
 21277  000CEE  D005               	goto	l19077
 21278  000CF0                     l19075:
 21279  000CF0  0100               	movlb	0	; () banked
 21280  000CF2  4B60               	infsnz	strspn@s1& (0+255),f,b
 21281  000CF4  2B61               	incf	(strspn@s1+1)& (0+255),f,b
 21282  000CF6  4A25               	infsnz	strspn@i,f,c
 21283  000CF8  2A26               	incf	strspn@i+1,f,c
 21284  000CFA                     l19077:
 21285                           
 21286                           ; BSR set to: 0
 21287  000CFA  C060  FFD9         	movff	strspn@s1,fsr2l
 21288  000CFE  C061  FFDA         	movff	strspn@s1+1,fsr2h
 21289  000D02  50DF               	movf	indf2,w,c
 21290  000D04  E010               	bz	l2772
 21291                           
 21292                           ; BSR set to: 0
 21293  000D06  C062  F01F         	movff	strspn@s2,?_strchr
 21294  000D0A  C063  F020         	movff	strspn@s2+1,?_strchr+1
 21295  000D0E  C060  FFD9         	movff	strspn@s1,fsr2l
 21296  000D12  C061  FFDA         	movff	strspn@s1+1,fsr2h
 21297  000D16  50DF               	movf	indf2,w,c
 21298  000D18  6E21               	movwf	?_strchr+2,c
 21299  000D1A  6A22               	clrf	?_strchr+3,c
 21300  000D1C  EC86  F007         	call	_strchr	;wreg free
 21301  000D20  5020               	movf	?_strchr+1,w,c
 21302  000D22  101F               	iorwf	?_strchr,w,c
 21303  000D24  E1E5               	bnz	l19075
 21304  000D26                     l2772:
 21305  000D26  C025  F060         	movff	strspn@i,?_strspn
 21306  000D2A  C026  F061         	movff	strspn@i+1,?_strspn+1
 21307  000D2E  0012               	return	
 21308  000D30                     __end_of_strspn:
 21309                           	opt stack 0
 21310                           tblptru	equ	0xFF8
 21311                           tblptrh	equ	0xFF7
 21312                           tblptrl	equ	0xFF6
 21313                           tablat	equ	0xFF5
 21314                           prodh	equ	0xFF4
 21315                           prodl	equ	0xFF3
 21316                           intcon	equ	0xFF2
 21317                           indf0	equ	0xFEF
 21318                           postinc0	equ	0xFEE
 21319                           fsr0h	equ	0xFEA
 21320                           fsr0l	equ	0xFE9
 21321                           wreg	equ	0xFE8
 21322                           indf1	equ	0xFE7
 21323                           postinc1	equ	0xFE6
 21324                           postdec1	equ	0xFE5
 21325                           fsr1h	equ	0xFE2
 21326                           fsr1l	equ	0xFE1
 21327                           indf2	equ	0xFDF
 21328                           postinc2	equ	0xFDE
 21329                           postdec2	equ	0xFDD
 21330                           plusw2	equ	0xFDB
 21331                           fsr2h	equ	0xFDA
 21332                           fsr2l	equ	0xFD9
 21333                           status	equ	0xFD8
 21334                           
 21335 ;; *************** function _strchr *****************
 21336 ;; Defined at:
 21337 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strchr.c"
 21338 ;; Parameters:    Size  Location     Type
 21339 ;;  ptr             2   30[COMRAM] PTR const unsigned char 
 21340 ;;		 -> STR_130(2), STR_128(2), STR_126(2), STR_124(2), 
 21341 ;;		 -> STR_121(2), STR_117(2), STR_115(2), STR_113(2), 
 21342 ;;		 -> STR_111(2), STR_109(2), STR_106(2), STR_87(2), 
 21343 ;;		 -> STR_85(2), STR_83(2), STR_55(2), STR_53(2), 
 21344 ;;		 -> STR_51(2), STR_35(2), STR_34(2), STR_33(2), 
 21345 ;;		 -> STR_32(2), STR_31(2), NULL(0), STR_30(2), 
 21346 ;;		 -> cmdbuf(80), 
 21347 ;;  chr             2   32[COMRAM] int 
 21348 ;; Auto vars:     Size  Location     Type
 21349 ;;		None
 21350 ;; Return value:  Size  Location     Type
 21351 ;;                  2   30[COMRAM] PTR unsigned char 
 21352 ;; Registers used:
 21353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21354 ;; Tracked objects:
 21355 ;;		On entry : D/2
 21356 ;;		On exit  : 0/0
 21357 ;;		Unchanged: 0/0
 21358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21359 ;;      Params:         4       0       0       0       0       0       0
 21360 ;;      Locals:         0       0       0       0       0       0       0
 21361 ;;      Temps:          2       0       0       0       0       0       0
 21362 ;;      Totals:         6       0       0       0       0       0       0
 21363 ;;Total ram usage:        6 bytes
 21364 ;; Hardware stack levels used:    1
 21365 ;; Hardware stack levels required when called:    3
 21366 ;; This function calls:
 21367 ;;		Nothing
 21368 ;; This function is called by:
 21369 ;;		_doModeVerbose
 21370 ;;		_strcspn
 21371 ;;		_strspn
 21372 ;; This function uses a non-reentrant model
 21373 ;;
 21374                           
 21375                           	psect	text45
 21376  000F0C                     __ptext45:
 21377                           	opt stack 0
 21378  000F0C                     _strchr:
 21379                           	opt stack 25
 21380  000F0C                     l2674:
 21381  000F0C  501F               	movf	strchr@ptr,w,c
 21382  000F0E  6EF6               	movwf	tblptrl,c
 21383  000F10  6EE9               	movwf	fsr0l,c
 21384  000F12  0E05               	movlw	(high __ramtop+-1)
 21385  000F14  6EEA               	movwf	fsr0h,c
 21386  000F16  5020               	movf	strchr@ptr+1,w,c
 21387  000F18  64EA               	cpfsgt	fsr0h,c
 21388  000F1A  D003               	bra	u22077
 21389  000F1C  6EEA               	movwf	fsr0h,c
 21390  000F1E  50EF               	movf	indf0,w,c
 21391  000F20  D003               	bra	u22070
 21392  000F22                     u22077:
 21393  000F22  6EF7               	movwf	tblptrh,c
 21394  000F24  0008               	tblrd		*
 21395  000F26  50F5               	movf	tablat,w,c
 21396  000F28                     u22070:
 21397  000F28  1821               	xorwf	strchr@chr,w,c
 21398  000F2A  E105               	bnz	l17631
 21399  000F2C  C01F  F01F         	movff	strchr@ptr,?_strchr
 21400  000F30  C020  F020         	movff	strchr@ptr+1,?_strchr+1
 21401  000F34  D018               	goto	l2676
 21402  000F36                     l17631:
 21403  000F36  501F               	movf	strchr@ptr,w,c
 21404  000F38  6E23               	movwf	??_strchr& (0+255),c
 21405  000F3A  5020               	movf	strchr@ptr+1,w,c
 21406  000F3C  6E24               	movwf	(??_strchr+1)& (0+255),c
 21407  000F3E  4A1F               	infsnz	strchr@ptr,f,c
 21408  000F40  2A20               	incf	strchr@ptr+1,f,c
 21409  000F42  5023               	movf	??_strchr,w,c
 21410  000F44  6EF6               	movwf	tblptrl,c
 21411  000F46  6EE9               	movwf	fsr0l,c
 21412  000F48  0E05               	movlw	(high __ramtop+-1)
 21413  000F4A  6EEA               	movwf	fsr0h,c
 21414  000F4C  5024               	movf	??_strchr+1,w,c
 21415  000F4E  64EA               	cpfsgt	fsr0h,c
 21416  000F50  D003               	bra	u22097
 21417  000F52  6EEA               	movwf	fsr0h,c
 21418  000F54  50EF               	movf	indf0,w,c
 21419  000F56  D003               	bra	u22090
 21420  000F58                     u22097:
 21421  000F58  6EF7               	movwf	tblptrh,c
 21422  000F5A  0008               	tblrd		*
 21423  000F5C  50F5               	movf	tablat,w,c
 21424  000F5E                     u22090:
 21425  000F5E  0900               	iorlw	0
 21426  000F60  E1D5               	bnz	l2674
 21427  000F62  6A1F               	clrf	?_strchr,c
 21428  000F64  6A20               	clrf	?_strchr+1,c
 21429  000F66                     l2676:
 21430  000F66  0012               	return	
 21431  000F68                     __end_of_strchr:
 21432                           	opt stack 0
 21433                           tblptru	equ	0xFF8
 21434                           tblptrh	equ	0xFF7
 21435                           tblptrl	equ	0xFF6
 21436                           tablat	equ	0xFF5
 21437                           prodh	equ	0xFF4
 21438                           prodl	equ	0xFF3
 21439                           intcon	equ	0xFF2
 21440                           indf0	equ	0xFEF
 21441                           postinc0	equ	0xFEE
 21442                           fsr0h	equ	0xFEA
 21443                           fsr0l	equ	0xFE9
 21444                           wreg	equ	0xFE8
 21445                           indf1	equ	0xFE7
 21446                           postinc1	equ	0xFE6
 21447                           postdec1	equ	0xFE5
 21448                           fsr1h	equ	0xFE2
 21449                           fsr1l	equ	0xFE1
 21450                           indf2	equ	0xFDF
 21451                           postinc2	equ	0xFDE
 21452                           postdec2	equ	0xFDD
 21453                           plusw2	equ	0xFDB
 21454                           fsr2h	equ	0xFDA
 21455                           fsr2l	equ	0xFD9
 21456                           status	equ	0xFD8
 21457                           
 21458 ;; *************** function _stristr *****************
 21459 ;; Defined at:
 21460 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\stristr.c"
 21461 ;; Parameters:    Size  Location     Type
 21462 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21463 ;;		 -> NULL(0), cmdbuf(80), 
 21464 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21465 ;;		 -> STR_168(2), STR_167(9), STR_165(10), STR_162(4), 
 21466 ;;		 -> STR_160(3), STR_159(11), STR_156(4), STR_154(3), 
 21467 ;;		 -> STR_153(6), STR_151(6), STR_149(5), STR_147(8), 
 21468 ;;		 -> STR_146(6), STR_145(9), STR_144(7), STR_143(7), 
 21469 ;;		 -> STR_142(5), STR_141(6), STR_140(9), STR_138(11), 
 21470 ;;		 -> STR_136(8), STR_134(4), STR_133(5), STR_120(5), 
 21471 ;;		 -> STR_118(11), STR_105(7), STR_97(5), STR_81(5), 
 21472 ;;		 -> STR_49(5), STR_47(5), STR_45(5), STR_43(4), 
 21473 ;;		 -> STR_41(5), STR_38(3), STR_29(3), STR_20(7), 
 21474 ;;		 -> STR_18(8), STR_16(7), STR_14(9), STR_12(6), 
 21475 ;;		 -> STR_10(7), STR_8(5), STR_6(5), 
 21476 ;; Auto vars:     Size  Location     Type
 21477 ;;		None
 21478 ;; Return value:  Size  Location     Type
 21479 ;;                  2    6[BANK0 ] PTR unsigned char 
 21480 ;; Registers used:
 21481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21482 ;; Tracked objects:
 21483 ;;		On entry : F/0
 21484 ;;		On exit  : F/0
 21485 ;;		Unchanged: 0/0
 21486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21487 ;;      Params:         0       4       0       0       0       0       0
 21488 ;;      Locals:         0       0       0       0       0       0       0
 21489 ;;      Temps:          0       0       0       0       0       0       0
 21490 ;;      Totals:         0       4       0       0       0       0       0
 21491 ;;Total ram usage:        4 bytes
 21492 ;; Hardware stack levels used:    1
 21493 ;; Hardware stack levels required when called:    5
 21494 ;; This function calls:
 21495 ;;		_strlen
 21496 ;;		_strnicmp
 21497 ;;		_strichr
 21498 ;; This function is called by:
 21499 ;;		_doModeVerbose
 21500 ;; This function uses a non-reentrant model
 21501 ;;
 21502                           
 21503                           	psect	text46
 21504  00131A                     __ptext46:
 21505                           	opt stack 0
 21506  00131A                     _stristr:
 21507                           	opt stack 23
 21508                           
 21509                           ; BSR set to: 0
 21510                           
 21511                           ;incstack = 0
 21512                           ;incstack = 0
 21513  00131A  D02F               	goto	l17325
 21514  00131C                     l17319:
 21515                           
 21516                           ; BSR set to: 0
 21517  00131C  C066  F060         	movff	stristr@s1,?_strnicmp
 21518  001320  C067  F061         	movff	stristr@s1+1,?_strnicmp+1
 21519  001324  C068  F062         	movff	stristr@s2,?_strnicmp+2
 21520  001328  C069  F063         	movff	stristr@s2+1,?_strnicmp+3
 21521  00132C  C068  F01F         	movff	stristr@s2,?_strlen
 21522  001330  C069  F020         	movff	stristr@s2+1,?_strlen+1
 21523  001334  ECB9  F005         	call	_strlen	;wreg free
 21524  001338  C01F  F064         	movff	?_strlen,?_strnicmp+4
 21525  00133C  C020  F065         	movff	?_strlen+1,?_strnicmp+5
 21526  001340  EC75  F008         	call	_strnicmp	;wreg free
 21527  001344  5161               	movf	(?_strnicmp+1)& (0+255),w,b
 21528  001346  1160               	iorwf	?_strnicmp& (0+255),w,b
 21529  001348  E105               	bnz	l17323
 21530                           
 21531                           ; BSR set to: 0
 21532  00134A  C066  F066         	movff	stristr@s1,?_stristr
 21533  00134E  C067  F067         	movff	stristr@s1+1,?_stristr+1
 21534  001352  D01F               	goto	l2695
 21535  001354                     l17323:
 21536                           
 21537                           ; BSR set to: 0
 21538  001354  2966               	incf	stristr@s1& (0+255),w,b
 21539  001356  6E20               	movwf	?_strichr,c
 21540  001358  0E00               	movlw	0
 21541  00135A  2167               	addwfc	(stristr@s1+1)& (0+255),w,b
 21542  00135C  6E21               	movwf	?_strichr+1,c
 21543  00135E  C068  FFF6         	movff	stristr@s2,tblptrl
 21544  001362  C069  FFF7         	movff	stristr@s2+1,tblptrh
 21545  001366  0008               	tblrd		*
 21546  001368  50F5               	movf	tablat,w,c
 21547  00136A  6E22               	movwf	?_strichr+2,c
 21548  00136C  6A23               	clrf	?_strichr+3,c
 21549  00136E  ECF6  F005         	call	_strichr	;wreg free
 21550  001372  C020  F066         	movff	?_strichr,stristr@s1
 21551  001376  C021  F067         	movff	?_strichr+1,stristr@s1+1
 21552  00137A                     l17325:
 21553  00137A  0100               	movlb	0	; () banked
 21554  00137C  5167               	movf	(stristr@s1+1)& (0+255),w,b
 21555  00137E  1166               	iorwf	stristr@s1& (0+255),w,b
 21556  001380  E006               	bz	l2698
 21557                           
 21558                           ; BSR set to: 0
 21559  001382  C066  FFD9         	movff	stristr@s1,fsr2l
 21560  001386  C067  FFDA         	movff	stristr@s1+1,fsr2h
 21561  00138A  50DF               	movf	indf2,w,c
 21562  00138C  E1C7               	bnz	l17319
 21563  00138E                     l2698:
 21564                           
 21565                           ; BSR set to: 0
 21566  00138E  6B66               	clrf	?_stristr& (0+255),b
 21567  001390  6B67               	clrf	(?_stristr+1)& (0+255),b
 21568  001392                     l2695:
 21569                           
 21570                           ; BSR set to: 0
 21571  001392  0012               	return	
 21572  001394                     __end_of_stristr:
 21573                           	opt stack 0
 21574                           tblptru	equ	0xFF8
 21575                           tblptrh	equ	0xFF7
 21576                           tblptrl	equ	0xFF6
 21577                           tablat	equ	0xFF5
 21578                           prodh	equ	0xFF4
 21579                           prodl	equ	0xFF3
 21580                           intcon	equ	0xFF2
 21581                           indf0	equ	0xFEF
 21582                           postinc0	equ	0xFEE
 21583                           fsr0h	equ	0xFEA
 21584                           fsr0l	equ	0xFE9
 21585                           wreg	equ	0xFE8
 21586                           indf1	equ	0xFE7
 21587                           postinc1	equ	0xFE6
 21588                           postdec1	equ	0xFE5
 21589                           fsr1h	equ	0xFE2
 21590                           fsr1l	equ	0xFE1
 21591                           indf2	equ	0xFDF
 21592                           postinc2	equ	0xFDE
 21593                           postdec2	equ	0xFDD
 21594                           plusw2	equ	0xFDB
 21595                           fsr2h	equ	0xFDA
 21596                           fsr2l	equ	0xFD9
 21597                           status	equ	0xFD8
 21598                           
 21599 ;; *************** function _strichr *****************
 21600 ;; Defined at:
 21601 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strichr.c"
 21602 ;; Parameters:    Size  Location     Type
 21603 ;;  ptr             2   31[COMRAM] PTR const unsigned char 
 21604 ;;		 -> NULL(0), cmdbuf(80), 
 21605 ;;  chr             2   33[COMRAM] int 
 21606 ;; Auto vars:     Size  Location     Type
 21607 ;;		None
 21608 ;; Return value:  Size  Location     Type
 21609 ;;                  2   31[COMRAM] PTR unsigned char 
 21610 ;; Registers used:
 21611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21612 ;; Tracked objects:
 21613 ;;		On entry : F/0
 21614 ;;		On exit  : 0/0
 21615 ;;		Unchanged: 0/0
 21616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21617 ;;      Params:         4       0       0       0       0       0       0
 21618 ;;      Locals:         0       0       0       0       0       0       0
 21619 ;;      Temps:          0       0       0       0       0       0       0
 21620 ;;      Totals:         4       0       0       0       0       0       0
 21621 ;;Total ram usage:        4 bytes
 21622 ;; Hardware stack levels used:    1
 21623 ;; Hardware stack levels required when called:    4
 21624 ;; This function calls:
 21625 ;;		_toupper
 21626 ;; This function is called by:
 21627 ;;		_stristr
 21628 ;; This function uses a non-reentrant model
 21629 ;;
 21630                           
 21631                           	psect	text47
 21632  000BEC                     __ptext47:
 21633                           	opt stack 0
 21634  000BEC                     _strichr:
 21635                           	opt stack 23
 21636                           
 21637                           ; BSR set to: 0
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;incstack = 0
 21641                           ;incstack = 0
 21642  000BEC  5022               	movf	strichr@chr,w,c
 21643  000BEE  EC81  F004         	call	_toupper
 21644  000BF2  6E22               	movwf	strichr@chr,c
 21645  000BF4  6A23               	clrf	strichr@chr+1,c
 21646  000BF6  D010               	goto	l19061
 21647  000BF8                     l19055:
 21648  000BF8  C020  FFD9         	movff	strichr@ptr,fsr2l
 21649  000BFC  C021  FFDA         	movff	strichr@ptr+1,fsr2h
 21650  000C00  50DF               	movf	indf2,w,c
 21651  000C02  EC81  F004         	call	_toupper
 21652  000C06  1822               	xorwf	strichr@chr,w,c
 21653  000C08  E105               	bnz	l19059
 21654  000C0A  C020  F020         	movff	strichr@ptr,?_strichr
 21655  000C0E  C021  F021         	movff	strichr@ptr+1,?_strichr+1
 21656  000C12  D00A               	goto	l2762
 21657  000C14                     l19059:
 21658  000C14  4A20               	infsnz	strichr@ptr,f,c
 21659  000C16  2A21               	incf	strichr@ptr+1,f,c
 21660  000C18                     l19061:
 21661  000C18  C020  FFD9         	movff	strichr@ptr,fsr2l
 21662  000C1C  C021  FFDA         	movff	strichr@ptr+1,fsr2h
 21663  000C20  50DF               	movf	indf2,w,c
 21664  000C22  E1EA               	bnz	l19055
 21665  000C24  6A20               	clrf	?_strichr,c
 21666  000C26  6A21               	clrf	?_strichr+1,c
 21667  000C28                     l2762:
 21668  000C28  0012               	return	
 21669  000C2A                     __end_of_strichr:
 21670                           	opt stack 0
 21671                           tblptru	equ	0xFF8
 21672                           tblptrh	equ	0xFF7
 21673                           tblptrl	equ	0xFF6
 21674                           tablat	equ	0xFF5
 21675                           prodh	equ	0xFF4
 21676                           prodl	equ	0xFF3
 21677                           intcon	equ	0xFF2
 21678                           indf0	equ	0xFEF
 21679                           postinc0	equ	0xFEE
 21680                           fsr0h	equ	0xFEA
 21681                           fsr0l	equ	0xFE9
 21682                           wreg	equ	0xFE8
 21683                           indf1	equ	0xFE7
 21684                           postinc1	equ	0xFE6
 21685                           postdec1	equ	0xFE5
 21686                           fsr1h	equ	0xFE2
 21687                           fsr1l	equ	0xFE1
 21688                           indf2	equ	0xFDF
 21689                           postinc2	equ	0xFDE
 21690                           postdec2	equ	0xFDD
 21691                           plusw2	equ	0xFDB
 21692                           fsr2h	equ	0xFDA
 21693                           fsr2l	equ	0xFD9
 21694                           status	equ	0xFD8
 21695                           
 21696 ;; *************** function _strnicmp *****************
 21697 ;; Defined at:
 21698 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strnicmp.c"
 21699 ;; Parameters:    Size  Location     Type
 21700 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 21701 ;;		 -> NULL(0), cmdbuf(80), 
 21702 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 21703 ;;		 -> STR_168(2), STR_167(9), STR_165(10), STR_162(4), 
 21704 ;;		 -> STR_160(3), STR_159(11), STR_156(4), STR_154(3), 
 21705 ;;		 -> STR_153(6), STR_151(6), STR_149(5), STR_147(8), 
 21706 ;;		 -> STR_146(6), STR_145(9), STR_144(7), STR_143(7), 
 21707 ;;		 -> STR_142(5), STR_141(6), STR_140(9), STR_138(11), 
 21708 ;;		 -> STR_136(8), STR_134(4), STR_133(5), STR_120(5), 
 21709 ;;		 -> STR_118(11), STR_105(7), STR_97(5), STR_81(5), 
 21710 ;;		 -> STR_49(5), STR_47(5), STR_45(5), STR_43(4), 
 21711 ;;		 -> STR_41(5), STR_38(3), STR_29(3), STR_20(7), 
 21712 ;;		 -> STR_18(8), STR_16(7), STR_14(9), STR_12(6), 
 21713 ;;		 -> STR_10(7), STR_8(5), STR_6(5), 
 21714 ;;  len             2    4[BANK0 ] unsigned int 
 21715 ;; Auto vars:     Size  Location     Type
 21716 ;;  r               1   36[COMRAM] char 
 21717 ;; Return value:  Size  Location     Type
 21718 ;;                  2    0[BANK0 ] int 
 21719 ;; Registers used:
 21720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21721 ;; Tracked objects:
 21722 ;;		On entry : 0/0
 21723 ;;		On exit  : F/0
 21724 ;;		Unchanged: 0/0
 21725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21726 ;;      Params:         0       6       0       0       0       0       0
 21727 ;;      Locals:         1       0       0       0       0       0       0
 21728 ;;      Temps:          2       0       0       0       0       0       0
 21729 ;;      Totals:         3       6       0       0       0       0       0
 21730 ;;Total ram usage:        9 bytes
 21731 ;; Hardware stack levels used:    1
 21732 ;; Hardware stack levels required when called:    4
 21733 ;; This function calls:
 21734 ;;		_toupper
 21735 ;; This function is called by:
 21736 ;;		_stristr
 21737 ;; This function uses a non-reentrant model
 21738 ;;
 21739                           
 21740                           	psect	text48
 21741  0010EA                     __ptext48:
 21742                           	opt stack 0
 21743  0010EA                     _strnicmp:
 21744                           	opt stack 23
 21745                           
 21746                           ;incstack = 0
 21747                           ;incstack = 0
 21748  0010EA  D028               	goto	l19051
 21749  0010EC                     l19041:
 21750                           
 21751                           ; BSR set to: 0
 21752  0010EC  C062  FFF6         	movff	strnicmp@s2,tblptrl
 21753  0010F0  C063  FFF7         	movff	strnicmp@s2+1,tblptrh
 21754  0010F4  0008               	tblrd		*
 21755  0010F6  50F5               	movf	tablat,w,c
 21756  0010F8  EC81  F004         	call	_toupper
 21757  0010FC  6E23               	movwf	??_strnicmp& (0+255),c
 21758  0010FE  C060  FFD9         	movff	strnicmp@s1,fsr2l
 21759  001102  C061  FFDA         	movff	strnicmp@s1+1,fsr2h
 21760  001106  50DF               	movf	indf2,w,c
 21761  001108  EC81  F004         	call	_toupper
 21762  00110C  6E24               	movwf	(??_strnicmp+1)& (0+255),c
 21763  00110E  5023               	movf	??_strnicmp,w,c
 21764  001110  5C24               	subwf	??_strnicmp+1,w,c
 21765  001112  6E25               	movwf	strnicmp@r,c
 21766  001114  6625               	tstfsz	strnicmp@r& (0+255),c
 21767  001116  D006               	goto	l19045
 21768  001118  C060  FFD9         	movff	strnicmp@s1,fsr2l
 21769  00111C  C061  FFDA         	movff	strnicmp@s1+1,fsr2h
 21770  001120  50DF               	movf	indf2,w,c
 21771  001122  E107               	bnz	l19049
 21772  001124                     l19045:
 21773  001124  5025               	movf	strnicmp@r,w,c
 21774  001126  0100               	movlb	0	; () banked
 21775  001128  6F60               	movwf	?_strnicmp& (0+255),b
 21776  00112A  6B61               	clrf	(?_strnicmp+1)& (0+255),b
 21777  00112C  BF60               	btfsc	?_strnicmp& (0+255),7,b
 21778  00112E  0761               	decf	(?_strnicmp+1)& (0+255),f,b
 21779  001130  D00F               	goto	l2714
 21780  001132                     l19049:
 21781  001132  0100               	movlb	0	; () banked
 21782  001134  4B60               	infsnz	strnicmp@s1& (0+255),f,b
 21783  001136  2B61               	incf	(strnicmp@s1+1)& (0+255),f,b
 21784  001138  4B62               	infsnz	strnicmp@s2& (0+255),f,b
 21785  00113A  2B63               	incf	(strnicmp@s2+1)& (0+255),f,b
 21786  00113C                     l19051:
 21787  00113C  0100               	movlb	0	; () banked
 21788  00113E  0764               	decf	strnicmp@len& (0+255),f,b
 21789  001140  A0D8               	btfss	status,0,c
 21790  001142  0765               	decf	(strnicmp@len+1)& (0+255),f,b
 21791  001144  2964               	incf	strnicmp@len& (0+255),w,b
 21792  001146  B4D8               	btfsc	status,2,c
 21793  001148  2965               	incf	(strnicmp@len+1)& (0+255),w,b
 21794  00114A  E1D0               	bnz	l19041
 21795                           
 21796                           ; BSR set to: 0
 21797  00114C  6B60               	clrf	?_strnicmp& (0+255),b
 21798  00114E  6B61               	clrf	(?_strnicmp+1)& (0+255),b
 21799  001150                     l2714:
 21800                           
 21801                           ; BSR set to: 0
 21802  001150  0012               	return	
 21803  001152                     __end_of_strnicmp:
 21804                           	opt stack 0
 21805                           tblptru	equ	0xFF8
 21806                           tblptrh	equ	0xFF7
 21807                           tblptrl	equ	0xFF6
 21808                           tablat	equ	0xFF5
 21809                           prodh	equ	0xFF4
 21810                           prodl	equ	0xFF3
 21811                           intcon	equ	0xFF2
 21812                           indf0	equ	0xFEF
 21813                           postinc0	equ	0xFEE
 21814                           fsr0h	equ	0xFEA
 21815                           fsr0l	equ	0xFE9
 21816                           wreg	equ	0xFE8
 21817                           indf1	equ	0xFE7
 21818                           postinc1	equ	0xFE6
 21819                           postdec1	equ	0xFE5
 21820                           fsr1h	equ	0xFE2
 21821                           fsr1l	equ	0xFE1
 21822                           indf2	equ	0xFDF
 21823                           postinc2	equ	0xFDE
 21824                           postdec2	equ	0xFDD
 21825                           plusw2	equ	0xFDB
 21826                           fsr2h	equ	0xFDA
 21827                           fsr2l	equ	0xFD9
 21828                           status	equ	0xFD8
 21829                           
 21830 ;; *************** function _toupper *****************
 21831 ;; Defined at:
 21832 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\toupper.c"
 21833 ;; Parameters:    Size  Location     Type
 21834 ;;  c               1    wreg     unsigned char 
 21835 ;; Auto vars:     Size  Location     Type
 21836 ;;  c               1   30[COMRAM] unsigned char 
 21837 ;; Return value:  Size  Location     Type
 21838 ;;                  1    wreg      unsigned char 
 21839 ;; Registers used:
 21840 ;;		wreg, status,2, status,0
 21841 ;; Tracked objects:
 21842 ;;		On entry : 0/0
 21843 ;;		On exit  : 0/0
 21844 ;;		Unchanged: 0/0
 21845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21846 ;;      Params:         0       0       0       0       0       0       0
 21847 ;;      Locals:         1       0       0       0       0       0       0
 21848 ;;      Temps:          0       0       0       0       0       0       0
 21849 ;;      Totals:         1       0       0       0       0       0       0
 21850 ;;Total ram usage:        1 bytes
 21851 ;; Hardware stack levels used:    1
 21852 ;; Hardware stack levels required when called:    3
 21853 ;; This function calls:
 21854 ;;		Nothing
 21855 ;; This function is called by:
 21856 ;;		_strnicmp
 21857 ;;		_strichr
 21858 ;; This function uses a non-reentrant model
 21859 ;;
 21860                           
 21861                           	psect	text49
 21862  000902                     __ptext49:
 21863                           	opt stack 0
 21864  000902                     _toupper:
 21865                           	opt stack 23
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;incstack = 0
 21869                           ;incstack = 0
 21870                           ;toupper@c stored from wreg
 21871  000902  CFE8 F01F          	movff	wreg,toupper@c
 21872  000906  0E7B               	movlw	123
 21873  000908  601F               	cpfslt	toupper@c,c
 21874  00090A  D004               	goto	l19069
 21875  00090C  0E60               	movlw	96
 21876  00090E  641F               	cpfsgt	toupper@c,c
 21877  000910  D001               	goto	l19069
 21878  000912  9A1F               	bcf	toupper@c,5,c
 21879  000914                     l19069:
 21880  000914  501F               	movf	toupper@c,w,c
 21881  000916  0012               	return	
 21882  000918                     __end_of_toupper:
 21883                           	opt stack 0
 21884                           tblptru	equ	0xFF8
 21885                           tblptrh	equ	0xFF7
 21886                           tblptrl	equ	0xFF6
 21887                           tablat	equ	0xFF5
 21888                           prodh	equ	0xFF4
 21889                           prodl	equ	0xFF3
 21890                           intcon	equ	0xFF2
 21891                           indf0	equ	0xFEF
 21892                           postinc0	equ	0xFEE
 21893                           fsr0h	equ	0xFEA
 21894                           fsr0l	equ	0xFE9
 21895                           wreg	equ	0xFE8
 21896                           indf1	equ	0xFE7
 21897                           postinc1	equ	0xFE6
 21898                           postdec1	equ	0xFE5
 21899                           fsr1h	equ	0xFE2
 21900                           fsr1l	equ	0xFE1
 21901                           indf2	equ	0xFDF
 21902                           postinc2	equ	0xFDE
 21903                           postdec2	equ	0xFDD
 21904                           plusw2	equ	0xFDB
 21905                           fsr2h	equ	0xFDA
 21906                           fsr2l	equ	0xFD9
 21907                           status	equ	0xFD8
 21908                           
 21909 ;; *************** function _strlen *****************
 21910 ;; Defined at:
 21911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strlen.c"
 21912 ;; Parameters:    Size  Location     Type
 21913 ;;  s               2   30[COMRAM] PTR const unsigned char 
 21914 ;;		 -> printGUID@buf(3), STR_168(2), STR_167(9), STR_165(10), 
 21915 ;;		 -> STR_162(4), STR_160(3), STR_159(11), STR_156(4), 
 21916 ;;		 -> STR_154(3), STR_153(6), STR_151(6), STR_149(5), 
 21917 ;;		 -> STR_147(8), STR_146(6), STR_145(9), STR_144(7), 
 21918 ;;		 -> STR_143(7), STR_142(5), STR_141(6), STR_140(9), 
 21919 ;;		 -> STR_138(11), STR_136(8), STR_134(4), STR_133(5), 
 21920 ;;		 -> STR_120(5), STR_118(11), STR_105(7), STR_97(5), 
 21921 ;;		 -> STR_81(5), wrkbuf(80), STR_49(5), STR_47(5), 
 21922 ;;		 -> STR_45(5), STR_43(4), STR_41(5), STR_38(3), 
 21923 ;;		 -> STR_29(3), STR_20(7), STR_18(8), STR_16(7), 
 21924 ;;		 -> STR_14(9), STR_12(6), STR_10(7), STR_8(5), 
 21925 ;;		 -> STR_6(5), cmdbuf(80), 
 21926 ;; Auto vars:     Size  Location     Type
 21927 ;;  cp              2   32[COMRAM] PTR const unsigned char 
 21928 ;;		 -> printGUID@buf(3), STR_168(2), STR_167(9), STR_165(10), 
 21929 ;;		 -> STR_162(4), STR_160(3), STR_159(11), STR_156(4), 
 21930 ;;		 -> STR_154(3), STR_153(6), STR_151(6), STR_149(5), 
 21931 ;;		 -> STR_147(8), STR_146(6), STR_145(9), STR_144(7), 
 21932 ;;		 -> STR_143(7), STR_142(5), STR_141(6), STR_140(9), 
 21933 ;;		 -> STR_138(11), STR_136(8), STR_134(4), STR_133(5), 
 21934 ;;		 -> STR_120(5), STR_118(11), STR_105(7), STR_97(5), 
 21935 ;;		 -> STR_81(5), wrkbuf(80), STR_49(5), STR_47(5), 
 21936 ;;		 -> STR_45(5), STR_43(4), STR_41(5), STR_38(3), 
 21937 ;;		 -> STR_29(3), STR_20(7), STR_18(8), STR_16(7), 
 21938 ;;		 -> STR_14(9), STR_12(6), STR_10(7), STR_8(5), 
 21939 ;;		 -> STR_6(5), cmdbuf(80), 
 21940 ;; Return value:  Size  Location     Type
 21941 ;;                  2   30[COMRAM] unsigned int 
 21942 ;; Registers used:
 21943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21944 ;; Tracked objects:
 21945 ;;		On entry : E/1
 21946 ;;		On exit  : 0/0
 21947 ;;		Unchanged: 0/0
 21948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21949 ;;      Params:         2       0       0       0       0       0       0
 21950 ;;      Locals:         2       0       0       0       0       0       0
 21951 ;;      Temps:          0       0       0       0       0       0       0
 21952 ;;      Totals:         4       0       0       0       0       0       0
 21953 ;;Total ram usage:        4 bytes
 21954 ;; Hardware stack levels used:    1
 21955 ;; Hardware stack levels required when called:    3
 21956 ;; This function calls:
 21957 ;;		Nothing
 21958 ;; This function is called by:
 21959 ;;		_doModeSLCAN
 21960 ;;		_receiveSendEventSLCAN
 21961 ;;		_printGUID
 21962 ;;		_hexStringToBytes
 21963 ;;		_stristr
 21964 ;; This function uses a non-reentrant model
 21965 ;;
 21966                           
 21967                           	psect	text50
 21968  000B72                     __ptext50:
 21969                           	opt stack 0
 21970  000B72                     _strlen:
 21971                           	opt stack 24
 21972                           
 21973                           ;incstack = 0
 21974                           ;incstack = 0
 21975  000B72  C01F  F021         	movff	strlen@s,strlen@cp
 21976  000B76  C020  F022         	movff	strlen@s+1,strlen@cp+1
 21977  000B7A  D002               	goto	l18603
 21978  000B7C                     l18601:
 21979  000B7C  4A21               	infsnz	strlen@cp,f,c
 21980  000B7E  2A22               	incf	strlen@cp+1,f,c
 21981  000B80                     l18603:
 21982  000B80  5021               	movf	strlen@cp,w,c
 21983  000B82  6EF6               	movwf	tblptrl,c
 21984  000B84  6EE9               	movwf	fsr0l,c
 21985  000B86  0E05               	movlw	(high __ramtop+-1)
 21986  000B88  6EEA               	movwf	fsr0h,c
 21987  000B8A  5022               	movf	strlen@cp+1,w,c
 21988  000B8C  64EA               	cpfsgt	fsr0h,c
 21989  000B8E  D003               	bra	u23857
 21990  000B90  6EEA               	movwf	fsr0h,c
 21991  000B92  50EF               	movf	indf0,w,c
 21992  000B94  D003               	bra	u23850
 21993  000B96                     u23857:
 21994  000B96  6EF7               	movwf	tblptrh,c
 21995  000B98  0008               	tblrd		*
 21996  000B9A  50F5               	movf	tablat,w,c
 21997  000B9C                     u23850:
 21998  000B9C  0900               	iorlw	0
 21999  000B9E  E1EE               	bnz	l18601
 22000  000BA0  501F               	movf	strlen@s,w,c
 22001  000BA2  5C21               	subwf	strlen@cp,w,c
 22002  000BA4  6E1F               	movwf	?_strlen,c
 22003  000BA6  5020               	movf	strlen@s+1,w,c
 22004  000BA8  5822               	subwfb	strlen@cp+1,w,c
 22005  000BAA  6E20               	movwf	?_strlen+1,c
 22006  000BAC  0012               	return	
 22007  000BAE                     __end_of_strlen:
 22008                           	opt stack 0
 22009                           tblptru	equ	0xFF8
 22010                           tblptrh	equ	0xFF7
 22011                           tblptrl	equ	0xFF6
 22012                           tablat	equ	0xFF5
 22013                           prodh	equ	0xFF4
 22014                           prodl	equ	0xFF3
 22015                           intcon	equ	0xFF2
 22016                           indf0	equ	0xFEF
 22017                           postinc0	equ	0xFEE
 22018                           fsr0h	equ	0xFEA
 22019                           fsr0l	equ	0xFE9
 22020                           wreg	equ	0xFE8
 22021                           indf1	equ	0xFE7
 22022                           postinc1	equ	0xFE6
 22023                           postdec1	equ	0xFE5
 22024                           fsr1h	equ	0xFE2
 22025                           fsr1l	equ	0xFE1
 22026                           indf2	equ	0xFDF
 22027                           postinc2	equ	0xFDE
 22028                           postdec2	equ	0xFDD
 22029                           plusw2	equ	0xFDB
 22030                           fsr2h	equ	0xFDA
 22031                           fsr2l	equ	0xFD9
 22032                           status	equ	0xFD8
 22033                           
 22034 ;; *************** function _receivePrintEventVerbose *****************
 22035 ;; Defined at:
 22036 ;;		line 2208 in file "main.c"
 22037 ;; Parameters:    Size  Location     Type
 22038 ;;		None
 22039 ;; Auto vars:     Size  Location     Type
 22040 ;;  i               1   66[BANK0 ] unsigned char 
 22041 ;; Return value:  Size  Location     Type
 22042 ;;                  1    wreg      enum E15660
 22043 ;; Registers used:
 22044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22045 ;; Tracked objects:
 22046 ;;		On entry : F/1
 22047 ;;		On exit  : 0/0
 22048 ;;		Unchanged: 0/0
 22049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22050 ;;      Params:         0       0       0       0       0       0       0
 22051 ;;      Locals:         0      19       0       0       0       0       0
 22052 ;;      Temps:          0       5       0       0       0       0       0
 22053 ;;      Totals:         0      24       0       0       0       0       0
 22054 ;;Total ram usage:       24 bytes
 22055 ;; Hardware stack levels used:    1
 22056 ;; Hardware stack levels required when called:    6
 22057 ;; This function calls:
 22058 ;;		_putsUSART
 22059 ;;		_sprintf
 22060 ;;		_getVSCPFrame
 22061 ;;		_ReadTimer3
 22062 ;;		___wmul
 22063 ;; This function is called by:
 22064 ;;		_doModeVerbose
 22065 ;; This function uses a non-reentrant model
 22066 ;;
 22067                           
 22068                           	psect	text51
 22069  004376                     __ptext51:
 22070                           	opt stack 0
 22071  004376                     _receivePrintEventVerbose:
 22072                           	opt stack 22
 22073                           
 22074                           ; BSR set to: 1
 22075                           ;main.c: 2209: uint8_t i;
 22076                           ;main.c: 2211: if ( getVSCPFrame(&vscpClass,
 22077                           ;main.c: 2212: &vscpType,
 22078                           ;main.c: 2213: &vscpNodeId,
 22079                           ;main.c: 2214: &vscpPriority,
 22080                           ;main.c: 2215: &vscpSize,
 22081                           ;main.c: 2216: vscpData)) {
 22082                           
 22083                           ;incstack = 0
 22084                           ;incstack = 0
 22085  004376  0E01               	movlw	high _vscpClass
 22086  004378  0100               	movlb	0	; () banked
 22087  00437A  6F6A               	movwf	(?_getVSCPFrame+1)& (0+255),b
 22088  00437C  0EAD               	movlw	low _vscpClass
 22089  00437E  6F69               	movwf	?_getVSCPFrame& (0+255),b
 22090  004380  0E01               	movlw	high _vscpType
 22091  004382  6F6C               	movwf	(?_getVSCPFrame+3)& (0+255),b
 22092  004384  0EB2               	movlw	low _vscpType
 22093  004386  6F6B               	movwf	(?_getVSCPFrame+2)& (0+255),b
 22094  004388  0E01               	movlw	high _vscpNodeId
 22095  00438A  6F6E               	movwf	(?_getVSCPFrame+5)& (0+255),b
 22096  00438C  0EAF               	movlw	low _vscpNodeId
 22097  00438E  6F6D               	movwf	(?_getVSCPFrame+4)& (0+255),b
 22098  004390  0E01               	movlw	high _vscpPriority
 22099  004392  6F70               	movwf	(?_getVSCPFrame+7)& (0+255),b
 22100  004394  0EB0               	movlw	low _vscpPriority
 22101  004396  6F6F               	movwf	(?_getVSCPFrame+6)& (0+255),b
 22102  004398  0E01               	movlw	high _vscpSize
 22103  00439A  6F72               	movwf	(?_getVSCPFrame+9)& (0+255),b
 22104  00439C  0EB1               	movlw	low _vscpSize
 22105  00439E  6F71               	movwf	(?_getVSCPFrame+8)& (0+255),b
 22106  0043A0  0E01               	movlw	high _vscpData
 22107  0043A2  6F74               	movwf	(?_getVSCPFrame+11)& (0+255),b
 22108  0043A4  0EA5               	movlw	low _vscpData
 22109  0043A6  6F73               	movwf	(?_getVSCPFrame+10)& (0+255),b
 22110  0043A8  EC0A  F00A         	call	_getVSCPFrame	;wreg free
 22111  0043AC  0900               	iorlw	0
 22112  0043AE  E101 D18F          	bz	l17305
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;main.c: 2219: cntRxFrames++;
 22116  0043B2  2BCD               	incf	_cntRxFrames& (0+255),f,b
 22117  0043B4  0E00               	movlw	0
 22118  0043B6  23CE               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 22119  0043B8  23CF               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 22120  0043BA  23D0               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 22121                           
 22122                           ;main.c: 2220: cntRxBytes += vscpSize;
 22123  0043BC  0101               	movlb	1	; () banked
 22124  0043BE  51B1               	movf	_vscpSize& (0+255),w,b
 22125  0043C0  0100               	movlb	0	; () banked
 22126  0043C2  27C9               	addwf	_cntRxBytes& (0+255),f,b
 22127  0043C4  0E00               	movlw	0
 22128  0043C6  23CA               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 22129  0043C8  23CB               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 22130  0043CA  23CC               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;main.c: 2222: putsUSART((char *) "<Prio=");
 22134  0043CC  0E7C               	movlw	high STR_178
 22135  0043CE  6E21               	movwf	?_putsUSART+1,c
 22136  0043D0  0E2D               	movlw	low STR_178
 22137  0043D2  6E20               	movwf	?_putsUSART,c
 22138  0043D4  EC03  F007         	call	_putsUSART	;wreg free
 22139                           
 22140                           ;main.c: 2223: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpPriority);
 22141  0043D8  0101               	movlb	1	; () banked
 22142  0043DA  6700               	tstfsz	_bHex& (0+255),b
 22143  0043DC  D005               	goto	l17207
 22144                           
 22145                           ; BSR set to: 1
 22146  0043DE  0E7C               	movlw	high STR_61
 22147  0043E0  0100               	movlb	0	; () banked
 22148  0043E2  6F95               	movwf	(_receivePrintEventVerbose$1498+1)& (0+255),b
 22149  0043E4  0EEE               	movlw	low STR_61
 22150  0043E6  D004               	goto	L43
 22151  0043E8                     l17207:
 22152                           
 22153                           ; BSR set to: 1
 22154  0043E8  0E7C               	movlw	high STR_60
 22155  0043EA  0100               	movlb	0	; () banked
 22156  0043EC  6F95               	movwf	(_receivePrintEventVerbose$1498+1)& (0+255),b
 22157  0043EE  0E50               	movlw	low STR_60
 22158  0043F0                     L43:
 22159  0043F0  6F94               	movwf	_receivePrintEventVerbose$1498& (0+255),b
 22160                           
 22161                           ; BSR set to: 0
 22162  0043F2  0E01               	movlw	high _wrkbuf
 22163  0043F4  0100               	movlb	0	; () banked
 22164  0043F6  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22165  0043F8  0E55               	movlw	low _wrkbuf
 22166  0043FA  6F6D               	movwf	?_sprintf& (0+255),b
 22167  0043FC  C094  F06F         	movff	_receivePrintEventVerbose$1498,?_sprintf+2
 22168  004400  C095  F070         	movff	_receivePrintEventVerbose$1498+1,?_sprintf+3
 22169  004404  C1B0  F071         	movff	_vscpPriority,?_sprintf+4
 22170  004408  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22171  00440A  EC4E  F025         	call	_sprintf	;wreg free
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;main.c: 2224: putsUSART(wrkbuf);
 22175  00440E  0101               	movlb	1	; () banked
 22176  004410  0E01               	movlw	high _wrkbuf
 22177  004412  6E21               	movwf	?_putsUSART+1,c
 22178  004414  0E55               	movlw	low _wrkbuf
 22179  004416  6E20               	movwf	?_putsUSART,c
 22180  004418  EC03  F007         	call	_putsUSART	;wreg free
 22181                           
 22182                           ;main.c: 2225: if ( bTimestamp ) {
 22183  00441C  0100               	movlb	0	; () banked
 22184  00441E  51EB               	movf	_bTimestamp& (0+255),w,b
 22185  004420  E052               	bz	l17229
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;main.c: 2226: putsUSART((char *) ",timestamp=");
 22189  004422  0E7B               	movlw	high STR_181
 22190  004424  6E21               	movwf	?_putsUSART+1,c
 22191  004426  0E27               	movlw	low STR_181
 22192  004428  6E20               	movwf	?_putsUSART,c
 22193  00442A  EC03  F007         	call	_putsUSART	;wreg free
 22194                           
 22195                           ;main.c: 2227: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", (timer<<16) | ReadTimer3()*10 );
 22196  00442E  0101               	movlb	1	; () banked
 22197  004430  6700               	tstfsz	_bHex& (0+255),b
 22198  004432  D005               	goto	l17221
 22199                           
 22200                           ; BSR set to: 1
 22201  004434  0E7C               	movlw	high STR_183
 22202  004436  0100               	movlb	0	; () banked
 22203  004438  6F97               	movwf	(_receivePrintEventVerbose$1503+1)& (0+255),b
 22204  00443A  0EDE               	movlw	low STR_183
 22205  00443C  D004               	goto	L44
 22206  00443E                     l17221:
 22207                           
 22208                           ; BSR set to: 1
 22209  00443E  0E7C               	movlw	high STR_182
 22210  004440  0100               	movlb	0	; () banked
 22211  004442  6F97               	movwf	(_receivePrintEventVerbose$1503+1)& (0+255),b
 22212  004444  0E01               	movlw	low STR_182
 22213  004446                     L44:
 22214  004446  6F96               	movwf	_receivePrintEventVerbose$1503& (0+255),b
 22215                           
 22216                           ; BSR set to: 0
 22217  004448  EC6E  F004         	call	_ReadTimer3	;wreg free
 22218  00444C  C01F  F023         	movff	?_ReadTimer3,?___wmul
 22219  004450  C020  F024         	movff	?_ReadTimer3+1,?___wmul+1
 22220  004454  6A26               	clrf	?___wmul+3,c
 22221  004456  0E0A               	movlw	10
 22222  004458  6E25               	movwf	?___wmul+2,c
 22223  00445A  EC9B  F005         	call	___wmul	;wreg free
 22224  00445E  C0DD  F08B         	movff	_timer,??_receivePrintEventVerbose	;volatile
 22225  004462  C0DE  F08C         	movff	_timer+1,??_receivePrintEventVerbose+1	;volatile
 22226  004466  C0DF  F08D         	movff	_timer+2,??_receivePrintEventVerbose+2	;volatile
 22227  00446A  C0E0  F08E         	movff	_timer+3,??_receivePrintEventVerbose+3	;volatile
 22228  00446E  C08C  F08E         	movff	??_receivePrintEventVerbose+1,??_receivePrintEventVerbose+3
 22229  004472  C08B  F08D         	movff	??_receivePrintEventVerbose,??_receivePrintEventVerbose+2
 22230  004476  6B8C               	clrf	(??_receivePrintEventVerbose+1)& (0+255),b
 22231  004478  6B8B               	clrf	??_receivePrintEventVerbose& (0+255),b
 22232  00447A  5123               	movf	?___wmul& (0+255),w,b
 22233  00447C  118B               	iorwf	??_receivePrintEventVerbose& (0+255),w,b
 22234  00447E  6F90               	movwf	_receivePrintEventVerbose$3682& (0+255),b	;volatile
 22235  004480  5124               	movf	(?___wmul+1)& (0+255),w,b
 22236  004482  118C               	iorwf	(??_receivePrintEventVerbose+1)& (0+255),w,b
 22237  004484  6F91               	movwf	(_receivePrintEventVerbose$3682+1)& (0+255),b	;volatile
 22238  004486  0E00               	movlw	0
 22239  004488  118D               	iorwf	(??_receivePrintEventVerbose+2)& (0+255),w,b
 22240  00448A  6F92               	movwf	(_receivePrintEventVerbose$3682+2)& (0+255),b	;volatile
 22241  00448C  0E00               	movlw	0
 22242  00448E  118E               	iorwf	(??_receivePrintEventVerbose+3)& (0+255),w,b
 22243  004490  6F93               	movwf	(_receivePrintEventVerbose$3682+3)& (0+255),b	;volatile
 22244                           
 22245                           ; BSR set to: 0
 22246  004492  0E01               	movlw	high _wrkbuf
 22247  004494  0100               	movlb	0	; () banked
 22248  004496  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22249  004498  0E55               	movlw	low _wrkbuf
 22250  00449A  6F6D               	movwf	?_sprintf& (0+255),b
 22251  00449C  C096  F06F         	movff	_receivePrintEventVerbose$1503,?_sprintf+2
 22252  0044A0  C097  F070         	movff	_receivePrintEventVerbose$1503+1,?_sprintf+3
 22253  0044A4  C090  F071         	movff	_receivePrintEventVerbose$3682,?_sprintf+4	;volatile
 22254  0044A8  C091  F072         	movff	_receivePrintEventVerbose$3682+1,?_sprintf+5	;volatile
 22255  0044AC  C092  F073         	movff	_receivePrintEventVerbose$3682+2,?_sprintf+6	;volatile
 22256  0044B0  C093  F074         	movff	_receivePrintEventVerbose$3682+3,?_sprintf+7	;volatile
 22257  0044B4  EC4E  F025         	call	_sprintf	;wreg free
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;main.c: 2228: putsUSART(wrkbuf);
 22261  0044B8  0101               	movlb	1	; () banked
 22262  0044BA  0E01               	movlw	high _wrkbuf
 22263  0044BC  6E21               	movwf	?_putsUSART+1,c
 22264  0044BE  0E55               	movlw	low _wrkbuf
 22265  0044C0  6E20               	movwf	?_putsUSART,c
 22266  0044C2  EC03  F007         	call	_putsUSART	;wreg free
 22267  0044C6                     l17229:
 22268                           
 22269                           ;main.c: 2229: }
 22270                           ;main.c: 2230: putsUSART((char *) ",class=");
 22271  0044C6  0E7B               	movlw	high STR_184
 22272  0044C8  6E21               	movwf	?_putsUSART+1,c
 22273  0044CA  0EE1               	movlw	low STR_184
 22274  0044CC  6E20               	movwf	?_putsUSART,c
 22275  0044CE  EC03  F007         	call	_putsUSART	;wreg free
 22276                           
 22277                           ;main.c: 2231: sprintf(wrkbuf, bHex ? "0x%04X" : "%d", vscpClass);
 22278  0044D2  0101               	movlb	1	; () banked
 22279  0044D4  6700               	tstfsz	_bHex& (0+255),b
 22280  0044D6  D005               	goto	l17235
 22281                           
 22282                           ; BSR set to: 1
 22283  0044D8  0E7C               	movlw	high STR_61
 22284  0044DA  0100               	movlb	0	; () banked
 22285  0044DC  6F99               	movwf	(_receivePrintEventVerbose$1508+1)& (0+255),b
 22286  0044DE  0EEE               	movlw	low STR_61
 22287  0044E0  D004               	goto	L45
 22288  0044E2                     l17235:
 22289                           
 22290                           ; BSR set to: 1
 22291  0044E2  0E7C               	movlw	high STR_185
 22292  0044E4  0100               	movlb	0	; () banked
 22293  0044E6  6F99               	movwf	(_receivePrintEventVerbose$1508+1)& (0+255),b
 22294  0044E8  0E57               	movlw	low STR_185
 22295  0044EA                     L45:
 22296  0044EA  6F98               	movwf	_receivePrintEventVerbose$1508& (0+255),b
 22297                           
 22298                           ; BSR set to: 0
 22299  0044EC  0E01               	movlw	high _wrkbuf
 22300  0044EE  0100               	movlb	0	; () banked
 22301  0044F0  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22302  0044F2  0E55               	movlw	low _wrkbuf
 22303  0044F4  6F6D               	movwf	?_sprintf& (0+255),b
 22304  0044F6  C098  F06F         	movff	_receivePrintEventVerbose$1508,?_sprintf+2
 22305  0044FA  C099  F070         	movff	_receivePrintEventVerbose$1508+1,?_sprintf+3
 22306  0044FE  C1AD  F071         	movff	_vscpClass,?_sprintf+4
 22307  004502  C1AE  F072         	movff	_vscpClass+1,?_sprintf+5
 22308  004506  EC4E  F025         	call	_sprintf	;wreg free
 22309                           
 22310                           ; BSR set to: 0
 22311                           ;main.c: 2232: putsUSART(wrkbuf);
 22312  00450A  0101               	movlb	1	; () banked
 22313  00450C  0E01               	movlw	high _wrkbuf
 22314  00450E  6E21               	movwf	?_putsUSART+1,c
 22315  004510  0E55               	movlw	low _wrkbuf
 22316  004512  6E20               	movwf	?_putsUSART,c
 22317  004514  EC03  F007         	call	_putsUSART	;wreg free
 22318                           
 22319                           ;main.c: 2233: putsUSART((char *) ",type=");
 22320  004518  0E7C               	movlw	high STR_187
 22321  00451A  6E21               	movwf	?_putsUSART+1,c
 22322  00451C  0E1F               	movlw	low STR_187
 22323  00451E  6E20               	movwf	?_putsUSART,c
 22324  004520  EC03  F007         	call	_putsUSART	;wreg free
 22325                           
 22326                           ;main.c: 2234: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpType);
 22327  004524  0101               	movlb	1	; () banked
 22328  004526  6700               	tstfsz	_bHex& (0+255),b
 22329  004528  D005               	goto	l17247
 22330                           
 22331                           ; BSR set to: 1
 22332  00452A  0E7C               	movlw	high STR_61
 22333  00452C  0100               	movlb	0	; () banked
 22334  00452E  6F9B               	movwf	(_receivePrintEventVerbose$1513+1)& (0+255),b
 22335  004530  0EEE               	movlw	low STR_61
 22336  004532  D004               	goto	L46
 22337  004534                     l17247:
 22338                           
 22339                           ; BSR set to: 1
 22340  004534  0E7C               	movlw	high STR_60
 22341  004536  0100               	movlb	0	; () banked
 22342  004538  6F9B               	movwf	(_receivePrintEventVerbose$1513+1)& (0+255),b
 22343  00453A  0E50               	movlw	low STR_60
 22344  00453C                     L46:
 22345  00453C  6F9A               	movwf	_receivePrintEventVerbose$1513& (0+255),b
 22346                           
 22347                           ; BSR set to: 0
 22348  00453E  0E01               	movlw	high _wrkbuf
 22349  004540  0100               	movlb	0	; () banked
 22350  004542  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22351  004544  0E55               	movlw	low _wrkbuf
 22352  004546  6F6D               	movwf	?_sprintf& (0+255),b
 22353  004548  C09A  F06F         	movff	_receivePrintEventVerbose$1513,?_sprintf+2
 22354  00454C  C09B  F070         	movff	_receivePrintEventVerbose$1513+1,?_sprintf+3
 22355  004550  C1B2  F071         	movff	_vscpType,?_sprintf+4
 22356  004554  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22357  004556  EC4E  F025         	call	_sprintf	;wreg free
 22358                           
 22359                           ; BSR set to: 0
 22360                           ;main.c: 2235: putsUSART(wrkbuf);
 22361  00455A  0101               	movlb	1	; () banked
 22362  00455C  0E01               	movlw	high _wrkbuf
 22363  00455E  6E21               	movwf	?_putsUSART+1,c
 22364  004560  0E55               	movlw	low _wrkbuf
 22365  004562  6E20               	movwf	?_putsUSART,c
 22366  004564  EC03  F007         	call	_putsUSART	;wreg free
 22367                           
 22368                           ;main.c: 2236: putsUSART((char *) ",nodeid=");
 22369  004568  0E7B               	movlw	high STR_190
 22370  00456A  6E21               	movwf	?_putsUSART+1,c
 22371  00456C  0EA6               	movlw	low STR_190
 22372  00456E  6E20               	movwf	?_putsUSART,c
 22373  004570  EC03  F007         	call	_putsUSART	;wreg free
 22374                           
 22375                           ;main.c: 2237: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpNodeId);
 22376  004574  0101               	movlb	1	; () banked
 22377  004576  6700               	tstfsz	_bHex& (0+255),b
 22378  004578  D005               	goto	l17259
 22379                           
 22380                           ; BSR set to: 1
 22381  00457A  0E7C               	movlw	high STR_61
 22382  00457C  0100               	movlb	0	; () banked
 22383  00457E  6F9D               	movwf	(_receivePrintEventVerbose$1518+1)& (0+255),b
 22384  004580  0EEE               	movlw	low STR_61
 22385  004582  D004               	goto	L47
 22386  004584                     l17259:
 22387                           
 22388                           ; BSR set to: 1
 22389  004584  0E7C               	movlw	high STR_60
 22390  004586  0100               	movlb	0	; () banked
 22391  004588  6F9D               	movwf	(_receivePrintEventVerbose$1518+1)& (0+255),b
 22392  00458A  0E50               	movlw	low STR_60
 22393  00458C                     L47:
 22394  00458C  6F9C               	movwf	_receivePrintEventVerbose$1518& (0+255),b
 22395                           
 22396                           ; BSR set to: 0
 22397  00458E  0E01               	movlw	high _wrkbuf
 22398  004590  0100               	movlb	0	; () banked
 22399  004592  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22400  004594  0E55               	movlw	low _wrkbuf
 22401  004596  6F6D               	movwf	?_sprintf& (0+255),b
 22402  004598  C09C  F06F         	movff	_receivePrintEventVerbose$1518,?_sprintf+2
 22403  00459C  C09D  F070         	movff	_receivePrintEventVerbose$1518+1,?_sprintf+3
 22404  0045A0  C1AF  F071         	movff	_vscpNodeId,?_sprintf+4
 22405  0045A4  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22406  0045A6  EC4E  F025         	call	_sprintf	;wreg free
 22407                           
 22408                           ; BSR set to: 0
 22409                           ;main.c: 2238: putsUSART(wrkbuf);
 22410  0045AA  0101               	movlb	1	; () banked
 22411  0045AC  0E01               	movlw	high _wrkbuf
 22412  0045AE  6E21               	movwf	?_putsUSART+1,c
 22413  0045B0  0E55               	movlw	low _wrkbuf
 22414  0045B2  6E20               	movwf	?_putsUSART,c
 22415  0045B4  EC03  F007         	call	_putsUSART	;wreg free
 22416                           
 22417                           ;main.c: 2239: putsUSART((char *) ",size=");
 22418  0045B8  0E7C               	movlw	high STR_193
 22419  0045BA  6E21               	movwf	?_putsUSART+1,c
 22420  0045BC  0E26               	movlw	low STR_193
 22421  0045BE  6E20               	movwf	?_putsUSART,c
 22422  0045C0  EC03  F007         	call	_putsUSART	;wreg free
 22423                           
 22424                           ;main.c: 2240: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpSize);
 22425  0045C4  0101               	movlb	1	; () banked
 22426  0045C6  6700               	tstfsz	_bHex& (0+255),b
 22427  0045C8  D005               	goto	l17271
 22428                           
 22429                           ; BSR set to: 1
 22430  0045CA  0E7C               	movlw	high STR_61
 22431  0045CC  0100               	movlb	0	; () banked
 22432  0045CE  6F9F               	movwf	(_receivePrintEventVerbose$1523+1)& (0+255),b
 22433  0045D0  0EEE               	movlw	low STR_61
 22434  0045D2  D004               	goto	L48
 22435  0045D4                     l17271:
 22436                           
 22437                           ; BSR set to: 1
 22438  0045D4  0E7C               	movlw	high STR_60
 22439  0045D6  0100               	movlb	0	; () banked
 22440  0045D8  6F9F               	movwf	(_receivePrintEventVerbose$1523+1)& (0+255),b
 22441  0045DA  0E50               	movlw	low STR_60
 22442  0045DC                     L48:
 22443  0045DC  6F9E               	movwf	_receivePrintEventVerbose$1523& (0+255),b
 22444                           
 22445                           ; BSR set to: 0
 22446  0045DE  0E01               	movlw	high _wrkbuf
 22447  0045E0  0100               	movlb	0	; () banked
 22448  0045E2  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22449  0045E4  0E55               	movlw	low _wrkbuf
 22450  0045E6  6F6D               	movwf	?_sprintf& (0+255),b
 22451  0045E8  C09E  F06F         	movff	_receivePrintEventVerbose$1523,?_sprintf+2
 22452  0045EC  C09F  F070         	movff	_receivePrintEventVerbose$1523+1,?_sprintf+3
 22453  0045F0  C1B1  F071         	movff	_vscpSize,?_sprintf+4
 22454  0045F4  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22455  0045F6  EC4E  F025         	call	_sprintf	;wreg free
 22456                           
 22457                           ; BSR set to: 0
 22458                           ;main.c: 2241: putsUSART(wrkbuf);
 22459  0045FA  0101               	movlb	1	; () banked
 22460  0045FC  0E01               	movlw	high _wrkbuf
 22461  0045FE  6E21               	movwf	?_putsUSART+1,c
 22462  004600  0E55               	movlw	low _wrkbuf
 22463  004602  6E20               	movwf	?_putsUSART,c
 22464  004604  EC03  F007         	call	_putsUSART	;wreg free
 22465                           
 22466                           ;main.c: 2242: if (vscpSize > 0) {
 22467  004608  0101               	movlb	1	; () banked
 22468  00460A  51B1               	movf	_vscpSize& (0+255),w,b
 22469  00460C  E053               	bz	l17299
 22470                           
 22471                           ; BSR set to: 1
 22472                           ;main.c: 2243: putsUSART((char *) ",Data=");
 22473  00460E  0E7C               	movlw	high STR_196
 22474  004610  6E21               	movwf	?_putsUSART+1,c
 22475  004612  0E18               	movlw	low STR_196
 22476  004614  6E20               	movwf	?_putsUSART,c
 22477  004616  EC03  F007         	call	_putsUSART	;wreg free
 22478                           
 22479                           ;main.c: 2244: for (i = 0; i < vscpSize; i++) {
 22480  00461A  0100               	movlb	0	; () banked
 22481  00461C  6BA2               	clrf	receivePrintEventVerbose@i& (0+255),b
 22482  00461E  D044               	goto	l17297
 22483  004620                     l1056:
 22484                           
 22485                           ; BSR set to: 0
 22486                           ;main.c: 2246: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpData[i]);
 22487  004620  0101               	movlb	1	; () banked
 22488  004622  6700               	tstfsz	_bHex& (0+255),b
 22489  004624  D005               	goto	l17285
 22490                           
 22491                           ; BSR set to: 1
 22492  004626  0E7C               	movlw	high STR_61
 22493  004628  0100               	movlb	0	; () banked
 22494  00462A  6FA1               	movwf	(_receivePrintEventVerbose$1528+1)& (0+255),b
 22495  00462C  0EEE               	movlw	low STR_61
 22496  00462E  D004               	goto	L49
 22497  004630                     l17285:
 22498                           
 22499                           ; BSR set to: 1
 22500  004630  0E7C               	movlw	high STR_60
 22501  004632  0100               	movlb	0	; () banked
 22502  004634  6FA1               	movwf	(_receivePrintEventVerbose$1528+1)& (0+255),b
 22503  004636  0E50               	movlw	low STR_60
 22504  004638                     L49:
 22505  004638  6FA0               	movwf	_receivePrintEventVerbose$1528& (0+255),b
 22506                           
 22507                           ; BSR set to: 0
 22508  00463A  0E01               	movlw	high _wrkbuf
 22509  00463C  0100               	movlb	0	; () banked
 22510  00463E  6F6E               	movwf	(?_sprintf+1)& (0+255),b
 22511  004640  0E55               	movlw	low _wrkbuf
 22512  004642  6F6D               	movwf	?_sprintf& (0+255),b
 22513  004644  C0A0  F06F         	movff	_receivePrintEventVerbose$1528,?_sprintf+2
 22514  004648  C0A1  F070         	movff	_receivePrintEventVerbose$1528+1,?_sprintf+3
 22515  00464C  0EA5               	movlw	low _vscpData
 22516  00464E  25A2               	addwf	receivePrintEventVerbose@i& (0+255),w,b
 22517  004650  6ED9               	movwf	fsr2l,c
 22518  004652  6ADA               	clrf	fsr2h,c
 22519  004654  0E01               	movlw	high _vscpData
 22520  004656  22DA               	addwfc	fsr2h,f,c
 22521  004658  50DF               	movf	indf2,w,c
 22522  00465A  6F71               	movwf	(?_sprintf+4)& (0+255),b
 22523  00465C  6B72               	clrf	(?_sprintf+5)& (0+255),b
 22524  00465E  EC4E  F025         	call	_sprintf	;wreg free
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;main.c: 2247: putsUSART(wrkbuf);
 22528  004662  0101               	movlb	1	; () banked
 22529  004664  0E01               	movlw	high _wrkbuf
 22530  004666  6E21               	movwf	?_putsUSART+1,c
 22531  004668  0E55               	movlw	low _wrkbuf
 22532  00466A  6E20               	movwf	?_putsUSART,c
 22533  00466C  EC03  F007         	call	_putsUSART	;wreg free
 22534                           
 22535                           ;main.c: 2248: if (i < (vscpSize - 1)) {
 22536  004670  0EFF               	movlw	255
 22537  004672  0101               	movlb	1	; () banked
 22538  004674  25B1               	addwf	_vscpSize& (0+255),w,b
 22539  004676  0100               	movlb	0	; () banked
 22540  004678  6F8B               	movwf	??_receivePrintEventVerbose& (0+255),b
 22541  00467A  6B8C               	clrf	(??_receivePrintEventVerbose+1)& (0+255),b
 22542  00467C  0EFF               	movlw	255
 22543  00467E  238C               	addwfc	(??_receivePrintEventVerbose+1)& (0+255),f,b
 22544  004680  51A2               	movf	receivePrintEventVerbose@i& (0+255),w,b
 22545  004682  6F8D               	movwf	(??_receivePrintEventVerbose+2)& (0+255),b
 22546  004684  6B8E               	clrf	(??_receivePrintEventVerbose+3)& (0+255),b
 22547  004686  518E               	movf	(??_receivePrintEventVerbose+3)& (0+255),w,b
 22548  004688  0A80               	xorlw	128
 22549  00468A  6F8F               	movwf	(??_receivePrintEventVerbose+4)& (0+255),b
 22550  00468C  518B               	movf	??_receivePrintEventVerbose& (0+255),w,b
 22551  00468E  5D8D               	subwf	(??_receivePrintEventVerbose+2)& (0+255),w,b
 22552  004690  518C               	movf	(??_receivePrintEventVerbose+1)& (0+255),w,b
 22553  004692  0A80               	xorlw	128
 22554  004694  598F               	subwfb	(??_receivePrintEventVerbose+4)& (0+255),w,b
 22555  004696  E206               	bc	l17295
 22556                           
 22557                           ; BSR set to: 0
 22558                           ;main.c: 2249: putsUSART((char *) ",");
 22559  004698  0E7C               	movlw	high STR_30
 22560  00469A  6E21               	movwf	?_putsUSART+1,c
 22561  00469C  0EF5               	movlw	low STR_30
 22562  00469E  6E20               	movwf	?_putsUSART,c
 22563  0046A0  EC03  F007         	call	_putsUSART	;wreg free
 22564  0046A4                     l17295:
 22565  0046A4  0100               	movlb	0	; () banked
 22566  0046A6  2BA2               	incf	receivePrintEventVerbose@i& (0+255),f,b
 22567  0046A8                     l17297:
 22568                           
 22569                           ; BSR set to: 0
 22570  0046A8  0101               	movlb	1	; () banked
 22571  0046AA  51B1               	movf	_vscpSize& (0+255),w,b
 22572  0046AC  0100               	movlb	0	; () banked
 22573  0046AE  5DA2               	subwf	receivePrintEventVerbose@i& (0+255),w,b
 22574  0046B0  E207               	bc	l1063
 22575  0046B2  D7B6               	goto	l1056
 22576  0046B4                     l17299:
 22577                           
 22578                           ; BSR set to: 1
 22579                           ;main.c: 2253: putsUSART((char *) ",Data=none");
 22580  0046B4  0E7B               	movlw	high STR_200
 22581  0046B6  6E21               	movwf	?_putsUSART+1,c
 22582  0046B8  0E60               	movlw	low STR_200
 22583  0046BA  6E20               	movwf	?_putsUSART,c
 22584  0046BC  EC03  F007         	call	_putsUSART	;wreg free
 22585  0046C0                     l1063:
 22586                           
 22587                           ;main.c: 2254: }
 22588                           ;main.c: 2255: putsUSART((char *) ">\r\n");
 22589  0046C0  0E7C               	movlw	high STR_201
 22590  0046C2  6E21               	movwf	?_putsUSART+1,c
 22591  0046C4  0ECA               	movlw	low STR_201
 22592  0046C6  6E20               	movwf	?_putsUSART,c
 22593  0046C8  EC03  F007         	call	_putsUSART	;wreg free
 22594                           
 22595                           ;main.c: 2256: return 1;
 22596  0046CC  0E01               	movlw	1
 22597  0046CE  D001               	goto	l1064
 22598  0046D0                     l17305:
 22599                           
 22600                           ; BSR set to: 0
 22601                           ;main.c: 2257: }
 22602                           ;main.c: 2259: return 0;
 22603  0046D0  0E00               	movlw	0
 22604  0046D2                     l1064:
 22605  0046D2  0012               	return	
 22606  0046D4                     __end_of_receivePrintEventVerbose:
 22607                           	opt stack 0
 22608                           tblptru	equ	0xFF8
 22609                           tblptrh	equ	0xFF7
 22610                           tblptrl	equ	0xFF6
 22611                           tablat	equ	0xFF5
 22612                           prodh	equ	0xFF4
 22613                           prodl	equ	0xFF3
 22614                           intcon	equ	0xFF2
 22615                           indf0	equ	0xFEF
 22616                           postinc0	equ	0xFEE
 22617                           fsr0h	equ	0xFEA
 22618                           fsr0l	equ	0xFE9
 22619                           wreg	equ	0xFE8
 22620                           indf1	equ	0xFE7
 22621                           postinc1	equ	0xFE6
 22622                           postdec1	equ	0xFE5
 22623                           fsr1h	equ	0xFE2
 22624                           fsr1l	equ	0xFE1
 22625                           indf2	equ	0xFDF
 22626                           postinc2	equ	0xFDE
 22627                           postdec2	equ	0xFDD
 22628                           plusw2	equ	0xFDB
 22629                           fsr2h	equ	0xFDA
 22630                           fsr2l	equ	0xFD9
 22631                           status	equ	0xFD8
 22632                           
 22633 ;; *************** function _ReadTimer3 *****************
 22634 ;; Defined at:
 22635 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t3read.c"
 22636 ;; Parameters:    Size  Location     Type
 22637 ;;		None
 22638 ;; Auto vars:     Size  Location     Type
 22639 ;;  timer           2   32[COMRAM] struct Timers
 22640 ;; Return value:  Size  Location     Type
 22641 ;;                  2   30[COMRAM] unsigned int 
 22642 ;; Registers used:
 22643 ;;		None
 22644 ;; Tracked objects:
 22645 ;;		On entry : F/0
 22646 ;;		On exit  : F/0
 22647 ;;		Unchanged: F/0
 22648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22649 ;;      Params:         2       0       0       0       0       0       0
 22650 ;;      Locals:         2       0       0       0       0       0       0
 22651 ;;      Temps:          0       0       0       0       0       0       0
 22652 ;;      Totals:         4       0       0       0       0       0       0
 22653 ;;Total ram usage:        4 bytes
 22654 ;; Hardware stack levels used:    1
 22655 ;; Hardware stack levels required when called:    3
 22656 ;; This function calls:
 22657 ;;		Nothing
 22658 ;; This function is called by:
 22659 ;;		_receivePrintEventVerbose
 22660 ;;		_receiveSendEventCANAL
 22661 ;;		_receiveSendMultiEventCANAL
 22662 ;; This function uses a non-reentrant model
 22663 ;;
 22664                           
 22665                           	psect	text52
 22666  0008DC                     __ptext52:
 22667                           	opt stack 0
 22668  0008DC                     _ReadTimer3:
 22669                           	opt stack 24
 22670                           
 22671                           ; BSR set to: 0
 22672                           
 22673                           ;incstack = 0
 22674                           ;incstack = 0
 22675  0008DC  CFB2 F021          	movff	4018,ReadTimer3@timer	;volatile
 22676  0008E0  CFB3 F022          	movff	4019,ReadTimer3@timer+1	;volatile
 22677  0008E4  C021  F01F         	movff	ReadTimer3@timer,?_ReadTimer3
 22678  0008E8  C022  F020         	movff	ReadTimer3@timer+1,?_ReadTimer3+1
 22679                           
 22680                           ; BSR set to: 0
 22681  0008EC  0012               	return	
 22682  0008EE                     __end_of_ReadTimer3:
 22683                           	opt stack 0
 22684                           tblptru	equ	0xFF8
 22685                           tblptrh	equ	0xFF7
 22686                           tblptrl	equ	0xFF6
 22687                           tablat	equ	0xFF5
 22688                           prodh	equ	0xFF4
 22689                           prodl	equ	0xFF3
 22690                           intcon	equ	0xFF2
 22691                           indf0	equ	0xFEF
 22692                           postinc0	equ	0xFEE
 22693                           fsr0h	equ	0xFEA
 22694                           fsr0l	equ	0xFE9
 22695                           wreg	equ	0xFE8
 22696                           indf1	equ	0xFE7
 22697                           postinc1	equ	0xFE6
 22698                           postdec1	equ	0xFE5
 22699                           fsr1h	equ	0xFE2
 22700                           fsr1l	equ	0xFE1
 22701                           indf2	equ	0xFDF
 22702                           postinc2	equ	0xFDE
 22703                           postdec2	equ	0xFDD
 22704                           plusw2	equ	0xFDB
 22705                           fsr2h	equ	0xFDA
 22706                           fsr2l	equ	0xFD9
 22707                           status	equ	0xFD8
 22708                           
 22709 ;; *************** function _getVSCPFrame *****************
 22710 ;; Defined at:
 22711 ;;		line 3481 in file "main.c"
 22712 ;; Parameters:    Size  Location     Type
 22713 ;;  pvscpclass      2    9[BANK0 ] PTR unsigned short 
 22714 ;;		 -> vscpClass(2), 
 22715 ;;  pvscptype       2   11[BANK0 ] PTR unsigned char 
 22716 ;;		 -> vscpType(1), 
 22717 ;;  pNodeId         2   13[BANK0 ] PTR unsigned char 
 22718 ;;		 -> vscpNodeId(1), 
 22719 ;;  pPriority       2   15[BANK0 ] PTR unsigned char 
 22720 ;;		 -> vscpPriority(1), 
 22721 ;;  pSize           2   17[BANK0 ] PTR unsigned char 
 22722 ;;		 -> vscpSize(1), 
 22723 ;;  pData           2   19[BANK0 ] PTR unsigned char 
 22724 ;;		 -> vscpData(8), 
 22725 ;; Auto vars:     Size  Location     Type
 22726 ;;  id              4   25[BANK0 ] unsigned long 
 22727 ;; Return value:  Size  Location     Type
 22728 ;;                  1    wreg      unsigned char 
 22729 ;; Registers used:
 22730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22731 ;; Tracked objects:
 22732 ;;		On entry : F/0
 22733 ;;		On exit  : F/0
 22734 ;;		Unchanged: 0/0
 22735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22736 ;;      Params:         0      12       0       0       0       0       0
 22737 ;;      Locals:         0       4       0       0       0       0       0
 22738 ;;      Temps:          0       4       0       0       0       0       0
 22739 ;;      Totals:         0      20       0       0       0       0       0
 22740 ;;Total ram usage:       20 bytes
 22741 ;; Hardware stack levels used:    1
 22742 ;; Hardware stack levels required when called:    5
 22743 ;; This function calls:
 22744 ;;		_getCANFrame
 22745 ;; This function is called by:
 22746 ;;		_receivePrintEventVerbose
 22747 ;;		_readRegister
 22748 ;;		_readRegisterExtended
 22749 ;;		_writeRegisterExtended
 22750 ;; This function uses a non-reentrant model
 22751 ;;
 22752                           
 22753                           	psect	text53
 22754  001414                     __ptext53:
 22755                           	opt stack 0
 22756  001414                     _getVSCPFrame:
 22757                           	opt stack 21
 22758                           
 22759                           ; BSR set to: 0
 22760                           ;main.c: 3482: uint32_t id;
 22761                           ;main.c: 3484: if (!getCANFrame(&id, pSize, pData)) {
 22762                           
 22763                           ; BSR set to: 0
 22764                           ;incstack = 0
 22765                           ;incstack = 0
 22766  001414  C071  F065         	movff	getVSCPFrame@pSize,?_getCANFrame
 22767  001418  C072  F066         	movff	getVSCPFrame@pSize+1,?_getCANFrame+1
 22768  00141C  C073  F067         	movff	getVSCPFrame@pData,?_getCANFrame+2
 22769  001420  C074  F068         	movff	getVSCPFrame@pData+1,?_getCANFrame+3
 22770  001424  0E79               	movlw	getVSCPFrame@id& (0+255)
 22771  001426  EC94  F00A         	call	_getCANFrame
 22772  00142A  0900               	iorlw	0
 22773  00142C  E102               	bnz	l18681
 22774                           
 22775                           ; BSR set to: 0
 22776                           ;main.c: 3485: return 0;
 22777  00142E  0E00               	movlw	0
 22778  001430  D033               	goto	l1415
 22779  001432                     l18681:
 22780                           
 22781                           ; BSR set to: 0
 22782                           ;main.c: 3486: }
 22783                           ;main.c: 3488: *pNodeId = id & 0x0ff;
 22784  001432  C06D  FFD9         	movff	getVSCPFrame@pNodeId,fsr2l
 22785  001436  C06E  FFDA         	movff	getVSCPFrame@pNodeId+1,fsr2h
 22786  00143A  C079  FFDF         	movff	getVSCPFrame@id,indf2
 22787                           
 22788                           ;main.c: 3489: *pvscptype = (id >> 8) & 0xff;
 22789  00143E  C06B  FFD9         	movff	getVSCPFrame@pvscptype,fsr2l
 22790  001442  C06C  FFDA         	movff	getVSCPFrame@pvscptype+1,fsr2h
 22791  001446  C07A  FFDF         	movff	getVSCPFrame@id+1,indf2
 22792                           
 22793                           ; BSR set to: 0
 22794                           ;main.c: 3490: *pvscpclass = (id >> 16) & 0x1ff;
 22795  00144A  0100               	movlb	0	; () banked
 22796  00144C  517B               	movf	(getVSCPFrame@id+2)& (0+255),w,b
 22797  00144E  6F75               	movwf	??_getVSCPFrame& (0+255),b
 22798  001450  0E01               	movlw	1
 22799  001452  157C               	andwf	(getVSCPFrame@id+3)& (0+255),w,b
 22800  001454  6F76               	movwf	(??_getVSCPFrame+1)& (0+255),b
 22801  001456  C069  FFD9         	movff	getVSCPFrame@pvscpclass,fsr2l
 22802  00145A  C06A  FFDA         	movff	getVSCPFrame@pvscpclass+1,fsr2h
 22803  00145E  C075  FFDE         	movff	??_getVSCPFrame,postinc2
 22804  001462  C076  FFDD         	movff	??_getVSCPFrame+1,postdec2
 22805                           
 22806                           ; BSR set to: 0
 22807                           ;main.c: 3491: *pPriority = (uint16_t) (0x07 & (id >> 26));
 22808  001466  C079  F075         	movff	getVSCPFrame@id,??_getVSCPFrame
 22809  00146A  C07A  F076         	movff	getVSCPFrame@id+1,??_getVSCPFrame+1
 22810  00146E  C07B  F077         	movff	getVSCPFrame@id+2,??_getVSCPFrame+2
 22811  001472  C07C  F078         	movff	getVSCPFrame@id+3,??_getVSCPFrame+3
 22812  001476  0E1B               	movlw	27
 22813  001478  D005               	goto	u23990
 22814  00147A                     u23995:
 22815  00147A  90D8               	bcf	status,0,c
 22816  00147C  3378               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 22817  00147E  3377               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 22818  001480  3376               	rrcf	(??_getVSCPFrame+1)& (0+255),f,b
 22819  001482  3375               	rrcf	??_getVSCPFrame& (0+255),f,b
 22820  001484                     u23990:
 22821  001484  2EE8               	decfsz	wreg,f,c
 22822  001486  D7F9               	goto	u23995
 22823  001488  5175               	movf	??_getVSCPFrame& (0+255),w,b
 22824  00148A  0B07               	andlw	7
 22825  00148C  C06F  FFD9         	movff	getVSCPFrame@pPriority,fsr2l
 22826  001490  C070  FFDA         	movff	getVSCPFrame@pPriority+1,fsr2h
 22827  001494  6EDF               	movwf	indf2,c
 22828                           
 22829                           ; BSR set to: 0
 22830                           ;main.c: 3493: return 1;
 22831  001496  0E01               	movlw	1
 22832  001498                     l1415:
 22833                           
 22834                           ; BSR set to: 0
 22835  001498  0012               	return	
 22836  00149A                     __end_of_getVSCPFrame:
 22837                           	opt stack 0
 22838                           tblptru	equ	0xFF8
 22839                           tblptrh	equ	0xFF7
 22840                           tblptrl	equ	0xFF6
 22841                           tablat	equ	0xFF5
 22842                           prodh	equ	0xFF4
 22843                           prodl	equ	0xFF3
 22844                           intcon	equ	0xFF2
 22845                           indf0	equ	0xFEF
 22846                           postinc0	equ	0xFEE
 22847                           fsr0h	equ	0xFEA
 22848                           fsr0l	equ	0xFE9
 22849                           wreg	equ	0xFE8
 22850                           indf1	equ	0xFE7
 22851                           postinc1	equ	0xFE6
 22852                           postdec1	equ	0xFE5
 22853                           fsr1h	equ	0xFE2
 22854                           fsr1l	equ	0xFE1
 22855                           indf2	equ	0xFDF
 22856                           postinc2	equ	0xFDE
 22857                           postdec2	equ	0xFDD
 22858                           plusw2	equ	0xFDB
 22859                           fsr2h	equ	0xFDA
 22860                           fsr2l	equ	0xFD9
 22861                           status	equ	0xFD8
 22862                           
 22863 ;; *************** function _getCANFrame *****************
 22864 ;; Defined at:
 22865 ;;		line 3517 in file "main.c"
 22866 ;; Parameters:    Size  Location     Type
 22867 ;;  pid             1    wreg     PTR unsigned long 
 22868 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@id(4), 
 22869 ;;  pdlc            2    5[BANK0 ] PTR unsigned char 
 22870 ;;		 -> receiveSendEventSLCAN@dlc(1), receiveSendMultiEventCANAL@dlc(1), receiveSendEventCANAL@dlc(1), vscpSize(1), 
 22871 ;;  pdata           2    7[BANK0 ] PTR unsigned char 
 22872 ;;		 -> receiveSendMultiEventCANAL@data(8), receiveSendEventCANAL@data(8), vscpData(8), 
 22873 ;; Auto vars:     Size  Location     Type
 22874 ;;  pid             1   38[COMRAM] PTR unsigned long 
 22875 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@id(4), 
 22876 ;; Return value:  Size  Location     Type
 22877 ;;                  1    wreg      unsigned char 
 22878 ;; Registers used:
 22879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22880 ;; Tracked objects:
 22881 ;;		On entry : F/0
 22882 ;;		On exit  : F/0
 22883 ;;		Unchanged: 0/0
 22884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22885 ;;      Params:         0       4       0       0       0       0       0
 22886 ;;      Locals:         1       0       0       0       0       0       0
 22887 ;;      Temps:          0       0       0       0       0       0       0
 22888 ;;      Totals:         1       4       0       0       0       0       0
 22889 ;;Total ram usage:        5 bytes
 22890 ;; Hardware stack levels used:    1
 22891 ;; Hardware stack levels required when called:    4
 22892 ;; This function calls:
 22893 ;;		_fifo_read
 22894 ;; This function is called by:
 22895 ;;		_receiveSendEventCANAL
 22896 ;;		_receiveSendMultiEventCANAL
 22897 ;;		_receiveSendEventSLCAN
 22898 ;;		_getVSCPFrame
 22899 ;; This function uses a non-reentrant model
 22900 ;;
 22901                           
 22902                           	psect	text54
 22903  001528                     __ptext54:
 22904                           	opt stack 0
 22905  001528                     _getCANFrame:
 22906                           	opt stack 23
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;incstack = 0
 22910                           ;incstack = 0
 22911                           ;getCANFrame@pid stored from wreg
 22912  001528  CFE8 F027          	movff	wreg,getCANFrame@pid
 22913                           
 22914                           ; BSR set to: 0
 22915                           ;main.c: 3518: if ( fifo_canrxcount ) {
 22916  00152C  5036               	movf	_fifo_canrxcount,w,c	;volatile
 22917  00152E  E00F               	bz	l18701
 22918                           
 22919                           ; BSR set to: 0
 22920                           ;main.c: 3521: (INTCONbits.GIE = 0);
 22921  001530  9EF2               	bcf	intcon,7,c	;volatile
 22922                           
 22923                           ; BSR set to: 0
 22924                           ;main.c: 3522: if ( 4 != fifo_read( &canInputFifo, (uint8_t *)pid, 4 ) ) {
 22925  001532  C027  F01F         	movff	getCANFrame@pid,?_fifo_read
 22926  001536  6A20               	clrf	?_fifo_read+1,c
 22927  001538  6A22               	clrf	?_fifo_read+3,c
 22928  00153A  0E04               	movlw	4
 22929  00153C  6E21               	movwf	?_fifo_read+2,c
 22930  00153E  0EEF               	movlw	_canInputFifo& (0+255)
 22931  001540  EC42  F00F         	call	_fifo_read
 22932  001544  501F               	movf	?_fifo_read,w,c
 22933  001546  0A04               	xorlw	4
 22934  001548  1020               	iorwf	?_fifo_read+1,w,c
 22935  00154A  E003               	bz	l18705
 22936  00154C                     l18699:
 22937                           
 22938                           ; BSR set to: 0
 22939                           ;main.c: 3523: (INTCONbits.GIE = 1);
 22940  00154C  8EF2               	bsf	intcon,7,c	;volatile
 22941  00154E                     l18701:
 22942                           
 22943                           ; BSR set to: 0
 22944                           ;main.c: 3524: return 0;
 22945  00154E  0E00               	movlw	0
 22946  001550  D032               	goto	l1424
 22947  001552                     l18705:
 22948                           
 22949                           ; BSR set to: 0
 22950                           ;main.c: 3525: }
 22951                           ;main.c: 3528: if ( 1 != fifo_read( &canInputFifo, pdlc, 1 ) ) {
 22952  001552  C065  F01F         	movff	getCANFrame@pdlc,?_fifo_read
 22953  001556  C066  F020         	movff	getCANFrame@pdlc+1,?_fifo_read+1
 22954  00155A  6A22               	clrf	?_fifo_read+3,c
 22955  00155C  0E01               	movlw	1
 22956  00155E  6E21               	movwf	?_fifo_read+2,c
 22957  001560  0EEF               	movlw	_canInputFifo& (0+255)
 22958  001562  EC42  F00F         	call	_fifo_read
 22959  001566  041F               	decf	?_fifo_read,w,c
 22960  001568  1020               	iorwf	?_fifo_read+1,w,c
 22961  00156A  E1F0               	bnz	l18699
 22962                           
 22963                           ; BSR set to: 0
 22964                           ;main.c: 3531: }
 22965                           ;main.c: 3534: if ( *pdlc > 8 ) {
 22966  00156C  C065  FFD9         	movff	getCANFrame@pdlc,fsr2l
 22967  001570  C066  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 22968  001574  0E08               	movlw	8
 22969  001576  64DF               	cpfsgt	indf2,c
 22970  001578  D005               	goto	l18717
 22971                           
 22972                           ; BSR set to: 0
 22973                           ;main.c: 3535: *pdlc = 0;
 22974  00157A  C065  FFD9         	movff	getCANFrame@pdlc,fsr2l
 22975  00157E  C066  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 22976  001582  6ADF               	clrf	indf2,c
 22977  001584                     l18717:
 22978                           
 22979                           ; BSR set to: 0
 22980                           ;main.c: 3536: }
 22981                           ;main.c: 3539: if ( *pdlc != fifo_read( &canInputFifo, pdata, *pdlc ) ) {
 22982  001584  C067  F01F         	movff	getCANFrame@pdata,?_fifo_read
 22983  001588  C068  F020         	movff	getCANFrame@pdata+1,?_fifo_read+1
 22984  00158C  C065  FFD9         	movff	getCANFrame@pdlc,fsr2l
 22985  001590  C066  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 22986  001594  50DF               	movf	indf2,w,c
 22987  001596  6E21               	movwf	?_fifo_read+2,c
 22988  001598  6A22               	clrf	?_fifo_read+3,c
 22989  00159A  0EEF               	movlw	_canInputFifo& (0+255)
 22990  00159C  EC42  F00F         	call	_fifo_read
 22991  0015A0  C065  FFD9         	movff	getCANFrame@pdlc,fsr2l
 22992  0015A4  C066  FFDA         	movff	getCANFrame@pdlc+1,fsr2h
 22993  0015A8  50DF               	movf	indf2,w,c
 22994  0015AA  181F               	xorwf	?_fifo_read,w,c
 22995  0015AC  1020               	iorwf	?_fifo_read+1,w,c
 22996  0015AE  E1CE               	bnz	l18699
 22997                           
 22998                           ; BSR set to: 0
 22999                           ;main.c: 3542: }
 23000                           ;main.c: 3544: fifo_canrxcount--;
 23001  0015B0  0636               	decf	_fifo_canrxcount,f,c	;volatile
 23002                           
 23003                           ; BSR set to: 0
 23004                           ;main.c: 3546: (INTCONbits.GIE = 1);
 23005  0015B2  8EF2               	bsf	intcon,7,c	;volatile
 23006                           
 23007                           ; BSR set to: 0
 23008                           ;main.c: 3548: return 1;
 23009  0015B4  0E01               	movlw	1
 23010  0015B6                     l1424:
 23011                           
 23012                           ; BSR set to: 0
 23013  0015B6  0012               	return	
 23014  0015B8                     __end_of_getCANFrame:
 23015                           	opt stack 0
 23016                           tblptru	equ	0xFF8
 23017                           tblptrh	equ	0xFF7
 23018                           tblptrl	equ	0xFF6
 23019                           tablat	equ	0xFF5
 23020                           prodh	equ	0xFF4
 23021                           prodl	equ	0xFF3
 23022                           intcon	equ	0xFF2
 23023                           indf0	equ	0xFEF
 23024                           postinc0	equ	0xFEE
 23025                           fsr0h	equ	0xFEA
 23026                           fsr0l	equ	0xFE9
 23027                           wreg	equ	0xFE8
 23028                           indf1	equ	0xFE7
 23029                           postinc1	equ	0xFE6
 23030                           postdec1	equ	0xFE5
 23031                           fsr1h	equ	0xFE2
 23032                           fsr1l	equ	0xFE1
 23033                           indf2	equ	0xFDF
 23034                           postinc2	equ	0xFDE
 23035                           postdec2	equ	0xFDD
 23036                           plusw2	equ	0xFDB
 23037                           fsr2h	equ	0xFDA
 23038                           fsr2l	equ	0xFD9
 23039                           status	equ	0xFD8
 23040                           
 23041 ;; *************** function _fifo_read *****************
 23042 ;; Defined at:
 23043 ;;		line 29 in file "fifo.c"
 23044 ;; Parameters:    Size  Location     Type
 23045 ;;  f               1    wreg     PTR struct .
 23046 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 23047 ;;  buf             2   30[COMRAM] PTR const void 
 23048 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@dlc(1), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@data(8
      +), 
 23049 ;;		 -> receiveSendMultiEventCANAL@dlc(1), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@data(8), receiveSendE
      +ventCANAL@dlc(1), 
 23050 ;;		 -> receiveSendEventCANAL@id(4), doModeSLCAN@c(1), doModeVscp@c(1), vscpData(8), 
 23051 ;;		 -> vscpSize(1), doModeVerbose@c(1), main@c(1), 
 23052 ;;  nbytes          2   32[COMRAM] unsigned short 
 23053 ;; Auto vars:     Size  Location     Type
 23054 ;;  f               1    4[BANK0 ] PTR struct .
 23055 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 23056 ;;  i               2    2[BANK0 ] unsigned short 
 23057 ;;  p               2    0[BANK0 ] PTR unsigned char 
 23058 ;;		 -> getVSCPFrame@id(4), receiveSendEventSLCAN@dlc(1), receiveSendEventSLCAN@id(4), receiveSendMultiEventCANAL@data(8
      +), 
 23059 ;;		 -> receiveSendMultiEventCANAL@dlc(1), receiveSendMultiEventCANAL@id(4), receiveSendEventCANAL@data(8), receiveSendE
      +ventCANAL@dlc(1), 
 23060 ;;		 -> receiveSendEventCANAL@id(4), doModeSLCAN@c(1), doModeVscp@c(1), vscpData(8), 
 23061 ;;		 -> vscpSize(1), doModeVerbose@c(1), main@c(1), 
 23062 ;; Return value:  Size  Location     Type
 23063 ;;                  2   30[COMRAM] unsigned short 
 23064 ;; Registers used:
 23065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23066 ;; Tracked objects:
 23067 ;;		On entry : F/0
 23068 ;;		On exit  : F/0
 23069 ;;		Unchanged: 0/0
 23070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23071 ;;      Params:         4       0       0       0       0       0       0
 23072 ;;      Locals:         0       5       0       0       0       0       0
 23073 ;;      Temps:          4       0       0       0       0       0       0
 23074 ;;      Totals:         8       5       0       0       0       0       0
 23075 ;;Total ram usage:       13 bytes
 23076 ;; Hardware stack levels used:    1
 23077 ;; Hardware stack levels required when called:    3
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_main
 23082 ;;		_doModeVerbose
 23083 ;;		_doModeVscp
 23084 ;;		_doModeSLCAN
 23085 ;;		_getCANFrame
 23086 ;; This function uses a non-reentrant model
 23087 ;;
 23088                           
 23089                           	psect	text55
 23090  001E84                     __ptext55:
 23091                           	opt stack 0
 23092  001E84                     _fifo_read:
 23093                           	opt stack 23
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;incstack = 0
 23097                           ;incstack = 0
 23098                           ;fifo_read@f stored from wreg
 23099  001E84  CFE8 F064          	movff	wreg,fifo_read@f
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;fifo.c: 30: uint16_t i;
 23103                           ;fifo.c: 31: uint8_t *p;
 23104                           ;fifo.c: 32: p = buf;
 23105  001E88  C01F  F060         	movff	fifo_read@buf,fifo_read@p
 23106  001E8C  C020  F061         	movff	fifo_read@buf+1,fifo_read@p+1
 23107                           
 23108                           ;fifo.c: 34: for (i = 0; i < nbytes; i++) {
 23109  001E90  6B62               	clrf	fifo_read@i& (0+255),b
 23110  001E92  6B63               	clrf	(fifo_read@i+1)& (0+255),b
 23111  001E94  D043               	goto	l15557
 23112  001E96                     l15543:
 23113                           
 23114                           ; BSR set to: 0
 23115                           ;fifo.c: 36: if ( f->tail != f->head ) {
 23116  001E96  5164               	movf	fifo_read@f& (0+255),w,b
 23117  001E98  6ED9               	movwf	fsr2l,c
 23118  001E9A  6ADA               	clrf	fsr2h,c
 23119  001E9C  0E02               	movlw	2
 23120  001E9E  D848               	call	PL64	;call to abstracted procedure
 23121  001EA0  18E5               	xorwf	postdec1,w,c
 23122  001EA2  CFDF FFE8          	movff	indf2,wreg
 23123  001EA6  B4D8               	btfsc	status,2,c
 23124  001EA8  18E7               	xorwf	indf1,w,c
 23125  001EAA  E031               	bz	l1675
 23126                           
 23127                           ; BSR set to: 0
 23128                           ;fifo.c: 37: *p++ = f->buf[ f->tail ];
 23129  001EAC  D84D               	call	PL140	;call to abstracted procedure
 23130  001EAE  CFDE F023          	movff	postinc2,??_fifo_read
 23131  001EB2  CFDD F024          	movff	postdec2,??_fifo_read+1
 23132  001EB6  5164               	movf	fifo_read@f& (0+255),w,b
 23133  001EB8  6ED9               	movwf	fsr2l,c
 23134  001EBA  6ADA               	clrf	fsr2h,c
 23135  001EBC  CFDE F025          	movff	postinc2,??_fifo_read+2
 23136  001EC0  CFDD F026          	movff	postdec2,??_fifo_read+3
 23137  001EC4  5023               	movf	??_fifo_read,w,c
 23138  001EC6  2425               	addwf	??_fifo_read+2,w,c
 23139  001EC8  6ED9               	movwf	fsr2l,c
 23140  001ECA  5024               	movf	??_fifo_read+1,w,c
 23141  001ECC  2026               	addwfc	??_fifo_read+3,w,c
 23142  001ECE  6EDA               	movwf	fsr2h,c
 23143  001ED0  C060  FFE1         	movff	fifo_read@p,fsr1l
 23144  001ED4  C061  FFE2         	movff	fifo_read@p+1,fsr1h
 23145  001ED8  CFDF FFE7          	movff	indf2,indf1
 23146                           
 23147                           ; BSR set to: 0
 23148  001EDC  4B60               	infsnz	fifo_read@p& (0+255),f,b
 23149  001EDE  2B61               	incf	(fifo_read@p+1)& (0+255),f,b
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;fifo.c: 38: f->tail++;
 23153  001EE0  5164               	movf	fifo_read@f& (0+255),w,b
 23154  001EE2  6ED9               	movwf	fsr2l,c
 23155  001EE4  6ADA               	clrf	fsr2h,c
 23156  001EE6  0E04               	movlw	4
 23157  001EE8  26D9               	addwf	fsr2l,f,c
 23158  001EEA  6ADA               	clrf	fsr2h,c
 23159  001EEC  2ADE               	incf	postinc2,f,c
 23160  001EEE  0E00               	movlw	0
 23161  001EF0  22DD               	addwfc	postdec2,f,c
 23162                           
 23163                           ; BSR set to: 0
 23164                           ;fifo.c: 39: if (f->tail >= f->size) {
 23165  001EF2  5164               	movf	fifo_read@f& (0+255),w,b
 23166  001EF4  6ED9               	movwf	fsr2l,c
 23167  001EF6  6ADA               	clrf	fsr2h,c
 23168  001EF8  0E06               	movlw	6
 23169  001EFA  D81A               	call	PL64	;call to abstracted procedure
 23170  001EFC  5CE5               	subwf	postdec1,w,c
 23171  001EFE  E102               	bnz	u19215
 23172  001F00  50DF               	movf	indf2,w,c
 23173  001F02  5CE7               	subwf	indf1,w,c
 23174  001F04                     u19215:
 23175  001F04  E309               	bnc	l15555
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;fifo.c: 40: f->tail = 0;
 23179  001F06  D820               	call	PL140	;call to abstracted procedure
 23180  001F08  6ADE               	clrf	postinc2,c
 23181  001F0A  6ADD               	clrf	postdec2,c
 23182  001F0C  D005               	goto	l15555
 23183  001F0E                     l1675:
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;fifo.c: 43: else {
 23187                           ;fifo.c: 44: return i;
 23188  001F0E  C062  F01F         	movff	fifo_read@i,?_fifo_read
 23189  001F12  C063  F020         	movff	fifo_read@i+1,?_fifo_read+1
 23190  001F16  D00B               	goto	l1678
 23191  001F18                     l15555:
 23192                           
 23193                           ; BSR set to: 0
 23194  001F18  4B62               	infsnz	fifo_read@i& (0+255),f,b
 23195  001F1A  2B63               	incf	(fifo_read@i+1)& (0+255),f,b
 23196  001F1C                     l15557:
 23197                           
 23198                           ; BSR set to: 0
 23199  001F1C  5021               	movf	fifo_read@nbytes,w,c
 23200  001F1E  5D62               	subwf	fifo_read@i& (0+255),w,b
 23201  001F20  5022               	movf	fifo_read@nbytes+1,w,c
 23202  001F22  5963               	subwfb	(fifo_read@i+1)& (0+255),w,b
 23203  001F24  E3B8               	bnc	l15543
 23204                           
 23205                           ; BSR set to: 0
 23206                           ;fifo.c: 45: }
 23207                           ;fifo.c: 47: }
 23208                           ;fifo.c: 49: return nbytes;
 23209  001F26  C021  F01F         	movff	fifo_read@nbytes,?_fifo_read
 23210  001F2A  C022  F020         	movff	fifo_read@nbytes+1,?_fifo_read+1
 23211  001F2E                     l1678:
 23212                           
 23213                           ; BSR set to: 0
 23214  001F2E  0012               	return	
 23215  001F30                     __end_of_fifo_read:
 23216                           	opt stack 0
 23217  001F30                     PL64:
 23218                           	opt stack 23
 23219  001F30  26D9               	addwf	fsr2l,f,c
 23220  001F32  6ADA               	clrf	fsr2h,c
 23221  001F34  5164               	movf	fifo_read@f& (0+255),w,b
 23222  001F36  6EE1               	movwf	fsr1l,c
 23223  001F38  6AE2               	clrf	fsr1h,c
 23224  001F3A  0E04               	movlw	4
 23225  001F3C  26E1               	addwf	fsr1l,f,c
 23226  001F3E  6AE2               	clrf	fsr1h,c
 23227  001F40  52E6               	movf	postinc1,f,c
 23228  001F42  52DE               	movf	postinc2,f,c
 23229  001F44  50DD               	movf	postdec2,w,c
 23230  001F46  0012               	return	
 23231  001F48                     __end_ofPL64:
 23232                           	opt stack 0
 23233  001F48                     PL140:
 23234                           	opt stack 23
 23235  001F48  5164               	movf	fifo_read@f& (0+255),w,b
 23236  001F4A  6ED9               	movwf	fsr2l,c
 23237  001F4C  6ADA               	clrf	fsr2h,c
 23238  001F4E  0E04               	movlw	4
 23239  001F50  26D9               	addwf	fsr2l,f,c
 23240  001F52  6ADA               	clrf	fsr2h,c
 23241  001F54  0012               	return	
 23242  001F56                     __end_ofPL140:
 23243                           	opt stack 0
 23244                           tblptru	equ	0xFF8
 23245                           tblptrh	equ	0xFF7
 23246                           tblptrl	equ	0xFF6
 23247                           tablat	equ	0xFF5
 23248                           prodh	equ	0xFF4
 23249                           prodl	equ	0xFF3
 23250                           intcon	equ	0xFF2
 23251                           indf0	equ	0xFEF
 23252                           postinc0	equ	0xFEE
 23253                           fsr0h	equ	0xFEA
 23254                           fsr0l	equ	0xFE9
 23255                           wreg	equ	0xFE8
 23256                           indf1	equ	0xFE7
 23257                           postinc1	equ	0xFE6
 23258                           postdec1	equ	0xFE5
 23259                           fsr1h	equ	0xFE2
 23260                           fsr1l	equ	0xFE1
 23261                           indf2	equ	0xFDF
 23262                           postinc2	equ	0xFDE
 23263                           postdec2	equ	0xFDD
 23264                           plusw2	equ	0xFDB
 23265                           fsr2h	equ	0xFDA
 23266                           fsr2l	equ	0xFD9
 23267                           status	equ	0xFD8
 23268                           
 23269 ;; *************** function _sprintf *****************
 23270 ;; Defined at:
 23271 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
 23272 ;; Parameters:    Size  Location     Type
 23273 ;;  sp              2   13[BANK0 ] PTR unsigned char 
 23274 ;;		 -> wrkbuf(80), 
 23275 ;;  f               2   15[BANK0 ] PTR const unsigned char 
 23276 ;;		 -> STR_244(3), STR_243(7), STR_237(3), STR_236(7), 
 23277 ;;		 -> STR_232(4), STR_231(8), STR_228(4), STR_227(8), 
 23278 ;;		 -> STR_224(4), STR_223(8), STR_220(4), STR_219(8), 
 23279 ;;		 -> STR_216(4), STR_215(7), STR_212(4), STR_211(7), 
 23280 ;;		 -> STR_208(4), STR_207(7), STR_204(4), STR_203(7), 
 23281 ;;		 -> STR_198(3), STR_197(7), STR_195(3), STR_194(7), 
 23282 ;;		 -> STR_192(3), STR_191(7), STR_189(3), STR_188(7), 
 23283 ;;		 -> STR_186(3), STR_185(7), STR_183(4), STR_182(8), 
 23284 ;;		 -> STR_180(3), STR_179(7), STR_101(3), STR_100(7), 
 23285 ;;		 -> STR_96(4), STR_95(8), STR_92(4), STR_91(8), 
 23286 ;;		 -> STR_77(3), STR_76(7), STR_75(3), STR_74(7), 
 23287 ;;		 -> STR_72(6), STR_71(10), STR_66(3), STR_65(7), 
 23288 ;;		 -> STR_63(3), STR_62(7), STR_61(3), STR_60(7), 
 23289 ;;		 -> STR_58(6), STR_57(10), 
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;  idx             1   24[BANK0 ] unsigned char 
 23292 ;;  _val            4   36[BANK0 ] struct .
 23293 ;;  flag            2   41[BANK0 ] unsigned short 
 23294 ;;  width           2   34[BANK0 ] int 
 23295 ;;  prec            2   32[BANK0 ] int 
 23296 ;;  c               1   40[BANK0 ] char 
 23297 ;;  ap              1   31[BANK0 ] PTR void [1]
 23298 ;;		 -> ?_sprintf(2), 
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  2   13[BANK0 ] int 
 23301 ;; Registers used:
 23302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23303 ;; Tracked objects:
 23304 ;;		On entry : F/0
 23305 ;;		On exit  : F/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23308 ;;      Params:         0       8       0       0       0       0       0
 23309 ;;      Locals:         0      19       0       0       0       0       0
 23310 ;;      Temps:          0       3       0       0       0       0       0
 23311 ;;      Totals:         0      30       0       0       0       0       0
 23312 ;;Total ram usage:       30 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:    4
 23315 ;; This function calls:
 23316 ;;		_isdigit
 23317 ;;		___lldiv
 23318 ;;		___llmod
 23319 ;;		___wmul
 23320 ;; This function is called by:
 23321 ;;		_doModeVerbose
 23322 ;;		_receivePrintEventVerbose
 23323 ;;		_printStatistics
 23324 ;;		_printErrors
 23325 ;; This function uses a non-reentrant model
 23326 ;;
 23327                           
 23328                           	psect	text56
 23329  004A9C                     __ptext56:
 23330                           	opt stack 0
 23331  004A9C                     _sprintf:
 23332                           	opt stack 24
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;doprnt.c: 494: va_list ap;
 23336                           ;doprnt.c: 499: signed char c;
 23337                           ;doprnt.c: 501: int width;
 23338                           ;doprnt.c: 504: int prec;
 23339                           ;doprnt.c: 508: unsigned short flag;
 23340                           ;doprnt.c: 527: union {
 23341                           ;doprnt.c: 528: unsigned long _val;
 23342                           ;doprnt.c: 529: struct {
 23343                           ;doprnt.c: 530: const char * _cp;
 23344                           ;doprnt.c: 531: unsigned _len;
 23345                           ;doprnt.c: 532: } _str;
 23346                           ;doprnt.c: 533: } _val;
 23347                           ;doprnt.c: 542: *ap = __va_start();
 23348                           
 23349                           ; BSR set to: 0
 23350                           ;incstack = 0
 23351                           ;incstack = 0
 23352  004A9C  0E71               	movlw	low (?_sprintf+4)
 23353  004A9E  6F7F               	movwf	sprintf@ap& (0+255),b
 23354                           
 23355                           ;doprnt.c: 545: while(c = *f++) {
 23356  004AA0  D330               	goto	l18015
 23357  004AA2                     l17681:
 23358                           
 23359                           ; BSR set to: 0
 23360                           ;doprnt.c: 547: if(c != '%')
 23361  004AA2  5188               	movf	sprintf@c& (0+255),w,b
 23362  004AA4  0A25               	xorlw	37
 23363  004AA6  E009               	bz	l1762
 23364                           
 23365                           ; BSR set to: 0
 23366                           ;doprnt.c: 549: {
 23367                           ;doprnt.c: 550: ((*sp++ = (c)));
 23368  004AA8  C06D  FFD9         	movff	sprintf@sp,fsr2l
 23369  004AAC  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 23370  004AB0  C088  FFDF         	movff	sprintf@c,indf2
 23371                           
 23372                           ; BSR set to: 0
 23373  004AB4  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 23374  004AB6  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 23375                           
 23376                           ;doprnt.c: 551: continue;
 23377  004AB8  D324               	goto	l18015
 23378  004ABA                     l1762:
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;doprnt.c: 552: }
 23382                           ;doprnt.c: 555: width = 0;
 23383  004ABA  6B82               	clrf	sprintf@width& (0+255),b
 23384  004ABC  6B83               	clrf	(sprintf@width+1)& (0+255),b
 23385                           
 23386                           ;doprnt.c: 557: flag = 0;
 23387  004ABE  6B89               	clrf	sprintf@flag& (0+255),b
 23388  004AC0  6B8A               	clrf	(sprintf@flag+1)& (0+255),b
 23389  004AC2  D009               	goto	l17697
 23390  004AC4                     l17687:
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;doprnt.c: 563: flag |= 0x08;
 23394  004AC4  8789               	bsf	sprintf@flag& (0+255),3,b
 23395  004AC6  D005               	goto	L50
 23396  004AC8                     l17689:
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;doprnt.c: 570: flag |= 0x01;
 23400  004AC8  8189               	bsf	sprintf@flag& (0+255),0,b
 23401  004ACA  D003               	goto	L50
 23402  004ACC                     l17691:
 23403                           
 23404                           ; BSR set to: 0
 23405                           ;doprnt.c: 583: flag |= 0x800;
 23406  004ACC  878A               	bsf	(sprintf@flag+1)& (0+255),3,b
 23407  004ACE  D001               	goto	L50
 23408  004AD0                     l17693:
 23409                           
 23410                           ; BSR set to: 0
 23411                           ;doprnt.c: 589: flag |= 0x04;
 23412  004AD0  8589               	bsf	sprintf@flag& (0+255),2,b
 23413  004AD2                     L50:
 23414                           
 23415                           ;doprnt.c: 590: f++;
 23416  004AD2  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23417  004AD4  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23418  004AD6                     l17697:
 23419                           
 23420                           ; BSR set to: 0
 23421  004AD6  C06F  FFF6         	movff	sprintf@f,tblptrl
 23422  004ADA  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23423  004ADE  0008               	tblrd		*
 23424  004AE0  50F5               	movf	tablat,w,c
 23425                           
 23426                           ; Switch size 1, requested type "space"
 23427                           ; Number of cases is 4, Range of values is 32 to 48
 23428                           ; switch strategies available:
 23429                           ; Name         Instructions Cycles
 23430                           ; simple_byte           13     7 (average)
 23431                           ;	Chosen strategy is simple_byte
 23432  004AE2  0A20               	xorlw	32	; case 32
 23433  004AE4  E0F1               	bz	l17689
 23434  004AE6  0A03               	xorlw	3	; case 35
 23435  004AE8  E0F1               	bz	l17691
 23436  004AEA  0A0E               	xorlw	14	; case 45
 23437  004AEC  E0EB               	bz	l17687
 23438  004AEE  0A1D               	xorlw	29	; case 48
 23439  004AF0  E0EF               	bz	l17693
 23440                           
 23441                           ; BSR set to: 0
 23442                           ;doprnt.c: 602: if(flag & 0x08)
 23443  004AF2  B789               	btfsc	sprintf@flag& (0+255),3,b
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;doprnt.c: 603: flag &= ~0x04;
 23447  004AF4  9589               	bcf	sprintf@flag& (0+255),2,b
 23448                           
 23449                           ; BSR set to: 0
 23450                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 23451  004AF6  C06F  FFF6         	movff	sprintf@f,tblptrl
 23452  004AFA  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23453  004AFE  0008               	tblrd		*
 23454  004B00  50F5               	movf	tablat,w,c
 23455  004B02  ECB6  F004         	call	_isdigit
 23456  004B06  E326               	bnc	l17713
 23457                           
 23458                           ;doprnt.c: 607: width = 0;
 23459  004B08  0100               	movlb	0	; () banked
 23460  004B0A  6B82               	clrf	sprintf@width& (0+255),b
 23461  004B0C  6B83               	clrf	(sprintf@width+1)& (0+255),b
 23462  004B0E                     l17705:
 23463                           
 23464                           ;doprnt.c: 609: width *= 10;
 23465  004B0E  C082  F023         	movff	sprintf@width,?___wmul
 23466  004B12  C083  F024         	movff	sprintf@width+1,?___wmul+1
 23467  004B16  6A26               	clrf	?___wmul+3,c
 23468  004B18  0E0A               	movlw	10
 23469  004B1A  6E25               	movwf	?___wmul+2,c
 23470  004B1C  EC9B  F005         	call	___wmul	;wreg free
 23471  004B20  C023  F082         	movff	?___wmul,sprintf@width
 23472  004B24  C024  F083         	movff	?___wmul+1,sprintf@width+1
 23473                           
 23474                           ; BSR set to: 0
 23475                           ;doprnt.c: 610: width += *f++ - '0';
 23476  004B28  C06F  FFF6         	movff	sprintf@f,tblptrl
 23477  004B2C  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23478  004B30  0008               	tblrd		*
 23479  004B32  CFF5 F075          	movff	tablat,??_sprintf
 23480  004B36  0ED0               	movlw	208
 23481  004B38  2575               	addwf	??_sprintf& (0+255),w,b
 23482  004B3A  6F76               	movwf	(??_sprintf+1)& (0+255),b
 23483  004B3C  6B77               	clrf	(??_sprintf+2)& (0+255),b
 23484  004B3E  0EFF               	movlw	255
 23485  004B40  2377               	addwfc	(??_sprintf+2)& (0+255),f,b
 23486  004B42  5176               	movf	(??_sprintf+1)& (0+255),w,b
 23487  004B44  2782               	addwf	sprintf@width& (0+255),f,b
 23488  004B46  5177               	movf	(??_sprintf+2)& (0+255),w,b
 23489  004B48  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 23490                           
 23491                           ; BSR set to: 0
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 23495  004B4A  DB39               	call	PL106	;call to abstracted procedure
 23496  004B4C  ECB6  F004         	call	_isdigit
 23497  004B50  E315               	bnc	l17721
 23498  004B52  D7DD               	goto	l17705
 23499  004B54                     l17713:
 23500  004B54  0100               	movlb	0	; () banked
 23501  004B56  C06F  FFF6         	movff	sprintf@f,tblptrl
 23502  004B5A  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23503  004B5E  0008               	tblrd		*
 23504  004B60  50F5               	movf	tablat,w,c
 23505  004B62  0A2A               	xorlw	42
 23506  004B64  E10B               	bnz	l17721
 23507                           
 23508                           ; BSR set to: 0
 23509                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 23510  004B66  517F               	movf	sprintf@ap& (0+255),w,b
 23511  004B68  6ED9               	movwf	fsr2l,c
 23512  004B6A  6ADA               	clrf	fsr2h,c
 23513  004B6C  CFDE F082          	movff	postinc2,sprintf@width
 23514  004B70  CFDD F083          	movff	postdec2,sprintf@width+1
 23515                           
 23516                           ; BSR set to: 0
 23517  004B74  0E02               	movlw	2
 23518  004B76  277F               	addwf	sprintf@ap& (0+255),f,b
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;doprnt.c: 615: f++;
 23522  004B78  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23523  004B7A  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23524  004B7C                     l17721:
 23525                           
 23526                           ;doprnt.c: 617: }
 23527                           ;doprnt.c: 620: if(*f == '.') {
 23528  004B7C  0100               	movlb	0	; () banked
 23529  004B7E  C06F  FFF6         	movff	sprintf@f,tblptrl
 23530  004B82  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23531  004B86  0008               	tblrd		*
 23532  004B88  50F5               	movf	tablat,w,c
 23533  004B8A  0A2E               	xorlw	46
 23534  004B8C  E137               	bnz	l1778
 23535                           
 23536                           ; BSR set to: 0
 23537                           ;doprnt.c: 621: flag |= 0x4000;
 23538  004B8E  8D8A               	bsf	(sprintf@flag+1)& (0+255),6,b
 23539                           
 23540                           ;doprnt.c: 622: f++;
 23541                           
 23542                           ; BSR set to: 0
 23543                           ;doprnt.c: 624: if(*f == '*') {
 23544  004B90  DB16               	call	PL106	;call to abstracted procedure
 23545  004B92  0A2A               	xorlw	42
 23546  004B94  E10C               	bnz	l1779
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 23550  004B96  517F               	movf	sprintf@ap& (0+255),w,b
 23551  004B98  6ED9               	movwf	fsr2l,c
 23552  004B9A  6ADA               	clrf	fsr2h,c
 23553  004B9C  CFDE F080          	movff	postinc2,sprintf@prec
 23554  004BA0  CFDD F081          	movff	postdec2,sprintf@prec+1
 23555                           
 23556                           ; BSR set to: 0
 23557  004BA4  0E02               	movlw	2
 23558  004BA6  277F               	addwf	sprintf@ap& (0+255),f,b
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;doprnt.c: 626: f++;
 23562  004BA8  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23563  004BAA  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23564                           
 23565                           ;doprnt.c: 627: } else
 23566  004BAC  D088               	goto	l17791
 23567  004BAE                     l1779:
 23568                           
 23569                           ; BSR set to: 0
 23570                           ;doprnt.c: 629: {
 23571                           ;doprnt.c: 630: prec = 0;
 23572  004BAE  6B80               	clrf	sprintf@prec& (0+255),b
 23573  004BB0  6B81               	clrf	(sprintf@prec+1)& (0+255),b
 23574                           
 23575                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 23576  004BB2  D01A               	goto	l17737
 23577  004BB4                     l17733:
 23578                           
 23579                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 23580  004BB4  C080  F023         	movff	sprintf@prec,?___wmul
 23581  004BB8  C081  F024         	movff	sprintf@prec+1,?___wmul+1
 23582  004BBC  6A26               	clrf	?___wmul+3,c
 23583  004BBE  0E0A               	movlw	10
 23584  004BC0  6E25               	movwf	?___wmul+2,c
 23585  004BC2  EC9B  F005         	call	___wmul	;wreg free
 23586  004BC6  C06F  FFF6         	movff	sprintf@f,tblptrl
 23587  004BCA  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23588  004BCE  0008               	tblrd		*
 23589  004BD0  50F5               	movf	tablat,w,c
 23590  004BD2  2623               	addwf	?___wmul,f,c
 23591  004BD4  0E00               	movlw	0
 23592  004BD6  2224               	addwfc	?___wmul+1,f,c
 23593  004BD8  0ED0               	movlw	208
 23594  004BDA  2423               	addwf	?___wmul,w,c
 23595  004BDC  6F80               	movwf	sprintf@prec& (0+255),b
 23596  004BDE  0EFF               	movlw	255
 23597  004BE0  2024               	addwfc	?___wmul+1,w,c
 23598  004BE2  6F81               	movwf	(sprintf@prec+1)& (0+255),b
 23599                           
 23600                           ; BSR set to: 0
 23601  004BE4  4B6F               	infsnz	sprintf@f& (0+255),f,b
 23602  004BE6  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 23603  004BE8                     l17737:
 23604                           
 23605                           ; BSR set to: 0
 23606  004BE8  C06F  FFF6         	movff	sprintf@f,tblptrl
 23607  004BEC  C070  FFF7         	movff	sprintf@f+1,tblptrh
 23608  004BF0  0008               	tblrd		*
 23609  004BF2  50F5               	movf	tablat,w,c
 23610  004BF4  ECB6  F004         	call	_isdigit
 23611  004BF8  E362               	bnc	l17791
 23612  004BFA  D7DC               	goto	l17733
 23613  004BFC                     l1778:
 23614                           
 23615                           ; BSR set to: 0
 23616                           ;doprnt.c: 635: prec = 0;
 23617  004BFC  6B80               	clrf	sprintf@prec& (0+255),b
 23618  004BFE  6B81               	clrf	(sprintf@prec+1)& (0+255),b
 23619  004C00  D05E               	goto	l17791
 23620  004C02                     l17739:
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;doprnt.c: 652: flag |= 0x10;
 23624  004C02  8989               	bsf	sprintf@flag& (0+255),4,b
 23625                           
 23626                           ;doprnt.c: 653: goto loop;
 23627  004C04  D05C               	goto	l17791
 23628  004C06                     l17741:
 23629                           
 23630                           ; BSR set to: 0
 23631                           ;doprnt.c: 700: flag |= 0x40;
 23632  004C06  8D89               	bsf	sprintf@flag& (0+255),6,b
 23633                           
 23634                           ;doprnt.c: 702: break;
 23635  004C08  D070               	goto	l17793
 23636  004C0A                     l17743:
 23637                           
 23638                           ; BSR set to: 0
 23639                           ;doprnt.c: 723: flag |= 0x20;
 23640  004C0A  8B89               	bsf	sprintf@flag& (0+255),5,b
 23641  004C0C                     l1795:
 23642                           
 23643                           ; BSR set to: 0
 23644                           ;doprnt.c: 730: flag |= 0x80;
 23645  004C0C  8F89               	bsf	sprintf@flag& (0+255),7,b
 23646                           
 23647                           ;doprnt.c: 732: break;
 23648  004C0E  D06D               	goto	l17793
 23649  004C10                     l17745:
 23650                           
 23651                           ; BSR set to: 0
 23652                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 23653  004C10  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 23654  004C12  1180               	iorwf	sprintf@prec& (0+255),w,b
 23655  004C14  E009               	bz	l17751
 23656                           
 23657                           ; BSR set to: 0
 23658  004C16  5185               	movf	(sprintf@_val+1)& (0+255),w,b
 23659  004C18  5D80               	subwf	sprintf@prec& (0+255),w,b
 23660  004C1A  5186               	movf	(sprintf@_val+2)& (0+255),w,b
 23661  004C1C  5981               	subwfb	(sprintf@prec+1)& (0+255),w,b
 23662  004C1E  E204               	bc	l17751
 23663                           
 23664                           ; BSR set to: 0
 23665                           ;doprnt.c: 763: _val._str._len = prec;
 23666  004C20  C080  F085         	movff	sprintf@prec,sprintf@_val+1
 23667  004C24  C081  F086         	movff	sprintf@prec+1,sprintf@_val+2
 23668  004C28                     l17751:
 23669                           
 23670                           ; BSR set to: 0
 23671                           ;doprnt.c: 766: if(width > _val._str._len)
 23672  004C28  5182               	movf	sprintf@width& (0+255),w,b
 23673  004C2A  5D85               	subwf	(sprintf@_val+1)& (0+255),w,b
 23674  004C2C  5183               	movf	(sprintf@width+1)& (0+255),w,b
 23675  004C2E  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 23676  004C30  E207               	bc	l1798
 23677                           
 23678                           ; BSR set to: 0
 23679                           ;doprnt.c: 767: width -= _val._str._len;
 23680  004C32  EE20  F085         	lfsr	2,sprintf@_val+1
 23681  004C36  50DE               	movf	postinc2,w,c
 23682  004C38  5F82               	subwf	sprintf@width& (0+255),f,b
 23683  004C3A  50DD               	movf	postdec2,w,c
 23684  004C3C  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 23685  004C3E  D002               	goto	l1799
 23686  004C40                     l1798:
 23687                           
 23688                           ; BSR set to: 0
 23689                           ;doprnt.c: 768: else
 23690                           ;doprnt.c: 769: width = 0;
 23691  004C40  6B82               	clrf	sprintf@width& (0+255),b
 23692  004C42  6B83               	clrf	(sprintf@width+1)& (0+255),b
 23693  004C44                     l1799:
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;doprnt.c: 771: if(!(flag & 0x08))
 23697  004C44  A789               	btfss	sprintf@flag& (0+255),3,b
 23698  004C46  D004               	goto	l17761
 23699  004C48  D015               	goto	l17769
 23700  004C4A                     l17757:
 23701                           
 23702                           ; BSR set to: 0
 23703                           ;doprnt.c: 774: ((*sp++ = (' ')));
 23704  004C4A  DAA8               	call	PL78	;call to abstracted procedure
 23705                           
 23706                           ; BSR set to: 0
 23707  004C4C  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 23708  004C4E  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 23709  004C50                     l17761:
 23710                           
 23711                           ; BSR set to: 0
 23712  004C50  0782               	decf	sprintf@width& (0+255),f,b
 23713  004C52  DAC3               	call	PL144	;call to abstracted procedure
 23714  004C54  B4D8               	btfsc	status,2,c
 23715  004C56  2983               	incf	(sprintf@width+1)& (0+255),w,b
 23716  004C58  E00D               	bz	l17769
 23717  004C5A  D7F7               	goto	l17757
 23718  004C5C                     l17763:
 23719                           
 23720                           ; BSR set to: 0
 23721                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 23722  004C5C  5184               	movf	sprintf@_val& (0+255),w,b
 23723  004C5E  6ED9               	movwf	fsr2l,c
 23724  004C60  6ADA               	clrf	fsr2h,c
 23725  004C62  C06D  FFE1         	movff	sprintf@sp,fsr1l
 23726  004C66  C06E  FFE2         	movff	sprintf@sp+1,fsr1h
 23727  004C6A  CFDF FFE7          	movff	indf2,indf1
 23728                           
 23729                           ; BSR set to: 0
 23730  004C6E  2B84               	incf	sprintf@_val& (0+255),f,b
 23731                           
 23732                           ; BSR set to: 0
 23733  004C70  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 23734  004C72  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 23735  004C74                     l17769:
 23736                           
 23737                           ; BSR set to: 0
 23738  004C74  0785               	decf	(sprintf@_val+1)& (0+255),f,b
 23739  004C76  A0D8               	btfss	status,0,c
 23740  004C78  0786               	decf	(sprintf@_val+2)& (0+255),f,b
 23741  004C7A  0100               	movlb	0	; () banked
 23742  004C7C  2985               	incf	(sprintf@_val+1)& (0+255),w,b
 23743  004C7E  B4D8               	btfsc	status,2,c
 23744  004C80  2986               	incf	(sprintf@_val+2)& (0+255),w,b
 23745  004C82  E1EC               	bnz	l17763
 23746                           
 23747                           ; BSR set to: 0
 23748                           ;doprnt.c: 779: if(flag & 0x08)
 23749  004C84  B789               	btfsc	sprintf@flag& (0+255),3,b
 23750  004C86  D004               	goto	l17777
 23751  004C88  D23C               	goto	l18015
 23752  004C8A                     l17773:
 23753                           
 23754                           ; BSR set to: 0
 23755                           ;doprnt.c: 781: ((*sp++ = (' ')));
 23756  004C8A  DA88               	call	PL78	;call to abstracted procedure
 23757                           
 23758                           ; BSR set to: 0
 23759  004C8C  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 23760  004C8E  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 23761  004C90                     l17777:
 23762                           
 23763                           ; BSR set to: 0
 23764  004C90  0782               	decf	sprintf@width& (0+255),f,b
 23765  004C92  DAA3               	call	PL144	;call to abstracted procedure
 23766  004C94  B4D8               	btfsc	status,2,c
 23767  004C96  2983               	incf	(sprintf@width+1)& (0+255),w,b
 23768  004C98  E101 D233          	bz	l18015
 23769  004C9C  D7F6               	goto	l17773
 23770  004C9E                     l17779:
 23771                           
 23772                           ; BSR set to: 0
 23773                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 23774  004C9E  517F               	movf	sprintf@ap& (0+255),w,b
 23775  004CA0  6ED9               	movwf	fsr2l,c
 23776  004CA2  6ADA               	clrf	fsr2h,c
 23777  004CA4  50DF               	movf	indf2,w,c
 23778  004CA6  6F88               	movwf	sprintf@c& (0+255),b
 23779                           
 23780                           ; BSR set to: 0
 23781  004CA8  0E02               	movlw	2
 23782  004CAA  277F               	addwf	sprintf@ap& (0+255),f,b
 23783  004CAC                     l17783:
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 23787  004CAC  0E88               	movlw	low sprintf@c
 23788  004CAE  6F84               	movwf	sprintf@_val& (0+255),b
 23789                           
 23790                           ; BSR set to: 0
 23791                           ;doprnt.c: 815: _val._str._len = 1;
 23792  004CB0  6B86               	clrf	(sprintf@_val+2)& (0+255),b
 23793  004CB2  0E01               	movlw	1
 23794  004CB4  6F85               	movwf	(sprintf@_val+1)& (0+255),b
 23795                           
 23796                           ;doprnt.c: 816: goto dostring;
 23797  004CB6  D7AC               	goto	l17745
 23798  004CB8                     l17787:
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;doprnt.c: 827: flag |= 0xC0;
 23802  004CB8  0EC0               	movlw	192
 23803  004CBA  1389               	iorwf	sprintf@flag& (0+255),f,b
 23804                           
 23805                           ;doprnt.c: 828: break;
 23806  004CBC  D016               	goto	l17793
 23807  004CBE                     l17791:
 23808  004CBE  0100               	movlb	0	; () banked
 23809  004CC0  DA74               	call	PL86	;call to abstracted procedure
 23810  004CC2  5188               	movf	sprintf@c& (0+255),w,b
 23811                           
 23812                           ; Switch size 1, requested type "space"
 23813                           ; Number of cases is 9, Range of values is 0 to 120
 23814                           ; switch strategies available:
 23815                           ; Name         Instructions Cycles
 23816                           ; simple_byte           28    15 (average)
 23817                           ;	Chosen strategy is simple_byte
 23818  004CC4  E101 D221          	bz	l18017
 23819  004CC8  0A58               	xorlw	88	; case 88
 23820  004CCA  E09F               	bz	l17743
 23821  004CCC  0A3B               	xorlw	59	; case 99
 23822  004CCE  E0E7               	bz	l17779
 23823  004CD0  0A07               	xorlw	7	; case 100
 23824  004CD2  E00B               	bz	l17793
 23825  004CD4  0A0D               	xorlw	13	; case 105
 23826  004CD6  E009               	bz	l17793
 23827  004CD8  0A05               	xorlw	5	; case 108
 23828  004CDA  E093               	bz	l17739
 23829  004CDC  0A03               	xorlw	3	; case 111
 23830  004CDE  E093               	bz	l17741
 23831  004CE0  0A1A               	xorlw	26	; case 117
 23832  004CE2  E0EA               	bz	l17787
 23833  004CE4  0A0D               	xorlw	13	; case 120
 23834  004CE6  E092               	bz	l1795
 23835  004CE8  D7E1               	goto	l17783
 23836  004CEA                     l17793:
 23837                           
 23838                           ; BSR set to: 0
 23839                           ;doprnt.c: 1258: if((flag & (0xC0)) == 0x00)
 23840  004CEA  5189               	movf	sprintf@flag& (0+255),w,b
 23841  004CEC  0BC0               	andlw	192
 23842  004CEE  E120               	bnz	l1814
 23843                           
 23844                           ; BSR set to: 0
 23845                           ;doprnt.c: 1260: {
 23846                           ;doprnt.c: 1262: if(flag & 0x10)
 23847  004CF0  A989               	btfss	sprintf@flag& (0+255),4,b
 23848  004CF2  D003               	goto	l17801
 23849                           
 23850                           ; BSR set to: 0
 23851                           ;doprnt.c: 1263: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
 23852  004CF4  517F               	movf	sprintf@ap& (0+255),w,b
 23853                           
 23854                           ; BSR set to: 0
 23855  004CF6  DA47               	call	PL62	;call to abstracted procedure
 23856  004CF8  D00D               	goto	L51
 23857  004CFA                     l17801:
 23858                           
 23859                           ; BSR set to: 0
 23860                           ;doprnt.c: 1264: else
 23861                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 23862  004CFA  517F               	movf	sprintf@ap& (0+255),w,b
 23863  004CFC  6ED9               	movwf	fsr2l,c
 23864  004CFE  6ADA               	clrf	fsr2h,c
 23865  004D00  CFDE F084          	movff	postinc2,sprintf@_val
 23866  004D04  CFDD F085          	movff	postdec2,sprintf@_val+1
 23867  004D08  0E00               	movlw	0
 23868  004D0A  BF85               	btfsc	(sprintf@_val+1)& (0+255),7,b
 23869  004D0C  0EFF               	movlw	-1
 23870  004D0E  6F86               	movwf	(sprintf@_val+2)& (0+255),b
 23871  004D10  6F87               	movwf	(sprintf@_val+3)& (0+255),b
 23872                           
 23873                           ; BSR set to: 0
 23874  004D12  0E02               	movlw	2
 23875  004D14                     L51:
 23876  004D14  277F               	addwf	sprintf@ap& (0+255),f,b
 23877                           
 23878                           ; BSR set to: 0
 23879                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 23880  004D16  AF87               	btfss	(sprintf@_val+3)& (0+255),7,b
 23881  004D18  D01F               	goto	l17819
 23882                           
 23883                           ; BSR set to: 0
 23884                           ;doprnt.c: 1269: flag |= 0x03;
 23885  004D1A  0E03               	movlw	3
 23886  004D1C  1389               	iorwf	sprintf@flag& (0+255),f,b
 23887                           
 23888                           ; BSR set to: 0
 23889                           ;doprnt.c: 1270: _val._val = -_val._val;
 23890  004D1E  1F87               	comf	(sprintf@_val+3)& (0+255),f,b
 23891  004D20  1F86               	comf	(sprintf@_val+2)& (0+255),f,b
 23892  004D22  1F85               	comf	(sprintf@_val+1)& (0+255),f,b
 23893  004D24  6D84               	negf	sprintf@_val& (0+255),b
 23894  004D26  0E00               	movlw	0
 23895  004D28  2385               	addwfc	(sprintf@_val+1)& (0+255),f,b
 23896  004D2A  2386               	addwfc	(sprintf@_val+2)& (0+255),f,b
 23897  004D2C  2387               	addwfc	(sprintf@_val+3)& (0+255),f,b
 23898  004D2E  D014               	goto	l17819
 23899  004D30                     l1814:
 23900                           
 23901                           ; BSR set to: 0
 23902                           ;doprnt.c: 1275: else
 23903                           ;doprnt.c: 1280: {
 23904                           ;doprnt.c: 1288: if(flag & 0x10)
 23905  004D30  A989               	btfss	sprintf@flag& (0+255),4,b
 23906  004D32  D003               	goto	l17815
 23907                           
 23908                           ; BSR set to: 0
 23909                           ;doprnt.c: 1289: _val._val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsig
      +                          ned long)0));
 23910  004D34  517F               	movf	sprintf@ap& (0+255),w,b
 23911                           
 23912                           ; BSR set to: 0
 23913  004D36  DA27               	call	PL62	;call to abstracted procedure
 23914  004D38  D00E               	goto	L52
 23915  004D3A                     l17815:
 23916                           
 23917                           ; BSR set to: 0
 23918                           ;doprnt.c: 1290: else
 23919                           ;doprnt.c: 1293: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 23920  004D3A  517F               	movf	sprintf@ap& (0+255),w,b
 23921  004D3C  6ED9               	movwf	fsr2l,c
 23922  004D3E  6ADA               	clrf	fsr2h,c
 23923  004D40  CFDE F075          	movff	postinc2,??_sprintf
 23924  004D44  CFDD F076          	movff	postdec2,??_sprintf+1
 23925  004D48  C075  F084         	movff	??_sprintf,sprintf@_val
 23926  004D4C  C076  F085         	movff	??_sprintf+1,sprintf@_val+1
 23927  004D50  6B86               	clrf	(sprintf@_val+2)& (0+255),b
 23928  004D52  6B87               	clrf	(sprintf@_val+3)& (0+255),b
 23929                           
 23930                           ; BSR set to: 0
 23931  004D54  0E02               	movlw	2
 23932  004D56                     L52:
 23933  004D56  277F               	addwf	sprintf@ap& (0+255),f,b
 23934  004D58                     l17819:
 23935                           
 23936                           ; BSR set to: 0
 23937                           ;doprnt.c: 1294: }
 23938                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 23939  004D58  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 23940  004D5A  1180               	iorwf	sprintf@prec& (0+255),w,b
 23941  004D5C  E15C               	bnz	l17869
 23942                           
 23943                           ; BSR set to: 0
 23944  004D5E  5187               	movf	(sprintf@_val+3)& (0+255),w,b
 23945  004D60  1184               	iorwf	sprintf@_val& (0+255),w,b
 23946  004D62  1185               	iorwf	(sprintf@_val+1)& (0+255),w,b
 23947  004D64  1186               	iorwf	(sprintf@_val+2)& (0+255),w,b
 23948  004D66  E157               	bnz	l17869
 23949                           
 23950                           ; BSR set to: 0
 23951                           ;doprnt.c: 1298: prec++;
 23952  004D68  4B80               	infsnz	sprintf@prec& (0+255),f,b
 23953  004D6A  2B81               	incf	(sprintf@prec+1)& (0+255),f,b
 23954  004D6C  D054               	goto	l17869
 23955  004D6E                     l17825:
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;doprnt.c: 1309: case 0xC0:
 23959                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 23960  004D6E  0E01               	movlw	1
 23961  004D70  6F88               	movwf	sprintf@c& (0+255),b
 23962  004D72                     l17827:
 23963                           
 23964                           ; BSR set to: 0
 23965  004D72  5188               	movf	sprintf@c& (0+255),w,b
 23966  004D74  0A0A               	xorlw	10
 23967  004D76  E058               	bz	l17871
 23968                           
 23969                           ; BSR set to: 0
 23970                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 23971  004D78  5188               	movf	sprintf@c& (0+255),w,b
 23972  004D7A  0D04               	mullw	4
 23973  004D7C  0E3A               	movlw	low _dpowers
 23974  004D7E  24F3               	addwf	prodl,w,c
 23975  004D80  6EF6               	movwf	tblptrl,c
 23976  004D82  0E6B               	movlw	high _dpowers
 23977  004D84  20F4               	addwfc	prodh,w,c
 23978  004D86  6EF7               	movwf	tblptrh,c
 23979  004D88  0009               	tblrd		*+
 23980  004D8A  50F5               	movf	tablat,w,c
 23981  004D8C  5D84               	subwf	sprintf@_val& (0+255),w,b
 23982  004D8E  0009               	tblrd		*+
 23983  004D90  50F5               	movf	tablat,w,c
 23984  004D92  5985               	subwfb	(sprintf@_val+1)& (0+255),w,b
 23985  004D94  0009               	tblrd		*+
 23986  004D96  50F5               	movf	tablat,w,c
 23987  004D98  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 23988  004D9A  0009               	tblrd		*+
 23989  004D9C  50F5               	movf	tablat,w,c
 23990  004D9E  5987               	subwfb	(sprintf@_val+3)& (0+255),w,b
 23991  004DA0  E343               	bnc	l17871
 23992                           
 23993                           ; BSR set to: 0
 23994  004DA2  2B88               	incf	sprintf@c& (0+255),f,b
 23995  004DA4  D7E6               	goto	l17827
 23996  004DA6                     l17839:
 23997                           
 23998                           ; BSR set to: 0
 23999                           ;doprnt.c: 1323: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 24000  004DA6  0E01               	movlw	1
 24001  004DA8  6F88               	movwf	sprintf@c& (0+255),b
 24002  004DAA                     l17841:
 24003                           
 24004                           ; BSR set to: 0
 24005  004DAA  5188               	movf	sprintf@c& (0+255),w,b
 24006  004DAC  0A08               	xorlw	8
 24007  004DAE  E03C               	bz	l17871
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;doprnt.c: 1324: if(_val._val < hexpowers[c])
 24011  004DB0  5188               	movf	sprintf@c& (0+255),w,b
 24012  004DB2  0D04               	mullw	4
 24013  004DB4  0E62               	movlw	low _hexpowers
 24014  004DB6  24F3               	addwf	prodl,w,c
 24015  004DB8  6EF6               	movwf	tblptrl,c
 24016  004DBA  0E6B               	movlw	high _hexpowers
 24017  004DBC  20F4               	addwfc	prodh,w,c
 24018  004DBE  6EF7               	movwf	tblptrh,c
 24019  004DC0  0009               	tblrd		*+
 24020  004DC2  50F5               	movf	tablat,w,c
 24021  004DC4  5D84               	subwf	sprintf@_val& (0+255),w,b
 24022  004DC6  0009               	tblrd		*+
 24023  004DC8  50F5               	movf	tablat,w,c
 24024  004DCA  5985               	subwfb	(sprintf@_val+1)& (0+255),w,b
 24025  004DCC  0009               	tblrd		*+
 24026  004DCE  50F5               	movf	tablat,w,c
 24027  004DD0  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 24028  004DD2  0009               	tblrd		*+
 24029  004DD4  50F5               	movf	tablat,w,c
 24030  004DD6  5987               	subwfb	(sprintf@_val+3)& (0+255),w,b
 24031  004DD8  E327               	bnc	l17871
 24032                           
 24033                           ; BSR set to: 0
 24034  004DDA  2B88               	incf	sprintf@c& (0+255),f,b
 24035  004DDC  D7E6               	goto	l17841
 24036  004DDE                     l17853:
 24037                           
 24038                           ; BSR set to: 0
 24039                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 24040  004DDE  0E01               	movlw	1
 24041  004DE0  6F88               	movwf	sprintf@c& (0+255),b
 24042  004DE2                     l17855:
 24043                           
 24044                           ; BSR set to: 0
 24045  004DE2  5188               	movf	sprintf@c& (0+255),w,b
 24046  004DE4  0A0C               	xorlw	12
 24047  004DE6  E020               	bz	l17871
 24048                           
 24049                           ; BSR set to: 0
 24050                           ;doprnt.c: 1336: if(_val._val < octpowers[c])
 24051  004DE8  5188               	movf	sprintf@c& (0+255),w,b
 24052  004DEA  0D04               	mullw	4
 24053  004DEC  0E0A               	movlw	low _octpowers
 24054  004DEE  24F3               	addwf	prodl,w,c
 24055  004DF0  6EF6               	movwf	tblptrl,c
 24056  004DF2  0E6B               	movlw	high _octpowers
 24057  004DF4  20F4               	addwfc	prodh,w,c
 24058  004DF6  6EF7               	movwf	tblptrh,c
 24059  004DF8  0009               	tblrd		*+
 24060  004DFA  50F5               	movf	tablat,w,c
 24061  004DFC  5D84               	subwf	sprintf@_val& (0+255),w,b
 24062  004DFE  0009               	tblrd		*+
 24063  004E00  50F5               	movf	tablat,w,c
 24064  004E02  5985               	subwfb	(sprintf@_val+1)& (0+255),w,b
 24065  004E04  0009               	tblrd		*+
 24066  004E06  50F5               	movf	tablat,w,c
 24067  004E08  5986               	subwfb	(sprintf@_val+2)& (0+255),w,b
 24068  004E0A  0009               	tblrd		*+
 24069  004E0C  50F5               	movf	tablat,w,c
 24070  004E0E  5987               	subwfb	(sprintf@_val+3)& (0+255),w,b
 24071  004E10  E30B               	bnc	l17871
 24072                           
 24073                           ; BSR set to: 0
 24074  004E12  2B88               	incf	sprintf@c& (0+255),f,b
 24075  004E14  D7E6               	goto	l17855
 24076  004E16                     l17869:
 24077                           
 24078                           ; BSR set to: 0
 24079  004E16  5189               	movf	sprintf@flag& (0+255),w,b
 24080  004E18  0BC0               	andlw	192
 24081                           
 24082                           ; Switch size 1, requested type "space"
 24083                           ; Number of cases is 4, Range of values is 0 to 192
 24084                           ; switch strategies available:
 24085                           ; Name         Instructions Cycles
 24086                           ; simple_byte           13     7 (average)
 24087                           ;	Chosen strategy is simple_byte
 24088  004E1A  E0A9               	bz	l17825
 24089  004E1C  0A40               	xorlw	64	; case 64
 24090  004E1E  E0DF               	bz	l17853
 24091  004E20  0AC0               	xorlw	192	; case 128
 24092  004E22  E0C1               	bz	l17839
 24093  004E24  0A40               	xorlw	64	; case 192
 24094  004E26  E0A3               	bz	l17825
 24095  004E28                     l17871:
 24096                           
 24097                           ; BSR set to: 0
 24098                           ;doprnt.c: 1346: if(c < prec)
 24099  004E28  0E80               	movlw	128
 24100  004E2A  BF88               	btfsc	sprintf@c& (0+255),7,b
 24101  004E2C  0E7F               	movlw	127
 24102  004E2E  6F75               	movwf	??_sprintf& (0+255),b
 24103  004E30  5180               	movf	sprintf@prec& (0+255),w,b
 24104  004E32  5D88               	subwf	sprintf@c& (0+255),w,b
 24105  004E34  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24106  004E36  0A80               	xorlw	128
 24107  004E38  5975               	subwfb	??_sprintf& (0+255),w,b
 24108  004E3A  E203               	bc	l17875
 24109                           
 24110                           ; BSR set to: 0
 24111                           ;doprnt.c: 1347: c = prec;
 24112  004E3C  C080  F088         	movff	sprintf@prec,sprintf@c
 24113  004E40  D00F               	goto	l17879
 24114  004E42                     l17875:
 24115                           
 24116                           ; BSR set to: 0
 24117                           ;doprnt.c: 1348: else if(prec < c)
 24118  004E42  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24119  004E44  0A80               	xorlw	128
 24120  004E46  6F75               	movwf	??_sprintf& (0+255),b
 24121  004E48  5188               	movf	sprintf@c& (0+255),w,b
 24122  004E4A  5D80               	subwf	sprintf@prec& (0+255),w,b
 24123  004E4C  0E80               	movlw	128
 24124  004E4E  BF88               	btfsc	sprintf@c& (0+255),7,b
 24125  004E50  0E7F               	movlw	127
 24126  004E52  5975               	subwfb	??_sprintf& (0+255),w,b
 24127  004E54  E205               	bc	l17879
 24128                           
 24129                           ; BSR set to: 0
 24130                           ;doprnt.c: 1349: prec = c;
 24131  004E56  5188               	movf	sprintf@c& (0+255),w,b
 24132  004E58  6F80               	movwf	sprintf@prec& (0+255),b
 24133  004E5A  6B81               	clrf	(sprintf@prec+1)& (0+255),b
 24134  004E5C  BF80               	btfsc	sprintf@prec& (0+255),7,b
 24135  004E5E  0781               	decf	(sprintf@prec+1)& (0+255),f,b
 24136  004E60                     l17879:
 24137                           
 24138                           ; BSR set to: 0
 24139                           ;doprnt.c: 1352: if(width && flag & 0x03)
 24140  004E60  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24141  004E62  1182               	iorwf	sprintf@width& (0+255),w,b
 24142  004E64  E006               	bz	l17885
 24143                           
 24144                           ; BSR set to: 0
 24145  004E66  5189               	movf	sprintf@flag& (0+255),w,b
 24146  004E68  0B03               	andlw	3
 24147  004E6A  E003               	bz	l17885
 24148                           
 24149                           ; BSR set to: 0
 24150                           ;doprnt.c: 1353: width--;
 24151  004E6C  0782               	decf	sprintf@width& (0+255),f,b
 24152  004E6E  A0D8               	btfss	status,0,c
 24153  004E70  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24154  004E72                     l17885:
 24155                           
 24156                           ; BSR set to: 0
 24157                           ;doprnt.c: 1355: if(flag & 0x4000) {
 24158  004E72  AD8A               	btfss	(sprintf@flag+1)& (0+255),6,b
 24159  004E74  D010               	goto	l17891
 24160                           
 24161                           ; BSR set to: 0
 24162                           ;doprnt.c: 1356: if(width > prec)
 24163  004E76  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24164  004E78  0A80               	xorlw	128
 24165  004E7A  6F75               	movwf	??_sprintf& (0+255),b
 24166  004E7C  5182               	movf	sprintf@width& (0+255),w,b
 24167  004E7E  5D80               	subwf	sprintf@prec& (0+255),w,b
 24168  004E80  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24169  004E82  0A80               	xorlw	128
 24170  004E84  5975               	subwfb	??_sprintf& (0+255),w,b
 24171  004E86  E205               	bc	l1842
 24172                           
 24173                           ; BSR set to: 0
 24174                           ;doprnt.c: 1357: width -= prec;
 24175  004E88  5180               	movf	sprintf@prec& (0+255),w,b
 24176  004E8A  5F82               	subwf	sprintf@width& (0+255),f,b
 24177  004E8C  5181               	movf	(sprintf@prec+1)& (0+255),w,b
 24178  004E8E  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 24179  004E90  D002               	goto	l17891
 24180  004E92                     l1842:
 24181                           
 24182                           ; BSR set to: 0
 24183                           ;doprnt.c: 1358: else
 24184                           ;doprnt.c: 1359: width = 0;
 24185  004E92  6B82               	clrf	sprintf@width& (0+255),b
 24186  004E94  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24187  004E96                     l17891:
 24188                           
 24189                           ; BSR set to: 0
 24190                           ;doprnt.c: 1360: }
 24191                           ;doprnt.c: 1364: if((flag & (
 24192                           ;doprnt.c: 1366: 0x04|
 24193                           ;doprnt.c: 1368: (0xC0)|0x800)) == (0x40|0x800)) {
 24194  004E96  0EC4               	movlw	196
 24195  004E98  D94E               	call	PL24	;call to abstracted procedure
 24196  004E9A  0E40               	movlw	64
 24197  004E9C  B4D8               	btfsc	status,2,c
 24198  004E9E  1975               	xorwf	??_sprintf& (0+255),w,b
 24199  004EA0  E107               	bnz	l17897
 24200                           
 24201                           ; BSR set to: 0
 24202                           ;doprnt.c: 1369: if(width)
 24203  004EA2  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24204  004EA4  1182               	iorwf	sprintf@width& (0+255),w,b
 24205  004EA6  E018               	bz	l17903
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;doprnt.c: 1370: width--;
 24209  004EA8  0782               	decf	sprintf@width& (0+255),f,b
 24210  004EAA  A0D8               	btfss	status,0,c
 24211  004EAC  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24212  004EAE  D014               	goto	l17903
 24213  004EB0                     l17897:
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;doprnt.c: 1375: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24217  004EB0  0EC0               	movlw	192
 24218  004EB2  D941               	call	PL24	;call to abstracted procedure
 24219  004EB4  0E80               	movlw	128
 24220  004EB6  B4D8               	btfsc	status,2,c
 24221  004EB8  1975               	xorwf	??_sprintf& (0+255),w,b
 24222  004EBA  E10E               	bnz	l17903
 24223                           
 24224                           ; BSR set to: 0
 24225                           ;doprnt.c: 1379: if(width > 2)
 24226  004EBC  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24227  004EBE  0A80               	xorlw	128
 24228  004EC0  0F80               	addlw	-128
 24229  004EC2  0E03               	movlw	3
 24230  004EC4  B4D8               	btfsc	status,2,c
 24231  004EC6  5D82               	subwf	sprintf@width& (0+255),w,b
 24232  004EC8  E305               	bnc	l1848
 24233                           
 24234                           ; BSR set to: 0
 24235                           ;doprnt.c: 1380: width -= 2;
 24236  004ECA  0EFE               	movlw	254
 24237  004ECC  2782               	addwf	sprintf@width& (0+255),f,b
 24238  004ECE  0EFF               	movlw	255
 24239  004ED0  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 24240  004ED2  D002               	goto	l17903
 24241  004ED4                     l1848:
 24242                           
 24243                           ; BSR set to: 0
 24244                           ;doprnt.c: 1381: else
 24245                           ;doprnt.c: 1382: width = 0;
 24246  004ED4  6B82               	clrf	sprintf@width& (0+255),b
 24247  004ED6  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24248  004ED8                     l17903:
 24249                           
 24250                           ; BSR set to: 0
 24251                           ;doprnt.c: 1383: }
 24252                           ;doprnt.c: 1388: if(width > c)
 24253  004ED8  0E80               	movlw	128
 24254  004EDA  BF88               	btfsc	sprintf@c& (0+255),7,b
 24255  004EDC  0E7F               	movlw	127
 24256  004EDE  6F75               	movwf	??_sprintf& (0+255),b
 24257  004EE0  5182               	movf	sprintf@width& (0+255),w,b
 24258  004EE2  5D88               	subwf	sprintf@c& (0+255),w,b
 24259  004EE4  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24260  004EE6  0A80               	xorlw	128
 24261  004EE8  5975               	subwfb	??_sprintf& (0+255),w,b
 24262  004EEA  E207               	bc	l1850
 24263                           
 24264                           ; BSR set to: 0
 24265                           ;doprnt.c: 1389: width -= c;
 24266  004EEC  5188               	movf	sprintf@c& (0+255),w,b
 24267  004EEE  5F82               	subwf	sprintf@width& (0+255),f,b
 24268  004EF0  0E00               	movlw	0
 24269  004EF2  BF88               	btfsc	sprintf@c& (0+255),7,b
 24270  004EF4  0EFF               	movlw	255
 24271  004EF6  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 24272  004EF8  D002               	goto	l1851
 24273  004EFA                     l1850:
 24274                           
 24275                           ; BSR set to: 0
 24276                           ;doprnt.c: 1390: else
 24277                           ;doprnt.c: 1391: width = 0;
 24278  004EFA  6B82               	clrf	sprintf@width& (0+255),b
 24279  004EFC  6B83               	clrf	(sprintf@width+1)& (0+255),b
 24280  004EFE                     l1851:
 24281                           
 24282                           ; BSR set to: 0
 24283                           ;doprnt.c: 1394: if(flag & 0x04) {
 24284  004EFE  A589               	btfss	sprintf@flag& (0+255),2,b
 24285  004F00  D03C               	goto	l17941
 24286                           
 24287                           ; BSR set to: 0
 24288                           ;doprnt.c: 1399: if(flag & 0x03)
 24289  004F02  5189               	movf	sprintf@flag& (0+255),w,b
 24290  004F04  0B03               	andlw	3
 24291  004F06  E009               	bz	l1853
 24292                           
 24293                           ; BSR set to: 0
 24294                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 24295  004F08  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24296  004F0C  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24297  004F10  0E2D               	movlw	45
 24298  004F12  6EDF               	movwf	indf2,c
 24299  004F14                     l17911:
 24300                           
 24301                           ; BSR set to: 0
 24302  004F14  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24303  004F16  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24304  004F18  D022               	goto	l17933
 24305  004F1A                     l1853:
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;doprnt.c: 1403: else
 24309                           ;doprnt.c: 1406: if(flag & 0x01)
 24310  004F1A  A189               	btfss	sprintf@flag& (0+255),0,b
 24311  004F1C  D006               	goto	l17917
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;doprnt.c: 1407: ((*sp++ = (' ')));
 24315  004F1E  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24316  004F22  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24317  004F26  0E20               	movlw	32
 24318  004F28  D7F4               	goto	L53
 24319  004F2A                     l17917:
 24320                           
 24321                           ; BSR set to: 0
 24322                           ;doprnt.c: 1410: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24323  004F2A  0EC0               	movlw	192
 24324  004F2C  D904               	call	PL24	;call to abstracted procedure
 24325  004F2E  0E80               	movlw	128
 24326  004F30  B4D8               	btfsc	status,2,c
 24327  004F32  1975               	xorwf	??_sprintf& (0+255),w,b
 24328  004F34  E114               	bnz	l17933
 24329                           
 24330                           ; BSR set to: 0
 24331                           ;doprnt.c: 1411: ((*sp++ = ('0')));
 24332  004F36  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24333  004F3A  D94A               	call	PL114	;call to abstracted procedure
 24334                           
 24335                           ; BSR set to: 0
 24336  004F3C  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24337  004F3E  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24338                           
 24339                           ; BSR set to: 0
 24340                           ;doprnt.c: 1413: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 24341  004F40  BB89               	btfsc	sprintf@flag& (0+255),5,b
 24342  004F42  D003               	goto	l17927
 24343                           
 24344                           ; BSR set to: 0
 24345  004F44  6B7A               	clrf	(_sprintf$2256+1)& (0+255),b
 24346  004F46  0E78               	movlw	120
 24347  004F48  D002               	goto	L54
 24348  004F4A                     l17927:
 24349                           
 24350                           ; BSR set to: 0
 24351  004F4A  6B7A               	clrf	(_sprintf$2256+1)& (0+255),b
 24352  004F4C  0E58               	movlw	88
 24353  004F4E                     L54:
 24354  004F4E  6F79               	movwf	_sprintf$2256& (0+255),b
 24355                           
 24356                           ; BSR set to: 0
 24357  004F50  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24358  004F54  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24359  004F58  C079  FFDF         	movff	_sprintf$2256,indf2
 24360  004F5C  D7DB               	goto	l17911
 24361  004F5E                     l17933:
 24362                           
 24363                           ; BSR set to: 0
 24364                           ;doprnt.c: 1419: }
 24365                           ;doprnt.c: 1422: if(width)
 24366  004F5E  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24367  004F60  1182               	iorwf	sprintf@width& (0+255),w,b
 24368  004F62  E101 D0B9          	bz	l18005
 24369                           
 24370                           ; BSR set to: 0
 24371                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 24372  004F66  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24373  004F6A  D932               	call	PL114	;call to abstracted procedure
 24374                           
 24375                           ; BSR set to: 0
 24376  004F6C  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24377  004F6E  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24378                           
 24379                           ; BSR set to: 0
 24380                           ;doprnt.c: 1425: while(--width);
 24381  004F70  0782               	decf	sprintf@width& (0+255),f,b
 24382  004F72  A0D8               	btfss	status,0,c
 24383  004F74  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24384  004F76  0100               	movlb	0	; () banked
 24385  004F78  D7F2               	goto	l17933
 24386  004F7A                     l17941:
 24387                           
 24388                           ; BSR set to: 0
 24389                           ;doprnt.c: 1429: {
 24390                           ;doprnt.c: 1431: if(width
 24391                           ;doprnt.c: 1433: && !(flag & 0x08)
 24392                           ;doprnt.c: 1435: )
 24393  004F7A  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24394  004F7C  1182               	iorwf	sprintf@width& (0+255),w,b
 24395  004F7E  A4D8               	btfss	status,2,c
 24396                           
 24397                           ; BSR set to: 0
 24398  004F80  B789               	btfsc	sprintf@flag& (0+255),3,b
 24399  004F82  D004               	goto	l17951
 24400  004F84                     l17945:
 24401                           
 24402                           ; BSR set to: 0
 24403                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 24404  004F84  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24405                           
 24406                           ; BSR set to: 0
 24407                           
 24408                           ; BSR set to: 0
 24409                           ;doprnt.c: 1438: while(--width);
 24410  004F88  D8F1               	call	PL54	;call to abstracted procedure
 24411  004F8A  E1FC               	bnz	l17945
 24412  004F8C                     l17951:
 24413                           
 24414                           ; BSR set to: 0
 24415                           ;doprnt.c: 1445: if(flag & 0x03)
 24416  004F8C  5189               	movf	sprintf@flag& (0+255),w,b
 24417  004F8E  0B03               	andlw	3
 24418  004F90  E009               	bz	l1869
 24419                           
 24420                           ; BSR set to: 0
 24421                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 24422  004F92  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24423  004F96  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24424  004F9A  0E2D               	movlw	45
 24425  004F9C  6EDF               	movwf	indf2,c
 24426                           
 24427                           ; BSR set to: 0
 24428  004F9E  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24429  004FA0  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24430  004FA2  D008               	goto	l17961
 24431  004FA4                     l1869:
 24432                           
 24433                           ; BSR set to: 0
 24434                           ;doprnt.c: 1450: else if(flag & 0x01)
 24435  004FA4  A189               	btfss	sprintf@flag& (0+255),0,b
 24436  004FA6  D006               	goto	l17961
 24437                           
 24438                           ; BSR set to: 0
 24439                           ;doprnt.c: 1451: ((*sp++ = (' ')));
 24440  004FA8  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24441  004FAC  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24442  004FB0  0E20               	movlw	32
 24443  004FB2  D7F4               	goto	L55
 24444  004FB4                     l17961:
 24445                           
 24446                           ; BSR set to: 0
 24447                           ;doprnt.c: 1455: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 24448  004FB4  0EC0               	movlw	192
 24449  004FB6  D8BF               	call	PL24	;call to abstracted procedure
 24450  004FB8  0E40               	movlw	64
 24451  004FBA  B4D8               	btfsc	status,2,c
 24452  004FBC  1975               	xorwf	??_sprintf& (0+255),w,b
 24453  004FBE  E106               	bnz	l17967
 24454                           
 24455                           ; BSR set to: 0
 24456                           ;doprnt.c: 1456: ((*sp++ = ('0')));
 24457  004FC0  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24458  004FC4  D905               	call	PL114	;call to abstracted procedure
 24459  004FC6                     l17965:
 24460                           
 24461                           ; BSR set to: 0
 24462  004FC6  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24463  004FC8  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24464  004FCA  D086               	goto	l18005
 24465  004FCC                     l17967:
 24466                           
 24467                           ; BSR set to: 0
 24468                           ;doprnt.c: 1457: else
 24469                           ;doprnt.c: 1461: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 24470  004FCC  0EC0               	movlw	192
 24471  004FCE  D8B3               	call	PL24	;call to abstracted procedure
 24472  004FD0  0E80               	movlw	128
 24473  004FD2  B4D8               	btfsc	status,2,c
 24474  004FD4  1975               	xorwf	??_sprintf& (0+255),w,b
 24475  004FD6  E001 D07F          	bnz	l18005
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;doprnt.c: 1465: ((*sp++ = ('0')));
 24479  004FDA  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24480  004FDE  D8F8               	call	PL114	;call to abstracted procedure
 24481                           
 24482                           ; BSR set to: 0
 24483  004FE0  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24484  004FE2  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24485                           
 24486                           ; BSR set to: 0
 24487                           ;doprnt.c: 1467: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 24488  004FE4  BB89               	btfsc	sprintf@flag& (0+255),5,b
 24489  004FE6  D003               	goto	l17977
 24490                           
 24491                           ; BSR set to: 0
 24492  004FE8  6B7C               	clrf	(_sprintf$2257+1)& (0+255),b
 24493  004FEA  0E78               	movlw	120
 24494  004FEC  D002               	goto	L56
 24495  004FEE                     l17977:
 24496                           
 24497                           ; BSR set to: 0
 24498  004FEE  6B7C               	clrf	(_sprintf$2257+1)& (0+255),b
 24499  004FF0  0E58               	movlw	88
 24500  004FF2                     L56:
 24501  004FF2  6F7B               	movwf	_sprintf$2257& (0+255),b
 24502                           
 24503                           ; BSR set to: 0
 24504  004FF4  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24505  004FF8  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24506  004FFC  C07B  FFDF         	movff	_sprintf$2257,indf2
 24507  005000  D7E2               	goto	l17965
 24508  005002                     l17983:
 24509                           
 24510                           ; BSR set to: 0
 24511                           ;doprnt.c: 1493: case 0xC0:
 24512                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 24513  005002  C080  F075         	movff	sprintf@prec,??_sprintf
 24514  005006  C081  F076         	movff	sprintf@prec+1,??_sprintf+1
 24515  00500A  90D8               	bcf	status,0,c
 24516  00500C  3775               	rlcf	??_sprintf& (0+255),f,b
 24517  00500E  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 24518  005010  90D8               	bcf	status,0,c
 24519  005012  3775               	rlcf	??_sprintf& (0+255),f,b
 24520  005014  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 24521  005016  0E3A               	movlw	low _dpowers
 24522  005018  2575               	addwf	??_sprintf& (0+255),w,b
 24523  00501A  6EF6               	movwf	tblptrl,c
 24524  00501C  0E6B               	movlw	high _dpowers
 24525  00501E  D87C               	call	PL14	;call to abstracted procedure
 24526  005020  C084  F01F         	movff	sprintf@_val,?___lldiv
 24527  005024  C085  F020         	movff	sprintf@_val+1,?___lldiv+1
 24528  005028  C086  F021         	movff	sprintf@_val+2,?___lldiv+2
 24529  00502C  C087  F022         	movff	sprintf@_val+3,?___lldiv+3
 24530  005030  EC52  F009         	call	___lldiv	;wreg free
 24531  005034  C022  F068         	movff	?___lldiv+3,?___llmod+3
 24532  005038  C021  F067         	movff	?___lldiv+2,?___llmod+2
 24533  00503C  C020  F066         	movff	?___lldiv+1,?___llmod+1
 24534  005040  C01F  F065         	movff	?___lldiv,?___llmod
 24535  005044  0E0A               	movlw	10
 24536  005046  6F69               	movwf	(?___llmod+4)& (0+255),b
 24537  005048  0E00               	movlw	0
 24538  00504A  6B6A               	clrf	(?___llmod+5)& (0+255),b
 24539  00504C  6B6B               	clrf	(?___llmod+6)& (0+255),b
 24540  00504E  6B6C               	clrf	(?___llmod+7)& (0+255),b
 24541  005050  EC13  F008         	call	___llmod	;wreg free
 24542  005054  5165               	movf	?___llmod& (0+255),w,b
 24543  005056  D02D               	goto	L57
 24544  005058                     l17985:
 24545                           
 24546                           ; BSR set to: 0
 24547                           ;doprnt.c: 1506: {
 24548                           ;doprnt.c: 1507: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 24549  005058  D876               	call	PL30	;call to abstracted procedure
 24550  00505A  0E62               	movlw	low _hexpowers
 24551  00505C  2575               	addwf	??_sprintf& (0+255),w,b
 24552  00505E  6EF6               	movwf	tblptrl,c
 24553  005060  0E6B               	movlw	high _hexpowers
 24554  005062  D85A               	call	PL14	;call to abstracted procedure
 24555  005064  EC52  F009         	call	___lldiv	;wreg free
 24556  005068  501F               	movf	?___lldiv,w,c
 24557  00506A  0B0F               	andlw	15
 24558  00506C  6F78               	movwf	sprintf@idx& (0+255),b
 24559                           
 24560                           ; BSR set to: 0
 24561                           ;doprnt.c: 1509: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 24562  00506E  BB89               	btfsc	sprintf@flag& (0+255),5,b
 24563  005070  D004               	goto	l17991
 24564                           
 24565                           ; BSR set to: 0
 24566  005072  0E7A               	movlw	high STR_309
 24567  005074  6F7E               	movwf	(_sprintf$2263+1)& (0+255),b
 24568  005076  0EB8               	movlw	low STR_309
 24569  005078  D003               	goto	L58
 24570  00507A                     l17991:
 24571                           
 24572                           ; BSR set to: 0
 24573  00507A  0E7A               	movlw	high STR_308
 24574  00507C  6F7E               	movwf	(_sprintf$2263+1)& (0+255),b
 24575  00507E  0EA7               	movlw	low STR_308
 24576  005080                     L58:
 24577  005080  6F7D               	movwf	_sprintf$2263& (0+255),b
 24578                           
 24579                           ; BSR set to: 0
 24580  005082  5178               	movf	sprintf@idx& (0+255),w,b
 24581  005084  257D               	addwf	_sprintf$2263& (0+255),w,b
 24582  005086  6F75               	movwf	??_sprintf& (0+255),b
 24583  005088  0E00               	movlw	0
 24584  00508A  217E               	addwfc	(_sprintf$2263+1)& (0+255),w,b
 24585  00508C  6F76               	movwf	(??_sprintf+1)& (0+255),b
 24586  00508E  C075  FFF6         	movff	??_sprintf,tblptrl
 24587  005092  C076  FFF7         	movff	??_sprintf+1,tblptrh
 24588  005096  0008               	tblrd		*
 24589  005098  CFF5 F088          	movff	tablat,sprintf@c
 24590                           
 24591                           ;doprnt.c: 1515: }
 24592                           ;doprnt.c: 1517: break;
 24593  00509C  D016               	goto	l18001
 24594  00509E                     l17995:
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;doprnt.c: 1525: c = ((_val._val / octpowers[prec]) & 07) + '0';
 24598  00509E  D853               	call	PL30	;call to abstracted procedure
 24599  0050A0  0E0A               	movlw	low _octpowers
 24600  0050A2  2575               	addwf	??_sprintf& (0+255),w,b
 24601  0050A4  6EF6               	movwf	tblptrl,c
 24602  0050A6  0E6B               	movlw	high _octpowers
 24603  0050A8  D837               	call	PL14	;call to abstracted procedure
 24604  0050AA  EC52  F009         	call	___lldiv	;wreg free
 24605  0050AE  501F               	movf	?___lldiv,w,c
 24606  0050B0  0B07               	andlw	7
 24607  0050B2                     L57:
 24608  0050B2  0F30               	addlw	48
 24609  0050B4  6F88               	movwf	sprintf@c& (0+255),b
 24610                           
 24611                           ;doprnt.c: 1527: break;
 24612  0050B6  D009               	goto	l18001
 24613  0050B8                     l17999:
 24614                           
 24615                           ; BSR set to: 0
 24616  0050B8  5189               	movf	sprintf@flag& (0+255),w,b
 24617  0050BA  0BC0               	andlw	192
 24618                           
 24619                           ; Switch size 1, requested type "space"
 24620                           ; Number of cases is 4, Range of values is 0 to 192
 24621                           ; switch strategies available:
 24622                           ; Name         Instructions Cycles
 24623                           ; simple_byte           13     7 (average)
 24624                           ;	Chosen strategy is simple_byte
 24625  0050BC  E0A2               	bz	l17983
 24626  0050BE  0A40               	xorlw	64	; case 64
 24627  0050C0  E0EE               	bz	l17995
 24628  0050C2  0AC0               	xorlw	192	; case 128
 24629  0050C4  E0C9               	bz	l17985
 24630  0050C6  0A40               	xorlw	64	; case 192
 24631  0050C8  E09C               	bz	l17983
 24632  0050CA                     l18001:
 24633                           
 24634                           ; BSR set to: 0
 24635                           ;doprnt.c: 1531: ((*sp++ = (c)));
 24636  0050CA  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24637  0050CE  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24638  0050D2  C088  FFDF         	movff	sprintf@c,indf2
 24639  0050D6  D777               	goto	l17965
 24640  0050D8                     l18005:
 24641                           
 24642                           ; BSR set to: 0
 24643  0050D8  0780               	decf	sprintf@prec& (0+255),f,b
 24644  0050DA  A0D8               	btfss	status,0,c
 24645  0050DC  0781               	decf	(sprintf@prec+1)& (0+255),f,b
 24646  0050DE  0100               	movlb	0	; () banked
 24647  0050E0  2980               	incf	sprintf@prec& (0+255),w,b
 24648  0050E2  B4D8               	btfsc	status,2,c
 24649  0050E4  2981               	incf	(sprintf@prec+1)& (0+255),w,b
 24650  0050E6  E1E8               	bnz	l17999
 24651                           
 24652                           ; BSR set to: 0
 24653                           ;doprnt.c: 1532: }
 24654                           ;doprnt.c: 1535: if((flag & 0x08) && width > 0)
 24655  0050E8  A789               	btfss	sprintf@flag& (0+255),3,b
 24656  0050EA  D00B               	goto	l18015
 24657                           
 24658                           ; BSR set to: 0
 24659  0050EC  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24660  0050EE  0A80               	xorlw	128
 24661  0050F0  0F80               	addlw	-128
 24662  0050F2  0E01               	movlw	1
 24663  0050F4  B4D8               	btfsc	status,2,c
 24664  0050F6  5D82               	subwf	sprintf@width& (0+255),w,b
 24665  0050F8  E304               	bnc	l18015
 24666  0050FA                     l18009:
 24667                           
 24668                           ; BSR set to: 0
 24669                           ;doprnt.c: 1537: ((*sp++ = (' ')));
 24670  0050FA  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24671                           
 24672                           ; BSR set to: 0
 24673                           
 24674                           ; BSR set to: 0
 24675                           ;doprnt.c: 1538: while(--width);
 24676  0050FE  D836               	call	PL54	;call to abstracted procedure
 24677  005100  E1FC               	bnz	l18009
 24678  005102                     l18015:
 24679                           
 24680                           ; BSR set to: 0
 24681  005102  D853               	call	PL86	;call to abstracted procedure
 24682  005104  0100               	movlb	0	; () banked
 24683  005106  6788               	tstfsz	sprintf@c& (0+255),b
 24684  005108  D4CC               	goto	l17681
 24685  00510A                     l18017:
 24686                           
 24687                           ; BSR set to: 0
 24688                           ;doprnt.c: 1545: *sp = 0;
 24689  00510A  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24690  00510E  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24691  005112  0E00               	movlw	0
 24692  005114  6EDF               	movwf	indf2,c
 24693                           
 24694                           ; BSR set to: 0
 24695  005116  0C00               	retlw	0
 24696  005118                     __end_of_sprintf:
 24697                           	opt stack 0
 24698  005118                     PL14:
 24699                           	opt stack 24
 24700  005118  2176               	addwfc	(??_sprintf+1)& (0+255),w,b
 24701  00511A  6EF7               	movwf	tblptrh,c
 24702  00511C  0009               	tblrd		*+
 24703  00511E  CFF5 F023          	movff	tablat,?___lldiv+4
 24704  005122  0009               	tblrd		*+
 24705  005124  CFF5 F024          	movff	tablat,?___lldiv+5
 24706  005128  0009               	tblrd		*+
 24707  00512A  CFF5 F025          	movff	tablat,?___lldiv+6
 24708  00512E  000A               	tblrd		*-
 24709  005130  CFF5 F026          	movff	tablat,?___lldiv+7
 24710  005134  0012               	return	
 24711  005136                     __end_ofPL14:
 24712                           	opt stack 0
 24713  005136                     PL24:
 24714                           	opt stack 24
 24715  005136  1589               	andwf	sprintf@flag& (0+255),w,b
 24716  005138  6F75               	movwf	??_sprintf& (0+255),b
 24717  00513A  0E08               	movlw	8
 24718  00513C  158A               	andwf	(sprintf@flag+1)& (0+255),w,b
 24719  00513E  6F76               	movwf	(??_sprintf+1)& (0+255),b
 24720  005140  5176               	movf	(??_sprintf+1)& (0+255),w,b
 24721  005142  0A08               	xorlw	8
 24722  005144  0012               	return	
 24723  005146                     __end_ofPL24:
 24724                           	opt stack 0
 24725  005146                     PL30:
 24726                           	opt stack 24
 24727  005146  C084  F01F         	movff	sprintf@_val,?___lldiv
 24728  00514A  C085  F020         	movff	sprintf@_val+1,?___lldiv+1
 24729  00514E  C086  F021         	movff	sprintf@_val+2,?___lldiv+2
 24730  005152  C087  F022         	movff	sprintf@_val+3,?___lldiv+3
 24731  005156  C080  F075         	movff	sprintf@prec,??_sprintf
 24732  00515A  C081  F076         	movff	sprintf@prec+1,??_sprintf+1
 24733  00515E  90D8               	bcf	status,0,c
 24734  005160  3775               	rlcf	??_sprintf& (0+255),f,b
 24735  005162  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 24736  005164  90D8               	bcf	status,0,c
 24737  005166  3775               	rlcf	??_sprintf& (0+255),f,b
 24738  005168  3776               	rlcf	(??_sprintf+1)& (0+255),f,b
 24739  00516A  0012               	return	
 24740  00516C                     __end_ofPL30:
 24741                           	opt stack 0
 24742  00516C                     PL54:
 24743                           	opt stack 24
 24744  00516C  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24745  005170  0E20               	movlw	32
 24746  005172  6EDF               	movwf	indf2,c
 24747  005174  4B6D               	infsnz	sprintf@sp& (0+255),f,b
 24748  005176  2B6E               	incf	(sprintf@sp+1)& (0+255),f,b
 24749  005178  0782               	decf	sprintf@width& (0+255),f,b
 24750  00517A  A0D8               	btfss	status,0,c
 24751  00517C  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24752  00517E  0100               	movlb	0	; () banked
 24753  005180  5183               	movf	(sprintf@width+1)& (0+255),w,b
 24754  005182  1182               	iorwf	sprintf@width& (0+255),w,b
 24755  005184  0012               	return	
 24756  005186                     __end_ofPL54:
 24757                           	opt stack 0
 24758  005186                     PL62:
 24759                           	opt stack 24
 24760  005186  6ED9               	movwf	fsr2l,c
 24761  005188  6ADA               	clrf	fsr2h,c
 24762  00518A  CFDE F084          	movff	postinc2,sprintf@_val
 24763  00518E  CFDE F085          	movff	postinc2,sprintf@_val+1
 24764  005192  CFDE F086          	movff	postinc2,sprintf@_val+2
 24765  005196  CFDE F087          	movff	postinc2,sprintf@_val+3
 24766  00519A  0C04               	retlw	4
 24767  00519C                     __end_ofPL62:
 24768                           	opt stack 0
 24769  00519C                     PL78:
 24770                           	opt stack 24
 24771  00519C  C06D  FFD9         	movff	sprintf@sp,fsr2l
 24772  0051A0  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24773  0051A4  0E20               	movlw	32
 24774  0051A6  6EDF               	movwf	indf2,c
 24775  0051A8  0C20               	retlw	32
 24776  0051AA                     __end_ofPL78:
 24777                           	opt stack 0
 24778  0051AA                     PL86:
 24779                           	opt stack 24
 24780  0051AA  C06F  FFF6         	movff	sprintf@f,tblptrl
 24781  0051AE  C070  FFF7         	movff	sprintf@f+1,tblptrh
 24782  0051B2  4B6F               	infsnz	sprintf@f& (0+255),f,b
 24783  0051B4  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 24784  0051B6  0008               	tblrd		*
 24785  0051B8  CFF5 F088          	movff	tablat,sprintf@c
 24786  0051BC  0012               	return	
 24787  0051BE                     __end_ofPL86:
 24788                           	opt stack 0
 24789  0051BE                     PL106:
 24790                           	opt stack 24
 24791  0051BE  4B6F               	infsnz	sprintf@f& (0+255),f,b
 24792  0051C0  2B70               	incf	(sprintf@f+1)& (0+255),f,b
 24793  0051C2  C06F  FFF6         	movff	sprintf@f,tblptrl
 24794  0051C6  C070  FFF7         	movff	sprintf@f+1,tblptrh
 24795  0051CA  0008               	tblrd		*
 24796  0051CC  50F5               	movf	tablat,w,c
 24797  0051CE  0012               	return	
 24798  0051D0                     __end_ofPL106:
 24799                           	opt stack 0
 24800  0051D0                     PL114:
 24801                           	opt stack 24
 24802  0051D0  C06E  FFDA         	movff	sprintf@sp+1,fsr2h
 24803  0051D4  0E30               	movlw	48
 24804  0051D6  6EDF               	movwf	indf2,c
 24805  0051D8  0C30               	retlw	48
 24806  0051DA                     __end_ofPL114:
 24807                           	opt stack 0
 24808  0051DA                     PL144:
 24809                           	opt stack 24
 24810  0051DA  A0D8               	btfss	status,0,c
 24811  0051DC  0783               	decf	(sprintf@width+1)& (0+255),f,b
 24812  0051DE  0100               	movlb	0	; () banked
 24813  0051E0  2982               	incf	sprintf@width& (0+255),w,b
 24814  0051E2  0012               	return	
 24815  0051E4                     __end_ofPL144:
 24816                           	opt stack 0
 24817                           tblptru	equ	0xFF8
 24818                           tblptrh	equ	0xFF7
 24819                           tblptrl	equ	0xFF6
 24820                           tablat	equ	0xFF5
 24821                           prodh	equ	0xFF4
 24822                           prodl	equ	0xFF3
 24823                           intcon	equ	0xFF2
 24824                           indf0	equ	0xFEF
 24825                           postinc0	equ	0xFEE
 24826                           fsr0h	equ	0xFEA
 24827                           fsr0l	equ	0xFE9
 24828                           wreg	equ	0xFE8
 24829                           indf1	equ	0xFE7
 24830                           postinc1	equ	0xFE6
 24831                           postdec1	equ	0xFE5
 24832                           fsr1h	equ	0xFE2
 24833                           fsr1l	equ	0xFE1
 24834                           indf2	equ	0xFDF
 24835                           postinc2	equ	0xFDE
 24836                           postdec2	equ	0xFDD
 24837                           plusw2	equ	0xFDB
 24838                           fsr2h	equ	0xFDA
 24839                           fsr2l	equ	0xFD9
 24840                           status	equ	0xFD8
 24841                           
 24842 ;; *************** function ___wmul *****************
 24843 ;; Defined at:
 24844 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
 24845 ;; Parameters:    Size  Location     Type
 24846 ;;  multiplier      2   34[COMRAM] unsigned int 
 24847 ;;  multiplicand    2   36[COMRAM] unsigned int 
 24848 ;; Auto vars:     Size  Location     Type
 24849 ;;  product         2    0[BANK0 ] unsigned int 
 24850 ;; Return value:  Size  Location     Type
 24851 ;;                  2   34[COMRAM] unsigned int 
 24852 ;; Registers used:
 24853 ;;		wreg, status,2, status,0, prodl, prodh
 24854 ;; Tracked objects:
 24855 ;;		On entry : 0/0
 24856 ;;		On exit  : F/0
 24857 ;;		Unchanged: 0/0
 24858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24859 ;;      Params:         4       0       0       0       0       0       0
 24860 ;;      Locals:         0       2       0       0       0       0       0
 24861 ;;      Temps:          0       0       0       0       0       0       0
 24862 ;;      Totals:         4       2       0       0       0       0       0
 24863 ;;Total ram usage:        6 bytes
 24864 ;; Hardware stack levels used:    1
 24865 ;; Hardware stack levels required when called:    3
 24866 ;; This function calls:
 24867 ;;		Nothing
 24868 ;; This function is called by:
 24869 ;;		_receivePrintEventVerbose
 24870 ;;		_receiveSendEventCANAL
 24871 ;;		_receiveSendMultiEventCANAL
 24872 ;;		_sprintf
 24873 ;;		_atoi
 24874 ;; This function uses a non-reentrant model
 24875 ;;
 24876                           
 24877                           	psect	text57
 24878  000B36                     __ptext57:
 24879                           	opt stack 0
 24880  000B36                     ___wmul:
 24881                           	opt stack 24
 24882                           
 24883                           ; BSR set to: 0
 24884                           ;incstack = 0
 24885                           ;incstack = 0
 24886  000B36  5023               	movf	___wmul@multiplier,w,c
 24887  000B38  0225               	mulwf	___wmul@multiplicand,c
 24888  000B3A  CFF3 F060          	movff	prodl,___wmul@product
 24889  000B3E  CFF4 F061          	movff	prodh,___wmul@product+1
 24890  000B42  5023               	movf	___wmul@multiplier,w,c
 24891  000B44  0226               	mulwf	___wmul@multiplicand+1,c
 24892  000B46  CFF3 FFF4          	movff	prodl,prodh
 24893  000B4A  6AF3               	clrf	prodl,c
 24894  000B4C  50F3               	movf	prodl,w,c
 24895  000B4E  0100               	movlb	0	; () banked
 24896  000B50  2760               	addwf	___wmul@product& (0+255),f,b
 24897  000B52  50F4               	movf	prodh,w,c
 24898  000B54  2361               	addwfc	(___wmul@product+1)& (0+255),f,b
 24899  000B56  5024               	movf	___wmul@multiplier+1,w,c
 24900  000B58  0225               	mulwf	___wmul@multiplicand,c
 24901  000B5A  CFF3 FFF4          	movff	prodl,prodh
 24902  000B5E  6AF3               	clrf	prodl,c
 24903  000B60  50F3               	movf	prodl,w,c
 24904  000B62  2760               	addwf	___wmul@product& (0+255),f,b
 24905  000B64  50F4               	movf	prodh,w,c
 24906  000B66  2361               	addwfc	(___wmul@product+1)& (0+255),f,b
 24907                           
 24908                           ; BSR set to: 0
 24909  000B68  C060  F023         	movff	___wmul@product,?___wmul
 24910  000B6C  C061  F024         	movff	___wmul@product+1,?___wmul+1
 24911                           
 24912                           ; BSR set to: 0
 24913  000B70  0012               	return	
 24914  000B72                     __end_of___wmul:
 24915                           	opt stack 0
 24916                           tblptru	equ	0xFF8
 24917                           tblptrh	equ	0xFF7
 24918                           tblptrl	equ	0xFF6
 24919                           tablat	equ	0xFF5
 24920                           prodh	equ	0xFF4
 24921                           prodl	equ	0xFF3
 24922                           intcon	equ	0xFF2
 24923                           indf0	equ	0xFEF
 24924                           postinc0	equ	0xFEE
 24925                           fsr0h	equ	0xFEA
 24926                           fsr0l	equ	0xFE9
 24927                           wreg	equ	0xFE8
 24928                           indf1	equ	0xFE7
 24929                           postinc1	equ	0xFE6
 24930                           postdec1	equ	0xFE5
 24931                           fsr1h	equ	0xFE2
 24932                           fsr1l	equ	0xFE1
 24933                           indf2	equ	0xFDF
 24934                           postinc2	equ	0xFDE
 24935                           postdec2	equ	0xFDD
 24936                           plusw2	equ	0xFDB
 24937                           fsr2h	equ	0xFDA
 24938                           fsr2l	equ	0xFD9
 24939                           status	equ	0xFD8
 24940                           
 24941 ;; *************** function ___llmod *****************
 24942 ;; Defined at:
 24943 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\llmod.c"
 24944 ;; Parameters:    Size  Location     Type
 24945 ;;  dividend        4    5[BANK0 ] unsigned long 
 24946 ;;  divisor         4    9[BANK0 ] unsigned long 
 24947 ;; Auto vars:     Size  Location     Type
 24948 ;;  counter         1   38[COMRAM] unsigned char 
 24949 ;; Return value:  Size  Location     Type
 24950 ;;                  4    5[BANK0 ] unsigned long 
 24951 ;; Registers used:
 24952 ;;		wreg, status,2, status,0
 24953 ;; Tracked objects:
 24954 ;;		On entry : F/0
 24955 ;;		On exit  : F/0
 24956 ;;		Unchanged: 0/0
 24957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24958 ;;      Params:         0       8       0       0       0       0       0
 24959 ;;      Locals:         1       0       0       0       0       0       0
 24960 ;;      Temps:          0       0       0       0       0       0       0
 24961 ;;      Totals:         1       8       0       0       0       0       0
 24962 ;;Total ram usage:        9 bytes
 24963 ;; Hardware stack levels used:    1
 24964 ;; Hardware stack levels required when called:    3
 24965 ;; This function calls:
 24966 ;;		Nothing
 24967 ;; This function is called by:
 24968 ;;		_sprintf
 24969 ;;		_ultoa
 24970 ;; This function uses a non-reentrant model
 24971 ;;
 24972                           
 24973                           	psect	text58
 24974  001026                     __ptext58:
 24975                           	opt stack 0
 24976  001026                     ___llmod:
 24977                           	opt stack 23
 24978                           
 24979                           ; BSR set to: 0
 24980                           
 24981                           ; BSR set to: 0
 24982                           ;incstack = 0
 24983                           ;incstack = 0
 24984  001026  516C               	movf	(___llmod@divisor+3)& (0+255),w,b
 24985  001028  1169               	iorwf	___llmod@divisor& (0+255),w,b
 24986  00102A  116A               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 24987  00102C  116B               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 24988  00102E  E023               	bz	l2550
 24989                           
 24990                           ; BSR set to: 0
 24991  001030  0E01               	movlw	1
 24992  001032  6E27               	movwf	___llmod@counter,c
 24993  001034  D006               	goto	l18991
 24994  001036                     l18989:
 24995                           
 24996                           ; BSR set to: 0
 24997  001036  90D8               	bcf	status,0,c
 24998  001038  3769               	rlcf	___llmod@divisor& (0+255),f,b
 24999  00103A  376A               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 25000  00103C  376B               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 25001  00103E  376C               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 25002  001040  2A27               	incf	___llmod@counter,f,c
 25003  001042                     l18991:
 25004                           
 25005                           ; BSR set to: 0
 25006  001042  AF6C               	btfss	(___llmod@divisor+3)& (0+255),7,b
 25007  001044  D7F8               	goto	l18989
 25008  001046                     l18993:
 25009                           
 25010                           ; BSR set to: 0
 25011  001046  5169               	movf	___llmod@divisor& (0+255),w,b
 25012  001048  5D65               	subwf	___llmod@dividend& (0+255),w,b
 25013  00104A  516A               	movf	(___llmod@divisor+1)& (0+255),w,b
 25014  00104C  5966               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25015  00104E  516B               	movf	(___llmod@divisor+2)& (0+255),w,b
 25016  001050  5967               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25017  001052  516C               	movf	(___llmod@divisor+3)& (0+255),w,b
 25018  001054  5968               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25019  001056  E308               	bnc	l18997
 25020                           
 25021                           ; BSR set to: 0
 25022  001058  5169               	movf	___llmod@divisor& (0+255),w,b
 25023  00105A  5F65               	subwf	___llmod@dividend& (0+255),f,b
 25024  00105C  516A               	movf	(___llmod@divisor+1)& (0+255),w,b
 25025  00105E  5B66               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25026  001060  516B               	movf	(___llmod@divisor+2)& (0+255),w,b
 25027  001062  5B67               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25028  001064  516C               	movf	(___llmod@divisor+3)& (0+255),w,b
 25029  001066  5B68               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25030  001068                     l18997:
 25031                           
 25032                           ; BSR set to: 0
 25033  001068  90D8               	bcf	status,0,c
 25034  00106A  336C               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25035  00106C  336B               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25036  00106E  336A               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25037  001070  3369               	rrcf	___llmod@divisor& (0+255),f,b
 25038                           
 25039                           ; BSR set to: 0
 25040  001072  2E27               	decfsz	___llmod@counter,f,c
 25041  001074  D7E8               	goto	l18993
 25042  001076                     l2550:
 25043                           
 25044                           ; BSR set to: 0
 25045  001076  C065  F065         	movff	___llmod@dividend,?___llmod
 25046  00107A  C066  F066         	movff	___llmod@dividend+1,?___llmod+1
 25047  00107E  C067  F067         	movff	___llmod@dividend+2,?___llmod+2
 25048  001082  C068  F068         	movff	___llmod@dividend+3,?___llmod+3
 25049                           
 25050                           ; BSR set to: 0
 25051  001086  0012               	return	
 25052  001088                     __end_of___llmod:
 25053                           	opt stack 0
 25054                           tblptru	equ	0xFF8
 25055                           tblptrh	equ	0xFF7
 25056                           tblptrl	equ	0xFF6
 25057                           tablat	equ	0xFF5
 25058                           prodh	equ	0xFF4
 25059                           prodl	equ	0xFF3
 25060                           intcon	equ	0xFF2
 25061                           indf0	equ	0xFEF
 25062                           postinc0	equ	0xFEE
 25063                           fsr0h	equ	0xFEA
 25064                           fsr0l	equ	0xFE9
 25065                           wreg	equ	0xFE8
 25066                           indf1	equ	0xFE7
 25067                           postinc1	equ	0xFE6
 25068                           postdec1	equ	0xFE5
 25069                           fsr1h	equ	0xFE2
 25070                           fsr1l	equ	0xFE1
 25071                           indf2	equ	0xFDF
 25072                           postinc2	equ	0xFDE
 25073                           postdec2	equ	0xFDD
 25074                           plusw2	equ	0xFDB
 25075                           fsr2h	equ	0xFDA
 25076                           fsr2l	equ	0xFD9
 25077                           status	equ	0xFD8
 25078                           
 25079 ;; *************** function ___lldiv *****************
 25080 ;; Defined at:
 25081 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lldiv.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;  dividend        4   30[COMRAM] unsigned long 
 25084 ;;  divisor         4   34[COMRAM] unsigned long 
 25085 ;; Auto vars:     Size  Location     Type
 25086 ;;  quotient        4    1[BANK0 ] unsigned long 
 25087 ;;  counter         1    0[BANK0 ] unsigned char 
 25088 ;; Return value:  Size  Location     Type
 25089 ;;                  4   30[COMRAM] unsigned long 
 25090 ;; Registers used:
 25091 ;;		wreg, status,2, status,0
 25092 ;; Tracked objects:
 25093 ;;		On entry : F/0
 25094 ;;		On exit  : F/0
 25095 ;;		Unchanged: 0/0
 25096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25097 ;;      Params:         8       0       0       0       0       0       0
 25098 ;;      Locals:         0       5       0       0       0       0       0
 25099 ;;      Temps:          0       0       0       0       0       0       0
 25100 ;;      Totals:         8       5       0       0       0       0       0
 25101 ;;Total ram usage:       13 bytes
 25102 ;; Hardware stack levels used:    1
 25103 ;; Hardware stack levels required when called:    3
 25104 ;; This function calls:
 25105 ;;		Nothing
 25106 ;; This function is called by:
 25107 ;;		_sprintf
 25108 ;;		_ultoa
 25109 ;; This function uses a non-reentrant model
 25110 ;;
 25111                           
 25112                           	psect	text59
 25113  0012A4                     __ptext59:
 25114                           	opt stack 0
 25115  0012A4                     ___lldiv:
 25116                           	opt stack 23
 25117                           
 25118                           ; BSR set to: 0
 25119                           
 25120                           ; BSR set to: 0
 25121                           ;incstack = 0
 25122                           ;incstack = 0
 25123  0012A4  6B61               	clrf	___lldiv@quotient& (0+255),b
 25124  0012A6  6B62               	clrf	(___lldiv@quotient+1)& (0+255),b
 25125  0012A8  6B63               	clrf	(___lldiv@quotient+2)& (0+255),b
 25126  0012AA  6B64               	clrf	(___lldiv@quotient+3)& (0+255),b
 25127                           
 25128                           ; BSR set to: 0
 25129  0012AC  5026               	movf	___lldiv@divisor+3,w,c
 25130  0012AE  1023               	iorwf	___lldiv@divisor,w,c
 25131  0012B0  1024               	iorwf	___lldiv@divisor+1,w,c
 25132  0012B2  1025               	iorwf	___lldiv@divisor+2,w,c
 25133  0012B4  E029               	bz	l2540
 25134                           
 25135                           ; BSR set to: 0
 25136  0012B6  0E01               	movlw	1
 25137  0012B8  6F60               	movwf	___lldiv@counter& (0+255),b
 25138  0012BA  D006               	goto	l18971
 25139  0012BC                     l18969:
 25140                           
 25141                           ; BSR set to: 0
 25142  0012BC  90D8               	bcf	status,0,c
 25143  0012BE  3623               	rlcf	___lldiv@divisor,f,c
 25144  0012C0  3624               	rlcf	___lldiv@divisor+1,f,c
 25145  0012C2  3625               	rlcf	___lldiv@divisor+2,f,c
 25146  0012C4  3626               	rlcf	___lldiv@divisor+3,f,c
 25147  0012C6  2B60               	incf	___lldiv@counter& (0+255),f,b
 25148  0012C8                     l18971:
 25149                           
 25150                           ; BSR set to: 0
 25151  0012C8  AE26               	btfss	___lldiv@divisor+3,7,c
 25152  0012CA  D7F8               	goto	l18969
 25153  0012CC                     l18973:
 25154                           
 25155                           ; BSR set to: 0
 25156  0012CC  90D8               	bcf	status,0,c
 25157  0012CE  3761               	rlcf	___lldiv@quotient& (0+255),f,b
 25158  0012D0  3762               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25159  0012D2  3763               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25160  0012D4  3764               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25161                           
 25162                           ; BSR set to: 0
 25163  0012D6  5023               	movf	___lldiv@divisor,w,c
 25164  0012D8  5C1F               	subwf	___lldiv@dividend,w,c
 25165  0012DA  5024               	movf	___lldiv@divisor+1,w,c
 25166  0012DC  5820               	subwfb	___lldiv@dividend+1,w,c
 25167  0012DE  5025               	movf	___lldiv@divisor+2,w,c
 25168  0012E0  5821               	subwfb	___lldiv@dividend+2,w,c
 25169  0012E2  5026               	movf	___lldiv@divisor+3,w,c
 25170  0012E4  5822               	subwfb	___lldiv@dividend+3,w,c
 25171  0012E6  E309               	bnc	l18981
 25172                           
 25173                           ; BSR set to: 0
 25174  0012E8  5023               	movf	___lldiv@divisor,w,c
 25175  0012EA  5E1F               	subwf	___lldiv@dividend,f,c
 25176  0012EC  5024               	movf	___lldiv@divisor+1,w,c
 25177  0012EE  5A20               	subwfb	___lldiv@dividend+1,f,c
 25178  0012F0  5025               	movf	___lldiv@divisor+2,w,c
 25179  0012F2  5A21               	subwfb	___lldiv@dividend+2,f,c
 25180  0012F4  5026               	movf	___lldiv@divisor+3,w,c
 25181  0012F6  5A22               	subwfb	___lldiv@dividend+3,f,c
 25182                           
 25183                           ; BSR set to: 0
 25184  0012F8  8161               	bsf	___lldiv@quotient& (0+255),0,b
 25185  0012FA                     l18981:
 25186                           
 25187                           ; BSR set to: 0
 25188  0012FA  90D8               	bcf	status,0,c
 25189  0012FC  3226               	rrcf	___lldiv@divisor+3,f,c
 25190  0012FE  3225               	rrcf	___lldiv@divisor+2,f,c
 25191  001300  3224               	rrcf	___lldiv@divisor+1,f,c
 25192  001302  3223               	rrcf	___lldiv@divisor,f,c
 25193                           
 25194                           ; BSR set to: 0
 25195  001304  2F60               	decfsz	___lldiv@counter& (0+255),f,b
 25196  001306  D7E2               	goto	l18973
 25197  001308                     l2540:
 25198                           
 25199                           ; BSR set to: 0
 25200  001308  C061  F01F         	movff	___lldiv@quotient,?___lldiv
 25201  00130C  C062  F020         	movff	___lldiv@quotient+1,?___lldiv+1
 25202  001310  C063  F021         	movff	___lldiv@quotient+2,?___lldiv+2
 25203  001314  C064  F022         	movff	___lldiv@quotient+3,?___lldiv+3
 25204                           
 25205                           ; BSR set to: 0
 25206  001318  0012               	return	
 25207  00131A                     __end_of___lldiv:
 25208                           	opt stack 0
 25209                           tblptru	equ	0xFF8
 25210                           tblptrh	equ	0xFF7
 25211                           tblptrl	equ	0xFF6
 25212                           tablat	equ	0xFF5
 25213                           prodh	equ	0xFF4
 25214                           prodl	equ	0xFF3
 25215                           intcon	equ	0xFF2
 25216                           indf0	equ	0xFEF
 25217                           postinc0	equ	0xFEE
 25218                           fsr0h	equ	0xFEA
 25219                           fsr0l	equ	0xFE9
 25220                           wreg	equ	0xFE8
 25221                           indf1	equ	0xFE7
 25222                           postinc1	equ	0xFE6
 25223                           postdec1	equ	0xFE5
 25224                           fsr1h	equ	0xFE2
 25225                           fsr1l	equ	0xFE1
 25226                           indf2	equ	0xFDF
 25227                           postinc2	equ	0xFDE
 25228                           postdec2	equ	0xFDD
 25229                           plusw2	equ	0xFDB
 25230                           fsr2h	equ	0xFDA
 25231                           fsr2l	equ	0xFD9
 25232                           status	equ	0xFD8
 25233                           
 25234 ;; *************** function _isdigit *****************
 25235 ;; Defined at:
 25236 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isdigit.c"
 25237 ;; Parameters:    Size  Location     Type
 25238 ;;  c               1    wreg     unsigned char 
 25239 ;; Auto vars:     Size  Location     Type
 25240 ;;  c               1   32[COMRAM] unsigned char 
 25241 ;; Return value:  Size  Location     Type
 25242 ;;		None               void
 25243 ;; Registers used:
 25244 ;;		wreg, status,2, status,0
 25245 ;; Tracked objects:
 25246 ;;		On entry : 0/0
 25247 ;;		On exit  : 0/0
 25248 ;;		Unchanged: 0/0
 25249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25250 ;;      Params:         0       0       0       0       0       0       0
 25251 ;;      Locals:         2       0       0       0       0       0       0
 25252 ;;      Temps:          1       0       0       0       0       0       0
 25253 ;;      Totals:         3       0       0       0       0       0       0
 25254 ;;Total ram usage:        3 bytes
 25255 ;; Hardware stack levels used:    1
 25256 ;; Hardware stack levels required when called:    3
 25257 ;; This function calls:
 25258 ;;		Nothing
 25259 ;; This function is called by:
 25260 ;;		_sprintf
 25261 ;;		_atoi
 25262 ;; This function uses a non-reentrant model
 25263 ;;
 25264                           
 25265                           	psect	text60
 25266  00096C                     __ptext60:
 25267                           	opt stack 0
 25268  00096C                     _isdigit:
 25269                           	opt stack 24
 25270                           
 25271                           ; BSR set to: 0
 25272                           ;incstack = 0
 25273                           ;incstack = 0
 25274                           ;isdigit@c stored from wreg
 25275  00096C  CFE8 F021          	movff	wreg,isdigit@c
 25276  000970  6A20               	clrf	_isdigit$3277,c
 25277  000972  0E3A               	movlw	58
 25278  000974  6021               	cpfslt	isdigit@c,c
 25279  000976  D005               	goto	l18929
 25280  000978  0E2F               	movlw	47
 25281  00097A  6421               	cpfsgt	isdigit@c,c
 25282  00097C  D002               	goto	l18929
 25283  00097E  0E01               	movlw	1
 25284  000980  6E20               	movwf	_isdigit$3277,c
 25285  000982                     l18929:
 25286  000982  C020  F01F         	movff	_isdigit$3277,??_isdigit
 25287  000986  301F               	rrcf	??_isdigit,w,c
 25288  000988  0012               	return	
 25289  00098A                     __end_of_isdigit:
 25290                           	opt stack 0
 25291                           tblptru	equ	0xFF8
 25292                           tblptrh	equ	0xFF7
 25293                           tblptrl	equ	0xFF6
 25294                           tablat	equ	0xFF5
 25295                           prodh	equ	0xFF4
 25296                           prodl	equ	0xFF3
 25297                           intcon	equ	0xFF2
 25298                           indf0	equ	0xFEF
 25299                           postinc0	equ	0xFEE
 25300                           fsr0h	equ	0xFEA
 25301                           fsr0l	equ	0xFE9
 25302                           wreg	equ	0xFE8
 25303                           indf1	equ	0xFE7
 25304                           postinc1	equ	0xFE6
 25305                           postdec1	equ	0xFE5
 25306                           fsr1h	equ	0xFE2
 25307                           fsr1l	equ	0xFE1
 25308                           indf2	equ	0xFDF
 25309                           postinc2	equ	0xFDE
 25310                           postdec2	equ	0xFDD
 25311                           plusw2	equ	0xFDB
 25312                           fsr2h	equ	0xFDA
 25313                           fsr2l	equ	0xFD9
 25314                           status	equ	0xFD8
 25315                           
 25316 ;; *************** function _printFirmwareVersion *****************
 25317 ;; Defined at:
 25318 ;;		line 3270 in file "main.c"
 25319 ;; Parameters:    Size  Location     Type
 25320 ;;		None
 25321 ;; Auto vars:     Size  Location     Type
 25322 ;;  wrkbuf         20   15[BANK0 ] unsigned char [20]
 25323 ;; Return value:  Size  Location     Type
 25324 ;;		None               void
 25325 ;; Registers used:
 25326 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25327 ;; Tracked objects:
 25328 ;;		On entry : 0/0
 25329 ;;		On exit  : 0/0
 25330 ;;		Unchanged: 0/0
 25331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25332 ;;      Params:         0       0       0       0       0       0       0
 25333 ;;      Locals:         0      20       0       0       0       0       0
 25334 ;;      Temps:          0       0       0       0       0       0       0
 25335 ;;      Totals:         0      20       0       0       0       0       0
 25336 ;;Total ram usage:       20 bytes
 25337 ;; Hardware stack levels used:    1
 25338 ;; Hardware stack levels required when called:    6
 25339 ;; This function calls:
 25340 ;;		_putsUSART
 25341 ;;		_WriteUSART
 25342 ;;		_itoa
 25343 ;; This function is called by:
 25344 ;;		_main
 25345 ;;		_doModeVerbose
 25346 ;; This function uses a non-reentrant model
 25347 ;;
 25348                           
 25349                           	psect	text61
 25350  00149A                     __ptext61:
 25351                           	opt stack 0
 25352  00149A                     _printFirmwareVersion:
 25353                           	opt stack 22
 25354                           
 25355                           ;main.c: 3271: char wrkbuf[20];
 25356                           ;main.c: 3272: putsUSART((char *) "Version: ");
 25357                           
 25358                           ;incstack = 0
 25359                           ;incstack = 0
 25360  00149A  0E7B               	movlw	high STR_299
 25361  00149C  6E21               	movwf	?_putsUSART+1,c
 25362  00149E  0E75               	movlw	low STR_299
 25363  0014A0  6E20               	movwf	?_putsUSART,c
 25364  0014A2  EC03  F007         	call	_putsUSART	;wreg free
 25365                           
 25366                           ;main.c: 3273: itoa(wrkbuf, 1, 10);
 25367  0014A6  0100               	movlb	0	; () banked
 25368  0014A8  D834               	call	PL74	;call to abstracted procedure
 25369  0014AA  EC47  F005         	call	_itoa	;wreg free
 25370                           
 25371                           ; BSR set to: 0
 25372                           ;main.c: 3274: putsUSART(wrkbuf);
 25373  0014AE  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25374  0014B0  6E21               	movwf	?_putsUSART+1,c
 25375  0014B2  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25376  0014B4  6E20               	movwf	?_putsUSART,c
 25377  0014B6  EC03  F007         	call	_putsUSART	;wreg free
 25378  0014BA                     l1368:
 25379  0014BA  A2AC               	btfss	4012,1,c	;volatile
 25380  0014BC  D7FE               	goto	l1368
 25381                           
 25382                           ;main.c: 3276: WriteUSART('.');
 25383  0014BE  0E2E               	movlw	46
 25384  0014C0  EC77  F004         	call	_WriteUSART
 25385                           
 25386                           ;main.c: 3277: itoa(wrkbuf, 1, 10);
 25387  0014C4  0100               	movlb	0	; () banked
 25388  0014C6  D825               	call	PL74	;call to abstracted procedure
 25389  0014C8  EC47  F005         	call	_itoa	;wreg free
 25390                           
 25391                           ; BSR set to: 0
 25392                           ;main.c: 3278: putsUSART(wrkbuf);
 25393  0014CC  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25394  0014CE  6E21               	movwf	?_putsUSART+1,c
 25395  0014D0  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25396  0014D2  6E20               	movwf	?_putsUSART,c
 25397  0014D4  EC03  F007         	call	_putsUSART	;wreg free
 25398  0014D8                     l1371:
 25399  0014D8  A2AC               	btfss	4012,1,c	;volatile
 25400  0014DA  D7FE               	goto	l1371
 25401                           
 25402                           ;main.c: 3280: WriteUSART('.');
 25403  0014DC  0E2E               	movlw	46
 25404  0014DE  EC77  F004         	call	_WriteUSART
 25405                           
 25406                           ;main.c: 3281: itoa(wrkbuf, 0, 10);
 25407  0014E2  0100               	movlb	0	; () banked
 25408  0014E4  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25409  0014E6  6F6A               	movwf	(?_itoa+1)& (0+255),b
 25410  0014E8  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25411  0014EA  6F69               	movwf	?_itoa& (0+255),b
 25412  0014EC  6B6C               	clrf	(?_itoa+3)& (0+255),b
 25413  0014EE  6B6B               	clrf	(?_itoa+2)& (0+255),b
 25414  0014F0  6B6E               	clrf	(?_itoa+5)& (0+255),b
 25415  0014F2  0E0A               	movlw	10
 25416  0014F4  6F6D               	movwf	(?_itoa+4)& (0+255),b
 25417  0014F6  EC47  F005         	call	_itoa	;wreg free
 25418                           
 25419                           ; BSR set to: 0
 25420                           ;main.c: 3282: putsUSART(wrkbuf);
 25421  0014FA  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25422  0014FC  6E21               	movwf	?_putsUSART+1,c
 25423  0014FE  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25424  001500  6E20               	movwf	?_putsUSART,c
 25425  001502  EC03  F007         	call	_putsUSART	;wreg free
 25426                           
 25427                           ;main.c: 3283: putsUSART((char *) "\r\n");
 25428  001506  0E6F               	movlw	high (STR_240+51)
 25429  001508  6E21               	movwf	?_putsUSART+1,c
 25430  00150A  0EF8               	movlw	low (STR_240+51)
 25431  00150C  6E20               	movwf	?_putsUSART,c
 25432  00150E  EF03  F007         	goto	_putsUSART	;wreg free
 25433  001512                     __end_of_printFirmwareVersion:
 25434                           	opt stack 0
 25435  001512                     PL74:
 25436                           	opt stack 22
 25437  001512  0E00               	movlw	high printFirmwareVersion@wrkbuf
 25438  001514  6F6A               	movwf	(?_itoa+1)& (0+255),b
 25439  001516  0E6F               	movlw	low printFirmwareVersion@wrkbuf
 25440  001518  6F69               	movwf	?_itoa& (0+255),b
 25441  00151A  6B6C               	clrf	(?_itoa+3)& (0+255),b
 25442  00151C  0E01               	movlw	1
 25443  00151E  6F6B               	movwf	(?_itoa+2)& (0+255),b
 25444  001520  6B6E               	clrf	(?_itoa+5)& (0+255),b
 25445  001522  0E0A               	movlw	10
 25446  001524  6F6D               	movwf	(?_itoa+4)& (0+255),b
 25447  001526  0C0A               	retlw	10
 25448  001528                     __end_ofPL74:
 25449                           	opt stack 0
 25450                           tblptru	equ	0xFF8
 25451                           tblptrh	equ	0xFF7
 25452                           tblptrl	equ	0xFF6
 25453                           tablat	equ	0xFF5
 25454                           prodh	equ	0xFF4
 25455                           prodl	equ	0xFF3
 25456                           intcon	equ	0xFF2
 25457                           indf0	equ	0xFEF
 25458                           postinc0	equ	0xFEE
 25459                           fsr0h	equ	0xFEA
 25460                           fsr0l	equ	0xFE9
 25461                           wreg	equ	0xFE8
 25462                           indf1	equ	0xFE7
 25463                           postinc1	equ	0xFE6
 25464                           postdec1	equ	0xFE5
 25465                           fsr1h	equ	0xFE2
 25466                           fsr1l	equ	0xFE1
 25467                           indf2	equ	0xFDF
 25468                           postinc2	equ	0xFDE
 25469                           postdec2	equ	0xFDD
 25470                           plusw2	equ	0xFDB
 25471                           fsr2h	equ	0xFDA
 25472                           fsr2l	equ	0xFD9
 25473                           status	equ	0xFD8
 25474                           
 25475 ;; *************** function _itoa *****************
 25476 ;; Defined at:
 25477 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\itoa.c"
 25478 ;; Parameters:    Size  Location     Type
 25479 ;;  buf             2    9[BANK0 ] PTR unsigned char 
 25480 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 25481 ;;  val             2   11[BANK0 ] int 
 25482 ;;  base            2   13[BANK0 ] int 
 25483 ;; Auto vars:     Size  Location     Type
 25484 ;;  cp              2    0        PTR unsigned char 
 25485 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 25486 ;; Return value:  Size  Location     Type
 25487 ;;                  2    9[BANK0 ] PTR unsigned char 
 25488 ;; Registers used:
 25489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25490 ;; Tracked objects:
 25491 ;;		On entry : F/0
 25492 ;;		On exit  : F/0
 25493 ;;		Unchanged: 0/0
 25494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25495 ;;      Params:         0       6       0       0       0       0       0
 25496 ;;      Locals:         2       0       0       0       0       0       0
 25497 ;;      Temps:          0       0       0       0       0       0       0
 25498 ;;      Totals:         2       6       0       0       0       0       0
 25499 ;;Total ram usage:        8 bytes
 25500 ;; Hardware stack levels used:    1
 25501 ;; Hardware stack levels required when called:    5
 25502 ;; This function calls:
 25503 ;;		_utoa
 25504 ;; This function is called by:
 25505 ;;		_receiveSendEventSLCAN
 25506 ;;		_findNodes
 25507 ;;		_printGUID
 25508 ;;		_printNodeFirmwareVersion
 25509 ;;		_printFirmwareVersion
 25510 ;; This function uses a non-reentrant model
 25511 ;;
 25512                           
 25513                           	psect	text62
 25514  000A8E                     __ptext62:
 25515                           	opt stack 0
 25516  000A8E                     _itoa:
 25517                           	opt stack 22
 25518                           
 25519                           ; BSR set to: 0
 25520                           
 25521                           ;incstack = 0
 25522                           ;incstack = 0
 25523  000A8E  AF6C               	btfss	(itoa@val+1)& (0+255),7,b
 25524  000A90  D00C               	goto	l18771
 25525                           
 25526                           ; BSR set to: 0
 25527  000A92  C069  FFD9         	movff	itoa@buf,fsr2l
 25528  000A96  C06A  FFDA         	movff	itoa@buf+1,fsr2h
 25529  000A9A  0E2D               	movlw	45
 25530  000A9C  6EDF               	movwf	indf2,c
 25531                           
 25532                           ; BSR set to: 0
 25533  000A9E  4B69               	infsnz	itoa@buf& (0+255),f,b
 25534  000AA0  2B6A               	incf	(itoa@buf+1)& (0+255),f,b
 25535                           
 25536                           ; BSR set to: 0
 25537  000AA2  6D6B               	negf	itoa@val& (0+255),b
 25538  000AA4  1F6C               	comf	(itoa@val+1)& (0+255),f,b
 25539  000AA6  B0D8               	btfsc	status,0,c
 25540  000AA8  2B6C               	incf	(itoa@val+1)& (0+255),f,b
 25541  000AAA                     l18771:
 25542                           
 25543                           ; BSR set to: 0
 25544  000AAA  C069  F060         	movff	itoa@buf,?_utoa
 25545  000AAE  C06A  F061         	movff	itoa@buf+1,?_utoa+1
 25546  000AB2  C06B  F062         	movff	itoa@val,?_utoa+2
 25547  000AB6  C06C  F063         	movff	itoa@val+1,?_utoa+3
 25548  000ABA  C06D  F064         	movff	itoa@base,?_utoa+4
 25549  000ABE  C06E  F065         	movff	itoa@base+1,?_utoa+5
 25550  000AC2  EF64  F00C         	goto	_utoa	;wreg free
 25551  000AC6                     __end_of_itoa:
 25552                           	opt stack 0
 25553                           tblptru	equ	0xFF8
 25554                           tblptrh	equ	0xFF7
 25555                           tblptrl	equ	0xFF6
 25556                           tablat	equ	0xFF5
 25557                           prodh	equ	0xFF4
 25558                           prodl	equ	0xFF3
 25559                           intcon	equ	0xFF2
 25560                           indf0	equ	0xFEF
 25561                           postinc0	equ	0xFEE
 25562                           fsr0h	equ	0xFEA
 25563                           fsr0l	equ	0xFE9
 25564                           wreg	equ	0xFE8
 25565                           indf1	equ	0xFE7
 25566                           postinc1	equ	0xFE6
 25567                           postdec1	equ	0xFE5
 25568                           fsr1h	equ	0xFE2
 25569                           fsr1l	equ	0xFE1
 25570                           indf2	equ	0xFDF
 25571                           postinc2	equ	0xFDE
 25572                           postdec2	equ	0xFDD
 25573                           plusw2	equ	0xFDB
 25574                           fsr2h	equ	0xFDA
 25575                           fsr2l	equ	0xFD9
 25576                           status	equ	0xFD8
 25577                           
 25578 ;; *************** function _utoa *****************
 25579 ;; Defined at:
 25580 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\itoa.c"
 25581 ;; Parameters:    Size  Location     Type
 25582 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 25583 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 25584 ;;  val             2    2[BANK0 ] unsigned int 
 25585 ;;  base            2    4[BANK0 ] int 
 25586 ;; Auto vars:     Size  Location     Type
 25587 ;;  v               2    6[BANK0 ] unsigned int 
 25588 ;;  c               1    8[BANK0 ] unsigned char 
 25589 ;; Return value:  Size  Location     Type
 25590 ;;                  2    0[BANK0 ] PTR unsigned char 
 25591 ;; Registers used:
 25592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25593 ;; Tracked objects:
 25594 ;;		On entry : F/0
 25595 ;;		On exit  : F/0
 25596 ;;		Unchanged: 0/0
 25597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25598 ;;      Params:         0       6       0       0       0       0       0
 25599 ;;      Locals:         0       3       0       0       0       0       0
 25600 ;;      Temps:          0       0       0       0       0       0       0
 25601 ;;      Totals:         0       9       0       0       0       0       0
 25602 ;;Total ram usage:        9 bytes
 25603 ;; Hardware stack levels used:    1
 25604 ;; Hardware stack levels required when called:    4
 25605 ;; This function calls:
 25606 ;;		___lwdiv
 25607 ;;		___lwmod
 25608 ;; This function is called by:
 25609 ;;		_itoa
 25610 ;; This function uses a non-reentrant model
 25611 ;;
 25612                           
 25613                           	psect	text63
 25614  0018C8                     __ptext63:
 25615                           	opt stack 0
 25616  0018C8                     _utoa:
 25617                           	opt stack 22
 25618                           
 25619                           ; BSR set to: 0
 25620                           
 25621                           ; BSR set to: 0
 25622                           ;incstack = 0
 25623                           ;incstack = 0
 25624  0018C8  C062  F066         	movff	utoa@val,utoa@v
 25625  0018CC  C063  F067         	movff	utoa@val+1,utoa@v+1
 25626  0018D0                     l18935:
 25627                           
 25628                           ; BSR set to: 0
 25629  0018D0  C066  F01F         	movff	utoa@v,?___lwdiv
 25630  0018D4  C067  F020         	movff	utoa@v+1,?___lwdiv+1
 25631  0018D8  C064  F021         	movff	utoa@base,?___lwdiv+2
 25632  0018DC  C065  F022         	movff	utoa@base+1,?___lwdiv+3
 25633  0018E0  ECDE  F006         	call	___lwdiv	;wreg free
 25634  0018E4  C01F  F066         	movff	?___lwdiv,utoa@v
 25635  0018E8  C020  F067         	movff	?___lwdiv+1,utoa@v+1
 25636                           
 25637                           ; BSR set to: 0
 25638  0018EC  4B60               	infsnz	utoa@buf& (0+255),f,b
 25639  0018EE  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 25640                           
 25641                           ; BSR set to: 0
 25642  0018F0  5167               	movf	(utoa@v+1)& (0+255),w,b
 25643  0018F2  1166               	iorwf	utoa@v& (0+255),w,b
 25644  0018F4  E1ED               	bnz	l18935
 25645                           
 25646                           ; BSR set to: 0
 25647  0018F6  C060  FFD9         	movff	utoa@buf,fsr2l
 25648  0018FA  C061  FFDA         	movff	utoa@buf+1,fsr2h
 25649  0018FE  0E00               	movlw	0
 25650  001900  6ADF               	clrf	indf2,c
 25651                           
 25652                           ; BSR set to: 0
 25653  001902  0760               	decf	utoa@buf& (0+255),f,b
 25654  001904  A0D8               	btfss	status,0,c
 25655  001906  0761               	decf	(utoa@buf+1)& (0+255),f,b
 25656  001908                     l18945:
 25657                           
 25658                           ; BSR set to: 0
 25659  001908  C062  F01F         	movff	utoa@val,?___lwmod
 25660  00190C  C063  F020         	movff	utoa@val+1,?___lwmod+1
 25661  001910  C064  F021         	movff	utoa@base,?___lwmod+2
 25662  001914  C065  F022         	movff	utoa@base+1,?___lwmod+3
 25663  001918  ECD7  F005         	call	___lwmod	;wreg free
 25664  00191C  501F               	movf	?___lwmod,w,c
 25665  00191E  6F68               	movwf	utoa@c& (0+255),b
 25666                           
 25667                           ; BSR set to: 0
 25668  001920  C062  F01F         	movff	utoa@val,?___lwdiv
 25669  001924  C063  F020         	movff	utoa@val+1,?___lwdiv+1
 25670  001928  C064  F021         	movff	utoa@base,?___lwdiv+2
 25671  00192C  C065  F022         	movff	utoa@base+1,?___lwdiv+3
 25672  001930  ECDE  F006         	call	___lwdiv	;wreg free
 25673  001934  C01F  F062         	movff	?___lwdiv,utoa@val
 25674  001938  C020  F063         	movff	?___lwdiv+1,utoa@val+1
 25675                           
 25676                           ; BSR set to: 0
 25677  00193C  0E09               	movlw	9
 25678  00193E  6568               	cpfsgt	utoa@c& (0+255),b
 25679  001940  D002               	goto	l2509
 25680                           
 25681                           ; BSR set to: 0
 25682  001942  0E07               	movlw	7
 25683  001944  2768               	addwf	utoa@c& (0+255),f,b
 25684  001946                     l2509:
 25685                           
 25686                           ; BSR set to: 0
 25687  001946  0E30               	movlw	48
 25688  001948  2768               	addwf	utoa@c& (0+255),f,b
 25689                           
 25690                           ; BSR set to: 0
 25691  00194A  C060  FFD9         	movff	utoa@buf,fsr2l
 25692  00194E  C061  FFDA         	movff	utoa@buf+1,fsr2h
 25693  001952  C068  FFDF         	movff	utoa@c,indf2
 25694                           
 25695                           ; BSR set to: 0
 25696  001956  0760               	decf	utoa@buf& (0+255),f,b
 25697  001958  A0D8               	btfss	status,0,c
 25698  00195A  0761               	decf	(utoa@buf+1)& (0+255),f,b
 25699                           
 25700                           ; BSR set to: 0
 25701  00195C  5163               	movf	(utoa@val+1)& (0+255),w,b
 25702  00195E  1162               	iorwf	utoa@val& (0+255),w,b
 25703  001960  E1D3               	bnz	l18945
 25704                           
 25705                           ; BSR set to: 0
 25706                           ;	Return value of _utoa is never used
 25707  001962  4B60               	infsnz	utoa@buf& (0+255),f,b
 25708  001964  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 25709                           
 25710                           ; BSR set to: 0
 25711  001966  0012               	return	
 25712  001968                     __end_of_utoa:
 25713                           	opt stack 0
 25714                           tblptru	equ	0xFF8
 25715                           tblptrh	equ	0xFF7
 25716                           tblptrl	equ	0xFF6
 25717                           tablat	equ	0xFF5
 25718                           prodh	equ	0xFF4
 25719                           prodl	equ	0xFF3
 25720                           intcon	equ	0xFF2
 25721                           indf0	equ	0xFEF
 25722                           postinc0	equ	0xFEE
 25723                           fsr0h	equ	0xFEA
 25724                           fsr0l	equ	0xFE9
 25725                           wreg	equ	0xFE8
 25726                           indf1	equ	0xFE7
 25727                           postinc1	equ	0xFE6
 25728                           postdec1	equ	0xFE5
 25729                           fsr1h	equ	0xFE2
 25730                           fsr1l	equ	0xFE1
 25731                           indf2	equ	0xFDF
 25732                           postinc2	equ	0xFDE
 25733                           postdec2	equ	0xFDD
 25734                           plusw2	equ	0xFDB
 25735                           fsr2h	equ	0xFDA
 25736                           fsr2l	equ	0xFD9
 25737                           status	equ	0xFD8
 25738                           
 25739 ;; *************** function ___lwmod *****************
 25740 ;; Defined at:
 25741 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwmod.c"
 25742 ;; Parameters:    Size  Location     Type
 25743 ;;  dividend        2   30[COMRAM] unsigned int 
 25744 ;;  divisor         2   32[COMRAM] unsigned int 
 25745 ;; Auto vars:     Size  Location     Type
 25746 ;;  counter         1   34[COMRAM] unsigned char 
 25747 ;; Return value:  Size  Location     Type
 25748 ;;                  2   30[COMRAM] unsigned int 
 25749 ;; Registers used:
 25750 ;;		wreg, status,2, status,0
 25751 ;; Tracked objects:
 25752 ;;		On entry : F/0
 25753 ;;		On exit  : F/0
 25754 ;;		Unchanged: F/0
 25755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25756 ;;      Params:         4       0       0       0       0       0       0
 25757 ;;      Locals:         1       0       0       0       0       0       0
 25758 ;;      Temps:          0       0       0       0       0       0       0
 25759 ;;      Totals:         5       0       0       0       0       0       0
 25760 ;;Total ram usage:        5 bytes
 25761 ;; Hardware stack levels used:    1
 25762 ;; Hardware stack levels required when called:    3
 25763 ;; This function calls:
 25764 ;;		Nothing
 25765 ;; This function is called by:
 25766 ;;		_utoa
 25767 ;; This function uses a non-reentrant model
 25768 ;;
 25769                           
 25770                           	psect	text64
 25771  000BAE                     __ptext64:
 25772                           	opt stack 0
 25773  000BAE                     ___lwmod:
 25774                           	opt stack 22
 25775                           
 25776                           ; BSR set to: 0
 25777                           
 25778                           ; BSR set to: 0
 25779                           ;incstack = 0
 25780                           ;incstack = 0
 25781  000BAE  5022               	movf	___lwmod@divisor+1,w,c
 25782  000BB0  1021               	iorwf	___lwmod@divisor,w,c
 25783  000BB2  E017               	bz	l2633
 25784                           
 25785                           ; BSR set to: 0
 25786  000BB4  0E01               	movlw	1
 25787  000BB6  6E23               	movwf	___lwmod@counter,c
 25788  000BB8  D004               	goto	l19029
 25789  000BBA                     l19027:
 25790                           
 25791                           ; BSR set to: 0
 25792  000BBA  90D8               	bcf	status,0,c
 25793  000BBC  3621               	rlcf	___lwmod@divisor,f,c
 25794  000BBE  3622               	rlcf	___lwmod@divisor+1,f,c
 25795  000BC0  2A23               	incf	___lwmod@counter,f,c
 25796  000BC2                     l19029:
 25797                           
 25798                           ; BSR set to: 0
 25799  000BC2  AE22               	btfss	___lwmod@divisor+1,7,c
 25800  000BC4  D7FA               	goto	l19027
 25801  000BC6                     l19031:
 25802                           
 25803                           ; BSR set to: 0
 25804  000BC6  5021               	movf	___lwmod@divisor,w,c
 25805  000BC8  5C1F               	subwf	___lwmod@dividend,w,c
 25806  000BCA  5022               	movf	___lwmod@divisor+1,w,c
 25807  000BCC  5820               	subwfb	___lwmod@dividend+1,w,c
 25808  000BCE  E304               	bnc	l19035
 25809                           
 25810                           ; BSR set to: 0
 25811  000BD0  5021               	movf	___lwmod@divisor,w,c
 25812  000BD2  5E1F               	subwf	___lwmod@dividend,f,c
 25813  000BD4  5022               	movf	___lwmod@divisor+1,w,c
 25814  000BD6  5A20               	subwfb	___lwmod@dividend+1,f,c
 25815  000BD8                     l19035:
 25816                           
 25817                           ; BSR set to: 0
 25818  000BD8  90D8               	bcf	status,0,c
 25819  000BDA  3222               	rrcf	___lwmod@divisor+1,f,c
 25820  000BDC  3221               	rrcf	___lwmod@divisor,f,c
 25821                           
 25822                           ; BSR set to: 0
 25823  000BDE  2E23               	decfsz	___lwmod@counter,f,c
 25824  000BE0  D7F2               	goto	l19031
 25825  000BE2                     l2633:
 25826                           
 25827                           ; BSR set to: 0
 25828  000BE2  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
 25829  000BE6  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
 25830                           
 25831                           ; BSR set to: 0
 25832  000BEA  0012               	return	
 25833  000BEC                     __end_of___lwmod:
 25834                           	opt stack 0
 25835                           tblptru	equ	0xFF8
 25836                           tblptrh	equ	0xFF7
 25837                           tblptrl	equ	0xFF6
 25838                           tablat	equ	0xFF5
 25839                           prodh	equ	0xFF4
 25840                           prodl	equ	0xFF3
 25841                           intcon	equ	0xFF2
 25842                           indf0	equ	0xFEF
 25843                           postinc0	equ	0xFEE
 25844                           fsr0h	equ	0xFEA
 25845                           fsr0l	equ	0xFE9
 25846                           wreg	equ	0xFE8
 25847                           indf1	equ	0xFE7
 25848                           postinc1	equ	0xFE6
 25849                           postdec1	equ	0xFE5
 25850                           fsr1h	equ	0xFE2
 25851                           fsr1l	equ	0xFE1
 25852                           indf2	equ	0xFDF
 25853                           postinc2	equ	0xFDE
 25854                           postdec2	equ	0xFDD
 25855                           plusw2	equ	0xFDB
 25856                           fsr2h	equ	0xFDA
 25857                           fsr2l	equ	0xFD9
 25858                           status	equ	0xFD8
 25859                           
 25860 ;; *************** function ___lwdiv *****************
 25861 ;; Defined at:
 25862 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwdiv.c"
 25863 ;; Parameters:    Size  Location     Type
 25864 ;;  dividend        2   30[COMRAM] unsigned int 
 25865 ;;  divisor         2   32[COMRAM] unsigned int 
 25866 ;; Auto vars:     Size  Location     Type
 25867 ;;  quotient        2   35[COMRAM] unsigned int 
 25868 ;;  counter         1   34[COMRAM] unsigned char 
 25869 ;; Return value:  Size  Location     Type
 25870 ;;                  2   30[COMRAM] unsigned int 
 25871 ;; Registers used:
 25872 ;;		wreg, status,2, status,0
 25873 ;; Tracked objects:
 25874 ;;		On entry : F/0
 25875 ;;		On exit  : F/0
 25876 ;;		Unchanged: F/0
 25877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25878 ;;      Params:         4       0       0       0       0       0       0
 25879 ;;      Locals:         3       0       0       0       0       0       0
 25880 ;;      Temps:          0       0       0       0       0       0       0
 25881 ;;      Totals:         7       0       0       0       0       0       0
 25882 ;;Total ram usage:        7 bytes
 25883 ;; Hardware stack levels used:    1
 25884 ;; Hardware stack levels required when called:    3
 25885 ;; This function calls:
 25886 ;;		Nothing
 25887 ;; This function is called by:
 25888 ;;		_utoa
 25889 ;; This function uses a non-reentrant model
 25890 ;;
 25891                           
 25892                           	psect	text65
 25893  000DBC                     __ptext65:
 25894                           	opt stack 0
 25895  000DBC                     ___lwdiv:
 25896                           	opt stack 22
 25897                           
 25898                           ; BSR set to: 0
 25899                           
 25900                           ; BSR set to: 0
 25901                           ;incstack = 0
 25902                           ;incstack = 0
 25903  000DBC  6A24               	clrf	___lwdiv@quotient,c
 25904  000DBE  6A25               	clrf	___lwdiv@quotient+1,c
 25905                           
 25906                           ; BSR set to: 0
 25907  000DC0  5022               	movf	___lwdiv@divisor+1,w,c
 25908  000DC2  1021               	iorwf	___lwdiv@divisor,w,c
 25909  000DC4  E01B               	bz	l2623
 25910                           
 25911                           ; BSR set to: 0
 25912  000DC6  0E01               	movlw	1
 25913  000DC8  6E23               	movwf	___lwdiv@counter,c
 25914  000DCA  D004               	goto	l19009
 25915  000DCC                     l19007:
 25916                           
 25917                           ; BSR set to: 0
 25918  000DCC  90D8               	bcf	status,0,c
 25919  000DCE  3621               	rlcf	___lwdiv@divisor,f,c
 25920  000DD0  3622               	rlcf	___lwdiv@divisor+1,f,c
 25921  000DD2  2A23               	incf	___lwdiv@counter,f,c
 25922  000DD4                     l19009:
 25923                           
 25924                           ; BSR set to: 0
 25925  000DD4  AE22               	btfss	___lwdiv@divisor+1,7,c
 25926  000DD6  D7FA               	goto	l19007
 25927  000DD8                     l19011:
 25928                           
 25929                           ; BSR set to: 0
 25930  000DD8  90D8               	bcf	status,0,c
 25931  000DDA  3624               	rlcf	___lwdiv@quotient,f,c
 25932  000DDC  3625               	rlcf	___lwdiv@quotient+1,f,c
 25933                           
 25934                           ; BSR set to: 0
 25935  000DDE  5021               	movf	___lwdiv@divisor,w,c
 25936  000DE0  5C1F               	subwf	___lwdiv@dividend,w,c
 25937  000DE2  5022               	movf	___lwdiv@divisor+1,w,c
 25938  000DE4  5820               	subwfb	___lwdiv@dividend+1,w,c
 25939  000DE6  E305               	bnc	l19019
 25940                           
 25941                           ; BSR set to: 0
 25942  000DE8  5021               	movf	___lwdiv@divisor,w,c
 25943  000DEA  5E1F               	subwf	___lwdiv@dividend,f,c
 25944  000DEC  5022               	movf	___lwdiv@divisor+1,w,c
 25945  000DEE  5A20               	subwfb	___lwdiv@dividend+1,f,c
 25946                           
 25947                           ; BSR set to: 0
 25948  000DF0  8024               	bsf	___lwdiv@quotient,0,c
 25949  000DF2                     l19019:
 25950                           
 25951                           ; BSR set to: 0
 25952  000DF2  90D8               	bcf	status,0,c
 25953  000DF4  3222               	rrcf	___lwdiv@divisor+1,f,c
 25954  000DF6  3221               	rrcf	___lwdiv@divisor,f,c
 25955                           
 25956                           ; BSR set to: 0
 25957  000DF8  2E23               	decfsz	___lwdiv@counter,f,c
 25958  000DFA  D7EE               	goto	l19011
 25959  000DFC                     l2623:
 25960                           
 25961                           ; BSR set to: 0
 25962  000DFC  C024  F01F         	movff	___lwdiv@quotient,?___lwdiv
 25963  000E00  C025  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25964                           
 25965                           ; BSR set to: 0
 25966  000E04  0012               	return	
 25967  000E06                     __end_of___lwdiv:
 25968                           	opt stack 0
 25969                           tblptru	equ	0xFF8
 25970                           tblptrh	equ	0xFF7
 25971                           tblptrl	equ	0xFF6
 25972                           tablat	equ	0xFF5
 25973                           prodh	equ	0xFF4
 25974                           prodl	equ	0xFF3
 25975                           intcon	equ	0xFF2
 25976                           indf0	equ	0xFEF
 25977                           postinc0	equ	0xFEE
 25978                           fsr0h	equ	0xFEA
 25979                           fsr0l	equ	0xFE9
 25980                           wreg	equ	0xFE8
 25981                           indf1	equ	0xFE7
 25982                           postinc1	equ	0xFE6
 25983                           postdec1	equ	0xFE5
 25984                           fsr1h	equ	0xFE2
 25985                           fsr1l	equ	0xFE1
 25986                           indf2	equ	0xFDF
 25987                           postinc2	equ	0xFDE
 25988                           postdec2	equ	0xFDD
 25989                           plusw2	equ	0xFDB
 25990                           fsr2h	equ	0xFDA
 25991                           fsr2l	equ	0xFD9
 25992                           status	equ	0xFD8
 25993                           
 25994 ;; *************** function _vscp_restoreDefaults *****************
 25995 ;; Defined at:
 25996 ;;		line 3260 in file "main.c"
 25997 ;; Parameters:    Size  Location     Type
 25998 ;;		None
 25999 ;; Auto vars:     Size  Location     Type
 26000 ;;		None
 26001 ;; Return value:  Size  Location     Type
 26002 ;;		None               void
 26003 ;; Registers used:
 26004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26005 ;; Tracked objects:
 26006 ;;		On entry : 0/0
 26007 ;;		On exit  : 0/0
 26008 ;;		Unchanged: 0/0
 26009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26010 ;;      Params:         0       0       0       0       0       0       0
 26011 ;;      Locals:         0       0       0       0       0       0       0
 26012 ;;      Temps:          0       0       0       0       0       0       0
 26013 ;;      Totals:         0       0       0       0       0       0       0
 26014 ;;Total ram usage:        0 bytes
 26015 ;; Hardware stack levels used:    1
 26016 ;; Hardware stack levels required when called:    6
 26017 ;; This function calls:
 26018 ;;		_init_app_ram
 26019 ;;		_init_app_eeprom
 26020 ;; This function is called by:
 26021 ;;		_main
 26022 ;;		_doModeVerbose
 26023 ;; This function uses a non-reentrant model
 26024 ;;
 26025                           
 26026                           	psect	text66
 26027  00088C                     __ptext66:
 26028                           	opt stack 0
 26029  00088C                     _vscp_restoreDefaults:
 26030                           	opt stack 22
 26031                           
 26032                           ;main.c: 3261: init_app_eeprom();
 26033                           
 26034                           ; BSR set to: 0
 26035                           ;incstack = 0
 26036                           ;incstack = 0
 26037  00088C  EC76  F00E         	call	_init_app_eeprom	;wreg free
 26038                           
 26039                           ;main.c: 3262: init_app_ram();
 26040  000890  EF13  F01F         	goto	_init_app_ram	;wreg free
 26041  000894                     __end_of_vscp_restoreDefaults:
 26042                           	opt stack 0
 26043                           tblptru	equ	0xFF8
 26044                           tblptrh	equ	0xFF7
 26045                           tblptrl	equ	0xFF6
 26046                           tablat	equ	0xFF5
 26047                           prodh	equ	0xFF4
 26048                           prodl	equ	0xFF3
 26049                           intcon	equ	0xFF2
 26050                           indf0	equ	0xFEF
 26051                           postinc0	equ	0xFEE
 26052                           fsr0h	equ	0xFEA
 26053                           fsr0l	equ	0xFE9
 26054                           wreg	equ	0xFE8
 26055                           indf1	equ	0xFE7
 26056                           postinc1	equ	0xFE6
 26057                           postdec1	equ	0xFE5
 26058                           fsr1h	equ	0xFE2
 26059                           fsr1l	equ	0xFE1
 26060                           indf2	equ	0xFDF
 26061                           postinc2	equ	0xFDE
 26062                           postdec2	equ	0xFDD
 26063                           plusw2	equ	0xFDB
 26064                           fsr2h	equ	0xFDA
 26065                           fsr2l	equ	0xFD9
 26066                           status	equ	0xFD8
 26067                           
 26068 ;; *************** function _init_app_eeprom *****************
 26069 ;; Defined at:
 26070 ;;		line 573 in file "main.c"
 26071 ;; Parameters:    Size  Location     Type
 26072 ;;		None
 26073 ;; Auto vars:     Size  Location     Type
 26074 ;;  i               1   34[COMRAM] unsigned char 
 26075 ;; Return value:  Size  Location     Type
 26076 ;;		None               void
 26077 ;; Registers used:
 26078 ;;		wreg, status,2, status,0, cstack
 26079 ;; Tracked objects:
 26080 ;;		On entry : 0/0
 26081 ;;		On exit  : 0/0
 26082 ;;		Unchanged: 0/0
 26083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26084 ;;      Params:         0       0       0       0       0       0       0
 26085 ;;      Locals:         1       0       0       0       0       0       0
 26086 ;;      Temps:          0       0       0       0       0       0       0
 26087 ;;      Totals:         1       0       0       0       0       0       0
 26088 ;;Total ram usage:        1 bytes
 26089 ;; Hardware stack levels used:    1
 26090 ;; Hardware stack levels required when called:    4
 26091 ;; This function calls:
 26092 ;;		_Busy_eep
 26093 ;;		_Write_b_eep
 26094 ;; This function is called by:
 26095 ;;		_vscp_restoreDefaults
 26096 ;; This function uses a non-reentrant model
 26097 ;;
 26098                           
 26099                           	psect	text67
 26100  001CEC                     __ptext67:
 26101                           	opt stack 0
 26102  001CEC                     _init_app_eeprom:
 26103                           	opt stack 23
 26104                           
 26105                           ;main.c: 574: uint8_t i;
 26106                           ;main.c: 576: (Busy_eep(), Write_b_eep(0x01,0x55));
 26107                           
 26108                           ;incstack = 0
 26109                           ;incstack = 0
 26110  001CEC  EC43  F004         	call	_Busy_eep	;wreg free
 26111  001CF0  6A20               	clrf	?_Write_b_eep+1,c
 26112  001CF2  0E01               	movlw	1
 26113  001CF4  6E1F               	movwf	?_Write_b_eep,c
 26114  001CF6  0E55               	movlw	85
 26115  001CF8  6E21               	movwf	?_Write_b_eep+2,c
 26116  001CFA  EC2D  F005         	call	_Write_b_eep	;wreg free
 26117                           
 26118                           ;main.c: 577: (Busy_eep(), Write_b_eep(0x02,0xAA));
 26119  001CFE  EC43  F004         	call	_Busy_eep	;wreg free
 26120  001D02  6A20               	clrf	?_Write_b_eep+1,c
 26121  001D04  0E02               	movlw	2
 26122  001D06  6E1F               	movwf	?_Write_b_eep,c
 26123  001D08  0EAA               	movlw	170
 26124  001D0A  6E21               	movwf	?_Write_b_eep+2,c
 26125  001D0C  EC2D  F005         	call	_Write_b_eep	;wreg free
 26126                           
 26127                           ;main.c: 578: (Busy_eep(), Write_b_eep(0x03,0));
 26128  001D10  EC43  F004         	call	_Busy_eep	;wreg free
 26129  001D14  6A20               	clrf	?_Write_b_eep+1,c
 26130  001D16  0E03               	movlw	3
 26131  001D18  6E1F               	movwf	?_Write_b_eep,c
 26132  001D1A  0E00               	movlw	0
 26133  001D1C  6A21               	clrf	?_Write_b_eep+2,c
 26134  001D1E  EC2D  F005         	call	_Write_b_eep	;wreg free
 26135                           
 26136                           ;main.c: 579: (Busy_eep(), Write_b_eep(0x05,0));
 26137  001D22  EC43  F004         	call	_Busy_eep	;wreg free
 26138  001D26  6A20               	clrf	?_Write_b_eep+1,c
 26139  001D28  0E05               	movlw	5
 26140  001D2A  6E1F               	movwf	?_Write_b_eep,c
 26141  001D2C  0E00               	movlw	0
 26142  001D2E  6A21               	clrf	?_Write_b_eep+2,c
 26143  001D30  EC2D  F005         	call	_Write_b_eep	;wreg free
 26144                           
 26145                           ;main.c: 580: (Busy_eep(), Write_b_eep(0x06,0));
 26146  001D34  EC43  F004         	call	_Busy_eep	;wreg free
 26147  001D38  6A20               	clrf	?_Write_b_eep+1,c
 26148  001D3A  0E06               	movlw	6
 26149  001D3C  6E1F               	movwf	?_Write_b_eep,c
 26150  001D3E  0E00               	movlw	0
 26151  001D40  6A21               	clrf	?_Write_b_eep+2,c
 26152  001D42  EC2D  F005         	call	_Write_b_eep	;wreg free
 26153                           
 26154                           ;main.c: 581: (Busy_eep(), Write_b_eep(0x09,20u));
 26155  001D46  EC43  F004         	call	_Busy_eep	;wreg free
 26156  001D4A  6A20               	clrf	?_Write_b_eep+1,c
 26157  001D4C  0E09               	movlw	9
 26158  001D4E  6E1F               	movwf	?_Write_b_eep,c
 26159  001D50  0E14               	movlw	20
 26160  001D52  6E21               	movwf	?_Write_b_eep+2,c
 26161  001D54  EC2D  F005         	call	_Write_b_eep	;wreg free
 26162                           
 26163                           ;main.c: 584: for ( i = 0x20; i < (0x5C + 4); i++ ) {
 26164  001D58  0E20               	movlw	32
 26165  001D5A  6E23               	movwf	init_app_eeprom@i,c
 26166  001D5C                     l17143:
 26167                           
 26168                           ;main.c: 585: (Busy_eep(), Write_b_eep(0x20,0xFF));
 26169  001D5C  EC43  F004         	call	_Busy_eep	;wreg free
 26170  001D60  6A20               	clrf	?_Write_b_eep+1,c
 26171  001D62  0E20               	movlw	32
 26172  001D64  6E1F               	movwf	?_Write_b_eep,c
 26173  001D66  0EFF               	movlw	255
 26174  001D68  6821               	setf	?_Write_b_eep+2,c
 26175  001D6A  EC2D  F005         	call	_Write_b_eep	;wreg free
 26176  001D6E  2A23               	incf	init_app_eeprom@i,f,c
 26177  001D70  0E5F               	movlw	95
 26178  001D72  6423               	cpfsgt	init_app_eeprom@i,c
 26179  001D74  D7F3               	goto	l17143
 26180                           
 26181                           ;main.c: 586: }
 26182                           ;main.c: 589: for (i = 0x60; i < (0x64 + 4); i++) {
 26183  001D76  0E60               	movlw	96
 26184  001D78  6E23               	movwf	init_app_eeprom@i,c
 26185  001D7A                     l17157:
 26186                           
 26187                           ;main.c: 590: (Busy_eep(), Write_b_eep(0x60,0x00));
 26188  001D7A  EC43  F004         	call	_Busy_eep	;wreg free
 26189  001D7E  6A20               	clrf	?_Write_b_eep+1,c
 26190  001D80  0E60               	movlw	96
 26191  001D82  6E1F               	movwf	?_Write_b_eep,c
 26192  001D84  0E00               	movlw	0
 26193  001D86  6A21               	clrf	?_Write_b_eep+2,c
 26194  001D88  EC2D  F005         	call	_Write_b_eep	;wreg free
 26195  001D8C  2A23               	incf	init_app_eeprom@i,f,c
 26196  001D8E  0E67               	movlw	103
 26197  001D90  6423               	cpfsgt	init_app_eeprom@i,c
 26198  001D92  D7F3               	goto	l17157
 26199                           
 26200                           ;main.c: 591: }
 26201                           ;main.c: 593: (Busy_eep(), Write_b_eep(0x65,0));
 26202  001D94  EC43  F004         	call	_Busy_eep	;wreg free
 26203  001D98  6A20               	clrf	?_Write_b_eep+1,c
 26204  001D9A  0E65               	movlw	101
 26205  001D9C  6E1F               	movwf	?_Write_b_eep,c
 26206  001D9E  0E00               	movlw	0
 26207  001DA0  6A21               	clrf	?_Write_b_eep+2,c
 26208  001DA2  EC2D  F005         	call	_Write_b_eep	;wreg free
 26209                           
 26210                           ;main.c: 594: (Busy_eep(), Write_b_eep(0x66,0));
 26211  001DA6  EC43  F004         	call	_Busy_eep	;wreg free
 26212  001DAA  6A20               	clrf	?_Write_b_eep+1,c
 26213  001DAC  0E66               	movlw	102
 26214  001DAE  6E1F               	movwf	?_Write_b_eep,c
 26215  001DB0  6A21               	clrf	?_Write_b_eep+2,c
 26216  001DB2  EF2D  F005         	goto	_Write_b_eep	;wreg free
 26217  001DB6                     __end_of_init_app_eeprom:
 26218                           	opt stack 0
 26219                           tblptru	equ	0xFF8
 26220                           tblptrh	equ	0xFF7
 26221                           tblptrl	equ	0xFF6
 26222                           tablat	equ	0xFF5
 26223                           prodh	equ	0xFF4
 26224                           prodl	equ	0xFF3
 26225                           intcon	equ	0xFF2
 26226                           indf0	equ	0xFEF
 26227                           postinc0	equ	0xFEE
 26228                           fsr0h	equ	0xFEA
 26229                           fsr0l	equ	0xFE9
 26230                           wreg	equ	0xFE8
 26231                           indf1	equ	0xFE7
 26232                           postinc1	equ	0xFE6
 26233                           postdec1	equ	0xFE5
 26234                           fsr1h	equ	0xFE2
 26235                           fsr1l	equ	0xFE1
 26236                           indf2	equ	0xFDF
 26237                           postinc2	equ	0xFDE
 26238                           postdec2	equ	0xFDD
 26239                           plusw2	equ	0xFDB
 26240                           fsr2h	equ	0xFDA
 26241                           fsr2l	equ	0xFD9
 26242                           status	equ	0xFD8
 26243                           
 26244 ;; *************** function _printMode *****************
 26245 ;; Defined at:
 26246 ;;		line 3291 in file "main.c"
 26247 ;; Parameters:    Size  Location     Type
 26248 ;;		None
 26249 ;; Auto vars:     Size  Location     Type
 26250 ;;		None
 26251 ;; Return value:  Size  Location     Type
 26252 ;;		None               void
 26253 ;; Registers used:
 26254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26255 ;; Tracked objects:
 26256 ;;		On entry : 0/0
 26257 ;;		On exit  : 0/0
 26258 ;;		Unchanged: 0/0
 26259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26260 ;;      Params:         0       0       0       0       0       0       0
 26261 ;;      Locals:         0       0       0       0       0       0       0
 26262 ;;      Temps:          0       0       0       0       0       0       0
 26263 ;;      Totals:         0       0       0       0       0       0       0
 26264 ;;Total ram usage:        0 bytes
 26265 ;; Hardware stack levels used:    1
 26266 ;; Hardware stack levels required when called:    5
 26267 ;; This function calls:
 26268 ;;		_putsUSART
 26269 ;; This function is called by:
 26270 ;;		_main
 26271 ;; This function uses a non-reentrant model
 26272 ;;
 26273                           
 26274                           	psect	text68
 26275  0011BC                     __ptext68:
 26276                           	opt stack 0
 26277  0011BC                     _printMode:
 26278                           	opt stack 24
 26279                           
 26280                           ;main.c: 3292: putsUSART((char *) "Mode: ");
 26281                           
 26282                           ;incstack = 0
 26283                           ;incstack = 0
 26284  0011BC  0E7C               	movlw	high STR_301
 26285  0011BE  6E21               	movwf	?_putsUSART+1,c
 26286  0011C0  0E11               	movlw	low STR_301
 26287  0011C2  6E20               	movwf	?_putsUSART,c
 26288  0011C4  EC03  F007         	call	_putsUSART	;wreg free
 26289                           
 26290                           ;main.c: 3293: if (0 == mode) {
 26291  0011C8  0100               	movlb	0	; () banked
 26292  0011CA  67EC               	tstfsz	_mode& (0+255),b
 26293  0011CC  D007               	goto	l15527
 26294                           
 26295                           ; BSR set to: 0
 26296                           ;main.c: 3294: putsUSART((char *) "Verbose");
 26297  0011CE  0E7C               	movlw	high STR_302
 26298  0011D0  6E21               	movwf	?_putsUSART+1,c
 26299  0011D2  0E09               	movlw	low STR_302
 26300  0011D4  6E20               	movwf	?_putsUSART,c
 26301  0011D6  EC03  F007         	call	_putsUSART	;wreg free
 26302                           
 26303                           ;main.c: 3295: } else if (1 == mode) {
 26304  0011DA  D023               	goto	l1378
 26305  0011DC                     l15527:
 26306                           
 26307                           ; BSR set to: 0
 26308  0011DC  05EC               	decf	_mode& (0+255),w,b
 26309  0011DE  E107               	bnz	l15531
 26310                           
 26311                           ; BSR set to: 0
 26312                           ;main.c: 3296: putsUSART((char *) "VSCP Driver");
 26313  0011E0  0E7B               	movlw	high STR_303
 26314  0011E2  6E21               	movwf	?_putsUSART+1,c
 26315  0011E4  0E33               	movlw	low STR_303
 26316  0011E6  6E20               	movwf	?_putsUSART,c
 26317  0011E8  EC03  F007         	call	_putsUSART	;wreg free
 26318                           
 26319                           ;main.c: 3297: } else if (2 == mode) {
 26320  0011EC  D01A               	goto	l1378
 26321  0011EE                     l15531:
 26322                           
 26323                           ; BSR set to: 0
 26324  0011EE  51EC               	movf	_mode& (0+255),w,b
 26325  0011F0  0A02               	xorlw	2
 26326  0011F2  E107               	bnz	l15535
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;main.c: 3298: putsUSART((char *) "SL Driver");
 26330  0011F4  0E7B               	movlw	high STR_304
 26331  0011F6  6E21               	movwf	?_putsUSART+1,c
 26332  0011F8  0E93               	movlw	low STR_304
 26333  0011FA  6E20               	movwf	?_putsUSART,c
 26334  0011FC  EC03  F007         	call	_putsUSART	;wreg free
 26335                           
 26336                           ;main.c: 3299: } else if (3 == mode) {
 26337  001200  D010               	goto	l1378
 26338  001202                     l15535:
 26339                           
 26340                           ; BSR set to: 0
 26341  001202  51EC               	movf	_mode& (0+255),w,b
 26342  001204  0A03               	xorlw	3
 26343  001206  E107               	bnz	l15539
 26344                           
 26345                           ; BSR set to: 0
 26346                           ;main.c: 3300: putsUSART((char *) "VSCP Node");
 26347  001208  0E7B               	movlw	high STR_305
 26348  00120A  6E21               	movwf	?_putsUSART+1,c
 26349  00120C  0E89               	movlw	low STR_305
 26350  00120E  6E20               	movwf	?_putsUSART,c
 26351  001210  EC03  F007         	call	_putsUSART	;wreg free
 26352                           
 26353                           ;main.c: 3301: } else {
 26354  001214  D006               	goto	l1378
 26355  001216                     l15539:
 26356                           
 26357                           ; BSR set to: 0
 26358                           ;main.c: 3302: putsUSART((char *) "Unknown (Verbose used)");
 26359  001216  0E79               	movlw	high STR_306
 26360  001218  6E21               	movwf	?_putsUSART+1,c
 26361  00121A  0E39               	movlw	low STR_306
 26362  00121C  6E20               	movwf	?_putsUSART,c
 26363  00121E  EC03  F007         	call	_putsUSART	;wreg free
 26364  001222                     l1378:
 26365                           
 26366                           ;main.c: 3303: }
 26367                           ;main.c: 3304: putsUSART((char *) "\r\n");
 26368  001222  0E6F               	movlw	high (STR_240+51)
 26369  001224  6E21               	movwf	?_putsUSART+1,c
 26370  001226  0EF8               	movlw	low (STR_240+51)
 26371  001228  6E20               	movwf	?_putsUSART,c
 26372  00122A  EF03  F007         	goto	_putsUSART	;wreg free
 26373  00122E                     __end_of_printMode:
 26374                           	opt stack 0
 26375                           tblptru	equ	0xFF8
 26376                           tblptrh	equ	0xFF7
 26377                           tblptrl	equ	0xFF6
 26378                           tablat	equ	0xFF5
 26379                           prodh	equ	0xFF4
 26380                           prodl	equ	0xFF3
 26381                           intcon	equ	0xFF2
 26382                           indf0	equ	0xFEF
 26383                           postinc0	equ	0xFEE
 26384                           fsr0h	equ	0xFEA
 26385                           fsr0l	equ	0xFE9
 26386                           wreg	equ	0xFE8
 26387                           indf1	equ	0xFE7
 26388                           postinc1	equ	0xFE6
 26389                           postdec1	equ	0xFE5
 26390                           fsr1h	equ	0xFE2
 26391                           fsr1l	equ	0xFE1
 26392                           indf2	equ	0xFDF
 26393                           postinc2	equ	0xFDE
 26394                           postdec2	equ	0xFDD
 26395                           plusw2	equ	0xFDB
 26396                           fsr2h	equ	0xFDA
 26397                           fsr2l	equ	0xFD9
 26398                           status	equ	0xFD8
 26399                           
 26400 ;; *************** function _putsUSART *****************
 26401 ;; Defined at:
 26402 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uputs.c"
 26403 ;; Parameters:    Size  Location     Type
 26404 ;;  data            2   31[COMRAM] PTR unsigned char 
 26405 ;;		 -> STR_307(3), STR_306(23), STR_305(10), STR_304(10), 
 26406 ;;		 -> STR_303(12), STR_302(8), STR_301(7), STR_300(3), 
 26407 ;;		 -> printFirmwareVersion@wrkbuf(20), STR_299(10), STR_298(3), STR_295(20), 
 26408 ;;		 -> STR_294(3), STR_293(14), STR_292(3), STR_288(8), 
 26409 ;;		 -> STR_287(17), STR_286(3), STR_285(67), STR_284(3), 
 26410 ;;		 -> STR_283(27), STR_282(3), STR_281(67), STR_280(52), 
 26411 ;;		 -> STR_279(39), STR_278(62), STR_277(55), STR_276(49), 
 26412 ;;		 -> STR_275(67), STR_274(47), STR_273(47), STR_272(34), 
 26413 ;;		 -> STR_271(71), STR_270(20), STR_269(78), STR_268(24), 
 26414 ;;		 -> STR_267(77), STR_266(74), STR_265(76), STR_264(47), 
 26415 ;;		 -> STR_263(40), STR_262(39), STR_261(33), STR_260(23), 
 26416 ;;		 -> STR_259(56), STR_258(24), STR_257(44), STR_256(50), 
 26417 ;;		 -> STR_255(31), STR_254(50), STR_253(51), STR_252(46), 
 26418 ;;		 -> STR_251(44), STR_250(27), STR_249(39), STR_248(39), 
 26419 ;;		 -> STR_247(57), STR_246(55), STR_245(3), STR_242(24), 
 26420 ;;		 -> STR_241(58), STR_240(54), STR_239(59), STR_238(3), 
 26421 ;;		 -> STR_235(25), STR_234(52), STR_233(3), STR_230(24), 
 26422 ;;		 -> STR_229(3), STR_226(24), STR_225(3), STR_222(24), 
 26423 ;;		 -> STR_221(3), STR_218(23), STR_217(3), STR_214(21), 
 26424 ;;		 -> STR_213(3), STR_210(22), STR_209(3), STR_206(17), 
 26425 ;;		 -> STR_205(3), STR_202(18), STR_201(4), STR_200(11), 
 26426 ;;		 -> STR_199(2), STR_196(7), STR_193(7), STR_190(9), 
 26427 ;;		 -> STR_187(7), STR_184(8), STR_181(12), STR_178(7), 
 26428 ;;		 -> STR_177(2), STR_176(2), STR_175(6), STR_174(8), 
 26429 ;;		 -> STR_173(8), STR_172(20), STR_171(27), STR_170(6), 
 26430 ;;		 -> STR_169(33), STR_166(34), STR_164(46), STR_163(22), 
 26431 ;;		 -> STR_161(21), STR_158(41), STR_157(23), STR_155(22), 
 26432 ;;		 -> STR_152(26), STR_150(32), STR_148(28), STR_139(6), 
 26433 ;;		 -> STR_137(40), STR_135(44), STR_132(6), STR_131(39), 
 26434 ;;		 -> STR_129(36), STR_127(37), STR_125(40), STR_123(37), 
 26435 ;;		 -> STR_122(50), STR_119(6), STR_116(41), STR_114(38), 
 26436 ;;		 -> STR_112(39), STR_110(42), STR_108(39), STR_107(66), 
 26437 ;;		 -> STR_104(6), STR_103(27), STR_102(3), STR_99(20), 
 26438 ;;		 -> STR_98(52), STR_94(8), STR_93(36), STR_90(8), 
 26439 ;;		 -> STR_89(38), STR_88(24), STR_86(33), STR_84(24), 
 26440 ;;		 -> STR_82(52), STR_80(54), STR_79(6), STR_78(3), 
 26441 ;;		 -> STR_73(25), STR_70(17), STR_69(3), STR_68(4), 
 26442 ;;		 -> STR_67(3), STR_64(4), STR_59(15), wrkbuf(80), 
 26443 ;;		 -> STR_56(14), STR_54(33), STR_52(24), STR_50(52), 
 26444 ;;		 -> STR_48(6), STR_46(6), STR_44(6), STR_42(6), 
 26445 ;;		 -> STR_40(18), STR_39(6), STR_37(33), STR_36(6), 
 26446 ;;		 -> STR_28(24), STR_27(18), STR_26(20), STR_25(25), 
 26447 ;;		 -> STR_24(22), STR_23(19), STR_22(20), STR_21(20), 
 26448 ;;		 -> STR_19(6), STR_17(6), STR_15(6), STR_13(6), 
 26449 ;;		 -> STR_11(6), STR_9(6), STR_7(31), STR_5(29), 
 26450 ;;		 -> STR_4(55), STR_3(35), STR_2(58), STR_1(37), 
 26451 ;; Auto vars:     Size  Location     Type
 26452 ;;		None
 26453 ;; Return value:  Size  Location     Type
 26454 ;;		None               void
 26455 ;; Registers used:
 26456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26457 ;; Tracked objects:
 26458 ;;		On entry : 0/0
 26459 ;;		On exit  : 0/0
 26460 ;;		Unchanged: 0/0
 26461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26462 ;;      Params:         2       0       0       0       0       0       0
 26463 ;;      Locals:         0       0       0       0       0       0       0
 26464 ;;      Temps:          2       0       0       0       0       0       0
 26465 ;;      Totals:         4       0       0       0       0       0       0
 26466 ;;Total ram usage:        4 bytes
 26467 ;; Hardware stack levels used:    1
 26468 ;; Hardware stack levels required when called:    4
 26469 ;; This function calls:
 26470 ;;		_WriteUSART
 26471 ;; This function is called by:
 26472 ;;		_main
 26473 ;;		_doModeVerbose
 26474 ;;		_doModeSLCAN
 26475 ;;		_receivePrintEventVerbose
 26476 ;;		_receiveSendEventSLCAN
 26477 ;;		_printStatistics
 26478 ;;		_printErrors
 26479 ;;		_printHelp
 26480 ;;		_findNodes
 26481 ;;		_printGUID
 26482 ;;		_printMDF
 26483 ;;		_printNodeFirmwareVersion
 26484 ;;		_printFirmwareVersion
 26485 ;;		_printMode
 26486 ;; This function uses a non-reentrant model
 26487 ;;
 26488                           
 26489                           	psect	text69
 26490  000E06                     __ptext69:
 26491                           	opt stack 0
 26492  000E06                     _putsUSART:
 26493                           	opt stack 23
 26494  000E06                     l2025:
 26495  000E06  A2AC               	btfss	4012,1,c	;volatile
 26496  000E08  D7FE               	goto	l2025
 26497  000E0A  5020               	movf	putsUSART@data,w,c
 26498  000E0C  6EF6               	movwf	tblptrl,c
 26499  000E0E  6EE9               	movwf	fsr0l,c
 26500  000E10  0E05               	movlw	(high __ramtop+-1)
 26501  000E12  6EEA               	movwf	fsr0h,c
 26502  000E14  5021               	movf	putsUSART@data+1,w,c
 26503  000E16  64EA               	cpfsgt	fsr0h,c
 26504  000E18  D003               	bra	u19117
 26505  000E1A  6EEA               	movwf	fsr0h,c
 26506  000E1C  50EF               	movf	indf0,w,c
 26507  000E1E  D003               	bra	u19110
 26508  000E20                     u19117:
 26509  000E20  6EF7               	movwf	tblptrh,c
 26510  000E22  0008               	tblrd		*
 26511  000E24  50F5               	movf	tablat,w,c
 26512  000E26                     u19110:
 26513  000E26  EC77  F004         	call	_WriteUSART
 26514  000E2A  5020               	movf	putsUSART@data,w,c
 26515  000E2C  6E22               	movwf	??_putsUSART& (0+255),c
 26516  000E2E  5021               	movf	putsUSART@data+1,w,c
 26517  000E30  6E23               	movwf	(??_putsUSART+1)& (0+255),c
 26518  000E32  4A20               	infsnz	putsUSART@data,f,c
 26519  000E34  2A21               	incf	putsUSART@data+1,f,c
 26520  000E36  5022               	movf	??_putsUSART,w,c
 26521  000E38  6EF6               	movwf	tblptrl,c
 26522  000E3A  6EE9               	movwf	fsr0l,c
 26523  000E3C  0E05               	movlw	(high __ramtop+-1)
 26524  000E3E  6EEA               	movwf	fsr0h,c
 26525  000E40  5023               	movf	??_putsUSART+1,w,c
 26526  000E42  64EA               	cpfsgt	fsr0h,c
 26527  000E44  D003               	bra	u19127
 26528  000E46  6EEA               	movwf	fsr0h,c
 26529  000E48  50EF               	movf	indf0,w,c
 26530  000E4A  D003               	bra	u19120
 26531  000E4C                     u19127:
 26532  000E4C  6EF7               	movwf	tblptrh,c
 26533  000E4E  0008               	tblrd		*
 26534  000E50  50F5               	movf	tablat,w,c
 26535  000E52                     u19120:
 26536  000E52  0900               	iorlw	0
 26537  000E54  B4D8               	btfsc	status,2,c
 26538  000E56  0012               	return	
 26539  000E58  D7D6               	goto	l2025
 26540  000E5A                     __end_of_putsUSART:
 26541                           	opt stack 0
 26542                           tblptru	equ	0xFF8
 26543                           tblptrh	equ	0xFF7
 26544                           tblptrl	equ	0xFF6
 26545                           tablat	equ	0xFF5
 26546                           prodh	equ	0xFF4
 26547                           prodl	equ	0xFF3
 26548                           intcon	equ	0xFF2
 26549                           indf0	equ	0xFEF
 26550                           postinc0	equ	0xFEE
 26551                           fsr0h	equ	0xFEA
 26552                           fsr0l	equ	0xFE9
 26553                           wreg	equ	0xFE8
 26554                           indf1	equ	0xFE7
 26555                           postinc1	equ	0xFE6
 26556                           postdec1	equ	0xFE5
 26557                           fsr1h	equ	0xFE2
 26558                           fsr1l	equ	0xFE1
 26559                           indf2	equ	0xFDF
 26560                           postinc2	equ	0xFDE
 26561                           postdec2	equ	0xFDD
 26562                           plusw2	equ	0xFDB
 26563                           fsr2h	equ	0xFDA
 26564                           fsr2l	equ	0xFD9
 26565                           status	equ	0xFD8
 26566                           
 26567 ;; *************** function _WriteUSART *****************
 26568 ;; Defined at:
 26569 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
 26570 ;; Parameters:    Size  Location     Type
 26571 ;;  data            1    wreg     unsigned char 
 26572 ;; Auto vars:     Size  Location     Type
 26573 ;;  data            1   30[COMRAM] unsigned char 
 26574 ;; Return value:  Size  Location     Type
 26575 ;;		None               void
 26576 ;; Registers used:
 26577 ;;		wreg
 26578 ;; Tracked objects:
 26579 ;;		On entry : 0/0
 26580 ;;		On exit  : 0/0
 26581 ;;		Unchanged: 0/0
 26582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26583 ;;      Params:         0       0       0       0       0       0       0
 26584 ;;      Locals:         1       0       0       0       0       0       0
 26585 ;;      Temps:          0       0       0       0       0       0       0
 26586 ;;      Totals:         1       0       0       0       0       0       0
 26587 ;;Total ram usage:        1 bytes
 26588 ;; Hardware stack levels used:    1
 26589 ;; Hardware stack levels required when called:    3
 26590 ;; This function calls:
 26591 ;;		Nothing
 26592 ;; This function is called by:
 26593 ;;		_doModeVerbose
 26594 ;;		_sendEscapedUartData
 26595 ;;		_sendVSCPDriverErrorFrame
 26596 ;;		_sendVSCPDriverAck
 26597 ;;		_sendVSCPDriverNack
 26598 ;;		_sendVSCPDriverCommandReply
 26599 ;;		_receiveSendEventCANAL
 26600 ;;		_receiveSendMultiEventCANAL
 26601 ;;		_sendVSCPModeCapabilities
 26602 ;;		_receiveSendEventSLCAN
 26603 ;;		_printBinary
 26604 ;;		_findNodes
 26605 ;;		_printFirmwareVersion
 26606 ;;		_putsUSART
 26607 ;; This function uses a non-reentrant model
 26608 ;;
 26609                           
 26610                           	psect	text70
 26611  0008EE                     __ptext70:
 26612                           	opt stack 0
 26613  0008EE                     _WriteUSART:
 26614                           	opt stack 24
 26615                           
 26616                           ;incstack = 0
 26617                           ;incstack = 0
 26618                           ;WriteUSART@data stored from wreg
 26619  0008EE  CFE8 F01F          	movff	wreg,WriteUSART@data
 26620  0008F2  ACAC               	btfss	4012,6,c	;volatile
 26621  0008F4  D003               	goto	l17315
 26622  0008F6  90AC               	bcf	4012,0,c	;volatile
 26623  0008F8  B22E               	btfsc	_USART_Status,1,c
 26624  0008FA  80AC               	bsf	4012,0,c	;volatile
 26625  0008FC                     l17315:
 26626  0008FC  C01F  FFAD         	movff	WriteUSART@data,4013	;volatile
 26627  000900  0012               	return	
 26628  000902                     __end_of_WriteUSART:
 26629                           	opt stack 0
 26630                           tblptru	equ	0xFF8
 26631                           tblptrh	equ	0xFF7
 26632                           tblptrl	equ	0xFF6
 26633                           tablat	equ	0xFF5
 26634                           prodh	equ	0xFF4
 26635                           prodl	equ	0xFF3
 26636                           intcon	equ	0xFF2
 26637                           indf0	equ	0xFEF
 26638                           postinc0	equ	0xFEE
 26639                           fsr0h	equ	0xFEA
 26640                           fsr0l	equ	0xFE9
 26641                           wreg	equ	0xFE8
 26642                           indf1	equ	0xFE7
 26643                           postinc1	equ	0xFE6
 26644                           postdec1	equ	0xFE5
 26645                           fsr1h	equ	0xFE2
 26646                           fsr1l	equ	0xFE1
 26647                           indf2	equ	0xFDF
 26648                           postinc2	equ	0xFDE
 26649                           postdec2	equ	0xFDD
 26650                           plusw2	equ	0xFDB
 26651                           fsr2h	equ	0xFDA
 26652                           fsr2l	equ	0xFD9
 26653                           status	equ	0xFD8
 26654                           
 26655 ;; *************** function _init *****************
 26656 ;; Defined at:
 26657 ;;		line 442 in file "main.c"
 26658 ;; Parameters:    Size  Location     Type
 26659 ;;		None
 26660 ;; Auto vars:     Size  Location     Type
 26661 ;;		None
 26662 ;; Return value:  Size  Location     Type
 26663 ;;		None               void
 26664 ;; Registers used:
 26665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26666 ;; Tracked objects:
 26667 ;;		On entry : 0/0
 26668 ;;		On exit  : 0/0
 26669 ;;		Unchanged: 0/0
 26670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26671 ;;      Params:         0       0       0       0       0       0       0
 26672 ;;      Locals:         0       0       0       0       0       0       0
 26673 ;;      Temps:          0       0       0       0       0       0       0
 26674 ;;      Totals:         0       0       0       0       0       0       0
 26675 ;;Total ram usage:        0 bytes
 26676 ;; Hardware stack levels used:    1
 26677 ;; Hardware stack levels required when called:    6
 26678 ;; This function calls:
 26679 ;;		_WriteTimer0
 26680 ;;		_init_app_ram
 26681 ;;		_OpenUSART
 26682 ;;		_OpenTimer0
 26683 ;;		_OpenTimer3
 26684 ;;		_WriteTimer3
 26685 ;;		_ECANInitialize
 26686 ;; This function is called by:
 26687 ;;		_main
 26688 ;; This function uses a non-reentrant model
 26689 ;;
 26690                           
 26691                           	psect	text71
 26692  000F68                     __ptext71:
 26693                           	opt stack 0
 26694  000F68                     _init:
 26695                           	opt stack 23
 26696                           
 26697                           ;main.c: 444: init_app_ram();
 26698                           
 26699                           ;incstack = 0
 26700                           ;incstack = 0
 26701  000F68  EC13  F01F         	call	_init_app_ram	;wreg free
 26702                           
 26703                           ;main.c: 447: OSCCONbits.IRCF0 = 1;
 26704  000F6C  88D3               	bsf	4051,4,c	;volatile
 26705                           
 26706                           ;main.c: 448: OSCCONbits.IRCF1 = 1;
 26707  000F6E  8AD3               	bsf	4051,5,c	;volatile
 26708                           
 26709                           ;main.c: 449: OSCCONbits.IRCF2 = 1;
 26710  000F70  8CD3               	bsf	4051,6,c	;volatile
 26711                           
 26712                           ;main.c: 450: OSCTUNEbits.PLLEN = 1;
 26713  000F72  8C9B               	bsf	3995,6,c	;volatile
 26714                           
 26715                           ;main.c: 452: TRISBbits.RB2 = 0;
 26716  000F74  9493               	bcf	3987,2,c	;volatile
 26717                           
 26718                           ;main.c: 453: TRISBbits.RB3 = 1;
 26719  000F76  8693               	bsf	3987,3,c	;volatile
 26720                           
 26721                           ;main.c: 455: TRISCbits.RC1 = 0;
 26722  000F78  9294               	bcf	3988,1,c	;volatile
 26723                           
 26724                           ;main.c: 456: TRISCbits.RC4 = 0;
 26725  000F7A  9894               	bcf	3988,4,c	;volatile
 26726                           
 26727                           ;main.c: 457: TRISCbits.RC5 = 1;
 26728  000F7C  8A94               	bsf	3988,5,c	;volatile
 26729                           
 26730                           ;main.c: 458: TRISCbits.RC6 = 0;
 26731  000F7E  9C94               	bcf	3988,6,c	;volatile
 26732                           
 26733                           ;main.c: 459: TRISCbits.RC7 = 1;
 26734  000F80  8E94               	bsf	3988,7,c	;volatile
 26735                           
 26736                           ;main.c: 461: PORTCbits.RC4 = 1;
 26737  000F82  8882               	bsf	3970,4,c	;volatile
 26738                           
 26739                           ;main.c: 465: OpenUSART( 0b01111111 &
 26740                           ;main.c: 466: 0b11111111 &
 26741                           ;main.c: 467: 0b11111110 &
 26742                           ;main.c: 468: 0b11111101 &
 26743                           ;main.c: 469: 0b11111111 &
 26744                           ;main.c: 470: 0b11111111,
 26745                           ;main.c: 471: 21 );
 26746  000F84  6A20               	clrf	?_OpenUSART+1,c
 26747  000F86  0E15               	movlw	21
 26748  000F88  6E1F               	movwf	?_OpenUSART,c
 26749  000F8A  0E7C               	movlw	124
 26750  000F8C  EC58  F007         	call	_OpenUSART
 26751                           
 26752                           ;main.c: 475: RCIF = 0;
 26753  000F90  9A9E               	bcf	3998,5,c	;volatile
 26754                           
 26755                           ;main.c: 476: RCIP = 0;
 26756  000F92  9A9F               	bcf	3999,5,c	;volatile
 26757                           
 26758                           ;main.c: 477: RCIE = 1;
 26759  000F94  8A9D               	bsf	3997,5,c	;volatile
 26760                           
 26761                           ;main.c: 478: PEIE = 1;
 26762  000F96  8CF2               	bsf	intcon,6,c	;volatile
 26763                           
 26764                           ;main.c: 481: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110010);
 26765  000F98  0E92               	movlw	146
 26766  000F9A  ECA7  F004         	call	_OpenTimer0
 26767                           
 26768                           ;main.c: 482: WriteTimer0(0xfb1d);
 26769  000F9E  0EFB               	movlw	251
 26770  000FA0  6E20               	movwf	?_WriteTimer0+1,c
 26771  000FA2  0E1D               	movlw	29
 26772  000FA4  6E1F               	movwf	?_WriteTimer0,c
 26773  000FA6  EC53  F004         	call	_WriteTimer0	;wreg free
 26774                           
 26775                           ;main.c: 485: OpenTimer3( 0b11111101 & 0b11001111 & 0b11111111 & 0b11111111 & 0b01111111
      +                           );
 26776  000FAA  0E4D               	movlw	77
 26777  000FAC  ECD4  F004         	call	_OpenTimer3
 26778                           
 26779                           ;main.c: 486: WriteTimer3( 0x0000 );
 26780  000FB0  0E00               	movlw	0
 26781  000FB2  6A20               	clrf	?_WriteTimer3+1,c
 26782  000FB4  6A1F               	clrf	?_WriteTimer3,c
 26783  000FB6  EC65  F004         	call	_WriteTimer3	;wreg free
 26784                           
 26785                           ;main.c: 489: ECANInitialize();
 26786  000FBA  ECCA  F009         	call	_ECANInitialize	;wreg free
 26787                           
 26788                           ;main.c: 513: RXBnIE = 1;
 26789  000FBE  82A3               	bsf	4003,1,c	;volatile
 26790                           
 26791                           ;main.c: 514: ERRIE = 1;
 26792  000FC0  8AA3               	bsf	4003,5,c	;volatile
 26793                           
 26794                           ;main.c: 516: (INTCONbits.GIE = 1);
 26795  000FC2  8EF2               	bsf	intcon,7,c	;volatile
 26796  000FC4  0012               	return	
 26797  000FC6                     __end_of_init:
 26798                           	opt stack 0
 26799                           tblptru	equ	0xFF8
 26800                           tblptrh	equ	0xFF7
 26801                           tblptrl	equ	0xFF6
 26802                           tablat	equ	0xFF5
 26803                           prodh	equ	0xFF4
 26804                           prodl	equ	0xFF3
 26805                           intcon	equ	0xFF2
 26806                           indf0	equ	0xFEF
 26807                           postinc0	equ	0xFEE
 26808                           fsr0h	equ	0xFEA
 26809                           fsr0l	equ	0xFE9
 26810                           wreg	equ	0xFE8
 26811                           indf1	equ	0xFE7
 26812                           postinc1	equ	0xFE6
 26813                           postdec1	equ	0xFE5
 26814                           fsr1h	equ	0xFE2
 26815                           fsr1l	equ	0xFE1
 26816                           indf2	equ	0xFDF
 26817                           postinc2	equ	0xFDE
 26818                           postdec2	equ	0xFDD
 26819                           plusw2	equ	0xFDB
 26820                           fsr2h	equ	0xFDA
 26821                           fsr2l	equ	0xFD9
 26822                           status	equ	0xFD8
 26823                           
 26824 ;; *************** function _ECANInitialize *****************
 26825 ;; Defined at:
 26826 ;;		line 168 in file "ECAN.c"
 26827 ;; Parameters:    Size  Location     Type
 26828 ;;		None
 26829 ;; Auto vars:     Size  Location     Type
 26830 ;;		None
 26831 ;; Return value:  Size  Location     Type
 26832 ;;		None               void
 26833 ;; Registers used:
 26834 ;;		wreg, status,2, status,0, cstack
 26835 ;; Tracked objects:
 26836 ;;		On entry : 0/0
 26837 ;;		On exit  : 0/0
 26838 ;;		Unchanged: 0/0
 26839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26840 ;;      Params:         0       0       0       0       0       0       0
 26841 ;;      Locals:         0       0       0       0       0       0       0
 26842 ;;      Temps:          0       0       0       0       0       0       0
 26843 ;;      Totals:         0       0       0       0       0       0       0
 26844 ;;Total ram usage:        0 bytes
 26845 ;; Hardware stack levels used:    1
 26846 ;; Hardware stack levels required when called:    4
 26847 ;; This function calls:
 26848 ;;		_ECANSetOperationMode
 26849 ;; This function is called by:
 26850 ;;		_init
 26851 ;; This function uses a non-reentrant model
 26852 ;;
 26853                           
 26854                           	psect	text72
 26855  001394                     __ptext72:
 26856                           	opt stack 0
 26857  001394                     _ECANInitialize:
 26858                           	opt stack 24
 26859                           
 26860                           ;ECAN.c: 171: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 26861                           
 26862                           ;incstack = 0
 26863                           ;incstack = 0
 26864  001394  0E80               	movlw	128
 26865  001396  EC8C  F004         	call	_ECANSetOperationMode
 26866                           
 26867                           ;ECAN.c: 175: BRGCON1 = ((1-1) << 6) | (10-1);
 26868  00139A  0E09               	movlw	9
 26869  00139C  6E70               	movwf	3952,c	;volatile
 26870                           
 26871                           ;ECAN.c: 176: BRGCON2 = (1 << 7) | (1 << 6) | ((8-1) << 3) | (5-1);
 26872  00139E  0EFC               	movlw	252
 26873  0013A0  6E71               	movwf	3953,c	;volatile
 26874                           
 26875                           ;ECAN.c: 180: BRGCON3 = (0 << 7) |
 26876                           ;ECAN.c: 181: (0 << 6) |
 26877                           ;ECAN.c: 182: (2-1);
 26878  0013A2  0E01               	movlw	1
 26879  0013A4  6E72               	movwf	3954,c	;volatile
 26880                           
 26881                           ;ECAN.c: 185: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 0;
 26882  0013A6  0E20               	movlw	32
 26883  0013A8  6E73               	movwf	3955,c	;volatile
 26884                           
 26885                           ;ECAN.c: 192: MDSEL1 = 0x80 >> 7;
 26886  0013AA  8E77               	bsf	3959,7,c	;volatile
 26887                           
 26888                           ;ECAN.c: 193: MDSEL0 = 0x80 >> 6;
 26889  0013AC  9C77               	bcf	3959,6,c	;volatile
 26890                           
 26891                           ;ECAN.c: 205: RXB0CON = 0;
 26892  0013AE  6A60               	clrf	3936,c	;volatile
 26893                           
 26894                           ;ECAN.c: 211: RXB1CON = 0;
 26895  0013B0  010F               	movlb	15	; () banked
 26896  0013B2  6B50               	clrf	80,b	;volatile
 26897                           
 26898                           ; BSR set to: 15
 26899                           ;ECAN.c: 221: B0CON = 0;
 26900  0013B4  010E               	movlb	14	; () banked
 26901  0013B6  6B20               	clrf	32,b	;volatile
 26902                           
 26903                           ; BSR set to: 14
 26904                           ;ECAN.c: 231: B1CON = 0;
 26905  0013B8  6B30               	clrf	48,b	;volatile
 26906                           
 26907                           ; BSR set to: 14
 26908                           ;ECAN.c: 241: B2CON = 0;
 26909  0013BA  6B40               	clrf	64,b	;volatile
 26910                           
 26911                           ; BSR set to: 14
 26912                           ;ECAN.c: 251: B3CON = 0;
 26913  0013BC  6B50               	clrf	80,b	;volatile
 26914                           
 26915                           ; BSR set to: 14
 26916                           ;ECAN.c: 261: B4CON = 0;
 26917  0013BE  6B60               	clrf	96,b	;volatile
 26918                           
 26919                           ; BSR set to: 14
 26920                           ;ECAN.c: 271: B5CON = 0;
 26921  0013C0  6B70               	clrf	112,b	;volatile
 26922                           
 26923                           ; BSR set to: 14
 26924                           ;ECAN.c: 278: BSEL0 = 0 << 7 | 0 << 6 | 0 << 5 | 0 << 4 | 0 << 3 | 0 << 2;
 26925  0013C2  010D               	movlb	13	; () banked
 26926  0013C4  6BF8               	clrf	248,b	;volatile
 26927                           
 26928                           ; BSR set to: 13
 26929                           ;ECAN.c: 295: RXF0SIDH = (long)0x00000000L >> 21L;RXF0SIDL = (((long)0x00000000L >> 13L)
      +                           & 0xe0) | ((long)(0x00000000L) & 0x03L) | 0x08;RXF0EIDH = (long)0x00000000L >> 8L;RXF0E
      +                          IDL = 0x00000000L;;
 26930  0013C6  010F               	movlb	15	; () banked
 26931  0013C8  6B00               	clrf	0,b	;volatile
 26932                           
 26933                           ; BSR set to: 15
 26934  0013CA  0E08               	movlw	8
 26935  0013CC  6F01               	movwf	1,b	;volatile
 26936                           
 26937                           ; BSR set to: 15
 26938  0013CE  6B02               	clrf	2,b	;volatile
 26939                           
 26940                           ; BSR set to: 15
 26941  0013D0  6B03               	clrf	3,b	;volatile
 26942                           
 26943                           ; BSR set to: 15
 26944                           ;ECAN.c: 428: RXFCON0 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (1);
 26945  0013D2  0E01               	movlw	1
 26946  0013D4  010D               	movlb	13	; () banked
 26947  0013D6  6FD4               	movwf	212,b	;volatile
 26948                           
 26949                           ; BSR set to: 13
 26950                           ;ECAN.c: 436: RXFCON1 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (0);
 26951  0013D8  6BD5               	clrf	213,b	;volatile
 26952                           
 26953                           ; BSR set to: 13
 26954                           ;ECAN.c: 449: RXFBCON0 = (0 << 4) | 0;
 26955  0013DA  6BE0               	clrf	224,b	;volatile
 26956                           
 26957                           ; BSR set to: 13
 26958                           ;ECAN.c: 450: RXFBCON1 = (1 << 4) | 1;
 26959  0013DC  0E11               	movlw	17
 26960  0013DE  6FE1               	movwf	225,b	;volatile
 26961                           
 26962                           ; BSR set to: 13
 26963                           ;ECAN.c: 451: RXFBCON2 = (1 << 4) | 1;
 26964  0013E0  6FE2               	movwf	226,b	;volatile
 26965                           
 26966                           ; BSR set to: 13
 26967                           ;ECAN.c: 452: RXFBCON3 = (0 << 4) | 0;
 26968  0013E2  6BE3               	clrf	227,b	;volatile
 26969                           
 26970                           ; BSR set to: 13
 26971                           ;ECAN.c: 453: RXFBCON4 = (0 << 4) | 0;
 26972  0013E4  6BE4               	clrf	228,b	;volatile
 26973                           
 26974                           ; BSR set to: 13
 26975                           ;ECAN.c: 454: RXFBCON5 = (0 << 4) | 0;
 26976  0013E6  6BE5               	clrf	229,b	;volatile
 26977                           
 26978                           ; BSR set to: 13
 26979                           ;ECAN.c: 455: RXFBCON6 = (0 << 4) | 0;
 26980  0013E8  6BE6               	clrf	230,b	;volatile
 26981                           
 26982                           ; BSR set to: 13
 26983                           ;ECAN.c: 456: RXFBCON7 = (0 << 4) | 0;
 26984  0013EA  6BE7               	clrf	231,b	;volatile
 26985                           
 26986                           ; BSR set to: 13
 26987                           ;ECAN.c: 458: MSEL0 = 1 << 6 | 1 << 4 | 1 << 2 | 0;;
 26988  0013EC  0E54               	movlw	84
 26989  0013EE  6FF0               	movwf	240,b	;volatile
 26990                           
 26991                           ; BSR set to: 13
 26992                           ;ECAN.c: 462: MSEL1 = 0 << 6 | 0 << 4 | 1 << 2 | 1;;
 26993  0013F0  0E05               	movlw	5
 26994  0013F2  6FF1               	movwf	241,b	;volatile
 26995                           
 26996                           ; BSR set to: 13
 26997                           ;ECAN.c: 466: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 26998  0013F4  6BF2               	clrf	242,b	;volatile
 26999                           
 27000                           ; BSR set to: 13
 27001                           ;ECAN.c: 470: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 27002  0013F6  6BF2               	clrf	242,b	;volatile
 27003                           
 27004                           ; BSR set to: 13
 27005                           ;ECAN.c: 481: RXM0SIDH = (long)0x00000000L >> 21L; RXM0SIDL = (((long)0x00000000L >> 13L
      +                          ) & 0xe0) | ((long)(0x00000000L) & 0x03L); RXM0EIDH = (long)0x00000000L >> 8L; RXM0EIDL 
      +                          = 0x00000000L;;
 27006  0013F8  010F               	movlb	15	; () banked
 27007  0013FA  6B18               	clrf	24,b	;volatile
 27008                           
 27009                           ; BSR set to: 15
 27010  0013FC  6B19               	clrf	25,b	;volatile
 27011                           
 27012                           ; BSR set to: 15
 27013  0013FE  6B1A               	clrf	26,b	;volatile
 27014                           
 27015                           ; BSR set to: 15
 27016  001400  6B1B               	clrf	27,b	;volatile
 27017                           
 27018                           ; BSR set to: 15
 27019                           ;ECAN.c: 482: RXM0EXIDM = 1;
 27020  001402  8719               	bsf	25,3,b	;volatile
 27021                           
 27022                           ; BSR set to: 15
 27023                           ;ECAN.c: 489: RXM1SIDH = (long)0x00000000L >> 21L; RXM1SIDL = (((long)0x00000000L >> 13L
      +                          ) & 0xe0) | ((long)(0x00000000L) & 0x03L); RXM1EIDH = (long)0x00000000L >> 8L; RXM1EIDL 
      +                          = 0x00000000L;;
 27024  001404  6B1C               	clrf	28,b	;volatile
 27025                           
 27026                           ; BSR set to: 15
 27027  001406  6B1D               	clrf	29,b	;volatile
 27028                           
 27029                           ; BSR set to: 15
 27030  001408  6B1E               	clrf	30,b	;volatile
 27031                           
 27032                           ; BSR set to: 15
 27033  00140A  6B1F               	clrf	31,b	;volatile
 27034                           
 27035                           ; BSR set to: 15
 27036                           ;ECAN.c: 490: RXM1EXIDEN = 1;
 27037  00140C  871D               	bsf	29,3,b	;volatile
 27038                           
 27039                           ;ECAN.c: 498: ECANSetOperationMode(0x20);
 27040  00140E  0E20               	movlw	32
 27041  001410  EF8C  F004         	goto	_ECANSetOperationMode
 27042  001414                     __end_of_ECANInitialize:
 27043                           	opt stack 0
 27044                           tblptru	equ	0xFF8
 27045                           tblptrh	equ	0xFF7
 27046                           tblptrl	equ	0xFF6
 27047                           tablat	equ	0xFF5
 27048                           prodh	equ	0xFF4
 27049                           prodl	equ	0xFF3
 27050                           intcon	equ	0xFF2
 27051                           indf0	equ	0xFEF
 27052                           postinc0	equ	0xFEE
 27053                           fsr0h	equ	0xFEA
 27054                           fsr0l	equ	0xFE9
 27055                           wreg	equ	0xFE8
 27056                           indf1	equ	0xFE7
 27057                           postinc1	equ	0xFE6
 27058                           postdec1	equ	0xFE5
 27059                           fsr1h	equ	0xFE2
 27060                           fsr1l	equ	0xFE1
 27061                           indf2	equ	0xFDF
 27062                           postinc2	equ	0xFDE
 27063                           postdec2	equ	0xFDD
 27064                           plusw2	equ	0xFDB
 27065                           fsr2h	equ	0xFDA
 27066                           fsr2l	equ	0xFD9
 27067                           status	equ	0xFD8
 27068                           
 27069 ;; *************** function _WriteTimer3 *****************
 27070 ;; Defined at:
 27071 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t3write.c"
 27072 ;; Parameters:    Size  Location     Type
 27073 ;;  timer3          2   30[COMRAM] unsigned int 
 27074 ;; Auto vars:     Size  Location     Type
 27075 ;;  timer           2   32[COMRAM] struct Timers
 27076 ;; Return value:  Size  Location     Type
 27077 ;;		None               void
 27078 ;; Registers used:
 27079 ;;		None
 27080 ;; Tracked objects:
 27081 ;;		On entry : 0/0
 27082 ;;		On exit  : 0/0
 27083 ;;		Unchanged: 0/0
 27084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27085 ;;      Params:         2       0       0       0       0       0       0
 27086 ;;      Locals:         2       0       0       0       0       0       0
 27087 ;;      Temps:          0       0       0       0       0       0       0
 27088 ;;      Totals:         4       0       0       0       0       0       0
 27089 ;;Total ram usage:        4 bytes
 27090 ;; Hardware stack levels used:    1
 27091 ;; Hardware stack levels required when called:    3
 27092 ;; This function calls:
 27093 ;;		Nothing
 27094 ;; This function is called by:
 27095 ;;		_init
 27096 ;; This function uses a non-reentrant model
 27097 ;;
 27098                           
 27099                           	psect	text73
 27100  0008CA                     __ptext73:
 27101                           	opt stack 0
 27102  0008CA                     _WriteTimer3:
 27103                           	opt stack 25
 27104                           
 27105                           ;incstack = 0
 27106                           ;incstack = 0
 27107  0008CA  C01F  F021         	movff	WriteTimer3@timer3,WriteTimer3@timer
 27108  0008CE  C020  F022         	movff	WriteTimer3@timer3+1,WriteTimer3@timer+1
 27109  0008D2  C022  FFB3         	movff	WriteTimer3@timer+1,4019	;volatile
 27110  0008D6  C021  FFB2         	movff	WriteTimer3@timer,4018	;volatile
 27111  0008DA  0012               	return	
 27112  0008DC                     __end_of_WriteTimer3:
 27113                           	opt stack 0
 27114                           tblptru	equ	0xFF8
 27115                           tblptrh	equ	0xFF7
 27116                           tblptrl	equ	0xFF6
 27117                           tablat	equ	0xFF5
 27118                           prodh	equ	0xFF4
 27119                           prodl	equ	0xFF3
 27120                           intcon	equ	0xFF2
 27121                           indf0	equ	0xFEF
 27122                           postinc0	equ	0xFEE
 27123                           fsr0h	equ	0xFEA
 27124                           fsr0l	equ	0xFE9
 27125                           wreg	equ	0xFE8
 27126                           indf1	equ	0xFE7
 27127                           postinc1	equ	0xFE6
 27128                           postdec1	equ	0xFE5
 27129                           fsr1h	equ	0xFE2
 27130                           fsr1l	equ	0xFE1
 27131                           indf2	equ	0xFDF
 27132                           postinc2	equ	0xFDE
 27133                           postdec2	equ	0xFDD
 27134                           plusw2	equ	0xFDB
 27135                           fsr2h	equ	0xFDA
 27136                           fsr2l	equ	0xFD9
 27137                           status	equ	0xFD8
 27138                           
 27139 ;; *************** function _OpenTimer3 *****************
 27140 ;; Defined at:
 27141 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t3open.c"
 27142 ;; Parameters:    Size  Location     Type
 27143 ;;  config          1    wreg     unsigned char 
 27144 ;; Auto vars:     Size  Location     Type
 27145 ;;  config          1   30[COMRAM] unsigned char 
 27146 ;; Return value:  Size  Location     Type
 27147 ;;		None               void
 27148 ;; Registers used:
 27149 ;;		wreg, status,2, status,0
 27150 ;; Tracked objects:
 27151 ;;		On entry : 0/0
 27152 ;;		On exit  : 0/0
 27153 ;;		Unchanged: 0/0
 27154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27155 ;;      Params:         0       0       0       0       0       0       0
 27156 ;;      Locals:         1       0       0       0       0       0       0
 27157 ;;      Temps:          0       0       0       0       0       0       0
 27158 ;;      Totals:         1       0       0       0       0       0       0
 27159 ;;Total ram usage:        1 bytes
 27160 ;; Hardware stack levels used:    1
 27161 ;; Hardware stack levels required when called:    3
 27162 ;; This function calls:
 27163 ;;		Nothing
 27164 ;; This function is called by:
 27165 ;;		_init
 27166 ;; This function uses a non-reentrant model
 27167 ;;
 27168                           
 27169                           	psect	text74
 27170  0009A8                     __ptext74:
 27171                           	opt stack 0
 27172  0009A8                     _OpenTimer3:
 27173                           	opt stack 25
 27174                           
 27175                           ;incstack = 0
 27176                           ;incstack = 0
 27177                           ;OpenTimer3@config stored from wreg
 27178  0009A8  CFE8 F01F          	movff	wreg,OpenTimer3@config
 27179  0009AC  501F               	movf	OpenTimer3@config,w,c
 27180  0009AE  0B36               	andlw	54
 27181  0009B0  6EB1               	movwf	4017,c	;volatile
 27182  0009B2  6AB3               	clrf	4019,c	;volatile
 27183  0009B4  6AB2               	clrf	4018,c	;volatile
 27184  0009B6  92A1               	bcf	4001,1,c	;volatile
 27185  0009B8  AE1F               	btfss	OpenTimer3@config,7,c
 27186  0009BA  D002               	goto	l1966
 27187  0009BC  82A0               	bsf	4000,1,c	;volatile
 27188  0009BE  D001               	goto	l1967
 27189  0009C0                     l1966:
 27190  0009C0  92A0               	bcf	4000,1,c	;volatile
 27191  0009C2                     l1967:
 27192  0009C2  A01F               	btfss	OpenTimer3@config,0,c
 27193  0009C4  D002               	goto	l1968
 27194  0009C6  8EB1               	bsf	4017,7,c	;volatile
 27195  0009C8  D001               	goto	l1969
 27196  0009CA                     l1968:
 27197  0009CA  9EB1               	bcf	4017,7,c	;volatile
 27198  0009CC                     l1969:
 27199  0009CC  80B1               	bsf	4017,0,c	;volatile
 27200  0009CE  0012               	return	
 27201  0009D0                     __end_of_OpenTimer3:
 27202                           	opt stack 0
 27203                           tblptru	equ	0xFF8
 27204                           tblptrh	equ	0xFF7
 27205                           tblptrl	equ	0xFF6
 27206                           tablat	equ	0xFF5
 27207                           prodh	equ	0xFF4
 27208                           prodl	equ	0xFF3
 27209                           intcon	equ	0xFF2
 27210                           indf0	equ	0xFEF
 27211                           postinc0	equ	0xFEE
 27212                           fsr0h	equ	0xFEA
 27213                           fsr0l	equ	0xFE9
 27214                           wreg	equ	0xFE8
 27215                           indf1	equ	0xFE7
 27216                           postinc1	equ	0xFE6
 27217                           postdec1	equ	0xFE5
 27218                           fsr1h	equ	0xFE2
 27219                           fsr1l	equ	0xFE1
 27220                           indf2	equ	0xFDF
 27221                           postinc2	equ	0xFDE
 27222                           postdec2	equ	0xFDD
 27223                           plusw2	equ	0xFDB
 27224                           fsr2h	equ	0xFDA
 27225                           fsr2l	equ	0xFD9
 27226                           status	equ	0xFD8
 27227                           
 27228 ;; *************** function _OpenTimer0 *****************
 27229 ;; Defined at:
 27230 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 27231 ;; Parameters:    Size  Location     Type
 27232 ;;  config          1    wreg     unsigned char 
 27233 ;; Auto vars:     Size  Location     Type
 27234 ;;  config          1   30[COMRAM] unsigned char 
 27235 ;; Return value:  Size  Location     Type
 27236 ;;		None               void
 27237 ;; Registers used:
 27238 ;;		wreg, status,2, status,0
 27239 ;; Tracked objects:
 27240 ;;		On entry : 0/0
 27241 ;;		On exit  : 0/0
 27242 ;;		Unchanged: 0/0
 27243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27244 ;;      Params:         0       0       0       0       0       0       0
 27245 ;;      Locals:         1       0       0       0       0       0       0
 27246 ;;      Temps:          0       0       0       0       0       0       0
 27247 ;;      Totals:         1       0       0       0       0       0       0
 27248 ;;Total ram usage:        1 bytes
 27249 ;; Hardware stack levels used:    1
 27250 ;; Hardware stack levels required when called:    3
 27251 ;; This function calls:
 27252 ;;		Nothing
 27253 ;; This function is called by:
 27254 ;;		_init
 27255 ;; This function uses a non-reentrant model
 27256 ;;
 27257                           
 27258                           	psect	text75
 27259  00094E                     __ptext75:
 27260                           	opt stack 0
 27261  00094E                     _OpenTimer0:
 27262                           	opt stack 25
 27263                           
 27264                           ;incstack = 0
 27265                           ;incstack = 0
 27266                           ;OpenTimer0@config stored from wreg
 27267  00094E  CFE8 F01F          	movff	wreg,OpenTimer0@config
 27268  000952  501F               	movf	OpenTimer0@config,w,c
 27269  000954  0B7F               	andlw	127
 27270  000956  6ED5               	movwf	4053,c	;volatile
 27271  000958  6AD7               	clrf	4055,c	;volatile
 27272  00095A  6AD6               	clrf	4054,c	;volatile
 27273  00095C  94F2               	bcf	intcon,2,c	;volatile
 27274  00095E  AE1F               	btfss	OpenTimer0@config,7,c
 27275  000960  D002               	goto	l1942
 27276  000962  8AF2               	bsf	intcon,5,c	;volatile
 27277  000964  D001               	goto	l1943
 27278  000966                     l1942:
 27279  000966  9AF2               	bcf	intcon,5,c	;volatile
 27280  000968                     l1943:
 27281  000968  8ED5               	bsf	4053,7,c	;volatile
 27282  00096A  0012               	return	
 27283  00096C                     __end_of_OpenTimer0:
 27284                           	opt stack 0
 27285                           tblptru	equ	0xFF8
 27286                           tblptrh	equ	0xFF7
 27287                           tblptrl	equ	0xFF6
 27288                           tablat	equ	0xFF5
 27289                           prodh	equ	0xFF4
 27290                           prodl	equ	0xFF3
 27291                           intcon	equ	0xFF2
 27292                           indf0	equ	0xFEF
 27293                           postinc0	equ	0xFEE
 27294                           fsr0h	equ	0xFEA
 27295                           fsr0l	equ	0xFE9
 27296                           wreg	equ	0xFE8
 27297                           indf1	equ	0xFE7
 27298                           postinc1	equ	0xFE6
 27299                           postdec1	equ	0xFE5
 27300                           fsr1h	equ	0xFE2
 27301                           fsr1l	equ	0xFE1
 27302                           indf2	equ	0xFDF
 27303                           postinc2	equ	0xFDE
 27304                           postdec2	equ	0xFDD
 27305                           plusw2	equ	0xFDB
 27306                           fsr2h	equ	0xFDA
 27307                           fsr2l	equ	0xFD9
 27308                           status	equ	0xFD8
 27309                           
 27310 ;; *************** function _OpenUSART *****************
 27311 ;; Defined at:
 27312 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
 27313 ;; Parameters:    Size  Location     Type
 27314 ;;  config          1    wreg     unsigned char 
 27315 ;;  spbrg           2   30[COMRAM] unsigned int 
 27316 ;; Auto vars:     Size  Location     Type
 27317 ;;  config          1   32[COMRAM] unsigned char 
 27318 ;; Return value:  Size  Location     Type
 27319 ;;		None               void
 27320 ;; Registers used:
 27321 ;;		wreg, status,2
 27322 ;; Tracked objects:
 27323 ;;		On entry : 0/2
 27324 ;;		On exit  : 0/0
 27325 ;;		Unchanged: 0/0
 27326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27327 ;;      Params:         2       0       0       0       0       0       0
 27328 ;;      Locals:         1       0       0       0       0       0       0
 27329 ;;      Temps:          0       0       0       0       0       0       0
 27330 ;;      Totals:         3       0       0       0       0       0       0
 27331 ;;Total ram usage:        3 bytes
 27332 ;; Hardware stack levels used:    1
 27333 ;; Hardware stack levels required when called:    3
 27334 ;; This function calls:
 27335 ;;		Nothing
 27336 ;; This function is called by:
 27337 ;;		_init
 27338 ;;		_doModeVerbose
 27339 ;; This function uses a non-reentrant model
 27340 ;;
 27341                           
 27342                           	psect	text76
 27343  000EB0                     __ptext76:
 27344                           	opt stack 0
 27345  000EB0                     _OpenUSART:
 27346                           	opt stack 25
 27347                           
 27348                           ;incstack = 0
 27349                           ;incstack = 0
 27350                           ;OpenUSART@config stored from wreg
 27351  000EB0  CFE8 F021          	movff	wreg,OpenUSART@config
 27352  000EB4  6AAC               	clrf	4012,c	;volatile
 27353  000EB6  6AAB               	clrf	4011,c	;volatile
 27354  000EB8  B021               	btfsc	OpenUSART@config,0,c
 27355  000EBA  88AC               	bsf	4012,4,c	;volatile
 27356  000EBC  A221               	btfss	OpenUSART@config,1,c
 27357  000EBE  D002               	goto	l16913
 27358  000EC0  8CAC               	bsf	4012,6,c	;volatile
 27359  000EC2  8CAB               	bsf	4011,6,c	;volatile
 27360  000EC4                     l16913:
 27361  000EC4  B421               	btfsc	OpenUSART@config,2,c
 27362  000EC6  8EAC               	bsf	4012,7,c	;volatile
 27363  000EC8  A621               	btfss	OpenUSART@config,3,c
 27364  000ECA  D002               	goto	l2008
 27365  000ECC  88AB               	bsf	4011,4,c	;volatile
 27366  000ECE  D001               	goto	l16921
 27367  000ED0                     l2008:
 27368  000ED0  8AAB               	bsf	4011,5,c	;volatile
 27369  000ED2                     l16921:
 27370  000ED2  B821               	btfsc	OpenUSART@config,4,c
 27371  000ED4  84AC               	bsf	4012,2,c	;volatile
 27372  000ED6  989E               	bcf	3998,4,c	;volatile
 27373  000ED8  BA21               	btfsc	OpenUSART@config,5,c
 27374  000EDA  86AB               	bsf	4011,3,c	;volatile
 27375  000EDC  AC21               	btfss	OpenUSART@config,6,c
 27376  000EDE  D002               	goto	l2012
 27377  000EE0  8A9D               	bsf	3997,5,c	;volatile
 27378  000EE2  D001               	goto	l2013
 27379  000EE4                     l2012:
 27380  000EE4  9A9D               	bcf	3997,5,c	;volatile
 27381  000EE6                     l2013:
 27382  000EE6  9A9E               	bcf	3998,5,c	;volatile
 27383  000EE8  AE21               	btfss	OpenUSART@config,7,c
 27384  000EEA  D002               	goto	l2014
 27385  000EEC  889D               	bsf	3997,4,c	;volatile
 27386  000EEE  D001               	goto	l2015
 27387  000EF0                     l2014:
 27388  000EF0  989D               	bcf	3997,4,c	;volatile
 27389  000EF2                     l2015:
 27390  000EF2  C01F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 27391  000EF6  5020               	movf	OpenUSART@spbrg+1,w,c
 27392  000EF8  6EB0               	movwf	4016,c	;volatile
 27393  000EFA  8AAC               	bsf	4012,5,c	;volatile
 27394  000EFC  8EAB               	bsf	4011,7,c	;volatile
 27395  000EFE  9C94               	bcf	3988,6,c	;volatile
 27396  000F00  8E94               	bsf	3988,7,c	;volatile
 27397  000F02  B8AC               	btfsc	4012,4,c	;volatile
 27398  000F04  BEAC               	btfsc	4012,7,c	;volatile
 27399  000F06  D001               	goto	l2017
 27400  000F08  8C94               	bsf	3988,6,c	;volatile
 27401  000F0A                     l2017:
 27402  000F0A  0012               	return	
 27403  000F0C                     __end_of_OpenUSART:
 27404                           	opt stack 0
 27405                           tblptru	equ	0xFF8
 27406                           tblptrh	equ	0xFF7
 27407                           tblptrl	equ	0xFF6
 27408                           tablat	equ	0xFF5
 27409                           prodh	equ	0xFF4
 27410                           prodl	equ	0xFF3
 27411                           intcon	equ	0xFF2
 27412                           indf0	equ	0xFEF
 27413                           postinc0	equ	0xFEE
 27414                           fsr0h	equ	0xFEA
 27415                           fsr0l	equ	0xFE9
 27416                           wreg	equ	0xFE8
 27417                           indf1	equ	0xFE7
 27418                           postinc1	equ	0xFE6
 27419                           postdec1	equ	0xFE5
 27420                           fsr1h	equ	0xFE2
 27421                           fsr1l	equ	0xFE1
 27422                           indf2	equ	0xFDF
 27423                           postinc2	equ	0xFDE
 27424                           postdec2	equ	0xFDD
 27425                           plusw2	equ	0xFDB
 27426                           fsr2h	equ	0xFDA
 27427                           fsr2l	equ	0xFD9
 27428                           status	equ	0xFD8
 27429                           
 27430 ;; *************** function _init_app_ram *****************
 27431 ;; Defined at:
 27432 ;;		line 525 in file "main.c"
 27433 ;; Parameters:    Size  Location     Type
 27434 ;;		None
 27435 ;; Auto vars:     Size  Location     Type
 27436 ;;  i               1   36[BANK0 ] unsigned char 
 27437 ;; Return value:  Size  Location     Type
 27438 ;;		None               void
 27439 ;; Registers used:
 27440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27441 ;; Tracked objects:
 27442 ;;		On entry : 0/0
 27443 ;;		On exit  : 0/0
 27444 ;;		Unchanged: 0/0
 27445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27446 ;;      Params:         0       0       0       0       0       0       0
 27447 ;;      Locals:         0       1       0       0       0       0       0
 27448 ;;      Temps:          0      25       0       0       0       0       0
 27449 ;;      Totals:         0      26       0       0       0       0       0
 27450 ;;Total ram usage:       26 bytes
 27451 ;; Hardware stack levels used:    1
 27452 ;; Hardware stack levels required when called:    5
 27453 ;; This function calls:
 27454 ;;		_Read_b_eep
 27455 ;;		_ECANSetOperationMode
 27456 ;;		_setFilter
 27457 ;;		__CANIDToRegs
 27458 ;; This function is called by:
 27459 ;;		_init
 27460 ;;		_vscp_restoreDefaults
 27461 ;; This function uses a non-reentrant model
 27462 ;;
 27463                           
 27464                           	psect	text77
 27465  003E26                     __ptext77:
 27466                           	opt stack 0
 27467  003E26                     _init_app_ram:
 27468                           	opt stack 22
 27469                           
 27470                           ;main.c: 527: can_receiveOverruns = 0;
 27471                           
 27472                           ;incstack = 0
 27473                           ;incstack = 0
 27474  003E26  0100               	movlb	0	; () banked
 27475  003E28  6BC1               	clrf	_can_receiveOverruns& (0+255),b
 27476  003E2A  6BC2               	clrf	(_can_receiveOverruns+1)& (0+255),b
 27477  003E2C  6BC3               	clrf	(_can_receiveOverruns+2)& (0+255),b
 27478  003E2E  6BC4               	clrf	(_can_receiveOverruns+3)& (0+255),b
 27479                           
 27480                           ;main.c: 528: can_transmitOverruns = 0;
 27481  003E30  6BC5               	clrf	_can_transmitOverruns& (0+255),b
 27482  003E32  6BC6               	clrf	(_can_transmitOverruns+1)& (0+255),b
 27483  003E34  6BC7               	clrf	(_can_transmitOverruns+2)& (0+255),b
 27484  003E36  6BC8               	clrf	(_can_transmitOverruns+3)& (0+255),b
 27485                           
 27486                           ;main.c: 529: uart_receiveOverruns = 0;
 27487  003E38  6BE1               	clrf	_uart_receiveOverruns& (0+255),b
 27488  003E3A  6BE2               	clrf	(_uart_receiveOverruns+1)& (0+255),b
 27489  003E3C  6BE3               	clrf	(_uart_receiveOverruns+2)& (0+255),b
 27490  003E3E  6BE4               	clrf	(_uart_receiveOverruns+3)& (0+255),b
 27491                           
 27492                           ;main.c: 530: uart_transmitOverruns = 0;
 27493  003E40  6BE5               	clrf	_uart_transmitOverruns& (0+255),b
 27494  003E42  6BE6               	clrf	(_uart_transmitOverruns+1)& (0+255),b
 27495  003E44  6BE7               	clrf	(_uart_transmitOverruns+2)& (0+255),b
 27496  003E46  6BE8               	clrf	(_uart_transmitOverruns+3)& (0+255),b
 27497                           
 27498                           ;main.c: 531: timer = 0;
 27499  003E48  6BDD               	clrf	_timer& (0+255),b	;volatile
 27500  003E4A  6BDE               	clrf	(_timer+1)& (0+255),b	;volatile
 27501  003E4C  6BDF               	clrf	(_timer+2)& (0+255),b	;volatile
 27502  003E4E  6BE0               	clrf	(_timer+3)& (0+255),b	;volatile
 27503                           
 27504                           ; BSR set to: 0
 27505                           ;main.c: 533: bHex = Read_b_eep(0x06);
 27506  003E50  6A20               	clrf	?_Read_b_eep+1,c
 27507  003E52  0E06               	movlw	6
 27508  003E54  6E1F               	movwf	?_Read_b_eep,c
 27509  003E56  EC5C  F004         	call	_Read_b_eep	;wreg free
 27510  003E5A  0101               	movlb	1	; () banked
 27511  003E5C  6F00               	movwf	_bHex& (0+255),b
 27512                           
 27513                           ;main.c: 534: mode = Read_b_eep(0x03);
 27514  003E5E  6A20               	clrf	?_Read_b_eep+1,c
 27515  003E60  0E03               	movlw	3
 27516  003E62  6E1F               	movwf	?_Read_b_eep,c
 27517  003E64  EC5C  F004         	call	_Read_b_eep	;wreg free
 27518  003E68  0100               	movlb	0	; () banked
 27519  003E6A  6FEC               	movwf	_mode& (0+255),b
 27520                           
 27521                           ;main.c: 535: bLocalEcho = Read_b_eep(0x65);
 27522  003E6C  6A20               	clrf	?_Read_b_eep+1,c
 27523  003E6E  0E65               	movlw	101
 27524  003E70  6E1F               	movwf	?_Read_b_eep,c
 27525  003E72  EC5C  F004         	call	_Read_b_eep	;wreg free
 27526  003E76  0101               	movlb	1	; () banked
 27527  003E78  6F01               	movwf	_bLocalEcho& (0+255),b
 27528                           
 27529                           ;main.c: 536: bTimestamp = Read_b_eep(0x66);
 27530  003E7A  6A20               	clrf	?_Read_b_eep+1,c
 27531  003E7C  0E66               	movlw	102
 27532  003E7E  6E1F               	movwf	?_Read_b_eep,c
 27533  003E80  EC5C  F004         	call	_Read_b_eep	;wreg free
 27534  003E84  0100               	movlb	0	; () banked
 27535  003E86  6FEB               	movwf	_bTimestamp& (0+255),b
 27536                           
 27537                           ;main.c: 538: rwtimeout = Read_b_eep(0x09);
 27538  003E88  6A20               	clrf	?_Read_b_eep+1,c
 27539  003E8A  0E09               	movlw	9
 27540  003E8C  6E1F               	movwf	?_Read_b_eep,c
 27541  003E8E  EC5C  F004         	call	_Read_b_eep	;wreg free
 27542  003E92  0101               	movlb	1	; () banked
 27543  003E94  6F04               	movwf	_rwtimeout& (0+255),b
 27544                           
 27545                           ; BSR set to: 1
 27546                           ;main.c: 543: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 27547  003E96  0E80               	movlw	128
 27548  003E98  EC8C  F004         	call	_ECANSetOperationMode
 27549                           
 27550                           ;main.c: 545: for (uint8_t i=0; i<15; i++ ) {
 27551  003E9C  0100               	movlb	0	; () banked
 27552  003E9E  6B84               	clrf	init_app_ram@i& (0+255),b
 27553  003EA0                     l16893:
 27554                           
 27555                           ; BSR set to: 0
 27556                           ;main.c: 546: setFilter( i,
 27557                           ;main.c: 547: ((uint32_t)( Read_b_eep(0x20 + i*4)) << 24 ) +
 27558                           ;main.c: 548: ((uint32_t)( Read_b_eep(0x20 + 1 + i*4)) << 16 ) +
 27559                           ;main.c: 549: ((uint32_t)( Read_b_eep(0x20 + 2 + i*4)) << 8 ) +
 27560                           ;main.c: 550: ((uint32_t)( Read_b_eep(0x20 + 3 + i*4)) ), 0 );
 27561  003EA0  5184               	movf	init_app_ram@i& (0+255),w,b
 27562  003EA2  6F6B               	movwf	??_init_app_ram& (0+255),b
 27563  003EA4  6B6C               	clrf	(??_init_app_ram+1)& (0+255),b
 27564  003EA6  90D8               	bcf	status,0,c
 27565  003EA8  376B               	rlcf	??_init_app_ram& (0+255),f,b
 27566  003EAA  376C               	rlcf	(??_init_app_ram+1)& (0+255),f,b
 27567  003EAC  90D8               	bcf	status,0,c
 27568  003EAE  376B               	rlcf	??_init_app_ram& (0+255),f,b
 27569  003EB0  376C               	rlcf	(??_init_app_ram+1)& (0+255),f,b
 27570  003EB2  0E22               	movlw	34
 27571  003EB4  256B               	addwf	??_init_app_ram& (0+255),w,b
 27572  003EB6  6E1F               	movwf	?_Read_b_eep,c
 27573  003EB8  0E00               	movlw	0
 27574  003EBA  216C               	addwfc	(??_init_app_ram+1)& (0+255),w,b
 27575  003EBC  6E20               	movwf	?_Read_b_eep+1,c
 27576  003EBE  EC5C  F004         	call	_Read_b_eep	;wreg free
 27577  003EC2  0100               	movlb	0	; () banked
 27578  003EC4  6F6D               	movwf	(??_init_app_ram+2)& (0+255),b
 27579  003EC6  C06D  F06E         	movff	??_init_app_ram+2,??_init_app_ram+3
 27580  003ECA  6B6F               	clrf	(??_init_app_ram+4)& (0+255),b
 27581  003ECC  6B70               	clrf	(??_init_app_ram+5)& (0+255),b
 27582  003ECE  6B71               	clrf	(??_init_app_ram+6)& (0+255),b
 27583  003ED0  C070  F071         	movff	??_init_app_ram+5,??_init_app_ram+6
 27584  003ED4  C06F  F070         	movff	??_init_app_ram+4,??_init_app_ram+5
 27585  003ED8  C06E  F06F         	movff	??_init_app_ram+3,??_init_app_ram+4
 27586  003EDC  6B6E               	clrf	(??_init_app_ram+3)& (0+255),b
 27587  003EDE  5184               	movf	init_app_ram@i& (0+255),w,b
 27588  003EE0  0D04               	mullw	4
 27589  003EE2  0E21               	movlw	33
 27590  003EE4  24F3               	addwf	prodl,w,c
 27591  003EE6  6E1F               	movwf	?_Read_b_eep,c
 27592  003EE8  0E00               	movlw	0
 27593  003EEA  20F4               	addwfc	prodh,w,c
 27594  003EEC  6E20               	movwf	?_Read_b_eep+1,c
 27595  003EEE  EC5C  F004         	call	_Read_b_eep	;wreg free
 27596  003EF2  0100               	movlb	0	; () banked
 27597  003EF4  6F72               	movwf	(??_init_app_ram+7)& (0+255),b
 27598  003EF6  C072  F073         	movff	??_init_app_ram+7,??_init_app_ram+8
 27599  003EFA  6B74               	clrf	(??_init_app_ram+9)& (0+255),b
 27600  003EFC  6B75               	clrf	(??_init_app_ram+10)& (0+255),b
 27601  003EFE  6B76               	clrf	(??_init_app_ram+11)& (0+255),b
 27602  003F00  C074  F076         	movff	??_init_app_ram+9,??_init_app_ram+11
 27603  003F04  C073  F075         	movff	??_init_app_ram+8,??_init_app_ram+10
 27604  003F08  6B74               	clrf	(??_init_app_ram+9)& (0+255),b
 27605  003F0A  6B73               	clrf	(??_init_app_ram+8)& (0+255),b
 27606  003F0C  5184               	movf	init_app_ram@i& (0+255),w,b
 27607  003F0E  0D04               	mullw	4
 27608  003F10  0E20               	movlw	32
 27609  003F12  24F3               	addwf	prodl,w,c
 27610  003F14  6E1F               	movwf	?_Read_b_eep,c
 27611  003F16  0E00               	movlw	0
 27612  003F18  20F4               	addwfc	prodh,w,c
 27613  003F1A  6E20               	movwf	?_Read_b_eep+1,c
 27614  003F1C  EC5C  F004         	call	_Read_b_eep	;wreg free
 27615  003F20  0100               	movlb	0	; () banked
 27616  003F22  6F77               	movwf	(??_init_app_ram+12)& (0+255),b
 27617  003F24  C077  F078         	movff	??_init_app_ram+12,??_init_app_ram+13
 27618  003F28  6B79               	clrf	(??_init_app_ram+14)& (0+255),b
 27619  003F2A  6B7A               	clrf	(??_init_app_ram+15)& (0+255),b
 27620  003F2C  6B7B               	clrf	(??_init_app_ram+16)& (0+255),b
 27621  003F2E  C078  F07B         	movff	??_init_app_ram+13,??_init_app_ram+16
 27622  003F32  6B7A               	clrf	(??_init_app_ram+15)& (0+255),b
 27623  003F34  6B79               	clrf	(??_init_app_ram+14)& (0+255),b
 27624  003F36  6B78               	clrf	(??_init_app_ram+13)& (0+255),b
 27625  003F38  5173               	movf	(??_init_app_ram+8)& (0+255),w,b
 27626  003F3A  2578               	addwf	(??_init_app_ram+13)& (0+255),w,b
 27627  003F3C  6F7C               	movwf	(??_init_app_ram+17)& (0+255),b
 27628  003F3E  5174               	movf	(??_init_app_ram+9)& (0+255),w,b
 27629  003F40  2179               	addwfc	(??_init_app_ram+14)& (0+255),w,b
 27630  003F42  6F7D               	movwf	(??_init_app_ram+18)& (0+255),b
 27631  003F44  5175               	movf	(??_init_app_ram+10)& (0+255),w,b
 27632  003F46  217A               	addwfc	(??_init_app_ram+15)& (0+255),w,b
 27633  003F48  6F7E               	movwf	(??_init_app_ram+19)& (0+255),b
 27634  003F4A  5176               	movf	(??_init_app_ram+11)& (0+255),w,b
 27635  003F4C  217B               	addwfc	(??_init_app_ram+16)& (0+255),w,b
 27636  003F4E  6F7F               	movwf	(??_init_app_ram+20)& (0+255),b
 27637  003F50  516E               	movf	(??_init_app_ram+3)& (0+255),w,b
 27638  003F52  257C               	addwf	(??_init_app_ram+17)& (0+255),w,b
 27639  003F54  6F80               	movwf	(??_init_app_ram+21)& (0+255),b
 27640  003F56  516F               	movf	(??_init_app_ram+4)& (0+255),w,b
 27641  003F58  217D               	addwfc	(??_init_app_ram+18)& (0+255),w,b
 27642  003F5A  6F81               	movwf	(??_init_app_ram+22)& (0+255),b
 27643  003F5C  5170               	movf	(??_init_app_ram+5)& (0+255),w,b
 27644  003F5E  217E               	addwfc	(??_init_app_ram+19)& (0+255),w,b
 27645  003F60  6F82               	movwf	(??_init_app_ram+23)& (0+255),b
 27646  003F62  5171               	movf	(??_init_app_ram+6)& (0+255),w,b
 27647  003F64  217F               	addwfc	(??_init_app_ram+20)& (0+255),w,b
 27648  003F66  6F83               	movwf	(??_init_app_ram+24)& (0+255),b
 27649  003F68  5184               	movf	init_app_ram@i& (0+255),w,b
 27650  003F6A  0D04               	mullw	4
 27651  003F6C  0E23               	movlw	35
 27652  003F6E  24F3               	addwf	prodl,w,c
 27653  003F70  6E1F               	movwf	?_Read_b_eep,c
 27654  003F72  0E00               	movlw	0
 27655  003F74  20F4               	addwfc	prodh,w,c
 27656  003F76  6E20               	movwf	?_Read_b_eep+1,c
 27657  003F78  EC5C  F004         	call	_Read_b_eep	;wreg free
 27658  003F7C  0100               	movlb	0	; () banked
 27659  003F7E  2580               	addwf	(??_init_app_ram+21)& (0+255),w,b
 27660  003F80  6E23               	movwf	?_setFilter,c
 27661  003F82  0E00               	movlw	0
 27662  003F84  2181               	addwfc	(??_init_app_ram+22)& (0+255),w,b
 27663  003F86  6E24               	movwf	?_setFilter+1,c
 27664  003F88  0E00               	movlw	0
 27665  003F8A  2182               	addwfc	(??_init_app_ram+23)& (0+255),w,b
 27666  003F8C  6E25               	movwf	?_setFilter+2,c
 27667  003F8E  0E00               	movlw	0
 27668  003F90  2183               	addwfc	(??_init_app_ram+24)& (0+255),w,b
 27669  003F92  6E26               	movwf	?_setFilter+3,c
 27670  003F94  6A27               	clrf	?_setFilter+4,c
 27671  003F96  5184               	movf	init_app_ram@i& (0+255),w,b
 27672  003F98  ECAC  F01C         	call	_setFilter
 27673  003F9C  0100               	movlb	0	; () banked
 27674  003F9E  2B84               	incf	init_app_ram@i& (0+255),f,b
 27675                           
 27676                           ; BSR set to: 0
 27677  003FA0  0E0E               	movlw	14
 27678  003FA2  6584               	cpfsgt	init_app_ram@i& (0+255),b
 27679  003FA4  D77D               	goto	l16893
 27680                           
 27681                           ; BSR set to: 0
 27682                           ;main.c: 551: }
 27683                           ;main.c: 553: _CANIDToRegs((BYTE*)&RXM0SIDH, ((uint32_t)( Read_b_eep(0x60)) << 24 ) + ((
      +                          uint32_t)( Read_b_eep(0x60 + 1)) << 16 ) + ((uint32_t)( Read_b_eep(0x60 + 2)) << 8 ) + (
      +                          ( Read_b_eep(0x60 + 3)) ), 1);
 27684  003FA6  010F               	movlb	15	; () banked
 27685  003FA8  0E0F               	movlw	15	;volatile
 27686  003FAA  6E22               	movwf	?__CANIDToRegs+1,c
 27687  003FAC  0E18               	movlw	24	;volatile
 27688  003FAE  6E21               	movwf	?__CANIDToRegs,c
 27689  003FB0  6A20               	clrf	?_Read_b_eep+1,c
 27690  003FB2  0E62               	movlw	98
 27691  003FB4  6E1F               	movwf	?_Read_b_eep,c
 27692  003FB6  EC5C  F004         	call	_Read_b_eep	;wreg free
 27693  003FBA  D856               	call	PL38	;call to abstracted procedure
 27694  003FBC  0E61               	movlw	97
 27695  003FBE  6E1F               	movwf	?_Read_b_eep,c
 27696  003FC0  EC5C  F004         	call	_Read_b_eep	;wreg free
 27697  003FC4  D870               	call	PL42	;call to abstracted procedure
 27698  003FC6  0E60               	movlw	96
 27699  003FC8  6E1F               	movwf	?_Read_b_eep,c
 27700  003FCA  EC5C  F004         	call	_Read_b_eep	;wreg free
 27701  003FCE  D826               	call	PL10	;call to abstracted procedure
 27702  003FD0  0E63               	movlw	99
 27703  003FD2  6E1F               	movwf	?_Read_b_eep,c
 27704  003FD4  EC5C  F004         	call	_Read_b_eep	;wreg free
 27705  003FD8  D857               	call	PL40	;call to abstracted procedure
 27706  003FDA  EC75  F013         	call	__CANIDToRegs	;wreg free
 27707                           
 27708                           ;main.c: 559: _CANIDToRegs((BYTE*)&RXM1SIDH, ((uint32_t)( Read_b_eep(0x64)) << 24 ) + ((
      +                          uint32_t)( Read_b_eep(0x64 + 1)) << 16 ) + ((uint32_t)( Read_b_eep(0x64 + 2)) << 8 ) + (
      +                          (uint32_t)( Read_b_eep(0x64 + 3)) ), 1);
 27709  003FDE  010F               	movlb	15	; () banked
 27710  003FE0  0E0F               	movlw	15	;volatile
 27711  003FE2  6E22               	movwf	?__CANIDToRegs+1,c
 27712  003FE4  0E1C               	movlw	28	;volatile
 27713  003FE6  6E21               	movwf	?__CANIDToRegs,c
 27714  003FE8  6A20               	clrf	?_Read_b_eep+1,c
 27715  003FEA  0E66               	movlw	102
 27716  003FEC  6E1F               	movwf	?_Read_b_eep,c
 27717  003FEE  EC5C  F004         	call	_Read_b_eep	;wreg free
 27718  003FF2  D83A               	call	PL38	;call to abstracted procedure
 27719  003FF4  0E65               	movlw	101
 27720  003FF6  6E1F               	movwf	?_Read_b_eep,c
 27721  003FF8  EC5C  F004         	call	_Read_b_eep	;wreg free
 27722  003FFC  D854               	call	PL42	;call to abstracted procedure
 27723  003FFE  0E64               	movlw	100
 27724  004000  6E1F               	movwf	?_Read_b_eep,c
 27725  004002  EC5C  F004         	call	_Read_b_eep	;wreg free
 27726  004006  D80A               	call	PL10	;call to abstracted procedure
 27727  004008  0E67               	movlw	103
 27728  00400A  6E1F               	movwf	?_Read_b_eep,c
 27729  00400C  EC5C  F004         	call	_Read_b_eep	;wreg free
 27730  004010  D83B               	call	PL40	;call to abstracted procedure
 27731  004012  EC75  F013         	call	__CANIDToRegs	;wreg free
 27732                           
 27733                           ; BSR set to: 0
 27734                           ;main.c: 565: ECANSetOperationMode(0x20);
 27735  004016  0E20               	movlw	32
 27736  004018  EF8C  F004         	goto	_ECANSetOperationMode
 27737  00401C                     __end_of_init_app_ram:
 27738                           	opt stack 0
 27739  00401C                     PL10:
 27740                           	opt stack 22
 27741  00401C  0100               	movlb	0	; () banked
 27742  00401E  6F75               	movwf	(??_init_app_ram+10)& (0+255),b
 27743  004020  C075  F076         	movff	??_init_app_ram+10,??_init_app_ram+11
 27744  004024  6B77               	clrf	(??_init_app_ram+12)& (0+255),b
 27745  004026  6B78               	clrf	(??_init_app_ram+13)& (0+255),b
 27746  004028  6B79               	clrf	(??_init_app_ram+14)& (0+255),b
 27747  00402A  C076  F079         	movff	??_init_app_ram+11,??_init_app_ram+14
 27748  00402E  6B78               	clrf	(??_init_app_ram+13)& (0+255),b
 27749  004030  6B77               	clrf	(??_init_app_ram+12)& (0+255),b
 27750  004032  6B76               	clrf	(??_init_app_ram+11)& (0+255),b
 27751  004034  5171               	movf	(??_init_app_ram+6)& (0+255),w,b
 27752  004036  2576               	addwf	(??_init_app_ram+11)& (0+255),w,b
 27753  004038  6F7A               	movwf	(??_init_app_ram+15)& (0+255),b
 27754  00403A  5172               	movf	(??_init_app_ram+7)& (0+255),w,b
 27755  00403C  2177               	addwfc	(??_init_app_ram+12)& (0+255),w,b
 27756  00403E  6F7B               	movwf	(??_init_app_ram+16)& (0+255),b
 27757  004040  5173               	movf	(??_init_app_ram+8)& (0+255),w,b
 27758  004042  2178               	addwfc	(??_init_app_ram+13)& (0+255),w,b
 27759  004044  6F7C               	movwf	(??_init_app_ram+17)& (0+255),b
 27760  004046  5174               	movf	(??_init_app_ram+9)& (0+255),w,b
 27761  004048  2179               	addwfc	(??_init_app_ram+14)& (0+255),w,b
 27762  00404A  6F7D               	movwf	(??_init_app_ram+18)& (0+255),b
 27763  00404C  516C               	movf	(??_init_app_ram+1)& (0+255),w,b
 27764  00404E  257A               	addwf	(??_init_app_ram+15)& (0+255),w,b
 27765  004050  6F7E               	movwf	(??_init_app_ram+19)& (0+255),b
 27766  004052  516D               	movf	(??_init_app_ram+2)& (0+255),w,b
 27767  004054  217B               	addwfc	(??_init_app_ram+16)& (0+255),w,b
 27768  004056  6F7F               	movwf	(??_init_app_ram+20)& (0+255),b
 27769  004058  516E               	movf	(??_init_app_ram+3)& (0+255),w,b
 27770  00405A  217C               	addwfc	(??_init_app_ram+17)& (0+255),w,b
 27771  00405C  6F80               	movwf	(??_init_app_ram+21)& (0+255),b
 27772  00405E  516F               	movf	(??_init_app_ram+4)& (0+255),w,b
 27773  004060  217D               	addwfc	(??_init_app_ram+18)& (0+255),w,b
 27774  004062  6F81               	movwf	(??_init_app_ram+22)& (0+255),b
 27775  004064  6A20               	clrf	?_Read_b_eep+1,c
 27776  004066  0012               	return	
 27777  004068                     __end_ofPL10:
 27778                           	opt stack 0
 27779  004068                     PL38:
 27780                           	opt stack 22
 27781  004068  0100               	movlb	0	; () banked
 27782  00406A  6F6B               	movwf	??_init_app_ram& (0+255),b
 27783  00406C  C06B  F06C         	movff	??_init_app_ram,??_init_app_ram+1
 27784  004070  6B6D               	clrf	(??_init_app_ram+2)& (0+255),b
 27785  004072  6B6E               	clrf	(??_init_app_ram+3)& (0+255),b
 27786  004074  6B6F               	clrf	(??_init_app_ram+4)& (0+255),b
 27787  004076  C06E  F06F         	movff	??_init_app_ram+3,??_init_app_ram+4
 27788  00407A  C06D  F06E         	movff	??_init_app_ram+2,??_init_app_ram+3
 27789  00407E  C06C  F06D         	movff	??_init_app_ram+1,??_init_app_ram+2
 27790  004082  6B6C               	clrf	(??_init_app_ram+1)& (0+255),b
 27791  004084  6A20               	clrf	?_Read_b_eep+1,c
 27792  004086  0012               	return	
 27793  004088                     __end_ofPL38:
 27794                           	opt stack 0
 27795  004088                     PL40:
 27796                           	opt stack 22
 27797  004088  0100               	movlb	0	; () banked
 27798  00408A  257E               	addwf	(??_init_app_ram+19)& (0+255),w,b
 27799  00408C  6E23               	movwf	?__CANIDToRegs+2,c
 27800  00408E  0E00               	movlw	0
 27801  004090  217F               	addwfc	(??_init_app_ram+20)& (0+255),w,b
 27802  004092  6E24               	movwf	?__CANIDToRegs+3,c
 27803  004094  0E00               	movlw	0
 27804  004096  2180               	addwfc	(??_init_app_ram+21)& (0+255),w,b
 27805  004098  6E25               	movwf	?__CANIDToRegs+4,c
 27806  00409A  0E00               	movlw	0
 27807  00409C  2181               	addwfc	(??_init_app_ram+22)& (0+255),w,b
 27808  00409E  6E26               	movwf	?__CANIDToRegs+5,c
 27809  0040A0  0E01               	movlw	1
 27810  0040A2  6E27               	movwf	?__CANIDToRegs+6,c
 27811  0040A4  0C01               	retlw	1
 27812  0040A6                     __end_ofPL40:
 27813                           	opt stack 0
 27814  0040A6                     PL42:
 27815                           	opt stack 22
 27816  0040A6  0100               	movlb	0	; () banked
 27817  0040A8  6F70               	movwf	(??_init_app_ram+5)& (0+255),b
 27818  0040AA  C070  F071         	movff	??_init_app_ram+5,??_init_app_ram+6
 27819  0040AE  6B72               	clrf	(??_init_app_ram+7)& (0+255),b
 27820  0040B0  6B73               	clrf	(??_init_app_ram+8)& (0+255),b
 27821  0040B2  6B74               	clrf	(??_init_app_ram+9)& (0+255),b
 27822  0040B4  C072  F074         	movff	??_init_app_ram+7,??_init_app_ram+9
 27823  0040B8  C071  F073         	movff	??_init_app_ram+6,??_init_app_ram+8
 27824  0040BC  6B72               	clrf	(??_init_app_ram+7)& (0+255),b
 27825  0040BE  6B71               	clrf	(??_init_app_ram+6)& (0+255),b
 27826  0040C0  6A20               	clrf	?_Read_b_eep+1,c
 27827  0040C2  0012               	return	
 27828  0040C4                     __end_ofPL42:
 27829                           	opt stack 0
 27830                           tblptru	equ	0xFF8
 27831                           tblptrh	equ	0xFF7
 27832                           tblptrl	equ	0xFF6
 27833                           tablat	equ	0xFF5
 27834                           prodh	equ	0xFF4
 27835                           prodl	equ	0xFF3
 27836                           intcon	equ	0xFF2
 27837                           indf0	equ	0xFEF
 27838                           postinc0	equ	0xFEE
 27839                           fsr0h	equ	0xFEA
 27840                           fsr0l	equ	0xFE9
 27841                           wreg	equ	0xFE8
 27842                           indf1	equ	0xFE7
 27843                           postinc1	equ	0xFE6
 27844                           postdec1	equ	0xFE5
 27845                           fsr1h	equ	0xFE2
 27846                           fsr1l	equ	0xFE1
 27847                           indf2	equ	0xFDF
 27848                           postinc2	equ	0xFDE
 27849                           postdec2	equ	0xFDD
 27850                           plusw2	equ	0xFDB
 27851                           fsr2h	equ	0xFDA
 27852                           fsr2l	equ	0xFD9
 27853                           status	equ	0xFD8
 27854                           
 27855 ;; *************** function __CANIDToRegs *****************
 27856 ;; Defined at:
 27857 ;;		line 1101 in file "ECAN.c"
 27858 ;; Parameters:    Size  Location     Type
 27859 ;;  ptr             2   32[COMRAM] PTR unsigned char 
 27860 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 27861 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 27862 ;;		 -> B0CON(1), RXM1SIDH(1), RXM0SIDH(1), 
 27863 ;;  val             4   34[COMRAM] unsigned long 
 27864 ;;  type            1   38[COMRAM] unsigned char 
 27865 ;; Auto vars:     Size  Location     Type
 27866 ;;  Value           1    2[BANK0 ] PTR struct _CAN_MESSAGE_
 27867 ;;		 -> _CANIDToRegs@val(4), 
 27868 ;; Return value:  Size  Location     Type
 27869 ;;		None               void
 27870 ;; Registers used:
 27871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27872 ;; Tracked objects:
 27873 ;;		On entry : 0/F
 27874 ;;		On exit  : F/0
 27875 ;;		Unchanged: 0/0
 27876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 27877 ;;      Params:         7       0       0       0       0       0       0
 27878 ;;      Locals:         0       1       0       0       0       0       0
 27879 ;;      Temps:          0       2       0       0       0       0       0
 27880 ;;      Totals:         7       3       0       0       0       0       0
 27881 ;;Total ram usage:       10 bytes
 27882 ;; Hardware stack levels used:    1
 27883 ;; Hardware stack levels required when called:    3
 27884 ;; This function calls:
 27885 ;;		Nothing
 27886 ;; This function is called by:
 27887 ;;		_init_app_ram
 27888 ;;		_doModeVerbose
 27889 ;;		_ECANSendMessage
 27890 ;; This function uses a non-reentrant model
 27891 ;;
 27892                           
 27893                           	psect	text78
 27894  0026EA                     __ptext78:
 27895                           	opt stack 0
 27896  0026EA                     __CANIDToRegs:
 27897                           	opt stack 23
 27898                           
 27899                           ;ECAN.c: 1102: CAN_MESSAGE_ID *Value;
 27900                           ;ECAN.c: 1104: Value = (CAN_MESSAGE_ID*)&val;
 27901                           
 27902                           ;incstack = 0
 27903                           ;incstack = 0
 27904  0026EA  0E23               	movlw	low __CANIDToRegs@val
 27905  0026EC  0100               	movlb	0	; () banked
 27906  0026EE  6F62               	movwf	__CANIDToRegs@Value& (0+255),b
 27907                           
 27908                           ; BSR set to: 0
 27909                           ;ECAN.c: 1106: if ( type == 0 )
 27910  0026F0  6627               	tstfsz	__CANIDToRegs@type,c
 27911  0026F2  D022               	goto	l17103
 27912                           
 27913                           ; BSR set to: 0
 27914                           ;ECAN.c: 1107: {
 27915                           ;ECAN.c: 1109: *ptr = Value->BYTES.BYTE_1 >> 3;
 27916  0026F4  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 27917  0026F6  6ED9               	movwf	fsr2l,c
 27918  0026F8  6ADA               	clrf	fsr2h,c
 27919  0026FA  50DF               	movf	indf2,w,c
 27920  0026FC  6F60               	movwf	??__CANIDToRegs& (0+255),b
 27921  0026FE  90D8               	bcf	status,0,c
 27922  002700  3360               	rrcf	??__CANIDToRegs& (0+255),f,b
 27923  002702  90D8               	bcf	status,0,c
 27924  002704  3360               	rrcf	??__CANIDToRegs& (0+255),f,b
 27925  002706  90D8               	bcf	status,0,c
 27926  002708  3160               	rrcf	??__CANIDToRegs& (0+255),w,b
 27927                           
 27928                           ;ECAN.c: 1110: *ptr |= (Value->BYTES.BYTE_2 << 5);
 27929  00270A  D858               	call	PL68	;call to abstracted procedure
 27930  00270C  2AD9               	incf	fsr2l,f,c
 27931  00270E  6ADA               	clrf	fsr2h,c
 27932  002710  D871               	call	PL142	;call to abstracted procedure
 27933  002712                     u21375:
 27934  002712  90D8               	bcf	status,0,c
 27935  002714  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 27936  002716  2F61               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
 27937  002718  D7FC               	goto	u21375
 27938  00271A  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;ECAN.c: 1111: ptr++;
 27942                           
 27943                           ; BSR set to: 0
 27944                           ;ECAN.c: 1112: *ptr = Value->BYTES.BYTE_1 << 5;
 27945  00271E  D844               	call	PL34	;call to abstracted procedure
 27946  002720  D869               	call	PL142	;call to abstracted procedure
 27947  002722                     u21385:
 27948  002722  90D8               	bcf	status,0,c
 27949  002724  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 27950  002726  2F61               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
 27951  002728  D7FC               	goto	u21385
 27952  00272A  5160               	movf	??__CANIDToRegs& (0+255),w,b
 27953  00272C  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 27954  002730  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 27955  002734  6EDF               	movwf	indf2,c
 27956                           
 27957                           ;ECAN.c: 1113: }
 27958  002736  D037               	goto	l1649
 27959  002738                     l17103:
 27960                           
 27961                           ; BSR set to: 0
 27962                           ;ECAN.c: 1114: else
 27963                           ;ECAN.c: 1115: {
 27964                           ;ECAN.c: 1117: *ptr = Value->BYTES.BYTE_3 >> 5;
 27965  002738  D854               	call	PL104	;call to abstracted procedure
 27966  00273A  0E05               	movlw	5
 27967  00273C  6F61               	movwf	(??__CANIDToRegs+1)& (0+255),b
 27968  00273E                     u21395:
 27969  00273E  90D8               	bcf	status,0,c
 27970  002740  3360               	rrcf	??__CANIDToRegs& (0+255),f,b
 27971  002742  2F61               	decfsz	(??__CANIDToRegs+1)& (0+255),f,b
 27972  002744  D7FC               	goto	u21395
 27973  002746  5160               	movf	??__CANIDToRegs& (0+255),w,b
 27974                           
 27975                           ;ECAN.c: 1118: *ptr |= Value->BYTES.BYTE_4 << 3;
 27976  002748  D839               	call	PL68	;call to abstracted procedure
 27977  00274A  0E03               	movlw	3
 27978  00274C  D840               	call	PL94	;call to abstracted procedure
 27979  00274E  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 27980  002750  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;ECAN.c: 1119: ptr++;
 27984                           
 27985                           ; BSR set to: 0
 27986                           ;ECAN.c: 1120: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
 27987  002754  D829               	call	PL34	;call to abstracted procedure
 27988  002756  0E02               	movlw	2
 27989  002758  D83A               	call	PL94	;call to abstracted procedure
 27990  00275A  3560               	rlcf	??__CANIDToRegs& (0+255),w,b
 27991  00275C  0BE0               	andlw	224
 27992  00275E  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 27993  002762  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 27994  002766  6EDF               	movwf	indf2,c
 27995                           
 27996                           ; BSR set to: 0
 27997                           ;ECAN.c: 1122: *ptr |= 0b00001000;
 27998  002768  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 27999  00276C  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28000  002770  0E00               	movlw	0
 28001  002772  86DB               	bsf	plusw2,3,c
 28002                           
 28003                           ; BSR set to: 0
 28004                           ;ECAN.c: 1123: *ptr |= Value->BYTES.BYTE_3 & 0x03;
 28005  002774  D836               	call	PL104	;call to abstracted procedure
 28006  002776  0E03               	movlw	3
 28007  002778  1760               	andwf	??__CANIDToRegs& (0+255),f,b
 28008  00277A  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28009                           
 28010                           ;ECAN.c: 1124: ptr++;
 28011                           
 28012                           ; BSR set to: 0
 28013                           ;ECAN.c: 1125: *ptr = Value->BYTES.BYTE_2;
 28014  00277E  D814               	call	PL34	;call to abstracted procedure
 28015  002780  2AD9               	incf	fsr2l,f,c
 28016  002782  6ADA               	clrf	fsr2h,c
 28017  002784  C021  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 28018  002788  C022  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 28019  00278C  CFDF FFE7          	movff	indf2,indf1
 28020                           
 28021                           ; BSR set to: 0
 28022                           ;ECAN.c: 1126: ptr++;
 28023  002790  4A21               	infsnz	__CANIDToRegs@ptr,f,c
 28024  002792  2A22               	incf	__CANIDToRegs@ptr+1,f,c
 28025                           
 28026                           ; BSR set to: 0
 28027                           ;ECAN.c: 1127: *ptr = Value->BYTES.BYTE_1;
 28028  002794  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28029  002796  6ED9               	movwf	fsr2l,c
 28030  002798  6ADA               	clrf	fsr2h,c
 28031  00279A  C021  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 28032  00279E  C022  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 28033  0027A2  CFDF FFE7          	movff	indf2,indf1
 28034  0027A6                     l1649:
 28035                           
 28036                           ; BSR set to: 0
 28037  0027A6  0012               	return	
 28038  0027A8                     __end_of__CANIDToRegs:
 28039                           	opt stack 0
 28040  0027A8                     PL34:
 28041                           	opt stack 23
 28042  0027A8  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28043  0027AC  5160               	movf	??__CANIDToRegs& (0+255),w,b
 28044  0027AE  12DF               	iorwf	indf2,f,c
 28045  0027B0  4A21               	infsnz	__CANIDToRegs@ptr,f,c
 28046  0027B2  2A22               	incf	__CANIDToRegs@ptr+1,f,c
 28047  0027B4  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28048  0027B6  6ED9               	movwf	fsr2l,c
 28049  0027B8  6ADA               	clrf	fsr2h,c
 28050  0027BA  0012               	return	
 28051  0027BC                     __end_ofPL34:
 28052                           	opt stack 0
 28053  0027BC                     PL68:
 28054                           	opt stack 23
 28055  0027BC  C021  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 28056  0027C0  C022  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 28057  0027C4  6EDF               	movwf	indf2,c
 28058  0027C6  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28059  0027C8  6ED9               	movwf	fsr2l,c
 28060  0027CA  6ADA               	clrf	fsr2h,c
 28061  0027CC  0012               	return	
 28062  0027CE                     __end_ofPL68:
 28063                           	opt stack 0
 28064  0027CE                     PL94:
 28065                           	opt stack 23
 28066  0027CE  26D9               	addwf	fsr2l,f,c
 28067  0027D0  6ADA               	clrf	fsr2h,c
 28068  0027D2  50DF               	movf	indf2,w,c
 28069  0027D4  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28070  0027D6  90D8               	bcf	status,0,c
 28071  0027D8  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28072  0027DA  90D8               	bcf	status,0,c
 28073  0027DC  3760               	rlcf	??__CANIDToRegs& (0+255),f,b
 28074  0027DE  90D8               	bcf	status,0,c
 28075  0027E0  0012               	return	
 28076  0027E2                     __end_ofPL94:
 28077                           	opt stack 0
 28078  0027E2                     PL104:
 28079                           	opt stack 23
 28080  0027E2  5162               	movf	__CANIDToRegs@Value& (0+255),w,b
 28081  0027E4  6ED9               	movwf	fsr2l,c
 28082  0027E6  6ADA               	clrf	fsr2h,c
 28083  0027E8  0E02               	movlw	2
 28084  0027EA  26D9               	addwf	fsr2l,f,c
 28085  0027EC  6ADA               	clrf	fsr2h,c
 28086  0027EE  50DF               	movf	indf2,w,c
 28087  0027F0  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28088  0027F2  0012               	return	
 28089  0027F4                     __end_ofPL104:
 28090                           	opt stack 0
 28091  0027F4                     PL142:
 28092                           	opt stack 23
 28093  0027F4  50DF               	movf	indf2,w,c
 28094  0027F6  6F60               	movwf	??__CANIDToRegs& (0+255),b
 28095  0027F8  0E05               	movlw	5
 28096  0027FA  6F61               	movwf	(??__CANIDToRegs+1)& (0+255),b
 28097  0027FC  0C05               	retlw	5
 28098  0027FE                     __end_ofPL142:
 28099                           	opt stack 0
 28100                           tblptru	equ	0xFF8
 28101                           tblptrh	equ	0xFF7
 28102                           tblptrl	equ	0xFF6
 28103                           tablat	equ	0xFF5
 28104                           prodh	equ	0xFF4
 28105                           prodl	equ	0xFF3
 28106                           intcon	equ	0xFF2
 28107                           indf0	equ	0xFEF
 28108                           postinc0	equ	0xFEE
 28109                           fsr0h	equ	0xFEA
 28110                           fsr0l	equ	0xFE9
 28111                           wreg	equ	0xFE8
 28112                           indf1	equ	0xFE7
 28113                           postinc1	equ	0xFE6
 28114                           postdec1	equ	0xFE5
 28115                           fsr1h	equ	0xFE2
 28116                           fsr1l	equ	0xFE1
 28117                           indf2	equ	0xFDF
 28118                           postinc2	equ	0xFDE
 28119                           postdec2	equ	0xFDD
 28120                           plusw2	equ	0xFDB
 28121                           fsr2h	equ	0xFDA
 28122                           fsr2l	equ	0xFD9
 28123                           status	equ	0xFD8
 28124                           
 28125 ;; *************** function _setFilter *****************
 28126 ;; Defined at:
 28127 ;;		line 3312 in file "main.c"
 28128 ;; Parameters:    Size  Location     Type
 28129 ;;  filter          1    wreg     unsigned char 
 28130 ;;  val             4   34[COMRAM] unsigned long 
 28131 ;;  bPersistent     1   38[COMRAM] enum E15660
 28132 ;; Auto vars:     Size  Location     Type
 28133 ;;  filter          1    6[BANK0 ] unsigned char 
 28134 ;;  eidl            1   10[BANK0 ] unsigned char 
 28135 ;;  eidh            1    9[BANK0 ] unsigned char 
 28136 ;;  sidl            1    8[BANK0 ] unsigned char 
 28137 ;;  sidh            1    7[BANK0 ] unsigned char 
 28138 ;; Return value:  Size  Location     Type
 28139 ;;		None               void
 28140 ;; Registers used:
 28141 ;;		wreg, status,2, status,0, cstack
 28142 ;; Tracked objects:
 28143 ;;		On entry : D/2
 28144 ;;		On exit  : 0/0
 28145 ;;		Unchanged: 0/0
 28146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28147 ;;      Params:         5       0       0       0       0       0       0
 28148 ;;      Locals:         0       5       0       0       0       0       0
 28149 ;;      Temps:          0       6       0       0       0       0       0
 28150 ;;      Totals:         5      11       0       0       0       0       0
 28151 ;;Total ram usage:       16 bytes
 28152 ;; Hardware stack levels used:    1
 28153 ;; Hardware stack levels required when called:    4
 28154 ;; This function calls:
 28155 ;;		_Busy_eep
 28156 ;;		_Write_b_eep
 28157 ;; This function is called by:
 28158 ;;		_init_app_ram
 28159 ;;		_doModeVerbose
 28160 ;; This function uses a non-reentrant model
 28161 ;;
 28162                           
 28163                           	psect	text79
 28164  003958                     __ptext79:
 28165                           	opt stack 0
 28166  003958                     _setFilter:
 28167                           	opt stack 24
 28168                           
 28169                           ; BSR set to: 0
 28170                           ;incstack = 0
 28171                           ;incstack = 0
 28172                           ;setFilter@filter stored from wreg
 28173  003958  CFE8 F066          	movff	wreg,setFilter@filter
 28174                           
 28175                           ;main.c: 3313: uint8_t sidh = (long) val >> 21L;
 28176  00395C  0E15               	movlw	21
 28177  00395E  0100               	movlb	0	; () banked
 28178  003960  6F60               	movwf	??_setFilter& (0+255),b
 28179  003962  C023  F061         	movff	setFilter@val,??_setFilter+1
 28180  003966  C024  F062         	movff	setFilter@val+1,??_setFilter+2
 28181  00396A  C025  F063         	movff	setFilter@val+2,??_setFilter+3
 28182  00396E  C026  F064         	movff	setFilter@val+3,??_setFilter+4
 28183  003972                     u21335:
 28184  003972  6760               	tstfsz	??_setFilter& (0+255),b
 28185  003974  D001               	goto	u21336
 28186  003976  D007               	goto	u21337
 28187  003978                     u21336:
 28188  003978  3564               	rlcf	(??_setFilter+4)& (0+255),w,b
 28189  00397A  3364               	rrcf	(??_setFilter+4)& (0+255),f,b
 28190  00397C  3363               	rrcf	(??_setFilter+3)& (0+255),f,b
 28191  00397E  3362               	rrcf	(??_setFilter+2)& (0+255),f,b
 28192  003980  3361               	rrcf	(??_setFilter+1)& (0+255),f,b
 28193  003982  2F60               	decfsz	??_setFilter& (0+255),f,b
 28194  003984  D7F6               	goto	u21335
 28195  003986                     u21337:
 28196  003986  5161               	movf	(??_setFilter+1)& (0+255),w,b
 28197  003988  6F67               	movwf	setFilter@sidh& (0+255),b
 28198                           
 28199                           ;main.c: 3314: uint8_t sidl = (((long) val >> 13L) & 0xe0) |
 28200                           ;main.c: 3315: ((long) (val) & 0x03L) |
 28201                           ;main.c: 3316: 0x08;
 28202  00398A  C023  F060         	movff	setFilter@val,??_setFilter
 28203  00398E  0E03               	movlw	3
 28204  003990  1760               	andwf	??_setFilter& (0+255),f,b
 28205  003992  0E0D               	movlw	13
 28206  003994  6F61               	movwf	(??_setFilter+1)& (0+255),b
 28207  003996  C023  F062         	movff	setFilter@val,??_setFilter+2
 28208  00399A  C024  F063         	movff	setFilter@val+1,??_setFilter+3
 28209  00399E  C025  F064         	movff	setFilter@val+2,??_setFilter+4
 28210  0039A2  C026  F065         	movff	setFilter@val+3,??_setFilter+5
 28211  0039A6                     u21345:
 28212  0039A6  6761               	tstfsz	(??_setFilter+1)& (0+255),b
 28213  0039A8  D001               	goto	u21346
 28214  0039AA  D007               	goto	u21347
 28215  0039AC                     u21346:
 28216  0039AC  3565               	rlcf	(??_setFilter+5)& (0+255),w,b
 28217  0039AE  3365               	rrcf	(??_setFilter+5)& (0+255),f,b
 28218  0039B0  3364               	rrcf	(??_setFilter+4)& (0+255),f,b
 28219  0039B2  3363               	rrcf	(??_setFilter+3)& (0+255),f,b
 28220  0039B4  3362               	rrcf	(??_setFilter+2)& (0+255),f,b
 28221  0039B6  2F61               	decfsz	(??_setFilter+1)& (0+255),f,b
 28222  0039B8  D7F6               	goto	u21345
 28223  0039BA                     u21347:
 28224  0039BA  5162               	movf	(??_setFilter+2)& (0+255),w,b
 28225  0039BC  0BE0               	andlw	224
 28226  0039BE  1160               	iorwf	??_setFilter& (0+255),w,b
 28227  0039C0  0908               	iorlw	8
 28228  0039C2  6F68               	movwf	setFilter@sidl& (0+255),b
 28229                           
 28230                           ; BSR set to: 0
 28231                           ;main.c: 3317: uint8_t eidh = (long) val >> 8L;
 28232  0039C4  C024  F069         	movff	setFilter@val+1,setFilter@eidh
 28233                           
 28234                           ; BSR set to: 0
 28235                           ;main.c: 3318: uint8_t eidl = val;
 28236  0039C8  C023  F06A         	movff	setFilter@val,setFilter@eidl
 28237                           
 28238                           ;main.c: 3320: switch (filter) {
 28239  0039CC  D090               	goto	l17077
 28240  0039CE                     l1389:
 28241                           
 28242                           ; BSR set to: 0
 28243                           ;main.c: 3323: RXF0SIDH = sidh;
 28244  0039CE  C067  FF00         	movff	setFilter@sidh,3840	;volatile
 28245                           
 28246                           ;main.c: 3324: RXF0SIDL = sidl;
 28247  0039D2  C068  FF01         	movff	setFilter@sidl,3841	;volatile
 28248                           
 28249                           ;main.c: 3325: RXF0EIDH = eidh;
 28250  0039D6  C069  FF02         	movff	setFilter@eidh,3842	;volatile
 28251                           
 28252                           ;main.c: 3326: RXF0EIDL = eidl;
 28253  0039DA  C06A  FF03         	movff	setFilter@eidl,3843	;volatile
 28254                           
 28255                           ;main.c: 3327: break;
 28256  0039DE  D0AA               	goto	l17079
 28257  0039E0                     l1391:
 28258                           
 28259                           ; BSR set to: 0
 28260                           ;main.c: 3330: RXF1SIDH = sidh;
 28261  0039E0  C067  FF04         	movff	setFilter@sidh,3844	;volatile
 28262                           
 28263                           ;main.c: 3331: RXF1SIDL = sidl;
 28264  0039E4  C068  FF05         	movff	setFilter@sidl,3845	;volatile
 28265                           
 28266                           ;main.c: 3332: RXF1EIDH = eidh;
 28267  0039E8  C069  FF06         	movff	setFilter@eidh,3846	;volatile
 28268                           
 28269                           ;main.c: 3333: RXF1EIDL = eidl;
 28270  0039EC  C06A  FF07         	movff	setFilter@eidl,3847	;volatile
 28271                           
 28272                           ;main.c: 3334: break;
 28273  0039F0  D0A1               	goto	l17079
 28274  0039F2                     l1392:
 28275                           
 28276                           ; BSR set to: 0
 28277                           ;main.c: 3337: RXF2SIDH = sidh;
 28278  0039F2  C067  FF08         	movff	setFilter@sidh,3848	;volatile
 28279                           
 28280                           ;main.c: 3338: RXF2SIDL = sidl;
 28281  0039F6  C068  FF09         	movff	setFilter@sidl,3849	;volatile
 28282                           
 28283                           ;main.c: 3339: RXF2EIDH = eidh;
 28284  0039FA  C069  FF0A         	movff	setFilter@eidh,3850	;volatile
 28285                           
 28286                           ;main.c: 3340: RXF2EIDL = eidl;
 28287  0039FE  C06A  FF0B         	movff	setFilter@eidl,3851	;volatile
 28288                           
 28289                           ;main.c: 3341: break;
 28290  003A02  D098               	goto	l17079
 28291  003A04                     l1393:
 28292                           
 28293                           ; BSR set to: 0
 28294                           ;main.c: 3344: RXF3SIDH = sidh;
 28295  003A04  C067  FF0C         	movff	setFilter@sidh,3852	;volatile
 28296                           
 28297                           ;main.c: 3345: RXF3SIDL = sidl;
 28298  003A08  C068  FF0D         	movff	setFilter@sidl,3853	;volatile
 28299                           
 28300                           ;main.c: 3346: RXF3EIDH = eidh;
 28301  003A0C  C069  FF0E         	movff	setFilter@eidh,3854	;volatile
 28302                           
 28303                           ;main.c: 3347: RXF3EIDL = eidl;
 28304  003A10  C06A  FF0F         	movff	setFilter@eidl,3855	;volatile
 28305                           
 28306                           ;main.c: 3348: break;
 28307  003A14  D08F               	goto	l17079
 28308  003A16                     l1394:
 28309                           
 28310                           ; BSR set to: 0
 28311                           ;main.c: 3351: RXF4SIDH = sidh;
 28312  003A16  C067  FF10         	movff	setFilter@sidh,3856	;volatile
 28313                           
 28314                           ;main.c: 3352: RXF4SIDL = sidl;
 28315  003A1A  C068  FF11         	movff	setFilter@sidl,3857	;volatile
 28316                           
 28317                           ;main.c: 3353: RXF4EIDH = eidh;
 28318  003A1E  C069  FF12         	movff	setFilter@eidh,3858	;volatile
 28319                           
 28320                           ;main.c: 3354: RXF4EIDL = eidl;
 28321  003A22  C06A  FF13         	movff	setFilter@eidl,3859	;volatile
 28322                           
 28323                           ;main.c: 3355: break;
 28324  003A26  D086               	goto	l17079
 28325  003A28                     l1395:
 28326                           
 28327                           ; BSR set to: 0
 28328                           ;main.c: 3358: RXF5SIDH = sidh;
 28329  003A28  C067  FF14         	movff	setFilter@sidh,3860	;volatile
 28330                           
 28331                           ;main.c: 3359: RXF5SIDL = sidl;
 28332  003A2C  C068  FF15         	movff	setFilter@sidl,3861	;volatile
 28333                           
 28334                           ;main.c: 3360: RXF5EIDH = eidh;
 28335  003A30  C069  FF16         	movff	setFilter@eidh,3862	;volatile
 28336                           
 28337                           ;main.c: 3361: RXF5EIDL = eidl;
 28338  003A34  C06A  FF17         	movff	setFilter@eidl,3863	;volatile
 28339                           
 28340                           ;main.c: 3362: break;
 28341  003A38  D07D               	goto	l17079
 28342  003A3A                     l1396:
 28343                           
 28344                           ; BSR set to: 0
 28345                           ;main.c: 3365: RXF6SIDH = sidh;
 28346  003A3A  C067  FD60         	movff	setFilter@sidh,3424	;volatile
 28347                           
 28348                           ;main.c: 3366: RXF6SIDL = sidl;
 28349  003A3E  C068  FD61         	movff	setFilter@sidl,3425	;volatile
 28350                           
 28351                           ;main.c: 3367: RXF6EIDH = eidh;
 28352  003A42  C069  FD62         	movff	setFilter@eidh,3426	;volatile
 28353                           
 28354                           ;main.c: 3368: RXF6EIDL = eidl;
 28355  003A46  C06A  FD63         	movff	setFilter@eidl,3427	;volatile
 28356                           
 28357                           ;main.c: 3369: break;
 28358  003A4A  D074               	goto	l17079
 28359  003A4C                     l1397:
 28360                           
 28361                           ; BSR set to: 0
 28362                           ;main.c: 3372: RXF7SIDH = sidh;
 28363  003A4C  C067  FD64         	movff	setFilter@sidh,3428	;volatile
 28364                           
 28365                           ;main.c: 3373: RXF7SIDL = sidl;
 28366  003A50  C068  FD65         	movff	setFilter@sidl,3429	;volatile
 28367                           
 28368                           ;main.c: 3374: RXF7EIDH = eidh;
 28369  003A54  C069  FD66         	movff	setFilter@eidh,3430	;volatile
 28370                           
 28371                           ;main.c: 3375: RXF7EIDL = eidl;
 28372  003A58  C06A  FD67         	movff	setFilter@eidl,3431	;volatile
 28373                           
 28374                           ;main.c: 3376: break;
 28375  003A5C  D06B               	goto	l17079
 28376  003A5E                     l1398:
 28377                           
 28378                           ; BSR set to: 0
 28379                           ;main.c: 3379: RXF8SIDH = sidh;
 28380  003A5E  C067  FD68         	movff	setFilter@sidh,3432	;volatile
 28381                           
 28382                           ;main.c: 3380: RXF8SIDL = sidl;
 28383  003A62  C068  FD69         	movff	setFilter@sidl,3433	;volatile
 28384                           
 28385                           ;main.c: 3381: RXF8EIDH = eidh;
 28386  003A66  C069  FD6A         	movff	setFilter@eidh,3434	;volatile
 28387                           
 28388                           ;main.c: 3382: RXF8EIDL = eidl;
 28389  003A6A  C06A  FD6B         	movff	setFilter@eidl,3435	;volatile
 28390                           
 28391                           ;main.c: 3383: break;
 28392  003A6E  D062               	goto	l17079
 28393  003A70                     l1399:
 28394                           
 28395                           ; BSR set to: 0
 28396                           ;main.c: 3386: RXF9SIDH = sidh;
 28397  003A70  C067  FD70         	movff	setFilter@sidh,3440	;volatile
 28398                           
 28399                           ;main.c: 3387: RXF9SIDL = sidl;
 28400  003A74  C068  FD71         	movff	setFilter@sidl,3441	;volatile
 28401                           
 28402                           ;main.c: 3388: RXF9EIDH = eidh;
 28403  003A78  C069  FD72         	movff	setFilter@eidh,3442	;volatile
 28404                           
 28405                           ;main.c: 3389: RXF9EIDL = eidl;
 28406  003A7C  C06A  FD73         	movff	setFilter@eidl,3443	;volatile
 28407                           
 28408                           ;main.c: 3390: break;
 28409  003A80  D059               	goto	l17079
 28410  003A82                     l1400:
 28411                           
 28412                           ; BSR set to: 0
 28413                           ;main.c: 3393: RXF10SIDH = sidh;
 28414  003A82  C067  FD74         	movff	setFilter@sidh,3444	;volatile
 28415                           
 28416                           ;main.c: 3394: RXF10SIDL = sidl;
 28417  003A86  C068  FD75         	movff	setFilter@sidl,3445	;volatile
 28418                           
 28419                           ;main.c: 3395: RXF10EIDH = eidh;
 28420  003A8A  C069  FD76         	movff	setFilter@eidh,3446	;volatile
 28421                           
 28422                           ;main.c: 3396: RXF10EIDL = eidl;
 28423  003A8E  C06A  FD77         	movff	setFilter@eidl,3447	;volatile
 28424                           
 28425                           ;main.c: 3397: break;
 28426  003A92  D050               	goto	l17079
 28427  003A94                     l1401:
 28428                           
 28429                           ; BSR set to: 0
 28430                           ;main.c: 3400: RXF11SIDH = sidh;
 28431  003A94  C067  FD78         	movff	setFilter@sidh,3448	;volatile
 28432                           
 28433                           ;main.c: 3401: RXF11SIDL = sidl;
 28434  003A98  C068  FD79         	movff	setFilter@sidl,3449	;volatile
 28435                           
 28436                           ;main.c: 3402: RXF11EIDH = eidh;
 28437  003A9C  C069  FD7A         	movff	setFilter@eidh,3450	;volatile
 28438                           
 28439                           ;main.c: 3403: RXF11EIDL = eidl;
 28440  003AA0  C06A  FD7B         	movff	setFilter@eidl,3451	;volatile
 28441                           
 28442                           ;main.c: 3404: break;
 28443  003AA4  D047               	goto	l17079
 28444  003AA6                     l1402:
 28445                           
 28446                           ; BSR set to: 0
 28447                           ;main.c: 3407: RXF12SIDH = sidh;
 28448  003AA6  C067  FD80         	movff	setFilter@sidh,3456	;volatile
 28449                           
 28450                           ;main.c: 3408: RXF12SIDL = sidl;
 28451  003AAA  C068  FD81         	movff	setFilter@sidl,3457	;volatile
 28452                           
 28453                           ;main.c: 3409: RXF12EIDH = eidh;
 28454  003AAE  C069  FD82         	movff	setFilter@eidh,3458	;volatile
 28455                           
 28456                           ;main.c: 3410: RXF12EIDL = eidl;
 28457  003AB2  C06A  FD83         	movff	setFilter@eidl,3459	;volatile
 28458                           
 28459                           ;main.c: 3411: break;
 28460  003AB6  D03E               	goto	l17079
 28461  003AB8                     l1403:
 28462                           
 28463                           ; BSR set to: 0
 28464                           ;main.c: 3414: RXF13SIDH = sidh;
 28465  003AB8  C067  FD84         	movff	setFilter@sidh,3460	;volatile
 28466                           
 28467                           ;main.c: 3415: RXF13SIDL = sidl;
 28468  003ABC  C068  FD85         	movff	setFilter@sidl,3461	;volatile
 28469                           
 28470                           ;main.c: 3416: RXF13EIDH = eidh;
 28471  003AC0  C069  FD86         	movff	setFilter@eidh,3462	;volatile
 28472                           
 28473                           ;main.c: 3417: RXF13EIDL = eidl;
 28474  003AC4  C06A  FD87         	movff	setFilter@eidl,3463	;volatile
 28475                           
 28476                           ;main.c: 3418: break;
 28477  003AC8  D035               	goto	l17079
 28478  003ACA                     l1404:
 28479                           
 28480                           ; BSR set to: 0
 28481                           ;main.c: 3421: RXF14SIDH = sidh;
 28482  003ACA  C067  FD88         	movff	setFilter@sidh,3464	;volatile
 28483                           
 28484                           ;main.c: 3422: RXF14SIDL = sidl;
 28485  003ACE  C068  FD89         	movff	setFilter@sidl,3465	;volatile
 28486                           
 28487                           ;main.c: 3423: RXF14EIDH = eidh;
 28488  003AD2  C069  FD8A         	movff	setFilter@eidh,3466	;volatile
 28489                           
 28490                           ;main.c: 3424: RXF14EIDL = eidl;
 28491  003AD6  C06A  FD8B         	movff	setFilter@eidl,3467	;volatile
 28492                           
 28493                           ;main.c: 3425: break;
 28494  003ADA  D02C               	goto	l17079
 28495  003ADC                     l1405:
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;main.c: 3428: RXF15SIDH = sidh;
 28499  003ADC  C067  FD90         	movff	setFilter@sidh,3472	;volatile
 28500                           
 28501                           ;main.c: 3429: RXF15SIDL = sidl;
 28502  003AE0  C068  FD91         	movff	setFilter@sidl,3473	;volatile
 28503                           
 28504                           ;main.c: 3430: RXF15EIDH = eidh;
 28505  003AE4  C069  FD92         	movff	setFilter@eidh,3474	;volatile
 28506                           
 28507                           ;main.c: 3431: RXF15EIDL = eidl;
 28508  003AE8  C06A  FD93         	movff	setFilter@eidl,3475	;volatile
 28509                           
 28510                           ;main.c: 3432: break;
 28511  003AEC  D023               	goto	l17079
 28512  003AEE                     l17077:
 28513                           
 28514                           ; BSR set to: 0
 28515  003AEE  5166               	movf	setFilter@filter& (0+255),w,b
 28516                           
 28517                           ; Switch size 1, requested type "space"
 28518                           ; Number of cases is 16, Range of values is 0 to 15
 28519                           ; switch strategies available:
 28520                           ; Name         Instructions Cycles
 28521                           ; simple_byte           49    25 (average)
 28522                           ;	Chosen strategy is simple_byte
 28523  003AF0  E101 D76D          	bz	l1389
 28524  003AF4  0A01               	xorlw	1	; case 1
 28525  003AF6  E101 D773          	bz	l1391
 28526  003AFA  0A03               	xorlw	3	; case 2
 28527  003AFC  E101 D779          	bz	l1392
 28528  003B00  0A01               	xorlw	1	; case 3
 28529  003B02  E080               	bz	l1393
 28530  003B04  0A07               	xorlw	7	; case 4
 28531  003B06  E087               	bz	l1394
 28532  003B08  0A01               	xorlw	1	; case 5
 28533  003B0A  E08E               	bz	l1395
 28534  003B0C  0A03               	xorlw	3	; case 6
 28535  003B0E  E095               	bz	l1396
 28536  003B10  0A01               	xorlw	1	; case 7
 28537  003B12  E09C               	bz	l1397
 28538  003B14  0A0F               	xorlw	15	; case 8
 28539  003B16  E0A3               	bz	l1398
 28540  003B18  0A01               	xorlw	1	; case 9
 28541  003B1A  E0AA               	bz	l1399
 28542  003B1C  0A03               	xorlw	3	; case 10
 28543  003B1E  E0B1               	bz	l1400
 28544  003B20  0A01               	xorlw	1	; case 11
 28545  003B22  E0B8               	bz	l1401
 28546  003B24  0A07               	xorlw	7	; case 12
 28547  003B26  E0BF               	bz	l1402
 28548  003B28  0A01               	xorlw	1	; case 13
 28549  003B2A  E0C6               	bz	l1403
 28550  003B2C  0A03               	xorlw	3	; case 14
 28551  003B2E  E0CD               	bz	l1404
 28552  003B30  0A01               	xorlw	1	; case 15
 28553  003B32  E0D4               	bz	l1405
 28554  003B34                     l17079:
 28555                           
 28556                           ; BSR set to: 0
 28557                           ;main.c: 3435: if ( bPersistent ) {
 28558  003B34  5027               	movf	setFilter@bPersistent,w,c
 28559  003B36  E034               	bz	l1407
 28560                           
 28561                           ; BSR set to: 0
 28562                           ;main.c: 3436: (Busy_eep(), Write_b_eep(0x20 + 0 + 4*filter,( ( id >> 24 ) & 0xff )));
 28563  003B38  EC43  F004         	call	_Busy_eep	;wreg free
 28564  003B3C  D832               	call	PL16	;call to abstracted procedure
 28565  003B3E  0E20               	movlw	32
 28566  003B40  2560               	addwf	??_setFilter& (0+255),w,b
 28567  003B42  6E1F               	movwf	?_Write_b_eep,c
 28568  003B44  0E00               	movlw	0
 28569  003B46  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28570  003B48  6E20               	movwf	?_Write_b_eep+1,c
 28571  003B4A  C03C  F021         	movff	_id+3,?_Write_b_eep+2
 28572  003B4E  EC2D  F005         	call	_Write_b_eep	;wreg free
 28573                           
 28574                           ;main.c: 3437: (Busy_eep(), Write_b_eep(0x20 + 1 + 4*filter,( ( id >> 16 ) & 0xff )));
 28575  003B52  EC43  F004         	call	_Busy_eep	;wreg free
 28576  003B56  D825               	call	PL16	;call to abstracted procedure
 28577  003B58  0E21               	movlw	33
 28578  003B5A  2560               	addwf	??_setFilter& (0+255),w,b
 28579  003B5C  6E1F               	movwf	?_Write_b_eep,c
 28580  003B5E  0E00               	movlw	0
 28581  003B60  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28582  003B62  6E20               	movwf	?_Write_b_eep+1,c
 28583  003B64  C03B  F021         	movff	_id+2,?_Write_b_eep+2
 28584  003B68  EC2D  F005         	call	_Write_b_eep	;wreg free
 28585                           
 28586                           ;main.c: 3438: (Busy_eep(), Write_b_eep(0x20 + 2 + 4*filter,( ( id >> 8 ) & 0xff )));
 28587  003B6C  EC43  F004         	call	_Busy_eep	;wreg free
 28588  003B70  D818               	call	PL16	;call to abstracted procedure
 28589  003B72  0E22               	movlw	34
 28590  003B74  2560               	addwf	??_setFilter& (0+255),w,b
 28591  003B76  6E1F               	movwf	?_Write_b_eep,c
 28592  003B78  0E00               	movlw	0
 28593  003B7A  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28594  003B7C  6E20               	movwf	?_Write_b_eep+1,c
 28595  003B7E  C03A  F021         	movff	_id+1,?_Write_b_eep+2
 28596  003B82  EC2D  F005         	call	_Write_b_eep	;wreg free
 28597                           
 28598                           ;main.c: 3439: (Busy_eep(), Write_b_eep(0x20 + 3 + 4*filter,( id & 0xff )));
 28599  003B86  EC43  F004         	call	_Busy_eep	;wreg free
 28600  003B8A  D80B               	call	PL16	;call to abstracted procedure
 28601  003B8C  0E23               	movlw	35
 28602  003B8E  2560               	addwf	??_setFilter& (0+255),w,b
 28603  003B90  6E1F               	movwf	?_Write_b_eep,c
 28604  003B92  0E00               	movlw	0
 28605  003B94  2161               	addwfc	(??_setFilter+1)& (0+255),w,b
 28606  003B96  6E20               	movwf	?_Write_b_eep+1,c
 28607  003B98  C039  F021         	movff	_id,?_Write_b_eep+2
 28608  003B9C  EC2D  F005         	call	_Write_b_eep	;wreg free
 28609  003BA0                     l1407:
 28610  003BA0  0012               	return	
 28611  003BA2                     __end_of_setFilter:
 28612                           	opt stack 0
 28613  003BA2                     PL16:
 28614                           	opt stack 24
 28615  003BA2  0100               	movlb	0	; () banked
 28616  003BA4  5166               	movf	setFilter@filter& (0+255),w,b
 28617  003BA6  6F60               	movwf	??_setFilter& (0+255),b
 28618  003BA8  6B61               	clrf	(??_setFilter+1)& (0+255),b
 28619  003BAA  90D8               	bcf	status,0,c
 28620  003BAC  3760               	rlcf	??_setFilter& (0+255),f,b
 28621  003BAE  3761               	rlcf	(??_setFilter+1)& (0+255),f,b
 28622  003BB0  90D8               	bcf	status,0,c
 28623  003BB2  3760               	rlcf	??_setFilter& (0+255),f,b
 28624  003BB4  3761               	rlcf	(??_setFilter+1)& (0+255),f,b
 28625  003BB6  0012               	return	
 28626  003BB8                     __end_ofPL16:
 28627                           	opt stack 0
 28628                           tblptru	equ	0xFF8
 28629                           tblptrh	equ	0xFF7
 28630                           tblptrl	equ	0xFF6
 28631                           tablat	equ	0xFF5
 28632                           prodh	equ	0xFF4
 28633                           prodl	equ	0xFF3
 28634                           intcon	equ	0xFF2
 28635                           indf0	equ	0xFEF
 28636                           postinc0	equ	0xFEE
 28637                           fsr0h	equ	0xFEA
 28638                           fsr0l	equ	0xFE9
 28639                           wreg	equ	0xFE8
 28640                           indf1	equ	0xFE7
 28641                           postinc1	equ	0xFE6
 28642                           postdec1	equ	0xFE5
 28643                           fsr1h	equ	0xFE2
 28644                           fsr1l	equ	0xFE1
 28645                           indf2	equ	0xFDF
 28646                           postinc2	equ	0xFDE
 28647                           postdec2	equ	0xFDD
 28648                           plusw2	equ	0xFDB
 28649                           fsr2h	equ	0xFDA
 28650                           fsr2l	equ	0xFD9
 28651                           status	equ	0xFD8
 28652                           
 28653 ;; *************** function _Write_b_eep *****************
 28654 ;; Defined at:
 28655 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\write_B.c"
 28656 ;; Parameters:    Size  Location     Type
 28657 ;;  badd            2   30[COMRAM] unsigned int 
 28658 ;;  bdat            1   32[COMRAM] unsigned char 
 28659 ;; Auto vars:     Size  Location     Type
 28660 ;;  GIE_BIT_VAL     1   33[COMRAM] unsigned char 
 28661 ;; Return value:  Size  Location     Type
 28662 ;;		None               void
 28663 ;; Registers used:
 28664 ;;		wreg, status,2
 28665 ;; Tracked objects:
 28666 ;;		On entry : 0/0
 28667 ;;		On exit  : 0/0
 28668 ;;		Unchanged: 0/0
 28669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28670 ;;      Params:         3       0       0       0       0       0       0
 28671 ;;      Locals:         1       0       0       0       0       0       0
 28672 ;;      Temps:          0       0       0       0       0       0       0
 28673 ;;      Totals:         4       0       0       0       0       0       0
 28674 ;;Total ram usage:        4 bytes
 28675 ;; Hardware stack levels used:    1
 28676 ;; Hardware stack levels required when called:    3
 28677 ;; This function calls:
 28678 ;;		Nothing
 28679 ;; This function is called by:
 28680 ;;		_init_app_eeprom
 28681 ;;		_doModeVerbose
 28682 ;;		_doModeVscp
 28683 ;;		_doModeSLCAN
 28684 ;;		_setFilter
 28685 ;; This function uses a non-reentrant model
 28686 ;;
 28687                           
 28688                           	psect	text80
 28689  000A5A                     __ptext80:
 28690                           	opt stack 0
 28691  000A5A                     _Write_b_eep:
 28692                           	opt stack 25
 28693                           
 28694                           ;incstack = 0
 28695                           ;incstack = 0
 28696  000A5A  C01F  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 28697  000A5E  C021  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 28698  000A62  9EA6               	bcf	4006,7,c	;volatile
 28699  000A64  9CA6               	bcf	4006,6,c	;volatile
 28700  000A66  84A6               	bsf	4006,2,c	;volatile
 28701  000A68  0E00               	movlw	0
 28702  000A6A  BEF2               	btfsc	intcon,7,c	;volatile
 28703  000A6C  0E01               	movlw	1
 28704  000A6E  6E22               	movwf	Write_b_eep@GIE_BIT_VAL,c
 28705  000A70  9EF2               	bcf	intcon,7,c	;volatile
 28706  000A72  0E55               	movlw	85
 28707  000A74  6EA7               	movwf	4007,c	;volatile
 28708  000A76  0EAA               	movlw	170
 28709  000A78  6EA7               	movwf	4007,c	;volatile
 28710  000A7A  82A6               	bsf	4006,1,c	;volatile
 28711  000A7C                     l1926:
 28712  000A7C  B2A6               	btfsc	4006,1,c	;volatile
 28713  000A7E  D7FE               	goto	l1926
 28714  000A80  B022               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
 28715  000A82  D002               	bra	u21445
 28716  000A84  9EF2               	bcf	intcon,7,c	;volatile
 28717  000A86  D001               	bra	u21446
 28718  000A88                     u21445:
 28719  000A88  8EF2               	bsf	intcon,7,c	;volatile
 28720  000A8A                     u21446:
 28721  000A8A  94A6               	bcf	4006,2,c	;volatile
 28722  000A8C  0012               	return	
 28723  000A8E                     __end_of_Write_b_eep:
 28724                           	opt stack 0
 28725                           tblptru	equ	0xFF8
 28726                           tblptrh	equ	0xFF7
 28727                           tblptrl	equ	0xFF6
 28728                           tablat	equ	0xFF5
 28729                           prodh	equ	0xFF4
 28730                           prodl	equ	0xFF3
 28731                           intcon	equ	0xFF2
 28732                           indf0	equ	0xFEF
 28733                           postinc0	equ	0xFEE
 28734                           fsr0h	equ	0xFEA
 28735                           fsr0l	equ	0xFE9
 28736                           wreg	equ	0xFE8
 28737                           indf1	equ	0xFE7
 28738                           postinc1	equ	0xFE6
 28739                           postdec1	equ	0xFE5
 28740                           fsr1h	equ	0xFE2
 28741                           fsr1l	equ	0xFE1
 28742                           indf2	equ	0xFDF
 28743                           postinc2	equ	0xFDE
 28744                           postdec2	equ	0xFDD
 28745                           plusw2	equ	0xFDB
 28746                           fsr2h	equ	0xFDA
 28747                           fsr2l	equ	0xFD9
 28748                           status	equ	0xFD8
 28749                           
 28750 ;; *************** function _Busy_eep *****************
 28751 ;; Defined at:
 28752 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\busy_eep.c"
 28753 ;; Parameters:    Size  Location     Type
 28754 ;;		None
 28755 ;; Auto vars:     Size  Location     Type
 28756 ;;		None
 28757 ;; Return value:  Size  Location     Type
 28758 ;;		None               void
 28759 ;; Registers used:
 28760 ;;		None
 28761 ;; Tracked objects:
 28762 ;;		On entry : 0/0
 28763 ;;		On exit  : 0/0
 28764 ;;		Unchanged: 0/0
 28765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28766 ;;      Params:         0       0       0       0       0       0       0
 28767 ;;      Locals:         0       0       0       0       0       0       0
 28768 ;;      Temps:          0       0       0       0       0       0       0
 28769 ;;      Totals:         0       0       0       0       0       0       0
 28770 ;;Total ram usage:        0 bytes
 28771 ;; Hardware stack levels used:    1
 28772 ;; Hardware stack levels required when called:    3
 28773 ;; This function calls:
 28774 ;;		Nothing
 28775 ;; This function is called by:
 28776 ;;		_init_app_eeprom
 28777 ;;		_doModeVerbose
 28778 ;;		_doModeVscp
 28779 ;;		_doModeSLCAN
 28780 ;;		_setFilter
 28781 ;; This function uses a non-reentrant model
 28782 ;;
 28783                           
 28784                           	psect	text81
 28785  000886                     __ptext81:
 28786                           	opt stack 0
 28787  000886                     _Busy_eep:
 28788                           	opt stack 25
 28789  000886                     l1901:
 28790  000886  A2A6               	btfss	4006,1,c	;volatile
 28791  000888  0012               	return	
 28792  00088A  D7FD               	goto	l1901
 28793  00088C                     __end_of_Busy_eep:
 28794                           	opt stack 0
 28795                           tblptru	equ	0xFF8
 28796                           tblptrh	equ	0xFF7
 28797                           tblptrl	equ	0xFF6
 28798                           tablat	equ	0xFF5
 28799                           prodh	equ	0xFF4
 28800                           prodl	equ	0xFF3
 28801                           intcon	equ	0xFF2
 28802                           indf0	equ	0xFEF
 28803                           postinc0	equ	0xFEE
 28804                           fsr0h	equ	0xFEA
 28805                           fsr0l	equ	0xFE9
 28806                           wreg	equ	0xFE8
 28807                           indf1	equ	0xFE7
 28808                           postinc1	equ	0xFE6
 28809                           postdec1	equ	0xFE5
 28810                           fsr1h	equ	0xFE2
 28811                           fsr1l	equ	0xFE1
 28812                           indf2	equ	0xFDF
 28813                           postinc2	equ	0xFDE
 28814                           postdec2	equ	0xFDD
 28815                           plusw2	equ	0xFDB
 28816                           fsr2h	equ	0xFDA
 28817                           fsr2l	equ	0xFD9
 28818                           status	equ	0xFD8
 28819                           
 28820 ;; *************** function _ECANSetOperationMode *****************
 28821 ;; Defined at:
 28822 ;;		line 1014 in file "ECAN.c"
 28823 ;; Parameters:    Size  Location     Type
 28824 ;;  mode            1    wreg     enum E16346
 28825 ;; Auto vars:     Size  Location     Type
 28826 ;;  mode            1   30[COMRAM] enum E16346
 28827 ;; Return value:  Size  Location     Type
 28828 ;;		None               void
 28829 ;; Registers used:
 28830 ;;		wreg, status,2, status,0
 28831 ;; Tracked objects:
 28832 ;;		On entry : 0/1
 28833 ;;		On exit  : 0/0
 28834 ;;		Unchanged: 0/0
 28835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28836 ;;      Params:         0       0       0       0       0       0       0
 28837 ;;      Locals:         1       0       0       0       0       0       0
 28838 ;;      Temps:          0       0       0       0       0       0       0
 28839 ;;      Totals:         1       0       0       0       0       0       0
 28840 ;;Total ram usage:        1 bytes
 28841 ;; Hardware stack levels used:    1
 28842 ;; Hardware stack levels required when called:    3
 28843 ;; This function calls:
 28844 ;;		Nothing
 28845 ;; This function is called by:
 28846 ;;		_main
 28847 ;;		_init_app_ram
 28848 ;;		_doModeVerbose
 28849 ;;		_doModeVscp
 28850 ;;		_doModeSLCAN
 28851 ;;		_ECANInitialize
 28852 ;; This function uses a non-reentrant model
 28853 ;;
 28854                           
 28855                           	psect	text82
 28856  000918                     __ptext82:
 28857                           	opt stack 0
 28858  000918                     _ECANSetOperationMode:
 28859                           	opt stack 25
 28860                           
 28861                           ;incstack = 0
 28862                           ;incstack = 0
 28863                           ;ECANSetOperationMode@mode stored from wreg
 28864  000918  CFE8 F01F          	movff	wreg,ECANSetOperationMode@mode
 28865                           
 28866                           ;ECAN.c: 1015: CANCON &= 0x1F;
 28867  00091C  0E1F               	movlw	31
 28868  00091E  166F               	andwf	3951,f,c	;volatile
 28869                           
 28870                           ;ECAN.c: 1016: CANCON |= mode;
 28871  000920  501F               	movf	ECANSetOperationMode@mode,w,c
 28872  000922  126F               	iorwf	3951,f,c	;volatile
 28873  000924                     l15561:
 28874  000924  506F               	movf	3951,w,c	;volatile
 28875  000926  0BE0               	andlw	224
 28876  000928  181F               	xorwf	ECANSetOperationMode@mode,w,c
 28877  00092A  B4D8               	btfsc	status,2,c
 28878  00092C  0012               	return	
 28879  00092E  D7FA               	goto	l15561
 28880  000930                     __end_of_ECANSetOperationMode:
 28881                           	opt stack 0
 28882                           tblptru	equ	0xFF8
 28883                           tblptrh	equ	0xFF7
 28884                           tblptrl	equ	0xFF6
 28885                           tablat	equ	0xFF5
 28886                           prodh	equ	0xFF4
 28887                           prodl	equ	0xFF3
 28888                           intcon	equ	0xFF2
 28889                           indf0	equ	0xFEF
 28890                           postinc0	equ	0xFEE
 28891                           fsr0h	equ	0xFEA
 28892                           fsr0l	equ	0xFE9
 28893                           wreg	equ	0xFE8
 28894                           indf1	equ	0xFE7
 28895                           postinc1	equ	0xFE6
 28896                           postdec1	equ	0xFE5
 28897                           fsr1h	equ	0xFE2
 28898                           fsr1l	equ	0xFE1
 28899                           indf2	equ	0xFDF
 28900                           postinc2	equ	0xFDE
 28901                           postdec2	equ	0xFDD
 28902                           plusw2	equ	0xFDB
 28903                           fsr2h	equ	0xFDA
 28904                           fsr2l	equ	0xFD9
 28905                           status	equ	0xFD8
 28906                           
 28907 ;; *************** function _Read_b_eep *****************
 28908 ;; Defined at:
 28909 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\read_B.c"
 28910 ;; Parameters:    Size  Location     Type
 28911 ;;  badd            2   30[COMRAM] unsigned int 
 28912 ;; Auto vars:     Size  Location     Type
 28913 ;;		None
 28914 ;; Return value:  Size  Location     Type
 28915 ;;                  1    wreg      unsigned char 
 28916 ;; Registers used:
 28917 ;;		wreg, status,2
 28918 ;; Tracked objects:
 28919 ;;		On entry : 0/0
 28920 ;;		On exit  : 0/0
 28921 ;;		Unchanged: 0/0
 28922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28923 ;;      Params:         2       0       0       0       0       0       0
 28924 ;;      Locals:         0       0       0       0       0       0       0
 28925 ;;      Temps:          0       0       0       0       0       0       0
 28926 ;;      Totals:         2       0       0       0       0       0       0
 28927 ;;Total ram usage:        2 bytes
 28928 ;; Hardware stack levels used:    1
 28929 ;; Hardware stack levels required when called:    3
 28930 ;; This function calls:
 28931 ;;		Nothing
 28932 ;; This function is called by:
 28933 ;;		_main
 28934 ;;		_init_app_ram
 28935 ;; This function uses a non-reentrant model
 28936 ;;
 28937                           
 28938                           	psect	text83
 28939  0008B8                     __ptext83:
 28940                           	opt stack 0
 28941  0008B8                     _Read_b_eep:
 28942                           	opt stack 23
 28943                           
 28944                           ;incstack = 0
 28945                           ;incstack = 0
 28946  0008B8  C01F  FFA9         	movff	Read_b_eep@badd,4009	;volatile
 28947  0008BC  9CA6               	bcf	4006,6,c	;volatile
 28948  0008BE  9EA6               	bcf	4006,7,c	;volatile
 28949  0008C0  80A6               	bsf	4006,0,c	;volatile
 28950  0008C2  F000               	nop		;# 
 28951  0008C4  F000               	nop		;# 
 28952  0008C6  50A8               	movf	4008,w,c	;volatile
 28953  0008C8  0012               	return	
 28954  0008CA                     __end_of_Read_b_eep:
 28955                           	opt stack 0
 28956                           tblptru	equ	0xFF8
 28957                           tblptrh	equ	0xFF7
 28958                           tblptrl	equ	0xFF6
 28959                           tablat	equ	0xFF5
 28960                           prodh	equ	0xFF4
 28961                           prodl	equ	0xFF3
 28962                           intcon	equ	0xFF2
 28963                           indf0	equ	0xFEF
 28964                           postinc0	equ	0xFEE
 28965                           fsr0h	equ	0xFEA
 28966                           fsr0l	equ	0xFE9
 28967                           wreg	equ	0xFE8
 28968                           indf1	equ	0xFE7
 28969                           postinc1	equ	0xFE6
 28970                           postdec1	equ	0xFE5
 28971                           fsr1h	equ	0xFE2
 28972                           fsr1l	equ	0xFE1
 28973                           indf2	equ	0xFDF
 28974                           postinc2	equ	0xFDE
 28975                           postdec2	equ	0xFDD
 28976                           plusw2	equ	0xFDB
 28977                           fsr2h	equ	0xFDA
 28978                           fsr2l	equ	0xFD9
 28979                           status	equ	0xFD8
 28980                           
 28981 ;; *************** function _WriteTimer0 *****************
 28982 ;; Defined at:
 28983 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 28984 ;; Parameters:    Size  Location     Type
 28985 ;;  timer0          2   30[COMRAM] unsigned int 
 28986 ;; Auto vars:     Size  Location     Type
 28987 ;;  timer           2   32[COMRAM] struct Timers
 28988 ;; Return value:  Size  Location     Type
 28989 ;;		None               void
 28990 ;; Registers used:
 28991 ;;		None
 28992 ;; Tracked objects:
 28993 ;;		On entry : 0/0
 28994 ;;		On exit  : 0/0
 28995 ;;		Unchanged: 0/0
 28996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 28997 ;;      Params:         2       0       0       0       0       0       0
 28998 ;;      Locals:         2       0       0       0       0       0       0
 28999 ;;      Temps:          0       0       0       0       0       0       0
 29000 ;;      Totals:         4       0       0       0       0       0       0
 29001 ;;Total ram usage:        4 bytes
 29002 ;; Hardware stack levels used:    1
 29003 ;; Hardware stack levels required when called:    3
 29004 ;; This function calls:
 29005 ;;		Nothing
 29006 ;; This function is called by:
 29007 ;;		_init
 29008 ;; This function uses a non-reentrant model
 29009 ;;
 29010                           
 29011                           	psect	text84
 29012  0008A6                     __ptext84:
 29013                           	opt stack 0
 29014  0008A6                     _WriteTimer0:
 29015                           	opt stack 25
 29016                           
 29017                           ;incstack = 0
 29018                           ;incstack = 0
 29019  0008A6  C01F  F021         	movff	WriteTimer0@timer0,WriteTimer0@timer
 29020  0008AA  C020  F022         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 29021  0008AE  C022  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 29022  0008B2  C021  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 29023  0008B6  0012               	return	
 29024  0008B8                     __end_of_WriteTimer0:
 29025                           	opt stack 0
 29026                           tblptru	equ	0xFF8
 29027                           tblptrh	equ	0xFF7
 29028                           tblptrl	equ	0xFF6
 29029                           tablat	equ	0xFF5
 29030                           prodh	equ	0xFF4
 29031                           prodl	equ	0xFF3
 29032                           intcon	equ	0xFF2
 29033                           indf0	equ	0xFEF
 29034                           postinc0	equ	0xFEE
 29035                           fsr0h	equ	0xFEA
 29036                           fsr0l	equ	0xFE9
 29037                           wreg	equ	0xFE8
 29038                           indf1	equ	0xFE7
 29039                           postinc1	equ	0xFE6
 29040                           postdec1	equ	0xFE5
 29041                           fsr1h	equ	0xFE2
 29042                           fsr1l	equ	0xFE1
 29043                           indf2	equ	0xFDF
 29044                           postinc2	equ	0xFDE
 29045                           postdec2	equ	0xFDD
 29046                           plusw2	equ	0xFDB
 29047                           fsr2h	equ	0xFDA
 29048                           fsr2l	equ	0xFD9
 29049                           status	equ	0xFD8
 29050                           
 29051 ;; *************** function _fifo_init *****************
 29052 ;; Defined at:
 29053 ;;		line 14 in file "fifo.c"
 29054 ;; Parameters:    Size  Location     Type
 29055 ;;  f               1    wreg     PTR struct .
 29056 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 29057 ;;  buf             2   30[COMRAM] PTR const void 
 29058 ;;		 -> can_inputBuffer(494), serial_inputBuffer(128), 
 29059 ;;  size            2   32[COMRAM] unsigned short 
 29060 ;; Auto vars:     Size  Location     Type
 29061 ;;  f               1   34[COMRAM] PTR struct .
 29062 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 29063 ;; Return value:  Size  Location     Type
 29064 ;;		None               void
 29065 ;; Registers used:
 29066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29067 ;; Tracked objects:
 29068 ;;		On entry : F/0
 29069 ;;		On exit  : F/0
 29070 ;;		Unchanged: F/0
 29071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29072 ;;      Params:         4       0       0       0       0       0       0
 29073 ;;      Locals:         1       0       0       0       0       0       0
 29074 ;;      Temps:          0       0       0       0       0       0       0
 29075 ;;      Totals:         5       0       0       0       0       0       0
 29076 ;;Total ram usage:        5 bytes
 29077 ;; Hardware stack levels used:    1
 29078 ;; Hardware stack levels required when called:    3
 29079 ;; This function calls:
 29080 ;;		Nothing
 29081 ;; This function is called by:
 29082 ;;		_main
 29083 ;; This function uses a non-reentrant model
 29084 ;;
 29085                           
 29086                           	psect	text85
 29087  000C68                     __ptext85:
 29088                           	opt stack 0
 29089  000C68                     _fifo_init:
 29090                           	opt stack 26
 29091                           
 29092                           ;incstack = 0
 29093                           ;incstack = 0
 29094                           ;fifo_init@f stored from wreg
 29095  000C68  CFE8 F023          	movff	wreg,fifo_init@f
 29096                           
 29097                           ; BSR set to: 0
 29098                           ;fifo.c: 15: f->head = 0;
 29099  000C6C  5023               	movf	fifo_init@f,w,c
 29100  000C6E  6ED9               	movwf	fsr2l,c
 29101  000C70  6ADA               	clrf	fsr2h,c
 29102  000C72  0E02               	movlw	2
 29103                           
 29104                           ;fifo.c: 16: f->tail = 0;
 29105  000C74  D811               	call	PL120	;call to abstracted procedure
 29106  000C76  0E04               	movlw	4
 29107                           
 29108                           ;fifo.c: 17: f->size = size;
 29109  000C78  D80F               	call	PL120	;call to abstracted procedure
 29110  000C7A  0E06               	movlw	6
 29111  000C7C  26D9               	addwf	fsr2l,f,c
 29112  000C7E  6ADA               	clrf	fsr2h,c
 29113  000C80  C021  FFDE         	movff	fifo_init@size,postinc2
 29114  000C84  C022  FFDD         	movff	fifo_init@size+1,postdec2
 29115                           
 29116                           ; BSR set to: 0
 29117                           ;fifo.c: 18: f->buf = buf;
 29118  000C88  5023               	movf	fifo_init@f,w,c
 29119  000C8A  6ED9               	movwf	fsr2l,c
 29120  000C8C  6ADA               	clrf	fsr2h,c
 29121  000C8E  C01F  FFDE         	movff	fifo_init@buf,postinc2
 29122  000C92  C020  FFDD         	movff	fifo_init@buf+1,postdec2
 29123                           
 29124                           ; BSR set to: 0
 29125  000C96  0012               	return	
 29126  000C98                     __end_of_fifo_init:
 29127                           	opt stack 0
 29128  000C98                     PL120:
 29129                           	opt stack 26
 29130  000C98  26D9               	addwf	fsr2l,f,c
 29131  000C9A  6ADA               	clrf	fsr2h,c
 29132  000C9C  6ADE               	clrf	postinc2,c
 29133  000C9E  6ADD               	clrf	postdec2,c
 29134  000CA0  5023               	movf	fifo_init@f,w,c
 29135  000CA2  6ED9               	movwf	fsr2l,c
 29136  000CA4  6ADA               	clrf	fsr2h,c
 29137  000CA6  0012               	return	
 29138  000CA8                     __end_ofPL120:
 29139                           	opt stack 0
 29140                           tblptru	equ	0xFF8
 29141                           tblptrh	equ	0xFF7
 29142                           tblptrl	equ	0xFF6
 29143                           tablat	equ	0xFF5
 29144                           prodh	equ	0xFF4
 29145                           prodl	equ	0xFF3
 29146                           intcon	equ	0xFF2
 29147                           indf0	equ	0xFEF
 29148                           postinc0	equ	0xFEE
 29149                           fsr0h	equ	0xFEA
 29150                           fsr0l	equ	0xFE9
 29151                           wreg	equ	0xFE8
 29152                           indf1	equ	0xFE7
 29153                           postinc1	equ	0xFE6
 29154                           postdec1	equ	0xFE5
 29155                           fsr1h	equ	0xFE2
 29156                           fsr1l	equ	0xFE1
 29157                           indf2	equ	0xFDF
 29158                           postinc2	equ	0xFDE
 29159                           postdec2	equ	0xFDD
 29160                           plusw2	equ	0xFDB
 29161                           fsr2h	equ	0xFDA
 29162                           fsr2l	equ	0xFD9
 29163                           status	equ	0xFD8
 29164                           
 29165 ;; *************** function _fifo_getFree *****************
 29166 ;; Defined at:
 29167 ;;		line 97 in file "fifo.c"
 29168 ;; Parameters:    Size  Location     Type
 29169 ;;  f               1    wreg     PTR struct .
 29170 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 29171 ;; Auto vars:     Size  Location     Type
 29172 ;;  f               1   32[COMRAM] PTR struct .
 29173 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 29174 ;; Return value:  Size  Location     Type
 29175 ;;                  2   30[COMRAM] unsigned short 
 29176 ;; Registers used:
 29177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29178 ;; Tracked objects:
 29179 ;;		On entry : F/0
 29180 ;;		On exit  : F/0
 29181 ;;		Unchanged: 0/0
 29182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29183 ;;      Params:         2       0       0       0       0       0       0
 29184 ;;      Locals:         1       0       0       0       0       0       0
 29185 ;;      Temps:          0       8       0       0       0       0       0
 29186 ;;      Totals:         3       8       0       0       0       0       0
 29187 ;;Total ram usage:       11 bytes
 29188 ;; Hardware stack levels used:    1
 29189 ;; Hardware stack levels required when called:    3
 29190 ;; This function calls:
 29191 ;;		Nothing
 29192 ;; This function is called by:
 29193 ;;		_main
 29194 ;; This function uses a non-reentrant model
 29195 ;;
 29196                           
 29197                           	psect	text86
 29198  001828                     __ptext86:
 29199                           	opt stack 0
 29200  001828                     _fifo_getFree:
 29201                           	opt stack 26
 29202                           
 29203                           ; BSR set to: 0
 29204                           ;incstack = 0
 29205                           ;incstack = 0
 29206                           ;fifo_getFree@f stored from wreg
 29207  001828  CFE8 F021          	movff	wreg,fifo_getFree@f
 29208                           
 29209                           ; BSR set to: 0
 29210                           ;fifo.c: 98: if (f->head < f->tail) {
 29211  00182C  D83F               	call	PL76	;call to abstracted procedure
 29212  00182E  5021               	movf	fifo_getFree@f,w,c
 29213  001830  6EE1               	movwf	fsr1l,c
 29214  001832  6AE2               	clrf	fsr1h,c
 29215  001834  0E02               	movlw	2
 29216  001836  26E1               	addwf	fsr1l,f,c
 29217  001838  6AE2               	clrf	fsr1h,c
 29218  00183A  52E6               	movf	postinc1,f,c
 29219  00183C  52DE               	movf	postinc2,f,c
 29220  00183E  50DD               	movf	postdec2,w,c
 29221  001840  5CE5               	subwf	postdec1,w,c
 29222  001842  E102               	bnz	u18935
 29223  001844  50DF               	movf	indf2,w,c
 29224  001846  5CE7               	subwf	indf1,w,c
 29225  001848                     u18935:
 29226  001848  E210               	bc	l15311
 29227                           
 29228                           ; BSR set to: 0
 29229                           ;fifo.c: 99: return (f->tail - f->head);
 29230  00184A  D837               	call	PL132	;call to abstracted procedure
 29231  00184C  CFDE F060          	movff	postinc2,??_fifo_getFree
 29232  001850  CFDD F061          	movff	postdec2,??_fifo_getFree+1
 29233  001854  D82B               	call	PL76	;call to abstracted procedure
 29234  001856  CFDE F062          	movff	postinc2,??_fifo_getFree+2
 29235  00185A  CFDD F063          	movff	postdec2,??_fifo_getFree+3
 29236  00185E  5160               	movf	??_fifo_getFree& (0+255),w,b
 29237  001860  5D62               	subwf	(??_fifo_getFree+2)& (0+255),w,b
 29238  001862  6E1F               	movwf	?_fifo_getFree,c
 29239  001864  5161               	movf	(??_fifo_getFree+1)& (0+255),w,b
 29240  001866  5963               	subwfb	(??_fifo_getFree+3)& (0+255),w,b
 29241  001868  D01F               	goto	L59
 29242  00186A                     l15311:
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;fifo.c: 101: else {
 29246                           ;fifo.c: 102: return (f->size + (f->tail - f->head));
 29247  00186A  D820               	call	PL76	;call to abstracted procedure
 29248  00186C  CFDE F060          	movff	postinc2,??_fifo_getFree
 29249  001870  CFDD F061          	movff	postdec2,??_fifo_getFree+1
 29250  001874  D822               	call	PL132	;call to abstracted procedure
 29251  001876  CFDE F062          	movff	postinc2,??_fifo_getFree+2
 29252  00187A  CFDD F063          	movff	postdec2,??_fifo_getFree+3
 29253  00187E  5021               	movf	fifo_getFree@f,w,c
 29254  001880  6ED9               	movwf	fsr2l,c
 29255  001882  6ADA               	clrf	fsr2h,c
 29256  001884  0E06               	movlw	6
 29257  001886  26D9               	addwf	fsr2l,f,c
 29258  001888  6ADA               	clrf	fsr2h,c
 29259  00188A  CFDE F064          	movff	postinc2,??_fifo_getFree+4
 29260  00188E  CFDD F065          	movff	postdec2,??_fifo_getFree+5
 29261  001892  5162               	movf	(??_fifo_getFree+2)& (0+255),w,b
 29262  001894  5D64               	subwf	(??_fifo_getFree+4)& (0+255),w,b
 29263  001896  6F66               	movwf	(??_fifo_getFree+6)& (0+255),b
 29264  001898  5163               	movf	(??_fifo_getFree+3)& (0+255),w,b
 29265  00189A  5965               	subwfb	(??_fifo_getFree+5)& (0+255),w,b
 29266  00189C  6F67               	movwf	(??_fifo_getFree+7)& (0+255),b
 29267  00189E  5160               	movf	??_fifo_getFree& (0+255),w,b
 29268  0018A0  2566               	addwf	(??_fifo_getFree+6)& (0+255),w,b
 29269  0018A2  6E1F               	movwf	?_fifo_getFree,c
 29270  0018A4  5161               	movf	(??_fifo_getFree+1)& (0+255),w,b
 29271  0018A6  2167               	addwfc	(??_fifo_getFree+7)& (0+255),w,b
 29272  0018A8                     L59:
 29273  0018A8  6E20               	movwf	?_fifo_getFree+1,c
 29274                           
 29275                           ; BSR set to: 0
 29276  0018AA  0012               	return	
 29277  0018AC                     __end_of_fifo_getFree:
 29278                           	opt stack 0
 29279  0018AC                     PL76:
 29280                           	opt stack 26
 29281  0018AC  5021               	movf	fifo_getFree@f,w,c
 29282  0018AE  6ED9               	movwf	fsr2l,c
 29283  0018B0  6ADA               	clrf	fsr2h,c
 29284  0018B2  0E04               	movlw	4
 29285  0018B4  26D9               	addwf	fsr2l,f,c
 29286  0018B6  6ADA               	clrf	fsr2h,c
 29287  0018B8  0012               	return	
 29288  0018BA                     __end_ofPL76:
 29289                           	opt stack 0
 29290  0018BA                     PL132:
 29291                           	opt stack 26
 29292  0018BA  5021               	movf	fifo_getFree@f,w,c
 29293  0018BC  6ED9               	movwf	fsr2l,c
 29294  0018BE  6ADA               	clrf	fsr2h,c
 29295  0018C0  0E02               	movlw	2
 29296  0018C2  26D9               	addwf	fsr2l,f,c
 29297  0018C4  6ADA               	clrf	fsr2h,c
 29298  0018C6  0012               	return	
 29299  0018C8                     __end_ofPL132:
 29300                           	opt stack 0
 29301                           tblptru	equ	0xFF8
 29302                           tblptrh	equ	0xFF7
 29303                           tblptrl	equ	0xFF6
 29304                           tablat	equ	0xFF5
 29305                           prodh	equ	0xFF4
 29306                           prodl	equ	0xFF3
 29307                           intcon	equ	0xFF2
 29308                           indf0	equ	0xFEF
 29309                           postinc0	equ	0xFEE
 29310                           fsr0h	equ	0xFEA
 29311                           fsr0l	equ	0xFE9
 29312                           wreg	equ	0xFE8
 29313                           indf1	equ	0xFE7
 29314                           postinc1	equ	0xFE6
 29315                           postdec1	equ	0xFE5
 29316                           fsr1h	equ	0xFE2
 29317                           fsr1l	equ	0xFE1
 29318                           indf2	equ	0xFDF
 29319                           postinc2	equ	0xFDE
 29320                           postdec2	equ	0xFDD
 29321                           plusw2	equ	0xFDB
 29322                           fsr2h	equ	0xFDA
 29323                           fsr2l	equ	0xFD9
 29324                           status	equ	0xFD8
 29325                           
 29326 ;; *************** function _Interrupt *****************
 29327 ;; Defined at:
 29328 ;;		line 146 in file "main.c"
 29329 ;; Parameters:    Size  Location     Type
 29330 ;;		None
 29331 ;; Auto vars:     Size  Location     Type
 29332 ;;  fail            1   29[COMRAM] unsigned char 
 29333 ;;  c               1   28[COMRAM] unsigned char 
 29334 ;; Return value:  Size  Location     Type
 29335 ;;		None               void
 29336 ;; Registers used:
 29337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29338 ;; Tracked objects:
 29339 ;;		On entry : 0/0
 29340 ;;		On exit  : 0/0
 29341 ;;		Unchanged: 0/0
 29342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 29343 ;;      Params:         0       0       0       0       0       0       0
 29344 ;;      Locals:         2       0       0       0       0       0       0
 29345 ;;      Temps:          9       0       0       0       0       0       0
 29346 ;;      Totals:        11       0       0       0       0       0       0
 29347 ;;Total ram usage:       11 bytes
 29348 ;; Hardware stack levels used:    1
 29349 ;; Hardware stack levels required when called:    2
 29350 ;; This function calls:
 29351 ;;		_ReadUSART
 29352 ;;		_fifo_write
 29353 ;;		_ECANReceiveMessage
 29354 ;;		i1_fifo_getFree
 29355 ;;		i1_WriteTimer0
 29356 ;; This function is called by:
 29357 ;;		Interrupt level 1
 29358 ;; This function uses a non-reentrant model
 29359 ;;
 29360                           
 29361                           	psect	intcodelo
 29362  000018                     __pintcodelo:
 29363                           	opt stack 0
 29364  000018                     _Interrupt:
 29365                           	opt stack 19
 29366                           
 29367                           ; BSR set to: 0
 29368                           ;incstack = 0
 29369  000018  CFD8 F016          	movff	status,??_Interrupt+2
 29370  00001C  CFE8 F017          	movff	wreg,??_Interrupt+3
 29371  000020  CFE0 F018          	movff	bsr,??_Interrupt+4
 29372  000024  CFE1 F019          	movff	fsr1l,??_Interrupt+5
 29373  000028  CFE2 F01A          	movff	fsr1h,??_Interrupt+6
 29374  00002C  CFD9 F01B          	movff	fsr2l,??_Interrupt+7
 29375  000030  CFDA F01C          	movff	fsr2h,??_Interrupt+8
 29376  000034                     
 29377                           ;main.c: 147: uint8_t c;
 29378                           ;main.c: 150: if ( 1 == PIR1bits.RCIF ) {
 29379  000034  AA9E               	btfss	3998,5,c	;volatile
 29380  000036  D001               	goto	i1u1291_21
 29381  000038  D001               	goto	i1u1291_20
 29382  00003A                     i1u1291_21:
 29383  00003A  D028               	goto	i1l415
 29384  00003C                     i1u1291_20:
 29385  00003C                     
 29386                           ;main.c: 152: c = ReadUSART();
 29387  00003C  EC98  F004         	call	_ReadUSART	;wreg free
 29388  000040  6E1D               	movwf	Interrupt@c,c
 29389  000042                     
 29390                           ;main.c: 154: if ( 1 != fifo_write( &serialInputFifo, &c, 1 ) ) {
 29391  000042  0E1D               	movlw	low Interrupt@c
 29392  000044  6E01               	movwf	?_fifo_write,c
 29393  000046  0E00               	movlw	high Interrupt@c
 29394  000048  6E02               	movwf	?_fifo_write+1,c
 29395  00004A  0E0F               	movlw	15
 29396  00004C  6E02               	movwf	?_fifo_write+1,c
 29397  00004E  0E5F               	movlw	__accesstop+-1
 29398  000050  6401               	cpfsgt	?_fifo_write,c
 29399  000052  6A02               	clrf	?_fifo_write+1,c
 29400  000054  0E01               	movlw	1
 29401  000056  6E03               	movwf	?_fifo_write+2,c
 29402  000058  0E00               	movlw	0
 29403  00005A  6E04               	movwf	?_fifo_write+3,c
 29404  00005C  0E00               	movlw	0
 29405  00005E  6E05               	movwf	?_fifo_write+4,c
 29406  000060  0E00               	movlw	0
 29407  000062  6E06               	movwf	?_fifo_write+5,c
 29408  000064  0100               	movlb	0	; () banked
 29409  000066  0EF7               	movlw	_serialInputFifo& (0+255)
 29410  000068  EC8E  F014         	call	_fifo_write
 29411  00006C  0401               	decf	?_fifo_write,w,c
 29412  00006E  1002               	iorwf	?_fifo_write+1,w,c
 29413  000070  B4D8               	btfsc	status,2,c
 29414  000072  D001               	goto	i1u1292_21
 29415  000074  D001               	goto	i1u1292_20
 29416  000076                     i1u1292_21:
 29417  000076  D008               	goto	i1l11187
 29418  000078                     i1u1292_20:
 29419  000078                     
 29420                           ; BSR set to: 0
 29421                           ;main.c: 156: uart_receiveOverruns++;
 29422  000078  0E01               	movlw	1
 29423  00007A  27E1               	addwf	_uart_receiveOverruns& (0+255),f,b
 29424  00007C  0E00               	movlw	0
 29425  00007E  23E2               	addwfc	(_uart_receiveOverruns+1)& (0+255),f,b
 29426  000080  0E00               	movlw	0
 29427  000082  23E3               	addwfc	(_uart_receiveOverruns+2)& (0+255),f,b
 29428  000084  0E00               	movlw	0
 29429  000086  23E4               	addwfc	(_uart_receiveOverruns+3)& (0+255),f,b
 29430  000088                     i1l11187:
 29431                           
 29432                           ; BSR set to: 0
 29433                           ;main.c: 157: }
 29434                           ;main.c: 160: PIR1bits.RCIF = 0;
 29435  000088  9A9E               	bcf	3998,5,c	;volatile
 29436                           
 29437                           ;main.c: 162: }
 29438  00008A  D07D               	goto	i1l417
 29439  00008C                     i1l415:
 29440                           
 29441                           ;main.c: 164: else if (1 == INTCONbits.TMR0IF) {
 29442  00008C  A4F2               	btfss	intcon,2,c	;volatile
 29443  00008E  D001               	goto	i1u1293_21
 29444  000090  D001               	goto	i1u1293_20
 29445  000092                     i1u1293_21:
 29446  000092  D079               	goto	i1l417
 29447  000094                     i1u1293_20:
 29448  000094                     
 29449                           ;main.c: 166: WriteTimer0(0xfb1d);
 29450  000094  0EFB               	movlw	251
 29451  000096  6E02               	movwf	?i1_WriteTimer0+1,c
 29452  000098  0E1D               	movlw	29
 29453  00009A  6E01               	movwf	?i1_WriteTimer0,c
 29454  00009C  EC4A  F004         	call	i1_WriteTimer0	;wreg free
 29455  0000A0                     
 29456                           ;main.c: 168: timer++;
 29457  0000A0  0E01               	movlw	1
 29458  0000A2  0100               	movlb	0	; () banked
 29459  0000A4  27DD               	addwf	_timer& (0+255),f,b	;volatile
 29460  0000A6  0E00               	movlw	0
 29461  0000A8  23DE               	addwfc	(_timer+1)& (0+255),f,b	;volatile
 29462  0000AA  0E00               	movlw	0
 29463  0000AC  23DF               	addwfc	(_timer+2)& (0+255),f,b	;volatile
 29464  0000AE  0E00               	movlw	0
 29465  0000B0  23E0               	addwfc	(_timer+3)& (0+255),f,b	;volatile
 29466  0000B2                     
 29467                           ; BSR set to: 0
 29468                           ;main.c: 169: timekeeper++;
 29469  0000B2  0E01               	movlw	1
 29470  0000B4  27D9               	addwf	_timekeeper& (0+255),f,b	;volatile
 29471  0000B6  0E00               	movlw	0
 29472  0000B8  23DA               	addwfc	(_timekeeper+1)& (0+255),f,b	;volatile
 29473  0000BA  0E00               	movlw	0
 29474  0000BC  23DB               	addwfc	(_timekeeper+2)& (0+255),f,b	;volatile
 29475  0000BE  0E00               	movlw	0
 29476  0000C0  23DC               	addwfc	(_timekeeper+3)& (0+255),f,b	;volatile
 29477  0000C2                     
 29478                           ; BSR set to: 0
 29479                           ;main.c: 172: status_led_cnt++;
 29480  0000C2  4A2A               	infsnz	_status_led_cnt,f,c	;volatile
 29481  0000C4  2A2B               	incf	_status_led_cnt+1,f,c	;volatile
 29482  0000C6                     
 29483                           ; BSR set to: 0
 29484                           ;main.c: 173: if ( ( 2 == ledFunctionality ) &&
 29485                           ;main.c: 174: ( status_led_cnt > 1000 ) ) {
 29486  0000C6  5037               	movf	_ledFunctionality,w,c	;volatile
 29487  0000C8  0A02               	xorlw	2
 29488  0000CA  A4D8               	btfss	status,2,c
 29489  0000CC  D001               	goto	i1u1294_21
 29490  0000CE  D001               	goto	i1u1294_20
 29491  0000D0                     i1u1294_21:
 29492  0000D0  D00C               	goto	i1l11203
 29493  0000D2                     i1u1294_20:
 29494  0000D2                     
 29495                           ; BSR set to: 0
 29496  0000D2  0EE9               	movlw	233
 29497  0000D4  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29498  0000D6  0E03               	movlw	3
 29499  0000D8  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29500  0000DA  A0D8               	btfss	status,0,c
 29501  0000DC  D001               	goto	i1u1295_21
 29502  0000DE  D001               	goto	i1u1295_20
 29503  0000E0                     i1u1295_21:
 29504  0000E0  D004               	goto	i1l11203
 29505  0000E2                     i1u1295_20:
 29506  0000E2                     i1l11201:
 29507                           
 29508                           ; BSR set to: 0
 29509                           ;main.c: 175: LATC1 = ~LATC1;
 29510  0000E2  728B               	btg	3979,1,c	;volatile
 29511                           
 29512                           ;main.c: 176: status_led_cnt = 0;
 29513  0000E4  6A2A               	clrf	_status_led_cnt,c	;volatile
 29514  0000E6  6A2B               	clrf	_status_led_cnt+1,c	;volatile
 29515                           
 29516                           ;main.c: 177: }
 29517  0000E8  D04D               	goto	i1l420
 29518  0000EA                     i1l11203:
 29519                           
 29520                           ; BSR set to: 0
 29521                           ;main.c: 178: else if ( ( 3 == ledFunctionality ) &&
 29522                           ;main.c: 179: ( status_led_cnt > 400 ) ) {
 29523  0000EA  5037               	movf	_ledFunctionality,w,c	;volatile
 29524  0000EC  0A03               	xorlw	3
 29525  0000EE  A4D8               	btfss	status,2,c
 29526  0000F0  D001               	goto	i1u1296_21
 29527  0000F2  D001               	goto	i1u1296_20
 29528  0000F4                     i1u1296_21:
 29529  0000F4  D009               	goto	i1l11209
 29530  0000F6                     i1u1296_20:
 29531  0000F6                     
 29532                           ; BSR set to: 0
 29533  0000F6  0E91               	movlw	145
 29534  0000F8  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29535  0000FA  0E01               	movlw	1
 29536  0000FC  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29537  0000FE  A0D8               	btfss	status,0,c
 29538  000100  D001               	goto	i1u1297_21
 29539  000102  D001               	goto	i1u1297_20
 29540  000104                     i1u1297_21:
 29541  000104  D001               	goto	i1l11209
 29542  000106                     i1u1297_20:
 29543  000106  D7ED               	goto	i1l11201
 29544  000108                     i1l11209:
 29545                           
 29546                           ; BSR set to: 0
 29547                           ;main.c: 183: else if ( ( 4 == ledFunctionality ) &&
 29548                           ;main.c: 184: ( status_led_cnt > 100 ) ) {
 29549  000108  5037               	movf	_ledFunctionality,w,c	;volatile
 29550  00010A  0A04               	xorlw	4
 29551  00010C  A4D8               	btfss	status,2,c
 29552  00010E  D001               	goto	i1u1298_21
 29553  000110  D001               	goto	i1u1298_20
 29554  000112                     i1u1298_21:
 29555  000112  D009               	goto	i1l11215
 29556  000114                     i1u1298_20:
 29557  000114                     
 29558                           ; BSR set to: 0
 29559  000114  0E65               	movlw	101
 29560  000116  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29561  000118  0E00               	movlw	0
 29562  00011A  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29563  00011C  A0D8               	btfss	status,0,c
 29564  00011E  D001               	goto	i1u1299_21
 29565  000120  D001               	goto	i1u1299_20
 29566  000122                     i1u1299_21:
 29567  000122  D001               	goto	i1l11215
 29568  000124                     i1u1299_20:
 29569  000124  D7DE               	goto	i1l11201
 29570  000126                     i1l11215:
 29571                           
 29572                           ; BSR set to: 0
 29573                           ;main.c: 188: else if ( ( 5 == ledFunctionality ) &&
 29574                           ;main.c: 189: (status_led_cnt > 70)) {
 29575  000126  5037               	movf	_ledFunctionality,w,c	;volatile
 29576  000128  0A05               	xorlw	5
 29577  00012A  A4D8               	btfss	status,2,c
 29578  00012C  D001               	goto	i1u1300_21
 29579  00012E  D001               	goto	i1u1300_20
 29580  000130                     i1u1300_21:
 29581  000130  D009               	goto	i1l11221
 29582  000132                     i1u1300_20:
 29583  000132                     
 29584                           ; BSR set to: 0
 29585  000132  0E47               	movlw	71
 29586  000134  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29587  000136  0E00               	movlw	0
 29588  000138  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29589  00013A  A0D8               	btfss	status,0,c
 29590  00013C  D001               	goto	i1u1301_21
 29591  00013E  D001               	goto	i1u1301_20
 29592  000140                     i1u1301_21:
 29593  000140  D001               	goto	i1l11221
 29594  000142                     i1u1301_20:
 29595  000142  D7CF               	goto	i1l11201
 29596  000144                     i1l11221:
 29597                           
 29598                           ; BSR set to: 0
 29599                           ;main.c: 193: else if ( ( 6 == ledFunctionality ) &&
 29600                           ;main.c: 194: ( status_led_cnt > 40 ) ) {
 29601  000144  5037               	movf	_ledFunctionality,w,c	;volatile
 29602  000146  0A06               	xorlw	6
 29603  000148  A4D8               	btfss	status,2,c
 29604  00014A  D001               	goto	i1u1302_21
 29605  00014C  D001               	goto	i1u1302_20
 29606  00014E                     i1u1302_21:
 29607  00014E  D009               	goto	i1l11227
 29608  000150                     i1u1302_20:
 29609  000150                     
 29610                           ; BSR set to: 0
 29611  000150  0E29               	movlw	41
 29612  000152  5C2A               	subwf	_status_led_cnt,w,c	;volatile
 29613  000154  0E00               	movlw	0
 29614  000156  582B               	subwfb	_status_led_cnt+1,w,c	;volatile
 29615  000158  A0D8               	btfss	status,0,c
 29616  00015A  D001               	goto	i1u1303_21
 29617  00015C  D001               	goto	i1u1303_20
 29618  00015E                     i1u1303_21:
 29619  00015E  D001               	goto	i1l11227
 29620  000160                     i1u1303_20:
 29621  000160  D7C0               	goto	i1l11201
 29622  000162                     i1l11227:
 29623                           
 29624                           ; BSR set to: 0
 29625                           ;main.c: 198: else if ( 1 == ledFunctionality ) {
 29626  000162  0437               	decf	_ledFunctionality,w,c	;volatile
 29627  000164  A4D8               	btfss	status,2,c
 29628  000166  D001               	goto	i1u1304_21
 29629  000168  D001               	goto	i1u1304_20
 29630  00016A                     i1u1304_21:
 29631  00016A  D004               	goto	i1l429
 29632  00016C                     i1u1304_20:
 29633  00016C                     
 29634                           ; BSR set to: 0
 29635                           ;main.c: 199: LATC1 = 1;
 29636  00016C  828B               	bsf	3979,1,c	;volatile
 29637                           
 29638                           ;main.c: 200: status_led_cnt = 0;
 29639  00016E  6A2A               	clrf	_status_led_cnt,c	;volatile
 29640  000170  6A2B               	clrf	_status_led_cnt+1,c	;volatile
 29641                           
 29642                           ;main.c: 201: }
 29643  000172  D008               	goto	i1l420
 29644  000174                     i1l429:
 29645                           
 29646                           ; BSR set to: 0
 29647                           ;main.c: 202: else if ( 0 == ledFunctionality ) {
 29648  000174  6637               	tstfsz	_ledFunctionality,c	;volatile
 29649  000176  D001               	goto	i1u1305_21
 29650  000178  D001               	goto	i1u1305_20
 29651  00017A                     i1u1305_21:
 29652  00017A  D004               	goto	i1l426
 29653  00017C                     i1u1305_20:
 29654  00017C                     
 29655                           ; BSR set to: 0
 29656                           ;main.c: 203: LATC1 = 0;
 29657  00017C  928B               	bcf	3979,1,c	;volatile
 29658                           
 29659                           ;main.c: 204: status_led_cnt = 0;
 29660  00017E  6A2A               	clrf	_status_led_cnt,c	;volatile
 29661  000180  6A2B               	clrf	_status_led_cnt+1,c	;volatile
 29662  000182  D000               	goto	i1l420
 29663  000184                     i1l426:
 29664  000184                     i1l420:
 29665                           
 29666                           ; BSR set to: 0
 29667                           ;main.c: 205: }
 29668                           ;main.c: 207: INTCONbits.TMR0IF = 0;
 29669  000184  94F2               	bcf	intcon,2,c	;volatile
 29670  000186                     i1l417:
 29671                           
 29672                           ;main.c: 208: }
 29673                           ;main.c: 211: if ( 1 == ERRIF ) {
 29674  000186  AAA4               	btfss	4004,5,c	;volatile
 29675  000188  D001               	goto	i1u1306_21
 29676  00018A  D001               	goto	i1u1306_20
 29677  00018C                     i1u1306_21:
 29678  00018C  D02A               	goto	i1l11253
 29679  00018E                     i1u1306_20:
 29680  00018E                     
 29681                           ;main.c: 214: if ( COMSTATbits.RXBnOVFL ) {
 29682  00018E  AC74               	btfss	3956,6,c	;volatile
 29683  000190  D001               	goto	i1u1307_21
 29684  000192  D001               	goto	i1u1307_20
 29685  000194                     i1u1307_21:
 29686  000194  D00A               	goto	i1l11239
 29687  000196                     i1u1307_20:
 29688  000196                     
 29689                           ;main.c: 215: can_receiveOverruns++;
 29690  000196  0E01               	movlw	1
 29691  000198  0100               	movlb	0	; () banked
 29692  00019A  27C1               	addwf	_can_receiveOverruns& (0+255),f,b
 29693  00019C  0E00               	movlw	0
 29694  00019E  23C2               	addwfc	(_can_receiveOverruns+1)& (0+255),f,b
 29695  0001A0  0E00               	movlw	0
 29696  0001A2  23C3               	addwfc	(_can_receiveOverruns+2)& (0+255),f,b
 29697  0001A4  0E00               	movlw	0
 29698  0001A6  23C4               	addwfc	(_can_receiveOverruns+3)& (0+255),f,b
 29699  0001A8                     
 29700                           ; BSR set to: 0
 29701                           ;main.c: 216: COMSTATbits.RXBnOVFL = 0;
 29702  0001A8  9C74               	bcf	3956,6,c	;volatile
 29703  0001AA                     i1l11239:
 29704                           
 29705                           ;main.c: 217: }
 29706                           ;main.c: 220: if ( COMSTATbits.TXBO ) {
 29707  0001AA  AA74               	btfss	3956,5,c	;volatile
 29708  0001AC  D001               	goto	i1u1308_21
 29709  0001AE  D001               	goto	i1u1308_20
 29710  0001B0                     i1u1308_21:
 29711  0001B0  D003               	goto	i1l434
 29712  0001B2                     i1u1308_20:
 29713  0001B2                     
 29714                           ;main.c: 222: ledFunctionality = 6;
 29715  0001B2  0E06               	movlw	6
 29716  0001B4  6E37               	movwf	_ledFunctionality,c	;volatile
 29717                           
 29718                           ;main.c: 223: }
 29719  0001B6  D014               	goto	i1l11251
 29720  0001B8                     i1l434:
 29721                           
 29722                           ;main.c: 224: else if ( COMSTATbits.TXBP || COMSTATbits.RXBP ) {
 29723  0001B8  B874               	btfsc	3956,4,c	;volatile
 29724  0001BA  D001               	goto	i1u1309_21
 29725  0001BC  D001               	goto	i1u1309_20
 29726  0001BE                     i1u1309_21:
 29727  0001BE  D004               	goto	i1l11245
 29728  0001C0                     i1u1309_20:
 29729  0001C0  A674               	btfss	3956,3,c	;volatile
 29730  0001C2  D001               	goto	i1u1310_21
 29731  0001C4  D001               	goto	i1u1310_20
 29732  0001C6                     i1u1310_21:
 29733  0001C6  D003               	goto	i1l436
 29734  0001C8                     i1u1310_20:
 29735  0001C8                     i1l11245:
 29736                           
 29737                           ;main.c: 226: ledFunctionality = 5;
 29738  0001C8  0E05               	movlw	5
 29739  0001CA  6E37               	movwf	_ledFunctionality,c	;volatile
 29740                           
 29741                           ;main.c: 227: }
 29742  0001CC  D009               	goto	i1l11251
 29743  0001CE                     i1l436:
 29744                           
 29745                           ;main.c: 228: else if ( COMSTATbits.EWARN ) {
 29746  0001CE  A074               	btfss	3956,0,c	;volatile
 29747  0001D0  D001               	goto	i1u1311_21
 29748  0001D2  D001               	goto	i1u1311_20
 29749  0001D4                     i1u1311_21:
 29750  0001D4  D003               	goto	i1l11249
 29751  0001D6                     i1u1311_20:
 29752  0001D6                     
 29753                           ;main.c: 230: ledFunctionality = 4;
 29754  0001D6  0E04               	movlw	4
 29755  0001D8  6E37               	movwf	_ledFunctionality,c	;volatile
 29756                           
 29757                           ;main.c: 231: }
 29758  0001DA  D002               	goto	i1l11251
 29759  0001DC                     i1l11249:
 29760                           
 29761                           ;main.c: 232: else {
 29762                           ;main.c: 234: ledFunctionality = 1;
 29763  0001DC  0E01               	movlw	1
 29764  0001DE  6E37               	movwf	_ledFunctionality,c	;volatile
 29765  0001E0                     i1l11251:
 29766                           
 29767                           ;main.c: 235: }
 29768                           ;main.c: 237: ERRIF = 0;
 29769  0001E0  9AA4               	bcf	4004,5,c	;volatile
 29770  0001E2                     i1l11253:
 29771                           
 29772                           ;main.c: 238: }
 29773                           ;main.c: 241: if ( RXBnIF ) {
 29774  0001E2  A2A4               	btfss	4004,1,c	;volatile
 29775  0001E4  D001               	goto	i1u1312_21
 29776  0001E6  D001               	goto	i1u1312_20
 29777  0001E8                     i1u1312_21:
 29778  0001E8  D097               	goto	i1l454
 29779  0001EA                     i1u1312_20:
 29780  0001EA                     
 29781                           ;main.c: 243: if ( ECANReceiveMessage((unsigned long *)&id,
 29782                           ;main.c: 244: (BYTE*)&data,
 29783                           ;main.c: 245: (BYTE*)&dlc,
 29784                           ;main.c: 246: &flags) ) {
 29785  0001EA  0102               	movlb	2	; () banked
 29786  0001EC  0E02               	movlw	high _data
 29787  0001EE  6E09               	movwf	?_ECANReceiveMessage+1,c
 29788  0001F0  0E80               	movlw	low _data
 29789  0001F2  6E08               	movwf	?_ECANReceiveMessage,c
 29790  0001F4  0E3D               	movlw	low _dlc
 29791  0001F6  6E0A               	movwf	?_ECANReceiveMessage+2,c
 29792  0001F8  0E3E               	movlw	low _flags
 29793  0001FA  6E0B               	movwf	?_ECANReceiveMessage+3,c
 29794  0001FC  0E39               	movlw	_id& (0+255)
 29795  0001FE  EC9B  F01A         	call	_ECANReceiveMessage
 29796  000202  0900               	iorlw	0
 29797  000204  B4D8               	btfsc	status,2,c
 29798  000206  D001               	goto	i1u1313_21
 29799  000208  D001               	goto	i1u1313_20
 29800  00020A                     i1u1313_21:
 29801  00020A  D085               	goto	i1l11289
 29802  00020C                     i1u1313_20:
 29803  00020C                     
 29804                           ;main.c: 249: if ( flags & ECAN_RX_OVERFLOW ) {
 29805  00020C  A63E               	btfss	_flags,3,c
 29806  00020E  D001               	goto	i1u1314_21
 29807  000210  D001               	goto	i1u1314_20
 29808  000212                     i1u1314_21:
 29809  000212  D00E               	goto	i1l444
 29810  000214                     i1u1314_20:
 29811  000214                     
 29812                           ;main.c: 250: if ( flags & ECAN_RX_XTD_FRAME ) can_receiveOverruns++;
 29813  000214  AA3E               	btfss	_flags,5,c
 29814  000216  D001               	goto	i1u1315_21
 29815  000218  D001               	goto	i1u1315_20
 29816  00021A                     i1u1315_21:
 29817  00021A  D07D               	goto	i1l11289
 29818  00021C                     i1u1315_20:
 29819  00021C                     i1l11261:
 29820  00021C  0E01               	movlw	1
 29821  00021E  0100               	movlb	0	; () banked
 29822  000220  27C1               	addwf	_can_receiveOverruns& (0+255),f,b
 29823  000222  0E00               	movlw	0
 29824  000224  23C2               	addwfc	(_can_receiveOverruns+1)& (0+255),f,b
 29825  000226  0E00               	movlw	0
 29826  000228  23C3               	addwfc	(_can_receiveOverruns+2)& (0+255),f,b
 29827  00022A  0E00               	movlw	0
 29828  00022C  23C4               	addwfc	(_can_receiveOverruns+3)& (0+255),f,b
 29829  00022E  D073               	goto	i1l11289
 29830  000230                     i1l444:
 29831                           
 29832                           ;main.c: 252: else if ( !( flags & ECAN_RX_RTR_FRAME ) &&
 29833                           ;main.c: 253: ( flags & ECAN_RX_XTD_FRAME ) ) {
 29834  000230  BC3E               	btfsc	_flags,6,c
 29835  000232  D001               	goto	i1u1316_21
 29836  000234  D001               	goto	i1u1316_20
 29837  000236                     i1u1316_21:
 29838  000236  D06F               	goto	i1l11289
 29839  000238                     i1u1316_20:
 29840  000238  AA3E               	btfss	_flags,5,c
 29841  00023A  D001               	goto	i1u1317_21
 29842  00023C  D001               	goto	i1u1317_20
 29843  00023E                     i1u1317_21:
 29844  00023E  D06B               	goto	i1l11289
 29845  000240                     i1u1317_20:
 29846  000240                     
 29847                           ;main.c: 255: if ( ( fifo_getFree( &canInputFifo ) >= (5+dlc) ) ) {
 29848  000240  503D               	movf	_dlc,w,c
 29849  000242  6E14               	movwf	??_Interrupt& (0+255),c
 29850  000244  6A15               	clrf	(??_Interrupt+1)& (0+255),c
 29851  000246  0E05               	movlw	5
 29852  000248  2614               	addwf	??_Interrupt,f,c
 29853  00024A  0E00               	movlw	0
 29854  00024C  2215               	addwfc	??_Interrupt+1,f,c
 29855  00024E  0100               	movlb	0	; () banked
 29856  000250  0EEF               	movlw	_canInputFifo& (0+255)
 29857  000252  ECC4  F00B         	call	i1_fifo_getFree
 29858  000256  5014               	movf	??_Interrupt,w,c
 29859  000258  5C01               	subwf	?i1_fifo_getFree,w,c
 29860  00025A  5015               	movf	??_Interrupt+1,w,c
 29861  00025C  5802               	subwfb	?i1_fifo_getFree+1,w,c
 29862  00025E  A0D8               	btfss	status,0,c
 29863  000260  D001               	goto	i1u1318_21
 29864  000262  D001               	goto	i1u1318_20
 29865  000264                     i1u1318_21:
 29866  000264  D7DB               	goto	i1l11261
 29867  000266                     i1u1318_20:
 29868  000266                     
 29869                           ; BSR set to: 0
 29870                           ;main.c: 256: uint8_t fail = 0;
 29871  000266  6A1E               	clrf	Interrupt@fail,c
 29872  000268                     
 29873                           ; BSR set to: 0
 29874                           ;main.c: 257: if ( 4 != fifo_write( &canInputFifo, (uint8_t *)&id, 4 ) ) {
 29875  000268  0E39               	movlw	low _id
 29876  00026A  6E01               	movwf	?_fifo_write,c
 29877  00026C  0E00               	movlw	high _id
 29878  00026E  6E02               	movwf	?_fifo_write+1,c
 29879  000270  0E0F               	movlw	15
 29880  000272  6E02               	movwf	?_fifo_write+1,c
 29881  000274  0E5F               	movlw	__accesstop+-1
 29882  000276  6401               	cpfsgt	?_fifo_write,c
 29883  000278  6A02               	clrf	?_fifo_write+1,c
 29884  00027A  0E04               	movlw	4
 29885  00027C  6E03               	movwf	?_fifo_write+2,c
 29886  00027E  0E00               	movlw	0
 29887  000280  6E04               	movwf	?_fifo_write+3,c
 29888  000282  0E00               	movlw	0
 29889  000284  6E05               	movwf	?_fifo_write+4,c
 29890  000286  0E00               	movlw	0
 29891  000288  6E06               	movwf	?_fifo_write+5,c
 29892  00028A  0EEF               	movlw	_canInputFifo& (0+255)
 29893  00028C  EC8E  F014         	call	_fifo_write
 29894  000290  5001               	movf	?_fifo_write,w,c
 29895  000292  0A04               	xorlw	4
 29896  000294  1002               	iorwf	?_fifo_write+1,w,c
 29897  000296  B4D8               	btfsc	status,2,c
 29898  000298  D001               	goto	i1u1319_21
 29899  00029A  D001               	goto	i1u1319_20
 29900  00029C                     i1u1319_21:
 29901  00029C  D002               	goto	i1l11273
 29902  00029E                     i1u1319_20:
 29903  00029E                     
 29904                           ; BSR set to: 0
 29905                           ;main.c: 258: fail = 1;
 29906  00029E  0E01               	movlw	1
 29907  0002A0  6E1E               	movwf	Interrupt@fail,c
 29908  0002A2                     i1l11273:
 29909                           
 29910                           ; BSR set to: 0
 29911                           ;main.c: 259: }
 29912                           ;main.c: 260: if ( 1 != fifo_write( &canInputFifo, &dlc, 1 ) ) {
 29913  0002A2  0E3D               	movlw	low _dlc
 29914  0002A4  6E01               	movwf	?_fifo_write,c
 29915  0002A6  0E00               	movlw	high _dlc
 29916  0002A8  6E02               	movwf	?_fifo_write+1,c
 29917  0002AA  0E0F               	movlw	15
 29918  0002AC  6E02               	movwf	?_fifo_write+1,c
 29919  0002AE  0E5F               	movlw	__accesstop+-1
 29920  0002B0  6401               	cpfsgt	?_fifo_write,c
 29921  0002B2  6A02               	clrf	?_fifo_write+1,c
 29922  0002B4  0E01               	movlw	1
 29923  0002B6  6E03               	movwf	?_fifo_write+2,c
 29924  0002B8  0E00               	movlw	0
 29925  0002BA  6E04               	movwf	?_fifo_write+3,c
 29926  0002BC  0E00               	movlw	0
 29927  0002BE  6E05               	movwf	?_fifo_write+4,c
 29928  0002C0  0E00               	movlw	0
 29929  0002C2  6E06               	movwf	?_fifo_write+5,c
 29930  0002C4  0EEF               	movlw	_canInputFifo& (0+255)
 29931  0002C6  EC8E  F014         	call	_fifo_write
 29932  0002CA  0401               	decf	?_fifo_write,w,c
 29933  0002CC  1002               	iorwf	?_fifo_write+1,w,c
 29934  0002CE  B4D8               	btfsc	status,2,c
 29935  0002D0  D001               	goto	i1u1320_21
 29936  0002D2  D001               	goto	i1u1320_20
 29937  0002D4                     i1u1320_21:
 29938  0002D4  D002               	goto	i1l11277
 29939  0002D6                     i1u1320_20:
 29940  0002D6                     
 29941                           ; BSR set to: 0
 29942                           ;main.c: 261: fail = 1;
 29943  0002D6  0E01               	movlw	1
 29944  0002D8  6E1E               	movwf	Interrupt@fail,c
 29945  0002DA                     i1l11277:
 29946                           
 29947                           ; BSR set to: 0
 29948                           ;main.c: 262: }
 29949                           ;main.c: 263: if ( dlc != fifo_write( &canInputFifo, (uint8_t *)&data, dlc ) ) {
 29950  0002DA  0102               	movlb	2	; () banked
 29951  0002DC  0E02               	movlw	high _data
 29952  0002DE  6E02               	movwf	?_fifo_write+1,c
 29953  0002E0  0E80               	movlw	low _data
 29954  0002E2  6E01               	movwf	?_fifo_write,c
 29955  0002E4  503D               	movf	_dlc,w,c
 29956  0002E6  6E03               	movwf	?_fifo_write+2,c
 29957  0002E8  6A04               	clrf	?_fifo_write+3,c
 29958  0002EA  6A05               	clrf	?_fifo_write+4,c
 29959  0002EC  6A06               	clrf	?_fifo_write+5,c
 29960  0002EE  0100               	movlb	0	; () banked
 29961  0002F0  0EEF               	movlw	_canInputFifo& (0+255)
 29962  0002F2  EC8E  F014         	call	_fifo_write
 29963  0002F6  503D               	movf	_dlc,w,c
 29964  0002F8  1801               	xorwf	?_fifo_write,w,c
 29965  0002FA  1002               	iorwf	?_fifo_write+1,w,c
 29966  0002FC  B4D8               	btfsc	status,2,c
 29967  0002FE  D001               	goto	i1u1321_21
 29968  000300  D001               	goto	i1u1321_20
 29969  000302                     i1u1321_21:
 29970  000302  D002               	goto	i1l11281
 29971  000304                     i1u1321_20:
 29972  000304                     
 29973                           ; BSR set to: 0
 29974                           ;main.c: 264: fail = 1;
 29975  000304  0E01               	movlw	1
 29976  000306  6E1E               	movwf	Interrupt@fail,c
 29977  000308                     i1l11281:
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;main.c: 265: }
 29981                           ;main.c: 267: fifo_canrxcount++;
 29982  000308  2A36               	incf	_fifo_canrxcount,f,c	;volatile
 29983  00030A                     
 29984                           ; BSR set to: 0
 29985                           ;main.c: 269: if ( fail ) {
 29986  00030A  501E               	movf	Interrupt@fail,w,c
 29987  00030C  B4D8               	btfsc	status,2,c
 29988  00030E  D001               	goto	i1u1322_21
 29989  000310  D001               	goto	i1u1322_20
 29990  000312                     i1u1322_21:
 29991  000312  D001               	goto	i1l11289
 29992  000314                     i1u1322_20:
 29993  000314  D783               	goto	i1l11261
 29994  000316                     i1l11289:
 29995                           
 29996                           ;main.c: 276: }
 29997                           ;main.c: 278: }
 29998                           ;main.c: 280: }
 29999                           ;main.c: 283: RXBnIF = 0;
 30000  000316  92A4               	bcf	4004,1,c	;volatile
 30001  000318                     i1l454:
 30002  000318  C01C  FFDA         	movff	??_Interrupt+8,fsr2h
 30003  00031C  C01B  FFD9         	movff	??_Interrupt+7,fsr2l
 30004  000320  C01A  FFE2         	movff	??_Interrupt+6,fsr1h
 30005  000324  C019  FFE1         	movff	??_Interrupt+5,fsr1l
 30006  000328  C018  FFE0         	movff	??_Interrupt+4,bsr
 30007  00032C  C017  FFE8         	movff	??_Interrupt+3,wreg
 30008  000330  C016  FFD8         	movff	??_Interrupt+2,status
 30009  000334  0010               	retfie	
 30010  000336                     __end_of_Interrupt:
 30011                           	opt stack 0
 30012                           tblptru	equ	0xFF8
 30013                           tblptrh	equ	0xFF7
 30014                           tblptrl	equ	0xFF6
 30015                           tablat	equ	0xFF5
 30016                           prodh	equ	0xFF4
 30017                           prodl	equ	0xFF3
 30018                           intcon	equ	0xFF2
 30019                           indf0	equ	0xFEF
 30020                           postinc0	equ	0xFEE
 30021                           fsr0h	equ	0xFEA
 30022                           fsr0l	equ	0xFE9
 30023                           wreg	equ	0xFE8
 30024                           indf1	equ	0xFE7
 30025                           postinc1	equ	0xFE6
 30026                           postdec1	equ	0xFE5
 30027                           fsr1h	equ	0xFE2
 30028                           fsr1l	equ	0xFE1
 30029                           bsr	equ	0xFE0
 30030                           indf2	equ	0xFDF
 30031                           postinc2	equ	0xFDE
 30032                           postdec2	equ	0xFDD
 30033                           plusw2	equ	0xFDB
 30034                           fsr2h	equ	0xFDA
 30035                           fsr2l	equ	0xFD9
 30036                           status	equ	0xFD8
 30037                           
 30038 ;; *************** function i1_WriteTimer0 *****************
 30039 ;; Defined at:
 30040 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 30041 ;; Parameters:    Size  Location     Type
 30042 ;;  timer0          2    0[COMRAM] unsigned int 
 30043 ;; Auto vars:     Size  Location     Type
 30044 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 30045 ;; Return value:  Size  Location     Type
 30046 ;;		None               void
 30047 ;; Registers used:
 30048 ;;		None
 30049 ;; Tracked objects:
 30050 ;;		On entry : 0/0
 30051 ;;		On exit  : 0/0
 30052 ;;		Unchanged: 0/0
 30053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30054 ;;      Params:         2       0       0       0       0       0       0
 30055 ;;      Locals:         2       0       0       0       0       0       0
 30056 ;;      Temps:          0       0       0       0       0       0       0
 30057 ;;      Totals:         4       0       0       0       0       0       0
 30058 ;;Total ram usage:        4 bytes
 30059 ;; Hardware stack levels used:    1
 30060 ;; This function calls:
 30061 ;;		Nothing
 30062 ;; This function is called by:
 30063 ;;		_Interrupt
 30064 ;; This function uses a non-reentrant model
 30065 ;;
 30066                           
 30067                           	psect	text88
 30068  000894                     __ptext88:
 30069                           	opt stack 0
 30070  000894                     i1_WriteTimer0:
 30071                           	opt stack 20
 30072                           
 30073                           ;incstack = 0
 30074                           ;incstack = 0
 30075  000894  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 30076  000898  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 30077  00089C  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 30078  0008A0  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 30079  0008A4  0012               	return	
 30080  0008A6                     __end_ofi1_WriteTimer0:
 30081                           	opt stack 0
 30082                           tblptru	equ	0xFF8
 30083                           tblptrh	equ	0xFF7
 30084                           tblptrl	equ	0xFF6
 30085                           tablat	equ	0xFF5
 30086                           prodh	equ	0xFF4
 30087                           prodl	equ	0xFF3
 30088                           intcon	equ	0xFF2
 30089                           indf0	equ	0xFEF
 30090                           postinc0	equ	0xFEE
 30091                           fsr0h	equ	0xFEA
 30092                           fsr0l	equ	0xFE9
 30093                           wreg	equ	0xFE8
 30094                           indf1	equ	0xFE7
 30095                           postinc1	equ	0xFE6
 30096                           postdec1	equ	0xFE5
 30097                           fsr1h	equ	0xFE2
 30098                           fsr1l	equ	0xFE1
 30099                           bsr	equ	0xFE0
 30100                           indf2	equ	0xFDF
 30101                           postinc2	equ	0xFDE
 30102                           postdec2	equ	0xFDD
 30103                           plusw2	equ	0xFDB
 30104                           fsr2h	equ	0xFDA
 30105                           fsr2l	equ	0xFD9
 30106                           status	equ	0xFD8
 30107                           
 30108 ;; *************** function i1_fifo_getFree *****************
 30109 ;; Defined at:
 30110 ;;		line 97 in file "fifo.c"
 30111 ;; Parameters:    Size  Location     Type
 30112 ;;  f               1    wreg     PTR struct .
 30113 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 30114 ;; Auto vars:     Size  Location     Type
 30115 ;;  f               1   10[COMRAM] PTR struct .
 30116 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 30117 ;; Return value:  Size  Location     Type
 30118 ;;                  2    0[COMRAM] unsigned short 
 30119 ;; Registers used:
 30120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30121 ;; Tracked objects:
 30122 ;;		On entry : F/0
 30123 ;;		On exit  : F/0
 30124 ;;		Unchanged: F/0
 30125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30126 ;;      Params:         2       0       0       0       0       0       0
 30127 ;;      Locals:         1       0       0       0       0       0       0
 30128 ;;      Temps:          8       0       0       0       0       0       0
 30129 ;;      Totals:        11       0       0       0       0       0       0
 30130 ;;Total ram usage:       11 bytes
 30131 ;; Hardware stack levels used:    1
 30132 ;; This function calls:
 30133 ;;		Nothing
 30134 ;; This function is called by:
 30135 ;;		_Interrupt
 30136 ;; This function uses a non-reentrant model
 30137 ;;
 30138                           
 30139                           	psect	text89
 30140  001788                     __ptext89:
 30141                           	opt stack 0
 30142  001788                     i1_fifo_getFree:
 30143                           	opt stack 20
 30144                           
 30145                           ;incstack = 0
 30146                           ;incstack = 0
 30147                           ;i1fifo_getFree@f stored from wreg
 30148  001788  CFE8 F00B          	movff	wreg,i1fifo_getFree@f
 30149                           
 30150                           ; BSR set to: 0
 30151                           ;fifo.c: 98: if (f->head < f->tail) {
 30152  00178C  D83F               	call	PL80	;call to abstracted procedure
 30153  00178E  500B               	movf	i1fifo_getFree@f,w,c
 30154  001790  6EE1               	movwf	fsr1l,c
 30155  001792  6AE2               	clrf	fsr1h,c
 30156  001794  0E02               	movlw	2
 30157  001796  26E1               	addwf	fsr1l,f,c
 30158  001798  6AE2               	clrf	fsr1h,c
 30159  00179A  52E6               	movf	postinc1,f,c
 30160  00179C  52DE               	movf	postinc2,f,c
 30161  00179E  50DD               	movf	postdec2,w,c
 30162  0017A0  5CE5               	subwf	postdec1,w,c
 30163  0017A2  E102               	bnz	i1u1261_25
 30164  0017A4  50DF               	movf	indf2,w,c
 30165  0017A6  5CE7               	subwf	indf1,w,c
 30166  0017A8                     i1u1261_25:
 30167  0017A8  E210               	bc	i1l11031
 30168                           
 30169                           ; BSR set to: 0
 30170                           ;fifo.c: 99: return (f->tail - f->head);
 30171  0017AA  D837               	call	PL136	;call to abstracted procedure
 30172  0017AC  CFDE F003          	movff	postinc2,??i1_fifo_getFree
 30173  0017B0  CFDD F004          	movff	postdec2,??i1_fifo_getFree+1
 30174  0017B4  D82B               	call	PL80	;call to abstracted procedure
 30175  0017B6  CFDE F005          	movff	postinc2,??i1_fifo_getFree+2
 30176  0017BA  CFDD F006          	movff	postdec2,??i1_fifo_getFree+3
 30177  0017BE  5003               	movf	??i1_fifo_getFree,w,c
 30178  0017C0  5C05               	subwf	??i1_fifo_getFree+2,w,c
 30179  0017C2  6E01               	movwf	?i1_fifo_getFree,c
 30180  0017C4  5004               	movf	??i1_fifo_getFree+1,w,c
 30181  0017C6  5806               	subwfb	??i1_fifo_getFree+3,w,c
 30182  0017C8  D01F               	goto	L60
 30183  0017CA                     i1l11031:
 30184                           
 30185                           ; BSR set to: 0
 30186                           ;fifo.c: 101: else {
 30187                           ;fifo.c: 102: return (f->size + (f->tail - f->head));
 30188  0017CA  D820               	call	PL80	;call to abstracted procedure
 30189  0017CC  CFDE F003          	movff	postinc2,??i1_fifo_getFree
 30190  0017D0  CFDD F004          	movff	postdec2,??i1_fifo_getFree+1
 30191  0017D4  D822               	call	PL136	;call to abstracted procedure
 30192  0017D6  CFDE F005          	movff	postinc2,??i1_fifo_getFree+2
 30193  0017DA  CFDD F006          	movff	postdec2,??i1_fifo_getFree+3
 30194  0017DE  500B               	movf	i1fifo_getFree@f,w,c
 30195  0017E0  6ED9               	movwf	fsr2l,c
 30196  0017E2  6ADA               	clrf	fsr2h,c
 30197  0017E4  0E06               	movlw	6
 30198  0017E6  26D9               	addwf	fsr2l,f,c
 30199  0017E8  6ADA               	clrf	fsr2h,c
 30200  0017EA  CFDE F007          	movff	postinc2,??i1_fifo_getFree+4
 30201  0017EE  CFDD F008          	movff	postdec2,??i1_fifo_getFree+5
 30202  0017F2  5005               	movf	??i1_fifo_getFree+2,w,c
 30203  0017F4  5C07               	subwf	??i1_fifo_getFree+4,w,c
 30204  0017F6  6E09               	movwf	(??i1_fifo_getFree+6)& (0+255),c
 30205  0017F8  5006               	movf	??i1_fifo_getFree+3,w,c
 30206  0017FA  5808               	subwfb	??i1_fifo_getFree+5,w,c
 30207  0017FC  6E0A               	movwf	(??i1_fifo_getFree+7)& (0+255),c
 30208  0017FE  5003               	movf	??i1_fifo_getFree,w,c
 30209  001800  2409               	addwf	??i1_fifo_getFree+6,w,c
 30210  001802  6E01               	movwf	?i1_fifo_getFree,c
 30211  001804  5004               	movf	??i1_fifo_getFree+1,w,c
 30212  001806  200A               	addwfc	??i1_fifo_getFree+7,w,c
 30213  001808                     L60:
 30214  001808  6E02               	movwf	?i1_fifo_getFree+1,c
 30215                           
 30216                           ; BSR set to: 0
 30217  00180A  0012               	return	
 30218  00180C                     __end_ofi1_fifo_getFree:
 30219                           	opt stack 0
 30220  00180C                     PL80:
 30221                           	opt stack 20
 30222  00180C  500B               	movf	i1fifo_getFree@f,w,c
 30223  00180E  6ED9               	movwf	fsr2l,c
 30224  001810  6ADA               	clrf	fsr2h,c
 30225  001812  0E04               	movlw	4
 30226  001814  26D9               	addwf	fsr2l,f,c
 30227  001816  6ADA               	clrf	fsr2h,c
 30228  001818  0012               	return	
 30229  00181A                     __end_ofPL80:
 30230                           	opt stack 0
 30231  00181A                     PL136:
 30232                           	opt stack 20
 30233  00181A  500B               	movf	i1fifo_getFree@f,w,c
 30234  00181C  6ED9               	movwf	fsr2l,c
 30235  00181E  6ADA               	clrf	fsr2h,c
 30236  001820  0E02               	movlw	2
 30237  001822  26D9               	addwf	fsr2l,f,c
 30238  001824  6ADA               	clrf	fsr2h,c
 30239  001826  0012               	return	
 30240  001828                     __end_ofPL136:
 30241                           	opt stack 0
 30242                           tblptru	equ	0xFF8
 30243                           tblptrh	equ	0xFF7
 30244                           tblptrl	equ	0xFF6
 30245                           tablat	equ	0xFF5
 30246                           prodh	equ	0xFF4
 30247                           prodl	equ	0xFF3
 30248                           intcon	equ	0xFF2
 30249                           indf0	equ	0xFEF
 30250                           postinc0	equ	0xFEE
 30251                           fsr0h	equ	0xFEA
 30252                           fsr0l	equ	0xFE9
 30253                           wreg	equ	0xFE8
 30254                           indf1	equ	0xFE7
 30255                           postinc1	equ	0xFE6
 30256                           postdec1	equ	0xFE5
 30257                           fsr1h	equ	0xFE2
 30258                           fsr1l	equ	0xFE1
 30259                           bsr	equ	0xFE0
 30260                           indf2	equ	0xFDF
 30261                           postinc2	equ	0xFDE
 30262                           postdec2	equ	0xFDD
 30263                           plusw2	equ	0xFDB
 30264                           fsr2h	equ	0xFDA
 30265                           fsr2l	equ	0xFD9
 30266                           status	equ	0xFD8
 30267                           
 30268 ;; *************** function _ECANReceiveMessage *****************
 30269 ;; Defined at:
 30270 ;;		line 803 in file "ECAN.c"
 30271 ;; Parameters:    Size  Location     Type
 30272 ;;  id              1    wreg     PTR unsigned long 
 30273 ;;		 -> id(4), 
 30274 ;;  data            2    7[COMRAM] PTR unsigned char 
 30275 ;;		 -> data(8), 
 30276 ;;  dataLen         1    9[COMRAM] PTR unsigned char 
 30277 ;;		 -> dlc(1), 
 30278 ;;  msgFlags        1   10[COMRAM] PTR enum E16333
 30279 ;;		 -> flags(1), 
 30280 ;; Auto vars:     Size  Location     Type
 30281 ;;  id              1   13[COMRAM] PTR unsigned long 
 30282 ;;		 -> id(4), 
 30283 ;;  ptr             2   17[COMRAM] PTR unsigned char 
 30284 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30285 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30286 ;;  savedPtr        2   11[COMRAM] PTR unsigned char 
 30287 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30288 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30289 ;;  temp            1   16[COMRAM] struct .
 30290 ;;  mode            1   15[COMRAM] unsigned char 
 30291 ;;  i               1   14[COMRAM] unsigned char 
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1    wreg      enum E15660
 30294 ;; Registers used:
 30295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30296 ;; Tracked objects:
 30297 ;;		On entry : F/2
 30298 ;;		On exit  : 0/0
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30301 ;;      Params:         4       0       0       0       0       0       0
 30302 ;;      Locals:         8       0       0       0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0
 30304 ;;      Totals:        12       0       0       0       0       0       0
 30305 ;;Total ram usage:       12 bytes
 30306 ;; Hardware stack levels used:    1
 30307 ;; Hardware stack levels required when called:    1
 30308 ;; This function calls:
 30309 ;;		__ECANPointBuffer
 30310 ;;		__RegsToCANID
 30311 ;; This function is called by:
 30312 ;;		_Interrupt
 30313 ;; This function uses a non-reentrant model
 30314 ;;
 30315                           
 30316                           	psect	text90
 30317  003536                     __ptext90:
 30318                           	opt stack 0
 30319  003536                     _ECANReceiveMessage:
 30320                           	opt stack 19
 30321                           
 30322                           ; BSR set to: 0
 30323                           ;incstack = 0
 30324                           ;incstack = 0
 30325                           ;ECANReceiveMessage@id stored from wreg
 30326  003536  CFE8 F00E          	movff	wreg,ECANReceiveMessage@id
 30327                           
 30328                           ; BSR set to: 2
 30329                           ;ECAN.c: 805: BYTE mode;
 30330                           ;ECAN.c: 808: BYTE *ptr, *savedPtr;
 30331                           ;ECAN.c: 809: char i;
 30332                           ;ECAN.c: 810: BYTE_VAL temp;
 30333                           ;ECAN.c: 812: _ECANRxFilterHitInfo.Val = 0;
 30334  00353A  6A2F               	clrf	__ECANRxFilterHitInfo,c
 30335                           
 30336                           ; BSR set to: 2
 30337                           ;ECAN.c: 815: mode = ECANCON&0xC0;
 30338  00353C  5077               	movf	3959,w,c	;volatile
 30339  00353E  0BC0               	andlw	192
 30340  003540  6E10               	movwf	ECANReceiveMessage@mode,c
 30341                           
 30342                           ; BSR set to: 2
 30343                           ;ECAN.c: 816: if ( mode == 0x00 )
 30344  003542  6610               	tstfsz	ECANReceiveMessage@mode,c
 30345  003544  D032               	goto	i1l11075
 30346                           
 30347                           ; BSR set to: 2
 30348                           ;ECAN.c: 822: {
 30349                           ;ECAN.c: 824: if ( RXB0FUL )
 30350  003546  AE60               	btfss	3936,7,c	;volatile
 30351  003548  D012               	goto	i1l1600
 30352                           
 30353                           ; BSR set to: 2
 30354                           ;ECAN.c: 825: {
 30355                           ;ECAN.c: 827: RXB0IF = 0;
 30356  00354A  90A4               	bcf	4004,0,c	;volatile
 30357                           
 30358                           ;ECAN.c: 830: if ( RXB0OVFL )
 30359  00354C  AE74               	btfss	3956,7,c	;volatile
 30360  00354E  D006               	goto	i1l11051
 30361                           
 30362                           ; BSR set to: 2
 30363                           ;ECAN.c: 831: {
 30364                           ;ECAN.c: 832: *msgFlags |= ECAN_RX_OVERFLOW;
 30365  003550  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30366  003552  6ED9               	movwf	fsr2l,c
 30367  003554  6ADA               	clrf	fsr2h,c
 30368  003556  0E00               	movlw	0
 30369  003558  86DB               	bsf	plusw2,3,c
 30370                           
 30371                           ; BSR set to: 2
 30372                           ;ECAN.c: 833: RXB0OVFL = 0;
 30373  00355A  9E74               	bcf	3956,7,c	;volatile
 30374  00355C                     i1l11051:
 30375                           
 30376                           ; BSR set to: 2
 30377                           ;ECAN.c: 834: }
 30378                           ;ECAN.c: 836: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
 30379  00355C  A060               	btfss	3936,0,c	;volatile
 30380  00355E  D002               	bra	i1u1265_25
 30381  003560  802F               	bsf	__ECANRxFilterHitInfo,0,c
 30382  003562  D001               	bra	i1u1265_27
 30383  003564                     i1u1265_25:
 30384  003564  902F               	bcf	__ECANRxFilterHitInfo,0,c
 30385  003566                     i1u1265_27:
 30386                           
 30387                           ;ECAN.c: 838: ptr = (BYTE*)&RXB0CON;
 30388  003566  0E0F               	movlw	15	;volatile
 30389  003568  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30390  00356A  0E60               	movlw	96	;volatile
 30391  00356C  D01A               	goto	L61
 30392  00356E                     i1l1600:
 30393                           
 30394                           ; BSR set to: 2
 30395                           ;ECAN.c: 841: else if ( RXB1CONbits.RXFUL )
 30396  00356E  010F               	movlb	15	; () banked
 30397  003570  AF50               	btfss	80,7,b	;volatile
 30398  003572  D019               	goto	i1l11069
 30399                           
 30400                           ; BSR set to: 15
 30401                           ;ECAN.c: 842: {
 30402                           ;ECAN.c: 844: RXB1IF = 0;
 30403  003574  92A4               	bcf	4004,1,c	;volatile
 30404                           
 30405                           ;ECAN.c: 847: if ( RXB1OVFL )
 30406  003576  AC74               	btfss	3956,6,c	;volatile
 30407  003578  D006               	goto	i1l11061
 30408                           
 30409                           ; BSR set to: 15
 30410                           ;ECAN.c: 848: {
 30411                           ;ECAN.c: 849: *msgFlags |= ECAN_RX_OVERFLOW;
 30412  00357A  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30413  00357C  6ED9               	movwf	fsr2l,c
 30414  00357E  6ADA               	clrf	fsr2h,c
 30415  003580  0E00               	movlw	0
 30416  003582  86DB               	bsf	plusw2,3,c
 30417                           
 30418                           ; BSR set to: 15
 30419                           ;ECAN.c: 850: RXB1OVFL = 0;
 30420  003584  9C74               	bcf	3956,6,c	;volatile
 30421  003586                     i1l11061:
 30422                           
 30423                           ; BSR set to: 15
 30424                           ;ECAN.c: 851: }
 30425                           ;ECAN.c: 853: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
 30426  003586  5150               	movf	80,w,b	;volatile
 30427  003588  0B07               	andlw	7
 30428  00358A  6E2F               	movwf	__ECANRxFilterHitInfo,c
 30429                           
 30430                           ; BSR set to: 15
 30431                           ;ECAN.c: 855: if ( _ECANRxFilterHitInfo.Val < 0x02 )
 30432  00358C  0E02               	movlw	2
 30433  00358E  602F               	cpfslt	__ECANRxFilterHitInfo,c
 30434  003590  D005               	goto	i1l11067
 30435                           
 30436                           ; BSR set to: 15
 30437                           ;ECAN.c: 856: *msgFlags |= ECAN_RX_DBL_BUFFERED;
 30438  003592  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30439  003594  6ED9               	movwf	fsr2l,c
 30440  003596  6ADA               	clrf	fsr2h,c
 30441  003598  0E00               	movlw	0
 30442  00359A  8EDB               	bsf	plusw2,7,c
 30443  00359C                     i1l11067:
 30444                           
 30445                           ; BSR set to: 15
 30446                           ;ECAN.c: 859: ptr = (BYTE*)&RXB1CON;
 30447  00359C  0E0F               	movlw	15	;volatile
 30448  00359E  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30449  0035A0  0E50               	movlw	80	;volatile
 30450  0035A2                     L61:
 30451  0035A2  6E12               	movwf	ECANReceiveMessage@ptr,c
 30452                           
 30453                           ;ECAN.c: 860: }
 30454  0035A4  D065               	goto	i1l11129
 30455  0035A6                     i1l11069:
 30456                           
 30457                           ;ECAN.c: 861: else
 30458                           ;ECAN.c: 862: return FALSE;
 30459  0035A6  0E00               	movlw	0
 30460  0035A8  D0C4               	goto	i1l1607
 30461  0035AA                     i1l11075:
 30462                           
 30463                           ; BSR set to: 2
 30464                           ;ECAN.c: 869: else if ( mode == 0x40 )
 30465  0035AA  5010               	movf	ECANReceiveMessage@mode,w,c
 30466  0035AC  0A40               	xorlw	64
 30467  0035AE  E146               	bnz	i1l1610
 30468                           
 30469                           ; BSR set to: 2
 30470                           ;ECAN.c: 875: {
 30471                           ;ECAN.c: 876: if ( RXB0FUL )
 30472  0035B0  AE60               	btfss	3936,7,c	;volatile
 30473  0035B2  D004               	goto	i1l1611
 30474                           
 30475                           ; BSR set to: 2
 30476                           ;ECAN.c: 877: ptr = (BYTE*)&RXB0CON;
 30477  0035B4  0E0F               	movlw	15	;volatile
 30478  0035B6  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30479  0035B8  0E60               	movlw	96	;volatile
 30480  0035BA  D03E               	goto	L68
 30481  0035BC                     i1l1611:
 30482                           
 30483                           ; BSR set to: 2
 30484                           ;ECAN.c: 879: else if (RXB1CONbits.RXFUL)
 30485  0035BC  010F               	movlb	15	; () banked
 30486  0035BE  AF50               	btfss	80,7,b	;volatile
 30487  0035C0  D004               	goto	i1l1613
 30488                           
 30489                           ; BSR set to: 15
 30490                           ;ECAN.c: 880: ptr = (BYTE*)&RXB1CON;
 30491  0035C2  0E0F               	movlw	15	;volatile
 30492  0035C4  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30493  0035C6  0E50               	movlw	80	;volatile
 30494  0035C8  D037               	goto	L68
 30495  0035CA                     i1l1613:
 30496                           
 30497                           ; BSR set to: 15
 30498                           ;ECAN.c: 882: else if ( (B0TXEN==0) && B0RXFUL )
 30499  0035CA  010D               	movlb	13
 30500  0035CC  B5F8               	btfsc	248,2,b	;volatile
 30501  0035CE  D007               	goto	i1l1615
 30502  0035D0  010E               	movlb	14
 30503  0035D2  AF20               	btfss	32,7,b	;volatile
 30504  0035D4  D004               	goto	i1l1615
 30505                           
 30506                           ;ECAN.c: 883: ptr = (BYTE*)&B0CON;
 30507  0035D6  0E0E               	movlw	14	;volatile
 30508  0035D8  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30509  0035DA  0E20               	movlw	32	;volatile
 30510  0035DC  D02D               	goto	L68
 30511  0035DE                     i1l1615:
 30512                           
 30513                           ;ECAN.c: 885: else if ( (B1TXEN==0) && B1RXFUL )
 30514  0035DE  010D               	movlb	13
 30515  0035E0  B7F8               	btfsc	248,3,b	;volatile
 30516  0035E2  D007               	goto	i1l1617
 30517  0035E4  010E               	movlb	14
 30518  0035E6  AF30               	btfss	48,7,b	;volatile
 30519  0035E8  D004               	goto	i1l1617
 30520                           
 30521                           ;ECAN.c: 886: ptr = (BYTE*)&B1CON;
 30522  0035EA  0E0E               	movlw	14	;volatile
 30523  0035EC  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30524  0035EE  0E30               	movlw	48	;volatile
 30525  0035F0  D023               	goto	L68
 30526  0035F2                     i1l1617:
 30527                           
 30528                           ;ECAN.c: 888: else if ( (B2TXEN==0) && B2RXFUL )
 30529  0035F2  010D               	movlb	13
 30530  0035F4  B9F8               	btfsc	248,4,b	;volatile
 30531  0035F6  D007               	goto	i1l1619
 30532  0035F8  010E               	movlb	14
 30533  0035FA  AF40               	btfss	64,7,b	;volatile
 30534  0035FC  D004               	goto	i1l1619
 30535                           
 30536                           ;ECAN.c: 889: ptr = (BYTE*)&B2CON;
 30537  0035FE  0E0E               	movlw	14	;volatile
 30538  003600  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30539  003602  0E40               	movlw	64	;volatile
 30540  003604  D019               	goto	L68
 30541  003606                     i1l1619:
 30542                           
 30543                           ;ECAN.c: 891: else if ( (B3TXEN==0) && B3RXFUL )
 30544  003606  010D               	movlb	13
 30545  003608  BBF8               	btfsc	248,5,b	;volatile
 30546  00360A  D005               	goto	i1l1621
 30547  00360C  010E               	movlb	14
 30548  00360E  AF50               	btfss	80,7,b	;volatile
 30549  003610  D002               	goto	i1l1621
 30550                           
 30551                           ;ECAN.c: 892: ptr = (BYTE*)&B3CON;
 30552  003612  0E0E               	movlw	14	;volatile
 30553  003614  D7D7               	goto	L69
 30554  003616                     i1l1621:
 30555                           
 30556                           ;ECAN.c: 894: else if ( (B4TXEN==0) && B4RXFUL )
 30557  003616  010D               	movlb	13
 30558  003618  BDF8               	btfsc	248,6,b	;volatile
 30559  00361A  D005               	goto	i1l1623
 30560  00361C  010E               	movlb	14
 30561  00361E  AF60               	btfss	96,7,b	;volatile
 30562  003620  D002               	goto	i1l1623
 30563                           
 30564                           ;ECAN.c: 895: ptr = (BYTE*)&B4CON;
 30565  003622  0E0E               	movlw	14	;volatile
 30566  003624  D7C8               	goto	L70
 30567  003626                     i1l1623:
 30568                           
 30569                           ;ECAN.c: 897: else if ( (B5TXEN==0) && B5RXFUL )
 30570  003626  010D               	movlb	13
 30571  003628  BFF8               	btfsc	248,7,b	;volatile
 30572  00362A  D7BD               	goto	i1l11069
 30573  00362C  010E               	movlb	14
 30574  00362E  AF70               	btfss	112,7,b	;volatile
 30575  003630  D7BA               	goto	i1l11069
 30576                           
 30577                           ;ECAN.c: 898: ptr = (BYTE*)&B5CON;
 30578  003632  0E0E               	movlw	14	;volatile
 30579  003634  6E13               	movwf	ECANReceiveMessage@ptr+1,c
 30580  003636  0E70               	movlw	112	;volatile
 30581  003638                     L68:
 30582  003638  6E12               	movwf	ECANReceiveMessage@ptr,c
 30583  00363A  D00A               	goto	i1l11119
 30584  00363C                     i1l1610:
 30585                           
 30586                           ; BSR set to: 2
 30587                           ;ECAN.c: 910: else
 30588                           ;ECAN.c: 915: {
 30589                           ;ECAN.c: 916: if ( FIFOEMPTY == 1 )
 30590  00363C  AE74               	btfss	3956,7,c	;volatile
 30591  00363E  D7B3               	goto	i1l11069
 30592                           
 30593                           ; BSR set to: 2
 30594                           ;ECAN.c: 919: {
 30595                           ;ECAN.c: 920: ptr = (BYTE*)_ECANPointBuffer(CANCON&0x07);
 30596  003640  506F               	movf	3951,w,c	;volatile
 30597  003642  0B07               	andlw	7
 30598  003644  EC17  F009         	call	__ECANPointBuffer
 30599  003648  C001  F012         	movff	?__ECANPointBuffer,ECANReceiveMessage@ptr
 30600  00364C  C002  F013         	movff	?__ECANPointBuffer+1,ECANReceiveMessage@ptr+1
 30601  003650                     i1l11119:
 30602                           
 30603                           ;ECAN.c: 932: _ECANRxFilterHitInfo.Val = *ptr & 0x1f;
 30604  003650  C012  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 30605  003654  C013  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 30606  003658  50DF               	movf	indf2,w,c
 30607  00365A  0B1F               	andlw	31
 30608  00365C  6E2F               	movwf	__ECANRxFilterHitInfo,c
 30609                           
 30610                           ;ECAN.c: 934: RXB1IF = 0;
 30611  00365E  92A4               	bcf	4004,1,c	;volatile
 30612                           
 30613                           ;ECAN.c: 936: if ( RXB1OVFL )
 30614  003660  AC74               	btfss	3956,6,c	;volatile
 30615  003662  D006               	goto	i1l11129
 30616                           
 30617                           ;ECAN.c: 937: {
 30618                           ;ECAN.c: 938: *msgFlags |= ECAN_RX_OVERFLOW;
 30619  003664  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30620  003666  6ED9               	movwf	fsr2l,c
 30621  003668  6ADA               	clrf	fsr2h,c
 30622  00366A  0E00               	movlw	0
 30623  00366C  86DB               	bsf	plusw2,3,c
 30624                           
 30625                           ;ECAN.c: 939: RXB1OVFL = 0;
 30626  00366E  9C74               	bcf	3956,6,c	;volatile
 30627  003670                     i1l11129:
 30628                           
 30629                           ;ECAN.c: 944: savedPtr = ptr;
 30630  003670  C012  F00C         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
 30631  003674  C013  F00D         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
 30632                           
 30633                           ;ECAN.c: 945: *msgFlags = 0;
 30634  003678  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30635  00367A  6ED9               	movwf	fsr2l,c
 30636  00367C  6ADA               	clrf	fsr2h,c
 30637  00367E  6ADF               	clrf	indf2,c
 30638                           
 30639                           ;ECAN.c: 948: temp.Val = *(ptr+5);
 30640  003680  EE20 F005          	lfsr	2,5
 30641  003684  D857               	call	PL130	;call to abstracted procedure
 30642                           
 30643                           ;ECAN.c: 949: *dataLen = temp.Val & 0b00001111;
 30644  003686  500A               	movf	ECANReceiveMessage@dataLen,w,c
 30645  003688  6ED9               	movwf	fsr2l,c
 30646  00368A  6ADA               	clrf	fsr2h,c
 30647  00368C  5011               	movf	ECANReceiveMessage@temp,w,c
 30648  00368E  0B0F               	andlw	15
 30649  003690  6EDF               	movwf	indf2,c
 30650                           
 30651                           ;ECAN.c: 952: if ( temp.bits.b6 )
 30652  003692  AC11               	btfss	ECANReceiveMessage@temp,6,c
 30653  003694  D005               	goto	i1l1631
 30654                           
 30655                           ;ECAN.c: 953: *msgFlags |= ECAN_RX_RTR_FRAME;
 30656  003696  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30657  003698  6ED9               	movwf	fsr2l,c
 30658  00369A  6ADA               	clrf	fsr2h,c
 30659  00369C  0E00               	movlw	0
 30660  00369E  8CDB               	bsf	plusw2,6,c
 30661  0036A0                     i1l1631:
 30662                           
 30663                           ;ECAN.c: 956: temp.Val = *(ptr+2);
 30664  0036A0  EE20 F002          	lfsr	2,2
 30665  0036A4  D847               	call	PL130	;call to abstracted procedure
 30666                           
 30667                           ;ECAN.c: 957: if ( temp.bits.b3 )
 30668  0036A6  A611               	btfss	ECANReceiveMessage@temp,3,c
 30669  0036A8  D008               	goto	i1l1632
 30670                           
 30671                           ;ECAN.c: 958: {
 30672                           ;ECAN.c: 959: *msgFlags |= ECAN_RX_XTD_FRAME;
 30673  0036AA  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30674  0036AC  6ED9               	movwf	fsr2l,c
 30675  0036AE  6ADA               	clrf	fsr2h,c
 30676  0036B0  0E00               	movlw	0
 30677  0036B2  8ADB               	bsf	plusw2,5,c
 30678                           
 30679                           ;ECAN.c: 960: temp.Val = 1;
 30680  0036B4  0E01               	movlw	1
 30681  0036B6  6E11               	movwf	ECANReceiveMessage@temp,c
 30682                           
 30683                           ;ECAN.c: 961: }
 30684  0036B8  D001               	goto	i1l11147
 30685  0036BA                     i1l1632:
 30686                           
 30687                           ;ECAN.c: 962: else
 30688                           ;ECAN.c: 963: temp.Val = 0;
 30689  0036BA  6A11               	clrf	ECANReceiveMessage@temp,c
 30690  0036BC                     i1l11147:
 30691                           
 30692                           ;ECAN.c: 965: _RegsToCANID(ptr+1, id, temp.Val);
 30693  0036BC  2812               	incf	ECANReceiveMessage@ptr,w,c
 30694  0036BE  6E01               	movwf	?__RegsToCANID,c
 30695  0036C0  0E00               	movlw	0
 30696  0036C2  2013               	addwfc	ECANReceiveMessage@ptr+1,w,c
 30697  0036C4  6E02               	movwf	?__RegsToCANID+1,c
 30698  0036C6  C00E  F003         	movff	ECANReceiveMessage@id,?__RegsToCANID+2
 30699  0036CA  C011  F004         	movff	ECANReceiveMessage@temp,?__RegsToCANID+3
 30700  0036CE  ECFF  F013         	call	__RegsToCANID	;wreg free
 30701                           
 30702                           ;ECAN.c: 968: ptr += 6;
 30703  0036D2  0E06               	movlw	6
 30704  0036D4  2612               	addwf	ECANReceiveMessage@ptr,f,c
 30705  0036D6  0E00               	movlw	0
 30706  0036D8  2213               	addwfc	ECANReceiveMessage@ptr+1,f,c
 30707                           
 30708                           ;ECAN.c: 969: temp.Val = *dataLen;
 30709  0036DA  500A               	movf	ECANReceiveMessage@dataLen,w,c
 30710  0036DC  6ED9               	movwf	fsr2l,c
 30711  0036DE  6ADA               	clrf	fsr2h,c
 30712  0036E0  50DF               	movf	indf2,w,c
 30713  0036E2  6E11               	movwf	ECANReceiveMessage@temp,c
 30714                           
 30715                           ;ECAN.c: 970: for ( i = 0; i < temp.Val; i++ )
 30716  0036E4  6A0F               	clrf	ECANReceiveMessage@i,c
 30717  0036E6  D00F               	goto	i1l11163
 30718  0036E8                     i1l11155:
 30719                           
 30720                           ;ECAN.c: 971: *data++ = *ptr++;
 30721  0036E8  C012  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 30722  0036EC  C013  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 30723  0036F0  C008  FFE1         	movff	ECANReceiveMessage@data,fsr1l
 30724  0036F4  C009  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
 30725  0036F8  CFDF FFE7          	movff	indf2,indf1
 30726  0036FC  4A12               	infsnz	ECANReceiveMessage@ptr,f,c
 30727  0036FE  2A13               	incf	ECANReceiveMessage@ptr+1,f,c
 30728  003700  4A08               	infsnz	ECANReceiveMessage@data,f,c
 30729  003702  2A09               	incf	ECANReceiveMessage@data+1,f,c
 30730  003704  2A0F               	incf	ECANReceiveMessage@i,f,c
 30731  003706                     i1l11163:
 30732  003706  5011               	movf	ECANReceiveMessage@temp,w,c
 30733  003708  5C0F               	subwf	ECANReceiveMessage@i,w,c
 30734  00370A  E3EE               	bnc	i1l11155
 30735                           
 30736                           ;ECAN.c: 974: if ( IRXIF )
 30737  00370C  AEA4               	btfss	4004,7,c	;volatile
 30738  00370E  D006               	goto	i1l11169
 30739                           
 30740                           ;ECAN.c: 975: {
 30741                           ;ECAN.c: 976: *msgFlags |= ECAN_RX_INVALID_MSG;
 30742  003710  500B               	movf	ECANReceiveMessage@msgFlags,w,c
 30743  003712  6ED9               	movwf	fsr2l,c
 30744  003714  6ADA               	clrf	fsr2h,c
 30745  003716  0E00               	movlw	0
 30746  003718  88DB               	bsf	plusw2,4,c
 30747                           
 30748                           ;ECAN.c: 977: IRXIF = 0;
 30749  00371A  9EA4               	bcf	4004,7,c	;volatile
 30750  00371C                     i1l11169:
 30751                           
 30752                           ;ECAN.c: 978: }
 30753                           ;ECAN.c: 981: *savedPtr &= 0x7f;
 30754  00371C  C00C  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
 30755  003720  C00D  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
 30756  003724  0E7F               	movlw	127
 30757  003726  16DF               	andwf	indf2,f,c
 30758                           
 30759                           ;ECAN.c: 985: if ( mode == 0x80 )
 30760  003728  5010               	movf	ECANReceiveMessage@mode,w,c
 30761  00372A  0A80               	xorlw	128
 30762  00372C  B4D8               	btfsc	status,2,c
 30763                           
 30764                           ;ECAN.c: 986: FIFOEMPTY = 0;
 30765  00372E  9E74               	bcf	3956,7,c	;volatile
 30766                           
 30767                           ;ECAN.c: 992: return TRUE;
 30768  003730  0E01               	movlw	1
 30769  003732                     i1l1607:
 30770  003732  0012               	return	
 30771  003734                     __end_of_ECANReceiveMessage:
 30772                           	opt stack 0
 30773  003734                     PL130:
 30774                           	opt stack 19
 30775  003734  5012               	movf	ECANReceiveMessage@ptr,w,c
 30776  003736  26D9               	addwf	fsr2l,f,c
 30777  003738  5013               	movf	ECANReceiveMessage@ptr+1,w,c
 30778  00373A  22DA               	addwfc	fsr2h,f,c
 30779  00373C  50DF               	movf	indf2,w,c
 30780  00373E  6E11               	movwf	ECANReceiveMessage@temp,c
 30781  003740  0012               	return	
 30782  003742                     __end_ofPL130:
 30783                           	opt stack 0
 30784                           tblptru	equ	0xFF8
 30785                           tblptrh	equ	0xFF7
 30786                           tblptrl	equ	0xFF6
 30787                           tablat	equ	0xFF5
 30788                           prodh	equ	0xFF4
 30789                           prodl	equ	0xFF3
 30790                           intcon	equ	0xFF2
 30791                           indf0	equ	0xFEF
 30792                           postinc0	equ	0xFEE
 30793                           fsr0h	equ	0xFEA
 30794                           fsr0l	equ	0xFE9
 30795                           wreg	equ	0xFE8
 30796                           indf1	equ	0xFE7
 30797                           postinc1	equ	0xFE6
 30798                           postdec1	equ	0xFE5
 30799                           fsr1h	equ	0xFE2
 30800                           fsr1l	equ	0xFE1
 30801                           bsr	equ	0xFE0
 30802                           indf2	equ	0xFDF
 30803                           postinc2	equ	0xFDE
 30804                           postdec2	equ	0xFDD
 30805                           plusw2	equ	0xFDB
 30806                           fsr2h	equ	0xFDA
 30807                           fsr2l	equ	0xFD9
 30808                           status	equ	0xFD8
 30809                           
 30810 ;; *************** function __RegsToCANID *****************
 30811 ;; Defined at:
 30812 ;;		line 1158 in file "ECAN.c"
 30813 ;; Parameters:    Size  Location     Type
 30814 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 30815 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 30816 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 30817 ;;  val             1    2[COMRAM] PTR unsigned long 
 30818 ;;		 -> id(4), 
 30819 ;;  type            1    3[COMRAM] unsigned char 
 30820 ;; Auto vars:     Size  Location     Type
 30821 ;;  Value           1    6[COMRAM] PTR struct _CAN_MESSAGE_
 30822 ;;		 -> id(4), 
 30823 ;; Return value:  Size  Location     Type
 30824 ;;		None               void
 30825 ;; Registers used:
 30826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30827 ;; Tracked objects:
 30828 ;;		On entry : 0/2
 30829 ;;		On exit  : 0/0
 30830 ;;		Unchanged: 0/0
 30831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 30832 ;;      Params:         4       0       0       0       0       0       0
 30833 ;;      Locals:         1       0       0       0       0       0       0
 30834 ;;      Temps:          2       0       0       0       0       0       0
 30835 ;;      Totals:         7       0       0       0       0       0       0
 30836 ;;Total ram usage:        7 bytes
 30837 ;; Hardware stack levels used:    1
 30838 ;; This function calls:
 30839 ;;		Nothing
 30840 ;; This function is called by:
 30841 ;;		_ECANReceiveMessage
 30842 ;; This function uses a non-reentrant model
 30843 ;;
 30844                           
 30845                           	psect	text91
 30846  0027FE                     __ptext91:
 30847                           	opt stack 0
 30848  0027FE                     __RegsToCANID:
 30849                           	opt stack 19
 30850                           
 30851                           ;ECAN.c: 1159: CAN_MESSAGE_ID *Value;
 30852                           ;ECAN.c: 1161: Value = (CAN_MESSAGE_ID*)val;
 30853                           
 30854                           ;incstack = 0
 30855                           ;incstack = 0
 30856  0027FE  C003  F007         	movff	__RegsToCANID@val,__RegsToCANID@Value
 30857                           
 30858                           ;ECAN.c: 1163: if ( type == 0 )
 30859  002802  6604               	tstfsz	__RegsToCANID@type,c
 30860  002804  D02B               	goto	i1l10807
 30861                           
 30862                           ;ECAN.c: 1164: {
 30863                           ;ECAN.c: 1166: Value->BYTES.BYTE_1 = (*ptr << 3);
 30864  002806  5007               	movf	__RegsToCANID@Value,w,c
 30865  002808  6ED9               	movwf	fsr2l,c
 30866  00280A  D86C               	call	PL88	;call to abstracted procedure
 30867  00280C  3605               	rlcf	??__RegsToCANID,f,c
 30868  00280E  90D8               	bcf	status,0,c
 30869  002810  3605               	rlcf	??__RegsToCANID,f,c
 30870  002812  90D8               	bcf	status,0,c
 30871  002814  3405               	rlcf	??__RegsToCANID,w,c
 30872  002816  6EDF               	movwf	indf2,c
 30873                           
 30874                           ;ECAN.c: 1167: Value->BYTES.BYTE_2 = *ptr >> 5;
 30875  002818  5007               	movf	__RegsToCANID@Value,w,c
 30876  00281A  6ED9               	movwf	fsr2l,c
 30877  00281C  6ADA               	clrf	fsr2h,c
 30878  00281E  2AD9               	incf	fsr2l,f,c
 30879  002820  6ADA               	clrf	fsr2h,c
 30880  002822  D873               	call	PL102	;call to abstracted procedure
 30881  002824                     i1u1224_25:
 30882  002824  90D8               	bcf	status,0,c
 30883  002826  3205               	rrcf	??__RegsToCANID,f,c
 30884  002828  2E06               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 30885  00282A  D7FC               	goto	i1u1224_25
 30886  00282C  5005               	movf	??__RegsToCANID,w,c
 30887                           
 30888                           ;ECAN.c: 1168: ptr++;
 30889                           
 30890                           ;ECAN.c: 1169: Value->BYTES.BYTE_1 |= (*ptr >> 5);
 30891  00282E  D863               	call	PL90	;call to abstracted procedure
 30892  002830  0E05               	movlw	5
 30893  002832  6E06               	movwf	(??__RegsToCANID+1)& (0+255),c
 30894  002834                     i1u1225_25:
 30895  002834  90D8               	bcf	status,0,c
 30896  002836  3205               	rrcf	??__RegsToCANID,f,c
 30897  002838  2E06               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 30898  00283A  D7FC               	goto	i1u1225_25
 30899  00283C  5007               	movf	__RegsToCANID@Value,w,c
 30900  00283E  6ED9               	movwf	fsr2l,c
 30901  002840  6ADA               	clrf	fsr2h,c
 30902  002842  5005               	movf	??__RegsToCANID,w,c
 30903  002844  12DF               	iorwf	indf2,f,c
 30904                           
 30905                           ;ECAN.c: 1170: Value->BYTES.BYTE_3 = 0x00;
 30906  002846  D83D               	call	PL50	;call to abstracted procedure
 30907  002848  6ADF               	clrf	indf2,c
 30908                           
 30909                           ;ECAN.c: 1171: Value->BYTES.BYTE_4 = 0x00;
 30910  00284A  5007               	movf	__RegsToCANID@Value,w,c
 30911  00284C  6ED9               	movwf	fsr2l,c
 30912  00284E  6ADA               	clrf	fsr2h,c
 30913  002850  0E03               	movlw	3
 30914  002852  26D9               	addwf	fsr2l,f,c
 30915  002854  6ADA               	clrf	fsr2h,c
 30916  002856  0E00               	movlw	0
 30917  002858  6EDF               	movwf	indf2,c
 30918                           
 30919                           ;ECAN.c: 1172: }
 30920  00285A  D032               	goto	i1l1654
 30921  00285C                     i1l10807:
 30922                           
 30923                           ;ECAN.c: 1173: else
 30924                           ;ECAN.c: 1174: {
 30925                           ;ECAN.c: 1176: Value->BYTES.BYTE_3 = (*ptr << 5);
 30926  00285C  D832               	call	PL50	;call to abstracted procedure
 30927  00285E  D855               	call	PL102	;call to abstracted procedure
 30928  002860                     i1u1226_25:
 30929  002860  90D8               	bcf	status,0,c
 30930  002862  3605               	rlcf	??__RegsToCANID,f,c
 30931  002864  2E06               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 30932  002866  D7FC               	goto	i1u1226_25
 30933  002868  5005               	movf	??__RegsToCANID,w,c
 30934  00286A  6EDF               	movwf	indf2,c
 30935                           
 30936                           ;ECAN.c: 1177: Value->BYTES.BYTE_4 = (*ptr >> 3);
 30937  00286C  5007               	movf	__RegsToCANID@Value,w,c
 30938  00286E  6ED9               	movwf	fsr2l,c
 30939  002870  6ADA               	clrf	fsr2h,c
 30940  002872  0E03               	movlw	3
 30941  002874  26D9               	addwf	fsr2l,f,c
 30942  002876  D836               	call	PL88	;call to abstracted procedure
 30943  002878  3205               	rrcf	??__RegsToCANID,f,c
 30944  00287A  90D8               	bcf	status,0,c
 30945  00287C  3205               	rrcf	??__RegsToCANID,f,c
 30946  00287E  90D8               	bcf	status,0,c
 30947  002880  3005               	rrcf	??__RegsToCANID,w,c
 30948                           
 30949                           ;ECAN.c: 1178: ptr++;
 30950                           
 30951                           ;ECAN.c: 1179: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
 30952  002882  D839               	call	PL90	;call to abstracted procedure
 30953  002884  0E03               	movlw	3
 30954  002886  1605               	andwf	??__RegsToCANID,f,c
 30955  002888  D81C               	call	PL50	;call to abstracted procedure
 30956  00288A  5005               	movf	??__RegsToCANID,w,c
 30957  00288C  12DF               	iorwf	indf2,f,c
 30958                           
 30959                           ;ECAN.c: 1181: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
 30960  00288E  C001  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 30961  002892  C002  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 30962  002896  50DF               	movf	indf2,w,c
 30963  002898  6E05               	movwf	??__RegsToCANID& (0+255),c
 30964  00289A  90D8               	bcf	status,0,c
 30965  00289C  3205               	rrcf	??__RegsToCANID,f,c
 30966  00289E  90D8               	bcf	status,0,c
 30967  0028A0  3205               	rrcf	??__RegsToCANID,f,c
 30968  0028A2  90D8               	bcf	status,0,c
 30969  0028A4  3205               	rrcf	??__RegsToCANID,f,c
 30970  0028A6  0E1C               	movlw	28
 30971  0028A8  1605               	andwf	??__RegsToCANID,f,c
 30972  0028AA  D80B               	call	PL50	;call to abstracted procedure
 30973  0028AC  5005               	movf	??__RegsToCANID,w,c
 30974  0028AE  12DF               	iorwf	indf2,f,c
 30975                           
 30976                           ;ECAN.c: 1182: ptr++;
 30977                           
 30978                           ;ECAN.c: 1183: Value->BYTES.BYTE_2 = *ptr;
 30979  0028B0  D80F               	call	PL82	;call to abstracted procedure
 30980  0028B2  2AE1               	incf	fsr1l,f,c
 30981  0028B4  6AE2               	clrf	fsr1h,c
 30982  0028B6  CFDF FFE7          	movff	indf2,indf1
 30983                           
 30984                           ;ECAN.c: 1184: ptr++;
 30985                           
 30986                           ;ECAN.c: 1185: Value->BYTES.BYTE_1 = *ptr;
 30987  0028BA  D80A               	call	PL82	;call to abstracted procedure
 30988  0028BC  CFDF FFE7          	movff	indf2,indf1
 30989  0028C0                     i1l1654:
 30990  0028C0  0012               	return	
 30991  0028C2                     __end_of__RegsToCANID:
 30992                           	opt stack 0
 30993  0028C2                     PL50:
 30994                           	opt stack 19
 30995  0028C2  5007               	movf	__RegsToCANID@Value,w,c
 30996  0028C4  6ED9               	movwf	fsr2l,c
 30997  0028C6  6ADA               	clrf	fsr2h,c
 30998  0028C8  0E02               	movlw	2
 30999  0028CA  26D9               	addwf	fsr2l,f,c
 31000  0028CC  6ADA               	clrf	fsr2h,c
 31001  0028CE  0012               	return	
 31002  0028D0                     __end_ofPL50:
 31003                           	opt stack 0
 31004  0028D0                     PL82:
 31005                           	opt stack 19
 31006  0028D0  4A01               	infsnz	__RegsToCANID@ptr,f,c
 31007  0028D2  2A02               	incf	__RegsToCANID@ptr+1,f,c
 31008  0028D4  C001  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 31009  0028D8  C002  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 31010  0028DC  5007               	movf	__RegsToCANID@Value,w,c
 31011  0028DE  6EE1               	movwf	fsr1l,c
 31012  0028E0  6AE2               	clrf	fsr1h,c
 31013  0028E2  0012               	return	
 31014  0028E4                     __end_ofPL82:
 31015                           	opt stack 0
 31016  0028E4                     PL88:
 31017                           	opt stack 19
 31018  0028E4  6ADA               	clrf	fsr2h,c
 31019  0028E6  C001  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 31020  0028EA  C002  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 31021  0028EE  50E7               	movf	indf1,w,c
 31022  0028F0  6E05               	movwf	??__RegsToCANID& (0+255),c
 31023  0028F2  90D8               	bcf	status,0,c
 31024  0028F4  0012               	return	
 31025  0028F6                     __end_ofPL88:
 31026                           	opt stack 0
 31027  0028F6                     PL90:
 31028                           	opt stack 19
 31029  0028F6  6EDF               	movwf	indf2,c
 31030  0028F8  4A01               	infsnz	__RegsToCANID@ptr,f,c
 31031  0028FA  2A02               	incf	__RegsToCANID@ptr+1,f,c
 31032  0028FC  C001  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 31033  002900  C002  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 31034  002904  50DF               	movf	indf2,w,c
 31035  002906  6E05               	movwf	??__RegsToCANID& (0+255),c
 31036  002908  0012               	return	
 31037  00290A                     __end_ofPL90:
 31038                           	opt stack 0
 31039  00290A                     PL102:
 31040                           	opt stack 19
 31041  00290A  C001  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 31042  00290E  C002  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 31043  002912  50E7               	movf	indf1,w,c
 31044  002914  6E05               	movwf	??__RegsToCANID& (0+255),c
 31045  002916  0E05               	movlw	5
 31046  002918  6E06               	movwf	(??__RegsToCANID+1)& (0+255),c
 31047  00291A  0C05               	retlw	5
 31048  00291C                     __end_ofPL102:
 31049                           	opt stack 0
 31050                           tblptru	equ	0xFF8
 31051                           tblptrh	equ	0xFF7
 31052                           tblptrl	equ	0xFF6
 31053                           tablat	equ	0xFF5
 31054                           prodh	equ	0xFF4
 31055                           prodl	equ	0xFF3
 31056                           intcon	equ	0xFF2
 31057                           indf0	equ	0xFEF
 31058                           postinc0	equ	0xFEE
 31059                           fsr0h	equ	0xFEA
 31060                           fsr0l	equ	0xFE9
 31061                           wreg	equ	0xFE8
 31062                           indf1	equ	0xFE7
 31063                           postinc1	equ	0xFE6
 31064                           postdec1	equ	0xFE5
 31065                           fsr1h	equ	0xFE2
 31066                           fsr1l	equ	0xFE1
 31067                           bsr	equ	0xFE0
 31068                           indf2	equ	0xFDF
 31069                           postinc2	equ	0xFDE
 31070                           postdec2	equ	0xFDD
 31071                           plusw2	equ	0xFDB
 31072                           fsr2h	equ	0xFDA
 31073                           fsr2l	equ	0xFD9
 31074                           status	equ	0xFD8
 31075                           
 31076 ;; *************** function __ECANPointBuffer *****************
 31077 ;; Defined at:
 31078 ;;		line 1209 in file "ECAN.c"
 31079 ;; Parameters:    Size  Location     Type
 31080 ;;  b               1    wreg     unsigned char 
 31081 ;; Auto vars:     Size  Location     Type
 31082 ;;  b               1    3[COMRAM] unsigned char 
 31083 ;;  pt              2    4[COMRAM] PTR unsigned char 
 31084 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 31085 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 31086 ;; Return value:  Size  Location     Type
 31087 ;;                  2    0[COMRAM] PTR unsigned char 
 31088 ;; Registers used:
 31089 ;;		wreg, status,2, status,0
 31090 ;; Tracked objects:
 31091 ;;		On entry : F/2
 31092 ;;		On exit  : 2/2
 31093 ;;		Unchanged: 0/0
 31094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31095 ;;      Params:         3       0       0       0       0       0       0
 31096 ;;      Locals:         3       0       0       0       0       0       0
 31097 ;;      Temps:          0       0       0       0       0       0       0
 31098 ;;      Totals:         6       0       0       0       0       0       0
 31099 ;;Total ram usage:        6 bytes
 31100 ;; Hardware stack levels used:    1
 31101 ;; This function calls:
 31102 ;;		Nothing
 31103 ;; This function is called by:
 31104 ;;		_ECANReceiveMessage
 31105 ;; This function uses a non-reentrant model
 31106 ;;
 31107                           
 31108                           	psect	text92
 31109  00122E                     __ptext92:
 31110                           	opt stack 0
 31111  00122E                     __ECANPointBuffer:
 31112                           	opt stack 19
 31113                           
 31114                           ;incstack = 0
 31115                           ;incstack = 0
 31116                           ;__ECANPointBuffer@b stored from wreg
 31117  00122E  CFE8 F004          	movff	wreg,__ECANPointBuffer@b
 31118                           
 31119                           ; BSR set to: 2
 31120                           ;ECAN.c: 1210: BYTE* pt;
 31121                           ;ECAN.c: 1212: switch(b)
 31122  001232  D024               	goto	i1l10793
 31123  001234                     i1l10775:
 31124                           
 31125                           ; BSR set to: 2
 31126                           ;ECAN.c: 1215: pt=(BYTE*)&RXB0CON;
 31127  001234  0E0F               	movlw	15	;volatile
 31128  001236  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31129  001238  0E60               	movlw	96	;volatile
 31130  00123A  D01E               	goto	L77
 31131  00123C                     i1l10777:
 31132                           
 31133                           ; BSR set to: 2
 31134                           ;ECAN.c: 1218: pt=(BYTE*)&RXB1CON;
 31135  00123C  010F               	movlb	15	; () banked
 31136  00123E  0E0F               	movlw	15	;volatile
 31137  001240  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31138  001242  0E50               	movlw	80	;volatile
 31139  001244  D019               	goto	L77
 31140  001246                     i1l10779:
 31141                           
 31142                           ; BSR set to: 2
 31143                           ;ECAN.c: 1221: pt=(BYTE*)&B0CON;
 31144  001246  010E               	movlb	14	; () banked
 31145  001248  0E0E               	movlw	14	;volatile
 31146  00124A  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31147  00124C  0E20               	movlw	32	;volatile
 31148  00124E  D014               	goto	L77
 31149  001250                     i1l10781:
 31150                           
 31151                           ; BSR set to: 2
 31152                           ;ECAN.c: 1224: pt=(BYTE*)&B1CON;
 31153  001250  010E               	movlb	14	; () banked
 31154  001252  0E0E               	movlw	14	;volatile
 31155  001254  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31156  001256  0E30               	movlw	48	;volatile
 31157  001258  D00F               	goto	L77
 31158  00125A                     i1l10783:
 31159                           
 31160                           ; BSR set to: 2
 31161                           ;ECAN.c: 1227: pt=(BYTE*)&B2CON;
 31162  00125A  010E               	movlb	14	; () banked
 31163  00125C  0E0E               	movlw	14	;volatile
 31164  00125E  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31165  001260  0E40               	movlw	64	;volatile
 31166  001262  D00A               	goto	L77
 31167  001264                     i1l10785:
 31168                           
 31169                           ; BSR set to: 2
 31170                           ;ECAN.c: 1230: pt=(BYTE*)&B3CON;
 31171  001264  010E               	movlb	14	; () banked
 31172  001266  0E0E               	movlw	14	;volatile
 31173  001268  D7EB               	goto	L78
 31174  00126A                     i1l10787:
 31175                           
 31176                           ; BSR set to: 2
 31177                           ;ECAN.c: 1233: pt=(BYTE*)&B4CON;
 31178  00126A  010E               	movlb	14	; () banked
 31179  00126C  0E0E               	movlw	14	;volatile
 31180  00126E  D7E3               	goto	L79
 31181  001270                     i1l10789:
 31182                           
 31183                           ; BSR set to: 2
 31184                           ;ECAN.c: 1236: pt=(BYTE*)&B5CON;
 31185  001270  010E               	movlb	14	; () banked
 31186  001272  0E0E               	movlw	14	;volatile
 31187  001274  6E06               	movwf	__ECANPointBuffer@pt+1,c
 31188  001276  0E70               	movlw	112	;volatile
 31189  001278                     L77:
 31190  001278  6E05               	movwf	__ECANPointBuffer@pt,c
 31191                           
 31192                           ;ECAN.c: 1237: break;
 31193  00127A  D00F               	goto	i1l1659
 31194  00127C                     i1l10793:
 31195                           
 31196                           ; BSR set to: 2
 31197  00127C  5004               	movf	__ECANPointBuffer@b,w,c
 31198                           
 31199                           ; Switch size 1, requested type "space"
 31200                           ; Number of cases is 7, Range of values is 0 to 6
 31201                           ; switch strategies available:
 31202                           ; Name         Instructions Cycles
 31203                           ; simple_byte           22    12 (average)
 31204                           ;	Chosen strategy is simple_byte
 31205  00127E  E0DA               	bz	i1l10775
 31206  001280  0A01               	xorlw	1	; case 1
 31207  001282  E0DC               	bz	i1l10777
 31208  001284  0A03               	xorlw	3	; case 2
 31209  001286  E0DF               	bz	i1l10779
 31210  001288  0A01               	xorlw	1	; case 3
 31211  00128A  E0E2               	bz	i1l10781
 31212  00128C  0A07               	xorlw	7	; case 4
 31213  00128E  E0E5               	bz	i1l10783
 31214  001290  0A01               	xorlw	1	; case 5
 31215  001292  E0E8               	bz	i1l10785
 31216  001294  0A03               	xorlw	3	; case 6
 31217  001296  E0E9               	bz	i1l10787
 31218  001298  D7EB               	goto	i1l10789
 31219  00129A                     i1l1659:
 31220                           
 31221                           ;ECAN.c: 1239: return (pt);
 31222  00129A  C005  F001         	movff	__ECANPointBuffer@pt,?__ECANPointBuffer
 31223  00129E  C006  F002         	movff	__ECANPointBuffer@pt+1,?__ECANPointBuffer+1
 31224  0012A2  0012               	return	
 31225  0012A4                     __end_of__ECANPointBuffer:
 31226                           	opt stack 0
 31227                           tblptru	equ	0xFF8
 31228                           tblptrh	equ	0xFF7
 31229                           tblptrl	equ	0xFF6
 31230                           tablat	equ	0xFF5
 31231                           prodh	equ	0xFF4
 31232                           prodl	equ	0xFF3
 31233                           intcon	equ	0xFF2
 31234                           indf0	equ	0xFEF
 31235                           postinc0	equ	0xFEE
 31236                           fsr0h	equ	0xFEA
 31237                           fsr0l	equ	0xFE9
 31238                           wreg	equ	0xFE8
 31239                           indf1	equ	0xFE7
 31240                           postinc1	equ	0xFE6
 31241                           postdec1	equ	0xFE5
 31242                           fsr1h	equ	0xFE2
 31243                           fsr1l	equ	0xFE1
 31244                           bsr	equ	0xFE0
 31245                           indf2	equ	0xFDF
 31246                           postinc2	equ	0xFDE
 31247                           postdec2	equ	0xFDD
 31248                           plusw2	equ	0xFDB
 31249                           fsr2h	equ	0xFDA
 31250                           fsr2l	equ	0xFD9
 31251                           status	equ	0xFD8
 31252                           
 31253 ;; *************** function _fifo_write *****************
 31254 ;; Defined at:
 31255 ;;		line 61 in file "fifo.c"
 31256 ;; Parameters:    Size  Location     Type
 31257 ;;  f               1    wreg     PTR struct .
 31258 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 31259 ;;  buf             2    0[COMRAM] PTR const void 
 31260 ;;		 -> dlc(1), data(8), id(4), Interrupt@c(1), 
 31261 ;;  nbytes          4    2[COMRAM] unsigned long 
 31262 ;; Auto vars:     Size  Location     Type
 31263 ;;  f               1   16[COMRAM] PTR struct .
 31264 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 31265 ;;  i               4   12[COMRAM] unsigned long 
 31266 ;;  p               2   10[COMRAM] PTR const unsigned char 
 31267 ;;		 -> dlc(1), data(8), id(4), Interrupt@c(1), 
 31268 ;; Return value:  Size  Location     Type
 31269 ;;                  2    0[COMRAM] unsigned short 
 31270 ;; Registers used:
 31271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31272 ;; Tracked objects:
 31273 ;;		On entry : F/0
 31274 ;;		On exit  : F/0
 31275 ;;		Unchanged: F/0
 31276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31277 ;;      Params:         6       0       0       0       0       0       0
 31278 ;;      Locals:         7       0       0       0       0       0       0
 31279 ;;      Temps:          4       0       0       0       0       0       0
 31280 ;;      Totals:        17       0       0       0       0       0       0
 31281 ;;Total ram usage:       17 bytes
 31282 ;; Hardware stack levels used:    1
 31283 ;; This function calls:
 31284 ;;		Nothing
 31285 ;; This function is called by:
 31286 ;;		_Interrupt
 31287 ;; This function uses a non-reentrant model
 31288 ;;
 31289                           
 31290                           	psect	text93
 31291  00291C                     __ptext93:
 31292                           	opt stack 0
 31293  00291C                     _fifo_write:
 31294                           	opt stack 20
 31295                           
 31296                           ;incstack = 0
 31297                           ;incstack = 0
 31298                           ;fifo_write@f stored from wreg
 31299  00291C  CFE8 F011          	movff	wreg,fifo_write@f
 31300                           
 31301                           ; BSR set to: 0
 31302                           ;fifo.c: 62: uint32_t i;
 31303                           ;fifo.c: 63: const uint8_t *p;
 31304                           ;fifo.c: 64: p = buf;
 31305  002920  C001  F00B         	movff	fifo_write@buf,fifo_write@p
 31306  002924  C002  F00C         	movff	fifo_write@buf+1,fifo_write@p+1
 31307                           
 31308                           ;fifo.c: 66: for ( i = 0; i < nbytes; i++ ) {
 31309  002928  6A0D               	clrf	fifo_write@i,c
 31310  00292A  6A0E               	clrf	fifo_write@i+1,c
 31311  00292C  6A0F               	clrf	fifo_write@i+2,c
 31312  00292E  6A10               	clrf	fifo_write@i+3,c
 31313  002930  D05F               	goto	i1l7187
 31314  002932                     i1l7167:
 31315                           
 31316                           ; BSR set to: 0
 31317                           ;fifo.c: 69: if ( ( (f->head + 1) == f->tail) ||
 31318                           ;fifo.c: 70: (((f->head + 1) == f->size) && (f->tail == 0))) {
 31319  002932  5011               	movf	fifo_write@f,w,c
 31320  002934  6ED9               	movwf	fsr2l,c
 31321  002936  6ADA               	clrf	fsr2h,c
 31322  002938  0E04               	movlw	4
 31323  00293A  D868               	call	PL22	;call to abstracted procedure
 31324  00293C  E102               	bnz	i1u682_25
 31325  00293E  5007               	movf	??_fifo_write,w,c
 31326  002940  1809               	xorwf	??_fifo_write+2,w,c
 31327  002942                     i1u682_25:
 31328  002942  E012               	bz	i1l1686
 31329                           
 31330                           ; BSR set to: 0
 31331  002944  5011               	movf	fifo_write@f,w,c
 31332  002946  6ED9               	movwf	fsr2l,c
 31333  002948  6ADA               	clrf	fsr2h,c
 31334  00294A  0E06               	movlw	6
 31335  00294C  D85F               	call	PL22	;call to abstracted procedure
 31336  00294E  E102               	bnz	i1u683_25
 31337  002950  5007               	movf	??_fifo_write,w,c
 31338  002952  1809               	xorwf	??_fifo_write+2,w,c
 31339  002954                     i1u683_25:
 31340  002954  E10E               	bnz	i1l7175
 31341                           
 31342                           ; BSR set to: 0
 31343  002956  5011               	movf	fifo_write@f,w,c
 31344  002958  6ED9               	movwf	fsr2l,c
 31345  00295A  6ADA               	clrf	fsr2h,c
 31346  00295C  0E04               	movlw	4
 31347  00295E  26D9               	addwf	fsr2l,f,c
 31348  002960  6ADA               	clrf	fsr2h,c
 31349  002962  50DE               	movf	postinc2,w,c
 31350  002964  10DD               	iorwf	postdec2,w,c
 31351  002966  E105               	bnz	i1l7175
 31352  002968                     i1l1686:
 31353                           
 31354                           ; BSR set to: 0
 31355                           ;fifo.c: 71: return i;
 31356  002968  C00D  F001         	movff	fifo_write@i,?_fifo_write
 31357  00296C  C00E  F002         	movff	fifo_write@i+1,?_fifo_write+1
 31358  002970  D04C               	goto	i1l1687
 31359  002972                     i1l7175:
 31360                           
 31361                           ; BSR set to: 0
 31362                           ;fifo.c: 73: else {
 31363                           ;fifo.c: 74: f->buf[ f->head ] = *p++;
 31364  002972  C00B  FFD9         	movff	fifo_write@p,fsr2l
 31365  002976  C00C  FFDA         	movff	fifo_write@p+1,fsr2h
 31366  00297A  D85E               	call	PL134	;call to abstracted procedure
 31367  00297C  CFE6 F007          	movff	postinc1,??_fifo_write
 31368  002980  CFE5 F008          	movff	postdec1,??_fifo_write+1
 31369  002984  5011               	movf	fifo_write@f,w,c
 31370  002986  6EE1               	movwf	fsr1l,c
 31371  002988  6AE2               	clrf	fsr1h,c
 31372  00298A  CFE6 F009          	movff	postinc1,??_fifo_write+2
 31373  00298E  CFE5 F00A          	movff	postdec1,??_fifo_write+3
 31374  002992  5007               	movf	??_fifo_write,w,c
 31375  002994  2409               	addwf	??_fifo_write+2,w,c
 31376  002996  6EE1               	movwf	fsr1l,c
 31377  002998  5008               	movf	??_fifo_write+1,w,c
 31378  00299A  200A               	addwfc	??_fifo_write+3,w,c
 31379  00299C  6EE2               	movwf	fsr1h,c
 31380  00299E  CFDF FFE7          	movff	indf2,indf1
 31381                           
 31382                           ; BSR set to: 0
 31383  0029A2  4A0B               	infsnz	fifo_write@p,f,c
 31384  0029A4  2A0C               	incf	fifo_write@p+1,f,c
 31385                           
 31386                           ; BSR set to: 0
 31387                           ;fifo.c: 75: f->head++;
 31388  0029A6  5011               	movf	fifo_write@f,w,c
 31389  0029A8  6ED9               	movwf	fsr2l,c
 31390  0029AA  6ADA               	clrf	fsr2h,c
 31391  0029AC  0E02               	movlw	2
 31392  0029AE  26D9               	addwf	fsr2l,f,c
 31393  0029B0  6ADA               	clrf	fsr2h,c
 31394  0029B2  2ADE               	incf	postinc2,f,c
 31395  0029B4  0E00               	movlw	0
 31396  0029B6  22DD               	addwfc	postdec2,f,c
 31397                           
 31398                           ; BSR set to: 0
 31399                           ;fifo.c: 77: if (f->head >= f->size) {
 31400  0029B8  5011               	movf	fifo_write@f,w,c
 31401  0029BA  6ED9               	movwf	fsr2l,c
 31402  0029BC  6ADA               	clrf	fsr2h,c
 31403  0029BE  0E06               	movlw	6
 31404  0029C0  26D9               	addwf	fsr2l,f,c
 31405  0029C2  6ADA               	clrf	fsr2h,c
 31406  0029C4  D839               	call	PL134	;call to abstracted procedure
 31407  0029C6  52E6               	movf	postinc1,f,c
 31408  0029C8  52DE               	movf	postinc2,f,c
 31409  0029CA  50DD               	movf	postdec2,w,c
 31410  0029CC  5CE5               	subwf	postdec1,w,c
 31411  0029CE  E102               	bnz	i1u685_25
 31412  0029D0  50DF               	movf	indf2,w,c
 31413  0029D2  5CE7               	subwf	indf1,w,c
 31414  0029D4                     i1u685_25:
 31415  0029D4  E308               	bnc	i1l7185
 31416                           
 31417                           ; BSR set to: 0
 31418                           ;fifo.c: 78: f->head = 0;
 31419  0029D6  5011               	movf	fifo_write@f,w,c
 31420  0029D8  6ED9               	movwf	fsr2l,c
 31421  0029DA  6ADA               	clrf	fsr2h,c
 31422  0029DC  0E02               	movlw	2
 31423  0029DE  26D9               	addwf	fsr2l,f,c
 31424  0029E0  6ADA               	clrf	fsr2h,c
 31425  0029E2  6ADE               	clrf	postinc2,c
 31426  0029E4  6ADD               	clrf	postdec2,c
 31427  0029E6                     i1l7185:
 31428                           
 31429                           ; BSR set to: 0
 31430  0029E6  2A0D               	incf	fifo_write@i,f,c
 31431  0029E8  0E00               	movlw	0
 31432  0029EA  220E               	addwfc	fifo_write@i+1,f,c
 31433  0029EC  220F               	addwfc	fifo_write@i+2,f,c
 31434  0029EE  2210               	addwfc	fifo_write@i+3,f,c
 31435  0029F0                     i1l7187:
 31436                           
 31437                           ; BSR set to: 0
 31438  0029F0  5003               	movf	fifo_write@nbytes,w,c
 31439  0029F2  5C0D               	subwf	fifo_write@i,w,c
 31440  0029F4  5004               	movf	fifo_write@nbytes+1,w,c
 31441  0029F6  580E               	subwfb	fifo_write@i+1,w,c
 31442  0029F8  5005               	movf	fifo_write@nbytes+2,w,c
 31443  0029FA  580F               	subwfb	fifo_write@i+2,w,c
 31444  0029FC  5006               	movf	fifo_write@nbytes+3,w,c
 31445  0029FE  5810               	subwfb	fifo_write@i+3,w,c
 31446  002A00  E398               	bnc	i1l7167
 31447                           
 31448                           ; BSR set to: 0
 31449                           ;fifo.c: 79: }
 31450                           ;fifo.c: 80: }
 31451                           ;fifo.c: 82: }
 31452                           ;fifo.c: 84: return nbytes;
 31453  002A02  C003  F001         	movff	fifo_write@nbytes,?_fifo_write
 31454  002A06  C004  F002         	movff	fifo_write@nbytes+1,?_fifo_write+1
 31455  002A0A                     i1l1687:
 31456                           
 31457                           ; BSR set to: 0
 31458  002A0A  0012               	return	
 31459  002A0C                     __end_of_fifo_write:
 31460                           	opt stack 0
 31461  002A0C                     PL22:
 31462                           	opt stack 20
 31463  002A0C  26D9               	addwf	fsr2l,f,c
 31464  002A0E  6ADA               	clrf	fsr2h,c
 31465  002A10  CFDE F007          	movff	postinc2,??_fifo_write
 31466  002A14  CFDD F008          	movff	postdec2,??_fifo_write+1
 31467  002A18  5011               	movf	fifo_write@f,w,c
 31468  002A1A  6ED9               	movwf	fsr2l,c
 31469  002A1C  6ADA               	clrf	fsr2h,c
 31470  002A1E  0E02               	movlw	2
 31471  002A20  26D9               	addwf	fsr2l,f,c
 31472  002A22  6ADA               	clrf	fsr2h,c
 31473  002A24  CFDE F009          	movff	postinc2,??_fifo_write+2
 31474  002A28  CFDD F00A          	movff	postdec2,??_fifo_write+3
 31475  002A2C  2A09               	incf	??_fifo_write+2,f,c
 31476  002A2E  0E00               	movlw	0
 31477  002A30  220A               	addwfc	??_fifo_write+3,f,c
 31478  002A32  5008               	movf	??_fifo_write+1,w,c
 31479  002A34  180A               	xorwf	??_fifo_write+3,w,c
 31480  002A36  0012               	return	
 31481  002A38                     __end_ofPL22:
 31482                           	opt stack 0
 31483  002A38                     PL134:
 31484                           	opt stack 20
 31485  002A38  5011               	movf	fifo_write@f,w,c
 31486  002A3A  6EE1               	movwf	fsr1l,c
 31487  002A3C  6AE2               	clrf	fsr1h,c
 31488  002A3E  0E02               	movlw	2
 31489  002A40  26E1               	addwf	fsr1l,f,c
 31490  002A42  6AE2               	clrf	fsr1h,c
 31491  002A44  0012               	return	
 31492  002A46                     __end_ofPL134:
 31493                           	opt stack 0
 31494                           tblptru	equ	0xFF8
 31495                           tblptrh	equ	0xFF7
 31496                           tblptrl	equ	0xFF6
 31497                           tablat	equ	0xFF5
 31498                           prodh	equ	0xFF4
 31499                           prodl	equ	0xFF3
 31500                           intcon	equ	0xFF2
 31501                           indf0	equ	0xFEF
 31502                           postinc0	equ	0xFEE
 31503                           fsr0h	equ	0xFEA
 31504                           fsr0l	equ	0xFE9
 31505                           wreg	equ	0xFE8
 31506                           indf1	equ	0xFE7
 31507                           postinc1	equ	0xFE6
 31508                           postdec1	equ	0xFE5
 31509                           fsr1h	equ	0xFE2
 31510                           fsr1l	equ	0xFE1
 31511                           bsr	equ	0xFE0
 31512                           indf2	equ	0xFDF
 31513                           postinc2	equ	0xFDE
 31514                           postdec2	equ	0xFDD
 31515                           plusw2	equ	0xFDB
 31516                           fsr2h	equ	0xFDA
 31517                           fsr2l	equ	0xFD9
 31518                           status	equ	0xFD8
 31519                           
 31520 ;; *************** function _ReadUSART *****************
 31521 ;; Defined at:
 31522 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
 31523 ;; Parameters:    Size  Location     Type
 31524 ;;		None
 31525 ;; Auto vars:     Size  Location     Type
 31526 ;;  data            1    0[COMRAM] unsigned char 
 31527 ;; Return value:  Size  Location     Type
 31528 ;;                  1    wreg      unsigned char 
 31529 ;; Registers used:
 31530 ;;		wreg, status,2, status,0
 31531 ;; Tracked objects:
 31532 ;;		On entry : 0/0
 31533 ;;		On exit  : 0/0
 31534 ;;		Unchanged: 0/0
 31535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 31536 ;;      Params:         0       0       0       0       0       0       0
 31537 ;;      Locals:         1       0       0       0       0       0       0
 31538 ;;      Temps:          0       0       0       0       0       0       0
 31539 ;;      Totals:         1       0       0       0       0       0       0
 31540 ;;Total ram usage:        1 bytes
 31541 ;; Hardware stack levels used:    1
 31542 ;; This function calls:
 31543 ;;		Nothing
 31544 ;; This function is called by:
 31545 ;;		_Interrupt
 31546 ;; This function uses a non-reentrant model
 31547 ;;
 31548                           
 31549                           	psect	text94
 31550  000930                     __ptext94:
 31551                           	opt stack 0
 31552  000930                     _ReadUSART:
 31553                           	opt stack 20
 31554                           
 31555                           ; BSR set to: 0
 31556                           ;incstack = 0
 31557                           ;incstack = 0
 31558  000930  0EF2               	movlw	242
 31559  000932  162E               	andwf	_USART_Status,f,c
 31560  000934  ACAB               	btfss	4011,6,c	;volatile
 31561  000936  D003               	goto	i1l2038
 31562  000938  902E               	bcf	_USART_Status,0,c
 31563  00093A  B0AB               	btfsc	4011,0,c	;volatile
 31564  00093C  802E               	bsf	_USART_Status,0,c
 31565  00093E                     i1l2038:
 31566  00093E  B4AB               	btfsc	4011,2,c	;volatile
 31567  000940  842E               	bsf	_USART_Status,2,c
 31568  000942  B2AB               	btfsc	4011,1,c	;volatile
 31569  000944  862E               	bsf	_USART_Status,3,c
 31570  000946  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 31571  00094A  5001               	movf	ReadUSART@data,w,c
 31572  00094C  0012               	return	
 31573  00094E                     __end_of_ReadUSART:
 31574                           	opt stack 0
 31575                           tblptru	equ	0xFF8
 31576                           tblptrh	equ	0xFF7
 31577                           tblptrl	equ	0xFF6
 31578                           tablat	equ	0xFF5
 31579                           prodh	equ	0xFF4
 31580                           prodl	equ	0xFF3
 31581                           intcon	equ	0xFF2
 31582                           indf0	equ	0xFEF
 31583                           postinc0	equ	0xFEE
 31584                           fsr0h	equ	0xFEA
 31585                           fsr0l	equ	0xFE9
 31586                           wreg	equ	0xFE8
 31587                           indf1	equ	0xFE7
 31588                           postinc1	equ	0xFE6
 31589                           postdec1	equ	0xFE5
 31590                           fsr1h	equ	0xFE2
 31591                           fsr1l	equ	0xFE1
 31592                           bsr	equ	0xFE0
 31593                           indf2	equ	0xFDF
 31594                           postinc2	equ	0xFDE
 31595                           postdec2	equ	0xFDD
 31596                           plusw2	equ	0xFDB
 31597                           fsr2h	equ	0xFDA
 31598                           fsr2l	equ	0xFD9
 31599                           status	equ	0xFD8
 31600                           tblptru	equ	0xFF8
 31601                           tblptrh	equ	0xFF7
 31602                           tblptrl	equ	0xFF6
 31603                           tablat	equ	0xFF5
 31604                           prodh	equ	0xFF4
 31605                           prodl	equ	0xFF3
 31606                           intcon	equ	0xFF2
 31607                           indf0	equ	0xFEF
 31608                           postinc0	equ	0xFEE
 31609                           fsr0h	equ	0xFEA
 31610                           fsr0l	equ	0xFE9
 31611                           wreg	equ	0xFE8
 31612                           indf1	equ	0xFE7
 31613                           postinc1	equ	0xFE6
 31614                           postdec1	equ	0xFE5
 31615                           fsr1h	equ	0xFE2
 31616                           fsr1l	equ	0xFE1
 31617                           bsr	equ	0xFE0
 31618                           indf2	equ	0xFDF
 31619                           postinc2	equ	0xFDE
 31620                           postdec2	equ	0xFDD
 31621                           plusw2	equ	0xFDB
 31622                           fsr2h	equ	0xFDA
 31623                           fsr2l	equ	0xFD9
 31624                           status	equ	0xFD8
 31625                           
 31626                           	psect	rparam
 31627  0000                     tblptru	equ	0xFF8
 31628                           tblptrh	equ	0xFF7
 31629                           tblptrl	equ	0xFF6
 31630                           tablat	equ	0xFF5
 31631                           prodh	equ	0xFF4
 31632                           prodl	equ	0xFF3
 31633                           intcon	equ	0xFF2
 31634                           indf0	equ	0xFEF
 31635                           postinc0	equ	0xFEE
 31636                           fsr0h	equ	0xFEA
 31637                           fsr0l	equ	0xFE9
 31638                           wreg	equ	0xFE8
 31639                           indf1	equ	0xFE7
 31640                           postinc1	equ	0xFE6
 31641                           postdec1	equ	0xFE5
 31642                           fsr1h	equ	0xFE2
 31643                           fsr1l	equ	0xFE1
 31644                           bsr	equ	0xFE0
 31645                           indf2	equ	0xFDF
 31646                           postinc2	equ	0xFDE
 31647                           postdec2	equ	0xFDD
 31648                           plusw2	equ	0xFDB
 31649                           fsr2h	equ	0xFDA
 31650                           fsr2l	equ	0xFD9
 31651                           status	equ	0xFD8
 31652                           tblptru	equ	0xFF8
 31653                           tblptrh	equ	0xFF7
 31654                           tblptrl	equ	0xFF6
 31655                           tablat	equ	0xFF5
 31656                           prodh	equ	0xFF4
 31657                           prodl	equ	0xFF3
 31658                           intcon	equ	0xFF2
 31659                           indf0	equ	0xFEF
 31660                           postinc0	equ	0xFEE
 31661                           fsr0h	equ	0xFEA
 31662                           fsr0l	equ	0xFE9
 31663                           wreg	equ	0xFE8
 31664                           indf1	equ	0xFE7
 31665                           postinc1	equ	0xFE6
 31666                           postdec1	equ	0xFE5
 31667                           fsr1h	equ	0xFE2
 31668                           fsr1l	equ	0xFE1
 31669                           bsr	equ	0xFE0
 31670                           indf2	equ	0xFDF
 31671                           postinc2	equ	0xFDE
 31672                           postdec2	equ	0xFDD
 31673                           plusw2	equ	0xFDB
 31674                           fsr2h	equ	0xFDA
 31675                           fsr2l	equ	0xFD9
 31676                           status	equ	0xFD8


Data Sizes:
    Strings     4477
    Constant    120
    Data        0
    BSS         1150
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      65
    BANK0           160     97     159
    BANK1           256     31     210
    BANK2           256     76     212
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    ?_strcspn	unsigned int  size(2) Largest target is 0

    ?_strspn	unsigned int  size(2) Largest target is 0

    ?_strichr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_strnicmp	int  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?_utoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    ?_ReadTimer3	unsigned int  size(1) Largest target is 2
		 -> WriteTimer3@timer(COMRAM[2]), ReadTimer3@timer(COMRAM[2]), 

    ?___llmod	unsigned long  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?__ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ?_strcat	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_itoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    ?_ultoa	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?___wmul	unsigned int  size(1) Largest target is 4
		 -> ECANSendMessage@dataLen(BANK0[1]), getVSCPFrame@id(BANK0[4]), 

    ?_memcpy	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    ?_strlen	unsigned int  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_168(CODE[2]), STR_167(CODE[9]), STR_165(CODE[10]), 
		 -> STR_162(CODE[4]), STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), 
		 -> STR_154(CODE[3]), STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), 
		 -> STR_147(CODE[8]), STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), 
		 -> STR_143(CODE[7]), STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), 
		 -> STR_138(CODE[11]), STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), 
		 -> STR_120(CODE[5]), STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), 
		 -> STR_81(CODE[5]), wrkbuf(BANK1[80]), STR_49(CODE[5]), STR_47(CODE[5]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_41(CODE[5]), STR_38(CODE[3]), 
		 -> STR_29(CODE[3]), STR_20(CODE[7]), STR_18(CODE[8]), STR_16(CODE[7]), 
		 -> STR_14(CODE[9]), STR_12(CODE[6]), STR_10(CODE[7]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), cmdbuf(BANK1[80]), 

    ?_strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    ?_strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    ?_memset	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    ?_atoi	int  size(2) Largest target is 0

    ?_strtok	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_stristr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_fifo_read	unsigned short  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    ?_fifo_getFree	unsigned short  size(2) Largest target is 0

    ?_fifo_write	unsigned short  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(BANK0[1]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strichr@ptr	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strnicmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_168(CODE[2]), STR_167(CODE[9]), STR_165(CODE[10]), STR_162(CODE[4]), 
		 -> STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), STR_154(CODE[3]), 
		 -> STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), STR_147(CODE[8]), 
		 -> STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), STR_143(CODE[7]), 
		 -> STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), STR_138(CODE[11]), 
		 -> STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), STR_120(CODE[5]), 
		 -> STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), STR_81(CODE[5]), 
		 -> STR_49(CODE[5]), STR_47(CODE[5]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_41(CODE[5]), STR_38(CODE[3]), STR_29(CODE[3]), STR_20(CODE[7]), 
		 -> STR_18(CODE[8]), STR_16(CODE[7]), STR_14(CODE[9]), STR_12(CODE[6]), 
		 -> STR_10(CODE[7]), STR_8(CODE[5]), STR_6(CODE[5]), 

    strnicmp@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_168(CODE[2]), STR_167(CODE[9]), STR_165(CODE[10]), 
		 -> STR_162(CODE[4]), STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), 
		 -> STR_154(CODE[3]), STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), 
		 -> STR_147(CODE[8]), STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), 
		 -> STR_143(CODE[7]), STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), 
		 -> STR_138(CODE[11]), STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), 
		 -> STR_120(CODE[5]), STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), 
		 -> STR_81(CODE[5]), wrkbuf(BANK1[80]), STR_49(CODE[5]), STR_47(CODE[5]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_41(CODE[5]), STR_38(CODE[3]), 
		 -> STR_29(CODE[3]), STR_20(CODE[7]), STR_18(CODE[8]), STR_16(CODE[7]), 
		 -> STR_14(CODE[9]), STR_12(CODE[6]), STR_10(CODE[7]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), cmdbuf(BANK1[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_168(CODE[2]), STR_167(CODE[9]), STR_165(CODE[10]), 
		 -> STR_162(CODE[4]), STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), 
		 -> STR_154(CODE[3]), STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), 
		 -> STR_147(CODE[8]), STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), 
		 -> STR_143(CODE[7]), STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), 
		 -> STR_138(CODE[11]), STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), 
		 -> STR_120(CODE[5]), STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), 
		 -> STR_81(CODE[5]), wrkbuf(BANK1[80]), STR_49(CODE[5]), STR_47(CODE[5]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_41(CODE[5]), STR_38(CODE[3]), 
		 -> STR_29(CODE[3]), STR_20(CODE[7]), STR_18(CODE[8]), STR_16(CODE[7]), 
		 -> STR_14(CODE[9]), STR_12(CODE[6]), STR_10(CODE[7]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), cmdbuf(BANK1[80]), 

    sp__strichr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    stristr@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_168(CODE[2]), STR_167(CODE[9]), STR_165(CODE[10]), STR_162(CODE[4]), 
		 -> STR_160(CODE[3]), STR_159(CODE[11]), STR_156(CODE[4]), STR_154(CODE[3]), 
		 -> STR_153(CODE[6]), STR_151(CODE[6]), STR_149(CODE[5]), STR_147(CODE[8]), 
		 -> STR_146(CODE[6]), STR_145(CODE[9]), STR_144(CODE[7]), STR_143(CODE[7]), 
		 -> STR_142(CODE[5]), STR_141(CODE[6]), STR_140(CODE[9]), STR_138(CODE[11]), 
		 -> STR_136(CODE[8]), STR_134(CODE[4]), STR_133(CODE[5]), STR_120(CODE[5]), 
		 -> STR_118(CODE[11]), STR_105(CODE[7]), STR_97(CODE[5]), STR_81(CODE[5]), 
		 -> STR_49(CODE[5]), STR_47(CODE[5]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_41(CODE[5]), STR_38(CODE[3]), STR_29(CODE[3]), STR_20(CODE[7]), 
		 -> STR_18(CODE[8]), STR_16(CODE[7]), STR_14(CODE[9]), STR_12(CODE[6]), 
		 -> STR_10(CODE[7]), STR_8(CODE[5]), STR_6(CODE[5]), 

    stristr@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_297(CODE[2]), STR_296(CODE[2]), printNodeFirmwareVersion@buf(BANK0[3]), STR_291(CODE[2]), 
		 -> STR_290(CODE[3]), STR_289(CODE[2]), printGUID@buf(BANK0[3]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 80
		 -> STR_307(CODE[3]), STR_306(CODE[23]), STR_305(CODE[10]), STR_304(CODE[10]), 
		 -> STR_303(CODE[12]), STR_302(CODE[8]), STR_301(CODE[7]), STR_300(CODE[3]), 
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), STR_299(CODE[10]), STR_298(CODE[3]), STR_295(CODE[20]), 
		 -> STR_294(CODE[3]), STR_293(CODE[14]), STR_292(CODE[3]), STR_288(CODE[8]), 
		 -> STR_287(CODE[17]), STR_286(CODE[3]), STR_285(CODE[67]), STR_284(CODE[3]), 
		 -> STR_283(CODE[27]), STR_282(CODE[3]), STR_281(CODE[67]), STR_280(CODE[52]), 
		 -> STR_279(CODE[39]), STR_278(CODE[62]), STR_277(CODE[55]), STR_276(CODE[49]), 
		 -> STR_275(CODE[67]), STR_274(CODE[47]), STR_273(CODE[47]), STR_272(CODE[34]), 
		 -> STR_271(CODE[71]), STR_270(CODE[20]), STR_269(CODE[78]), STR_268(CODE[24]), 
		 -> STR_267(CODE[77]), STR_266(CODE[74]), STR_265(CODE[76]), STR_264(CODE[47]), 
		 -> STR_263(CODE[40]), STR_262(CODE[39]), STR_261(CODE[33]), STR_260(CODE[23]), 
		 -> STR_259(CODE[56]), STR_258(CODE[24]), STR_257(CODE[44]), STR_256(CODE[50]), 
		 -> STR_255(CODE[31]), STR_254(CODE[50]), STR_253(CODE[51]), STR_252(CODE[46]), 
		 -> STR_251(CODE[44]), STR_250(CODE[27]), STR_249(CODE[39]), STR_248(CODE[39]), 
		 -> STR_247(CODE[57]), STR_246(CODE[55]), STR_245(CODE[3]), STR_242(CODE[24]), 
		 -> STR_241(CODE[58]), STR_240(CODE[54]), STR_239(CODE[59]), STR_238(CODE[3]), 
		 -> STR_235(CODE[25]), STR_234(CODE[52]), STR_233(CODE[3]), STR_230(CODE[24]), 
		 -> STR_229(CODE[3]), STR_226(CODE[24]), STR_225(CODE[3]), STR_222(CODE[24]), 
		 -> STR_221(CODE[3]), STR_218(CODE[23]), STR_217(CODE[3]), STR_214(CODE[21]), 
		 -> STR_213(CODE[3]), STR_210(CODE[22]), STR_209(CODE[3]), STR_206(CODE[17]), 
		 -> STR_205(CODE[3]), STR_202(CODE[18]), STR_201(CODE[4]), STR_200(CODE[11]), 
		 -> STR_199(CODE[2]), STR_196(CODE[7]), STR_193(CODE[7]), STR_190(CODE[9]), 
		 -> STR_187(CODE[7]), STR_184(CODE[8]), STR_181(CODE[12]), STR_178(CODE[7]), 
		 -> STR_177(CODE[2]), STR_176(CODE[2]), STR_175(CODE[6]), STR_174(CODE[8]), 
		 -> STR_173(CODE[8]), STR_172(CODE[20]), STR_171(CODE[27]), STR_170(CODE[6]), 
		 -> STR_169(CODE[33]), STR_166(CODE[34]), STR_164(CODE[46]), STR_163(CODE[22]), 
		 -> STR_161(CODE[21]), STR_158(CODE[41]), STR_157(CODE[23]), STR_155(CODE[22]), 
		 -> STR_152(CODE[26]), STR_150(CODE[32]), STR_148(CODE[28]), STR_139(CODE[6]), 
		 -> STR_137(CODE[40]), STR_135(CODE[44]), STR_132(CODE[6]), STR_131(CODE[39]), 
		 -> STR_129(CODE[36]), STR_127(CODE[37]), STR_125(CODE[40]), STR_123(CODE[37]), 
		 -> STR_122(CODE[50]), STR_119(CODE[6]), STR_116(CODE[41]), STR_114(CODE[38]), 
		 -> STR_112(CODE[39]), STR_110(CODE[42]), STR_108(CODE[39]), STR_107(CODE[66]), 
		 -> STR_104(CODE[6]), STR_103(CODE[27]), STR_102(CODE[3]), STR_99(CODE[20]), 
		 -> STR_98(CODE[52]), STR_94(CODE[8]), STR_93(CODE[36]), STR_90(CODE[8]), 
		 -> STR_89(CODE[38]), STR_88(CODE[24]), STR_86(CODE[33]), STR_84(CODE[24]), 
		 -> STR_82(CODE[52]), STR_80(CODE[54]), STR_79(CODE[6]), STR_78(CODE[3]), 
		 -> STR_73(CODE[25]), STR_70(CODE[17]), STR_69(CODE[3]), STR_68(CODE[4]), 
		 -> STR_67(CODE[3]), STR_64(CODE[4]), STR_59(CODE[15]), wrkbuf(BANK1[80]), 
		 -> STR_56(CODE[14]), STR_54(CODE[33]), STR_52(CODE[24]), STR_50(CODE[52]), 
		 -> STR_48(CODE[6]), STR_46(CODE[6]), STR_44(CODE[6]), STR_42(CODE[6]), 
		 -> STR_40(CODE[18]), STR_39(CODE[6]), STR_37(CODE[33]), STR_36(CODE[6]), 
		 -> STR_28(CODE[24]), STR_27(CODE[18]), STR_26(CODE[20]), STR_25(CODE[25]), 
		 -> STR_24(CODE[22]), STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[20]), 
		 -> STR_19(CODE[6]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
		 -> STR_11(CODE[6]), STR_9(CODE[6]), STR_7(CODE[31]), STR_5(CODE[29]), 
		 -> STR_4(CODE[55]), STR_3(CODE[35]), STR_2(CODE[58]), STR_1(CODE[37]), 

    sprintf$2263	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_309(CODE[17]), STR_308(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_244(CODE[3]), STR_243(CODE[7]), STR_237(CODE[3]), STR_236(CODE[7]), 
		 -> STR_232(CODE[4]), STR_231(CODE[8]), STR_228(CODE[4]), STR_227(CODE[8]), 
		 -> STR_224(CODE[4]), STR_223(CODE[8]), STR_220(CODE[4]), STR_219(CODE[8]), 
		 -> STR_216(CODE[4]), STR_215(CODE[7]), STR_212(CODE[4]), STR_211(CODE[7]), 
		 -> STR_208(CODE[4]), STR_207(CODE[7]), STR_204(CODE[4]), STR_203(CODE[7]), 
		 -> STR_198(CODE[3]), STR_197(CODE[7]), STR_195(CODE[3]), STR_194(CODE[7]), 
		 -> STR_192(CODE[3]), STR_191(CODE[7]), STR_189(CODE[3]), STR_188(CODE[7]), 
		 -> STR_186(CODE[3]), STR_185(CODE[7]), STR_183(CODE[4]), STR_182(CODE[8]), 
		 -> STR_180(CODE[3]), STR_179(CODE[7]), STR_101(CODE[3]), STR_100(CODE[7]), 
		 -> STR_96(CODE[4]), STR_95(CODE[8]), STR_92(CODE[4]), STR_91(CODE[8]), 
		 -> STR_77(CODE[3]), STR_76(CODE[7]), STR_75(CODE[3]), STR_74(CODE[7]), 
		 -> STR_72(CODE[6]), STR_71(CODE[10]), STR_66(CODE[3]), STR_65(CODE[7]), 
		 -> STR_63(CODE[3]), STR_62(CODE[7]), STR_61(CODE[3]), STR_60(CODE[7]), 
		 -> STR_58(CODE[6]), STR_57(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_sprintf	int  size(1) Largest target is 4
		 -> ECANSendMessage@dataLen(BANK0[1]), getVSCPFrame@id(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2243$_cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    hexStringToBytes@buf	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    hexStringToBytes@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    hexStringToBytes@inhex	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    crc8@crc	PTR unsigned char  size(2) Largest target is 1
		 -> calcCRC@crc(BANK0[1]), sendVSCPModeCapabilities@crc(BANK0[1]), receiveSendEventVSCP@crc(COMRAM[1]), receiveSendMultiEventCANAL@crc(BANK0[1]), 
		 -> receiveSendEventCANAL@crc(BANK0[1]), sendVSCPDriverCommandReply@crc(BANK0[1]), sendVSCPDriverNack@crc(BANK0[1]), sendVSCPDriverAck@crc(BANK0[1]), 
		 -> sendVSCPDriverErrorFrame@crc(BANK0[1]), NULL(NULL[0]), 

    fifo_getFree@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_getFree@f	PTR struct . size(1) Largest target is 9
		 -> canInputFifo(BANK0[8]), serialInputFifo(BANK0[8]), 

    fifo_write@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_write@f	PTR struct . size(1) Largest target is 9
		 -> canInputFifo(BANK0[8]), serialInputFifo(BANK0[8]), 

    fifo_write@buf	PTR const void  size(2) Largest target is 8
		 -> dlc(COMRAM[1]), data(BANK2[8]), id(COMRAM[4]), Interrupt@c(COMRAM[1]), 

    fifo_write@p	PTR const unsigned char  size(2) Largest target is 8
		 -> dlc(COMRAM[1]), data(BANK2[8]), id(COMRAM[4]), Interrupt@c(COMRAM[1]), 

    fifo_read@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_read@f	PTR struct . size(1) Largest target is 9
		 -> canInputFifo(BANK0[8]), serialInputFifo(BANK0[8]), 

    fifo_read@buf	PTR const void  size(2) Largest target is 8
		 -> getVSCPFrame@id(BANK0[4]), receiveSendEventSLCAN@dlc(BANK0[1]), receiveSendEventSLCAN@id(BANK0[4]), receiveSendMultiEventCANAL@data(BANK0[8]), 
		 -> receiveSendMultiEventCANAL@dlc(BANK0[1]), receiveSendMultiEventCANAL@id(BANK0[4]), receiveSendEventCANAL@data(BANK0[8]), receiveSendEventCANAL@dlc(BANK0[1]), 
		 -> receiveSendEventCANAL@id(BANK0[4]), doModeSLCAN@c(BANK0[1]), doModeVscp@c(BANK0[1]), vscpData(BANK1[8]), 
		 -> vscpSize(BANK1[1]), doModeVerbose@c(BANK2[1]), main@c(BANK0[1]), 

    fifo_read@p	PTR unsigned char  size(2) Largest target is 8
		 -> getVSCPFrame@id(BANK0[4]), receiveSendEventSLCAN@dlc(BANK0[1]), receiveSendEventSLCAN@id(BANK0[4]), receiveSendMultiEventCANAL@data(BANK0[8]), 
		 -> receiveSendMultiEventCANAL@dlc(BANK0[1]), receiveSendMultiEventCANAL@id(BANK0[4]), receiveSendEventCANAL@data(BANK0[8]), receiveSendEventCANAL@dlc(BANK0[1]), 
		 -> receiveSendEventCANAL@id(BANK0[4]), doModeSLCAN@c(BANK0[1]), doModeVscp@c(BANK0[1]), vscpData(BANK1[8]), 
		 -> vscpSize(BANK1[1]), doModeVerbose@c(BANK2[1]), main@c(BANK0[1]), 

    fifo_init@buf	PTR const void  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_init@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    fifo_init@f	PTR struct . size(1) Largest target is 9
		 -> canInputFifo(BANK0[8]), serialInputFifo(BANK0[8]), 

    _ECANPointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(1) Largest target is 4
		 -> id(COMRAM[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(1) Largest target is 4
		 -> id(COMRAM[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), RXM1SIDH(ABS[1]), RXM0SIDH(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(1) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data(BANK2[8]), 

    ECANReceiveMessage@id	PTR unsigned long  size(1) Largest target is 4
		 -> id(COMRAM[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(1) Largest target is 1
		 -> dlc(COMRAM[1]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    sp___ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E16333 size(1) Largest target is 1
		 -> flags(COMRAM[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    getCANFrame@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> receiveSendMultiEventCANAL@data(BANK0[8]), receiveSendEventCANAL@data(BANK0[8]), vscpData(BANK1[8]), 

    getCANFrame@pdlc	PTR unsigned char  size(2) Largest target is 1
		 -> receiveSendEventSLCAN@dlc(BANK0[1]), receiveSendMultiEventCANAL@dlc(BANK0[1]), receiveSendEventCANAL@dlc(BANK0[1]), vscpSize(BANK1[1]), 

    getCANFrame@pid	PTR unsigned long  size(1) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), receiveSendEventSLCAN@id(BANK0[4]), receiveSendMultiEventCANAL@id(BANK0[4]), receiveSendEventCANAL@id(BANK0[4]), 

    sendCANFrame@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    getVSCPFrame@pPriority	PTR unsigned char  size(2) Largest target is 1
		 -> vscpPriority(BANK1[1]), 

    getVSCPFrame@pvscpclass	PTR unsigned short  size(2) Largest target is 2
		 -> vscpClass(BANK1[2]), 

    getVSCPFrame@pvscptype	PTR unsigned char  size(2) Largest target is 1
		 -> vscpType(BANK1[1]), 

    getVSCPFrame@pNodeId	PTR unsigned char  size(2) Largest target is 1
		 -> vscpNodeId(BANK1[1]), 

    getVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 8
		 -> vscpData(BANK1[8]), 

    getVSCPFrame@pSize	PTR unsigned char  size(2) Largest target is 1
		 -> vscpSize(BANK1[1]), 

    sendVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 8
		 -> vscpData(BANK1[8]), 

    printMDF@p	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    printErrors$1657	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_244(CODE[3]), STR_243(CODE[7]), 

    printErrors$1648	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_237(CODE[3]), STR_236(CODE[7]), 

    printErrors$1641	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_232(CODE[4]), STR_231(CODE[8]), 

    printErrors$1635	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_228(CODE[4]), STR_227(CODE[8]), 

    printErrors$1629	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_224(CODE[4]), STR_223(CODE[8]), 

    printErrors$1623	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_220(CODE[4]), STR_219(CODE[8]), 

    printStatistics$1616	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_216(CODE[4]), STR_215(CODE[7]), 

    printStatistics$1610	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_212(CODE[4]), STR_211(CODE[7]), 

    printStatistics$1604	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_208(CODE[4]), STR_207(CODE[7]), 

    printStatistics$1598	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_204(CODE[4]), STR_203(CODE[7]), 

    calcCRC@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    writeRegisterExtended@value	PTR unsigned char  size(2) Largest target is 1
		 -> doModeVerbose@value_1346(BANK2[1]), 

    readRegisterExtended@value	PTR unsigned char  size(2) Largest target is 1
		 -> doModeVerbose@value_1370(BANK2[1]), doModeVerbose@value(BANK2[1]), 

    readRegister@value	PTR unsigned char  size(2) Largest target is 1
		 -> printNodeFirmwareVersion@value(BANK0[1]), printMDF@value(BANK0[1]), printGUID@value(BANK0[1]), findNodes@value(BANK1[1]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    receivePrintEventVerbose$1528	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_198(CODE[3]), STR_197(CODE[7]), 

    receivePrintEventVerbose$1523	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_195(CODE[3]), STR_194(CODE[7]), 

    receivePrintEventVerbose$1518	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_192(CODE[3]), STR_191(CODE[7]), 

    receivePrintEventVerbose$1513	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_189(CODE[3]), STR_188(CODE[7]), 

    receivePrintEventVerbose$1508	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_186(CODE[3]), STR_185(CODE[7]), 

    receivePrintEventVerbose$1503	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_183(CODE[4]), STR_182(CODE[8]), 

    receivePrintEventVerbose$1498	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_180(CODE[3]), STR_179(CODE[7]), 

    sendEscapedUartData@pcrc	PTR unsigned char  size(2) Largest target is 1
		 -> sendVSCPModeCapabilities@crc(BANK0[1]), receiveSendEventVSCP@crc(COMRAM[1]), receiveSendMultiEventCANAL@crc(BANK0[1]), receiveSendEventCANAL@crc(BANK0[1]), 
		 -> sendVSCPDriverCommandReply@crc(BANK0[1]), sendVSCPDriverNack@crc(BANK0[1]), sendVSCPDriverAck@crc(BANK0[1]), sendVSCPDriverErrorFrame@crc(BANK0[1]), 
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(BANK1[8]), 

    doModeVerbose@p_1410	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose@p_1387	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose$1376	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_101(CODE[3]), STR_100(CODE[7]), 

    doModeVerbose$1367	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_96(CODE[4]), STR_95(CODE[8]), 

    doModeVerbose$1361	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_92(CODE[4]), STR_91(CODE[8]), 

    doModeVerbose@preg_1352	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    doModeVerbose@p_1348	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose$1338	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_77(CODE[3]), STR_76(CODE[7]), 

    doModeVerbose$1334	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_75(CODE[3]), STR_74(CODE[7]), 

    doModeVerbose$1329	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_72(CODE[6]), STR_71(CODE[10]), 

    doModeVerbose$1321	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_66(CODE[3]), STR_65(CODE[7]), 

    doModeVerbose$1316	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_63(CODE[3]), STR_62(CODE[7]), 

    doModeVerbose$1312	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_61(CODE[3]), STR_60(CODE[7]), 

    doModeVerbose$1307	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_58(CODE[6]), STR_57(CODE[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    doModeVerbose@preg	PTR unsigned char  size(2) Largest target is 80
		 -> STR_130(CODE[2]), STR_128(CODE[2]), STR_126(CODE[2]), STR_124(CODE[2]), 
		 -> STR_121(CODE[2]), STR_117(CODE[2]), STR_115(CODE[2]), STR_113(CODE[2]), 
		 -> STR_111(CODE[2]), STR_109(CODE[2]), STR_106(CODE[2]), STR_87(CODE[2]), 
		 -> STR_85(CODE[2]), STR_83(CODE[2]), STR_55(CODE[2]), STR_53(CODE[2]), 
		 -> STR_51(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), NULL(NULL[0]), STR_30(CODE[2]), 
		 -> cmdbuf(BANK1[80]), 

    doModeVerbose@p_1295	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(BANK1[8]), cmdbuf(BANK1[80]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose@p	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    sp__stristr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    canInputFifo.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    S27$buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 

    serialInputFifo.buf	PTR unsigned char  size(2) Largest target is 494
		 -> can_inputBuffer(BIGRAM[494]), serial_inputBuffer(BANK2[128]), 


Critical Paths under _main in COMRAM

    _doModeSLCAN->_hexStringToBytes
    _hexStringToBytes->_strlen
    _receiveSendEventSLCAN->_getCANFrame
    _receiveSendEventSLCAN->_itoa
    _ultoa->___llmod
    _sendVSCPDriverErrorFrame->_crc8
    _sendVSCPDriverCommandReply->_crc8
    _sendVSCPModeCapabilities->_crc8
    _sendVSCPDriverAck->_crc8
    _sendVSCPDriverNack->_crc8
    _calcCRC->_crc8
    _receiveSendEventCANAL->_crc8
    _receiveSendEventCANAL->_getCANFrame
    _receiveSendMultiEventCANAL->_crc8
    _receiveSendMultiEventCANAL->_getCANFrame
    _sendEscapedUartData->_crc8
    _crc8->_init_crc8
    _doModeVerbose->_setFilter
    _doModeVerbose->__CANIDToRegs
    _printBinary->_WriteUSART
    _findNodes->_itoa
    _printGUID->_itoa
    _printNodeFirmwareVersion->_itoa
    _ECANSendMessage->__CANIDToRegs
    _printHelp->_putsUSART
    _atoi->___wmul
    _strtok->_strspn
    _strtok->_strcspn
    _strcspn->_strchr
    _strspn->_strchr
    _stristr->_strnicmp
    _strichr->_toupper
    _strnicmp->_strlen
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_fifo_read
    _sprintf->___llmod
    ___wmul->_ReadTimer3
    ___llmod->___lldiv
    _printFirmwareVersion->_itoa
    _utoa->___lwdiv
    _init_app_eeprom->_Write_b_eep
    _printMode->_putsUSART
    _putsUSART->_WriteUSART
    _ECANInitialize->_ECANSetOperationMode
    _init_app_ram->_setFilter
    _init_app_ram->__CANIDToRegs
    __CANIDToRegs->_Read_b_eep
    _setFilter->_Write_b_eep

Critical Paths under _Interrupt in COMRAM

    _Interrupt->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID

Critical Paths under _main in BANK0

    _doModeSLCAN->_sendCANFrame
    _receiveSendEventSLCAN->_ultoa
    _ultoa->___llmod
    _doModeVscp->_receiveVSCPModeCanalMsg
    _sendVSCPDriverErrorFrame->_sendEscapedUartData
    _sendVSCPDriverCommandReply->_sendEscapedUartData
    _sendVSCPModeCapabilities->_sendEscapedUartData
    _receiveVSCPModeCanalMsg->_sendCANFrame
    _sendVSCPDriverAck->_sendEscapedUartData
    _sendVSCPDriverNack->_sendEscapedUartData
    _calcCRC->_crc8
    _receiveSendEventCANAL->_getCANFrame
    _receiveSendMultiEventCANAL->_getCANFrame
    _sendEscapedUartData->_crc8
    _doModeVerbose->_printNodeFirmwareVersion
    _doModeVerbose->_printGUID
    _writeRegisterExtended->_sendVSCPFrame
    _readRegisterExtended->_sendVSCPFrame
    _findNodes->_printNodeFirmwareVersion
    _findNodes->_printGUID
    _printMDF->_readRegister
    _printGUID->_readRegister
    _printNodeFirmwareVersion->_readRegister
    _readRegister->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _ECANSendMessage->__CANIDToRegs
    _printErrors->_sprintf
    _printStatistics->_sprintf
    _atoi->___wmul
    _strtok->_strspn
    _strtok->_strcspn
    _stristr->_strnicmp
    _receivePrintEventVerbose->_sprintf
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_fifo_read
    _sprintf->___llmod
    ___llmod->___lldiv
    _printFirmwareVersion->_itoa
    _itoa->_utoa
    _vscp_restoreDefaults->_init_app_ram
    _init->_init_app_ram
    _init_app_ram->_setFilter

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doModeVerbose
    _doModeVerbose->_findNodes

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_doModeVerbose

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5  164928
                                             95 BANK0      2     2      0
                                             26 BANK1      5     0      5
                       _fifo_getFree
                          _fifo_init
                          _init_crc8
                         _Read_b_eep
               _vscp_restoreDefaults
                               _init
                          _putsUSART
               _printFirmwareVersion
                          _printMode
                          _fifo_read
               _ECANSetOperationMode
                      _doModeVerbose
                         _doModeVscp
                        _doModeSLCAN
                     _doModeVscpNode
 ---------------------------------------------------------------------------------
 (1) _doModeVscpNode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doModeSLCAN                                         14    14      0   10654
                                             47 BANK0     14    14      0
                          _putsUSART
                          _fifo_read
               _ECANSetOperationMode
                           _Busy_eep
                        _Write_b_eep
                             _memset
              _receiveSendEventSLCAN
                             _strlen
                   _hexStringToBytes
                             _memcpy
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _hexStringToBytes                                    14     9      5    1050
                                             34 COMRAM     5     0      5
                                              0 BANK0      9     9      0
                             _strlen
                     _nibbleFromChar
 ---------------------------------------------------------------------------------
 (3) _nibbleFromChar                                       1     1      0     378
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _receiveSendEventSLCAN                               10    10      0    4722
                                             26 BANK0     10    10      0
                          _putsUSART
                         _WriteUSART
                             _strlen
                        _getCANFrame
                              _ultoa
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _ultoa                                               13     5      8    1274
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (1) _doModeVscp                                           4     4      0   24302
                                             80 BANK0      4     4      0
                          _fifo_read
               _ECANSetOperationMode
                           _Busy_eep
                        _Write_b_eep
         _receiveSendMultiEventCANAL
              _receiveSendEventCANAL
                            _calcCRC
                 _sendVSCPDriverNack
                  _sendVSCPDriverAck
            _receiveVSCPModeCanalMsg
       _receiveVSCPModeMultiCanalMsg
           _sendVSCPModeCapabilities
         _sendVSCPDriverCommandReply
           _sendVSCPDriverErrorFrame
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverErrorFrame                             2     2      0    1926
                                              6 BANK0      2     2      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverCommandReply                           3     2      1    2010
                                              6 BANK0      3     2      1
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPModeCapabilities                             1     1      0    1926
                                              6 BANK0      1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _receiveVSCPModeMultiCanalMsg                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _receiveVSCPModeCanalMsg                             33    33      0    3302
                                             47 BANK0     33    33      0
                             _memcpy
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6     242
                                             30 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverAck                                    1     1      0    1842
                                              6 BANK0      1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverNack                                   1     1      0    1842
                                              6 BANK0      1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _calcCRC                                              5     2      3     882
                                              3 BANK0      5     2      3
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _receiveSendEventCANAL                               23    23      0    4482
                                              9 BANK0     23    23      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
                         _ReadTimer3
                        _getCANFrame
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _receiveSendMultiEventCANAL                          25    25      0    4950
                                              9 BANK0     25    25      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
                         _ReadTimer3
                        _getCANFrame
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _sendEscapedUartData                                  3     1      2     930
                                              3 BANK0      3     1      2
                         _WriteUSART
                               _crc8
 ---------------------------------------------------------------------------------
 (3) _crc8                                                 5     2      3     594
                                             37 COMRAM     2     2      0
                                              0 BANK0      3     0      3
                          _init_crc8
 ---------------------------------------------------------------------------------
 (4) _init_crc8                                            7     7      0     468
                                             30 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _doModeVerbose                                       96    96      0  115056
                                              6 BANK1     20    20      0
                                              0 BANK2     76    76      0
               _vscp_restoreDefaults
                          _putsUSART
               _printFirmwareVersion
                          _fifo_read
               _ECANSetOperationMode
                          _OpenUSART
                          _setFilter
                       __CANIDToRegs
                           _Busy_eep
                        _Write_b_eep
           _receivePrintEventVerbose
                         _WriteUSART
                            _stristr
                             _strtok
                               _atoi
                             _memset
                      _sendVSCPFrame
                    _printStatistics
                        _printErrors
                          _printHelp
                          _findNodes
                             _strcpy
                             _strchr
               _readRegisterExtended
                            _sprintf
                        _printBinary
              _writeRegisterExtended
           _printNodeFirmwareVersion
                          _printGUID
                           _printMDF
 ---------------------------------------------------------------------------------
 (2) _writeRegisterExtended                               12     5      7    4962
                                             79 BANK0     12     5      7
                   _checkCANBusState
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _printBinary                                          5     5      0     222
                                             31 COMRAM     5     5      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _readRegisterExtended                                12     5      7    4878
                                             79 BANK0     12     5      7
                   _checkCANBusState
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     152
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _findNodes                                            6     6      0   27166
                                              0 BANK1      6     6      0
                          _putsUSART
                         _WriteUSART
           _printNodeFirmwareVersion
                          _printGUID
                           _printMDF
                               _itoa
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _printMDF                                             5     5      0    5402
                                             89 BANK0      5     5      0
                          _putsUSART
                             _memset
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _printGUID                                            6     6      0    7538
                                             89 BANK0      6     6      0
                          _putsUSART
                             _memset
                             _strlen
                               _itoa
                       _readRegister
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _printNodeFirmwareVersion                             6     6      0    7268
                                             89 BANK0      6     6      0
                          _putsUSART
                             _memset
                               _itoa
                       _readRegister
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     200
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _readRegister                                        10     5      5    4710
                                             79 BANK0     10     5      5
                   _checkCANBusState
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (4) _sendVSCPFrame                                       32    24      8    3078
                                             47 BANK0     32    24      8
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _sendCANFrame                                         7     0      7    2778
                                             40 BANK0      7     0      7
                    _ECANSendMessage
 ---------------------------------------------------------------------------------
 (3) _ECANSendMessage                                     37    29      8    2652
                                              3 BANK0     37    29      8
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (4) _checkCANBusState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     188
                                             30 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _printHelp                                            0     0      0     126
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _printErrors                                         12    12      0    7584
                                             43 BANK0     12    12      0
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _printStatistics                                      8     8      0    7476
                                             43 BANK0      8     8      0
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     930
                                              2 BANK0      7     5      2
                            _isdigit
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _strtok                                               4     0      4    1098
                                              4 BANK0      4     0      4
                             _strspn
                            _strcspn
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              6     2      4     354
                                             36 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strspn                                               6     2      4     354
                                             36 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4     168
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _stristr                                              4     0      4    1236
                                              6 BANK0      4     0      4
                             _strlen
                           _strnicmp
                            _strichr
 ---------------------------------------------------------------------------------
 (3) _strichr                                              4     0      4     354
                                             31 COMRAM     4     0      4
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _strnicmp                                             9     3      6     360
                                             34 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                             _strlen (ARG)
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              1     1      0     132
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     180
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _receivePrintEventVerbose                            24    24      0    9630
                                             43 BANK0     24    24      0
                          _putsUSART
                            _sprintf
                       _getVSCPFrame
                         _ReadTimer3
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ReadTimer3                                           4     2      2     102
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _getVSCPFrame                                        20     8     12    1380
                                              9 BANK0     20     8     12
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _getCANFrame                                          5     1      4     906
                                             38 COMRAM     1     1      0
                                              5 BANK0      4     0      4
                          _fifo_read
 ---------------------------------------------------------------------------------
 (4) _fifo_read                                           13     9      4     612
                                             30 COMRAM     8     4      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             30    22      8    7134
                                             13 BANK0     30    22      8
                         _ReadTimer3 (ARG)
                            _isdigit
                            ___lldiv
                            ___llmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     324
                                             34 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                         _ReadTimer3 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     324
                                             38 COMRAM     1     1      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     342
                                             30 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0     138
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _printFirmwareVersion                                20    20      0    2068
                                             15 BANK0     20    20      0
                          _putsUSART
                         _WriteUSART
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1600
                                             37 COMRAM     2     2      0
                                              9 BANK0      6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1280
                                              0 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     324
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     342
                                             30 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _vscp_restoreDefaults                                 0     0      0    5040
                       _init_app_ram
                    _init_app_eeprom
 ---------------------------------------------------------------------------------
 (3) _init_app_eeprom                                      1     1      0     330
                                             34 COMRAM     1     1      0
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _printMode                                            0     0      0     126
                          _putsUSART
 ---------------------------------------------------------------------------------
 (3) _putsUSART                                            4     2      2     126
                                             31 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      42
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    5708
                        _WriteTimer0
                       _init_app_ram
                          _OpenUSART
                         _OpenTimer0
                         _OpenTimer3
                        _WriteTimer3
                     _ECANInitialize
 ---------------------------------------------------------------------------------
 (2) _ECANInitialize                                       0     0      0      84
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (2) _WriteTimer3                                          4     2      2     138
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer3                                           1     1      0     126
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      84
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     420
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _init_app_ram                                        26    26      0    4710
                                             11 BANK0     26    26      0
                         _Read_b_eep
               _ECANSetOperationMode
                          _setFilter
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (4) __CANIDToRegs                                        10     3      7     966
                                             32 COMRAM     7     0      7
                                              0 BANK0      3     3      0
                         _Read_b_eep (ARG)
 ---------------------------------------------------------------------------------
 (2) _setFilter                                           16    11      5    3312
                                             34 COMRAM     5     0      5
                                              0 BANK0     11    11      0
                         _Read_b_eep (ARG)
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (2) _Write_b_eep                                          4     1      3     138
                                             30 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECANSetOperationMode                                 1     1      0      84
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Read_b_eep                                           2     0      2      42
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     146
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _fifo_init                                            5     1      4     252
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _fifo_getFree                                        11     9      2     294
                                             30 COMRAM     3     1      2
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Interrupt                                           11    11      0    2363
                                             19 COMRAM    11    11      0
                          _ReadUSART
                         _fifo_write
                 _ECANReceiveMessage
                     i1_fifo_getFree
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i1_WriteTimer0                                       4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i1_fifo_getFree                                     11     9      2     511
                                              0 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (10) _ECANReceiveMessage                                 12     8      4    1180
                                              7 COMRAM    12     8      4
                   __ECANPointBuffer
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (11) __RegsToCANID                                        7     3      4     489
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) __ECANPointBuffer                                    6     3      3      52
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (10) _fifo_write                                         17    11      6     378
                                              0 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fifo_getFree
   _fifo_init
   _init_crc8
   _Read_b_eep
   _vscp_restoreDefaults
     _init_app_ram
       _Read_b_eep
       _ECANSetOperationMode
       _setFilter
         _Read_b_eep (ARG)
         _Busy_eep (ARG)
         _Write_b_eep (ARG)
       __CANIDToRegs
         _Read_b_eep (ARG)
     _init_app_eeprom
       _Busy_eep
       _Write_b_eep
   _init
     _WriteTimer0
     _init_app_ram
       _Read_b_eep
       _ECANSetOperationMode
       _setFilter
         _Read_b_eep (ARG)
         _Busy_eep (ARG)
         _Write_b_eep (ARG)
       __CANIDToRegs
         _Read_b_eep (ARG)
     _OpenUSART
     _OpenTimer0
     _OpenTimer3
     _WriteTimer3
     _ECANInitialize
       _ECANSetOperationMode
   _putsUSART
     _WriteUSART
   _printFirmwareVersion
     _putsUSART
       _WriteUSART
     _WriteUSART
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _printMode
     _putsUSART
       _WriteUSART
   _fifo_read
   _ECANSetOperationMode
   _doModeVerbose
     _vscp_restoreDefaults
       _init_app_ram
         _Read_b_eep
         _ECANSetOperationMode
         _setFilter
           _Read_b_eep (ARG)
           _Busy_eep (ARG)
           _Write_b_eep (ARG)
         __CANIDToRegs
           _Read_b_eep (ARG)
       _init_app_eeprom
         _Busy_eep
         _Write_b_eep
     _putsUSART
       _WriteUSART
     _printFirmwareVersion
       _putsUSART
         _WriteUSART
       _WriteUSART
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _fifo_read
     _ECANSetOperationMode
     _OpenUSART
     _setFilter
       _Read_b_eep (ARG)
       _Busy_eep (ARG)
       _Write_b_eep (ARG)
     __CANIDToRegs
       _Read_b_eep (ARG)
     _Busy_eep
     _Write_b_eep
     _receivePrintEventVerbose
       _putsUSART
         _WriteUSART
       _sprintf
         _ReadTimer3 (ARG)
         _isdigit (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
           _ReadTimer3 (ARG)
       _getVSCPFrame
         _getCANFrame
           _fifo_read
       _ReadTimer3
       ___wmul
         _ReadTimer3 (ARG)
     _WriteUSART
     _stristr
       _strlen
       _strnicmp
         _strlen (ARG)
         _toupper (ARG)
       _strichr
         _toupper
     _strtok
       _strspn
         _strchr
       _strcspn
         _strchr
     _atoi
       _isdigit
       ___wmul
         _ReadTimer3 (ARG)
     _memset
     _sendVSCPFrame
       _sendCANFrame
         _ECANSendMessage
           __CANIDToRegs
             _Read_b_eep (ARG)
     _printStatistics
       _putsUSART
         _WriteUSART
       _sprintf
         _ReadTimer3 (ARG)
         _isdigit (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
           _ReadTimer3 (ARG)
     _printErrors
       _putsUSART
         _WriteUSART
       _sprintf
         _ReadTimer3 (ARG)
         _isdigit (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
           _ReadTimer3 (ARG)
     _printHelp
       _putsUSART
         _WriteUSART
     _findNodes
       _putsUSART
         _WriteUSART
       _WriteUSART
       _printNodeFirmwareVersion
         _putsUSART
           _WriteUSART
         _memset
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _readRegister
           _checkCANBusState
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
                   _Read_b_eep (ARG)
           _getVSCPFrame
             _getCANFrame
               _fifo_read
         _strcat
       _printGUID
         _putsUSART
           _WriteUSART
         _memset
         _strlen
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _readRegister
           _checkCANBusState
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
                   _Read_b_eep (ARG)
           _getVSCPFrame
             _getCANFrame
               _fifo_read
         _strcat
       _printMDF
         _putsUSART
           _WriteUSART
         _memset
         _readRegister
           _checkCANBusState
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
                   _Read_b_eep (ARG)
           _getVSCPFrame
             _getCANFrame
               _fifo_read
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
     _strcpy
     _strchr
     _readRegisterExtended
       _checkCANBusState
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
               _Read_b_eep (ARG)
       _getVSCPFrame
         _getCANFrame
           _fifo_read
     _sprintf
       _ReadTimer3 (ARG)
       _isdigit (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
         _ReadTimer3 (ARG)
     _printBinary
       _WriteUSART
     _writeRegisterExtended
       _checkCANBusState
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
               _Read_b_eep (ARG)
       _getVSCPFrame
         _getCANFrame
           _fifo_read
     _printNodeFirmwareVersion
       _putsUSART
         _WriteUSART
       _memset
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
       _strcat
     _printGUID
       _putsUSART
         _WriteUSART
       _memset
       _strlen
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
       _strcat
     _printMDF
       _putsUSART
         _WriteUSART
       _memset
       _readRegister
         _checkCANBusState
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
                 _Read_b_eep (ARG)
         _getVSCPFrame
           _getCANFrame
             _fifo_read
   _doModeVscp
     _fifo_read
     _ECANSetOperationMode
     _Busy_eep
     _Write_b_eep
     _receiveSendMultiEventCANAL
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
       _ReadTimer3
       _getCANFrame
         _fifo_read
       ___wmul
         _ReadTimer3 (ARG)
     _receiveSendEventCANAL
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
       _ReadTimer3
       _getCANFrame
         _fifo_read
       ___wmul
         _ReadTimer3 (ARG)
     _calcCRC
       _crc8
         _init_crc8
     _sendVSCPDriverNack
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverAck
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _receiveVSCPModeCanalMsg
       _memcpy
       _sendCANFrame
         _ECANSendMessage
           __CANIDToRegs
             _Read_b_eep (ARG)
     _receiveVSCPModeMultiCanalMsg
     _sendVSCPModeCapabilities
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverCommandReply
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverErrorFrame
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
   _doModeSLCAN
     _putsUSART
       _WriteUSART
     _fifo_read
     _ECANSetOperationMode
     _Busy_eep
     _Write_b_eep
     _memset
     _receiveSendEventSLCAN
       _putsUSART
         _WriteUSART
       _WriteUSART
       _strlen
       _getCANFrame
         _fifo_read
       _ultoa
         ___lldiv
         ___llmod
           ___lldiv (ARG)
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _strlen
     _hexStringToBytes
       _strlen
       _nibbleFromChar
     _memcpy
     _sendCANFrame
       _ECANSendMessage
         __CANIDToRegs
           _Read_b_eep (ARG)
   _doModeVscpNode

 _Interrupt (ROOT)
   _ReadUSART
   _fifo_write
   _ECANReceiveMessage
     __ECANPointBuffer
     __RegsToCANID
   i1_fifo_getFree
   i1_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0     1EE      16       32.5%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     4C      D4       8       82.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1F      D2       6       82.0%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     61      9F       4       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      41       1       68.4%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       E       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     386      15        0.0%
DATA                 0      0     582      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Oct 08 23:25:36 2015

        ??_receiveVSCPModeMultiCanalMsg 001F                   __end_of_doModeVerbose 6930  
                          printBinary@i 0023                             fifo_write@f 0011  
                           fifo_write@i 000D                             fifo_write@p 000B  
                        ??_fifo_getFree 0060                   __end_of_sendVSCPFrame 1B66  
            doModeVerbose@filter_nodeid 0296                                      PL2 6930  
                                    PL4 6944                                      PL6 6954  
                                    PL8 6962                                      _id 0039  
                                    bsr 000FE0                     ___wmul@multiplicand 0025  
                           __CFG_BORV$3 000000                  __end_of_doModeVscpNode 0886  
                                   PL10 401C                                     PL20 69C6  
                                   PL12 697C                                     PL30 5146  
                                   PL22 2A0C                                     PL14 5118  
                                   PL40 4088                                     PL32 69E2  
                                   PL24 5136                                     PL16 3BA2  
                                   PL50 28C2                                     PL42 40A6  
                                   PL34 27A8                                     PL26 177A  
                                   PL18 3926                                     PL60 1AA2  
                                   PL52 6A34                                     PL44 6A06  
                                   PL36 69F2                                     PL28 25D2  
                                   PL70 6A66                                     PL62 5186  
                                   PL54 516C                                     PL46 6A18  
                                   PL38 4068                                     PL80 180C  
                                   PL72 6A7E                                     PL64 1F30  
                                   PL56 3936                                     PL48 3DFC  
                                   PL90 28F6                                     PL82 28D0  
                                   PL74 1512                                     PL66 6A4E  
                                   PL58 19FE                                     PL92 21D6  
                                   PL84 6A94                                     PL76 18AC  
                                   PL68 27BC                                     PL94 27CE  
                                   PL86 51AA                                     PL78 519C  
                                   PL96 24C4                                     PL88 28E4  
                                   PL98 6AA8                 sendEscapedUartData@pcrc 0063  
                                   l505 0992                                     l507 099E  
                                   l523 5232                                     l630 5B5A  
                                   l622 5AD4                                     l606 5A12  
                                   l470 32B2                                     l462 3246  
                                   l519 5220                                     l471 32BE  
                                   l463 327E                                     l617 5AA8  
                                   l473 32EE                                     l474 32F8  
                                   l475 3310                                     l467 3298  
                                   l820 3D2C                                     l476 3312  
                                   l902 0FDC                                     l911 1024  
                                   l920 1C44                                     l593 5936  
                                   l586 692E                                     l914 1C30  
                                   l907 1000                                     l923 1C60  
                                   l932 1CCA                                     l597 5AFA  
                                   l941 1A10                                     l917 1C3A  
                                   l781 3DFA                                     l950 1A40  
                                   l926 1C82                                     l935 1CD4  
                                   l847 4A8E                                     l944 1A1A  
                                   l776 3BFC                                     l953 1A62  
                                   l929 1C92                                     l857 4784  
                                   l962 1A98                                     l794 3C84  
                                   l882 498C                                     l971 1976  
                                   l947 1A24                                     l980 19BE  
                                   l956 1A72                                     l974 1980  
                                   l983 19CE                                     l959 1A8E  
                                   l968 196C                                     l977 199C  
                                   l986 19EA                                     l899 0FD2  
                                   l995 2030                                     l989 19F4  
                                   l998 203A                            __CFG_CPB$OFF 000000  
                        getVSCPFrame@id 0079                           fifo_write@buf 0001  
                 ?_vscp_restoreDefaults 0001                    __size_of_WriteTimer0 0012  
                  __size_of_WriteTimer3 0012                                     _dlc 003D  
                                   _pos 0103                    __size_of_Write_b_eep 0034  
        __size_of_writeRegisterExtended 010A                                     wreg 000FE8  
         __end_of_writeRegisterExtended 26EA                                    PL100 3946  
                                  PL110 20F6                                    PL102 290A  
                                  PL120 0C98                                    PL112 6ABA  
                                  PL104 27E2                                    PL130 3734  
                                  PL122 2FE6                                    PL114 51D0  
                                  PL106 51BE                                    PL140 1F48  
                                  PL132 18BA                                    PL124 6AEA  
                                  PL116 6ACA                                    PL108 4A90  
                                  PL142 27F4                                    PL134 2A38  
                                  PL126 1CDE                                    PL118 6ADA  
                       ReadTimer3@timer 0021                                    PL144 51DA  
                                  PL136 181A                                    PL128 6AFA  
                                  PL146 3E0A                                    PL138 3528  
                                  PL148 3E12                            __CFG_LVP$OFF 000000  
                          __CFG_WDT$OFF 000000                                    l1001 2044  
                                  l1010 2092                                    l1004 2060  
                                  l1013 20AE                                    l1102 3782  
                                  l1022 20EC                                    l1007 2082  
                                  l1016 20C2                                    l1121 3910  
                                  l1201 2FDA                                    l1107 37BE  
                                  l1019 20E2                                    l2012 0EE4  
                                  l1124 391A                                    l1204 2FE4  
                                  l2013 0EE6                                    l2014 0EF0  
                                  l2015 0EF2                                    l1063 46C0  
                                  l1127 3924                                    l1071 3380  
                                  l1400 3A82                                    l2008 0ED0  
                                  l1064 46D2                                    l1056 4620  
                                  l1216 1F8E                                    l1208 22D4  
                                  l1401 3A94                                    l2017 0F0A  
                                  l2025 0E06                                    l1321 4374  
                                  l1225 231E                                    l1161 1B7E  
                                  l1402 3AA6                                    l1314 42F8  
                                  l1074 338A                                    l1170 1C1E  
                                  l1403 3AB8                                    l1307 426C  
                                  l1219 2028                                    l1243 2630  
                                  l1155 1B6A                                    l1404 3ACA  
                                  l1332 2AA4                                    l1228 23D4  
                                  l1068 3376                                    l1092 3526  
                                  l1164 1B9A                                    l1405 3ADC  
                                  l1262 0D9A                                    l1246 26E8  
                                  l1086 3512                                    l1158 1B74  
                                  l1182 2ECE                                    l1407 3BA0  
                                  l1415 1498                                    l1079 33C6  
                                  l1167 1C14                                    l1191 2F58  
                                  l1424 15B6                                    l1328 2B78  
                                  l1096 376E                                    l2233 25C8  
                                  l1329 2A70                                    l1089 351C  
                                  l1185 2F08                                    l1177 2E9C  
                                  l2234 25D0                                    l1266 0DA6  
                                  l1371 14D8                                    l1419 0AFC  
                                  l1099 3778                                    l1198 2FBA  
                                  l1391 39E0                                    l1703 115C  
                                  l1711 11BA                                    l1392 39F2  
                                  l1368 14BA                                    l1393 3A04  
                                  l1705 1164                                    l1394 3A16  
                                  l1378 1222                                    l1730 1682  
                                  l1395 3A28                                    l1731 16E8  
                                  l1396 3A3A                                    l2540 1308  
                                  l1901 0886                                    l1397 3A4C  
                                  l1389 39CE                                    l2509 1946  
                                  l1725 0C66                                    l1398 3A5E  
                                  l2550 1076                                    l1814 4D30  
                                  l1399 3A70                                    l2623 0DFC  
                                  l2608 21B2                                    l1649 27A6  
                                  l2633 0BE2                                    l1850 4EFA  
                                  l1842 4E92                                    l1762 4ABA  
                                  l2714 1150                                    l1851 4EFE  
                                  l1675 1F0E                                    l1595 2CE6  
                                  l1587 2C4A                                    l1853 4F1A  
                                  l1589 2C68                                    l1926 0A7C  
                                  l1942 0966                                    l1678 1F2E  
                                  l2726 164C                                    l1943 0968  
                                  l1848 4ED4                                    l2728 1640  
                                  l2753 0D6C                                    l2729 1644  
                                  l1778 4BFC                                    l2762 0C28  
                                  l2674 0F0C                                    l1795 4C0C  
                                  l1779 4BAE                                    l2676 0F66  
                                  l2772 0D26                                    l1869 4FA4  
                                  l1966 09C0                                    l1798 4C40  
                                  l1967 09C2                                    l1799 4C44  
                                  l2695 1392                                    l1968 09CA  
                                  l1969 09CC                                    l2698 138E  
                                  STR_1 754F                                    STR_2 6E75  
                                  STR_3 75E1                                    STR_4 6F8E  
                                  STR_5 772A                                    STR_6 7CC1  
                                  STR_7 76EC                                    STR_8 7CA8  
                                  STR_9 7C6B                                    _PIE1 000F9D  
                                  _PEIE 007F96                          sendCANFrame@id 0088  
                                  _RCIE 007CED                                    _RCIF 007CF5  
                                  _RCIP 007CFD                        ??_ECANInitialize 0020  
                                  _bDLE 0035                            __CFG_PWRT$ON 000000  
                                  ___IT 000101              __end_of_sendVSCPDriverNack 19FE  
                                  _bHex 0100            doModeVerbose@filter_priority 0294  
                                  _crc8 0AFE                                    _data 0280  
                                  _caps 003F                                    _atoi 24D8  
                                  _main 318C                                    _init 0F68  
                                  _mode 00EC                                    _itoa 0A8E  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                                    _utoa 18C8  
                   i1WriteTimer0@timer0 0001                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0336  
                          _sprintf$2263 007D                            _sprintf$2256 0079  
                          _sprintf$2257 007B            receiveSendMultiEventCANAL@id 007B  
             ECANReceiveMessage@dataLen 000A      __end_of_receiveSendMultiEventCANAL 3926  
            _receiveSendMultiEventCANAL 3742                         i1fifo_getFree@f 000B  
                    doModeVerbose@count 02B7                   getVSCPFrame@pPriority 006F  
                    doModeVerbose@value 02C4                    __end_of_getVSCPFrame 149A  
                      __RegsToCANID@val 0003                        __RegsToCANID@ptr 0001  
                  __size_of_getCANFrame 0090                ?_receiveVSCPModeCanalMsg 0001  
                       ?_doModeVscpNode 0001                                   _B0CON 000E20  
                                 _B1CON 000E30                                   _B2CON 000E40  
                                 _B3CON 000E50                                   l16001 5DC0  
                                 l16013 5E20                                   l15311 186A  
                                 l16111 603E                                   l16007 5DF8  
                                 _B4CON 000E60                                   l16105 6010  
                                 l16017 5E4A                                   l16211 6262  
                                 l16301 63E8                                   l16205 6236  
                                 l16133 608A                                   l16125 607A  
                                 l16029 5E84                                   l16061 5F56  
                                 l15421 1174                                   l17103 2738  
                                 l16311 642E                                   l16151 60F6  
                                 l16119 604E                                   l16039 5EBC  
                                 l15327 31DE                                   _B5CON 000E70  
                                 l18001 50CA                                   l16401 66A6  
                                 l16321 6470                                   l16233 62AC  
                                 l16225 629C                                   l16161 616A  
                                 l16057 5F2E                                   l15601 52A4  
                                 l15361 3292                                   l15531 11EE  
                                 l16411 66DA                                   l16219 6272  
                                 l16147 60C6                                   l16139 60B6  
                                 l16091 5FD6                                   l16083 5FC8  
                                 l15419 116E                                   l18005 50D8  
                                 l17221 443E                                   l18101 1E42  
                                 l16413 66E8                                   l16341 64F6  
                                 l16325 6490                                   l15373 32CA  
                                 l15365 32A4                                   l15535 1202  
                                 l15527 11DC                                   l17143 1D5C  
                                 l18015 5102                                   l15543 1E96  
                                 l17207 43E8                                   l16335 64D6  
                                 l16255 633C                                   l16247 62E6  
                                 l16239 62D6                                   l16191 61FC  
                                 l16183 61EC                                   l15711 55AE  
                                 l16503 692C                                   l15391 3328  
                                 l15359 3280                                   l15561 0924  
                                 l18009 50FA                                   l18017 510A  
                                 l17305 46D0                                   l18105 1E60  
                                 l18121 23FA                                   l16425 6748  
                                 l16353 653C                                   l16257 634A  
                                 l16097 6002                                   l15721 55FA  
                                 l15705 5580                                   l15641 53A6  
                                 l15633 5372                                   l15625 533E  
                                 l15617 5308                                   l15609 52D4  
                                 l18201 37EE                                   l16601 3C90  
                                 l15377 32D2                                   l17315 08FC  
                                 l15539 1216                                   l19011 0DD8  
                                 l15555 1F18                                   l17235 44E2  
                                 l17323 1354                                   l17403 3010  
                                 l18131 246C                                   l18035 0DB0  
                                 l18027 0D80                                   l16443 67EC  
                                 l16435 677A                                   l16347 6518  
                                 l16603 3C94                                   l15395 3334  
                                 l15387 331E                                   l17077 3AEE  
                                 l17157 1D7A                                   l15557 1F1C  
                                 l17229 44C6                                   l17325 137A  
                                 l17333 15C6                                   l17501 4212  
                                 l18133 2482                                   l16461 6808  
                                 l16453 67FC                                   l16445 67F0  
                                 l16437 6788                                   l16381 6604  
                                 l16373 65C4                                   l16197 6226  
                                 l15805 58E2                                   l15717 55DC  
                                 l15661 5448                                   l15581 5236  
                                 l16701 3DBE                                   l16621 3CB6  
                                 l16613 3CAA                                   l16605 3C9A  
                                 l15389 3322                                   ?_crc8 0060  
                                 l17079 3B34                                   l19007 0DCC  
                                 l19031 0BC6                                   l17271 45D4  
                                 l17247 4534                                   l17319 131C  
                                 l17343 1600                                   l17431 30DC  
                                 l17191 099A                                   l16455 6800  
                                 l16447 67F4                                   l16471 681E  
                                 l16359 6562                                   l15815 5904  
                                 l15807 58F6                                   l15751 572A  
                                 l15743 56E0                                   l15735 5692  
                                 l15727 5634                                   l15647 53E0  
                                 l15567 51EE                                   l16631 3CC8  
                                 l16527 3BC8                                   l19009 0DD4  
                                 l19041 10EC                                   l17353 24DA  
                                 l17417 3076                                   l18137 24A0  
                                 l18129 2464                                   l18161 174A  
                                 l16465 680C                                   l16449 67F8  
                                 l16473 6876                                   l16289 635E  
                                 l15905 5B6E                                   l15833 5988  
                                 l15825 593E                                   l15761 579E  
                                 l15745 56F0                                   l15729 563E  
                                 l15737 56A2                                   l15681 54B8  
                                 l15673 548C                                   l15665 5460  
                                 l15657 5428                                   l16713 3DEC  
                                 l16553 3C1E                                   l16529 3BCC  
                                 l19019 0DF2                                   l19035 0BD8  
                                 l19027 0BBA                                   l17259 4584  
                                 l19051 113C                                   l17371 258E  
                                 l17363 2534                                   l17355 24E0  
                                 l18155 1716                                   l17603 2B22  
                                 l16467 6810                                   l16459 6804  
                                 l16483 689C                                   l15683 54C8  
                                 l18243 387C                                   l16707 3DD8  
                                 l16715 3DF2                                   l16563 3C36  
                                 l19029 0BC2                                   l17285 4630  
                                 l19045 1124                                   l19061 0C18  
                                 l17365 254C                                   l17445 3142  
                                 l17541 4314                                   l17533 42E8  
                                 l17517 4288                                   l18093 1DDA  
                                 l18165 1758                                   l18077 26C6  
                                 l16389 6646                                   l16493 68F8  
                                 l15933 5C16                                   l15917 5BB8  
                                 l15925 5BF6                                   l15845 59D8  
                                 l15757 5764                                   l15693 5520  
                                 l15677 54A2                                   l15669 5476  
                                 l15589 524A                                   l18237 3870  
                                 l18333 34E8                                   l16573 3C54  
                                 l16549 3C18                                   l17295 46A4  
                                 l19055 0BF8                                   l17631 0F36  
                                 l17367 2554                                   l17383 09EA  
                                 l18159 1742                                   l17623 0A06  
                                 l18079 26E6                                   l16487 68C6  
                                 l15855 5A26                                   l15927 5BFA  
                                 l15791 586A                                   l15783 5832  
                                 l15935 5C26                                   l15767 57D8  
                                 l18263 38DE                                   l16719 3DF8  
                                 l16807 48FE                                   l16751 475A  
                                 l16921 0ED2                                   l16913 0EC4  
                                 l17801 4CFA                                   l17721 4B7C  
                                 l17705 4B0E                                   l17713 4B54  
                                 l17297 46A8                                   l18601 0B7C  
                                 l19049 1132                                   l17553 4364  
                                 l17529 42D8                                   l17473 4146  
                                 l17609 2B30                                   l17625 0A0E  
                                 l16497 690C                                   l15881 5ACE  
                                 l15777 581A                                   l18249 389A  
                                 l18337 3502                                   l18329 34DC  
                                 l18353 0A50                                   l16657 3D30  
                                 l16649 3D02                                   l16841 49A8  
                                 l16817 4928                                   l16761 478E  
                                 l16745 4736                                   l17299 46B4  
                                 l18603 0B80                                   l19059 0C14  
                                 l19075 0CF0                                   l19083 0D36  
                                 l17459 40E0                                   l17379 09DA  
                                 l18099 1E2C                                   l19155 6836  
                                 l15971 5D16                                   l15867 5A74  
                                 l15699 5552                                   l16499 6918  
                                 l18267 3900                                   l18259 38BA  
                                 l18427 2290                                   l16683 3D72  
                                 l16667 3D44                                   l16851 49CA  
                                 l16739 4712                                   l17741 4C06  
                                 l17733 4BB4                                   l18701 154E  
                                 l19069 0914                                   l19077 0CFA  
                                 l19085 0D40                                   l19157 6870  
                                 l15981 5D38                                   l15973 5D2A  
                                 l15965 5CAC                                   l15957 5C9E  
                                 l15949 5C66                                   l18189 37A6  
                                 l18293 33AE                                   l18349 0A30  
                                 l16677 3D5E                                   l16589 3C5E  
                                 l16861 49E8                                   l16837 4992  
                                 l16829 496C                                   l16773 47BE  
                                 l16757 477E                                   l17911 4F14  
                                 l17903 4ED8                                   l17815 4D3A  
                                 l17751 4C28                                   l17743 4C0A  
                                 l17487 41AC                                   l17567 2A5E  
                                 l15895 5B1A                                   l15799 5878  
                                 l18631 0CBA                                   l16695 3DA4  
                                 l16599 3C8A                                   l18623 16D4  
                                 l16783 47E8                                   l17841 4DAA  
                                 l17825 4D6E                                   l17761 4C50  
                                 l17745 4C10                                   l17737 4BE8  
                                 l17681 4AA2                                   l18705 1552  
                                 l17585 2ABC                                   l17673 23B2  
                                 l15993 5D72                                   l15985 5D64  
                                 l16689 3D8A                                   l18617 1690  
                                 l16873 4A6C                                   l17827 4D72  
                                 l17819 4D58                                   l17763 4C5C  
                                 l17739 4C02                                   l17691 4ACC  
                                 l18803 2006                                   l18811 0E64  
                                 l17675 23D2                                   l18571 2F62  
                                 l18563 2F1C                                   l16875 4A78  
                                 l16867 49FE                    __size_of_doModeSLCAN 03BC  
                                 l16893 3EA0                                   l17917 4F2A  
                                 l17933 4F5E                                   l17941 4F7A  
                                 l17853 4DDE                                   l17773 4C8A  
                                 l17757 4C4A                                   l17693 4AD0  
                                 l18717 1584                                   l18805 2026  
                                 l18813 0E68                                   l18637 0CD8  
                                 l18901 0C40                                   l16869 4A58  
                                 l17951 4F8C                                   l17927 4F4A  
                                 l17855 4DE2                                   l17839 4DA6  
                                 l17871 4E28                                   l17783 4CAC  
                                 l17791 4CBE                                   l17687 4AC4  
                                 l18647 0AFA                                   l18815 0E76  
                                 l18575 2F76                                   l16799 488A  
                                 l16879 4A8C                                   l17961 4FB4  
                                 l17945 4F84                                   l17777 4C90  
                                 l17769 4C74                                   l17793 4CEA  
                                 l17689 4AC8                                   l17697 4AD6  
                                 l18681 1432                                   l18833 2BE4  
                                 l18817 0E7E                                   l18771 0AAA  
                                 l17891 4E96                                   l17875 4E42  
                                 l17787 4CB8                                   l17779 4C9E  
                                 l18827 2BD2                                   l18739 2114  
                                 l17965 4FC6                                   l17885 4E72  
                                 l17869 4E16                                   l18861 2C6A  
                                 l18845 2C0E                                   l18749 2158  
                                 l18917 0C64                                   l18909 0C52  
                                 l18935 18D0                                   l17991 507A  
                                 l17983 5002                                   l17967 4FCC  
                                 l17879 4E60                                   l18855 2C4E  
                                 l18945 1908                                   l18929 0982  
                                 l17985 5058                                   l17977 4FEE  
                                 l17897 4EB0                                   l18881 2CD8  
                                 l18971 12C8                                   l17995 509E  
                                 l18699 154C                                   l18867 2C98  
                                 l18875 2CB6                                   l18981 12FA  
                                 l18973 12CC                                   l18885 2CDC  
                                 l18991 1042                                   l17999 50B8  
                                 l18887 2CDE                                   l18969 12BC  
                                 l18993 1046                                   l18997 1068  
                                 l18989 1036                                   ?_atoi 0062  
                                 ?_main 01CD                                   ?_init 0001  
                                 ?_itoa 0069                           i1_WriteTimer0 0894  
                                 _EEADR 000FA9                                   STR_10 7C49  
                                 STR_11 7C6B                                   STR_12 7C83  
                                 STR_20 7C34                                   STR_13 7C6B  
                                 STR_21 7A0E                                   STR_30 7CF5  
                                 STR_14 7BAF                                   STR_22 7A22  
                                 STR_15 7C6B                                   STR_31 7CF5  
                                 STR_23 7A5E                                   STR_32 7CF5  
                                 STR_16 7C3B                                   STR_40 7A83  
                                 STR_24 7950                                   STR_17 7C6B  
                                 STR_33 7CF5                                   STR_41 7CBC  
                                 STR_25 77E9                                   STR_42 7C6B  
                                 STR_34 7CF5                                   STR_18 7BF9  
                                 STR_26 79FA                                   STR_50 7031  
                                 STR_19 7C6B                                   STR_51 7B73  
                                 STR_35 7CF5                                   STR_43 7CD6  
                                 STR_27 7A71                                   STR_44 7C6B  
                                 STR_36 7C6B                                   STR_60 7C50  
                                 STR_28 787C                                   STR_52 7864  
                                 STR_53 7B73                                   STR_61 7CEE  
                                 STR_29 7CEB                                   STR_45 7CB7  
                                 STR_37 7669                                   STR_46 7C6B  
                                 STR_62 7C50                                   STR_38 7CE8  
                                 STR_70 7AEB                                   STR_54 76AB  
                                 STR_39 7C6B                                   STR_55 7B73  
                                 STR_71 7B6B                                   STR_63 7CEE  
                                 STR_47 7C94                                   STR_48 7C6B  
                                 STR_72 7C71                                   STR_64 7BDD  
                                 STR_56 7B19                                   STR_80 6FFB  
                                 STR_65 7C50                                   STR_81 7C9E  
                                 STR_49 7C99                                   STR_57 7B6B  
                                 STR_73 781B                                   STR_82 7031  
                                 STR_90 7B1F                                   STR_74 7C50  
                                 STR_66 7CEE                                   STR_58 7C71  
                                 STR_83 7B73                                   STR_75 7CEE  
                                 STR_67 7CE2                                   STR_91 7BD1  
                                 STR_59 7AFC                                   STR_84 7864  
                                 STR_76 7C50                                   STR_92 7CCE  
                                 STR_68 7CC6                                   STR_69 6FF8  
                                 STR_85 7B73                                   STR_77 7CEE  
                                 STR_93 75BD                                   STR_78 6FF8  
                                 STR_86 76AB                                   STR_94 7B1F  
                                 STR_79 7C6B                                   STR_95 7BD1  
                                 STR_87 7B73                                   STR_96 7CCE  
                                 STR_88 7894                                   STR_97 7CAD  
                                 STR_89 7504                                   STR_98 7031  
                                 STR_99 7A36            __end_of_printFirmwareVersion 1512  
                                 _BSEL0 000DF8                         __end_of___lldiv 131A  
                                 ?_utoa 0060                                   u20005 5F7A  
                       __end_of_calcCRC 0A5A                                   u21000 486A  
                                 _T0CON 000FD5                                   u20205 640A  
                                 u21005 4868                         __end_of___llmod 1088  
                                 u20405 68BE                                   u20085 6984  
                                 u20415 68E8                                   u20335 6668  
                                 u20095 618C                                   u20520 3C3C  
                                 u20185 6380                                   u20195 63C2  
                                 u20365 670A                                   u22070 0F28  
                                 u21335 3972                                   _LATC1 007C59  
                                 u21336 3978                                   _T3CON 000FB1  
                                 u21345 39A6                                   u21337 3986  
                                 u21346 39AC                                   u22090 0F5E  
                                 u21347 39BA                                   u20395 67AA  
                                 u21700 24F4                                   u20724 3D12  
                                 u21445 0A88                                   u22077 0F22  
                                 u20725 3D10                                   u21446 0A8A  
                                 u21375 2712                                   u21720 250C  
                                 u21385 2722                                   u22097 0F58  
                                 u21395 273E                                   u21707 24EE  
                                 u21740 252A                                   u20684 3CD6  
                                 u20685 3CD4                                   u21727 2506  
                                 u21760 2548                                   u21747 2524  
                                 u21835 1AEC                                   u21780 2578  
                                 u24180 0EA6                                   u20980 4856  
                                 u21790 25A2                                   u20990 4860  
                                 u21767 2542                                   u22824 0D90  
                                 u22825 0D8C                                   u20985 4854  
                                 u21787 2572                                   u24187 0E9C  
                                 u23475 2226                                   u20995 485E  
                                 u21797 259C                                   u19110 0E26  
                                 u19120 0E52                                   u23850 0B9C  
                                 u19117 0E20                                   u24637 31EE  
                                 u19127 0E4C                                   u19215 1F04  
                                 u23857 0B96                         __end_of___lwdiv 0E06  
                                 u19325 5280                                   u23990 1484  
                                 u19335 52BA                                   _ERRIE 007D1D  
                                 _ERRIF 007D25                                   u19345 52EC  
                                 u23995 147A                                   u19355 5322  
                                 u19605 5714                                   u19365 5358  
                                 u19615 574E                                   u19375 538C  
                                 u19625 5788                                   u19385 53CA  
                                 u19635 57C2                                   u19395 5404  
                                 u19645 57FC                                   u18935 1848  
                                 u19495 54EC                            _vscpPriority 01B0  
                                 u19585 56C6                                   i1l420 0184  
                                 i1l415 008C                                   i1l417 0186  
                       __end_of___lwmod 0BEC                                   i1l434 01B8  
                                 i1l426 0184                                   u19875 5C4A  
                                 i1l444 0230                                   i1l436 01CE  
                                 i1l429 0174                                   u19965 5E6E  
                                 i1l454 0318                         sendCANFrame@dlc 008C  
                                 _MSEL0 000DF0                                   _MSEL1 000DF1  
                                 _MSEL2 000DF2                                   _RCREG 000FAE  
                                 _IRXIF 007D27                                   _RCSTA 000FAB  
                      printBinary@value 0022                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR3L 000FB2                                   _SPBRG 000FAF  
              writeRegisterExtended@reg 00B1                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                          __CFG_EBTR0$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                                   _bOpen 00EA  
               readRegisterExtended@reg 00B1                           __CFG_WRTD$OFF 000000  
                        Read_b_eep@badd 001F                          __CFG_EBTRB$OFF 000000  
                      _hexStringToBytes 164E                                   crc8@m 0062  
                                 _flags 003E                         __end_of_dpowers 6B62  
                Write_b_eep@GIE_BIT_VAL 0022                        _checkCANBusState 098A  
                       __end_of_isdigit 098A                                   _timer 00DD  
                                 atoi@a 0067                                   atoi@s 0062  
                                 main@c 00C0                                   _ultoa 2104  
                            Interrupt@c 001D              ??_printNodeFirmwareVersion 0028  
                      _printErrors$1623 008B                        _printErrors$1641 0091  
                                 tablat 000FF5                        _printErrors$1635 008F  
                      _printErrors$1629 008D                        _printErrors$1648 0093  
                      _printErrors$1657 0095                 ??_receiveSendEventCANAL 0069  
           __end_of_sendEscapedUartData 1026                                   plusw2 000FDB  
                                 utoa@c 0068                                   utoa@v 0066  
                                 status 000FD8                         __end_of_sprintf 5118  
               ??_receiveSendEventSLCAN 007A                         __end_of_strichr 0C2A  
                       __end_of_strcspn 0D76                         __end_of_toupper 0918  
                       __end_of_stristr 1394                            __end_ofPL100 3958  
                          __end_ofPL110 2104                            __end_ofPL102 291C  
                          __end_ofPL120 0CA8                            __end_ofPL112 6ACA  
                          __end_ofPL104 27F4                            __end_ofPL130 3742  
                          __end_ofPL122 2FF4                            __end_ofPL114 51DA  
                          __end_ofPL106 51D0                            __end_ofPL140 1F56  
                          __end_ofPL132 18C8                            __end_ofPL124 6AFA  
                          __end_ofPL116 6ADA                            __end_ofPL108 4A9C  
                          __end_ofPL142 27FE                            __end_ofPL134 2A46  
                          __end_ofPL126 1CEC                            __end_ofPL118 6AEA  
                          __end_ofPL144 51E4                            __end_ofPL136 1828  
                          __end_ofPL128 6B0A                            __end_ofPL146 3E12  
                          __end_ofPL138 3536                            __end_ofPL148 3E26  
     __size_of_receivePrintEventVerbose 035E                     doModeVerbose@i_1288 02BD  
             ?_receivePrintEventVerbose 0001                     doModeVerbose@p_1410 02D0  
                   doModeVerbose@p_1348 02C7                     doModeVerbose@p_1295 02C5  
                   doModeVerbose@p_1387 02D2                          WriteUSART@data 001F  
                  _ECANSetOperationMode 0918                            _canInputFifo 00EF  
                       __initialization 1088                  doModeVerbose@page_1344 02B0  
         receiveSendMultiEventCANAL@dlc 007F                            __end_of_crc8 0B36  
         receiveSendMultiEventCANAL@crc 0080                            __end_of_atoi 25D2  
         receiveSendMultiEventCANAL@pos 0081                            __end_of_main 3340  
                          __end_of_init 0FC6                            __end_of_itoa 0AC6  
                            _ReadTimer3 08DC                            __end_of_utoa 1968  
                   doModeVerbose@ifmode 02C9                              _Read_b_eep 08B8  
                   doModeVerbose@maskno 02BA                        __end_of_Busy_eep 088C  
                   doModeVerbose@nodeid 02B8                           doModeSLCAN@id 0096  
                        __CFG_OSC$HSPLL 000000                           doModeSLCAN@rv 009C  
                     ??_ECANSendMessage 006B                          ?i1_WriteTimer0 0001  
            writeRegisterExtended@value 00B4                                  ??_crc8 0026  
                 getVSCPFrame@pvscptype 006B                                  ??_atoi 0064  
                ??_vscp_restoreDefaults 0028                                  ??_main 00BF  
                     readRegister@value 00B2                                  ??_init 0028  
                                ??_itoa 0026                                  ??_utoa 0026  
                doModeVerbose@mask_type 0298                           __activetblptr 000002  
                       _stateVscpDriver 0038                       __RegsToCANID@type 0004  
                  _can_transmitOverruns 00C5              ECANReceiveMessage@msgFlags 000B  
                         ?_readRegister 00AF               __size_of__ECANPointBuffer 0076  
                                _B0TXEN 006FC2                                  _B1TXEN 006FC3  
                                _B2TXEN 006FC4                  doModeVerbose@preg_1352 028E  
                                _B3TXEN 006FC5                                  _B4TXEN 006FC6  
                                _B5TXEN 006FC7             readRegisterExtended@timeout 00B2  
            ECANReceiveMessage@savedPtr 000C                                  _CANCON 000F6F  
                      ___llmod@dividend 0065                                  STR_100 7C50  
                                STR_101 7CEE                                  STR_102 6FF8  
                                STR_110 7300                                  STR_111 7CF5  
                                STR_103 7763                                  STR_104 7C6B  
                                STR_120 7CA3                                  STR_200 7B60  
                                STR_112 7490                                  STR_121 7CF5  
                                STR_113 7CF5                                  STR_201 7CCA  
                                STR_105 7C42                                  STR_130 7CF5  
                                STR_106 7CF5                                  STR_202 7A95  
                                STR_210 7992                                  STR_114 74DE  
                                STR_122 70CC                                  STR_115 7CF5  
                                STR_211 7C5E                                  STR_203 7C5E  
                                STR_123 752A                                  STR_131 7469  
                                STR_107 6D80                                  STR_300 6FF8  
                                STR_132 7C6B                                  STR_124 7CF5  
                                STR_220 7CDE                                  STR_212 7CDE  
                                STR_204 7CDE                                  STR_140 7B9D  
                                STR_108 73F4                                  STR_116 7353  
                                STR_221 6FF8                                  STR_213 6FF8  
                                STR_205 6FF8                                  STR_117 7CF5  
                                STR_109 7CF5                                  STR_141 7C83  
                                STR_133 7C8F                                  STR_301 7C11  
                                STR_125 73A4                                  STR_230 78C4  
                                STR_126 7CF5                                  STR_142 7CA8  
                                STR_134 7CDA                                  STR_302 7C09  
                                STR_118 7B55                                  STR_206 7ADA  
                                STR_214 79BD                                  STR_222 78DC  
                                STR_150 76CC                                  STR_119 7C6B  
                                STR_143 7C49                                  STR_215 7C5E  
                                STR_207 7C5E                                  STR_231 7C01  
                                STR_223 7C01                                  STR_151 7C89  
                                STR_303 7B33                                  STR_127 7574  
                                STR_135 72D4                                  STR_128 7CF5  
                                STR_144 7C3B                                  STR_160 7BFE  
                                STR_232 7CDE                                  STR_224 7CDE  
                                STR_216 7CDE                                  STR_208 7CDE  
                                STR_136 7BF1                                  STR_304 7B93  
                                STR_152 77CF                                  STR_240 6FC5  
                                STR_233 6FF8                                  STR_225 6FF8  
                                STR_217 6FF8                                  STR_209 6FF8  
                                STR_145 7BAF                                  STR_153 7C7D  
                                STR_305 7B89                                  STR_161 79A8  
                                STR_129 7599                                  STR_137 73CC  
                                STR_241 6E3B                                  STR_170 7C6B  
                                STR_162 7CD2                                  STR_154 7BFE  
                                STR_146 7C77                                  STR_138 7B4A  
                                STR_306 7939                                  STR_218 7922  
                                STR_226 78C4                                  STR_242 78AC  
                                STR_250 777E                                  STR_234 7065  
                                STR_307 6FF8                                  STR_139 7C6B  
                                STR_243 7C50                                  STR_227 7C01  
                                STR_219 7C01                                  STR_147 7BE9  
                                STR_155 797C                                  STR_163 7966  
                                STR_235 7802                                  STR_171 7799  
                                STR_251 72A8                                  STR_236 7C50  
                                STR_244 7CEE                                  STR_180 7CEE  
                                STR_228 7CDE                                  STR_156 7CD2  
                                STR_308 7AA7                                  STR_172 79E6  
                                STR_260 78F4                                  STR_148 7747  
                                STR_252 724E                                  STR_164 7220  
                                STR_245 6FF8                                  STR_229 6FF8  
                                STR_237 7CEE                                  STR_149 7CB2  
                                STR_173 7BC1                                  STR_165 7B7F  
                                STR_181 7B27                                  STR_309 7AB8  
                                STR_157 790B                                  STR_261 7648  
                                STR_253 7099                                  _EEDATA 000FA8  
                                STR_238 6FF8                                  STR_182 7C01  
                                STR_174 7BC9                                  STR_190 7BA6  
                                STR_270 79D2                                  STR_166 7604  
                                STR_262 741B                                  STR_158 732A  
                                STR_254 70FE                                  STR_246 6F20  
                                STR_191 7C50                                  STR_183 7CDE  
                                STR_175 7C65                                  STR_167 7BB8  
                                STR_159 7B3F                                  STR_255 770B  
                                STR_263 737C                                  STR_247 6EAF  
                                STR_239 6E00                                  STR_271 6CB3  
                                STR_280 7031                                  STR_192 7CEE  
                                STR_168 7CFD                                  STR_176 7CF3  
                                STR_184 7BE1                                  STR_272 7626  
                                STR_248 7442                                  STR_264 71F1  
                                STR_256 7130                                  STR_249 6D16  
                                STR_177 7CF1                                  STR_185 7C57  
                                STR_193 7C26                                  STR_169 768A  
                                STR_257 727C                                  STR_273 71C2  
                                STR_281 6CFA                                  STR_265 6C1D  
                                STR_282 6FF8                                  STR_194 7C50  
                                STR_186 7CEE                                  STR_290 7CE5  
                                STR_178 7C2D                                  STR_258 7834  
                                STR_274 7193                                  STR_266 6C69  
                                STR_179 7C50                                  STR_195 7CEE  
                                STR_291 7CFB                                  STR_187 7C1F  
                                STR_283 77B4                                  STR_259 6EE8  
                                STR_275 6D3D                                  STR_267 6BD0  
                                STR_292 6FF8                                  STR_284 6FF8  
                                STR_188 7C50                                  STR_196 7C18  
                                STR_268 784C                                  STR_276 7162  
                                STR_285 6CFA                                  STR_197 7C50  
                                STR_189 7CEE                                  STR_293 7B0B  
                                STR_277 6F57                                  STR_269 6B82  
                                STR_294 6FF8                                  STR_286 6FF8  
                                STR_198 7CEE                                  STR_278 6DC2  
                                STR_199 7CF5                                  STR_287 7AC9  
                                STR_295 7A4A                                  STR_279 74B7  
                                STR_296 7CFD                                  STR_288 7BD9  
                                STR_289 7CF9                                  STR_297 7CF7  
                                STR_298 6FF8                                  STR_299 7B75  
                                _EECON2 000FA7            __end_of_readRegisterExtended 23D6  
                                _CIOCON 000F73                                  ?_ultoa 006D  
          ??_sendVSCPDriverCommandReply 0028                    __end_of_fifo_getFree 18AC  
                                i1l2038 093E                                  i1l1600 356E  
                         ?_init_app_ram 0001                                  i1l1610 363C  
                                i1l1611 35BC                                  _MDSEL0 007BBE  
                                i1l1621 3616                                  i1l1613 35CA  
                                _MDSEL1 007BBF                                  i1l1631 36A0  
                                i1l1623 3626                                  i1l1615 35DE  
                                i1l1607 3732                                  i1l1632 36BA  
                                i1l1617 35F2                                  i1l1619 3606  
                                i1l1654 28C0                                  i1l1659 129A  
                                i1l1686 2968                                  i1l1687 2A0A  
                            _OpenTimer0 094E                              _OpenTimer3 09A8  
                                i1l7175 2972                                  i1l7167 2932  
                                i1l7185 29E6                                  i1l7187 29F0  
                       _init_app_eeprom 1CEC                      __size_of_ReadUSART 001E  
                                _RXB0IF 007D20                                  _RXB1IF 007D21  
                                _SPBRGH 000FB0                  ECANReceiveMessage@data 0008  
                ECANReceiveMessage@mode 0010                  ECANReceiveMessage@temp 0011  
                                _RXBnIE 007D19                                  _RXBnIF 007D21  
                     getVSCPFrame@pData 0073              ??_sendVSCPDriverErrorFrame 0028  
                     getVSCPFrame@pSize 0071                      _doModeVerbose$1312 029D  
                    _doModeVerbose$1321 02A1                      _doModeVerbose$1307 029B  
                    _doModeVerbose$1316 029F                      _doModeVerbose$1334 02A5  
                    _doModeVerbose$1361 02A9                      _doModeVerbose$1329 02A3  
                    _doModeVerbose$1338 02A7                      _doModeVerbose$1367 02AB  
                    _doModeVerbose$1376 02AD                   ?_ECANSetOperationMode 0001  
                    __CANIDToRegs@Value 0062                      __size_of_Interrupt 031E  
                            _bLocalEcho 0101                readRegisterExtended@page 00AF  
                    __size_of_OpenUSART 005C                        fifo_write@nbytes 0003  
                        getCANFrame@pid 0027                                  ___wmul 0B36  
                            _bInitiated 00E9                          __CFG_STVREN$ON 000000  
                             ??___lldiv 0027                               ??_calcCRC 0028  
                                _cmdbuf 0105                               ??___llmod 0027  
                      OpenTimer0@config 001F                  receiveSendEventCANAL@i 0075  
                             ??___lwdiv 0023                               ??___lwmod 0023  
         _receivePrintEventVerbose$1503 0096           _receivePrintEventVerbose$1513 009A  
         _receivePrintEventVerbose$1523 009E           _receivePrintEventVerbose$1508 0098  
         _receivePrintEventVerbose$1518 009C           _receivePrintEventVerbose$1528 00A0  
         _receivePrintEventVerbose$1498 0094           _receivePrintEventVerbose$3682 0090  
                                _memcpy 0CA8                                  _memset 09D0  
                                clear_0 1090                                  clear_1 10A4  
                                clear_2 10B6                                  clear_3 10C2  
                                clear_4 10CE                                  clear_5 10DA  
                      OpenTimer3@config 001F                           ?_sendCANFrame 0088  
                                _strcat 0E5A                                  _strchr 0F0C  
                                _strcpy 09FC                                  _strlen 0B72  
                                _wrkbuf 0155                                  _strtok 15B8  
                                _strspn 0CEA     __size_of_sendVSCPDriverCommandReply 00CC  
                             ??_isdigit 001F                  receiveSendEventSLCAN@i 0082  
                      __end_of_printMDF 177A                            __mediumconst 6B0A  
                        ??_readRegister 00B4                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                          ?_printBinary 0001                 __size_of_nibbleFromChar 003E  
                                ultoa@c 0079                                  ultoa@v 0075  
                          ?_printErrors 0001                               ??_sprintf 0075  
                             ??_strichr 0024                               ??_strcspn 0025  
                             ??_toupper 001F                          ??_init_app_ram 006B  
                             ??_stristr 0026                              _bTimestamp 00EB  
            ??_sendVSCPModeCapabilities 0028              doModeVerbose@mask_priority 0297  
                      __end_of_strnicmp 1152                              __accesstop 0060  
               __end_of__initialization 10E0                    _printFirmwareVersion 149A  
                 __size_of_getVSCPFrame 0086                doModeVerbose@bPersistent 02B3  
             receiveSendEventCANAL@data 006D                    doModeVerbose@id_1422 02CC  
                            _WriteUSART 08EE                          __pcstackCOMRAM 0001  
              __size_of_printStatistics 0198                    _printStatistics$1610 008F  
                           ?_ReadTimer3 001F                    _printStatistics$1604 008D  
                  _printStatistics$1616 0091                    _printStatistics$1598 008B  
                 _uart_transmitOverruns 00E5                             ?_Read_b_eep 001F  
                       ??i1_WriteTimer0 0003                           __end_of_ultoa 21D6  
                            __end_ofPL2 6944                              __end_ofPL4 6954  
                            __end_ofPL6 6962                              __end_ofPL8 697C  
                        ??_sendCANFrame 0028                       __end_of_ReadUSART 094E  
                         ?__RegsToCANID 0001             __size_of_ECANReceiveMessage 01FE  
                    sendVSCPFrame@pData 0095                         readRegister@reg 00AF  
               __size_ofi1_fifo_getFree 0084                    sendVSCPDriverAck@crc 0066  
                    __size_of_findNodes 0134                          doModeSLCAN@dlc 009A  
                    __size_of_fifo_init 0030                      __size_of_fifo_read 00AC  
                getVSCPFrame@pvscpclass 0069                         _fifo_canrxcount 0036  
               __end_of_init_app_eeprom 1DB6                       __end_of_Interrupt 0336  
                         ReadUSART@data 0001                      readRegister@nodeid 00B8  
                        _status_led_cnt 002A                      __RegsToCANID@Value 0007  
                            _crc8_table 0300                       __end_of_OpenUSART 0F0C  
               doModeVerbose@mask_class 0292               printNodeFirmwareVersion@i 00BE  
                       setFilter@filter 0066                            sprintf@width 0082  
      __end_of_printNodeFirmwareVersion 1E84                              _doModeVscp 3BB8  
                               ??_ultoa 0028                            _getVSCPFrame 1414  
                            __pbssBANK0 00C1                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                           ?_OpenTimer0 0001                             ?_OpenTimer3 0001  
                            calcCRC@crc 0067                               ?_Busy_eep 0001  
                            calcCRC@len 0065                              __pnvCOMRAM 003F  
                 ?_printFirmwareVersion 0001                  ??_ECANSetOperationMode 001F  
                    __size_of_init_crc8 006A                            __IT_INT_MASK 0030  
                         setFilter@eidh 0069                           setFilter@eidl 006A  
                          __IT_SAVE_BSR 0031                           setFilter@sidh 0067  
                         setFilter@sidl 0068                        ??_doModeVscpNode 001F  
                            _nTimeStamp 00ED             ?_receiveSendMultiEventCANAL 0001  
              __end_of_hexStringToBytes 16EA                ECANSetOperationMode@mode 001F  
                               ?___wmul 0023                      __size_of_setFilter 024A  
                               _B0RXFUL 007107                                 _B1RXFUL 007187  
                  __ECANRxFilterHitInfo 002F                __end_of_checkCANBusState 09A8  
                               _B2RXFUL 007207                                 _B3RXFUL 007287  
                               _B4RXFUL 007307                      _sendVSCPDriverNack 1968  
                               _B5RXFUL 007387                        WriteTimer0@timer 0021  
                         putsUSART@data 0020                    _readRegisterExtended 22D6  
                               ?_memcpy 001F                                 _ECANCON 000F77  
                               ?_memset 001F                           ??_WriteTimer0 0021  
                         ??_WriteTimer3 0021                        WriteTimer3@timer 0021  
                        ??__RegsToCANID 0005                           ??_Write_b_eep 0022  
                 sendVSCPFrame@priority 0093                                 _BRGCON1 000F70  
                               _BRGCON2 000F71                                 _BRGCON3 000F72  
                               ?_strcat 001F                                 ?_strchr 001F  
                               ?_strcpy 001F                                 ?_strlen 001F  
                               ?_strtok 0064                                 ?_strspn 0060  
                            _cntRxBytes 00C9                              _cntTxBytes 00D1  
                               i1l11031 17CA                                 i1l11201 00E2  
                               i1l11051 355C                                 i1l11211 0114  
                               i1l11203 00EA                                 i1l11061 3586  
                               i1l11221 0144                                 i1l11205 00F6  
                               i1l11119 3650                                 i1l11231 017C  
                               i1l11223 0150                                 i1l11215 0126  
                               i1l11129 3670                                 i1l11241 01B2  
                               i1l11233 018E                                 i1l11217 0132  
                               i1l11209 0108                                 i1l11155 36E8  
                               i1l11163 3706                                 i1l11147 36BC  
                               i1l11067 359C                                 i1l11075 35AA  
                               i1l11243 01C0                                 i1l11251 01E0  
                               i1l11235 0196                                 i1l11227 0162  
                               i1l11069 35A6                                 i1l11261 021C  
                               i1l11245 01C8                                 i1l11237 01A8  
                               i1l11253 01E2                                 i1l11229 016C  
                               i1l11181 003C                                 i1l11271 029E  
                               i1l11263 0238                                 i1l11255 01EA  
                               i1l11247 01D6                                 i1l11239 01AA  
                               i1l11191 00A0                                 i1l11183 0042  
                               i1l11169 371C                                 i1l11281 0308  
                               i1l11273 02A2                                 i1l11265 0240  
                               i1l11257 020C                                 i1l11249 01DC  
                               i1l11193 00B2                                 i1l11185 0078  
                               i1l11283 030A                                 i1l11275 02D6  
                               i1l11267 0266                                 i1l11259 0214  
                               i1l11195 00C2                                 i1l11187 0088  
                               i1l11179 0034                      __size_of_printGUID 00EE  
                               i1l11277 02DA                                 i1l11269 0268  
                               i1l11197 00C6                                 i1l11189 0094  
                               i1l10807 285C                                 i1l11279 0304  
                               i1l11199 00D2                     ?_sendVSCPDriverNack 0001  
                               i1l11289 0316                                 i1l10781 1250  
                               i1l10783 125A                                 i1l10775 1234  
                               i1l10785 1264                                 i1l10777 123C  
                               i1l10793 127C                                 i1l10787 126A  
                               i1l10779 1246                                 i1l10789 1270  
                            _fifo_write 291C                      __size_of_printHelp 0180  
                    __size_of_printMode 0072                   sendVSCPFrame@vscptype 0091  
                 __size_of_fifo_getFree 0084                 doModeVerbose@value_1346 02B6  
               doModeVerbose@value_1370 02B2                       sendCANFrame@pdata 008D  
                            _made_table 0028                                 _RXB0CON 000F60  
                               _RXB1CON 000F50                                 _RXB0FUL 007B07  
                      __ECANPointBuffer 122E                                 _TXB0CON 000F40  
                               _TXB1CON 000F30                                 _TXB2CON 000F20  
                    __size_of_putsUSART 0054      __end_of_sendVSCPDriverCommandReply 20F6  
            _sendVSCPDriverCommandReply 202A                                 _RXFCON0 000DD4  
                               _RXFCON1 000DD5                   _writeRegisterExtended 25E0  
      __size_of_receiveVSCPModeCanalMsg 00EC                  __size_of_doModeVerbose 174C  
                  sendEscapedUartData@c 0065                     __size_of_ReadTimer3 0012  
                __size_of_sendVSCPFrame 00B6                     __size_of_Read_b_eep 0012  
                            ??_Busy_eep 001F        __end_of_sendVSCPDriverErrorFrame 1CDE  
        __size_of_receiveSendEventCANAL 01E8           __end_of_receiveSendEventCANAL 3528  
                  ??_sendVSCPDriverNack 0028              printFirmwareVersion@wrkbuf 006F  
        __size_of_receiveSendEventSLCAN 017E                         _ECANSendMessage 2B7A  
         __end_of_receiveSendEventSLCAN 2FE6                                 __Hparam 0000  
                     __end_of_findNodes 2B7A                                 __Lparam 0000  
                     __end_of_fifo_init 0C98                       __end_of_fifo_read 1F30  
                         ??_getCANFrame 0027                             ?_WriteUSART 0001  
            receiveVSCPModeCanalMsg@dlc 00AF                    __end_of_readRegister 202A  
                             ?_printMDF 0001                                 _bSilent 0102  
             receiveVSCPModeCanalMsg@id 00AB                           ??_doModeSLCAN 008F  
                               ___lldiv 12A4                         __size_of___wmul 003C  
                               _calcCRC 0A2A                         getCANFrame@pdlc 0065  
                               ___llmod 1026                                 ___lwdiv 0DBC  
                             _FIFOEMPTY 007BA7                                 ___lwmod 0BAE  
                 ?_readRegisterExtended 00AF             printNodeFirmwareVersion@buf 00BA  
                  __end_of_init_app_ram 401C                            _fifo_getFree 1828  
                          init_crc8@crc 0023                                 __pcinit 1088  
                       __size_of_memcpy 0042                         __size_of_memset 002C  
                               __ramtop 0600                     __size_of_OpenTimer0 001E  
                   __size_of_OpenTimer3 0028                               ?_strnicmp 0060  
                               __ptext0 318C                                 __ptext1 0884  
                               __ptext2 46D4                                 __ptext3 164E  
                               __ptext4 0C2A                 receiveSendEventCANAL@id 007A  
                               __ptext5 2E68                                 __ptext6 2104  
                               __ptext7 3BB8                                 __ptext8 1C28  
                               __ptext9 202A                                 crc8@crc 0060  
         printNodeFirmwareVersion@value 00BD                       ??_printStatistics 0028  
                             _T0CONbits 000FD5                         __size_of_strcat 0056  
                       __size_of_strchr 005C                         __size_of_strcpy 002E  
                       __size_of_strlen 003C                       __end_of_hexpowers 6B82  
                       __size_of_strtok 0096                         __size_of_strspn 0046  
                               _dpowers 6B3A                       __end_of_init_crc8 11BC  
                               _isdigit 096C          printNodeFirmwareVersion@nodeid 00B9  
                             _T3CONbits 000FB1                     __end_of_WriteTimer0 08B8  
                   __end_of_WriteTimer3 08DC                          _nibbleFromChar 0C2A  
                      ?_init_app_eeprom 0001                     __end_of_Write_b_eep 0A8E  
                               _sprintf 4A9C        __end_of_sendVSCPModeCapabilities 1C28  
                     __end_of_setFilter 3BA2                                 _strichr 0BEC  
                        doModeVerbose@c 02BF                          doModeVerbose@i 02B5  
                        doModeVerbose@p 02CA                                 _strcspn 0D30  
                               _toupper 0902                             ?_doModeVscp 0001  
                               _stristr 131A                    __size_of_printBinary 0046  
                  end_of_initialization 10E0                       __end_of_octpowers 6B3A  
                  __size_of_printErrors 02B2                                 memcpy@d 0060  
                               memcpy@n 0023                                 memcpy@s 0062  
                ??_printFirmwareVersion 0028                                 itoa@buf 0069  
                             i1u1300_20 0132                               i1u1300_21 0130  
                             i1u1301_20 0142                                 memset@c 0021  
                             i1u1301_21 0140                               i1u1310_20 01C8  
                             i1u1302_20 0150                               i1u1310_21 01C6  
                             i1u1302_21 014E                                 memset@n 0023  
                               itoa@val 006B                                 memset@p 0025  
                             i1u1311_20 01D6                               i1u1303_20 0160  
                             i1u1311_21 01D4                               i1u1303_21 015E  
                             i1u1320_20 02D6                               i1u1312_20 01EA  
                             i1u1304_20 016C                               i1u1320_21 02D4  
                             i1u1312_21 01E8                               i1u1304_21 016A  
                             i1u1224_25 2824                               i1u1321_20 0304  
                             i1u1313_20 020C                               i1u1305_20 017C  
                             i1u1321_21 0302                               i1u1313_21 020A  
                             i1u1305_21 017A                               i1u1225_25 2834  
                             i1u1322_20 0314                               i1u1314_20 0214  
                             i1u1306_20 018E                               i1u1322_21 0312  
                             i1u1314_21 0212                               i1u1306_21 018C  
                         __Lmediumconst 6B0A                               i1u1226_25 2860  
                             i1u1315_20 021C                               i1u1307_20 0196  
                             i1u1315_21 021A                               i1u1307_21 0194  
                             i1u1316_20 0238                               i1u1308_20 01B2  
                             i1u1316_21 0236                               i1u1308_21 01B0  
                             i1u1317_20 0240                               i1u1309_20 01C0  
                             i1u1317_21 023E                               i1u1309_21 01BE  
                  __end_of_sendCANFrame 0AFE                               i1u1261_25 17A8  
                             i1u1318_20 0266                               i1u1318_21 0264  
                             i1u1319_20 029E                               i1u1319_21 029C  
                             i1u1265_25 3564                               i1u1265_27 3566  
                             i1u1291_20 003C                               i1u1291_21 003A  
                             i1u1292_20 0078                               i1u1292_21 0076  
                             i1u1293_20 0094                               i1u1293_21 0092  
                             i1u1294_20 00D2                               i1u1294_21 00D0  
                             i1u1295_20 00E2                               i1u1295_21 00E0  
                             i1u1296_20 00F6                               i1u1296_21 00F4  
                             i1u1297_20 0106                               i1u1297_21 0104  
                             i1u1298_20 0114                               i1u1298_21 0112  
                             i1u1299_20 0124                               i1u1299_21 0122  
                   _can_receiveOverruns 00C1                 receiveSendEventSLCAN@id 007D  
                     __end_of_printGUID 24C4                         ___lldiv@divisor 0023  
                     __end_of_printHelp 2E68     receiveSendMultiEventCANAL@timestamp 0076  
                       ___lldiv@counter 0060                       __end_of_printMode 122E  
                     ECANSendMessage@id 0063                       ECANSendMessage@pb 006C  
          __size_of_sendEscapedUartData 0060                               _RXF10EIDH 000D76  
                             _RXF10EIDL 000D77                               _RXF11EIDH 000D7A  
                             _RXF11EIDL 000D7B                              ??_printMDF 0028  
                             _RXF12EIDH 000D82                               _RCSTAbits 000FAB  
                             _RXF12EIDL 000D83                               _RXF13EIDH 000D86  
                             _RXF13EIDL 000D87                               _RXF14EIDH 000D8A  
                             _RXF14EIDL 000D8B                               _RXF15EIDH 000D92  
                             _RXF15EIDL 000D93                               _RXF10SIDH 000D74  
                             _RXF10SIDL 000D75                               _RXF11SIDH 000D78  
                             _RXF11SIDL 000D79                               _RXF12SIDH 000D80  
                             _RXF12SIDL 000D81                                 postdec1 000FE5  
                               postdec2 000FDD                               _RXF13SIDH 000D84  
                             _RXF13SIDL 000D85                               _RXF14SIDH 000D88  
                             _RXF14SIDL 000D89                 __size_of_ECANInitialize 0080  
                             _RXF15SIDH 000D90                               _RXF15SIDL 000D91  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                       __end_of_putsUSART 0E5A  
                    __ECANPointBuffer@b 0004                           _doModeVerbose 51E4  
                               utoa@buf 0060       __size_of_printNodeFirmwareVersion 00CE  
                               utoa@val 0062               ?_printNodeFirmwareVersion 0001  
                         _sendVSCPFrame 1AB0                                 strlen@s 001F  
                            _sequencyno 00EE                              _timekeeper 00D9  
                             _RXM0EXIDM 0078CB                                 strspn@i 0025  
                            ??_strnicmp 0023                               _PORTCbits 000F82  
                   __end_of_getCANFrame 15B8                              findNodes@i 01B8  
                        i1_fifo_getFree 1788                  __end_of_nibbleFromChar 0C68  
                   __end_of_doModeSLCAN 4A90                             ?_fifo_write 0001  
                            fifo_init@f 0023           __size_of_vscp_restoreDefaults 0008  
                            fifo_read@f 0064                              fifo_read@i 0062  
                            fifo_read@p 0060                               _TRISBbits 000F93  
                             _TRISCbits 000F94                  ?_writeRegisterExtended 00AF  
     sendVSCPDriverCommandReply@cmdCode 0066                     __size_of_WriteUSART 0014  
           sendVSCPModeCapabilities@crc 0066                 __end_of_ECANSendMessage 2CE8  
                  _uart_receiveOverruns 00E1                _receivePrintEventVerbose 4376  
                            _vscpNodeId 01AF                           ?__CANIDToRegs 0021  
                  __end_of__RegsToCANID 28C2                               _TXSTAbits 000FAC  
                    i1WriteTimer0@timer 0003                       doModeVerbose@baud 02C0  
                     doModeVerbose@page 02BB                       doModeVerbose@preg 028C  
                        _init_crc8$2194 001F                  ??_readRegisterExtended 00B6  
                        ?_doModeVerbose 0001                            ??_ReadTimer3 0021  
                          ??_Read_b_eep 0021                          ?_sendVSCPFrame 008F  
                __end_ofi1_fifo_getFree 180C                          __end_of___wmul 0B72  
                   __size_of_doModeVscp 0244                             _WriteTimer0 08A6  
                           _WriteTimer3 08CA                             _Write_b_eep 0A5A  
                        __end_of_memcpy 0CEA                          __end_of_memset 09FC  
     __size_of_sendVSCPDriverErrorFrame 00B6               ?_sendVSCPDriverErrorFrame 0001  
                       ?_nibbleFromChar 0001                               ___DCDelay 0041  
                        __end_of_strcat 0EB0                          __end_of_strchr 0F68  
                        __end_of_strcpy 0A2A                          __end_of_strlen 0BAE  
              doModeVerbose@filter_type 0295                          __end_of_strtok 164E  
                        __end_of_strspn 0D30                             __end_ofPL10 4068  
                           __end_ofPL20 69E2                             __end_ofPL12 69C6  
                           __end_ofPL30 516C                             __end_ofPL22 2A38  
                           __end_ofPL14 5136                             __end_ofPL40 40A6  
                           __end_ofPL32 69F2                             __end_ofPL24 5146  
                           __end_ofPL16 3BB8                             __end_ofPL50 28D0  
                           __end_ofPL42 40C4                             __end_ofPL34 27BC  
                           __end_ofPL26 1788                             __end_ofPL18 3936  
                           __end_ofPL60 1AB0                             __end_ofPL52 6A4E  
                           __end_ofPL44 6A18                             __end_ofPL36 6A06  
                           __end_ofPL28 25E0                             __end_ofPL70 6A7E  
                           __end_ofPL62 519C                             __end_ofPL54 5186  
                           __end_ofPL46 6A34                             __end_ofPL38 4088  
                           __end_ofPL80 181A                             __end_ofPL72 6A94  
                           __end_ofPL64 1F48                             __end_ofPL56 3946  
                           __end_ofPL48 3E0A                             __end_ofPL90 290A  
                           __end_ofPL82 28E4                             __end_ofPL74 1528  
                           __end_ofPL66 6A66                             __end_ofPL58 1A0C  
                           __end_ofPL92 21EA                             __end_ofPL84 6AA8  
                           __end_ofPL76 18BA                             __end_ofPL68 27CE  
                           __end_ofPL94 27E2                             __end_ofPL86 51BE  
                           __end_ofPL78 51AA                             __end_ofPL96 24D8  
                           __end_ofPL88 28F6                             __end_ofPL98 6ABA  
                   start_initialization 1088                               _ReadUSART 0930  
                       findNodes@nFound 01B5                   doModeVerbose@reg_1345 02B1  
                 doModeVerbose@filterno 02B4                 _receiveVSCPModeCanalMsg 21EA  
                   __CFG_BOREN$BOACTIVE 000000                            doModeSLCAN@c 009B  
                          ??_OpenTimer0 001F                            ??_OpenTimer3 001F  
                  setFilter@bPersistent 0027                      __end_of_ReadTimer3 08EE  
sendVSCPDriverCommandReply@cmdReplyCode 0067                               _Interrupt 0018  
                        ??__CANIDToRegs 0060              readRegisterExtended@nodeid 00BA  
                             _OpenUSART 0EB0                      __end_of_Read_b_eep 08CA  
                   sendVSCPFrame@nodeid 0092                         ___llmod@divisor 0069  
                 __size_of_readRegister 00D4                         ___llmod@counter 0027  
                     __size_of_Busy_eep 0006                   ECANReceiveMessage@ptr 0012  
                   __size_of_fifo_write 00F0                   __size_of_init_app_ram 01F6  
                        _findNodes$1703 01B3                __end_of__ECANPointBuffer 12A4  
                     __CANIDToRegs@type 0027                              init_crc8@i 0024  
                            init_crc8@j 0021                             _getCANFrame 1528  
                              ??___wmul 0027       __size_of_sendVSCPModeCapabilities 00C2  
                     ?_hexStringToBytes 0023                             _doModeSLCAN 46D4  
             ?_sendVSCPModeCapabilities 0001                       ?_checkCANBusState 0001  
            __end_of_ECANReceiveMessage 3734                                ??_memcpy 0025  
                   readRegister@timeout 00B0                         ?i1_fifo_getFree 0001  
                              ??_memset 0025                   sendVSCPDriverNack@crc 0066  
              doModeVerbose@mask_nodeid 0299                   __end_ofi1_WriteTimer0 08A6  
                    ??_hexStringToBytes 0060                      ??_checkCANBusState 001F  
                              ??_strcat 0023                                ??_strchr 0023  
                              ??_strcpy 0023                                ??_strlen 0021  
                    __end_of_OpenTimer0 096C                      __end_of_OpenTimer3 09D0  
                              ??_strtok 0027                                ??_strspn 0025  
                           __pbssBIGRAM 0400                             __pbssCOMRAM 0028  
                            ?_ReadUSART 0001                         __IT_SAVE_STATUS 0032  
                         __pcstackBANK0 0060                           __pcstackBANK1 01B3  
                         __pcstackBANK2 0288                     __end_of__stringdata 7CFF  
                          _readRegister 1F56                            _isdigit$3277 0020  
                 __size_of_sendCANFrame 0038             ?_sendVSCPDriverCommandReply 0066  
           sendVSCPDriverErrorFrame@crc 0067                        ?_ECANSendMessage 0063  
                     sendVSCPFrame@size 0094                            _init_app_ram 3E26  
                            ?_Interrupt 0001                              ?_OpenUSART 001F  
                           sprintf@_val 0084                             sprintf@flag 0089  
                           sprintf@prec 0080                           __IT_SAVE_WREG 0033  
                      _ledFunctionality 0037                doModeVerbose@nodeid_1343 02B9  
              doModeVerbose@nodeid_1369 02BE                            setFilter@val 0023  
                      ___lwdiv@dividend 001F                         ??_doModeVerbose 01B9  
         __size_of_ECANSetOperationMode 0018                         _printStatistics 2FF4  
                          ??_WriteUSART 001F                         ??_sendVSCPFrame 0097  
                        _ECANInitialize 1394                       _sendVSCPDriverAck 1A0C  
                         __pmediumconst 6B0A                                ?___lldiv 001F  
                              ?_calcCRC 0063                                ?___llmod 0065  
                             _findNodes 2A46                                ?___lwdiv 001F  
                              ?___lwmod 001F                               _fifo_init 0C68  
                             _fifo_read 1E84                      ?_sendVSCPDriverAck 0001  
                     __size_of_printMDF 0090                             __pintcodelo 0018  
                          _sendCANFrame 0AC6                       WriteTimer0@timer0 001F  
                           _COMSTATbits 000F74                                ?_isdigit 0001  
             ??_receiveVSCPModeCanalMsg 008F                     ??_sendVSCPDriverAck 0028  
                     __size_of_strnicmp 0068                         printGUID@nodeid 00B9  
                     WriteTimer3@timer3 001F                     _sendEscapedUartData 0FC6  
                             _hexpowers 6B62                        ___lwdiv@quotient 0024  
                             _init_crc8 1152                   __size_of__RegsToCANID 00C4  
             doModeVerbose@filter_class 0290                                ?_sprintf 006D  
                              ?_strichr 0020                             _cntRxFrames 00CD  
                          ??_doModeVscp 00B0                                ?_strcspn 0060  
                              ?_toupper 0001                                ?_stristr 0066  
                    __end_of_WriteUSART 0902                          __size_of_ultoa 00D2  
                           _cntTxFrames 00D5                         _can_inputBuffer 0400  
                        ___wmul@product 0060                  sendVSCPFrame@vscpclass 008F  
                             _setFilter 3958                             strnicmp@len 0064  
                             _octpowers 6B0A                                _PIE1bits 000F9D  
                              _PIE2bits 000FA0             __size_of_sendVSCPDriverNack 0096  
                __end_of_ECANInitialize 1414               __end_of_sendVSCPDriverAck 1AA2  
                              _PIR1bits 000F9E                                i1u682_25 2942  
                 _receiveSendEventCANAL 3340                                i1u683_25 2954  
                              _PIR2bits 000FA1                                i1u685_25 29D4  
                      ECANSendMessage@i 0085                        ECANSendMessage@j 0080  
                  ?_sendEscapedUartData 0063                   _receiveSendEventSLCAN 2E68  
                              _RXF0EIDH 000F02                                _RXF0EIDL 000F03  
                              _RXB0OVFL 007BA7                                _RXF1EIDH 000F06  
                              _RXF1EIDL 000F07                                _RXB1OVFL 007BA6  
                              _RXF2EIDH 000F0A                                _RXF2EIDL 000F0B  
                              _RXF3EIDH 000F0E                                _RXF3EIDL 000F0F  
                              _RXF4EIDH 000F12                                _RXF4EIDL 000F13  
                              _RXF5EIDH 000F16                                _RXF5EIDL 000F17  
                              _RXF6EIDH 000D62             receiveSendMultiEventCANAL@i 007A  
                              _RXF6EIDL 000D63                       hexStringToBytes@i 0067  
                              _RXF7EIDH 000D66                                _RXF0SIDH 000F00  
                     hexStringToBytes@p 0065                                _RXF7EIDL 000D67  
                              _RXF0SIDL 000F01                               _printGUID 23D6  
                              _RXF8EIDH 000D6A                                _RXF1SIDH 000F04  
                              _RXF8EIDL 000D6B                                _RXF1SIDL 000F05  
                              _RXF9EIDH 000D72                                _RXF2SIDH 000F08  
                              _RXF9EIDL 000D73                                _RXF2SIDL 000F09  
                              _RXF3SIDH 000F0C                                _RXF3SIDL 000F0D  
                            printGUID@i 00BE                                _RXF4SIDH 000F10  
                              _RXF4SIDL 000F11                                _RXF5SIDH 000F14  
                              _RXF5SIDL 000F15                                _RXF6SIDH 000D60  
                              _RXF6SIDL 000D61                                _RXM0EIDH 000F1A  
                              _RXF7SIDH 000D64                                _RXM0EIDL 000F1B  
                              _RXF7SIDL 000D65                                _RXM1EIDH 000F1E  
                              _RXF8SIDH 000D68                                _RXM1EIDL 000F1F  
                              _RXF8SIDL 000D69                                _RXF9SIDH 000D70  
                              _RXF9SIDL 000D71                                _RXFBCON0 000DE0  
                              _RXFBCON1 000DE1                                _RXFBCON2 000DE2  
                              _RXFBCON3 000DE3                                _RXFBCON4 000DE4  
                              _RXFBCON5 000DE5                                _RXFBCON6 000DE6  
                              _RXFBCON7 000DE7                              ?_findNodes 0001  
                             _printHelp 2CE8                                _RXM0SIDH 000F18  
                              _RXM0SIDL 000F19                                _RXM1SIDH 000F1C  
                              _RXM1SIDL 000F1D                               _printMode 11BC  
                            ?_fifo_init 001F                              ?_fifo_read 001F  
                              _RXERRCNT 000F75                      __end_of_doModeVscp 3DFC  
                              _TXERRCNT 000F76                    __end_of__CANIDToRegs 27A8  
                             _putsUSART 0E06                             __stringdata 6B82  
                     ___wmul@multiplier 0023                            __RegsToCANID 27FE  
                             _vscpClass 01AD                 ??_writeRegisterExtended 00B6  
                       Write_b_eep@badd 001F                         Write_b_eep@bdat 0021  
                          ??_fifo_write 0007                 __size_of_doModeVscpNode 0002  
            ??_receivePrintEventVerbose 008B                             ??_ReadUSART 0001  
                   getVSCPFrame@pNodeId 006D                           ??_printBinary 0020  
                      doModeVerbose@reg 02BC                           ??_printErrors 0028  
                            ?_init_crc8 0001                      _serial_inputBuffer 0200  
                             _rwtimeout 0104               writeRegisterExtended@page 00AF  
                              ___DCByte 0034    __end_of_receiveVSCPModeMultiCanalMsg 0884  
 __size_of_receiveVSCPModeMultiCanalMsg 0002            _receiveVSCPModeMultiCanalMsg 0882  
                           ??_Interrupt 0014                 __end_of_printStatistics 318C  
                           ??_OpenUSART 0021            writeRegisterExtended@timeout 00B2  
                              _Busy_eep 0886                __size_of_init_app_eeprom 00CA  
                            ?_setFilter 0023                         OpenUSART@config 0021  
                        findNodes@value 01B6            __end_of_vscp_restoreDefaults 0894  
                            _EECON1bits 000FA6           __size_of_printFirmwareVersion 0078  
       __end_of_receiveVSCPModeCanalMsg 22D6                         ?_ECANInitialize 0001  
                              __Hrparam 0000                    ECANReceiveMessage@id 000E  
                 ??_sendEscapedUartData 0028                                __Lrparam 0000  
                      __CANIDToRegs@val 0023                      __end_of_fifo_write 2A0C  
                      __CANIDToRegs@ptr 0021             receiveVSCPModeCanalMsg@data 00A3  
                            ?_printGUID 0001                             doModeVscp@c 00B3  
                            ?_printHelp 0001                              ?_printMode 0001  
                       nibbleFromChar@c 001F                        ??_nibbleFromChar 001F  
                      __size_of___lldiv 0076                        __size_of_calcCRC 0030  
                      __size_of___llmod 0062                        __size_of___lwdiv 004A  
                      __size_of___lwmod 003E                            ?_WriteTimer0 001F  
                          ?_WriteTimer3 001F                        getCANFrame@pdata 0067  
                          ?_Write_b_eep 001F                              ?_putsUSART 0020  
                       fifo_read@nbytes 0021                              sprintf@idx 0078  
                 hexStringToBytes@inhex 0026                                calcCRC@j 0066  
                            strcat@from 0021                                calcCRC@p 0063  
                      __size_of_isdigit 001E                         ___lwdiv@divisor 0021  
                       ___lwdiv@counter 0023                                __ptext10 1B66  
                              __ptext11 0882                                __ptext20 0AFE  
                              __ptext12 21EA                                __ptext21 1152  
                              __ptext13 0CA8                                __ptext30 1DB6  
                              __ptext22 51E4                                __ptext14 1A0C  
                              __ptext31 0E5A                                __ptext23 25E0  
                              __ptext15 1968                                __ptext40 2FF4  
                              __ptext32 1F56                                __ptext24 0D76  
                              __ptext16 0A2A                                __ptext41 24D8  
                              __ptext33 1AB0                                __ptext25 22D6  
                              __ptext17 3340                                __ptext50 0B72  
                              __ptext42 15B8                                __ptext34 0AC6  
                              __ptext26 09FC                                __ptext18 3742  
                              __ptext51 4376                                __ptext43 0D30  
                              __ptext35 2B7A                                __ptext27 2A46  
                              __ptext19 0FC6                                __ptext60 096C  
                              __ptext52 08DC                                __ptext44 0CEA  
                              __ptext36 098A                                __ptext28 16EA  
                              __ptext61 149A                                __ptext53 1414  
                              __ptext45 0F0C                                __ptext37 09D0  
                              __ptext29 23D6                                __ptext70 08EE  
                              __ptext62 0A8E                                __ptext54 1528  
                              __ptext46 131A                                __ptext38 2CE8  
                              __ptext71 0F68                                __ptext63 18C8  
                              __ptext55 1E84                                __ptext47 0BEC  
                              __ptext39 40C4                                __ptext80 0A5A  
                              __ptext72 1394                                __ptext64 0BAE  
                              __ptext56 4A9C                                __ptext48 10EA  
                              __ptext81 0886                                __ptext73 08CA  
                              __ptext65 0DBC                                __ptext57 0B36  
                              __ptext49 0902                                __ptext90 3536  
                              __ptext82 0918                                __ptext74 09A8  
                              __ptext66 088C                                __ptext58 1026  
                              __ptext91 27FE                                __ptext83 08B8  
                              __ptext75 094E                                __ptext67 1CEC  
                              __ptext59 12A4                                __ptext92 122E  
                              __ptext84 08A6                                __ptext76 0EB0  
                              __ptext68 11BC                                __ptext93 291C  
                              __ptext85 0C68                                __ptext77 3E26  
                              __ptext69 0E06                                __ptext94 0930  
                              __ptext86 1828                                __ptext78 26EA  
                              __ptext79 3958                                __ptext88 0894  
                              __ptext89 1788                receiveSendEventCANAL@dlc 007E  
              receiveSendEventCANAL@crc 007F                          printMDF@nodeid 00B9  
                         ?_getVSCPFrame 0069                              strichr@chr 0022  
                      __size_of_sprintf 067C                              strichr@ptr 0020  
                      __size_of_strichr 003E                        __size_of_strcspn 0046  
                      __size_of_toupper 0016                        __size_of_stristr 007A  
                            strcpy@from 0021                          printGUID@value 00BD  
                   __end_of_printBinary 0DBC                           __size_of_crc8 0038  
                         __size_of_atoi 00FA                           __size_of_main 01B4  
                         __size_of_init 005E                           __size_of_itoa 0038  
         ?_receiveVSCPModeMultiCanalMsg 0001                     __end_of_printErrors 4376  
                         __size_of_utoa 00A0                  ?_receiveSendEventCANAL 0001  
                            strnicmp@s1 0060                              strnicmp@s2 0062  
                         init_app_ram@i 0084              __size_of_sendVSCPDriverAck 0096  
        receiveSendMultiEventCANAL@data 006D                  ?_receiveSendEventSLCAN 0001  
                      ??i1_fifo_getFree 0003                _printNodeFirmwareVersion 1DB6  
                   ECANSendMessage@data 0067                ECANSendMessage@tempBSEL0 0081  
                              _printMDF 16EA                               printMDF@i 00BD  
                             printMDF@p 00BB                            ?_getCANFrame 0065  
                   ECANSendMessage@mode 007E                     ECANSendMessage@temp 0084  
                     ?__ECANPointBuffer 0001            ??_receiveSendMultiEventCANAL 0069  
                              atoi@sign 0066                             ??_findNodes 0028  
                          ?_doModeSLCAN 0001                             ??_fifo_init 0023  
                           ??_fifo_read 0023                                _vscpData 01A5  
         __size_of_readRegisterExtended 0100                                main@argc 01CD  
                              main@argv 01CF                                _vscpSize 01B1  
                    ??__ECANPointBuffer 0004                                _vscpType 01B2  
                           _RXB0FILHIT0 007B00       sendVSCPDriverErrorFrame@errorcode 0066  
                       doModeVerbose@id 0288                         doModeVerbose@rv 02AF  
                              _strnicmp 10EA                        init_app_eeprom@i 0023  
           writeRegisterExtended@nodeid 00BA                           Interrupt@fail 001E  
                       _serialInputFifo 00F7                           findNodes@bDot 01B7  
                           _RXB1CONbits 000F50                             _OSCTUNEbits 000F9B  
                            _INTCONbits 000FF2                          OpenUSART@spbrg 001F  
                   ECANReceiveMessage@i 000F                                memcpy@d1 001F  
                              memcpy@s1 0021               receivePrintEventVerbose@i 00A2  
                              itoa@base 006D                                isdigit@c 0021  
                    _ECANReceiveMessage 3536                                memset@p1 001F  
                           ??_init_crc8 001F                               ultoa@base 0073  
                        ??_getVSCPFrame 0075               __size_of_hexStringToBytes 009C  
             __size_of_checkCANBusState 001E                         sendVSCPFrame@id 00AB  
                              intlevel1 0000                               sprintf@ap 007F  
                             sprintf@sp 006D                    hexStringToBytes@size 0025  
                             strchr@chr 0021                        ?_printStatistics 0001  
              receiveSendEventSLCAN@dlc 0081                        ___lwmod@dividend 001F  
                             strchr@ptr 001F                     ?_ECANReceiveMessage 0008  
                      ___lldiv@dividend 001F                             ??_setFilter 0060  
                         printMDF@value 00BA     __size_of_receiveSendMultiEventCANAL 01E4  
                         fifo_getFree@f 0021                               strcspn@s1 0060  
                             strcspn@s2 0062      receiveSendMultiEventCANAL@msgcount 0075  
               ECANSendMessage@msgFlags 006A                              _OSCCONbits 000FD3  
                             strnicmp@r 0025                               stristr@s1 0066  
                             stristr@s2 0068                      ECANSendMessage@ptr 0086  
                     ??_init_app_eeprom 0023                   __size_of__CANIDToRegs 00BE  
                           ??_printGUID 0028                             ??_printHelp 0024  
                           ??_printMode 0024                _sendVSCPDriverErrorFrame 1C28  
                         ?_fifo_getFree 001F                  ECANSendMessage@dataLen 0069  
                   __ECANPointBuffer@pt 0005                    ??_ECANReceiveMessage 000C  
                           ??_putsUSART 0022                                utoa@base 0064  
                              ultoa@buf 006D                                ultoa@val 006F  
                         fifo_init@size 0021                                sprintf@c 0088  
                              sprintf@f 006F                     hexStringToBytes@buf 0023  
                              strcat@cp 0023                     hexStringToBytes@len 0063  
                        _doModeVscpNode 0884                                strcat@to 001F  
      __end_of_receivePrintEventVerbose 46D4                  ECANSendMessage@buffers 007F  
                      ___lldiv@quotient 0061                         ___lwmod@divisor 0021  
          __end_of_ECANSetOperationMode 0930                    _vscp_restoreDefaults 088C  
                          printGUID@buf 00BA                                strcpy@cp 0023  
                              strlen@cp 0021                                strcpy@to 001F  
                       ___lwmod@counter 0023                                strcspn@i 0025  
                              toupper@c 001F                             _printBinary 0D76  
                              strtok@s1 0064                                strtok@s2 0066  
                              strspn@s1 0060                                strspn@s2 0062  
                            _RXM1EXIDEN 0078EB                                strtok@sp 002C  
                ECANSendMessage@tempPtr 0082                             _printErrors 40C4  
                          fifo_init@buf 001F                            fifo_read@buf 001F  
         sendVSCPDriverCommandReply@crc 0068                            __CANIDToRegs 26EA  
                __size_ofi1_WriteTimer0 0012                            _USART_Status 002E  
             readRegisterExtended@value 00B4                _sendVSCPModeCapabilities 1B66  
        receiveSendEventCANAL@timestamp 0076                __size_of_ECANSendMessage 016E  
