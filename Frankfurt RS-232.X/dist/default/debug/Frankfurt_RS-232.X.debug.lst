

Microchip Technology PIC18 PRO Macro Assembler V1.21 build 54009 
                                                                                               Fri Feb 20 16:47:55 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 54009
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   104                           	psect	pa_nodes,global,class=CODE,delta=1
   105  0000                     tblptru	equ	0xFF8
   106                           tblptrh	equ	0xFF7
   107                           tblptrl	equ	0xFF6
   108                           tablat	equ	0xFF5
   109                           prodh	equ	0xFF4
   110                           prodl	equ	0xFF3
   111                           intcon	equ	0xFF2
   112                           indf0	equ	0xFEF
   113                           fsr0h	equ	0xFEA
   114                           fsr0l	equ	0xFE9
   115                           wreg	equ	0xFE8
   116                           indf1	equ	0xFE7
   117                           postinc1	equ	0xFE6
   118                           postdec1	equ	0xFE5
   119                           fsr1h	equ	0xFE2
   120                           fsr1l	equ	0xFE1
   121                           indf2	equ	0xFDF
   122                           postinc2	equ	0xFDE
   123                           postdec2	equ	0xFDD
   124                           plusw2	equ	0xFDB
   125                           fsr2h	equ	0xFDA
   126                           fsr2l	equ	0xFD9
   127                           status	equ	0xFD8
   128                           
   129                           	psect	mediumconst
   130  006CD8                     __pmediumconst:
   131                           	opt stack 0
   132  006CD8                     _octpowers:
   133                           	opt stack 0
   134  006CD8  0001               	dw	1
   135  006CDA  0000               	dw	0
   136  006CDC  0008               	dw	8
   137  006CDE  0000               	dw	0
   138  006CE0  0040               	dw	64
   139  006CE2  0000               	dw	0
   140  006CE4  0200               	dw	512
   141  006CE6  0000               	dw	0
   142  006CE8  1000               	dw	4096
   143  006CEA  0000               	dw	0
   144  006CEC  8000               	dw	32768
   145  006CEE  0000               	dw	0
   146  006CF0  0000               	dw	0
   147  006CF2  0004               	dw	4
   148  006CF4  0000               	dw	0
   149  006CF6  0020               	dw	32
   150  006CF8  0000               	dw	0
   151  006CFA  0100               	dw	256
   152  006CFC  0000               	dw	0
   153  006CFE  0800               	dw	2048
   154  006D00  0000               	dw	0
   155  006D02  4000               	dw	16384
   156  006D04  0000               	dw	0
   157  006D06  0000               	dw	0
   158  006D08                     __end_of_octpowers:
   159                           	opt stack 0
   160  006D08                     _dpowers:
   161                           	opt stack 0
   162  006D08  0001               	dw	1
   163  006D0A  0000               	dw	0
   164  006D0C  000A               	dw	10
   165  006D0E  0000               	dw	0
   166  006D10  0064               	dw	100
   167  006D12  0000               	dw	0
   168  006D14  03E8               	dw	1000
   169  006D16  0000               	dw	0
   170  006D18  2710               	dw	10000
   171  006D1A  0000               	dw	0
   172  006D1C  86A0               	dw	34464
   173  006D1E  0001               	dw	1
   174  006D20  4240               	dw	16960
   175  006D22  000F               	dw	15
   176  006D24  9680               	dw	38528
   177  006D26  0098               	dw	152
   178  006D28  E100               	dw	57600
   179  006D2A  05F5               	dw	1525
   180  006D2C  CA00               	dw	51712
   181  006D2E  3B9A               	dw	15258
   182  006D30                     __end_of_dpowers:
   183                           	opt stack 0
   184  006D30                     _hexpowers:
   185                           	opt stack 0
   186  006D30  0001               	dw	1
   187  006D32  0000               	dw	0
   188  006D34  0010               	dw	16
   189  006D36  0000               	dw	0
   190  006D38  0100               	dw	256
   191  006D3A  0000               	dw	0
   192  006D3C  1000               	dw	4096
   193  006D3E  0000               	dw	0
   194  006D40  0000               	dw	0
   195  006D42  0001               	dw	1
   196  006D44  0000               	dw	0
   197  006D46  0010               	dw	16
   198  006D48  0000               	dw	0
   199  006D4A  0100               	dw	256
   200  006D4C  0000               	dw	0
   201  006D4E  1000               	dw	4096
   202  006D50                     __end_of_hexpowers:
   203                           	opt stack 0
   204  0000                     _BRGCON1	set	3952
   205  0000                     _BRGCON2	set	3953
   206  0000                     _BRGCON3	set	3954
   207  0000                     _BSEL0	set	3576
   208  0000                     _CANCON	set	3951
   209  0000                     _CIOCON	set	3955
   210  0000                     _COMSTATbits	set	3956
   211  0000                     _ECANCON	set	3959
   212  0000                     _EEADR	set	4009
   213  0000                     _EECON1bits	set	4006
   214  0000                     _EECON2	set	4007
   215  0000                     _EEDATA	set	4008
   216  0000                     _INTCONbits	set	4082
   217  0000                     _MSEL0	set	3568
   218  0000                     _MSEL1	set	3569
   219  0000                     _MSEL2	set	3570
   220  0000                     _OSCCONbits	set	4051
   221  0000                     _OSCTUNEbits	set	3995
   222  0000                     _PIE1bits	set	3997
   223  0000                     _PIR1bits	set	3998
   224  0000                     _PIR2bits	set	4001
   225  0000                     _PIR3bits	set	4004
   226  0000                     _RCREG	set	4014
   227  0000                     _RCSTA	set	4011
   228  0000                     _RCSTAbits	set	4011
   229  0000                     _RXB1CONbits	set	3920
   230  0000                     _RXERRCNT	set	3957
   231  0000                     _RXF0EIDH	set	3842
   232  0000                     _RXF0EIDL	set	3843
   233  0000                     _RXF0SIDH	set	3840
   234  0000                     _RXF0SIDL	set	3841
   235  0000                     _RXF10EIDH	set	3446
   236  0000                     _RXF10EIDL	set	3447
   237  0000                     _RXF10SIDH	set	3444
   238  0000                     _RXF10SIDL	set	3445
   239  0000                     _RXF11EIDH	set	3450
   240  0000                     _RXF11EIDL	set	3451
   241  0000                     _RXF11SIDH	set	3448
   242  0000                     _RXF11SIDL	set	3449
   243  0000                     _RXF12EIDH	set	3458
   244  0000                     _RXF12EIDL	set	3459
   245  0000                     _RXF12SIDH	set	3456
   246  0000                     _RXF12SIDL	set	3457
   247  0000                     _RXF13EIDH	set	3462
   248  0000                     _RXF13EIDL	set	3463
   249  0000                     _RXF13SIDH	set	3460
   250  0000                     _RXF13SIDL	set	3461
   251  0000                     _RXF14EIDH	set	3466
   252  0000                     _RXF14EIDL	set	3467
   253  0000                     _RXF14SIDH	set	3464
   254  0000                     _RXF14SIDL	set	3465
   255  0000                     _RXF15EIDH	set	3474
   256  0000                     _RXF15EIDL	set	3475
   257  0000                     _RXF15SIDH	set	3472
   258  0000                     _RXF15SIDL	set	3473
   259  0000                     _RXF1EIDH	set	3846
   260  0000                     _RXF1EIDL	set	3847
   261  0000                     _RXF1SIDH	set	3844
   262  0000                     _RXF1SIDL	set	3845
   263  0000                     _RXF2EIDH	set	3850
   264  0000                     _RXF2EIDL	set	3851
   265  0000                     _RXF2SIDH	set	3848
   266  0000                     _RXF2SIDL	set	3849
   267  0000                     _RXF3EIDH	set	3854
   268  0000                     _RXF3EIDL	set	3855
   269  0000                     _RXF3SIDH	set	3852
   270  0000                     _RXF3SIDL	set	3853
   271  0000                     _RXF4EIDH	set	3858
   272  0000                     _RXF4EIDL	set	3859
   273  0000                     _RXF4SIDH	set	3856
   274  0000                     _RXF4SIDL	set	3857
   275  0000                     _RXF5EIDH	set	3862
   276  0000                     _RXF5EIDL	set	3863
   277  0000                     _RXF5SIDH	set	3860
   278  0000                     _RXF5SIDL	set	3861
   279  0000                     _RXF6EIDH	set	3426
   280  0000                     _RXF6EIDL	set	3427
   281  0000                     _RXF6SIDH	set	3424
   282  0000                     _RXF6SIDL	set	3425
   283  0000                     _RXF7EIDH	set	3430
   284  0000                     _RXF7EIDL	set	3431
   285  0000                     _RXF7SIDH	set	3428
   286  0000                     _RXF7SIDL	set	3429
   287  0000                     _RXF8EIDH	set	3434
   288  0000                     _RXF8EIDL	set	3435
   289  0000                     _RXF8SIDH	set	3432
   290  0000                     _RXF8SIDL	set	3433
   291  0000                     _RXF9EIDH	set	3442
   292  0000                     _RXF9EIDL	set	3443
   293  0000                     _RXF9SIDH	set	3440
   294  0000                     _RXF9SIDL	set	3441
   295  0000                     _RXFBCON0	set	3552
   296  0000                     _RXFBCON1	set	3553
   297  0000                     _RXFBCON2	set	3554
   298  0000                     _RXFBCON3	set	3555
   299  0000                     _RXFBCON4	set	3556
   300  0000                     _RXFBCON5	set	3557
   301  0000                     _RXFBCON6	set	3558
   302  0000                     _RXFBCON7	set	3559
   303  0000                     _RXFCON0	set	3540
   304  0000                     _RXFCON1	set	3541
   305  0000                     _RXM0EIDH	set	3866
   306  0000                     _RXM0EIDL	set	3867
   307  0000                     _RXM0SIDL	set	3865
   308  0000                     _RXM1EIDH	set	3870
   309  0000                     _RXM1EIDL	set	3871
   310  0000                     _RXM1SIDL	set	3869
   311  0000                     _SPBRG	set	4015
   312  0000                     _SPBRGH	set	4016
   313  0000                     _T0CON	set	4053
   314  0000                     _T0CONbits	set	4053
   315  0000                     _TMR0H	set	4055
   316  0000                     _TMR0L	set	4054
   317  0000                     _TRISBbits	set	3987
   318  0000                     _TRISCbits	set	3988
   319  0000                     _TXERRCNT	set	3958
   320  0000                     _TXREG	set	4013
   321  0000                     _TXSTA	set	4012
   322  0000                     _TXSTAbits	set	4012
   323  0000                     _B0RXFUL	set	28935
   324  0000                     _B0TXEN	set	28610
   325  0000                     _B1RXFUL	set	29063
   326  0000                     _B1TXEN	set	28611
   327  0000                     _B2RXFUL	set	29191
   328  0000                     _B2TXEN	set	28612
   329  0000                     _B3RXFUL	set	29319
   330  0000                     _B3TXEN	set	28613
   331  0000                     _B4RXFUL	set	29447
   332  0000                     _B4TXEN	set	28614
   333  0000                     _B5RXFUL	set	29575
   334  0000                     _B5TXEN	set	28615
   335  0000                     _FIFOEMPTY	set	31655
   336  0000                     _IRXIF	set	32039
   337  0000                     _LATC1	set	31833
   338  0000                     _MDSEL0	set	31678
   339  0000                     _MDSEL1	set	31679
   340  0000                     _PEIE	set	32662
   341  0000                     _RCIE	set	31981
   342  0000                     _RCIF	set	31989
   343  0000                     _RCIP	set	31997
   344  0000                     _RXB0FILHIT0	set	31488
   345  0000                     _RXB0FUL	set	31495
   346  0000                     _RXB0IF	set	32032
   347  0000                     _RXB0OVFL	set	31655
   348  0000                     _RXB1IF	set	32033
   349  0000                     _RXB1OVFL	set	31654
   350  0000                     _RXM0EXIDM	set	30923
   351  0000                     _RXM1EXIDEN	set	30955
   352  0000                     _B0CON	set	3616
   353  0000                     _B1CON	set	3632
   354  0000                     _B2CON	set	3648
   355  0000                     _B3CON	set	3664
   356  0000                     _B4CON	set	3680
   357  0000                     _B5CON	set	3696
   358  0000                     _RXB0CON	set	3936
   359  0000                     _RXB1CON	set	3920
   360  0000                     _RXM0SIDH	set	3864
   361  0000                     _RXM1SIDH	set	3868
   362  0000                     _TXB0CON	set	3904
   363  0000                     _TXB1CON	set	3888
   364  0000                     _TXB2CON	set	3872
   365  006D50                     __stringdata:
   366                           	opt stack 0
   367  006D50                     STR_218:
   368  006D50  20                 	db	32
   369  006D51  20                 	db	32
   370  006D52  20                 	db	32
   371  006D53  20                 	db	32
   372  006D54  20                 	db	32
   373  006D55  20                 	db	32
   374  006D56  20                 	db	32
   375  006D57  20                 	db	32
   376  006D58  20                 	db	32
   377  006D59  46                 	db	70	;'F'
   378  006D5A  6F                 	db	111	;'o'
   379  006D5B  72                 	db	114	;'r'
   380  006D5C  6D                 	db	109	;'m'
   381  006D5D  61                 	db	97	;'a'
   382  006D5E  74                 	db	116	;'t'
   383  006D5F  3A                 	db	58	;':'
   384  006D60  20                 	db	32
   385  006D61  66                 	db	102	;'f'
   386  006D62  69                 	db	105	;'i'
   387  006D63  6C                 	db	108	;'l'
   388  006D64  74                 	db	116	;'t'
   389  006D65  65                 	db	101	;'e'
   390  006D66  72                 	db	114	;'r'
   391  006D67  20                 	db	32
   392  006D68  66                 	db	102	;'f'
   393  006D69  69                 	db	105	;'i'
   394  006D6A  6C                 	db	108	;'l'
   395  006D6B  74                 	db	116	;'t'
   396  006D6C  65                 	db	101	;'e'
   397  006D6D  72                 	db	114	;'r'
   398  006D6E  6E                 	db	110	;'n'
   399  006D6F  6F                 	db	111	;'o'
   400  006D70  2C                 	db	44
   401  006D71  70                 	db	112	;'p'
   402  006D72  72                 	db	114	;'r'
   403  006D73  69                 	db	105	;'i'
   404  006D74  6F                 	db	111	;'o'
   405  006D75  2C                 	db	44
   406  006D76  63                 	db	99	;'c'
   407  006D77  6C                 	db	108	;'l'
   408  006D78  61                 	db	97	;'a'
   409  006D79  73                 	db	115	;'s'
   410  006D7A  73                 	db	115	;'s'
   411  006D7B  2C                 	db	44
   412  006D7C  74                 	db	116	;'t'
   413  006D7D  79                 	db	121	;'y'
   414  006D7E  70                 	db	112	;'p'
   415  006D7F  65                 	db	101	;'e'
   416  006D80  2C                 	db	44
   417  006D81  6E                 	db	110	;'n'
   418  006D82  6F                 	db	111	;'o'
   419  006D83  64                 	db	100	;'d'
   420  006D84  65                 	db	101	;'e'
   421  006D85  69                 	db	105	;'i'
   422  006D86  64                 	db	100	;'d'
   423  006D87  20                 	db	32
   424  006D88  20                 	db	32
   425  006D89  28                 	db	40
   426  006D8A  66                 	db	102	;'f'
   427  006D8B  69                 	db	105	;'i'
   428  006D8C  6C                 	db	108	;'l'
   429  006D8D  74                 	db	116	;'t'
   430  006D8E  65                 	db	101	;'e'
   431  006D8F  72                 	db	114	;'r'
   432  006D90  6E                 	db	110	;'n'
   433  006D91  6F                 	db	111	;'o'
   434  006D92  20                 	db	32
   435  006D93  3D                 	db	61	;'='
   436  006D94  20                 	db	32
   437  006D95  30                 	db	48	;'0'
   438  006D96  2D                 	db	45
   439  006D97  31                 	db	49	;'1'
   440  006D98  35                 	db	53	;'5'
   441  006D99  29                 	db	41
   442  006D9A  2E                 	db	46
   443  006D9B  0D                 	db	13
   444  006D9C  0A                 	db	10
   445  006D9D  00                 	db	0
   446  006D9E                     STR_216:
   447  006D9E  49                 	db	73	;'I'
   448  006D9F  4E                 	db	78	;'N'
   449  006DA0  46                 	db	70	;'F'
   450  006DA1  4F                 	db	79	;'O'
   451  006DA2  20                 	db	32
   452  006DA3  2D                 	db	45
   453  006DA4  20                 	db	32
   454  006DA5  47                 	db	71	;'G'
   455  006DA6  65                 	db	101	;'e'
   456  006DA7  74                 	db	116	;'t'
   457  006DA8  20                 	db	32
   458  006DA9  69                 	db	105	;'i'
   459  006DAA  6E                 	db	110	;'n'
   460  006DAB  66                 	db	102	;'f'
   461  006DAC  6F                 	db	111	;'o'
   462  006DAD  20                 	db	32
   463  006DAE  61                 	db	97	;'a'
   464  006DAF  62                 	db	98	;'b'
   465  006DB0  6F                 	db	111	;'o'
   466  006DB1  75                 	db	117	;'u'
   467  006DB2  74                 	db	116	;'t'
   468  006DB3  20                 	db	32
   469  006DB4  61                 	db	97	;'a'
   470  006DB5  6E                 	db	110	;'n'
   471  006DB6  20                 	db	32
   472  006DB7  65                 	db	101	;'e'
   473  006DB8  78                 	db	120	;'x'
   474  006DB9  69                 	db	105	;'i'
   475  006DBA  73                 	db	115	;'s'
   476  006DBB  74                 	db	116	;'t'
   477  006DBC  65                 	db	101	;'e'
   478  006DBD  6E                 	db	110	;'n'
   479  006DBE  74                 	db	116	;'t'
   480  006DBF  20                 	db	32
   481  006DC0  6E                 	db	110	;'n'
   482  006DC1  6F                 	db	111	;'o'
   483  006DC2  64                 	db	100	;'d'
   484  006DC3  65                 	db	101	;'e'
   485  006DC4  20                 	db	32
   486  006DC5  6F                 	db	111	;'o'
   487  006DC6  6E                 	db	110	;'n'
   488  006DC7  20                 	db	32
   489  006DC8  74                 	db	116	;'t'
   490  006DC9  68                 	db	104	;'h'
   491  006DCA  65                 	db	101	;'e'
   492  006DCB  20                 	db	32
   493  006DCC  62                 	db	98	;'b'
   494  006DCD  75                 	db	117	;'u'
   495  006DCE  73                 	db	115	;'s'
   496  006DCF  20                 	db	32
   497  006DD0  28                 	db	40
   498  006DD1  46                 	db	70	;'F'
   499  006DD2  6F                 	db	111	;'o'
   500  006DD3  72                 	db	114	;'r'
   501  006DD4  6D                 	db	109	;'m'
   502  006DD5  61                 	db	97	;'a'
   503  006DD6  74                 	db	116	;'t'
   504  006DD7  3A                 	db	58	;':'
   505  006DD8  20                 	db	32
   506  006DD9  69                 	db	105	;'i'
   507  006DDA  6E                 	db	110	;'n'
   508  006DDB  66                 	db	102	;'f'
   509  006DDC  6F                 	db	111	;'o'
   510  006DDD  20                 	db	32
   511  006DDE  6E                 	db	110	;'n'
   512  006DDF  69                 	db	105	;'i'
   513  006DE0  63                 	db	99	;'c'
   514  006DE1  6B                 	db	107	;'k'
   515  006DE2  6E                 	db	110	;'n'
   516  006DE3  61                 	db	97	;'a'
   517  006DE4  6D                 	db	109	;'m'
   518  006DE5  65                 	db	101	;'e'
   519  006DE6  29                 	db	41
   520  006DE7  2E                 	db	46
   521  006DE8  0D                 	db	13
   522  006DE9  0A                 	db	10
   523  006DEA  00                 	db	0
   524  006DEB                     STR_220:
   525  006DEB  20                 	db	32
   526  006DEC  20                 	db	32
   527  006DED  20                 	db	32
   528  006DEE  20                 	db	32
   529  006DEF  20                 	db	32
   530  006DF0  20                 	db	32
   531  006DF1  20                 	db	32
   532  006DF2  46                 	db	70	;'F'
   533  006DF3  6F                 	db	111	;'o'
   534  006DF4  72                 	db	114	;'r'
   535  006DF5  6D                 	db	109	;'m'
   536  006DF6  61                 	db	97	;'a'
   537  006DF7  74                 	db	116	;'t'
   538  006DF8  3A                 	db	58	;':'
   539  006DF9  20                 	db	32
   540  006DFA  6D                 	db	109	;'m'
   541  006DFB  61                 	db	97	;'a'
   542  006DFC  73                 	db	115	;'s'
   543  006DFD  6B                 	db	107	;'k'
   544  006DFE  20                 	db	32
   545  006DFF  6D                 	db	109	;'m'
   546  006E00  61                 	db	97	;'a'
   547  006E01  73                 	db	115	;'s'
   548  006E02  6B                 	db	107	;'k'
   549  006E03  6E                 	db	110	;'n'
   550  006E04  6F                 	db	111	;'o'
   551  006E05  2C                 	db	44
   552  006E06  70                 	db	112	;'p'
   553  006E07  72                 	db	114	;'r'
   554  006E08  69                 	db	105	;'i'
   555  006E09  6F                 	db	111	;'o'
   556  006E0A  2C                 	db	44
   557  006E0B  63                 	db	99	;'c'
   558  006E0C  6C                 	db	108	;'l'
   559  006E0D  61                 	db	97	;'a'
   560  006E0E  73                 	db	115	;'s'
   561  006E0F  73                 	db	115	;'s'
   562  006E10  2C                 	db	44
   563  006E11  74                 	db	116	;'t'
   564  006E12  79                 	db	121	;'y'
   565  006E13  70                 	db	112	;'p'
   566  006E14  65                 	db	101	;'e'
   567  006E15  2C                 	db	44
   568  006E16  6E                 	db	110	;'n'
   569  006E17  6F                 	db	111	;'o'
   570  006E18  64                 	db	100	;'d'
   571  006E19  65                 	db	101	;'e'
   572  006E1A  69                 	db	105	;'i'
   573  006E1B  64                 	db	100	;'d'
   574  006E1C  20                 	db	32
   575  006E1D  28                 	db	40
   576  006E1E  6D                 	db	109	;'m'
   577  006E1F  61                 	db	97	;'a'
   578  006E20  73                 	db	115	;'s'
   579  006E21  6B                 	db	107	;'k'
   580  006E22  6E                 	db	110	;'n'
   581  006E23  6F                 	db	111	;'o'
   582  006E24  20                 	db	32
   583  006E25  3D                 	db	61	;'='
   584  006E26  20                 	db	32
   585  006E27  30                 	db	48	;'0'
   586  006E28  20                 	db	32
   587  006E29  6F                 	db	111	;'o'
   588  006E2A  72                 	db	114	;'r'
   589  006E2B  20                 	db	32
   590  006E2C  31                 	db	49	;'1'
   591  006E2D  29                 	db	41
   592  006E2E  2E                 	db	46
   593  006E2F  0D                 	db	13
   594  006E30  0A                 	db	10
   595  006E31  00                 	db	0
   596  006E32                     STR_214:
   597  006E32  52                 	db	82	;'R'
   598  006E33  52                 	db	82	;'R'
   599  006E34  45                 	db	69	;'E'
   600  006E35  47                 	db	71	;'G'
   601  006E36  20                 	db	32
   602  006E37  2D                 	db	45
   603  006E38  20                 	db	32
   604  006E39  52                 	db	82	;'R'
   605  006E3A  65                 	db	101	;'e'
   606  006E3B  61                 	db	97	;'a'
   607  006E3C  64                 	db	100	;'d'
   608  006E3D  20                 	db	32
   609  006E3E  72                 	db	114	;'r'
   610  006E3F  65                 	db	101	;'e'
   611  006E40  67                 	db	103	;'g'
   612  006E41  69                 	db	105	;'i'
   613  006E42  73                 	db	115	;'s'
   614  006E43  74                 	db	116	;'t'
   615  006E44  65                 	db	101	;'e'
   616  006E45  72                 	db	114	;'r'
   617  006E46  28                 	db	40
   618  006E47  73                 	db	115	;'s'
   619  006E48  29                 	db	41
   620  006E49  20                 	db	32
   621  006E4A  6F                 	db	111	;'o'
   622  006E4B  66                 	db	102	;'f'
   623  006E4C  20                 	db	32
   624  006E4D  6E                 	db	110	;'n'
   625  006E4E  6F                 	db	111	;'o'
   626  006E4F  64                 	db	100	;'d'
   627  006E50  65                 	db	101	;'e'
   628  006E51  20                 	db	32
   629  006E52  28                 	db	40
   630  006E53  46                 	db	70	;'F'
   631  006E54  6F                 	db	111	;'o'
   632  006E55  72                 	db	114	;'r'
   633  006E56  6D                 	db	109	;'m'
   634  006E57  61                 	db	97	;'a'
   635  006E58  74                 	db	116	;'t'
   636  006E59  3A                 	db	58	;':'
   637  006E5A  20                 	db	32
   638  006E5B  72                 	db	114	;'r'
   639  006E5C  72                 	db	114	;'r'
   640  006E5D  65                 	db	101	;'e'
   641  006E5E  67                 	db	103	;'g'
   642  006E5F  20                 	db	32
   643  006E60  5B                 	db	91	;'['
   644  006E61  70                 	db	112	;'p'
   645  006E62  61                 	db	97	;'a'
   646  006E63  67                 	db	103	;'g'
   647  006E64  65                 	db	101	;'e'
   648  006E65  3A                 	db	58	;':'
   649  006E66  5D                 	db	93	;']'
   650  006E67  72                 	db	114	;'r'
   651  006E68  65                 	db	101	;'e'
   652  006E69  67                 	db	103	;'g'
   653  006E6A  20                 	db	32
   654  006E6B  5B                 	db	91	;'['
   655  006E6C  63                 	db	99	;'c'
   656  006E6D  6F                 	db	111	;'o'
   657  006E6E  75                 	db	117	;'u'
   658  006E6F  6E                 	db	110	;'n'
   659  006E70  74                 	db	116	;'t'
   660  006E71  5D                 	db	93	;']'
   661  006E72  29                 	db	41
   662  006E73  2E                 	db	46
   663  006E74  0D                 	db	13
   664  006E75  0A                 	db	10
   665  006E76  00                 	db	0
   666  006E77                     STR_229:
   667  006E77  2D                 	db	45
   668  006E78  2D                 	db	45
   669  006E79  2D                 	db	45
   670  006E7A  2D                 	db	45
   671  006E7B  2D                 	db	45
   672  006E7C  2D                 	db	45
   673  006E7D  2D                 	db	45
   674  006E7E  2D                 	db	45
   675  006E7F  2D                 	db	45
   676  006E80  2D                 	db	45
   677  006E81  2D                 	db	45
   678  006E82  2D                 	db	45
   679  006E83  2D                 	db	45
   680  006E84  2D                 	db	45
   681  006E85  2D                 	db	45
   682  006E86  2D                 	db	45
   683  006E87  2D                 	db	45
   684  006E88  2D                 	db	45
   685  006E89  2D                 	db	45
   686  006E8A  2D                 	db	45
   687  006E8B  2D                 	db	45
   688  006E8C  2D                 	db	45
   689  006E8D  2D                 	db	45
   690  006E8E  2D                 	db	45
   691  006E8F  2D                 	db	45
   692  006E90  2D                 	db	45
   693  006E91  2D                 	db	45
   694  006E92  2D                 	db	45
   695  006E93  2D                 	db	45
   696  006E94  2D                 	db	45
   697  006E95  2D                 	db	45
   698  006E96  2D                 	db	45
   699  006E97  2D                 	db	45
   700  006E98  2D                 	db	45
   701  006E99  2D                 	db	45
   702  006E9A  2D                 	db	45
   703  006E9B  2D                 	db	45
   704  006E9C  2D                 	db	45
   705  006E9D  2D                 	db	45
   706  006E9E  2D                 	db	45
   707  006E9F  2D                 	db	45
   708  006EA0  2D                 	db	45
   709  006EA1  2D                 	db	45
   710  006EA2  2D                 	db	45
   711  006EA3  2D                 	db	45
   712  006EA4  2D                 	db	45
   713  006EA5  2D                 	db	45
   714  006EA6  2D                 	db	45
   715  006EA7  2D                 	db	45
   716  006EA8  2D                 	db	45
   717  006EA9  2D                 	db	45
   718  006EAA  2D                 	db	45
   719  006EAB  2D                 	db	45
   720  006EAC  2D                 	db	45
   721  006EAD  2D                 	db	45
   722  006EAE  2D                 	db	45
   723  006EAF  2D                 	db	45
   724  006EB0  2D                 	db	45
   725  006EB1  2D                 	db	45
   726  006EB2  2D                 	db	45
   727  006EB3  2D                 	db	45
   728  006EB4  2D                 	db	45
   729  006EB5  2D                 	db	45
   730  006EB6  2D                 	db	45
   731  006EB7  0D                 	db	13
   732  006EB8  0A                 	db	10
   733  006EB9  00                 	db	0
   734  006EBA                     STR_224:
   735  006EBA  20                 	db	32
   736  006EBB  20                 	db	32
   737  006EBC  20                 	db	32
   738  006EBD  20                 	db	32
   739  006EBE  52                 	db	82	;'R'
   740  006EBF  57                 	db	87	;'W'
   741  006EC0  54                 	db	84	;'T'
   742  006EC1  49                 	db	73	;'I'
   743  006EC2  4D                 	db	77	;'M'
   744  006EC3  45                 	db	69	;'E'
   745  006EC4  4F                 	db	79	;'O'
   746  006EC5  55                 	db	85	;'U'
   747  006EC6  54                 	db	84	;'T'
   748  006EC7  20                 	db	32
   749  006EC8  2D                 	db	45
   750  006EC9  20                 	db	32
   751  006ECA  53                 	db	83	;'S'
   752  006ECB  65                 	db	101	;'e'
   753  006ECC  74                 	db	116	;'t'
   754  006ECD  20                 	db	32
   755  006ECE  72                 	db	114	;'r'
   756  006ECF  65                 	db	101	;'e'
   757  006ED0  67                 	db	103	;'g'
   758  006ED1  69                 	db	105	;'i'
   759  006ED2  73                 	db	115	;'s'
   760  006ED3  74                 	db	116	;'t'
   761  006ED4  65                 	db	101	;'e'
   762  006ED5  72                 	db	114	;'r'
   763  006ED6  20                 	db	32
   764  006ED7  72                 	db	114	;'r'
   765  006ED8  65                 	db	101	;'e'
   766  006ED9  61                 	db	97	;'a'
   767  006EDA  64                 	db	100	;'d'
   768  006EDB  2F                 	db	47
   769  006EDC  77                 	db	119	;'w'
   770  006EDD  72                 	db	114	;'r'
   771  006EDE  69                 	db	105	;'i'
   772  006EDF  74                 	db	116	;'t'
   773  006EE0  65                 	db	101	;'e'
   774  006EE1  20                 	db	32
   775  006EE2  74                 	db	116	;'t'
   776  006EE3  69                 	db	105	;'i'
   777  006EE4  6D                 	db	109	;'m'
   778  006EE5  65                 	db	101	;'e'
   779  006EE6  6F                 	db	111	;'o'
   780  006EE7  75                 	db	117	;'u'
   781  006EE8  74                 	db	116	;'t'
   782  006EE9  2E                 	db	46
   783  006EEA  20                 	db	32
   784  006EEB  44                 	db	68	;'D'
   785  006EEC  65                 	db	101	;'e'
   786  006EED  66                 	db	102	;'f'
   787  006EEE  61                 	db	97	;'a'
   788  006EEF  75                 	db	117	;'u'
   789  006EF0  6C                 	db	108	;'l'
   790  006EF1  74                 	db	116	;'t'
   791  006EF2  3D                 	db	61	;'='
   792  006EF3  31                 	db	49	;'1'
   793  006EF4  30                 	db	48	;'0'
   794  006EF5  20                 	db	32
   795  006EF6  6D                 	db	109	;'m'
   796  006EF7  73                 	db	115	;'s'
   797  006EF8  20                 	db	32
   798  006EF9  2E                 	db	46
   799  006EFA  0D                 	db	13
   800  006EFB  0A                 	db	10
   801  006EFC  00                 	db	0
   802  006EFD                     STR_215:
   803  006EFD  57                 	db	87	;'W'
   804  006EFE  52                 	db	82	;'R'
   805  006EFF  45                 	db	69	;'E'
   806  006F00  47                 	db	71	;'G'
   807  006F01  20                 	db	32
   808  006F02  2D                 	db	45
   809  006F03  20                 	db	32
   810  006F04  57                 	db	87	;'W'
   811  006F05  72                 	db	114	;'r'
   812  006F06  69                 	db	105	;'i'
   813  006F07  74                 	db	116	;'t'
   814  006F08  65                 	db	101	;'e'
   815  006F09  20                 	db	32
   816  006F0A  72                 	db	114	;'r'
   817  006F0B  65                 	db	101	;'e'
   818  006F0C  67                 	db	103	;'g'
   819  006F0D  69                 	db	105	;'i'
   820  006F0E  73                 	db	115	;'s'
   821  006F0F  74                 	db	116	;'t'
   822  006F10  65                 	db	101	;'e'
   823  006F11  72                 	db	114	;'r'
   824  006F12  20                 	db	32
   825  006F13  6F                 	db	111	;'o'
   826  006F14  66                 	db	102	;'f'
   827  006F15  20                 	db	32
   828  006F16  6E                 	db	110	;'n'
   829  006F17  6F                 	db	111	;'o'
   830  006F18  64                 	db	100	;'d'
   831  006F19  65                 	db	101	;'e'
   832  006F1A  20                 	db	32
   833  006F1B  28                 	db	40
   834  006F1C  46                 	db	70	;'F'
   835  006F1D  6F                 	db	111	;'o'
   836  006F1E  72                 	db	114	;'r'
   837  006F1F  6D                 	db	109	;'m'
   838  006F20  61                 	db	97	;'a'
   839  006F21  74                 	db	116	;'t'
   840  006F22  3A                 	db	58	;':'
   841  006F23  20                 	db	32
   842  006F24  77                 	db	119	;'w'
   843  006F25  72                 	db	114	;'r'
   844  006F26  65                 	db	101	;'e'
   845  006F27  67                 	db	103	;'g'
   846  006F28  20                 	db	32
   847  006F29  5B                 	db	91	;'['
   848  006F2A  70                 	db	112	;'p'
   849  006F2B  61                 	db	97	;'a'
   850  006F2C  67                 	db	103	;'g'
   851  006F2D  65                 	db	101	;'e'
   852  006F2E  3A                 	db	58	;':'
   853  006F2F  5D                 	db	93	;']'
   854  006F30  72                 	db	114	;'r'
   855  006F31  65                 	db	101	;'e'
   856  006F32  67                 	db	103	;'g'
   857  006F33  20                 	db	32
   858  006F34  63                 	db	99	;'c'
   859  006F35  6F                 	db	111	;'o'
   860  006F36  6E                 	db	110	;'n'
   861  006F37  74                 	db	116	;'t'
   862  006F38  65                 	db	101	;'e'
   863  006F39  6E                 	db	110	;'n'
   864  006F3A  74                 	db	116	;'t'
   865  006F3B  29                 	db	41
   866  006F3C  2E                 	db	46
   867  006F3D  0D                 	db	13
   868  006F3E  0A                 	db	10
   869  006F3F  00                 	db	0
   870  006F40                     STR_84:
   871  006F40  2D                 	db	45
   872  006F41  45                 	db	69	;'E'
   873  006F42  52                 	db	82	;'R'
   874  006F43  52                 	db	82	;'R'
   875  006F44  4F                 	db	79	;'O'
   876  006F45  52                 	db	82	;'R'
   877  006F46  20                 	db	32
   878  006F47  2D                 	db	45
   879  006F48  20                 	db	32
   880  006F49  46                 	db	70	;'F'
   881  006F4A  69                 	db	105	;'i'
   882  006F4B  6C                 	db	108	;'l'
   883  006F4C  74                 	db	116	;'t'
   884  006F4D  65                 	db	101	;'e'
   885  006F4E  72                 	db	114	;'r'
   886  006F4F  20                 	db	32
   887  006F50  6E                 	db	110	;'n'
   888  006F51  75                 	db	117	;'u'
   889  006F52  6D                 	db	109	;'m'
   890  006F53  62                 	db	98	;'b'
   891  006F54  65                 	db	101	;'e'
   892  006F55  72                 	db	114	;'r'
   893  006F56  20                 	db	32
   894  006F57  63                 	db	99	;'c'
   895  006F58  61                 	db	97	;'a'
   896  006F59  6E                 	db	110	;'n'
   897  006F5A  20                 	db	32
   898  006F5B  6F                 	db	111	;'o'
   899  006F5C  6E                 	db	110	;'n'
   900  006F5D  6C                 	db	108	;'l'
   901  006F5E  79                 	db	121	;'y'
   902  006F5F  20                 	db	32
   903  006F60  62                 	db	98	;'b'
   904  006F61  65                 	db	101	;'e'
   905  006F62  20                 	db	32
   906  006F63  73                 	db	115	;'s'
   907  006F64  65                 	db	101	;'e'
   908  006F65  74                 	db	116	;'t'
   909  006F66  20                 	db	32
   910  006F67  74                 	db	116	;'t'
   911  006F68  6F                 	db	111	;'o'
   912  006F69  20                 	db	32
   913  006F6A  61                 	db	97	;'a'
   914  006F6B  20                 	db	32
   915  006F6C  76                 	db	118	;'v'
   916  006F6D  61                 	db	97	;'a'
   917  006F6E  6C                 	db	108	;'l'
   918  006F6F  75                 	db	117	;'u'
   919  006F70  65                 	db	101	;'e'
   920  006F71  20                 	db	32
   921  006F72  62                 	db	98	;'b'
   922  006F73  65                 	db	101	;'e'
   923  006F74  74                 	db	116	;'t'
   924  006F75  77                 	db	119	;'w'
   925  006F76  65                 	db	101	;'e'
   926  006F77  65                 	db	101	;'e'
   927  006F78  6E                 	db	110	;'n'
   928  006F79  20                 	db	32
   929  006F7A  30                 	db	48	;'0'
   930  006F7B  2D                 	db	45
   931  006F7C  31                 	db	49	;'1'
   932  006F7D  35                 	db	53	;'5'
   933  006F7E  2E                 	db	46
   934  006F7F  0D                 	db	13
   935  006F80  0A                 	db	10
   936  006F81  00                 	db	0
   937  006F82                     STR_227:
   938  006F82  20                 	db	32
   939  006F83  20                 	db	32
   940  006F84  20                 	db	32
   941  006F85  20                 	db	32
   942  006F86  4D                 	db	77	;'M'
   943  006F87  4F                 	db	79	;'O'
   944  006F88  44                 	db	68	;'D'
   945  006F89  45                 	db	69	;'E'
   946  006F8A  20                 	db	32
   947  006F8B  2D                 	db	45
   948  006F8C  20                 	db	32
   949  006F8D  53                 	db	83	;'S'
   950  006F8E  65                 	db	101	;'e'
   951  006F8F  74                 	db	116	;'t'
   952  006F90  20                 	db	32
   953  006F91  61                 	db	97	;'a'
   954  006F92  64                 	db	100	;'d'
   955  006F93  61                 	db	97	;'a'
   956  006F94  70                 	db	112	;'p'
   957  006F95  74                 	db	116	;'t'
   958  006F96  65                 	db	101	;'e'
   959  006F97  72                 	db	114	;'r'
   960  006F98  20                 	db	32
   961  006F99  6D                 	db	109	;'m'
   962  006F9A  6F                 	db	111	;'o'
   963  006F9B  64                 	db	100	;'d'
   964  006F9C  65                 	db	101	;'e'
   965  006F9D  20                 	db	32
   966  006F9E  74                 	db	116	;'t'
   967  006F9F  68                 	db	104	;'h'
   968  006FA0  61                 	db	97	;'a'
   969  006FA1  74                 	db	116	;'t'
   970  006FA2  20                 	db	32
   971  006FA3  73                 	db	115	;'s'
   972  006FA4  68                 	db	104	;'h'
   973  006FA5  6F                 	db	111	;'o'
   974  006FA6  75                 	db	117	;'u'
   975  006FA7  6C                 	db	108	;'l'
   976  006FA8  64                 	db	100	;'d'
   977  006FA9  20                 	db	32
   978  006FAA  62                 	db	98	;'b'
   979  006FAB  65                 	db	101	;'e'
   980  006FAC  20                 	db	32
   981  006FAD  75                 	db	117	;'u'
   982  006FAE  73                 	db	115	;'s'
   983  006FAF  65                 	db	101	;'e'
   984  006FB0  64                 	db	100	;'d'
   985  006FB1  20                 	db	32
   986  006FB2  6F                 	db	111	;'o'
   987  006FB3  6E                 	db	110	;'n'
   988  006FB4  20                 	db	32
   989  006FB5  73                 	db	115	;'s'
   990  006FB6  74                 	db	116	;'t'
   991  006FB7  61                 	db	97	;'a'
   992  006FB8  72                 	db	114	;'r'
   993  006FB9  74                 	db	116	;'t'
   994  006FBA  75                 	db	117	;'u'
   995  006FBB  70                 	db	112	;'p'
   996  006FBC  2E                 	db	46
   997  006FBD  0D                 	db	13
   998  006FBE  0A                 	db	10
   999  006FBF  00                 	db	0
  1000  006FC0                     STR_187:
  1001  006FC0  54                 	db	84	;'T'
  1002  006FC1  72                 	db	114	;'r'
  1003  006FC2  61                 	db	97	;'a'
  1004  006FC3  6E                 	db	110	;'n'
  1005  006FC4  73                 	db	115	;'s'
  1006  006FC5  6D                 	db	109	;'m'
  1007  006FC6  69                 	db	105	;'i'
  1008  006FC7  74                 	db	116	;'t'
  1009  006FC8  74                 	db	116	;'t'
  1010  006FC9  65                 	db	101	;'e'
  1011  006FCA  72                 	db	114	;'r'
  1012  006FCB  20                 	db	32
  1013  006FCC  69                 	db	105	;'i'
  1014  006FCD  6E                 	db	110	;'n'
  1015  006FCE  20                 	db	32
  1016  006FCF  45                 	db	69	;'E'
  1017  006FD0  72                 	db	114	;'r'
  1018  006FD1  72                 	db	114	;'r'
  1019  006FD2  6F                 	db	111	;'o'
  1020  006FD3  72                 	db	114	;'r'
  1021  006FD4  20                 	db	32
  1022  006FD5  53                 	db	83	;'S'
  1023  006FD6  74                 	db	116	;'t'
  1024  006FD7  61                 	db	97	;'a'
  1025  006FD8  74                 	db	116	;'t'
  1026  006FD9  65                 	db	101	;'e'
  1027  006FDA  20                 	db	32
  1028  006FDB  57                 	db	87	;'W'
  1029  006FDC  61                 	db	97	;'a'
  1030  006FDD  72                 	db	114	;'r'
  1031  006FDE  6E                 	db	110	;'n'
  1032  006FDF  69                 	db	105	;'i'
  1033  006FE0  6E                 	db	110	;'n'
  1034  006FE1  67                 	db	103	;'g'
  1035  006FE2  20                 	db	32
  1036  006FE3  28                 	db	40
  1037  006FE4  31                 	db	49	;'1'
  1038  006FE5  32                 	db	50	;'2'
  1039  006FE6  38                 	db	56	;'8'
  1040  006FE7  20                 	db	32
  1041  006FE8  3E                 	db	62	;'>'
  1042  006FE9  20                 	db	32
  1043  006FEA  54                 	db	84	;'T'
  1044  006FEB  45                 	db	69	;'E'
  1045  006FEC  52                 	db	82	;'R'
  1046  006FED  52                 	db	82	;'R'
  1047  006FEE  43                 	db	67	;'C'
  1048  006FEF  4E                 	db	78	;'N'
  1049  006FF0  54                 	db	84	;'T'
  1050  006FF1  20                 	db	32
  1051  006FF2  3F                 	db	63	;'?'
  1052  006FF3  20                 	db	32
  1053  006FF4  39                 	db	57	;'9'
  1054  006FF5  36                 	db	54	;'6'
  1055  006FF6  29                 	db	41
  1056  006FF7  0D                 	db	13
  1057  006FF8  0A                 	db	10
  1058  006FF9  00                 	db	0
  1059  006FFA                     STR_189:
  1060  006FFA  54                 	db	84	;'T'
  1061  006FFB  72                 	db	114	;'r'
  1062  006FFC  61                 	db	97	;'a'
  1063  006FFD  6E                 	db	110	;'n'
  1064  006FFE  73                 	db	115	;'s'
  1065  006FFF  6D                 	db	109	;'m'
  1066  007000  69                 	db	105	;'i'
  1067  007001  74                 	db	116	;'t'
  1068  007002  74                 	db	116	;'t'
  1069  007003  65                 	db	101	;'e'
  1070  007004  72                 	db	114	;'r'
  1071  007005  20                 	db	32
  1072  007006  69                 	db	105	;'i'
  1073  007007  6E                 	db	110	;'n'
  1074  007008  20                 	db	32
  1075  007009  45                 	db	69	;'E'
  1076  00700A  72                 	db	114	;'r'
  1077  00700B  72                 	db	114	;'r'
  1078  00700C  6F                 	db	111	;'o'
  1079  00700D  72                 	db	114	;'r'
  1080  00700E  20                 	db	32
  1081  00700F  53                 	db	83	;'S'
  1082  007010  74                 	db	116	;'t'
  1083  007011  61                 	db	97	;'a'
  1084  007012  74                 	db	116	;'t'
  1085  007013  65                 	db	101	;'e'
  1086  007014  20                 	db	32
  1087  007015  42                 	db	66	;'B'
  1088  007016  75                 	db	117	;'u'
  1089  007017  73                 	db	115	;'s'
  1090  007018  20                 	db	32
  1091  007019  50                 	db	80	;'P'
  1092  00701A  61                 	db	97	;'a'
  1093  00701B  73                 	db	115	;'s'
  1094  00701C  73                 	db	115	;'s'
  1095  00701D  69                 	db	105	;'i'
  1096  00701E  76                 	db	118	;'v'
  1097  00701F  65                 	db	101	;'e'
  1098  007020  20                 	db	32
  1099  007021  28                 	db	40
  1100  007022  54                 	db	84	;'T'
  1101  007023  45                 	db	69	;'E'
  1102  007024  52                 	db	82	;'R'
  1103  007025  52                 	db	82	;'R'
  1104  007026  43                 	db	67	;'C'
  1105  007027  4E                 	db	78	;'N'
  1106  007028  54                 	db	84	;'T'
  1107  007029  20                 	db	32
  1108  00702A  3F                 	db	63	;'?'
  1109  00702B  20                 	db	32
  1110  00702C  31                 	db	49	;'1'
  1111  00702D  32                 	db	50	;'2'
  1112  00702E  38                 	db	56	;'8'
  1113  00702F  29                 	db	41
  1114  007030  0D                 	db	13
  1115  007031  0A                 	db	10
  1116  007032  00                 	db	0
  1117  007033                     STR_208:
  1118  007033  20                 	db	32
  1119  007034  20                 	db	32
  1120  007035  20                 	db	32
  1121  007036  20                 	db	32
  1122  007037  20                 	db	32
  1123  007038  46                 	db	70	;'F'
  1124  007039  6F                 	db	111	;'o'
  1125  00703A  72                 	db	114	;'r'
  1126  00703B  6D                 	db	109	;'m'
  1127  00703C  61                 	db	97	;'a'
  1128  00703D  74                 	db	116	;'t'
  1129  00703E  3A                 	db	58	;':'
  1130  00703F  20                 	db	32
  1131  007040  70                 	db	112	;'p'
  1132  007041  72                 	db	114	;'r'
  1133  007042  69                 	db	105	;'i'
  1134  007043  6F                 	db	111	;'o'
  1135  007044  72                 	db	114	;'r'
  1136  007045  69                 	db	105	;'i'
  1137  007046  74                 	db	116	;'t'
  1138  007047  79                 	db	121	;'y'
  1139  007048  2C                 	db	44
  1140  007049  63                 	db	99	;'c'
  1141  00704A  6C                 	db	108	;'l'
  1142  00704B  61                 	db	97	;'a'
  1143  00704C  73                 	db	115	;'s'
  1144  00704D  73                 	db	115	;'s'
  1145  00704E  2C                 	db	44
  1146  00704F  74                 	db	116	;'t'
  1147  007050  79                 	db	121	;'y'
  1148  007051  70                 	db	112	;'p'
  1149  007052  65                 	db	101	;'e'
  1150  007053  2C                 	db	44
  1151  007054  6E                 	db	110	;'n'
  1152  007055  6F                 	db	111	;'o'
  1153  007056  64                 	db	100	;'d'
  1154  007057  65                 	db	101	;'e'
  1155  007058  69                 	db	105	;'i'
  1156  007059  64                 	db	100	;'d'
  1157  00705A  2C                 	db	44
  1158  00705B  63                 	db	99	;'c'
  1159  00705C  6F                 	db	111	;'o'
  1160  00705D  75                 	db	117	;'u'
  1161  00705E  6E                 	db	110	;'n'
  1162  00705F  74                 	db	116	;'t'
  1163  007060  2C                 	db	44
  1164  007061  64                 	db	100	;'d'
  1165  007062  61                 	db	97	;'a'
  1166  007063  74                 	db	116	;'t'
  1167  007064  61                 	db	97	;'a'
  1168  007065  2C                 	db	44
  1169  007066  2C                 	db	44
  1170  007067  2C                 	db	44
  1171  007068  0D                 	db	13
  1172  007069  0A                 	db	10
  1173  00706A  00                 	db	0
  1174  00706B                     STR_194:
  1175  00706B  52                 	db	82	;'R'
  1176  00706C  65                 	db	101	;'e'
  1177  00706D  63                 	db	99	;'c'
  1178  00706E  65                 	db	101	;'e'
  1179  00706F  69                 	db	105	;'i'
  1180  007070  76                 	db	118	;'v'
  1181  007071  65                 	db	101	;'e'
  1182  007072  72                 	db	114	;'r'
  1183  007073  20                 	db	32
  1184  007074  69                 	db	105	;'i'
  1185  007075  6E                 	db	110	;'n'
  1186  007076  20                 	db	32
  1187  007077  45                 	db	69	;'E'
  1188  007078  72                 	db	114	;'r'
  1189  007079  72                 	db	114	;'r'
  1190  00707A  6F                 	db	111	;'o'
  1191  00707B  72                 	db	114	;'r'
  1192  00707C  20                 	db	32
  1193  00707D  53                 	db	83	;'S'
  1194  00707E  74                 	db	116	;'t'
  1195  00707F  61                 	db	97	;'a'
  1196  007080  74                 	db	116	;'t'
  1197  007081  65                 	db	101	;'e'
  1198  007082  20                 	db	32
  1199  007083  57                 	db	87	;'W'
  1200  007084  61                 	db	97	;'a'
  1201  007085  72                 	db	114	;'r'
  1202  007086  6E                 	db	110	;'n'
  1203  007087  69                 	db	105	;'i'
  1204  007088  6E                 	db	110	;'n'
  1205  007089  67                 	db	103	;'g'
  1206  00708A  20                 	db	32
  1207  00708B  28                 	db	40
  1208  00708C  31                 	db	49	;'1'
  1209  00708D  32                 	db	50	;'2'
  1210  00708E  38                 	db	56	;'8'
  1211  00708F  20                 	db	32
  1212  007090  3E                 	db	62	;'>'
  1213  007091  20                 	db	32
  1214  007092  52                 	db	82	;'R'
  1215  007093  45                 	db	69	;'E'
  1216  007094  52                 	db	82	;'R'
  1217  007095  52                 	db	82	;'R'
  1218  007096  43                 	db	67	;'C'
  1219  007097  4E                 	db	78	;'N'
  1220  007098  54                 	db	84	;'T'
  1221  007099  20                 	db	32
  1222  00709A  3F                 	db	63	;'?'
  1223  00709B  20                 	db	32
  1224  00709C  39                 	db	57	;'9'
  1225  00709D  36                 	db	54	;'6'
  1226  00709E  29                 	db	41
  1227  00709F  0D                 	db	13
  1228  0070A0  0A                 	db	10
  1229  0070A1  00                 	db	0
  1230  0070A2                     STR_226:
  1231  0070A2  20                 	db	32
  1232  0070A3  20                 	db	32
  1233  0070A4  20                 	db	32
  1234  0070A5  20                 	db	32
  1235  0070A6  53                 	db	83	;'S'
  1236  0070A7  54                 	db	84	;'T'
  1237  0070A8  41                 	db	65	;'A'
  1238  0070A9  52                 	db	82	;'R'
  1239  0070AA  54                 	db	84	;'T'
  1240  0070AB  49                 	db	73	;'I'
  1241  0070AC  46                 	db	70	;'F'
  1242  0070AD  20                 	db	32
  1243  0070AE  2D                 	db	45
  1244  0070AF  20                 	db	32
  1245  0070B0  53                 	db	83	;'S'
  1246  0070B1  65                 	db	101	;'e'
  1247  0070B2  74                 	db	116	;'t'
  1248  0070B3  20                 	db	32
  1249  0070B4  69                 	db	105	;'i'
  1250  0070B5  6E                 	db	110	;'n'
  1251  0070B6  74                 	db	116	;'t'
  1252  0070B7  65                 	db	101	;'e'
  1253  0070B8  72                 	db	114	;'r'
  1254  0070B9  66                 	db	102	;'f'
  1255  0070BA  61                 	db	97	;'a'
  1256  0070BB  63                 	db	99	;'c'
  1257  0070BC  65                 	db	101	;'e'
  1258  0070BD  20                 	db	32
  1259  0070BE  73                 	db	115	;'s'
  1260  0070BF  74                 	db	116	;'t'
  1261  0070C0  61                 	db	97	;'a'
  1262  0070C1  74                 	db	116	;'t'
  1263  0070C2  65                 	db	101	;'e'
  1264  0070C3  20                 	db	32
  1265  0070C4  74                 	db	116	;'t'
  1266  0070C5  6F                 	db	111	;'o'
  1267  0070C6  20                 	db	32
  1268  0070C7  75                 	db	117	;'u'
  1269  0070C8  73                 	db	115	;'s'
  1270  0070C9  65                 	db	101	;'e'
  1271  0070CA  20                 	db	32
  1272  0070CB  6F                 	db	111	;'o'
  1273  0070CC  6E                 	db	110	;'n'
  1274  0070CD  20                 	db	32
  1275  0070CE  73                 	db	115	;'s'
  1276  0070CF  74                 	db	116	;'t'
  1277  0070D0  61                 	db	97	;'a'
  1278  0070D1  72                 	db	114	;'r'
  1279  0070D2  74                 	db	116	;'t'
  1280  0070D3  75                 	db	117	;'u'
  1281  0070D4  70                 	db	112	;'p'
  1282  0070D5  2E                 	db	46
  1283  0070D6  0D                 	db	13
  1284  0070D7  0A                 	db	10
  1285  0070D8  00                 	db	0
  1286  0070D9  50                 	db	80	;'P'
  1287  0070DA  72                 	db	114	;'r'
  1288  0070DB  65                 	db	101	;'e'
  1289  0070DC  73                 	db	115	;'s'
  1290  0070DD  73                 	db	115	;'s'
  1291  0070DE  20                 	db	32
  1292  0070DF  27                 	db	39
  1293  0070E0  76                 	db	118	;'v'
  1294  0070E1  27                 	db	39
  1295  0070E2  20                 	db	32
  1296  0070E3  77                 	db	119	;'w'
  1297  0070E4  69                 	db	105	;'i'
  1298  0070E5  74                 	db	116	;'t'
  1299  0070E6  68                 	db	104	;'h'
  1300  0070E7  69                 	db	105	;'i'
  1301  0070E8  6E                 	db	110	;'n'
  1302  0070E9  20                 	db	32
  1303  0070EA  74                 	db	116	;'t'
  1304  0070EB  68                 	db	104	;'h'
  1305  0070EC  72                 	db	114	;'r'
  1306  0070ED  65                 	db	101	;'e'
  1307  0070EE  65                 	db	101	;'e'
  1308  0070EF  20                 	db	32
  1309  0070F0  73                 	db	115	;'s'
  1310  0070F1  65                 	db	101	;'e'
  1311  0070F2  63                 	db	99	;'c'
  1312  0070F3  6F                 	db	111	;'o'
  1313  0070F4  6E                 	db	110	;'n'
  1314  0070F5  64                 	db	100	;'d'
  1315  0070F6  73                 	db	115	;'s'
  1316  0070F7  20                 	db	32
  1317  0070F8  74                 	db	116	;'t'
  1318  0070F9  6F                 	db	111	;'o'
  1319  0070FA  20                 	db	32
  1320  0070FB  65                 	db	101	;'e'
  1321  0070FC  6E                 	db	110	;'n'
  1322  0070FD  74                 	db	116	;'t'
  1323  0070FE  65                 	db	101	;'e'
  1324  0070FF  72                 	db	114	;'r'
  1325  007100  20                 	db	32
  1326  007101  76                 	db	118	;'v'
  1327  007102  65                 	db	101	;'e'
  1328  007103  72                 	db	114	;'r'
  1329  007104  62                 	db	98	;'b'
  1330  007105  6F                 	db	111	;'o'
  1331  007106  73                 	db	115	;'s'
  1332  007107  65                 	db	101	;'e'
  1333  007108  20                 	db	32
  1334  007109  6D                 	db	109	;'m'
  1335  00710A  6F                 	db	111	;'o'
  1336  00710B  64                 	db	100	;'d'
  1337  00710C  65                 	db	101	;'e'
  1338  00710D  0D                 	db	13
  1339  00710E  0A                 	db	10
  1340  00710F  00                 	db	0
  1341  007110                     STR_195:
  1342  007110  52                 	db	82	;'R'
  1343  007111  65                 	db	101	;'e'
  1344  007112  63                 	db	99	;'c'
  1345  007113  65                 	db	101	;'e'
  1346  007114  69                 	db	105	;'i'
  1347  007115  76                 	db	118	;'v'
  1348  007116  65                 	db	101	;'e'
  1349  007117  72                 	db	114	;'r'
  1350  007118  20                 	db	32
  1351  007119  69                 	db	105	;'i'
  1352  00711A  6E                 	db	110	;'n'
  1353  00711B  20                 	db	32
  1354  00711C  45                 	db	69	;'E'
  1355  00711D  72                 	db	114	;'r'
  1356  00711E  72                 	db	114	;'r'
  1357  00711F  6F                 	db	111	;'o'
  1358  007120  72                 	db	114	;'r'
  1359  007121  20                 	db	32
  1360  007122  53                 	db	83	;'S'
  1361  007123  74                 	db	116	;'t'
  1362  007124  61                 	db	97	;'a'
  1363  007125  74                 	db	116	;'t'
  1364  007126  65                 	db	101	;'e'
  1365  007127  20                 	db	32
  1366  007128  42                 	db	66	;'B'
  1367  007129  75                 	db	117	;'u'
  1368  00712A  73                 	db	115	;'s'
  1369  00712B  20                 	db	32
  1370  00712C  50                 	db	80	;'P'
  1371  00712D  61                 	db	97	;'a'
  1372  00712E  73                 	db	115	;'s'
  1373  00712F  73                 	db	115	;'s'
  1374  007130  69                 	db	105	;'i'
  1375  007131  76                 	db	118	;'v'
  1376  007132  65                 	db	101	;'e'
  1377  007133  20                 	db	32
  1378  007134  28                 	db	40
  1379  007135  52                 	db	82	;'R'
  1380  007136  45                 	db	69	;'E'
  1381  007137  52                 	db	82	;'R'
  1382  007138  52                 	db	82	;'R'
  1383  007139  43                 	db	67	;'C'
  1384  00713A  4E                 	db	78	;'N'
  1385  00713B  54                 	db	84	;'T'
  1386  00713C  20                 	db	32
  1387  00713D  3F                 	db	63	;'?'
  1388  00713E  20                 	db	32
  1389  00713F  31                 	db	49	;'1'
  1390  007140  32                 	db	50	;'2'
  1391  007141  38                 	db	56	;'8'
  1392  007142  29                 	db	41
  1393  007143  0D                 	db	13
  1394  007144  0A                 	db	10
  1395  007145  00                 	db	0
  1396  007146                     STR_67:
  1397  007146  2D                 	db	45
  1398  007147  45                 	db	69	;'E'
  1399  007148  52                 	db	82	;'R'
  1400  007149  52                 	db	82	;'R'
  1401  00714A  4F                 	db	79	;'O'
  1402  00714B  52                 	db	82	;'R'
  1403  00714C  20                 	db	32
  1404  00714D  2D                 	db	45
  1405  00714E  20                 	db	32
  1406  00714F  4F                 	db	79	;'O'
  1407  007150  6E                 	db	110	;'n'
  1408  007151  65                 	db	101	;'e'
  1409  007152  20                 	db	32
  1410  007153  6F                 	db	111	;'o'
  1411  007154  72                 	db	114	;'r'
  1412  007155  20                 	db	32
  1413  007156  6D                 	db	109	;'m'
  1414  007157  6F                 	db	111	;'o'
  1415  007158  72                 	db	114	;'r'
  1416  007159  65                 	db	101	;'e'
  1417  00715A  20                 	db	32
  1418  00715B  72                 	db	114	;'r'
  1419  00715C  65                 	db	101	;'e'
  1420  00715D  67                 	db	103	;'g'
  1421  00715E  69                 	db	105	;'i'
  1422  00715F  73                 	db	115	;'s'
  1423  007160  74                 	db	116	;'t'
  1424  007161  65                 	db	101	;'e'
  1425  007162  72                 	db	114	;'r'
  1426  007163  28                 	db	40
  1427  007164  73                 	db	115	;'s'
  1428  007165  29                 	db	41
  1429  007166  20                 	db	32
  1430  007167  63                 	db	99	;'c'
  1431  007168  6F                 	db	111	;'o'
  1432  007169  75                 	db	117	;'u'
  1433  00716A  6C                 	db	108	;'l'
  1434  00716B  64                 	db	100	;'d'
  1435  00716C  20                 	db	32
  1436  00716D  6E                 	db	110	;'n'
  1437  00716E  6F                 	db	111	;'o'
  1438  00716F  74                 	db	116	;'t'
  1439  007170  20                 	db	32
  1440  007171  62                 	db	98	;'b'
  1441  007172  65                 	db	101	;'e'
  1442  007173  20                 	db	32
  1443  007174  72                 	db	114	;'r'
  1444  007175  65                 	db	101	;'e'
  1445  007176  61                 	db	97	;'a'
  1446  007177  64                 	db	100	;'d'
  1447  007178  2E                 	db	46
  1448  007179  0D                 	db	13
  1449  00717A  0A                 	db	10
  1450  00717B  00                 	db	0
  1451  00717C                     STR_188:
  1452  00717C  54                 	db	84	;'T'
  1453  00717D  72                 	db	114	;'r'
  1454  00717E  61                 	db	97	;'a'
  1455  00717F  6E                 	db	110	;'n'
  1456  007180  73                 	db	115	;'s'
  1457  007181  6D                 	db	109	;'m'
  1458  007182  69                 	db	105	;'i'
  1459  007183  74                 	db	116	;'t'
  1460  007184  74                 	db	116	;'t'
  1461  007185  65                 	db	101	;'e'
  1462  007186  72                 	db	114	;'r'
  1463  007187  20                 	db	32
  1464  007188  69                 	db	105	;'i'
  1465  007189  6E                 	db	110	;'n'
  1466  00718A  20                 	db	32
  1467  00718B  45                 	db	69	;'E'
  1468  00718C  72                 	db	114	;'r'
  1469  00718D  72                 	db	114	;'r'
  1470  00718E  6F                 	db	111	;'o'
  1471  00718F  72                 	db	114	;'r'
  1472  007190  20                 	db	32
  1473  007191  53                 	db	83	;'S'
  1474  007192  74                 	db	116	;'t'
  1475  007193  61                 	db	97	;'a'
  1476  007194  74                 	db	116	;'t'
  1477  007195  65                 	db	101	;'e'
  1478  007196  20                 	db	32
  1479  007197  42                 	db	66	;'B'
  1480  007198  75                 	db	117	;'u'
  1481  007199  73                 	db	115	;'s'
  1482  00719A  20                 	db	32
  1483  00719B  4F                 	db	79	;'O'
  1484  00719C  46                 	db	70	;'F'
  1485  00719D  46                 	db	70	;'F'
  1486  00719E  20                 	db	32
  1487  00719F  28                 	db	40
  1488  0071A0  54                 	db	84	;'T'
  1489  0071A1  45                 	db	69	;'E'
  1490  0071A2  52                 	db	82	;'R'
  1491  0071A3  52                 	db	82	;'R'
  1492  0071A4  43                 	db	67	;'C'
  1493  0071A5  4E                 	db	78	;'N'
  1494  0071A6  54                 	db	84	;'T'
  1495  0071A7  20                 	db	32
  1496  0071A8  3F                 	db	63	;'?'
  1497  0071A9  20                 	db	32
  1498  0071AA  32                 	db	50	;'2'
  1499  0071AB  35                 	db	53	;'5'
  1500  0071AC  36                 	db	54	;'6'
  1501  0071AD  29                 	db	41
  1502  0071AE  0D                 	db	13
  1503  0071AF  0A                 	db	10
  1504  0071B0  00                 	db	0
  1505  0071B1                     STR_2:
  1506  0071B1  43                 	db	67	;'C'
  1507  0071B2  6F                 	db	111	;'o'
  1508  0071B3  70                 	db	112	;'p'
  1509  0071B4  79                 	db	121	;'y'
  1510  0071B5  72                 	db	114	;'r'
  1511  0071B6  69                 	db	105	;'i'
  1512  0071B7  67                 	db	103	;'g'
  1513  0071B8  68                 	db	104	;'h'
  1514  0071B9  74                 	db	116	;'t'
  1515  0071BA  20                 	db	32
  1516  0071BB  28                 	db	40
  1517  0071BC  43                 	db	67	;'C'
  1518  0071BD  29                 	db	41
  1519  0071BE  20                 	db	32
  1520  0071BF  32                 	db	50	;'2'
  1521  0071C0  30                 	db	48	;'0'
  1522  0071C1  31                 	db	49	;'1'
  1523  0071C2  34                 	db	52	;'4'
  1524  0071C3  2D                 	db	45
  1525  0071C4  32                 	db	50	;'2'
  1526  0071C5  30                 	db	48	;'0'
  1527  0071C6  31                 	db	49	;'1'
  1528  0071C7  35                 	db	53	;'5'
  1529  0071C8  20                 	db	32
  1530  0071C9  47                 	db	71	;'G'
  1531  0071CA  72                 	db	114	;'r'
  1532  0071CB  6F                 	db	111	;'o'
  1533  0071CC  64                 	db	100	;'d'
  1534  0071CD  61                 	db	97	;'a'
  1535  0071CE  6E                 	db	110	;'n'
  1536  0071CF  73                 	db	115	;'s'
  1537  0071D0  20                 	db	32
  1538  0071D1  50                 	db	80	;'P'
  1539  0071D2  61                 	db	97	;'a'
  1540  0071D3  72                 	db	114	;'r'
  1541  0071D4  61                 	db	97	;'a'
  1542  0071D5  64                 	db	100	;'d'
  1543  0071D6  69                 	db	105	;'i'
  1544  0071D7  73                 	db	115	;'s'
  1545  0071D8  20                 	db	32
  1546  0071D9  41                 	db	65	;'A'
  1547  0071DA  42                 	db	66	;'B'
  1548  0071DB  2C                 	db	44
  1549  0071DC  20                 	db	32
  1550  0071DD  53                 	db	83	;'S'
  1551  0071DE  77                 	db	119	;'w'
  1552  0071DF  65                 	db	101	;'e'
  1553  0071E0  64                 	db	100	;'d'
  1554  0071E1  65                 	db	101	;'e'
  1555  0071E2  6E                 	db	110	;'n'
  1556  0071E3  0D                 	db	13
  1557  0071E4  0A                 	db	10
  1558  0071E5  00                 	db	0
  1559  0071E6                     STR_196:
  1560  0071E6  54                 	db	84	;'T'
  1561  0071E7  72                 	db	114	;'r'
  1562  0071E8  61                 	db	97	;'a'
  1563  0071E9  6E                 	db	110	;'n'
  1564  0071EA  73                 	db	115	;'s'
  1565  0071EB  6D                 	db	109	;'m'
  1566  0071EC  69                 	db	105	;'i'
  1567  0071ED  74                 	db	116	;'t'
  1568  0071EE  74                 	db	116	;'t'
  1569  0071EF  65                 	db	101	;'e'
  1570  0071F0  72                 	db	114	;'r'
  1571  0071F1  20                 	db	32
  1572  0071F2  6F                 	db	111	;'o'
  1573  0071F3  72                 	db	114	;'r'
  1574  0071F4  20                 	db	32
  1575  0071F5  52                 	db	82	;'R'
  1576  0071F6  65                 	db	101	;'e'
  1577  0071F7  63                 	db	99	;'c'
  1578  0071F8  65                 	db	101	;'e'
  1579  0071F9  69                 	db	105	;'i'
  1580  0071FA  76                 	db	118	;'v'
  1581  0071FB  65                 	db	101	;'e'
  1582  0071FC  72                 	db	114	;'r'
  1583  0071FD  20                 	db	32
  1584  0071FE  69                 	db	105	;'i'
  1585  0071FF  73                 	db	115	;'s'
  1586  007200  20                 	db	32
  1587  007201  69                 	db	105	;'i'
  1588  007202  6E                 	db	110	;'n'
  1589  007203  20                 	db	32
  1590  007204  45                 	db	69	;'E'
  1591  007205  72                 	db	114	;'r'
  1592  007206  72                 	db	114	;'r'
  1593  007207  6F                 	db	111	;'o'
  1594  007208  72                 	db	114	;'r'
  1595  007209  20                 	db	32
  1596  00720A  53                 	db	83	;'S'
  1597  00720B  74                 	db	116	;'t'
  1598  00720C  61                 	db	97	;'a'
  1599  00720D  74                 	db	116	;'t'
  1600  00720E  65                 	db	101	;'e'
  1601  00720F  20                 	db	32
  1602  007210  57                 	db	87	;'W'
  1603  007211  61                 	db	97	;'a'
  1604  007212  72                 	db	114	;'r'
  1605  007213  6E                 	db	110	;'n'
  1606  007214  69                 	db	105	;'i'
  1607  007215  6E                 	db	110	;'n'
  1608  007216  67                 	db	103	;'g'
  1609  007217  0D                 	db	13
  1610  007218  0A                 	db	10
  1611  007219  00                 	db	0
  1612  00721A                     STR_202:
  1613  00721A  4C                 	db	76	;'L'
  1614  00721B  49                 	db	73	;'I'
  1615  00721C  53                 	db	83	;'S'
  1616  00721D  54                 	db	84	;'T'
  1617  00721E  45                 	db	69	;'E'
  1618  00721F  4E                 	db	78	;'N'
  1619  007220  20                 	db	32
  1620  007221  2D                 	db	45
  1621  007222  20                 	db	32
  1622  007223  4F                 	db	79	;'O'
  1623  007224  70                 	db	112	;'p'
  1624  007225  65                 	db	101	;'e'
  1625  007226  6E                 	db	110	;'n'
  1626  007227  20                 	db	32
  1627  007228  43                 	db	67	;'C'
  1628  007229  41                 	db	65	;'A'
  1629  00722A  4E                 	db	78	;'N'
  1630  00722B  20                 	db	32
  1631  00722C  69                 	db	105	;'i'
  1632  00722D  6E                 	db	110	;'n'
  1633  00722E  74                 	db	116	;'t'
  1634  00722F  65                 	db	101	;'e'
  1635  007230  72                 	db	114	;'r'
  1636  007231  66                 	db	102	;'f'
  1637  007232  61                 	db	97	;'a'
  1638  007233  63                 	db	99	;'c'
  1639  007234  65                 	db	101	;'e'
  1640  007235  20                 	db	32
  1641  007236  69                 	db	105	;'i'
  1642  007237  6E                 	db	110	;'n'
  1643  007238  20                 	db	32
  1644  007239  6C                 	db	108	;'l'
  1645  00723A  69                 	db	105	;'i'
  1646  00723B  73                 	db	115	;'s'
  1647  00723C  74                 	db	116	;'t'
  1648  00723D  65                 	db	101	;'e'
  1649  00723E  6E                 	db	110	;'n'
  1650  00723F  20                 	db	32
  1651  007240  6F                 	db	111	;'o'
  1652  007241  6E                 	db	110	;'n'
  1653  007242  6C                 	db	108	;'l'
  1654  007243  79                 	db	121	;'y'
  1655  007244  20                 	db	32
  1656  007245  6D                 	db	109	;'m'
  1657  007246  6F                 	db	111	;'o'
  1658  007247  64                 	db	100	;'d'
  1659  007248  65                 	db	101	;'e'
  1660  007249  2E                 	db	46
  1661  00724A  0D                 	db	13
  1662  00724B  0A                 	db	10
  1663  00724C  00                 	db	0
  1664  00724D                     STR_96:
  1665  00724D  2D                 	db	45
  1666  00724E  45                 	db	69	;'E'
  1667  00724F  52                 	db	82	;'R'
  1668  007250  52                 	db	82	;'R'
  1669  007251  4F                 	db	79	;'O'
  1670  007252  52                 	db	82	;'R'
  1671  007253  20                 	db	32
  1672  007254  2D                 	db	45
  1673  007255  20                 	db	32
  1674  007256  4D                 	db	77	;'M'
  1675  007257  61                 	db	97	;'a'
  1676  007258  73                 	db	115	;'s'
  1677  007259  6B                 	db	107	;'k'
  1678  00725A  20                 	db	32
  1679  00725B  6E                 	db	110	;'n'
  1680  00725C  75                 	db	117	;'u'
  1681  00725D  6D                 	db	109	;'m'
  1682  00725E  62                 	db	98	;'b'
  1683  00725F  65                 	db	101	;'e'
  1684  007260  72                 	db	114	;'r'
  1685  007261  20                 	db	32
  1686  007262  63                 	db	99	;'c'
  1687  007263  61                 	db	97	;'a'
  1688  007264  6E                 	db	110	;'n'
  1689  007265  20                 	db	32
  1690  007266  6F                 	db	111	;'o'
  1691  007267  6E                 	db	110	;'n'
  1692  007268  6C                 	db	108	;'l'
  1693  007269  79                 	db	121	;'y'
  1694  00726A  20                 	db	32
  1695  00726B  62                 	db	98	;'b'
  1696  00726C  65                 	db	101	;'e'
  1697  00726D  20                 	db	32
  1698  00726E  73                 	db	115	;'s'
  1699  00726F  65                 	db	101	;'e'
  1700  007270  74                 	db	116	;'t'
  1701  007271  20                 	db	32
  1702  007272  61                 	db	97	;'a'
  1703  007273  73                 	db	115	;'s'
  1704  007274  20                 	db	32
  1705  007275  30                 	db	48	;'0'
  1706  007276  20                 	db	32
  1707  007277  6F                 	db	111	;'o'
  1708  007278  72                 	db	114	;'r'
  1709  007279  20                 	db	32
  1710  00727A  31                 	db	49	;'1'
  1711  00727B  2E                 	db	46
  1712  00727C  0D                 	db	13
  1713  00727D  0A                 	db	10
  1714  00727E  00                 	db	0
  1715  00727F                     STR_203:
  1716  00727F  4C                 	db	76	;'L'
  1717  007280  4F                 	db	79	;'O'
  1718  007281  4F                 	db	79	;'O'
  1719  007282  50                 	db	80	;'P'
  1720  007283  42                 	db	66	;'B'
  1721  007284  41                 	db	65	;'A'
  1722  007285  43                 	db	67	;'C'
  1723  007286  4B                 	db	75	;'K'
  1724  007287  20                 	db	32
  1725  007288  2D                 	db	45
  1726  007289  20                 	db	32
  1727  00728A  4F                 	db	79	;'O'
  1728  00728B  70                 	db	112	;'p'
  1729  00728C  65                 	db	101	;'e'
  1730  00728D  6E                 	db	110	;'n'
  1731  00728E  20                 	db	32
  1732  00728F  43                 	db	67	;'C'
  1733  007290  41                 	db	65	;'A'
  1734  007291  4E                 	db	78	;'N'
  1735  007292  20                 	db	32
  1736  007293  69                 	db	105	;'i'
  1737  007294  6E                 	db	110	;'n'
  1738  007295  74                 	db	116	;'t'
  1739  007296  65                 	db	101	;'e'
  1740  007297  72                 	db	114	;'r'
  1741  007298  66                 	db	102	;'f'
  1742  007299  61                 	db	97	;'a'
  1743  00729A  63                 	db	99	;'c'
  1744  00729B  65                 	db	101	;'e'
  1745  00729C  20                 	db	32
  1746  00729D  69                 	db	105	;'i'
  1747  00729E  6E                 	db	110	;'n'
  1748  00729F  20                 	db	32
  1749  0072A0  6C                 	db	108	;'l'
  1750  0072A1  6F                 	db	111	;'o'
  1751  0072A2  6F                 	db	111	;'o'
  1752  0072A3  70                 	db	112	;'p'
  1753  0072A4  62                 	db	98	;'b'
  1754  0072A5  61                 	db	97	;'a'
  1755  0072A6  63                 	db	99	;'c'
  1756  0072A7  6B                 	db	107	;'k'
  1757  0072A8  20                 	db	32
  1758  0072A9  6D                 	db	109	;'m'
  1759  0072AA  6F                 	db	111	;'o'
  1760  0072AB  64                 	db	100	;'d'
  1761  0072AC  65                 	db	101	;'e'
  1762  0072AD  2E                 	db	46
  1763  0072AE  0D                 	db	13
  1764  0072AF  0A                 	db	10
  1765  0072B0  00                 	db	0
  1766  0072B1                     STR_205:
  1767  0072B1  56                 	db	86	;'V'
  1768  0072B2  45                 	db	69	;'E'
  1769  0072B3  52                 	db	82	;'R'
  1770  0072B4  53                 	db	83	;'S'
  1771  0072B5  49                 	db	73	;'I'
  1772  0072B6  4F                 	db	79	;'O'
  1773  0072B7  4E                 	db	78	;'N'
  1774  0072B8  20                 	db	32
  1775  0072B9  2D                 	db	45
  1776  0072BA  20                 	db	32
  1777  0072BB  44                 	db	68	;'D'
  1778  0072BC  69                 	db	105	;'i'
  1779  0072BD  73                 	db	115	;'s'
  1780  0072BE  70                 	db	112	;'p'
  1781  0072BF  6C                 	db	108	;'l'
  1782  0072C0  61                 	db	97	;'a'
  1783  0072C1  79                 	db	121	;'y'
  1784  0072C2  20                 	db	32
  1785  0072C3  66                 	db	102	;'f'
  1786  0072C4  69                 	db	105	;'i'
  1787  0072C5  72                 	db	114	;'r'
  1788  0072C6  6D                 	db	109	;'m'
  1789  0072C7  77                 	db	119	;'w'
  1790  0072C8  61                 	db	97	;'a'
  1791  0072C9  72                 	db	114	;'r'
  1792  0072CA  65                 	db	101	;'e'
  1793  0072CB  20                 	db	32
  1794  0072CC  76                 	db	118	;'v'
  1795  0072CD  65                 	db	101	;'e'
  1796  0072CE  72                 	db	114	;'r'
  1797  0072CF  73                 	db	115	;'s'
  1798  0072D0  69                 	db	105	;'i'
  1799  0072D1  6F                 	db	111	;'o'
  1800  0072D2  6E                 	db	110	;'n'
  1801  0072D3  20                 	db	32
  1802  0072D4  69                 	db	105	;'i'
  1803  0072D5  6E                 	db	110	;'n'
  1804  0072D6  66                 	db	102	;'f'
  1805  0072D7  6F                 	db	111	;'o'
  1806  0072D8  72                 	db	114	;'r'
  1807  0072D9  6D                 	db	109	;'m'
  1808  0072DA  61                 	db	97	;'a'
  1809  0072DB  74                 	db	116	;'t'
  1810  0072DC  69                 	db	105	;'i'
  1811  0072DD  6F                 	db	111	;'o'
  1812  0072DE  6E                 	db	110	;'n'
  1813  0072DF  2E                 	db	46
  1814  0072E0  0D                 	db	13
  1815  0072E1  0A                 	db	10
  1816  0072E2  00                 	db	0
  1817  0072E3                     STR_225:
  1818  0072E3  20                 	db	32
  1819  0072E4  20                 	db	32
  1820  0072E5  20                 	db	32
  1821  0072E6  20                 	db	32
  1822  0072E7  20                 	db	32
  1823  0072E8  20                 	db	32
  1824  0072E9  20                 	db	32
  1825  0072EA  20                 	db	32
  1826  0072EB  20                 	db	32
  1827  0072EC  20                 	db	32
  1828  0072ED  20                 	db	32
  1829  0072EE  20                 	db	32
  1830  0072EF  20                 	db	32
  1831  0072F0  20                 	db	32
  1832  0072F1  20                 	db	32
  1833  0072F2  20                 	db	32
  1834  0072F3  46                 	db	70	;'F'
  1835  0072F4  6F                 	db	111	;'o'
  1836  0072F5  72                 	db	114	;'r'
  1837  0072F6  6D                 	db	109	;'m'
  1838  0072F7  61                 	db	97	;'a'
  1839  0072F8  74                 	db	116	;'t'
  1840  0072F9  3A                 	db	58	;':'
  1841  0072FA  20                 	db	32
  1842  0072FB  73                 	db	115	;'s'
  1843  0072FC  65                 	db	101	;'e'
  1844  0072FD  74                 	db	116	;'t'
  1845  0072FE  20                 	db	32
  1846  0072FF  72                 	db	114	;'r'
  1847  007300  77                 	db	119	;'w'
  1848  007301  74                 	db	116	;'t'
  1849  007302  69                 	db	105	;'i'
  1850  007303  6D                 	db	109	;'m'
  1851  007304  65                 	db	101	;'e'
  1852  007305  6F                 	db	111	;'o'
  1853  007306  75                 	db	117	;'u'
  1854  007307  74                 	db	116	;'t'
  1855  007308  20                 	db	32
  1856  007309  74                 	db	116	;'t'
  1857  00730A  69                 	db	105	;'i'
  1858  00730B  6D                 	db	109	;'m'
  1859  00730C  65                 	db	101	;'e'
  1860  00730D  6F                 	db	111	;'o'
  1861  00730E  75                 	db	117	;'u'
  1862  00730F  74                 	db	116	;'t'
  1863  007310  2E                 	db	46
  1864  007311  0D                 	db	13
  1865  007312  0A                 	db	10
  1866  007313  00                 	db	0
  1867  007314                     STR_223:
  1868  007314  20                 	db	32
  1869  007315  20                 	db	32
  1870  007316  20                 	db	32
  1871  007317  20                 	db	32
  1872  007318  44                 	db	68	;'D'
  1873  007319  45                 	db	69	;'E'
  1874  00731A  43                 	db	67	;'C'
  1875  00731B  49                 	db	73	;'I'
  1876  00731C  4D                 	db	77	;'M'
  1877  00731D  41                 	db	65	;'A'
  1878  00731E  4C                 	db	76	;'L'
  1879  00731F  20                 	db	32
  1880  007320  2D                 	db	45
  1881  007321  20                 	db	32
  1882  007322  44                 	db	68	;'D'
  1883  007323  69                 	db	105	;'i'
  1884  007324  73                 	db	115	;'s'
  1885  007325  70                 	db	112	;'p'
  1886  007326  6C                 	db	108	;'l'
  1887  007327  61                 	db	97	;'a'
  1888  007328  79                 	db	121	;'y'
  1889  007329  20                 	db	32
  1890  00732A  6E                 	db	110	;'n'
  1891  00732B  75                 	db	117	;'u'
  1892  00732C  6D                 	db	109	;'m'
  1893  00732D  65                 	db	101	;'e'
  1894  00732E  72                 	db	114	;'r'
  1895  00732F  69                 	db	105	;'i'
  1896  007330  63                 	db	99	;'c'
  1897  007331  61                 	db	97	;'a'
  1898  007332  6C                 	db	108	;'l'
  1899  007333  73                 	db	115	;'s'
  1900  007334  20                 	db	32
  1901  007335  69                 	db	105	;'i'
  1902  007336  6E                 	db	110	;'n'
  1903  007337  20                 	db	32
  1904  007338  64                 	db	100	;'d'
  1905  007339  65                 	db	101	;'e'
  1906  00733A  63                 	db	99	;'c'
  1907  00733B  69                 	db	105	;'i'
  1908  00733C  6D                 	db	109	;'m'
  1909  00733D  61                 	db	97	;'a'
  1910  00733E  6C                 	db	108	;'l'
  1911  00733F  2E                 	db	46
  1912  007340  0D                 	db	13
  1913  007341  0A                 	db	10
  1914  007342  00                 	db	0
  1915  007343                     STR_222:
  1916  007343  20                 	db	32
  1917  007344  20                 	db	32
  1918  007345  20                 	db	32
  1919  007346  20                 	db	32
  1920  007347  48                 	db	72	;'H'
  1921  007348  45                 	db	69	;'E'
  1922  007349  58                 	db	88	;'X'
  1923  00734A  20                 	db	32
  1924  00734B  2D                 	db	45
  1925  00734C  20                 	db	32
  1926  00734D  44                 	db	68	;'D'
  1927  00734E  69                 	db	105	;'i'
  1928  00734F  73                 	db	115	;'s'
  1929  007350  70                 	db	112	;'p'
  1930  007351  6C                 	db	108	;'l'
  1931  007352  61                 	db	97	;'a'
  1932  007353  79                 	db	121	;'y'
  1933  007354  20                 	db	32
  1934  007355  6E                 	db	110	;'n'
  1935  007356  75                 	db	117	;'u'
  1936  007357  6D                 	db	109	;'m'
  1937  007358  65                 	db	101	;'e'
  1938  007359  72                 	db	114	;'r'
  1939  00735A  69                 	db	105	;'i'
  1940  00735B  63                 	db	99	;'c'
  1941  00735C  61                 	db	97	;'a'
  1942  00735D  6C                 	db	108	;'l'
  1943  00735E  73                 	db	115	;'s'
  1944  00735F  20                 	db	32
  1945  007360  69                 	db	105	;'i'
  1946  007361  6E                 	db	110	;'n'
  1947  007362  20                 	db	32
  1948  007363  68                 	db	104	;'h'
  1949  007364  65                 	db	101	;'e'
  1950  007365  78                 	db	120	;'x'
  1951  007366  61                 	db	97	;'a'
  1952  007367  64                 	db	100	;'d'
  1953  007368  65                 	db	101	;'e'
  1954  007369  63                 	db	99	;'c'
  1955  00736A  69                 	db	105	;'i'
  1956  00736B  6D                 	db	109	;'m'
  1957  00736C  61                 	db	97	;'a'
  1958  00736D  6C                 	db	108	;'l'
  1959  00736E  2E                 	db	46
  1960  00736F  0D                 	db	13
  1961  007370  0A                 	db	10
  1962  007371  00                 	db	0
  1963  007372                     STR_213:
  1964  007372  46                 	db	70	;'F'
  1965  007373  49                 	db	73	;'I'
  1966  007374  4E                 	db	78	;'N'
  1967  007375  44                 	db	68	;'D'
  1968  007376  20                 	db	32
  1969  007377  2D                 	db	45
  1970  007378  20                 	db	32
  1971  007379  46                 	db	70	;'F'
  1972  00737A  69                 	db	105	;'i'
  1973  00737B  6E                 	db	110	;'n'
  1974  00737C  64                 	db	100	;'d'
  1975  00737D  20                 	db	32
  1976  00737E  61                 	db	97	;'a'
  1977  00737F  76                 	db	118	;'v'
  1978  007380  61                 	db	97	;'a'
  1979  007381  69                 	db	105	;'i'
  1980  007382  6C                 	db	108	;'l'
  1981  007383  61                 	db	97	;'a'
  1982  007384  62                 	db	98	;'b'
  1983  007385  6C                 	db	108	;'l'
  1984  007386  65                 	db	101	;'e'
  1985  007387  20                 	db	32
  1986  007388  43                 	db	67	;'C'
  1987  007389  41                 	db	65	;'A'
  1988  00738A  4E                 	db	78	;'N'
  1989  00738B  34                 	db	52	;'4'
  1990  00738C  56                 	db	86	;'V'
  1991  00738D  53                 	db	83	;'S'
  1992  00738E  43                 	db	67	;'C'
  1993  00738F  50                 	db	80	;'P'
  1994  007390  20                 	db	32
  1995  007391  6E                 	db	110	;'n'
  1996  007392  6F                 	db	111	;'o'
  1997  007393  64                 	db	100	;'d'
  1998  007394  65                 	db	101	;'e'
  1999  007395  73                 	db	115	;'s'
  2000  007396  20                 	db	32
  2001  007397  6F                 	db	111	;'o'
  2002  007398  6E                 	db	110	;'n'
  2003  007399  20                 	db	32
  2004  00739A  62                 	db	98	;'b'
  2005  00739B  75                 	db	117	;'u'
  2006  00739C  73                 	db	115	;'s'
  2007  00739D  2E                 	db	46
  2008  00739E  0D                 	db	13
  2009  00739F  0A                 	db	10
  2010  0073A0  00                 	db	0
  2011  0073A1                     STR_201:
  2012  0073A1  53                 	db	83	;'S'
  2013  0073A2  49                 	db	73	;'I'
  2014  0073A3  4C                 	db	76	;'L'
  2015  0073A4  45                 	db	69	;'E'
  2016  0073A5  4E                 	db	78	;'N'
  2017  0073A6  54                 	db	84	;'T'
  2018  0073A7  20                 	db	32
  2019  0073A8  2D                 	db	45
  2020  0073A9  20                 	db	32
  2021  0073AA  4F                 	db	79	;'O'
  2022  0073AB  70                 	db	112	;'p'
  2023  0073AC  65                 	db	101	;'e'
  2024  0073AD  6E                 	db	110	;'n'
  2025  0073AE  20                 	db	32
  2026  0073AF  43                 	db	67	;'C'
  2027  0073B0  41                 	db	65	;'A'
  2028  0073B1  4E                 	db	78	;'N'
  2029  0073B2  20                 	db	32
  2030  0073B3  69                 	db	105	;'i'
  2031  0073B4  6E                 	db	110	;'n'
  2032  0073B5  74                 	db	116	;'t'
  2033  0073B6  65                 	db	101	;'e'
  2034  0073B7  72                 	db	114	;'r'
  2035  0073B8  66                 	db	102	;'f'
  2036  0073B9  61                 	db	97	;'a'
  2037  0073BA  63                 	db	99	;'c'
  2038  0073BB  65                 	db	101	;'e'
  2039  0073BC  20                 	db	32
  2040  0073BD  69                 	db	105	;'i'
  2041  0073BE  6E                 	db	110	;'n'
  2042  0073BF  20                 	db	32
  2043  0073C0  73                 	db	115	;'s'
  2044  0073C1  69                 	db	105	;'i'
  2045  0073C2  6C                 	db	108	;'l'
  2046  0073C3  65                 	db	101	;'e'
  2047  0073C4  6E                 	db	110	;'n'
  2048  0073C5  74                 	db	116	;'t'
  2049  0073C6  20                 	db	32
  2050  0073C7  6D                 	db	109	;'m'
  2051  0073C8  6F                 	db	111	;'o'
  2052  0073C9  64                 	db	100	;'d'
  2053  0073CA  65                 	db	101	;'e'
  2054  0073CB  2E                 	db	46
  2055  0073CC  0D                 	db	13
  2056  0073CD  0A                 	db	10
  2057  0073CE  00                 	db	0
  2058  0073CF                     STR_206:
  2059  0073CF  49                 	db	73	;'I'
  2060  0073D0  46                 	db	70	;'F'
  2061  0073D1  4D                 	db	77	;'M'
  2062  0073D2  4F                 	db	79	;'O'
  2063  0073D3  44                 	db	68	;'D'
  2064  0073D4  45                 	db	69	;'E'
  2065  0073D5  20                 	db	32
  2066  0073D6  2D                 	db	45
  2067  0073D7  20                 	db	32
  2068  0073D8  44                 	db	68	;'D'
  2069  0073D9  69                 	db	105	;'i'
  2070  0073DA  73                 	db	115	;'s'
  2071  0073DB  70                 	db	112	;'p'
  2072  0073DC  6C                 	db	108	;'l'
  2073  0073DD  61                 	db	97	;'a'
  2074  0073DE  79                 	db	121	;'y'
  2075  0073DF  20                 	db	32
  2076  0073E0  73                 	db	115	;'s'
  2077  0073E1  65                 	db	101	;'e'
  2078  0073E2  6C                 	db	108	;'l'
  2079  0073E3  65                 	db	101	;'e'
  2080  0073E4  63                 	db	99	;'c'
  2081  0073E5  74                 	db	116	;'t'
  2082  0073E6  65                 	db	101	;'e'
  2083  0073E7  64                 	db	100	;'d'
  2084  0073E8  20                 	db	32
  2085  0073E9  69                 	db	105	;'i'
  2086  0073EA  6E                 	db	110	;'n'
  2087  0073EB  74                 	db	116	;'t'
  2088  0073EC  65                 	db	101	;'e'
  2089  0073ED  72                 	db	114	;'r'
  2090  0073EE  66                 	db	102	;'f'
  2091  0073EF  61                 	db	97	;'a'
  2092  0073F0  63                 	db	99	;'c'
  2093  0073F1  65                 	db	101	;'e'
  2094  0073F2  20                 	db	32
  2095  0073F3  6D                 	db	109	;'m'
  2096  0073F4  6F                 	db	111	;'o'
  2097  0073F5  64                 	db	100	;'d'
  2098  0073F6  65                 	db	101	;'e'
  2099  0073F7  2E                 	db	46
  2100  0073F8  0D                 	db	13
  2101  0073F9  0A                 	db	10
  2102  0073FA  00                 	db	0
  2103  0073FB                     STR_200:
  2104  0073FB  4F                 	db	79	;'O'
  2105  0073FC  50                 	db	80	;'P'
  2106  0073FD  45                 	db	69	;'E'
  2107  0073FE  4E                 	db	78	;'N'
  2108  0073FF  20                 	db	32
  2109  007400  2D                 	db	45
  2110  007401  20                 	db	32
  2111  007402  4F                 	db	79	;'O'
  2112  007403  70                 	db	112	;'p'
  2113  007404  65                 	db	101	;'e'
  2114  007405  6E                 	db	110	;'n'
  2115  007406  20                 	db	32
  2116  007407  43                 	db	67	;'C'
  2117  007408  41                 	db	65	;'A'
  2118  007409  4E                 	db	78	;'N'
  2119  00740A  20                 	db	32
  2120  00740B  69                 	db	105	;'i'
  2121  00740C  6E                 	db	110	;'n'
  2122  00740D  74                 	db	116	;'t'
  2123  00740E  65                 	db	101	;'e'
  2124  00740F  72                 	db	114	;'r'
  2125  007410  66                 	db	102	;'f'
  2126  007411  61                 	db	97	;'a'
  2127  007412  63                 	db	99	;'c'
  2128  007413  65                 	db	101	;'e'
  2129  007414  20                 	db	32
  2130  007415  69                 	db	105	;'i'
  2131  007416  6E                 	db	110	;'n'
  2132  007417  20                 	db	32
  2133  007418  6E                 	db	110	;'n'
  2134  007419  6F                 	db	111	;'o'
  2135  00741A  72                 	db	114	;'r'
  2136  00741B  6D                 	db	109	;'m'
  2137  00741C  61                 	db	97	;'a'
  2138  00741D  6C                 	db	108	;'l'
  2139  00741E  20                 	db	32
  2140  00741F  6D                 	db	109	;'m'
  2141  007420  6F                 	db	111	;'o'
  2142  007421  64                 	db	100	;'d'
  2143  007422  65                 	db	101	;'e'
  2144  007423  2E                 	db	46
  2145  007424  0D                 	db	13
  2146  007425  0A                 	db	10
  2147  007426  00                 	db	0
  2148  007427                     STR_108:
  2149  007427  2B                 	db	43
  2150  007428  4F                 	db	79	;'O'
  2151  007429  4B                 	db	75	;'K'
  2152  00742A  20                 	db	32
  2153  00742B  2D                 	db	45
  2154  00742C  20                 	db	32
  2155  00742D  4E                 	db	78	;'N'
  2156  00742E  75                 	db	117	;'u'
  2157  00742F  6D                 	db	109	;'m'
  2158  007430  65                 	db	101	;'e'
  2159  007431  72                 	db	114	;'r'
  2160  007432  69                 	db	105	;'i'
  2161  007433  63                 	db	99	;'c'
  2162  007434  61                 	db	97	;'a'
  2163  007435  6C                 	db	108	;'l'
  2164  007436  20                 	db	32
  2165  007437  6F                 	db	111	;'o'
  2166  007438  75                 	db	117	;'u'
  2167  007439  74                 	db	116	;'t'
  2168  00743A  70                 	db	112	;'p'
  2169  00743B  75                 	db	117	;'u'
  2170  00743C  74                 	db	116	;'t'
  2171  00743D  20                 	db	32
  2172  00743E  6E                 	db	110	;'n'
  2173  00743F  6F                 	db	111	;'o'
  2174  007440  77                 	db	119	;'w'
  2175  007441  20                 	db	32
  2176  007442  69                 	db	105	;'i'
  2177  007443  6E                 	db	110	;'n'
  2178  007444  20                 	db	32
  2179  007445  68                 	db	104	;'h'
  2180  007446  65                 	db	101	;'e'
  2181  007447  78                 	db	120	;'x'
  2182  007448  61                 	db	97	;'a'
  2183  007449  64                 	db	100	;'d'
  2184  00744A  65                 	db	101	;'e'
  2185  00744B  63                 	db	99	;'c'
  2186  00744C  69                 	db	105	;'i'
  2187  00744D  6D                 	db	109	;'m'
  2188  00744E  61                 	db	97	;'a'
  2189  00744F  6C                 	db	108	;'l'
  2190  007450  0D                 	db	13
  2191  007451  0A                 	db	10
  2192  007452  00                 	db	0
  2193  007453                     STR_87:
  2194  007453  2D                 	db	45
  2195  007454  45                 	db	69	;'E'
  2196  007455  52                 	db	82	;'R'
  2197  007456  52                 	db	82	;'R'
  2198  007457  4F                 	db	79	;'O'
  2199  007458  52                 	db	82	;'R'
  2200  007459  20                 	db	32
  2201  00745A  2D                 	db	45
  2202  00745B  20                 	db	32
  2203  00745C  66                 	db	102	;'f'
  2204  00745D  69                 	db	105	;'i'
  2205  00745E  6C                 	db	108	;'l'
  2206  00745F  74                 	db	116	;'t'
  2207  007460  65                 	db	101	;'e'
  2208  007461  72                 	db	114	;'r'
  2209  007462  20                 	db	32
  2210  007463  66                 	db	102	;'f'
  2211  007464  6F                 	db	111	;'o'
  2212  007465  72                 	db	114	;'r'
  2213  007466  20                 	db	32
  2214  007467  70                 	db	112	;'p'
  2215  007468  72                 	db	114	;'r'
  2216  007469  69                 	db	105	;'i'
  2217  00746A  6F                 	db	111	;'o'
  2218  00746B  72                 	db	114	;'r'
  2219  00746C  69                 	db	105	;'i'
  2220  00746D  74                 	db	116	;'t'
  2221  00746E  79                 	db	121	;'y'
  2222  00746F  20                 	db	32
  2223  007470  69                 	db	105	;'i'
  2224  007471  73                 	db	115	;'s'
  2225  007472  20                 	db	32
  2226  007473  6D                 	db	109	;'m'
  2227  007474  69                 	db	105	;'i'
  2228  007475  73                 	db	115	;'s'
  2229  007476  73                 	db	115	;'s'
  2230  007477  69                 	db	105	;'i'
  2231  007478  6E                 	db	110	;'n'
  2232  007479  67                 	db	103	;'g'
  2233  00747A  0D                 	db	13
  2234  00747B  0A                 	db	10
  2235  00747C  00                 	db	0
  2236  00747D                     STR_93:
  2237  00747D  2D                 	db	45
  2238  00747E  45                 	db	69	;'E'
  2239  00747F  52                 	db	82	;'R'
  2240  007480  52                 	db	82	;'R'
  2241  007481  4F                 	db	79	;'O'
  2242  007482  52                 	db	82	;'R'
  2243  007483  20                 	db	32
  2244  007484  2D                 	db	45
  2245  007485  20                 	db	32
  2246  007486  66                 	db	102	;'f'
  2247  007487  69                 	db	105	;'i'
  2248  007488  6C                 	db	108	;'l'
  2249  007489  74                 	db	116	;'t'
  2250  00748A  65                 	db	101	;'e'
  2251  00748B  72                 	db	114	;'r'
  2252  00748C  20                 	db	32
  2253  00748D  66                 	db	102	;'f'
  2254  00748E  6F                 	db	111	;'o'
  2255  00748F  72                 	db	114	;'r'
  2256  007490  20                 	db	32
  2257  007491  6E                 	db	110	;'n'
  2258  007492  69                 	db	105	;'i'
  2259  007493  64                 	db	100	;'d'
  2260  007494  65                 	db	101	;'e'
  2261  007495  20                 	db	32
  2262  007496  69                 	db	105	;'i'
  2263  007497  64                 	db	100	;'d'
  2264  007498  20                 	db	32
  2265  007499  69                 	db	105	;'i'
  2266  00749A  73                 	db	115	;'s'
  2267  00749B  20                 	db	32
  2268  00749C  6D                 	db	109	;'m'
  2269  00749D  69                 	db	105	;'i'
  2270  00749E  73                 	db	115	;'s'
  2271  00749F  73                 	db	115	;'s'
  2272  0074A0  69                 	db	105	;'i'
  2273  0074A1  6E                 	db	110	;'n'
  2274  0074A2  67                 	db	103	;'g'
  2275  0074A3  0D                 	db	13
  2276  0074A4  0A                 	db	10
  2277  0074A5  00                 	db	0
  2278  0074A6                     STR_212:
  2279  0074A6  48                 	db	72	;'H'
  2280  0074A7  45                 	db	69	;'E'
  2281  0074A8  4C                 	db	76	;'L'
  2282  0074A9  50                 	db	80	;'P'
  2283  0074AA  20                 	db	32
  2284  0074AB  2D                 	db	45
  2285  0074AC  20                 	db	32
  2286  0074AD  44                 	db	68	;'D'
  2287  0074AE  69                 	db	105	;'i'
  2288  0074AF  73                 	db	115	;'s'
  2289  0074B0  70                 	db	112	;'p'
  2290  0074B1  6C                 	db	108	;'l'
  2291  0074B2  61                 	db	97	;'a'
  2292  0074B3  79                 	db	121	;'y'
  2293  0074B4  20                 	db	32
  2294  0074B5  74                 	db	116	;'t'
  2295  0074B6  68                 	db	104	;'h'
  2296  0074B7  69                 	db	105	;'i'
  2297  0074B8  73                 	db	115	;'s'
  2298  0074B9  20                 	db	32
  2299  0074BA  68                 	db	104	;'h'
  2300  0074BB  65                 	db	101	;'e'
  2301  0074BC  6C                 	db	108	;'l'
  2302  0074BD  70                 	db	112	;'p'
  2303  0074BE  20                 	db	32
  2304  0074BF  69                 	db	105	;'i'
  2305  0074C0  6E                 	db	110	;'n'
  2306  0074C1  66                 	db	102	;'f'
  2307  0074C2  6F                 	db	111	;'o'
  2308  0074C3  72                 	db	114	;'r'
  2309  0074C4  6D                 	db	109	;'m'
  2310  0074C5  61                 	db	97	;'a'
  2311  0074C6  74                 	db	116	;'t'
  2312  0074C7  69                 	db	105	;'i'
  2313  0074C8  6F                 	db	111	;'o'
  2314  0074C9  6E                 	db	110	;'n'
  2315  0074CA  2E                 	db	46
  2316  0074CB  0D                 	db	13
  2317  0074CC  0A                 	db	10
  2318  0074CD  00                 	db	0
  2319  0074CE                     STR_99:
  2320  0074CE  2D                 	db	45
  2321  0074CF  45                 	db	69	;'E'
  2322  0074D0  52                 	db	82	;'R'
  2323  0074D1  52                 	db	82	;'R'
  2324  0074D2  4F                 	db	79	;'O'
  2325  0074D3  52                 	db	82	;'R'
  2326  0074D4  20                 	db	32
  2327  0074D5  2D                 	db	45
  2328  0074D6  20                 	db	32
  2329  0074D7  6D                 	db	109	;'m'
  2330  0074D8  61                 	db	97	;'a'
  2331  0074D9  73                 	db	115	;'s'
  2332  0074DA  6B                 	db	107	;'k'
  2333  0074DB  20                 	db	32
  2334  0074DC  66                 	db	102	;'f'
  2335  0074DD  6F                 	db	111	;'o'
  2336  0074DE  72                 	db	114	;'r'
  2337  0074DF  20                 	db	32
  2338  0074E0  70                 	db	112	;'p'
  2339  0074E1  72                 	db	114	;'r'
  2340  0074E2  69                 	db	105	;'i'
  2341  0074E3  6F                 	db	111	;'o'
  2342  0074E4  72                 	db	114	;'r'
  2343  0074E5  69                 	db	105	;'i'
  2344  0074E6  74                 	db	116	;'t'
  2345  0074E7  79                 	db	121	;'y'
  2346  0074E8  20                 	db	32
  2347  0074E9  69                 	db	105	;'i'
  2348  0074EA  73                 	db	115	;'s'
  2349  0074EB  20                 	db	32
  2350  0074EC  6D                 	db	109	;'m'
  2351  0074ED  69                 	db	105	;'i'
  2352  0074EE  73                 	db	115	;'s'
  2353  0074EF  73                 	db	115	;'s'
  2354  0074F0  69                 	db	105	;'i'
  2355  0074F1  6E                 	db	110	;'n'
  2356  0074F2  67                 	db	103	;'g'
  2357  0074F3  0D                 	db	13
  2358  0074F4  0A                 	db	10
  2359  0074F5  00                 	db	0
  2360  0074F6                     STR_110:
  2361  0074F6  2B                 	db	43
  2362  0074F7  4F                 	db	79	;'O'
  2363  0074F8  4B                 	db	75	;'K'
  2364  0074F9  20                 	db	32
  2365  0074FA  2D                 	db	45
  2366  0074FB  20                 	db	32
  2367  0074FC  4E                 	db	78	;'N'
  2368  0074FD  75                 	db	117	;'u'
  2369  0074FE  6D                 	db	109	;'m'
  2370  0074FF  65                 	db	101	;'e'
  2371  007500  72                 	db	114	;'r'
  2372  007501  69                 	db	105	;'i'
  2373  007502  63                 	db	99	;'c'
  2374  007503  61                 	db	97	;'a'
  2375  007504  6C                 	db	108	;'l'
  2376  007505  20                 	db	32
  2377  007506  6F                 	db	111	;'o'
  2378  007507  75                 	db	117	;'u'
  2379  007508  74                 	db	116	;'t'
  2380  007509  70                 	db	112	;'p'
  2381  00750A  75                 	db	117	;'u'
  2382  00750B  74                 	db	116	;'t'
  2383  00750C  20                 	db	32
  2384  00750D  6E                 	db	110	;'n'
  2385  00750E  6F                 	db	111	;'o'
  2386  00750F  77                 	db	119	;'w'
  2387  007510  20                 	db	32
  2388  007511  69                 	db	105	;'i'
  2389  007512  6E                 	db	110	;'n'
  2390  007513  20                 	db	32
  2391  007514  64                 	db	100	;'d'
  2392  007515  65                 	db	101	;'e'
  2393  007516  63                 	db	99	;'c'
  2394  007517  69                 	db	105	;'i'
  2395  007518  6D                 	db	109	;'m'
  2396  007519  61                 	db	97	;'a'
  2397  00751A  6C                 	db	108	;'l'
  2398  00751B  0D                 	db	13
  2399  00751C  0A                 	db	10
  2400  00751D  00                 	db	0
  2401  00751E                     STR_85:
  2402  00751E  2D                 	db	45
  2403  00751F  45                 	db	69	;'E'
  2404  007520  52                 	db	82	;'R'
  2405  007521  52                 	db	82	;'R'
  2406  007522  4F                 	db	79	;'O'
  2407  007523  52                 	db	82	;'R'
  2408  007524  20                 	db	32
  2409  007525  2D                 	db	45
  2410  007526  20                 	db	32
  2411  007527  4E                 	db	78	;'N'
  2412  007528  6F                 	db	111	;'o'
  2413  007529  20                 	db	32
  2414  00752A  66                 	db	102	;'f'
  2415  00752B  69                 	db	105	;'i'
  2416  00752C  6C                 	db	108	;'l'
  2417  00752D  74                 	db	116	;'t'
  2418  00752E  65                 	db	101	;'e'
  2419  00752F  72                 	db	114	;'r'
  2420  007530  20                 	db	32
  2421  007531  6E                 	db	110	;'n'
  2422  007532  75                 	db	117	;'u'
  2423  007533  6D                 	db	109	;'m'
  2424  007534  62                 	db	98	;'b'
  2425  007535  65                 	db	101	;'e'
  2426  007536  72                 	db	114	;'r'
  2427  007537  20                 	db	32
  2428  007538  73                 	db	115	;'s'
  2429  007539  70                 	db	112	;'p'
  2430  00753A  65                 	db	101	;'e'
  2431  00753B  63                 	db	99	;'c'
  2432  00753C  69                 	db	105	;'i'
  2433  00753D  66                 	db	102	;'f'
  2434  00753E  69                 	db	105	;'i'
  2435  00753F  65                 	db	101	;'e'
  2436  007540  64                 	db	100	;'d'
  2437  007541  2E                 	db	46
  2438  007542  0D                 	db	13
  2439  007543  0A                 	db	10
  2440  007544  00                 	db	0
  2441  007545                     STR_211:
  2442  007545  45                 	db	69	;'E'
  2443  007546  52                 	db	82	;'R'
  2444  007547  52                 	db	82	;'R'
  2445  007548  20                 	db	32
  2446  007549  2D                 	db	45
  2447  00754A  20                 	db	32
  2448  00754B  44                 	db	68	;'D'
  2449  00754C  69                 	db	105	;'i'
  2450  00754D  73                 	db	115	;'s'
  2451  00754E  70                 	db	112	;'p'
  2452  00754F  6C                 	db	108	;'l'
  2453  007550  61                 	db	97	;'a'
  2454  007551  79                 	db	121	;'y'
  2455  007552  20                 	db	32
  2456  007553  43                 	db	67	;'C'
  2457  007554  41                 	db	65	;'A'
  2458  007555  4E                 	db	78	;'N'
  2459  007556  20                 	db	32
  2460  007557  65                 	db	101	;'e'
  2461  007558  72                 	db	114	;'r'
  2462  007559  72                 	db	114	;'r'
  2463  00755A  6F                 	db	111	;'o'
  2464  00755B  72                 	db	114	;'r'
  2465  00755C  20                 	db	32
  2466  00755D  69                 	db	105	;'i'
  2467  00755E  6E                 	db	110	;'n'
  2468  00755F  66                 	db	102	;'f'
  2469  007560  6F                 	db	111	;'o'
  2470  007561  72                 	db	114	;'r'
  2471  007562  6D                 	db	109	;'m'
  2472  007563  61                 	db	97	;'a'
  2473  007564  74                 	db	116	;'t'
  2474  007565  69                 	db	105	;'i'
  2475  007566  6F                 	db	111	;'o'
  2476  007567  6E                 	db	110	;'n'
  2477  007568  2E                 	db	46
  2478  007569  0D                 	db	13
  2479  00756A  0A                 	db	10
  2480  00756B  00                 	db	0
  2481  00756C                     STR_197:
  2482  00756C  48                 	db	72	;'H'
  2483  00756D  65                 	db	101	;'e'
  2484  00756E  6C                 	db	108	;'l'
  2485  00756F  70                 	db	112	;'p'
  2486  007570  20                 	db	32
  2487  007571  66                 	db	102	;'f'
  2488  007572  6F                 	db	111	;'o'
  2489  007573  72                 	db	114	;'r'
  2490  007574  20                 	db	32
  2491  007575  74                 	db	116	;'t'
  2492  007576  68                 	db	104	;'h'
  2493  007577  65                 	db	101	;'e'
  2494  007578  20                 	db	32
  2495  007579  46                 	db	70	;'F'
  2496  00757A  72                 	db	114	;'r'
  2497  00757B  61                 	db	97	;'a'
  2498  00757C  6E                 	db	110	;'n'
  2499  00757D  6B                 	db	107	;'k'
  2500  00757E  66                 	db	102	;'f'
  2501  00757F  75                 	db	117	;'u'
  2502  007580  72                 	db	114	;'r'
  2503  007581  74                 	db	116	;'t'
  2504  007582  20                 	db	32
  2505  007583  52                 	db	82	;'R'
  2506  007584  53                 	db	83	;'S'
  2507  007585  2D                 	db	45
  2508  007586  32                 	db	50	;'2'
  2509  007587  33                 	db	51	;'3'
  2510  007588  32                 	db	50	;'2'
  2511  007589  20                 	db	32
  2512  00758A  6D                 	db	109	;'m'
  2513  00758B  6F                 	db	111	;'o'
  2514  00758C  64                 	db	100	;'d'
  2515  00758D  75                 	db	117	;'u'
  2516  00758E  6C                 	db	108	;'l'
  2517  00758F  65                 	db	101	;'e'
  2518  007590  0D                 	db	13
  2519  007591  0A                 	db	10
  2520  007592  00                 	db	0
  2521  007593                     STR_105:
  2522  007593  2D                 	db	45
  2523  007594  45                 	db	69	;'E'
  2524  007595  52                 	db	82	;'R'
  2525  007596  52                 	db	82	;'R'
  2526  007597  4F                 	db	79	;'O'
  2527  007598  52                 	db	82	;'R'
  2528  007599  20                 	db	32
  2529  00759A  2D                 	db	45
  2530  00759B  20                 	db	32
  2531  00759C  6D                 	db	109	;'m'
  2532  00759D  61                 	db	97	;'a'
  2533  00759E  73                 	db	115	;'s'
  2534  00759F  6B                 	db	107	;'k'
  2535  0075A0  20                 	db	32
  2536  0075A1  66                 	db	102	;'f'
  2537  0075A2  6F                 	db	111	;'o'
  2538  0075A3  72                 	db	114	;'r'
  2539  0075A4  20                 	db	32
  2540  0075A5  6E                 	db	110	;'n'
  2541  0075A6  69                 	db	105	;'i'
  2542  0075A7  64                 	db	100	;'d'
  2543  0075A8  65                 	db	101	;'e'
  2544  0075A9  20                 	db	32
  2545  0075AA  69                 	db	105	;'i'
  2546  0075AB  64                 	db	100	;'d'
  2547  0075AC  20                 	db	32
  2548  0075AD  69                 	db	105	;'i'
  2549  0075AE  73                 	db	115	;'s'
  2550  0075AF  20                 	db	32
  2551  0075B0  6D                 	db	109	;'m'
  2552  0075B1  69                 	db	105	;'i'
  2553  0075B2  73                 	db	115	;'s'
  2554  0075B3  73                 	db	115	;'s'
  2555  0075B4  69                 	db	105	;'i'
  2556  0075B5  6E                 	db	110	;'n'
  2557  0075B6  67                 	db	103	;'g'
  2558  0075B7  0D                 	db	13
  2559  0075B8  0A                 	db	10
  2560  0075B9  00                 	db	0
  2561  0075BA                     STR_89:
  2562  0075BA  2D                 	db	45
  2563  0075BB  45                 	db	69	;'E'
  2564  0075BC  52                 	db	82	;'R'
  2565  0075BD  52                 	db	82	;'R'
  2566  0075BE  4F                 	db	79	;'O'
  2567  0075BF  52                 	db	82	;'R'
  2568  0075C0  20                 	db	32
  2569  0075C1  2D                 	db	45
  2570  0075C2  20                 	db	32
  2571  0075C3  66                 	db	102	;'f'
  2572  0075C4  69                 	db	105	;'i'
  2573  0075C5  6C                 	db	108	;'l'
  2574  0075C6  74                 	db	116	;'t'
  2575  0075C7  65                 	db	101	;'e'
  2576  0075C8  72                 	db	114	;'r'
  2577  0075C9  20                 	db	32
  2578  0075CA  66                 	db	102	;'f'
  2579  0075CB  6F                 	db	111	;'o'
  2580  0075CC  72                 	db	114	;'r'
  2581  0075CD  20                 	db	32
  2582  0075CE  63                 	db	99	;'c'
  2583  0075CF  6C                 	db	108	;'l'
  2584  0075D0  61                 	db	97	;'a'
  2585  0075D1  73                 	db	115	;'s'
  2586  0075D2  73                 	db	115	;'s'
  2587  0075D3  20                 	db	32
  2588  0075D4  69                 	db	105	;'i'
  2589  0075D5  73                 	db	115	;'s'
  2590  0075D6  20                 	db	32
  2591  0075D7  6D                 	db	109	;'m'
  2592  0075D8  69                 	db	105	;'i'
  2593  0075D9  73                 	db	115	;'s'
  2594  0075DA  73                 	db	115	;'s'
  2595  0075DB  69                 	db	105	;'i'
  2596  0075DC  6E                 	db	110	;'n'
  2597  0075DD  67                 	db	103	;'g'
  2598  0075DE  0D                 	db	13
  2599  0075DF  0A                 	db	10
  2600  0075E0  00                 	db	0
  2601  0075E1                     STR_228:
  2602  0075E1  20                 	db	32
  2603  0075E2  20                 	db	32
  2604  0075E3  20                 	db	32
  2605  0075E4  20                 	db	32
  2606  0075E5  20                 	db	32
  2607  0075E6  20                 	db	32
  2608  0075E7  20                 	db	32
  2609  0075E8  20                 	db	32
  2610  0075E9  20                 	db	32
  2611  0075EA  20                 	db	32
  2612  0075EB  20                 	db	32
  2613  0075EC  4D                 	db	77	;'M'
  2614  0075ED  6F                 	db	111	;'o'
  2615  0075EE  64                 	db	100	;'d'
  2616  0075EF  65                 	db	101	;'e'
  2617  0075F0  73                 	db	115	;'s'
  2618  0075F1  3A                 	db	58	;':'
  2619  0075F2  20                 	db	32
  2620  0075F3  76                 	db	118	;'v'
  2621  0075F4  65                 	db	101	;'e'
  2622  0075F5  72                 	db	114	;'r'
  2623  0075F6  62                 	db	98	;'b'
  2624  0075F7  6F                 	db	111	;'o'
  2625  0075F8  73                 	db	115	;'s'
  2626  0075F9  65                 	db	101	;'e'
  2627  0075FA  7C                 	db	124
  2628  0075FB  76                 	db	118	;'v'
  2629  0075FC  73                 	db	115	;'s'
  2630  0075FD  63                 	db	99	;'c'
  2631  0075FE  70                 	db	112	;'p'
  2632  0075FF  7C                 	db	124
  2633  007600  73                 	db	115	;'s'
  2634  007601  6C                 	db	108	;'l'
  2635  007602  63                 	db	99	;'c'
  2636  007603  61                 	db	97	;'a'
  2637  007604  6E                 	db	110	;'n'
  2638  007605  0D                 	db	13
  2639  007606  0A                 	db	10
  2640  007607  00                 	db	0
  2641  007608                     STR_91:
  2642  007608  2D                 	db	45
  2643  007609  45                 	db	69	;'E'
  2644  00760A  52                 	db	82	;'R'
  2645  00760B  52                 	db	82	;'R'
  2646  00760C  4F                 	db	79	;'O'
  2647  00760D  52                 	db	82	;'R'
  2648  00760E  20                 	db	32
  2649  00760F  2D                 	db	45
  2650  007610  20                 	db	32
  2651  007611  66                 	db	102	;'f'
  2652  007612  69                 	db	105	;'i'
  2653  007613  6C                 	db	108	;'l'
  2654  007614  74                 	db	116	;'t'
  2655  007615  65                 	db	101	;'e'
  2656  007616  72                 	db	114	;'r'
  2657  007617  20                 	db	32
  2658  007618  66                 	db	102	;'f'
  2659  007619  6F                 	db	111	;'o'
  2660  00761A  72                 	db	114	;'r'
  2661  00761B  20                 	db	32
  2662  00761C  74                 	db	116	;'t'
  2663  00761D  79                 	db	121	;'y'
  2664  00761E  70                 	db	112	;'p'
  2665  00761F  65                 	db	101	;'e'
  2666  007620  20                 	db	32
  2667  007621  69                 	db	105	;'i'
  2668  007622  73                 	db	115	;'s'
  2669  007623  20                 	db	32
  2670  007624  6D                 	db	109	;'m'
  2671  007625  69                 	db	105	;'i'
  2672  007626  73                 	db	115	;'s'
  2673  007627  73                 	db	115	;'s'
  2674  007628  69                 	db	105	;'i'
  2675  007629  6E                 	db	110	;'n'
  2676  00762A  67                 	db	103	;'g'
  2677  00762B  0D                 	db	13
  2678  00762C  0A                 	db	10
  2679  00762D  00                 	db	0
  2680  00762E                     STR_97:
  2681  00762E  2D                 	db	45
  2682  00762F  45                 	db	69	;'E'
  2683  007630  52                 	db	82	;'R'
  2684  007631  52                 	db	82	;'R'
  2685  007632  4F                 	db	79	;'O'
  2686  007633  52                 	db	82	;'R'
  2687  007634  20                 	db	32
  2688  007635  2D                 	db	45
  2689  007636  20                 	db	32
  2690  007637  4E                 	db	78	;'N'
  2691  007638  6F                 	db	111	;'o'
  2692  007639  20                 	db	32
  2693  00763A  6D                 	db	109	;'m'
  2694  00763B  61                 	db	97	;'a'
  2695  00763C  73                 	db	115	;'s'
  2696  00763D  6B                 	db	107	;'k'
  2697  00763E  20                 	db	32
  2698  00763F  6E                 	db	110	;'n'
  2699  007640  75                 	db	117	;'u'
  2700  007641  6D                 	db	109	;'m'
  2701  007642  62                 	db	98	;'b'
  2702  007643  65                 	db	101	;'e'
  2703  007644  72                 	db	114	;'r'
  2704  007645  20                 	db	32
  2705  007646  73                 	db	115	;'s'
  2706  007647  70                 	db	112	;'p'
  2707  007648  65                 	db	101	;'e'
  2708  007649  63                 	db	99	;'c'
  2709  00764A  69                 	db	105	;'i'
  2710  00764B  66                 	db	102	;'f'
  2711  00764C  69                 	db	105	;'i'
  2712  00764D  65                 	db	101	;'e'
  2713  00764E  64                 	db	100	;'d'
  2714  00764F  2E                 	db	46
  2715  007650  0D                 	db	13
  2716  007651  0A                 	db	10
  2717  007652  00                 	db	0
  2718  007653                     STR_1:
  2719  007653  0D                 	db	13
  2720  007654  0A                 	db	10
  2721  007655  46                 	db	70	;'F'
  2722  007656  72                 	db	114	;'r'
  2723  007657  61                 	db	97	;'a'
  2724  007658  6E                 	db	110	;'n'
  2725  007659  6B                 	db	107	;'k'
  2726  00765A  66                 	db	102	;'f'
  2727  00765B  75                 	db	117	;'u'
  2728  00765C  72                 	db	114	;'r'
  2729  00765D  74                 	db	116	;'t'
  2730  00765E  20                 	db	32
  2731  00765F  52                 	db	82	;'R'
  2732  007660  53                 	db	83	;'S'
  2733  007661  2D                 	db	45
  2734  007662  32                 	db	50	;'2'
  2735  007663  33                 	db	51	;'3'
  2736  007664  32                 	db	50	;'2'
  2737  007665  20                 	db	32
  2738  007666  43                 	db	67	;'C'
  2739  007667  41                 	db	65	;'A'
  2740  007668  4E                 	db	78	;'N'
  2741  007669  34                 	db	52	;'4'
  2742  00766A  56                 	db	86	;'V'
  2743  00766B  53                 	db	83	;'S'
  2744  00766C  43                 	db	67	;'C'
  2745  00766D  50                 	db	80	;'P'
  2746  00766E  20                 	db	32
  2747  00766F  6D                 	db	109	;'m'
  2748  007670  6F                 	db	111	;'o'
  2749  007671  64                 	db	100	;'d'
  2750  007672  75                 	db	117	;'u'
  2751  007673  6C                 	db	108	;'l'
  2752  007674  65                 	db	101	;'e'
  2753  007675  0D                 	db	13
  2754  007676  0A                 	db	10
  2755  007677  00                 	db	0
  2756  007678                     STR_101:
  2757  007678  2D                 	db	45
  2758  007679  45                 	db	69	;'E'
  2759  00767A  52                 	db	82	;'R'
  2760  00767B  52                 	db	82	;'R'
  2761  00767C  4F                 	db	79	;'O'
  2762  00767D  52                 	db	82	;'R'
  2763  00767E  20                 	db	32
  2764  00767F  2D                 	db	45
  2765  007680  20                 	db	32
  2766  007681  6D                 	db	109	;'m'
  2767  007682  61                 	db	97	;'a'
  2768  007683  73                 	db	115	;'s'
  2769  007684  6B                 	db	107	;'k'
  2770  007685  20                 	db	32
  2771  007686  66                 	db	102	;'f'
  2772  007687  6F                 	db	111	;'o'
  2773  007688  72                 	db	114	;'r'
  2774  007689  20                 	db	32
  2775  00768A  63                 	db	99	;'c'
  2776  00768B  6C                 	db	108	;'l'
  2777  00768C  61                 	db	97	;'a'
  2778  00768D  73                 	db	115	;'s'
  2779  00768E  73                 	db	115	;'s'
  2780  00768F  20                 	db	32
  2781  007690  69                 	db	105	;'i'
  2782  007691  73                 	db	115	;'s'
  2783  007692  20                 	db	32
  2784  007693  6D                 	db	109	;'m'
  2785  007694  69                 	db	105	;'i'
  2786  007695  73                 	db	115	;'s'
  2787  007696  73                 	db	115	;'s'
  2788  007697  69                 	db	105	;'i'
  2789  007698  6E                 	db	110	;'n'
  2790  007699  67                 	db	103	;'g'
  2791  00769A  0D                 	db	13
  2792  00769B  0A                 	db	10
  2793  00769C  00                 	db	0
  2794  00769D                     STR_103:
  2795  00769D  2D                 	db	45
  2796  00769E  45                 	db	69	;'E'
  2797  00769F  52                 	db	82	;'R'
  2798  0076A0  52                 	db	82	;'R'
  2799  0076A1  4F                 	db	79	;'O'
  2800  0076A2  52                 	db	82	;'R'
  2801  0076A3  20                 	db	32
  2802  0076A4  2D                 	db	45
  2803  0076A5  20                 	db	32
  2804  0076A6  6D                 	db	109	;'m'
  2805  0076A7  61                 	db	97	;'a'
  2806  0076A8  73                 	db	115	;'s'
  2807  0076A9  6B                 	db	107	;'k'
  2808  0076AA  20                 	db	32
  2809  0076AB  66                 	db	102	;'f'
  2810  0076AC  6F                 	db	111	;'o'
  2811  0076AD  72                 	db	114	;'r'
  2812  0076AE  20                 	db	32
  2813  0076AF  74                 	db	116	;'t'
  2814  0076B0  79                 	db	121	;'y'
  2815  0076B1  70                 	db	112	;'p'
  2816  0076B2  65                 	db	101	;'e'
  2817  0076B3  20                 	db	32
  2818  0076B4  69                 	db	105	;'i'
  2819  0076B5  73                 	db	115	;'s'
  2820  0076B6  20                 	db	32
  2821  0076B7  6D                 	db	109	;'m'
  2822  0076B8  69                 	db	105	;'i'
  2823  0076B9  73                 	db	115	;'s'
  2824  0076BA  73                 	db	115	;'s'
  2825  0076BB  69                 	db	105	;'i'
  2826  0076BC  6E                 	db	110	;'n'
  2827  0076BD  67                 	db	103	;'g'
  2828  0076BE  0D                 	db	13
  2829  0076BF  0A                 	db	10
  2830  0076C0  00                 	db	0
  2831  0076C1                     STR_75:
  2832  0076C1  2B                 	db	43
  2833  0076C2  4F                 	db	79	;'O'
  2834  0076C3  4B                 	db	75	;'K'
  2835  0076C4  20                 	db	32
  2836  0076C5  2D                 	db	45
  2837  0076C6  20                 	db	32
  2838  0076C7  56                 	db	86	;'V'
  2839  0076C8  61                 	db	97	;'a'
  2840  0076C9  6C                 	db	108	;'l'
  2841  0076CA  75                 	db	117	;'u'
  2842  0076CB  65                 	db	101	;'e'
  2843  0076CC  20                 	db	32
  2844  0076CD  77                 	db	119	;'w'
  2845  0076CE  72                 	db	114	;'r'
  2846  0076CF  69                 	db	105	;'i'
  2847  0076D0  74                 	db	116	;'t'
  2848  0076D1  74                 	db	116	;'t'
  2849  0076D2  65                 	db	101	;'e'
  2850  0076D3  6E                 	db	110	;'n'
  2851  0076D4  20                 	db	32
  2852  0076D5  73                 	db	115	;'s'
  2853  0076D6  75                 	db	117	;'u'
  2854  0076D7  63                 	db	99	;'c'
  2855  0076D8  63                 	db	99	;'c'
  2856  0076D9  65                 	db	101	;'e'
  2857  0076DA  73                 	db	115	;'s'
  2858  0076DB  73                 	db	115	;'s'
  2859  0076DC  66                 	db	102	;'f'
  2860  0076DD  75                 	db	117	;'u'
  2861  0076DE  6C                 	db	108	;'l'
  2862  0076DF  6C                 	db	108	;'l'
  2863  0076E0  79                 	db	121	;'y'
  2864  0076E1  0D                 	db	13
  2865  0076E2  0A                 	db	10
  2866  0076E3  00                 	db	0
  2867  0076E4                     STR_221:
  2868  0076E4  53                 	db	83	;'S'
  2869  0076E5  45                 	db	69	;'E'
  2870  0076E6  54                 	db	84	;'T'
  2871  0076E7  20                 	db	32
  2872  0076E8  2D                 	db	45
  2873  0076E9  20                 	db	32
  2874  0076EA  50                 	db	80	;'P'
  2875  0076EB  65                 	db	101	;'e'
  2876  0076EC  72                 	db	114	;'r'
  2877  0076ED  73                 	db	115	;'s'
  2878  0076EE  69                 	db	105	;'i'
  2879  0076EF  73                 	db	115	;'s'
  2880  0076F0  74                 	db	116	;'t'
  2881  0076F1  65                 	db	101	;'e'
  2882  0076F2  6E                 	db	110	;'n'
  2883  0076F3  74                 	db	116	;'t'
  2884  0076F4  20                 	db	32
  2885  0076F5  66                 	db	102	;'f'
  2886  0076F6  75                 	db	117	;'u'
  2887  0076F7  6E                 	db	110	;'n'
  2888  0076F8  63                 	db	99	;'c'
  2889  0076F9  74                 	db	116	;'t'
  2890  0076FA  69                 	db	105	;'i'
  2891  0076FB  6F                 	db	111	;'o'
  2892  0076FC  6E                 	db	110	;'n'
  2893  0076FD  61                 	db	97	;'a'
  2894  0076FE  6C                 	db	108	;'l'
  2895  0076FF  69                 	db	105	;'i'
  2896  007700  74                 	db	116	;'t'
  2897  007701  79                 	db	121	;'y'
  2898  007702  2E                 	db	46
  2899  007703  0D                 	db	13
  2900  007704  0A                 	db	10
  2901  007705  00                 	db	0
  2902  007706                     STR_60:
  2903  007706  2D                 	db	45
  2904  007707  45                 	db	69	;'E'
  2905  007708  52                 	db	82	;'R'
  2906  007709  52                 	db	82	;'R'
  2907  00770A  4F                 	db	79	;'O'
  2908  00770B  52                 	db	82	;'R'
  2909  00770C  20                 	db	32
  2910  00770D  2D                 	db	45
  2911  00770E  20                 	db	32
  2912  00770F  55                 	db	85	;'U'
  2913  007710  6E                 	db	110	;'n'
  2914  007711  61                 	db	97	;'a'
  2915  007712  62                 	db	98	;'b'
  2916  007713  6C                 	db	108	;'l'
  2917  007714  65                 	db	101	;'e'
  2918  007715  20                 	db	32
  2919  007716  74                 	db	116	;'t'
  2920  007717  6F                 	db	111	;'o'
  2921  007718  20                 	db	32
  2922  007719  72                 	db	114	;'r'
  2923  00771A  65                 	db	101	;'e'
  2924  00771B  61                 	db	97	;'a'
  2925  00771C  64                 	db	100	;'d'
  2926  00771D  20                 	db	32
  2927  00771E  72                 	db	114	;'r'
  2928  00771F  65                 	db	101	;'e'
  2929  007720  67                 	db	103	;'g'
  2930  007721  69                 	db	105	;'i'
  2931  007722  73                 	db	115	;'s'
  2932  007723  74                 	db	116	;'t'
  2933  007724  65                 	db	101	;'e'
  2934  007725  72                 	db	114	;'r'
  2935  007726  20                 	db	32
  2936  007727  00                 	db	0
  2937  007728                     STR_210:
  2938  007728  53                 	db	83	;'S'
  2939  007729  54                 	db	84	;'T'
  2940  00772A  41                 	db	65	;'A'
  2941  00772B  54                 	db	84	;'T'
  2942  00772C  20                 	db	32
  2943  00772D  2D                 	db	45
  2944  00772E  20                 	db	32
  2945  00772F  44                 	db	68	;'D'
  2946  007730  69                 	db	105	;'i'
  2947  007731  73                 	db	115	;'s'
  2948  007732  70                 	db	112	;'p'
  2949  007733  6C                 	db	108	;'l'
  2950  007734  61                 	db	97	;'a'
  2951  007735  79                 	db	121	;'y'
  2952  007736  20                 	db	32
  2953  007737  43                 	db	67	;'C'
  2954  007738  41                 	db	65	;'A'
  2955  007739  4E                 	db	78	;'N'
  2956  00773A  20                 	db	32
  2957  00773B  73                 	db	115	;'s'
  2958  00773C  74                 	db	116	;'t'
  2959  00773D  61                 	db	97	;'a'
  2960  00773E  74                 	db	116	;'t'
  2961  00773F  69                 	db	105	;'i'
  2962  007740  73                 	db	115	;'s'
  2963  007741  74                 	db	116	;'t'
  2964  007742  69                 	db	105	;'i'
  2965  007743  63                 	db	99	;'c'
  2966  007744  73                 	db	115	;'s'
  2967  007745  2E                 	db	46
  2968  007746  0D                 	db	13
  2969  007747  0A                 	db	10
  2970  007748  00                 	db	0
  2971  007749                     STR_36:
  2972  007749  2D                 	db	45
  2973  00774A  45                 	db	69	;'E'
  2974  00774B  52                 	db	82	;'R'
  2975  00774C  52                 	db	82	;'R'
  2976  00774D  4F                 	db	79	;'O'
  2977  00774E  52                 	db	82	;'R'
  2978  00774F  20                 	db	32
  2979  007750  2D                 	db	45
  2980  007751  20                 	db	32
  2981  007752  46                 	db	70	;'F'
  2982  007753  61                 	db	97	;'a'
  2983  007754  69                 	db	105	;'i'
  2984  007755  6C                 	db	108	;'l'
  2985  007756  65                 	db	101	;'e'
  2986  007757  64                 	db	100	;'d'
  2987  007758  20                 	db	32
  2988  007759  74                 	db	116	;'t'
  2989  00775A  6F                 	db	111	;'o'
  2990  00775B  20                 	db	32
  2991  00775C  73                 	db	115	;'s'
  2992  00775D  65                 	db	101	;'e'
  2993  00775E  6E                 	db	110	;'n'
  2994  00775F  64                 	db	100	;'d'
  2995  007760  20                 	db	32
  2996  007761  65                 	db	101	;'e'
  2997  007762  76                 	db	118	;'v'
  2998  007763  65                 	db	101	;'e'
  2999  007764  6E                 	db	110	;'n'
  3000  007765  74                 	db	116	;'t'
  3001  007766  2E                 	db	46
  3002  007767  0D                 	db	13
  3003  007768  0A                 	db	10
  3004  007769  00                 	db	0
  3005  00776A                     STR_122:
  3006  00776A  2D                 	db	45
  3007  00776B  45                 	db	69	;'E'
  3008  00776C  52                 	db	82	;'R'
  3009  00776D  52                 	db	82	;'R'
  3010  00776E  4F                 	db	79	;'O'
  3011  00776F  52                 	db	82	;'R'
  3012  007770  20                 	db	32
  3013  007771  2D                 	db	45
  3014  007772  20                 	db	32
  3015  007773  55                 	db	85	;'U'
  3016  007774  6E                 	db	110	;'n'
  3017  007775  6B                 	db	107	;'k'
  3018  007776  6E                 	db	110	;'n'
  3019  007777  6F                 	db	111	;'o'
  3020  007778  77                 	db	119	;'w'
  3021  007779  6E                 	db	110	;'n'
  3022  00777A  20                 	db	32
  3023  00777B  27                 	db	39
  3024  00777C  53                 	db	83	;'S'
  3025  00777D  45                 	db	69	;'E'
  3026  00777E  54                 	db	84	;'T'
  3027  00777F  27                 	db	39
  3028  007780  20                 	db	32
  3029  007781  63                 	db	99	;'c'
  3030  007782  6F                 	db	111	;'o'
  3031  007783  6D                 	db	109	;'m'
  3032  007784  6D                 	db	109	;'m'
  3033  007785  61                 	db	97	;'a'
  3034  007786  6E                 	db	110	;'n'
  3035  007787  64                 	db	100	;'d'
  3036  007788  0D                 	db	13
  3037  007789  0A                 	db	10
  3038  00778A  00                 	db	0
  3039  00778B                     STR_76:
  3040  00778B  2D                 	db	45
  3041  00778C  45                 	db	69	;'E'
  3042  00778D  52                 	db	82	;'R'
  3043  00778E  52                 	db	82	;'R'
  3044  00778F  4F                 	db	79	;'O'
  3045  007790  52                 	db	82	;'R'
  3046  007791  20                 	db	32
  3047  007792  2D                 	db	45
  3048  007793  20                 	db	32
  3049  007794  46                 	db	70	;'F'
  3050  007795  61                 	db	97	;'a'
  3051  007796  69                 	db	105	;'i'
  3052  007797  6C                 	db	108	;'l'
  3053  007798  65                 	db	101	;'e'
  3054  007799  64                 	db	100	;'d'
  3055  00779A  20                 	db	32
  3056  00779B  74                 	db	116	;'t'
  3057  00779C  6F                 	db	111	;'o'
  3058  00779D  20                 	db	32
  3059  00779E  77                 	db	119	;'w'
  3060  00779F  72                 	db	114	;'r'
  3061  0077A0  69                 	db	105	;'i'
  3062  0077A1  74                 	db	116	;'t'
  3063  0077A2  65                 	db	101	;'e'
  3064  0077A3  20                 	db	32
  3065  0077A4  76                 	db	118	;'v'
  3066  0077A5  61                 	db	97	;'a'
  3067  0077A6  6C                 	db	108	;'l'
  3068  0077A7  75                 	db	117	;'u'
  3069  0077A8  65                 	db	101	;'e'
  3070  0077A9  0D                 	db	13
  3071  0077AA  0A                 	db	10
  3072  0077AB  00                 	db	0
  3073  0077AC                     STR_49:
  3074  0077AC  2D                 	db	45
  3075  0077AD  45                 	db	69	;'E'
  3076  0077AE  52                 	db	82	;'R'
  3077  0077AF  52                 	db	82	;'R'
  3078  0077B0  4F                 	db	79	;'O'
  3079  0077B1  52                 	db	82	;'R'
  3080  0077B2  20                 	db	32
  3081  0077B3  2D                 	db	45
  3082  0077B4  20                 	db	32
  3083  0077B5  4E                 	db	78	;'N'
  3084  0077B6  65                 	db	101	;'e'
  3085  0077B7  65                 	db	101	;'e'
  3086  0077B8  64                 	db	100	;'d'
  3087  0077B9  73                 	db	115	;'s'
  3088  0077BA  20                 	db	32
  3089  0077BB  5B                 	db	91	;'['
  3090  0077BC  70                 	db	112	;'p'
  3091  0077BD  61                 	db	97	;'a'
  3092  0077BE  67                 	db	103	;'g'
  3093  0077BF  65                 	db	101	;'e'
  3094  0077C0  3A                 	db	58	;':'
  3095  0077C1  5D                 	db	93	;']'
  3096  0077C2  72                 	db	114	;'r'
  3097  0077C3  65                 	db	101	;'e'
  3098  0077C4  67                 	db	103	;'g'
  3099  0077C5  69                 	db	105	;'i'
  3100  0077C6  73                 	db	115	;'s'
  3101  0077C7  74                 	db	116	;'t'
  3102  0077C8  65                 	db	101	;'e'
  3103  0077C9  72                 	db	114	;'r'
  3104  0077CA  0D                 	db	13
  3105  0077CB  0A                 	db	10
  3106  0077CC  00                 	db	0
  3107  0077CD                     STR_117:
  3108  0077CD  2B                 	db	43
  3109  0077CE  4F                 	db	79	;'O'
  3110  0077CF  4B                 	db	75	;'K'
  3111  0077D0  20                 	db	32
  3112  0077D1  2D                 	db	45
  3113  0077D2  20                 	db	32
  3114  0077D3  4D                 	db	77	;'M'
  3115  0077D4  6F                 	db	111	;'o'
  3116  0077D5  64                 	db	100	;'d'
  3117  0077D6  65                 	db	101	;'e'
  3118  0077D7  20                 	db	32
  3119  0077D8  69                 	db	105	;'i'
  3120  0077D9  73                 	db	115	;'s'
  3121  0077DA  20                 	db	32
  3122  0077DB  6E                 	db	110	;'n'
  3123  0077DC  6F                 	db	111	;'o'
  3124  0077DD  77                 	db	119	;'w'
  3125  0077DE  20                 	db	32
  3126  0077DF  56                 	db	86	;'V'
  3127  0077E0  53                 	db	83	;'S'
  3128  0077E1  43                 	db	67	;'C'
  3129  0077E2  50                 	db	80	;'P'
  3130  0077E3  20                 	db	32
  3131  0077E4  44                 	db	68	;'D'
  3132  0077E5  72                 	db	114	;'r'
  3133  0077E6  69                 	db	105	;'i'
  3134  0077E7  76                 	db	118	;'v'
  3135  0077E8  65                 	db	101	;'e'
  3136  0077E9  72                 	db	114	;'r'
  3137  0077EA  0D                 	db	13
  3138  0077EB  0A                 	db	10
  3139  0077EC  00                 	db	0
  3140  0077ED                     STR_6:
  3141  0077ED  57                 	db	87	;'W'
  3142  0077EE  69                 	db	105	;'i'
  3143  0077EF  6C                 	db	108	;'l'
  3144  0077F0  6C                 	db	108	;'l'
  3145  0077F1  20                 	db	32
  3146  0077F2  65                 	db	101	;'e'
  3147  0077F3  6E                 	db	110	;'n'
  3148  0077F4  74                 	db	116	;'t'
  3149  0077F5  65                 	db	101	;'e'
  3150  0077F6  72                 	db	114	;'r'
  3151  0077F7  20                 	db	32
  3152  0077F8  62                 	db	98	;'b'
  3153  0077F9  6F                 	db	111	;'o'
  3154  0077FA  6F                 	db	111	;'o'
  3155  0077FB  74                 	db	116	;'t'
  3156  0077FC  6C                 	db	108	;'l'
  3157  0077FD  6F                 	db	111	;'o'
  3158  0077FE  61                 	db	97	;'a'
  3159  0077FF  64                 	db	100	;'d'
  3160  007800  65                 	db	101	;'e'
  3161  007801  72                 	db	114	;'r'
  3162  007802  20                 	db	32
  3163  007803  6E                 	db	110	;'n'
  3164  007804  6F                 	db	111	;'o'
  3165  007805  77                 	db	119	;'w'
  3166  007806  2E                 	db	46
  3167  007807  2E                 	db	46
  3168  007808  2E                 	db	46
  3169  007809  0D                 	db	13
  3170  00780A  0A                 	db	10
  3171  00780B  00                 	db	0
  3172  00780C                     STR_204:
  3173  00780C  43                 	db	67	;'C'
  3174  00780D  4C                 	db	76	;'L'
  3175  00780E  4F                 	db	79	;'O'
  3176  00780F  53                 	db	83	;'S'
  3177  007810  45                 	db	69	;'E'
  3178  007811  20                 	db	32
  3179  007812  2D                 	db	45
  3180  007813  20                 	db	32
  3181  007814  43                 	db	67	;'C'
  3182  007815  6C                 	db	108	;'l'
  3183  007816  6F                 	db	111	;'o'
  3184  007817  73                 	db	115	;'s'
  3185  007818  65                 	db	101	;'e'
  3186  007819  20                 	db	32
  3187  00781A  43                 	db	67	;'C'
  3188  00781B  41                 	db	65	;'A'
  3189  00781C  4E                 	db	78	;'N'
  3190  00781D  20                 	db	32
  3191  00781E  69                 	db	105	;'i'
  3192  00781F  6E                 	db	110	;'n'
  3193  007820  74                 	db	116	;'t'
  3194  007821  65                 	db	101	;'e'
  3195  007822  72                 	db	114	;'r'
  3196  007823  66                 	db	102	;'f'
  3197  007824  61                 	db	97	;'a'
  3198  007825  63                 	db	99	;'c'
  3199  007826  65                 	db	101	;'e'
  3200  007827  2E                 	db	46
  3201  007828  0D                 	db	13
  3202  007829  0A                 	db	10
  3203  00782A  00                 	db	0
  3204  00782B                     STR_4:
  3205  00782B  54                 	db	84	;'T'
  3206  00782C  65                 	db	101	;'e'
  3207  00782D  6D                 	db	109	;'m'
  3208  00782E  70                 	db	112	;'p'
  3209  00782F  6F                 	db	111	;'o'
  3210  007830  72                 	db	114	;'r'
  3211  007831  61                 	db	97	;'a'
  3212  007832  72                 	db	114	;'r'
  3213  007833  79                 	db	121	;'y'
  3214  007834  20                 	db	32
  3215  007835  76                 	db	118	;'v'
  3216  007836  65                 	db	101	;'e'
  3217  007837  72                 	db	114	;'r'
  3218  007838  62                 	db	98	;'b'
  3219  007839  6F                 	db	111	;'o'
  3220  00783A  73                 	db	115	;'s'
  3221  00783B  65                 	db	101	;'e'
  3222  00783C  20                 	db	32
  3223  00783D  6D                 	db	109	;'m'
  3224  00783E  6F                 	db	111	;'o'
  3225  00783F  64                 	db	100	;'d'
  3226  007840  65                 	db	101	;'e'
  3227  007841  20                 	db	32
  3228  007842  73                 	db	115	;'s'
  3229  007843  65                 	db	101	;'e'
  3230  007844  74                 	db	116	;'t'
  3231  007845  0D                 	db	13
  3232  007846  0A                 	db	10
  3233  007847  00                 	db	0
  3234  007848                     STR_115:
  3235  007848  2B                 	db	43
  3236  007849  4F                 	db	79	;'O'
  3237  00784A  4B                 	db	75	;'K'
  3238  00784B  20                 	db	32
  3239  00784C  2D                 	db	45
  3240  00784D  20                 	db	32
  3241  00784E  4D                 	db	77	;'M'
  3242  00784F  6F                 	db	111	;'o'
  3243  007850  64                 	db	100	;'d'
  3244  007851  65                 	db	101	;'e'
  3245  007852  20                 	db	32
  3246  007853  69                 	db	105	;'i'
  3247  007854  73                 	db	115	;'s'
  3248  007855  20                 	db	32
  3249  007856  6E                 	db	110	;'n'
  3250  007857  6F                 	db	111	;'o'
  3251  007858  77                 	db	119	;'w'
  3252  007859  20                 	db	32
  3253  00785A  76                 	db	118	;'v'
  3254  00785B  65                 	db	101	;'e'
  3255  00785C  72                 	db	114	;'r'
  3256  00785D  62                 	db	98	;'b'
  3257  00785E  6F                 	db	111	;'o'
  3258  00785F  73                 	db	115	;'s'
  3259  007860  65                 	db	101	;'e'
  3260  007861  0D                 	db	13
  3261  007862  0A                 	db	10
  3262  007863  00                 	db	0
  3263  007864                     STR_199:
  3264  007864  42                 	db	66	;'B'
  3265  007865  4F                 	db	79	;'O'
  3266  007866  4F                 	db	79	;'O'
  3267  007867  54                 	db	84	;'T'
  3268  007868  20                 	db	32
  3269  007869  2D                 	db	45
  3270  00786A  20                 	db	32
  3271  00786B  45                 	db	69	;'E'
  3272  00786C  6E                 	db	110	;'n'
  3273  00786D  74                 	db	116	;'t'
  3274  00786E  65                 	db	101	;'e'
  3275  00786F  72                 	db	114	;'r'
  3276  007870  20                 	db	32
  3277  007871  62                 	db	98	;'b'
  3278  007872  6F                 	db	111	;'o'
  3279  007873  6F                 	db	111	;'o'
  3280  007874  74                 	db	116	;'t'
  3281  007875  6C                 	db	108	;'l'
  3282  007876  6F                 	db	111	;'o'
  3283  007877  61                 	db	97	;'a'
  3284  007878  64                 	db	100	;'d'
  3285  007879  65                 	db	101	;'e'
  3286  00787A  72                 	db	114	;'r'
  3287  00787B  2E                 	db	46
  3288  00787C  0D                 	db	13
  3289  00787D  0A                 	db	10
  3290  00787E  00                 	db	0
  3291  00787F                     STR_123:
  3292  00787F  2D                 	db	45
  3293  007880  45                 	db	69	;'E'
  3294  007881  52                 	db	82	;'R'
  3295  007882  52                 	db	82	;'R'
  3296  007883  4F                 	db	79	;'O'
  3297  007884  52                 	db	82	;'R'
  3298  007885  20                 	db	32
  3299  007886  2D                 	db	45
  3300  007887  20                 	db	32
  3301  007888  55                 	db	85	;'U'
  3302  007889  6E                 	db	110	;'n'
  3303  00788A  6B                 	db	107	;'k'
  3304  00788B  6E                 	db	110	;'n'
  3305  00788C  6F                 	db	111	;'o'
  3306  00788D  77                 	db	119	;'w'
  3307  00788E  6E                 	db	110	;'n'
  3308  00788F  20                 	db	32
  3309  007890  63                 	db	99	;'c'
  3310  007891  6F                 	db	111	;'o'
  3311  007892  6D                 	db	109	;'m'
  3312  007893  6D                 	db	109	;'m'
  3313  007894  61                 	db	97	;'a'
  3314  007895  6E                 	db	110	;'n'
  3315  007896  64                 	db	100	;'d'
  3316  007897  0D                 	db	13
  3317  007898  0A                 	db	10
  3318  007899  00                 	db	0
  3319  00789A                     STR_230:
  3320  00789A  4E                 	db	78	;'N'
  3321  00789B  6F                 	db	111	;'o'
  3322  00789C  64                 	db	100	;'d'
  3323  00789D  65                 	db	101	;'e'
  3324  00789E  20                 	db	32
  3325  00789F  66                 	db	102	;'f'
  3326  0078A0  6F                 	db	111	;'o'
  3327  0078A1  75                 	db	117	;'u'
  3328  0078A2  6E                 	db	110	;'n'
  3329  0078A3  64                 	db	100	;'d'
  3330  0078A4  20                 	db	32
  3331  0078A5  77                 	db	119	;'w'
  3332  0078A6  69                 	db	105	;'i'
  3333  0078A7  74                 	db	116	;'t'
  3334  0078A8  68                 	db	104	;'h'
  3335  0078A9  20                 	db	32
  3336  0078AA  6E                 	db	110	;'n'
  3337  0078AB  6F                 	db	111	;'o'
  3338  0078AC  64                 	db	100	;'d'
  3339  0078AD  65                 	db	101	;'e'
  3340  0078AE  20                 	db	32
  3341  0078AF  69                 	db	105	;'i'
  3342  0078B0  64                 	db	100	;'d'
  3343  0078B1  20                 	db	32
  3344  0078B2  3D                 	db	61	;'='
  3345  0078B3  20                 	db	32
  3346  0078B4  00                 	db	0
  3347  0078B5                     STR_119:
  3348  0078B5  2B                 	db	43
  3349  0078B6  4F                 	db	79	;'O'
  3350  0078B7  4B                 	db	75	;'K'
  3351  0078B8  20                 	db	32
  3352  0078B9  2D                 	db	45
  3353  0078BA  20                 	db	32
  3354  0078BB  4D                 	db	77	;'M'
  3355  0078BC  6F                 	db	111	;'o'
  3356  0078BD  64                 	db	100	;'d'
  3357  0078BE  65                 	db	101	;'e'
  3358  0078BF  20                 	db	32
  3359  0078C0  69                 	db	105	;'i'
  3360  0078C1  73                 	db	115	;'s'
  3361  0078C2  20                 	db	32
  3362  0078C3  6E                 	db	110	;'n'
  3363  0078C4  6F                 	db	111	;'o'
  3364  0078C5  77                 	db	119	;'w'
  3365  0078C6  20                 	db	32
  3366  0078C7  53                 	db	83	;'S'
  3367  0078C8  4C                 	db	76	;'L'
  3368  0078C9  43                 	db	67	;'C'
  3369  0078CA  41                 	db	65	;'A'
  3370  0078CB  4E                 	db	78	;'N'
  3371  0078CC  0D                 	db	13
  3372  0078CD  0A                 	db	10
  3373  0078CE  00                 	db	0
  3374  0078CF                     STR_24:
  3375  0078CF  2B                 	db	43
  3376  0078D0  4F                 	db	79	;'O'
  3377  0078D1  4B                 	db	75	;'K'
  3378  0078D2  20                 	db	32
  3379  0078D3  2D                 	db	45
  3380  0078D4  20                 	db	32
  3381  0078D5  4C                 	db	76	;'L'
  3382  0078D6  69                 	db	105	;'i'
  3383  0078D7  73                 	db	115	;'s'
  3384  0078D8  74                 	db	116	;'t'
  3385  0078D9  65                 	db	101	;'e'
  3386  0078DA  6E                 	db	110	;'n'
  3387  0078DB  20                 	db	32
  3388  0078DC  6F                 	db	111	;'o'
  3389  0078DD  6E                 	db	110	;'n'
  3390  0078DE  6C                 	db	108	;'l'
  3391  0078DF  79                 	db	121	;'y'
  3392  0078E0  20                 	db	32
  3393  0078E1  6D                 	db	109	;'m'
  3394  0078E2  6F                 	db	111	;'o'
  3395  0078E3  64                 	db	100	;'d'
  3396  0078E4  65                 	db	101	;'e'
  3397  0078E5  0D                 	db	13
  3398  0078E6  0A                 	db	10
  3399  0078E7  00                 	db	0
  3400  0078E8                     STR_183:
  3401  0078E8  54                 	db	84	;'T'
  3402  0078E9  72                 	db	114	;'r'
  3403  0078EA  61                 	db	97	;'a'
  3404  0078EB  6E                 	db	110	;'n'
  3405  0078EC  73                 	db	115	;'s'
  3406  0078ED  6D                 	db	109	;'m'
  3407  0078EE  69                 	db	105	;'i'
  3408  0078EF  74                 	db	116	;'t'
  3409  0078F0  20                 	db	32
  3410  0078F1  45                 	db	69	;'E'
  3411  0078F2  72                 	db	114	;'r'
  3412  0078F3  72                 	db	114	;'r'
  3413  0078F4  6F                 	db	111	;'o'
  3414  0078F5  72                 	db	114	;'r'
  3415  0078F6  20                 	db	32
  3416  0078F7  43                 	db	67	;'C'
  3417  0078F8  6F                 	db	111	;'o'
  3418  0078F9  75                 	db	117	;'u'
  3419  0078FA  6E                 	db	110	;'n'
  3420  0078FB  74                 	db	116	;'t'
  3421  0078FC  65                 	db	101	;'e'
  3422  0078FD  72                 	db	114	;'r'
  3423  0078FE  3A                 	db	58	;':'
  3424  0078FF  20                 	db	32
  3425  007900  00                 	db	0
  3426  007901                     STR_207:
  3427  007901  54                 	db	84	;'T'
  3428  007902  58                 	db	88	;'X'
  3429  007903  20                 	db	32
  3430  007904  2D                 	db	45
  3431  007905  20                 	db	32
  3432  007906  53                 	db	83	;'S'
  3433  007907  65                 	db	101	;'e'
  3434  007908  6E                 	db	110	;'n'
  3435  007909  64                 	db	100	;'d'
  3436  00790A  20                 	db	32
  3437  00790B  43                 	db	67	;'C'
  3438  00790C  41                 	db	65	;'A'
  3439  00790D  4E                 	db	78	;'N'
  3440  00790E  20                 	db	32
  3441  00790F  66                 	db	102	;'f'
  3442  007910  72                 	db	114	;'r'
  3443  007911  61                 	db	97	;'a'
  3444  007912  6D                 	db	109	;'m'
  3445  007913  65                 	db	101	;'e'
  3446  007914  20                 	db	32
  3447  007915  2E                 	db	46
  3448  007916  0D                 	db	13
  3449  007917  0A                 	db	10
  3450  007918  00                 	db	0
  3451  007919                     STR_217:
  3452  007919  46                 	db	70	;'F'
  3453  00791A  49                 	db	73	;'I'
  3454  00791B  4C                 	db	76	;'L'
  3455  00791C  54                 	db	84	;'T'
  3456  00791D  45                 	db	69	;'E'
  3457  00791E  52                 	db	82	;'R'
  3458  00791F  20                 	db	32
  3459  007920  2D                 	db	45
  3460  007921  20                 	db	32
  3461  007922  53                 	db	83	;'S'
  3462  007923  65                 	db	101	;'e'
  3463  007924  74                 	db	116	;'t'
  3464  007925  20                 	db	32
  3465  007926  66                 	db	102	;'f'
  3466  007927  69                 	db	105	;'i'
  3467  007928  6C                 	db	108	;'l'
  3468  007929  74                 	db	116	;'t'
  3469  00792A  65                 	db	101	;'e'
  3470  00792B  72                 	db	114	;'r'
  3471  00792C  20                 	db	32
  3472  00792D  2E                 	db	46
  3473  00792E  0D                 	db	13
  3474  00792F  0A                 	db	10
  3475  007930  00                 	db	0
  3476  007931                     STR_47:
  3477  007931  2D                 	db	45
  3478  007932  45                 	db	69	;'E'
  3479  007933  52                 	db	82	;'R'
  3480  007934  52                 	db	82	;'R'
  3481  007935  4F                 	db	79	;'O'
  3482  007936  52                 	db	82	;'R'
  3483  007937  20                 	db	32
  3484  007938  2D                 	db	45
  3485  007939  20                 	db	32
  3486  00793A  4E                 	db	78	;'N'
  3487  00793B  65                 	db	101	;'e'
  3488  00793C  65                 	db	101	;'e'
  3489  00793D  64                 	db	100	;'d'
  3490  00793E  73                 	db	115	;'s'
  3491  00793F  20                 	db	32
  3492  007940  6E                 	db	110	;'n'
  3493  007941  6F                 	db	111	;'o'
  3494  007942  64                 	db	100	;'d'
  3495  007943  65                 	db	101	;'e'
  3496  007944  69                 	db	105	;'i'
  3497  007945  64                 	db	100	;'d'
  3498  007946  0D                 	db	13
  3499  007947  0A                 	db	10
  3500  007948  00                 	db	0
  3501  007949                     STR_27:
  3502  007949  2D                 	db	45
  3503  00794A  45                 	db	69	;'E'
  3504  00794B  52                 	db	82	;'R'
  3505  00794C  52                 	db	82	;'R'
  3506  00794D  4F                 	db	79	;'O'
  3507  00794E  52                 	db	82	;'R'
  3508  00794F  20                 	db	32
  3509  007950  2D                 	db	45
  3510  007951  20                 	db	32
  3511  007952  55                 	db	85	;'U'
  3512  007953  6E                 	db	110	;'n'
  3513  007954  6B                 	db	107	;'k'
  3514  007955  6E                 	db	110	;'n'
  3515  007956  6F                 	db	111	;'o'
  3516  007957  77                 	db	119	;'w'
  3517  007958  6E                 	db	110	;'n'
  3518  007959  20                 	db	32
  3519  00795A  6D                 	db	109	;'m'
  3520  00795B  6F                 	db	111	;'o'
  3521  00795C  64                 	db	100	;'d'
  3522  00795D  65                 	db	101	;'e'
  3523  00795E  0D                 	db	13
  3524  00795F  0A                 	db	10
  3525  007960  00                 	db	0
  3526  007961                     STR_74:
  3527  007961  2D                 	db	45
  3528  007962  45                 	db	69	;'E'
  3529  007963  52                 	db	82	;'R'
  3530  007964  52                 	db	82	;'R'
  3531  007965  4F                 	db	79	;'O'
  3532  007966  52                 	db	82	;'R'
  3533  007967  20                 	db	32
  3534  007968  2D                 	db	45
  3535  007969  20                 	db	32
  3536  00796A  4E                 	db	78	;'N'
  3537  00796B  65                 	db	101	;'e'
  3538  00796C  65                 	db	101	;'e'
  3539  00796D  64                 	db	100	;'d'
  3540  00796E  20                 	db	32
  3541  00796F  61                 	db	97	;'a'
  3542  007970  20                 	db	32
  3543  007971  76                 	db	118	;'v'
  3544  007972  61                 	db	97	;'a'
  3545  007973  6C                 	db	108	;'l'
  3546  007974  75                 	db	117	;'u'
  3547  007975  65                 	db	101	;'e'
  3548  007976  0D                 	db	13
  3549  007977  0A                 	db	10
  3550  007978  00                 	db	0
  3551  007979                     STR_190:
  3552  007979  52                 	db	82	;'R'
  3553  00797A  65                 	db	101	;'e'
  3554  00797B  63                 	db	99	;'c'
  3555  00797C  65                 	db	101	;'e'
  3556  00797D  69                 	db	105	;'i'
  3557  00797E  76                 	db	118	;'v'
  3558  00797F  65                 	db	101	;'e'
  3559  007980  20                 	db	32
  3560  007981  45                 	db	69	;'E'
  3561  007982  72                 	db	114	;'r'
  3562  007983  72                 	db	114	;'r'
  3563  007984  6F                 	db	111	;'o'
  3564  007985  72                 	db	114	;'r'
  3565  007986  20                 	db	32
  3566  007987  43                 	db	67	;'C'
  3567  007988  6F                 	db	111	;'o'
  3568  007989  75                 	db	117	;'u'
  3569  00798A  6E                 	db	110	;'n'
  3570  00798B  74                 	db	116	;'t'
  3571  00798C  65                 	db	101	;'e'
  3572  00798D  72                 	db	114	;'r'
  3573  00798E  3A                 	db	58	;':'
  3574  00798F  20                 	db	32
  3575  007990  00                 	db	0
  3576  007991                     STR_175:
  3577  007991  55                 	db	85	;'U'
  3578  007992  41                 	db	65	;'A'
  3579  007993  52                 	db	82	;'R'
  3580  007994  54                 	db	84	;'T'
  3581  007995  20                 	db	32
  3582  007996  52                 	db	82	;'R'
  3583  007997  65                 	db	101	;'e'
  3584  007998  63                 	db	99	;'c'
  3585  007999  65                 	db	101	;'e'
  3586  00799A  69                 	db	105	;'i'
  3587  00799B  76                 	db	118	;'v'
  3588  00799C  65                 	db	101	;'e'
  3589  00799D  20                 	db	32
  3590  00799E  6F                 	db	111	;'o'
  3591  00799F  76                 	db	118	;'v'
  3592  0079A0  65                 	db	101	;'e'
  3593  0079A1  72                 	db	114	;'r'
  3594  0079A2  72                 	db	114	;'r'
  3595  0079A3  75                 	db	117	;'u'
  3596  0079A4  6E                 	db	110	;'n'
  3597  0079A5  73                 	db	115	;'s'
  3598  0079A6  3A                 	db	58	;':'
  3599  0079A7  20                 	db	32
  3600  0079A8  00                 	db	0
  3601  0079A9                     STR_171:
  3602  0079A9  43                 	db	67	;'C'
  3603  0079AA  41                 	db	65	;'A'
  3604  0079AB  4E                 	db	78	;'N'
  3605  0079AC  20                 	db	32
  3606  0079AD  54                 	db	84	;'T'
  3607  0079AE  72                 	db	114	;'r'
  3608  0079AF  61                 	db	97	;'a'
  3609  0079B0  6E                 	db	110	;'n'
  3610  0079B1  73                 	db	115	;'s'
  3611  0079B2  6D                 	db	109	;'m'
  3612  0079B3  69                 	db	105	;'i'
  3613  0079B4  74                 	db	116	;'t'
  3614  0079B5  20                 	db	32
  3615  0079B6  6F                 	db	111	;'o'
  3616  0079B7  76                 	db	118	;'v'
  3617  0079B8  65                 	db	101	;'e'
  3618  0079B9  72                 	db	114	;'r'
  3619  0079BA  72                 	db	114	;'r'
  3620  0079BB  75                 	db	117	;'u'
  3621  0079BC  6E                 	db	110	;'n'
  3622  0079BD  73                 	db	115	;'s'
  3623  0079BE  3A                 	db	58	;':'
  3624  0079BF  20                 	db	32
  3625  0079C0  00                 	db	0
  3626  0079C1                     STR_209:
  3627  0079C1  52                 	db	82	;'R'
  3628  0079C2  58                 	db	88	;'X'
  3629  0079C3  20                 	db	32
  3630  0079C4  2D                 	db	45
  3631  0079C5  20                 	db	32
  3632  0079C6  52                 	db	82	;'R'
  3633  0079C7  65                 	db	101	;'e'
  3634  0079C8  61                 	db	97	;'a'
  3635  0079C9  64                 	db	100	;'d'
  3636  0079CA  20                 	db	32
  3637  0079CB  43                 	db	67	;'C'
  3638  0079CC  41                 	db	65	;'A'
  3639  0079CD  4E                 	db	78	;'N'
  3640  0079CE  20                 	db	32
  3641  0079CF  66                 	db	102	;'f'
  3642  0079D0  72                 	db	114	;'r'
  3643  0079D1  61                 	db	97	;'a'
  3644  0079D2  6D                 	db	109	;'m'
  3645  0079D3  65                 	db	101	;'e'
  3646  0079D4  2E                 	db	46
  3647  0079D5  0D                 	db	13
  3648  0079D6  0A                 	db	10
  3649  0079D7  00                 	db	0
  3650  0079D8                     STR_167:
  3651  0079D8  43                 	db	67	;'C'
  3652  0079D9  41                 	db	65	;'A'
  3653  0079DA  4E                 	db	78	;'N'
  3654  0079DB  20                 	db	32
  3655  0079DC  52                 	db	82	;'R'
  3656  0079DD  65                 	db	101	;'e'
  3657  0079DE  63                 	db	99	;'c'
  3658  0079DF  65                 	db	101	;'e'
  3659  0079E0  69                 	db	105	;'i'
  3660  0079E1  76                 	db	118	;'v'
  3661  0079E2  65                 	db	101	;'e'
  3662  0079E3  20                 	db	32
  3663  0079E4  6F                 	db	111	;'o'
  3664  0079E5  76                 	db	118	;'v'
  3665  0079E6  65                 	db	101	;'e'
  3666  0079E7  72                 	db	114	;'r'
  3667  0079E8  72                 	db	114	;'r'
  3668  0079E9  75                 	db	117	;'u'
  3669  0079EA  6E                 	db	110	;'n'
  3670  0079EB  73                 	db	115	;'s'
  3671  0079EC  3A                 	db	58	;':'
  3672  0079ED  20                 	db	32
  3673  0079EE  00                 	db	0
  3674  0079EF                     STR_252:
  3675  0079EF  55                 	db	85	;'U'
  3676  0079F0  6E                 	db	110	;'n'
  3677  0079F1  6B                 	db	107	;'k'
  3678  0079F2  6E                 	db	110	;'n'
  3679  0079F3  6F                 	db	111	;'o'
  3680  0079F4  77                 	db	119	;'w'
  3681  0079F5  6E                 	db	110	;'n'
  3682  0079F6  20                 	db	32
  3683  0079F7  28                 	db	40
  3684  0079F8  56                 	db	86	;'V'
  3685  0079F9  65                 	db	101	;'e'
  3686  0079FA  72                 	db	114	;'r'
  3687  0079FB  62                 	db	98	;'b'
  3688  0079FC  6F                 	db	111	;'o'
  3689  0079FD  73                 	db	115	;'s'
  3690  0079FE  65                 	db	101	;'e'
  3691  0079FF  20                 	db	32
  3692  007A00  75                 	db	117	;'u'
  3693  007A01  73                 	db	115	;'s'
  3694  007A02  65                 	db	101	;'e'
  3695  007A03  64                 	db	100	;'d'
  3696  007A04  29                 	db	41
  3697  007A05  00                 	db	0
  3698  007A06                     STR_23:
  3699  007A06  2B                 	db	43
  3700  007A07  4F                 	db	79	;'O'
  3701  007A08  4B                 	db	75	;'K'
  3702  007A09  20                 	db	32
  3703  007A0A  2D                 	db	45
  3704  007A0B  20                 	db	32
  3705  007A0C  4C                 	db	76	;'L'
  3706  007A0D  6F                 	db	111	;'o'
  3707  007A0E  6F                 	db	111	;'o'
  3708  007A0F  70                 	db	112	;'p'
  3709  007A10  62                 	db	98	;'b'
  3710  007A11  61                 	db	97	;'a'
  3711  007A12  63                 	db	99	;'c'
  3712  007A13  6B                 	db	107	;'k'
  3713  007A14  20                 	db	32
  3714  007A15  6D                 	db	109	;'m'
  3715  007A16  6F                 	db	111	;'o'
  3716  007A17  64                 	db	100	;'d'
  3717  007A18  65                 	db	101	;'e'
  3718  007A19  0D                 	db	13
  3719  007A1A  0A                 	db	10
  3720  007A1B  00                 	db	0
  3721  007A1C                     STR_159:
  3722  007A1C  52                 	db	82	;'R'
  3723  007A1D  65                 	db	101	;'e'
  3724  007A1E  63                 	db	99	;'c'
  3725  007A1F  65                 	db	101	;'e'
  3726  007A20  69                 	db	105	;'i'
  3727  007A21  76                 	db	118	;'v'
  3728  007A22  65                 	db	101	;'e'
  3729  007A23  64                 	db	100	;'d'
  3730  007A24  20                 	db	32
  3731  007A25  43                 	db	67	;'C'
  3732  007A26  41                 	db	65	;'A'
  3733  007A27  4E                 	db	78	;'N'
  3734  007A28  20                 	db	32
  3735  007A29  66                 	db	102	;'f'
  3736  007A2A  72                 	db	114	;'r'
  3737  007A2B  61                 	db	97	;'a'
  3738  007A2C  6D                 	db	109	;'m'
  3739  007A2D  65                 	db	101	;'e'
  3740  007A2E  73                 	db	115	;'s'
  3741  007A2F  3A                 	db	58	;':'
  3742  007A30  20                 	db	32
  3743  007A31  00                 	db	0
  3744  007A32                     STR_163:
  3745  007A32  52                 	db	82	;'R'
  3746  007A33  65                 	db	101	;'e'
  3747  007A34  63                 	db	99	;'c'
  3748  007A35  65                 	db	101	;'e'
  3749  007A36  69                 	db	105	;'i'
  3750  007A37  76                 	db	118	;'v'
  3751  007A38  65                 	db	101	;'e'
  3752  007A39  64                 	db	100	;'d'
  3753  007A3A  20                 	db	32
  3754  007A3B  43                 	db	67	;'C'
  3755  007A3C  41                 	db	65	;'A'
  3756  007A3D  4E                 	db	78	;'N'
  3757  007A3E  20                 	db	32
  3758  007A3F  62                 	db	98	;'b'
  3759  007A40  79                 	db	121	;'y'
  3760  007A41  74                 	db	116	;'t'
  3761  007A42  65                 	db	101	;'e'
  3762  007A43  73                 	db	115	;'s'
  3763  007A44  3A                 	db	58	;':'
  3764  007A45  20                 	db	32
  3765  007A46  00                 	db	0
  3766  007A47                     STR_219:
  3767  007A47  4D                 	db	77	;'M'
  3768  007A48  41                 	db	65	;'A'
  3769  007A49  53                 	db	83	;'S'
  3770  007A4A  4B                 	db	75	;'K'
  3771  007A4B  20                 	db	32
  3772  007A4C  2D                 	db	45
  3773  007A4D  20                 	db	32
  3774  007A4E  53                 	db	83	;'S'
  3775  007A4F  65                 	db	101	;'e'
  3776  007A50  74                 	db	116	;'t'
  3777  007A51  20                 	db	32
  3778  007A52  6D                 	db	109	;'m'
  3779  007A53  61                 	db	97	;'a'
  3780  007A54  73                 	db	115	;'s'
  3781  007A55  6B                 	db	107	;'k'
  3782  007A56  20                 	db	32
  3783  007A57  2E                 	db	46
  3784  007A58  0D                 	db	13
  3785  007A59  0A                 	db	10
  3786  007A5A  00                 	db	0
  3787  007A5B                     STR_124:
  3788  007A5B  4A                 	db	74	;'J'
  3789  007A5C  46                 	db	70	;'F'
  3790  007A5D  72                 	db	114	;'r'
  3791  007A5E  61                 	db	97	;'a'
  3792  007A5F  6E                 	db	110	;'n'
  3793  007A60  6B                 	db	107	;'k'
  3794  007A61  66                 	db	102	;'f'
  3795  007A62  75                 	db	117	;'u'
  3796  007A63  72                 	db	114	;'r'
  3797  007A64  74                 	db	116	;'t'
  3798  007A65  20                 	db	32
  3799  007A66  52                 	db	82	;'R'
  3800  007A67  53                 	db	83	;'S'
  3801  007A68  2D                 	db	45
  3802  007A69  32                 	db	50	;'2'
  3803  007A6A  33                 	db	51	;'3'
  3804  007A6B  32                 	db	50	;'2'
  3805  007A6C  0D                 	db	13
  3806  007A6D  0A                 	db	10
  3807  007A6E  00                 	db	0
  3808  007A6F                     STR_25:
  3809  007A6F  2B                 	db	43
  3810  007A70  4F                 	db	79	;'O'
  3811  007A71  4B                 	db	75	;'K'
  3812  007A72  20                 	db	32
  3813  007A73  2D                 	db	45
  3814  007A74  20                 	db	32
  3815  007A75  43                 	db	67	;'C'
  3816  007A76  6C                 	db	108	;'l'
  3817  007A77  6F                 	db	111	;'o'
  3818  007A78  73                 	db	115	;'s'
  3819  007A79  65                 	db	101	;'e'
  3820  007A7A  64                 	db	100	;'d'
  3821  007A7B  20                 	db	32
  3822  007A7C  6D                 	db	109	;'m'
  3823  007A7D  6F                 	db	111	;'o'
  3824  007A7E  64                 	db	100	;'d'
  3825  007A7F  65                 	db	101	;'e'
  3826  007A80  0D                 	db	13
  3827  007A81  0A                 	db	10
  3828  007A82  00                 	db	0
  3829  007A83                     STR_20:
  3830  007A83  2B                 	db	43
  3831  007A84  4F                 	db	79	;'O'
  3832  007A85  4B                 	db	75	;'K'
  3833  007A86  20                 	db	32
  3834  007A87  2D                 	db	45
  3835  007A88  20                 	db	32
  3836  007A89  4E                 	db	78	;'N'
  3837  007A8A  6F                 	db	111	;'o'
  3838  007A8B  72                 	db	114	;'r'
  3839  007A8C  6D                 	db	109	;'m'
  3840  007A8D  61                 	db	97	;'a'
  3841  007A8E  6C                 	db	108	;'l'
  3842  007A8F  20                 	db	32
  3843  007A90  6D                 	db	109	;'m'
  3844  007A91  6F                 	db	111	;'o'
  3845  007A92  64                 	db	100	;'d'
  3846  007A93  65                 	db	101	;'e'
  3847  007A94  0D                 	db	13
  3848  007A95  0A                 	db	10
  3849  007A96  00                 	db	0
  3850  007A97                     STR_21:
  3851  007A97  2B                 	db	43
  3852  007A98  4F                 	db	79	;'O'
  3853  007A99  4B                 	db	75	;'K'
  3854  007A9A  20                 	db	32
  3855  007A9B  2D                 	db	45
  3856  007A9C  20                 	db	32
  3857  007A9D  53                 	db	83	;'S'
  3858  007A9E  69                 	db	105	;'i'
  3859  007A9F  6C                 	db	108	;'l'
  3860  007AA0  65                 	db	101	;'e'
  3861  007AA1  6E                 	db	110	;'n'
  3862  007AA2  74                 	db	116	;'t'
  3863  007AA3  20                 	db	32
  3864  007AA4  6D                 	db	109	;'m'
  3865  007AA5  6F                 	db	111	;'o'
  3866  007AA6  64                 	db	100	;'d'
  3867  007AA7  65                 	db	101	;'e'
  3868  007AA8  0D                 	db	13
  3869  007AA9  0A                 	db	10
  3870  007AAA  00                 	db	0
  3871  007AAB                     STR_78:
  3872  007AAB  49                 	db	73	;'I'
  3873  007AAC  6E                 	db	110	;'n'
  3874  007AAD  66                 	db	102	;'f'
  3875  007AAE  6F                 	db	111	;'o'
  3876  007AAF  20                 	db	32
  3877  007AB0  66                 	db	102	;'f'
  3878  007AB1  6F                 	db	111	;'o'
  3879  007AB2  72                 	db	114	;'r'
  3880  007AB3  20                 	db	32
  3881  007AB4  6E                 	db	110	;'n'
  3882  007AB5  6F                 	db	111	;'o'
  3883  007AB6  64                 	db	100	;'d'
  3884  007AB7  65                 	db	101	;'e'
  3885  007AB8  20                 	db	32
  3886  007AB9  69                 	db	105	;'i'
  3887  007ABA  64                 	db	100	;'d'
  3888  007ABB  20                 	db	32
  3889  007ABC  3D                 	db	61	;'='
  3890  007ABD  20                 	db	32
  3891  007ABE  00                 	db	0
  3892  007ABF                     STR_241:
  3893  007ABF  46                 	db	70	;'F'
  3894  007AC0  69                 	db	105	;'i'
  3895  007AC1  72                 	db	114	;'r'
  3896  007AC2  6D                 	db	109	;'m'
  3897  007AC3  77                 	db	119	;'w'
  3898  007AC4  61                 	db	97	;'a'
  3899  007AC5  72                 	db	114	;'r'
  3900  007AC6  65                 	db	101	;'e'
  3901  007AC7  20                 	db	32
  3902  007AC8  76                 	db	118	;'v'
  3903  007AC9  65                 	db	101	;'e'
  3904  007ACA  72                 	db	114	;'r'
  3905  007ACB  73                 	db	115	;'s'
  3906  007ACC  69                 	db	105	;'i'
  3907  007ACD  6F                 	db	111	;'o'
  3908  007ACE  6E                 	db	110	;'n'
  3909  007ACF  20                 	db	32
  3910  007AD0  3D                 	db	61	;'='
  3911  007AD1  20                 	db	32
  3912  007AD2  00                 	db	0
  3913  007AD3                     STR_22:
  3914  007AD3  2B                 	db	43
  3915  007AD4  4F                 	db	79	;'O'
  3916  007AD5  4B                 	db	75	;'K'
  3917  007AD6  20                 	db	32
  3918  007AD7  2D                 	db	45
  3919  007AD8  20                 	db	32
  3920  007AD9  53                 	db	83	;'S'
  3921  007ADA  6C                 	db	108	;'l'
  3922  007ADB  65                 	db	101	;'e'
  3923  007ADC  65                 	db	101	;'e'
  3924  007ADD  70                 	db	112	;'p'
  3925  007ADE  20                 	db	32
  3926  007ADF  6D                 	db	109	;'m'
  3927  007AE0  6F                 	db	111	;'o'
  3928  007AE1  64                 	db	100	;'d'
  3929  007AE2  65                 	db	101	;'e'
  3930  007AE3  0D                 	db	13
  3931  007AE4  0A                 	db	10
  3932  007AE5  00                 	db	0
  3933  007AE6                     STR_26:
  3934  007AE6  2B                 	db	43
  3935  007AE7  4F                 	db	79	;'O'
  3936  007AE8  4B                 	db	75	;'K'
  3937  007AE9  20                 	db	32
  3938  007AEA  2D                 	db	45
  3939  007AEB  20                 	db	32
  3940  007AEC  42                 	db	66	;'B'
  3941  007AED  69                 	db	105	;'i'
  3942  007AEE  74                 	db	116	;'t'
  3943  007AEF  73                 	db	115	;'s'
  3944  007AF0  20                 	db	32
  3945  007AF1  6D                 	db	109	;'m'
  3946  007AF2  6F                 	db	111	;'o'
  3947  007AF3  64                 	db	100	;'d'
  3948  007AF4  65                 	db	101	;'e'
  3949  007AF5  0D                 	db	13
  3950  007AF6  0A                 	db	10
  3951  007AF7  00                 	db	0
  3952  007AF8                     STR_39:
  3953  007AF8  2B                 	db	43
  3954  007AF9  4F                 	db	79	;'O'
  3955  007AFA  4B                 	db	75	;'K'
  3956  007AFB  20                 	db	32
  3957  007AFC  2D                 	db	45
  3958  007AFD  20                 	db	32
  3959  007AFE  6E                 	db	110	;'n'
  3960  007AFF  6F                 	db	111	;'o'
  3961  007B00  20                 	db	32
  3962  007B01  65                 	db	101	;'e'
  3963  007B02  76                 	db	118	;'v'
  3964  007B03  65                 	db	101	;'e'
  3965  007B04  6E                 	db	110	;'n'
  3966  007B05  74                 	db	116	;'t'
  3967  007B06  73                 	db	115	;'s'
  3968  007B07  0D                 	db	13
  3969  007B08  0A                 	db	10
  3970  007B09  00                 	db	0
  3971  007B0A                     STR_151:
  3972  007B0A  53                 	db	83	;'S'
  3973  007B0B  65                 	db	101	;'e'
  3974  007B0C  6E                 	db	110	;'n'
  3975  007B0D  74                 	db	116	;'t'
  3976  007B0E  20                 	db	32
  3977  007B0F  43                 	db	67	;'C'
  3978  007B10  41                 	db	65	;'A'
  3979  007B11  4E                 	db	78	;'N'
  3980  007B12  20                 	db	32
  3981  007B13  66                 	db	102	;'f'
  3982  007B14  72                 	db	114	;'r'
  3983  007B15  61                 	db	97	;'a'
  3984  007B16  6D                 	db	109	;'m'
  3985  007B17  65                 	db	101	;'e'
  3986  007B18  73                 	db	115	;'s'
  3987  007B19  3A                 	db	58	;':'
  3988  007B1A  20                 	db	32
  3989  007B1B  00                 	db	0
  3990  007B1C                     STR_254:
  3991  007B1C  30                 	db	48	;'0'
  3992  007B1D  31                 	db	49	;'1'
  3993  007B1E  32                 	db	50	;'2'
  3994  007B1F  33                 	db	51	;'3'
  3995  007B20  34                 	db	52	;'4'
  3996  007B21  35                 	db	53	;'5'
  3997  007B22  36                 	db	54	;'6'
  3998  007B23  37                 	db	55	;'7'
  3999  007B24  38                 	db	56	;'8'
  4000  007B25  39                 	db	57	;'9'
  4001  007B26  41                 	db	65	;'A'
  4002  007B27  42                 	db	66	;'B'
  4003  007B28  43                 	db	67	;'C'
  4004  007B29  44                 	db	68	;'D'
  4005  007B2A  45                 	db	69	;'E'
  4006  007B2B  46                 	db	70	;'F'
  4007  007B2C  00                 	db	0
  4008  007B2D                     STR_255:
  4009  007B2D  30                 	db	48	;'0'
  4010  007B2E  31                 	db	49	;'1'
  4011  007B2F  32                 	db	50	;'2'
  4012  007B30  33                 	db	51	;'3'
  4013  007B31  34                 	db	52	;'4'
  4014  007B32  35                 	db	53	;'5'
  4015  007B33  36                 	db	54	;'6'
  4016  007B34  37                 	db	55	;'7'
  4017  007B35  38                 	db	56	;'8'
  4018  007B36  39                 	db	57	;'9'
  4019  007B37  61                 	db	97	;'a'
  4020  007B38  62                 	db	98	;'b'
  4021  007B39  63                 	db	99	;'c'
  4022  007B3A  64                 	db	100	;'d'
  4023  007B3B  65                 	db	101	;'e'
  4024  007B3C  66                 	db	102	;'f'
  4025  007B3D  00                 	db	0
  4026  007B3E                     STR_155:
  4027  007B3E  53                 	db	83	;'S'
  4028  007B3F  65                 	db	101	;'e'
  4029  007B40  6E                 	db	110	;'n'
  4030  007B41  74                 	db	116	;'t'
  4031  007B42  20                 	db	32
  4032  007B43  43                 	db	67	;'C'
  4033  007B44  41                 	db	65	;'A'
  4034  007B45  4E                 	db	78	;'N'
  4035  007B46  20                 	db	32
  4036  007B47  62                 	db	98	;'b'
  4037  007B48  79                 	db	121	;'y'
  4038  007B49  74                 	db	116	;'t'
  4039  007B4A  65                 	db	101	;'e'
  4040  007B4B  73                 	db	115	;'s'
  4041  007B4C  3A                 	db	58	;':'
  4042  007B4D  20                 	db	32
  4043  007B4E  00                 	db	0
  4044  007B4F                     STR_233:
  4045  007B4F  20                 	db	32
  4046  007B50  6E                 	db	110	;'n'
  4047  007B51  6F                 	db	111	;'o'
  4048  007B52  64                 	db	100	;'d'
  4049  007B53  65                 	db	101	;'e'
  4050  007B54  73                 	db	115	;'s'
  4051  007B55  20                 	db	32
  4052  007B56  66                 	db	102	;'f'
  4053  007B57  6F                 	db	111	;'o'
  4054  007B58  75                 	db	117	;'u'
  4055  007B59  6E                 	db	110	;'n'
  4056  007B5A  64                 	db	100	;'d'
  4057  007B5B  0D                 	db	13
  4058  007B5C  0A                 	db	10
  4059  007B5D  00                 	db	0
  4060  007B5E                     STR_51:
  4061  007B5E  56                 	db	86	;'V'
  4062  007B5F  61                 	db	97	;'a'
  4063  007B60  6C                 	db	108	;'l'
  4064  007B61  75                 	db	117	;'u'
  4065  007B62  65                 	db	101	;'e'
  4066  007B63  20                 	db	32
  4067  007B64  66                 	db	102	;'f'
  4068  007B65  6F                 	db	111	;'o'
  4069  007B66  72                 	db	114	;'r'
  4070  007B67  20                 	db	32
  4071  007B68  72                 	db	114	;'r'
  4072  007B69  65                 	db	101	;'e'
  4073  007B6A  67                 	db	103	;'g'
  4074  007B6B  20                 	db	32
  4075  007B6C  00                 	db	0
  4076  007B6D                     STR_239:
  4077  007B6D  4D                 	db	77	;'M'
  4078  007B6E  44                 	db	68	;'D'
  4079  007B6F  46                 	db	70	;'F'
  4080  007B70  20                 	db	32
  4081  007B71  3D                 	db	61	;'='
  4082  007B72  20                 	db	32
  4083  007B73  68                 	db	104	;'h'
  4084  007B74  74                 	db	116	;'t'
  4085  007B75  74                 	db	116	;'t'
  4086  007B76  70                 	db	112	;'p'
  4087  007B77  3A                 	db	58	;':'
  4088  007B78  2F                 	db	47
  4089  007B79  2F                 	db	47
  4090  007B7A  00                 	db	0
  4091  007B7B                     STR_249:
  4092  007B7B  56                 	db	86	;'V'
  4093  007B7C  53                 	db	83	;'S'
  4094  007B7D  43                 	db	67	;'C'
  4095  007B7E  50                 	db	80	;'P'
  4096  007B7F  20                 	db	32
  4097  007B80  44                 	db	68	;'D'
  4098  007B81  72                 	db	114	;'r'
  4099  007B82  69                 	db	105	;'i'
  4100  007B83  76                 	db	118	;'v'
  4101  007B84  65                 	db	101	;'e'
  4102  007B85  72                 	db	114	;'r'
  4103  007B86  00                 	db	0
  4104  007B87                     STR_111:
  4105  007B87  52                 	db	82	;'R'
  4106  007B88  57                 	db	87	;'W'
  4107  007B89  54                 	db	84	;'T'
  4108  007B8A  49                 	db	73	;'I'
  4109  007B8B  4D                 	db	77	;'M'
  4110  007B8C  45                 	db	69	;'E'
  4111  007B8D  4F                 	db	79	;'O'
  4112  007B8E  55                 	db	85	;'U'
  4113  007B8F  54                 	db	84	;'T'
  4114  007B90  20                 	db	32
  4115  007B91  00                 	db	0
  4116  007B92                     STR_149:
  4117  007B92  2C                 	db	44
  4118  007B93  44                 	db	68	;'D'
  4119  007B94  61                 	db	97	;'a'
  4120  007B95  74                 	db	116	;'t'
  4121  007B96  61                 	db	97	;'a'
  4122  007B97  3D                 	db	61	;'='
  4123  007B98  6E                 	db	110	;'n'
  4124  007B99  6F                 	db	111	;'o'
  4125  007B9A  6E                 	db	110	;'n'
  4126  007B9B  65                 	db	101	;'e'
  4127  007B9C  00                 	db	0
  4128  007B9D                     STR_245:
  4129  007B9D  56                 	db	86	;'V'
  4130  007B9E  65                 	db	101	;'e'
  4131  007B9F  72                 	db	114	;'r'
  4132  007BA0  73                 	db	115	;'s'
  4133  007BA1  69                 	db	105	;'i'
  4134  007BA2  6F                 	db	111	;'o'
  4135  007BA3  6E                 	db	110	;'n'
  4136  007BA4  3A                 	db	58	;':'
  4137  007BA5  20                 	db	32
  4138  007BA6  00                 	db	0
  4139  007BA7                     STR_251:
  4140  007BA7  56                 	db	86	;'V'
  4141  007BA8  53                 	db	83	;'S'
  4142  007BA9  43                 	db	67	;'C'
  4143  007BAA  50                 	db	80	;'P'
  4144  007BAB  20                 	db	32
  4145  007BAC  4E                 	db	78	;'N'
  4146  007BAD  6F                 	db	111	;'o'
  4147  007BAE  64                 	db	100	;'d'
  4148  007BAF  65                 	db	101	;'e'
  4149  007BB0  00                 	db	0
  4150  007BB1                     STR_250:
  4151  007BB1  53                 	db	83	;'S'
  4152  007BB2  4C                 	db	76	;'L'
  4153  007BB3  20                 	db	32
  4154  007BB4  44                 	db	68	;'D'
  4155  007BB5  72                 	db	114	;'r'
  4156  007BB6  69                 	db	105	;'i'
  4157  007BB7  76                 	db	118	;'v'
  4158  007BB8  65                 	db	101	;'e'
  4159  007BB9  72                 	db	114	;'r'
  4160  007BBA  00                 	db	0
  4161  007BBB                     STR_112:
  4162  007BBB  53                 	db	83	;'S'
  4163  007BBC  54                 	db	84	;'T'
  4164  007BBD  41                 	db	65	;'A'
  4165  007BBE  52                 	db	82	;'R'
  4166  007BBF  54                 	db	84	;'T'
  4167  007BC0  49                 	db	73	;'I'
  4168  007BC1  46                 	db	70	;'F'
  4169  007BC2  20                 	db	32
  4170  007BC3  00                 	db	0
  4171  007BC4                     STR_139:
  4172  007BC4  2C                 	db	44
  4173  007BC5  6E                 	db	110	;'n'
  4174  007BC6  6F                 	db	111	;'o'
  4175  007BC7  64                 	db	100	;'d'
  4176  007BC8  65                 	db	101	;'e'
  4177  007BC9  69                 	db	105	;'i'
  4178  007BCA  64                 	db	100	;'d'
  4179  007BCB  3D                 	db	61	;'='
  4180  007BCC  00                 	db	0
  4181  007BCD                     STR_13:
  4182  007BCD  4C                 	db	76	;'L'
  4183  007BCE  4F                 	db	79	;'O'
  4184  007BCF  4F                 	db	79	;'O'
  4185  007BD0  50                 	db	80	;'P'
  4186  007BD1  42                 	db	66	;'B'
  4187  007BD2  41                 	db	65	;'A'
  4188  007BD3  43                 	db	67	;'C'
  4189  007BD4  4B                 	db	75	;'K'
  4190  007BD5  00                 	db	0
  4191  007BD6                     STR_125:
  4192  007BD6  56                 	db	86	;'V'
  4193  007BD7  31                 	db	49	;'1'
  4194  007BD8  30                 	db	48	;'0'
  4195  007BD9  31                 	db	49	;'1'
  4196  007BDA  31                 	db	49	;'1'
  4197  007BDB  0D                 	db	13
  4198  007BDC  0A                 	db	10
  4199  007BDD  00                 	db	0
  4200  007BDE                     STR_126:
  4201  007BDE  4E                 	db	78	;'N'
  4202  007BDF  31                 	db	49	;'1'
  4203  007BE0  39                 	db	57	;'9'
  4204  007BE1  37                 	db	55	;'7'
  4205  007BE2  37                 	db	55	;'7'
  4206  007BE3  0D                 	db	13
  4207  007BE4  0A                 	db	10
  4208  007BE5  00                 	db	0
  4209  007BE6                     STR_234:
  4210  007BE6  47                 	db	71	;'G'
  4211  007BE7  55                 	db	85	;'U'
  4212  007BE8  49                 	db	73	;'I'
  4213  007BE9  44                 	db	68	;'D'
  4214  007BEA  20                 	db	32
  4215  007BEB  3D                 	db	61	;'='
  4216  007BEC  20                 	db	32
  4217  007BED  00                 	db	0
  4218  007BEE                     STR_120:
  4219  007BEE  46                 	db	70	;'F'
  4220  007BEF  49                 	db	73	;'I'
  4221  007BF0  4C                 	db	76	;'L'
  4222  007BF1  54                 	db	84	;'T'
  4223  007BF2  45                 	db	69	;'E'
  4224  007BF3  52                 	db	82	;'R'
  4225  007BF4  20                 	db	32
  4226  007BF5  00                 	db	0
  4227  007BF6                     STR_133:
  4228  007BF6  2C                 	db	44
  4229  007BF7  63                 	db	99	;'c'
  4230  007BF8  6C                 	db	108	;'l'
  4231  007BF9  61                 	db	97	;'a'
  4232  007BFA  73                 	db	115	;'s'
  4233  007BFB  73                 	db	115	;'s'
  4234  007BFC  3D                 	db	61	;'='
  4235  007BFD  00                 	db	0
  4236  007BFE                     STR_114:
  4237  007BFE  56                 	db	86	;'V'
  4238  007BFF  45                 	db	69	;'E'
  4239  007C00  52                 	db	82	;'R'
  4240  007C01  42                 	db	66	;'B'
  4241  007C02  4F                 	db	79	;'O'
  4242  007C03  53                 	db	83	;'S'
  4243  007C04  45                 	db	69	;'E'
  4244  007C05  00                 	db	0
  4245  007C06                     STR_109:
  4246  007C06  44                 	db	68	;'D'
  4247  007C07  45                 	db	69	;'E'
  4248  007C08  43                 	db	67	;'C'
  4249  007C09  49                 	db	73	;'I'
  4250  007C0A  4D                 	db	77	;'M'
  4251  007C0B  41                 	db	65	;'A'
  4252  007C0C  4C                 	db	76	;'L'
  4253  007C0D  00                 	db	0
  4254  007C0E                     STR_17:
  4255  007C0E  56                 	db	86	;'V'
  4256  007C0F  45                 	db	69	;'E'
  4257  007C10  52                 	db	82	;'R'
  4258  007C11  53                 	db	83	;'S'
  4259  007C12  49                 	db	73	;'I'
  4260  007C13  4F                 	db	79	;'O'
  4261  007C14  4E                 	db	78	;'N'
  4262  007C15  00                 	db	0
  4263  007C16                     STR_168:
  4264  007C16  30                 	db	48	;'0'
  4265  007C17  78                 	db	120	;'x'
  4266  007C18  25                 	db	37
  4267  007C19  30                 	db	48	;'0'
  4268  007C1A  38                 	db	56	;'8'
  4269  007C1B  6C                 	db	108	;'l'
  4270  007C1C  58                 	db	88	;'X'
  4271  007C1D  00                 	db	0
  4272  007C1E                     STR_248:
  4273  007C1E  56                 	db	86	;'V'
  4274  007C1F  65                 	db	101	;'e'
  4275  007C20  72                 	db	114	;'r'
  4276  007C21  62                 	db	98	;'b'
  4277  007C22  6F                 	db	111	;'o'
  4278  007C23  73                 	db	115	;'s'
  4279  007C24  65                 	db	101	;'e'
  4280  007C25  00                 	db	0
  4281  007C26                     STR_247:
  4282  007C26  4D                 	db	77	;'M'
  4283  007C27  6F                 	db	111	;'o'
  4284  007C28  64                 	db	100	;'d'
  4285  007C29  65                 	db	101	;'e'
  4286  007C2A  3A                 	db	58	;':'
  4287  007C2B  20                 	db	32
  4288  007C2C  00                 	db	0
  4289  007C2D                     STR_145:
  4290  007C2D  2C                 	db	44
  4291  007C2E  44                 	db	68	;'D'
  4292  007C2F  61                 	db	97	;'a'
  4293  007C30  74                 	db	116	;'t'
  4294  007C31  61                 	db	97	;'a'
  4295  007C32  3D                 	db	61	;'='
  4296  007C33  00                 	db	0
  4297  007C34                     STR_136:
  4298  007C34  2C                 	db	44
  4299  007C35  74                 	db	116	;'t'
  4300  007C36  79                 	db	121	;'y'
  4301  007C37  70                 	db	112	;'p'
  4302  007C38  65                 	db	101	;'e'
  4303  007C39  3D                 	db	61	;'='
  4304  007C3A  00                 	db	0
  4305  007C3B                     STR_142:
  4306  007C3B  2C                 	db	44
  4307  007C3C  73                 	db	115	;'s'
  4308  007C3D  69                 	db	105	;'i'
  4309  007C3E  7A                 	db	122	;'z'
  4310  007C3F  65                 	db	101	;'e'
  4311  007C40  3D                 	db	61	;'='
  4312  007C41  00                 	db	0
  4313  007C42                     STR_130:
  4314  007C42  3C                 	db	60	;'<'
  4315  007C43  50                 	db	80	;'P'
  4316  007C44  72                 	db	114	;'r'
  4317  007C45  69                 	db	105	;'i'
  4318  007C46  6F                 	db	111	;'o'
  4319  007C47  3D                 	db	61	;'='
  4320  007C48  00                 	db	0
  4321  007C49                     STR_19:
  4322  007C49  49                 	db	73	;'I'
  4323  007C4A  46                 	db	70	;'F'
  4324  007C4B  4D                 	db	77	;'M'
  4325  007C4C  4F                 	db	79	;'O'
  4326  007C4D  44                 	db	68	;'D'
  4327  007C4E  45                 	db	69	;'E'
  4328  007C4F  00                 	db	0
  4329  007C50                     STR_15:
  4330  007C50  4C                 	db	76	;'L'
  4331  007C51  49                 	db	73	;'I'
  4332  007C52  53                 	db	83	;'S'
  4333  007C53  54                 	db	84	;'T'
  4334  007C54  45                 	db	69	;'E'
  4335  007C55  4E                 	db	78	;'N'
  4336  007C56  00                 	db	0
  4337  007C57                     STR_82:
  4338  007C57  46                 	db	70	;'F'
  4339  007C58  49                 	db	73	;'I'
  4340  007C59  4C                 	db	76	;'L'
  4341  007C5A  54                 	db	84	;'T'
  4342  007C5B  45                 	db	69	;'E'
  4343  007C5C  52                 	db	82	;'R'
  4344  007C5D  00                 	db	0
  4345  007C5E                     STR_9:
  4346  007C5E  53                 	db	83	;'S'
  4347  007C5F  49                 	db	73	;'I'
  4348  007C60  4C                 	db	76	;'L'
  4349  007C61  45                 	db	69	;'E'
  4350  007C62  4E                 	db	78	;'N'
  4351  007C63  54                 	db	84	;'T'
  4352  007C64  00                 	db	0
  4353  007C65                     STR_52:
  4354  007C65  30                 	db	48	;'0'
  4355  007C66  78                 	db	120	;'x'
  4356  007C67  25                 	db	37
  4357  007C68  30                 	db	48	;'0'
  4358  007C69  32                 	db	50	;'2'
  4359  007C6A  58                 	db	88	;'X'
  4360  007C6B  00                 	db	0
  4361  007C6C                     STR_134:
  4362  007C6C  30                 	db	48	;'0'
  4363  007C6D  78                 	db	120	;'x'
  4364  007C6E  25                 	db	37
  4365  007C6F  30                 	db	48	;'0'
  4366  007C70  34                 	db	52	;'4'
  4367  007C71  58                 	db	88	;'X'
  4368  007C72  00                 	db	0
  4369  007C73                     STR_152:
  4370  007C73  30                 	db	48	;'0'
  4371  007C74  78                 	db	120	;'x'
  4372  007C75  25                 	db	37
  4373  007C76  30                 	db	48	;'0'
  4374  007C77  38                 	db	56	;'8'
  4375  007C78  58                 	db	88	;'X'
  4376  007C79  00                 	db	0
  4377  007C7A                     STR_127:
  4378  007C7A  46                 	db	70	;'F'
  4379  007C7B  30                 	db	48	;'0'
  4380  007C7C  30                 	db	48	;'0'
  4381  007C7D  0D                 	db	13
  4382  007C7E  0A                 	db	10
  4383  007C7F  00                 	db	0
  4384  007C80                     STR_8:
  4385  007C80  2B                 	db	43
  4386  007C81  4F                 	db	79	;'O'
  4387  007C82  4B                 	db	75	;'K'
  4388  007C83  0D                 	db	13
  4389  007C84  0A                 	db	10
  4390  007C85  00                 	db	0
  4391  007C86                     STR_113:
  4392  007C86  4D                 	db	77	;'M'
  4393  007C87  4F                 	db	79	;'O'
  4394  007C88  44                 	db	68	;'D'
  4395  007C89  45                 	db	69	;'E'
  4396  007C8A  20                 	db	32
  4397  007C8B  00                 	db	0
  4398  007C8C                     STR_121:
  4399  007C8C  4D                 	db	77	;'M'
  4400  007C8D  41                 	db	65	;'A'
  4401  007C8E  53                 	db	83	;'S'
  4402  007C8F  4B                 	db	75	;'K'
  4403  007C90  20                 	db	32
  4404  007C91  00                 	db	0
  4405  007C92                     STR_11:
  4406  007C92  43                 	db	67	;'C'
  4407  007C93  4C                 	db	76	;'L'
  4408  007C94  4F                 	db	79	;'O'
  4409  007C95  53                 	db	83	;'S'
  4410  007C96  45                 	db	69	;'E'
  4411  007C97  00                 	db	0
  4412  007C98                     STR_118:
  4413  007C98  53                 	db	83	;'S'
  4414  007C99  4C                 	db	76	;'L'
  4415  007C9A  43                 	db	67	;'C'
  4416  007C9B  41                 	db	65	;'A'
  4417  007C9C  4E                 	db	78	;'N'
  4418  007C9D  00                 	db	0
  4419  007C9E                     STR_106:
  4420  007C9E  53                 	db	83	;'S'
  4421  007C9F  45                 	db	69	;'E'
  4422  007CA0  54                 	db	84	;'T'
  4423  007CA1  20                 	db	32
  4424  007CA2  00                 	db	0
  4425  007CA3                     STR_44:
  4426  007CA3  46                 	db	70	;'F'
  4427  007CA4  49                 	db	73	;'I'
  4428  007CA5  4E                 	db	78	;'N'
  4429  007CA6  44                 	db	68	;'D'
  4430  007CA7  00                 	db	0
  4431  007CA8                     STR_45:
  4432  007CA8  52                 	db	82	;'R'
  4433  007CA9  52                 	db	82	;'R'
  4434  007CAA  45                 	db	69	;'E'
  4435  007CAB  47                 	db	71	;'G'
  4436  007CAC  00                 	db	0
  4437  007CAD                     STR_68:
  4438  007CAD  57                 	db	87	;'W'
  4439  007CAE  52                 	db	82	;'R'
  4440  007CAF  45                 	db	69	;'E'
  4441  007CB0  47                 	db	71	;'G'
  4442  007CB1  00                 	db	0
  4443  007CB2                     STR_94:
  4444  007CB2  4D                 	db	77	;'M'
  4445  007CB3  41                 	db	65	;'A'
  4446  007CB4  53                 	db	83	;'S'
  4447  007CB5  4B                 	db	75	;'K'
  4448  007CB6  00                 	db	0
  4449  007CB7                     STR_7:
  4450  007CB7  4F                 	db	79	;'O'
  4451  007CB8  50                 	db	80	;'P'
  4452  007CB9  45                 	db	69	;'E'
  4453  007CBA  4E                 	db	78	;'N'
  4454  007CBB  00                 	db	0
  4455  007CBC                     STR_77:
  4456  007CBC  49                 	db	73	;'I'
  4457  007CBD  4E                 	db	78	;'N'
  4458  007CBE  46                 	db	70	;'F'
  4459  007CBF  4F                 	db	79	;'O'
  4460  007CC0  00                 	db	0
  4461  007CC1                     STR_116:
  4462  007CC1  56                 	db	86	;'V'
  4463  007CC2  53                 	db	83	;'S'
  4464  007CC3  43                 	db	67	;'C'
  4465  007CC4  50                 	db	80	;'P'
  4466  007CC5  00                 	db	0
  4467  007CC6                     STR_42:
  4468  007CC6  48                 	db	72	;'H'
  4469  007CC7  45                 	db	69	;'E'
  4470  007CC8  4C                 	db	76	;'L'
  4471  007CC9  50                 	db	80	;'P'
  4472  007CCA  00                 	db	0
  4473  007CCB                     STR_40:
  4474  007CCB  53                 	db	83	;'S'
  4475  007CCC  54                 	db	84	;'T'
  4476  007CCD  41                 	db	65	;'A'
  4477  007CCE  54                 	db	84	;'T'
  4478  007CCF  00                 	db	0
  4479  007CD0                     STR_5:
  4480  007CD0  42                 	db	66	;'B'
  4481  007CD1  4F                 	db	79	;'O'
  4482  007CD2  4F                 	db	79	;'O'
  4483  007CD3  54                 	db	84	;'T'
  4484  007CD4  00                 	db	0
  4485  007CD5                     STR_150:
  4486  007CD5  3E                 	db	62	;'>'
  4487  007CD6  0D                 	db	13
  4488  007CD7  0A                 	db	10
  4489  007CD8  00                 	db	0
  4490  007CD9                     STR_41:
  4491  007CD9  45                 	db	69	;'E'
  4492  007CDA  52                 	db	82	;'R'
  4493  007CDB  52                 	db	82	;'R'
  4494  007CDC  00                 	db	0
  4495  007CDD                     STR_107:
  4496  007CDD  48                 	db	72	;'H'
  4497  007CDE  45                 	db	69	;'E'
  4498  007CDF  58                 	db	88	;'X'
  4499  007CE0  00                 	db	0
  4500  007CE1                     STR_153:
  4501  007CE1  25                 	db	37
  4502  007CE2  6C                 	db	108	;'l'
  4503  007CE3  75                 	db	117	;'u'
  4504  007CE4  00                 	db	0
  4505  007CE5                     STR_236:
  4506  007CE5  2D                 	db	45
  4507  007CE6  2D                 	db	45
  4508  007CE7  00                 	db	0
  4509  007CE8                     STR_37:
  4510  007CE8  52                 	db	82	;'R'
  4511  007CE9  58                 	db	88	;'X'
  4512  007CEA  00                 	db	0
  4513  007CEB                     STR_28:
  4514  007CEB  54                 	db	84	;'T'
  4515  007CEC  58                 	db	88	;'X'
  4516  007CED  00                 	db	0
  4517  007CEE                     STR_53:
  4518  007CEE  25                 	db	37
  4519  007CEF  64                 	db	100	;'d'
  4520  007CF0  00                 	db	0
  4521  007CF1                     STR_129:
  4522  007CF1  07                 	db	7
  4523  007CF2  00                 	db	0
  4524  007CF3                     STR_128:
  4525  007CF3  0D                 	db	13
  4526  007CF4  00                 	db	0
  4527  007CF5                     STR_29:
  4528  007CF5  2C                 	db	44
  4529  007CF6  00                 	db	0
  4530  007CF7                     STR_243:
  4531  007CF7  2E                 	db	46
  4532  007CF8  00                 	db	0
  4533  007CF9                     STR_235:
  4534  007CF9  30                 	db	48	;'0'
  4535  007CFA  00                 	db	0
  4536  007CFB                     STR_237:
  4537  007CFB  3A                 	db	58	;':'
  4538  007CFC  00                 	db	0
  4539  007CFD                     STR_242:
  4540  007CFD  3F                 	db	63	;'?'
  4541  007CFE  00                 	db	0
  4542  007CFF                     __end_of__stringdata:
  4543                           	opt stack 0
  4544                           
  4545                           ; #config settings
  4546  007CFF  00                 	db	0	; dummy byte at the end
  4547  0000                     tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           intcon	equ	0xFF2
  4554                           indf0	equ	0xFEF
  4555                           fsr0h	equ	0xFEA
  4556                           fsr0l	equ	0xFE9
  4557                           wreg	equ	0xFE8
  4558                           indf1	equ	0xFE7
  4559                           postinc1	equ	0xFE6
  4560                           postdec1	equ	0xFE5
  4561                           fsr1h	equ	0xFE2
  4562                           fsr1l	equ	0xFE1
  4563                           indf2	equ	0xFDF
  4564                           postinc2	equ	0xFDE
  4565                           postdec2	equ	0xFDD
  4566                           plusw2	equ	0xFDB
  4567                           fsr2h	equ	0xFDA
  4568                           fsr2l	equ	0xFD9
  4569                           status	equ	0xFD8
  4570                           
  4571                           	psect	nvBANK0
  4572  0000E0                     __pnvBANK0:
  4573                           	opt stack 0
  4574  0000E0                     ___DCDelay:
  4575                           	opt stack 0
  4576  0000E0                     	ds	1
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           intcon	equ	0xFF2
  4584                           indf0	equ	0xFEF
  4585                           fsr0h	equ	0xFEA
  4586                           fsr0l	equ	0xFE9
  4587                           wreg	equ	0xFE8
  4588                           indf1	equ	0xFE7
  4589                           postinc1	equ	0xFE6
  4590                           postdec1	equ	0xFE5
  4591                           fsr1h	equ	0xFE2
  4592                           fsr1l	equ	0xFE1
  4593                           indf2	equ	0xFDF
  4594                           postinc2	equ	0xFDE
  4595                           postdec2	equ	0xFDD
  4596                           plusw2	equ	0xFDB
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601                           	psect	cinit
  4602  002482                     __pcinit:
  4603                           	opt stack 0
  4604  002482                     start_initialization:
  4605                           	opt stack 0
  4606  002482                     __initialization:
  4607                           	opt stack 0
  4608                           
  4609                           ; Clear objects allocated to BIGRAM (494 bytes)
  4610  002482  EE04  F000         	lfsr	0,__pbssBIGRAM
  4611  002486  EE11 F0EE          	lfsr	1,494
  4612  00248A                     clear_0:
  4613  00248A  6AEE               	clrf	postinc0,c
  4614  00248C  50E5               	movf	postdec1,w,c
  4615  00248E  50E1               	movf	fsr1l,w,c
  4616  002490  E1FC               	bnz	clear_0
  4617  002492  50E2               	movf	fsr1h,w,c
  4618  002494  E1FA               	bnz	clear_0
  4619                           
  4620                           ; Clear objects allocated to BANK3 (256 bytes)
  4621  002496  EE03  F000         	lfsr	0,__pbssBANK3
  4622  00249A  EE11 F000          	lfsr	1,256
  4623  00249E                     clear_1:
  4624  00249E  6AEE               	clrf	postinc0,c
  4625  0024A0  50E5               	movf	postdec1,w,c
  4626  0024A2  50E1               	movf	fsr1l,w,c
  4627  0024A4  E1FC               	bnz	clear_1
  4628  0024A6  50E2               	movf	fsr1h,w,c
  4629  0024A8  E1FA               	bnz	clear_1
  4630                           
  4631                           ; Clear objects allocated to BANK2 (128 bytes)
  4632  0024AA  EE02  F000         	lfsr	0,__pbssBANK2
  4633  0024AE  0E80               	movlw	128
  4634  0024B0                     clear_2:
  4635  0024B0  6AEE               	clrf	postinc0,c
  4636  0024B2  06E8               	decf	wreg,f,c
  4637  0024B4  E1FD               	bnz	clear_2
  4638                           
  4639                           ; Clear objects allocated to BANK1 (212 bytes)
  4640  0024B6  EE01  F000         	lfsr	0,__pbssBANK1
  4641  0024BA  0ED4               	movlw	212
  4642  0024BC                     clear_3:
  4643  0024BC  6AEE               	clrf	postinc0,c
  4644  0024BE  06E8               	decf	wreg,f,c
  4645  0024C0  E1FD               	bnz	clear_3
  4646                           
  4647                           ; Clear objects allocated to BANK0 (19 bytes)
  4648  0024C2  EE00  F0CD         	lfsr	0,__pbssBANK0
  4649  0024C6  0E13               	movlw	19
  4650  0024C8                     clear_4:
  4651  0024C8  6AEE               	clrf	postinc0,c
  4652  0024CA  06E8               	decf	wreg,f,c
  4653  0024CC  E1FD               	bnz	clear_4
  4654                           
  4655                           ; Clear objects allocated to COMRAM (24 bytes)
  4656  0024CE  EE00  F030         	lfsr	0,__pbssCOMRAM
  4657  0024D2  0E18               	movlw	24
  4658  0024D4                     clear_5:
  4659  0024D4  6AEE               	clrf	postinc0,c
  4660  0024D6  06E8               	decf	wreg,f,c
  4661  0024D8  E1FD               	bnz	clear_5
  4662  0024DA                     end_of_initialization:
  4663                           	opt stack 0
  4664  0024DA                     __end_of__initialization:
  4665                           	opt stack 0
  4666  0024DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  4667  0024DC  6EF8               	movwf	tblptru,c
  4668  0024DE  0100               	movlb	0
  4669  0024E0  EFA6  F01E         	goto	_main	;jump to C main() function
  4670                           tblptru	equ	0xFF8
  4671                           tblptrh	equ	0xFF7
  4672                           tblptrl	equ	0xFF6
  4673                           tablat	equ	0xFF5
  4674                           prodh	equ	0xFF4
  4675                           prodl	equ	0xFF3
  4676                           intcon	equ	0xFF2
  4677                           indf0	equ	0xFEF
  4678                           postinc0	equ	0xFEE
  4679                           fsr0h	equ	0xFEA
  4680                           fsr0l	equ	0xFE9
  4681                           wreg	equ	0xFE8
  4682                           indf1	equ	0xFE7
  4683                           postinc1	equ	0xFE6
  4684                           postdec1	equ	0xFE5
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           postdec2	equ	0xFDD
  4690                           plusw2	equ	0xFDB
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8
  4694                           
  4695                           	psect	bssCOMRAM
  4696  000030                     __pbssCOMRAM:
  4697                           	opt stack 0
  4698  000030                     _status_led_cnt:
  4699                           	opt stack 0
  4700  000030                     	ds	2
  4701  000032                     strtok@sp:
  4702                           	opt stack 0
  4703  000032                     	ds	2
  4704  000034                     _USART_Status:
  4705                           	opt stack 0
  4706  000034                     	ds	1
  4707  000035                     __ECANRxFilterHitInfo:
  4708                           	opt stack 0
  4709  000035                     	ds	1
  4710  000036                     __IT_INT_MASK:
  4711                           	opt stack 0
  4712  000036                     	ds	1
  4713  000037                     __IT_SAVE_BSR:
  4714                           	opt stack 0
  4715  000037                     	ds	1
  4716  000038                     __IT_SAVE_STATUS:
  4717                           	opt stack 0
  4718  000038                     	ds	1
  4719  000039                     __IT_SAVE_WREG:
  4720                           	opt stack 0
  4721  000039                     	ds	1
  4722  00003A                     ___DCByte:
  4723                           	opt stack 0
  4724  00003A                     	ds	1
  4725  00003B                     _bDLE:
  4726                           	opt stack 0
  4727  00003B                     	ds	1
  4728  00003C                     _ledFunctionality:
  4729                           	opt stack 0
  4730  00003C                     	ds	1
  4731  00003D                     _nTimeStamp:
  4732                           	opt stack 0
  4733  00003D                     	ds	1
  4734  00003E                     _sequencyno:
  4735                           	opt stack 0
  4736  00003E                     	ds	1
  4737  00003F                     _stateVscpDriver:
  4738                           	opt stack 0
  4739  00003F                     	ds	1
  4740  000040                     _vscpData:
  4741                           	opt stack 0
  4742  000040                     	ds	8
  4743                           tblptru	equ	0xFF8
  4744                           tblptrh	equ	0xFF7
  4745                           tblptrl	equ	0xFF6
  4746                           tablat	equ	0xFF5
  4747                           prodh	equ	0xFF4
  4748                           prodl	equ	0xFF3
  4749                           intcon	equ	0xFF2
  4750                           indf0	equ	0xFEF
  4751                           postinc0	equ	0xFEE
  4752                           fsr0h	equ	0xFEA
  4753                           fsr0l	equ	0xFE9
  4754                           wreg	equ	0xFE8
  4755                           indf1	equ	0xFE7
  4756                           postinc1	equ	0xFE6
  4757                           postdec1	equ	0xFE5
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           postinc2	equ	0xFDE
  4762                           postdec2	equ	0xFDD
  4763                           plusw2	equ	0xFDB
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768                           	psect	bssBANK0
  4769  0000CD                     __pbssBANK0:
  4770                           	opt stack 0
  4771  0000CD                     _timekeeper:
  4772                           	opt stack 0
  4773  0000CD                     	ds	4
  4774  0000D1                     _made_table:
  4775                           	opt stack 0
  4776  0000D1                     	ds	2
  4777  0000D3                     _bHex:
  4778                           	opt stack 0
  4779  0000D3                     	ds	1
  4780  0000D4                     _bInitiated:
  4781                           	opt stack 0
  4782  0000D4                     	ds	1
  4783  0000D5                     _bOpen:
  4784                           	opt stack 0
  4785  0000D5                     	ds	1
  4786  0000D6                     _bSilent:
  4787                           	opt stack 0
  4788  0000D6                     	ds	1
  4789  0000D7                     _mode:
  4790                           	opt stack 0
  4791  0000D7                     	ds	1
  4792  0000D8                     _pos:
  4793                           	opt stack 0
  4794  0000D8                     	ds	1
  4795  0000D9                     _rwtimeout:
  4796                           	opt stack 0
  4797  0000D9                     	ds	1
  4798  0000DA                     _vscpClass:
  4799                           	opt stack 0
  4800  0000DA                     	ds	2
  4801  0000DC                     _vscpNodeId:
  4802                           	opt stack 0
  4803  0000DC                     	ds	1
  4804  0000DD                     _vscpPriority:
  4805                           	opt stack 0
  4806  0000DD                     	ds	1
  4807  0000DE                     _vscpSize:
  4808                           	opt stack 0
  4809  0000DE                     	ds	1
  4810  0000DF                     _vscpType:
  4811                           	opt stack 0
  4812  0000DF                     	ds	1
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           indf0	equ	0xFEF
  4821                           postinc0	equ	0xFEE
  4822                           fsr0h	equ	0xFEA
  4823                           fsr0l	equ	0xFE9
  4824                           wreg	equ	0xFE8
  4825                           indf1	equ	0xFE7
  4826                           postinc1	equ	0xFE6
  4827                           postdec1	equ	0xFE5
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           postdec2	equ	0xFDD
  4833                           plusw2	equ	0xFDB
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838                           	psect	bssBANK1
  4839  000100                     __pbssBANK1:
  4840                           	opt stack 0
  4841  000100                     _can_receiveOverruns:
  4842                           	opt stack 0
  4843  000100                     	ds	4
  4844  000104                     _can_transmitOverruns:
  4845                           	opt stack 0
  4846  000104                     	ds	4
  4847  000108                     _cntRxBytes:
  4848                           	opt stack 0
  4849  000108                     	ds	4
  4850  00010C                     _cntRxFrames:
  4851                           	opt stack 0
  4852  00010C                     	ds	4
  4853  000110                     _cntTxBytes:
  4854                           	opt stack 0
  4855  000110                     	ds	4
  4856  000114                     _cntTxFrames:
  4857                           	opt stack 0
  4858  000114                     	ds	4
  4859  000118                     _timer:
  4860                           	opt stack 0
  4861  000118                     	ds	4
  4862  00011C                     _uart_receiveOverruns:
  4863                           	opt stack 0
  4864  00011C                     	ds	4
  4865  000120                     _uart_transmitOverruns:
  4866                           	opt stack 0
  4867  000120                     	ds	4
  4868  000124                     _cmdbuf:
  4869                           	opt stack 0
  4870  000124                     	ds	80
  4871  000174                     _wrkbuf:
  4872                           	opt stack 0
  4873  000174                     	ds	80
  4874  0001C4                     _canInputFifo:
  4875                           	opt stack 0
  4876  0001C4                     	ds	8
  4877  0001CC                     _serialInputFifo:
  4878                           	opt stack 0
  4879  0001CC                     	ds	8
  4880                           tblptru	equ	0xFF8
  4881                           tblptrh	equ	0xFF7
  4882                           tblptrl	equ	0xFF6
  4883                           tablat	equ	0xFF5
  4884                           prodh	equ	0xFF4
  4885                           prodl	equ	0xFF3
  4886                           intcon	equ	0xFF2
  4887                           indf0	equ	0xFEF
  4888                           postinc0	equ	0xFEE
  4889                           fsr0h	equ	0xFEA
  4890                           fsr0l	equ	0xFE9
  4891                           wreg	equ	0xFE8
  4892                           indf1	equ	0xFE7
  4893                           postinc1	equ	0xFE6
  4894                           postdec1	equ	0xFE5
  4895                           fsr1h	equ	0xFE2
  4896                           fsr1l	equ	0xFE1
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           plusw2	equ	0xFDB
  4901                           fsr2h	equ	0xFDA
  4902                           fsr2l	equ	0xFD9
  4903                           status	equ	0xFD8
  4904                           
  4905                           	psect	bssBANK2
  4906  000200                     __pbssBANK2:
  4907                           	opt stack 0
  4908  000200                     _inputBuffer:
  4909                           	opt stack 0
  4910  000200                     	ds	128
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           indf0	equ	0xFEF
  4919                           postinc0	equ	0xFEE
  4920                           fsr0h	equ	0xFEA
  4921                           fsr0l	equ	0xFE9
  4922                           wreg	equ	0xFE8
  4923                           indf1	equ	0xFE7
  4924                           postinc1	equ	0xFE6
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           indf2	equ	0xFDF
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           plusw2	equ	0xFDB
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936                           	psect	bssBANK3
  4937  000300                     __pbssBANK3:
  4938                           	opt stack 0
  4939  000300                     _crc8_table:
  4940                           	opt stack 0
  4941  000300                     	ds	256
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           prodh	equ	0xFF4
  4947                           prodl	equ	0xFF3
  4948                           intcon	equ	0xFF2
  4949                           indf0	equ	0xFEF
  4950                           postinc0	equ	0xFEE
  4951                           fsr0h	equ	0xFEA
  4952                           fsr0l	equ	0xFE9
  4953                           wreg	equ	0xFE8
  4954                           indf1	equ	0xFE7
  4955                           postinc1	equ	0xFE6
  4956                           postdec1	equ	0xFE5
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           indf2	equ	0xFDF
  4960                           postinc2	equ	0xFDE
  4961                           postdec2	equ	0xFDD
  4962                           plusw2	equ	0xFDB
  4963                           fsr2h	equ	0xFDA
  4964                           fsr2l	equ	0xFD9
  4965                           status	equ	0xFD8
  4966                           
  4967                           	psect	bssBIGRAM
  4968  000400                     __pbssBIGRAM:
  4969                           	opt stack 0
  4970  000400                     _caninputBuffer:
  4971                           	opt stack 0
  4972  000400                     	ds	494
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           indf0	equ	0xFEF
  4981                           postinc0	equ	0xFEE
  4982                           fsr0h	equ	0xFEA
  4983                           fsr0l	equ	0xFE9
  4984                           wreg	equ	0xFE8
  4985                           indf1	equ	0xFE7
  4986                           postinc1	equ	0xFE6
  4987                           postdec1	equ	0xFE5
  4988                           fsr1h	equ	0xFE2
  4989                           fsr1l	equ	0xFE1
  4990                           indf2	equ	0xFDF
  4991                           postinc2	equ	0xFDE
  4992                           postdec2	equ	0xFDD
  4993                           plusw2	equ	0xFDB
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998                           	psect	cstackBANK2
  4999  000280                     __pcstackBANK2:
  5000                           	opt stack 0
  5001  000280                     doModeVerbose@id:
  5002                           	opt stack 0
  5003                           
  5004                           ; 4 bytes @ 0x0
  5005  000280                     	ds	4
  5006  000284                     doModeVerbose@preg:
  5007                           	opt stack 0
  5008                           
  5009                           ; 2 bytes @ 0x4
  5010  000284                     	ds	2
  5011  000286                     doModeVerbose@preg_1176:
  5012                           	opt stack 0
  5013                           
  5014                           ; 2 bytes @ 0x6
  5015  000286                     	ds	2
  5016  000288                     doModeVerbose@filter_class:
  5017                           	opt stack 0
  5018                           
  5019                           ; 2 bytes @ 0x8
  5020  000288                     	ds	2
  5021  00028A                     doModeVerbose@mask_class:
  5022                           	opt stack 0
  5023                           
  5024                           ; 2 bytes @ 0xA
  5025  00028A                     	ds	2
  5026  00028C                     doModeVerbose@nodeid:
  5027                           	opt stack 0
  5028                           
  5029                           ; 1 bytes @ 0xC
  5030  00028C                     	ds	1
  5031  00028D                     doModeVerbose@nodeid_1168:
  5032                           	opt stack 0
  5033                           
  5034                           ; 1 bytes @ 0xD
  5035  00028D                     	ds	1
  5036  00028E                     doModeVerbose@filter_priority:
  5037                           	opt stack 0
  5038                           
  5039                           ; 1 bytes @ 0xE
  5040  00028E                     	ds	1
  5041  00028F                     doModeVerbose@filter_type:
  5042                           	opt stack 0
  5043                           
  5044                           ; 1 bytes @ 0xF
  5045  00028F                     	ds	1
  5046  000290                     doModeVerbose@filter_nodeid:
  5047                           	opt stack 0
  5048                           
  5049                           ; 1 bytes @ 0x10
  5050  000290                     	ds	1
  5051  000291                     doModeVerbose@mask_priority:
  5052                           	opt stack 0
  5053                           
  5054                           ; 1 bytes @ 0x11
  5055  000291                     	ds	1
  5056  000292                     doModeVerbose@mask_type:
  5057                           	opt stack 0
  5058                           
  5059                           ; 1 bytes @ 0x12
  5060  000292                     	ds	1
  5061  000293                     doModeVerbose@mask_nodeid:
  5062                           	opt stack 0
  5063                           
  5064                           ; 1 bytes @ 0x13
  5065  000293                     	ds	1
  5066  000294                     _doModeVerbose$1136:
  5067                           	opt stack 0
  5068                           
  5069                           ; 2 bytes @ 0x14
  5070  000294                     	ds	2
  5071  000296                     _doModeVerbose$1148:
  5072                           	opt stack 0
  5073                           
  5074                           ; 2 bytes @ 0x16
  5075  000296                     	ds	2
  5076  000298                     _doModeVerbose$1153:
  5077                           	opt stack 0
  5078                           
  5079                           ; 2 bytes @ 0x18
  5080  000298                     	ds	2
  5081  00029A                     _doModeVerbose$1159:
  5082                           	opt stack 0
  5083                           
  5084                           ; 2 bytes @ 0x1A
  5085  00029A                     	ds	2
  5086  00029C                     _doModeVerbose$1163:
  5087                           	opt stack 0
  5088                           
  5089                           ; 2 bytes @ 0x1C
  5090  00029C                     	ds	2
  5091  00029E                     _doModeVerbose$1188:
  5092                           	opt stack 0
  5093                           
  5094                           ; 2 bytes @ 0x1E
  5095  00029E                     	ds	2
  5096  0002A0                     doModeVerbose@rv:
  5097                           	opt stack 0
  5098                           
  5099                           ; 1 bytes @ 0x20
  5100  0002A0                     	ds	1
  5101  0002A1                     doModeVerbose@page_1169:
  5102                           	opt stack 0
  5103                           
  5104                           ; 1 bytes @ 0x21
  5105  0002A1                     	ds	1
  5106  0002A2                     doModeVerbose@reg_1170:
  5107                           	opt stack 0
  5108                           
  5109                           ; 1 bytes @ 0x22
  5110  0002A2                     	ds	1
  5111  0002A3                     doModeVerbose@id_1227:
  5112                           	opt stack 0
  5113                           
  5114                           ; 4 bytes @ 0x23
  5115  0002A3                     	ds	4
  5116  0002A7                     doModeVerbose@filterno:
  5117                           	opt stack 0
  5118                           
  5119                           ; 1 bytes @ 0x27
  5120  0002A7                     	ds	1
  5121  0002A8                     doModeVerbose@maskno:
  5122                           	opt stack 0
  5123                           
  5124                           ; 1 bytes @ 0x28
  5125  0002A8                     	ds	1
  5126  0002A9                     doModeVerbose@i:
  5127                           	opt stack 0
  5128                           
  5129                           ; 1 bytes @ 0x29
  5130  0002A9                     	ds	1
  5131  0002AA                     doModeVerbose@value_1171:
  5132                           	opt stack 0
  5133                           
  5134                           ; 1 bytes @ 0x2A
  5135  0002AA                     	ds	1
  5136  0002AB                     doModeVerbose@count:
  5137                           	opt stack 0
  5138                           
  5139                           ; 1 bytes @ 0x2B
  5140  0002AB                     	ds	1
  5141  0002AC                     doModeVerbose@c:
  5142                           	opt stack 0
  5143                           
  5144                           ; 1 bytes @ 0x2C
  5145  0002AC                     	ds	1
  5146  0002AD                     doModeVerbose@page:
  5147                           	opt stack 0
  5148                           
  5149                           ; 1 bytes @ 0x2D
  5150  0002AD                     	ds	1
  5151  0002AE                     doModeVerbose@reg:
  5152                           	opt stack 0
  5153                           
  5154                           ; 1 bytes @ 0x2E
  5155  0002AE                     	ds	1
  5156  0002AF                     doModeVerbose@nodeid_1183:
  5157                           	opt stack 0
  5158                           
  5159                           ; 1 bytes @ 0x2F
  5160  0002AF                     	ds	1
  5161  0002B0                     doModeVerbose@i_1118:
  5162                           	opt stack 0
  5163                           
  5164                           ; 1 bytes @ 0x30
  5165  0002B0                     	ds	1
  5166  0002B1                     doModeVerbose@value:
  5167                           	opt stack 0
  5168                           
  5169                           ; 1 bytes @ 0x31
  5170  0002B1                     	ds	1
  5171  0002B2                     doModeVerbose@p_1124:
  5172                           	opt stack 0
  5173                           
  5174                           ; 2 bytes @ 0x32
  5175  0002B2                     	ds	2
  5176  0002B4                     doModeVerbose@p_1172:
  5177                           	opt stack 0
  5178                           
  5179                           ; 2 bytes @ 0x34
  5180  0002B4                     	ds	2
  5181  0002B6                     doModeVerbose@ifmode:
  5182                           	opt stack 0
  5183                           
  5184                           ; 1 bytes @ 0x36
  5185  0002B6                     	ds	1
  5186  0002B7                     doModeVerbose@p:
  5187                           	opt stack 0
  5188                           
  5189                           ; 2 bytes @ 0x37
  5190  0002B7                     	ds	2
  5191  0002B9                     doModeVerbose@p_1196:
  5192                           	opt stack 0
  5193                           
  5194                           ; 2 bytes @ 0x39
  5195  0002B9                     	ds	2
  5196  0002BB                     doModeVerbose@p_1215:
  5197                           	opt stack 0
  5198                           
  5199                           ; 2 bytes @ 0x3B
  5200  0002BB                     	ds	2
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           indf0	equ	0xFEF
  5209                           postinc0	equ	0xFEE
  5210                           fsr0h	equ	0xFEA
  5211                           fsr0l	equ	0xFE9
  5212                           wreg	equ	0xFE8
  5213                           indf1	equ	0xFE7
  5214                           postinc1	equ	0xFE6
  5215                           postdec1	equ	0xFE5
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           indf2	equ	0xFDF
  5219                           postinc2	equ	0xFDE
  5220                           postdec2	equ	0xFDD
  5221                           plusw2	equ	0xFDB
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226                           	psect	cstackBANK0
  5227  000060                     __pcstackBANK0:
  5228                           	opt stack 0
  5229  000060                     ?_sprintf:
  5230                           	opt stack 0
  5231  000060                     ?_ultoa:
  5232                           	opt stack 0
  5233  000060                     getCANFrame@pid:
  5234                           	opt stack 0
  5235  000060                     sprintf@sp:
  5236                           	opt stack 0
  5237  000060                     ultoa@buf:
  5238                           	opt stack 0
  5239  000060                     ECANSendMessage@pb:
  5240                           	opt stack 0
  5241                           
  5242                           ; 18 bytes @ 0x0
  5243  000060                     	ds	1
  5244  000061                     getCANFrame@flags:
  5245                           	opt stack 0
  5246                           
  5247                           ; 1 bytes @ 0x1
  5248  000061                     	ds	1
  5249  000062                     ?_getVSCPFrame:
  5250                           	opt stack 0
  5251  000062                     getVSCPFrame@pvscptype:
  5252                           	opt stack 0
  5253  000062                     sprintf@f:
  5254                           	opt stack 0
  5255  000062                     ultoa@val:
  5256                           	opt stack 0
  5257  000062                     receivePrintEventCANAL@data:
  5258                           	opt stack 0
  5259  000062                     printFirmwareVersion@wrkbuf:
  5260                           	opt stack 0
  5261                           
  5262                           ; 20 bytes @ 0x2
  5263  000062                     	ds	1
  5264  000063                     getVSCPFrame@pNodeId:
  5265                           	opt stack 0
  5266                           
  5267                           ; 1 bytes @ 0x3
  5268  000063                     	ds	1
  5269  000064                     getVSCPFrame@pPriority:
  5270                           	opt stack 0
  5271                           
  5272                           ; 1 bytes @ 0x4
  5273  000064                     	ds	1
  5274  000065                     getVSCPFrame@pSize:
  5275                           	opt stack 0
  5276                           
  5277                           ; 1 bytes @ 0x5
  5278  000065                     	ds	1
  5279  000066                     getVSCPFrame@pData:
  5280                           	opt stack 0
  5281  000066                     ultoa@base:
  5282                           	opt stack 0
  5283                           
  5284                           ; 2 bytes @ 0x6
  5285  000066                     	ds	1
  5286  000067                     ??_getVSCPFrame:
  5287                           
  5288                           ; 0 bytes @ 0x7
  5289  000067                     	ds	1
  5290  000068                     ??_sprintf:
  5291  000068                     ultoa@v:
  5292                           	opt stack 0
  5293                           
  5294                           ; 4 bytes @ 0x8
  5295  000068                     	ds	2
  5296  00006A                     receivePrintEventCANAL@i:
  5297                           	opt stack 0
  5298                           
  5299                           ; 1 bytes @ 0xA
  5300  00006A                     	ds	1
  5301  00006B                     receivePrintEventCANAL@dlc:
  5302                           	opt stack 0
  5303  00006B                     getVSCPFrame@pvscpclass:
  5304                           	opt stack 0
  5305  00006B                     sprintf@idx:
  5306                           	opt stack 0
  5307                           
  5308                           ; 1 bytes @ 0xB
  5309  00006B                     	ds	1
  5310  00006C                     ultoa@c:
  5311                           	opt stack 0
  5312  00006C                     _sprintf$2141:
  5313                           	opt stack 0
  5314  00006C                     receivePrintEventCANAL@id:
  5315                           	opt stack 0
  5316  00006C                     getVSCPFrame@id:
  5317                           	opt stack 0
  5318                           
  5319                           ; 4 bytes @ 0xC
  5320  00006C                     	ds	1
  5321  00006D                     ??_receivePrintEventSLCAN:
  5322                           
  5323                           ; 0 bytes @ 0xD
  5324  00006D                     	ds	1
  5325  00006E                     _sprintf$2142:
  5326                           	opt stack 0
  5327                           
  5328                           ; 2 bytes @ 0xE
  5329  00006E                     	ds	2
  5330  000070                     receivePrintEventCANAL@crc:
  5331                           	opt stack 0
  5332  000070                     receivePrintEventSLCAN@dlc:
  5333                           	opt stack 0
  5334  000070                     _sprintf$2148:
  5335                           	opt stack 0
  5336                           
  5337                           ; 2 bytes @ 0x10
  5338  000070                     	ds	1
  5339  000071                     receivePrintEventSLCAN@i:
  5340                           	opt stack 0
  5341                           
  5342                           ; 2 bytes @ 0x11
  5343  000071                     	ds	1
  5344  000072                     ECANSendMessage@mode:
  5345                           	opt stack 0
  5346  000072                     sprintf@ap:
  5347                           	opt stack 0
  5348                           
  5349                           ; 1 bytes @ 0x12
  5350  000072                     	ds	1
  5351  000073                     ECANSendMessage@buffers:
  5352                           	opt stack 0
  5353  000073                     sprintf@prec:
  5354                           	opt stack 0
  5355  000073                     receivePrintEventSLCAN@id:
  5356                           	opt stack 0
  5357                           
  5358                           ; 4 bytes @ 0x13
  5359  000073                     	ds	1
  5360  000074                     ECANSendMessage@j:
  5361                           	opt stack 0
  5362                           
  5363                           ; 1 bytes @ 0x14
  5364  000074                     	ds	1
  5365  000075                     ECANSendMessage@tempBSEL0:
  5366                           	opt stack 0
  5367  000075                     sprintf@width:
  5368                           	opt stack 0
  5369                           
  5370                           ; 2 bytes @ 0x15
  5371  000075                     	ds	1
  5372  000076                     ECANSendMessage@tempPtr:
  5373                           	opt stack 0
  5374                           
  5375                           ; 2 bytes @ 0x16
  5376  000076                     	ds	1
  5377  000077                     sprintf@_val:
  5378                           	opt stack 0
  5379                           
  5380                           ; 4 bytes @ 0x17
  5381  000077                     	ds	1
  5382  000078                     ECANSendMessage@temp:
  5383                           	opt stack 0
  5384                           
  5385                           ; 1 bytes @ 0x18
  5386  000078                     	ds	1
  5387  000079                     ECANSendMessage@i:
  5388                           	opt stack 0
  5389                           
  5390                           ; 1 bytes @ 0x19
  5391  000079                     	ds	1
  5392  00007A                     ECANSendMessage@ptr:
  5393                           	opt stack 0
  5394                           
  5395                           ; 2 bytes @ 0x1A
  5396  00007A                     	ds	1
  5397  00007B                     sprintf@c:
  5398                           	opt stack 0
  5399                           
  5400                           ; 1 bytes @ 0x1B
  5401  00007B                     	ds	1
  5402  00007C                     ?_sendCANFrame:
  5403                           	opt stack 0
  5404  00007C                     sprintf@flag:
  5405                           	opt stack 0
  5406  00007C                     sendCANFrame@id:
  5407                           	opt stack 0
  5408                           
  5409                           ; 4 bytes @ 0x1C
  5410  00007C                     	ds	2
  5411  00007E                     ??_receivePrintEventVerbose:
  5412  00007E                     _printStatistics$1362:
  5413                           	opt stack 0
  5414  00007E                     _printErrors$1387:
  5415                           	opt stack 0
  5416                           
  5417                           ; 2 bytes @ 0x1E
  5418  00007E                     	ds	2
  5419  000080                     sendCANFrame@dlc:
  5420                           	opt stack 0
  5421  000080                     _printStatistics$1368:
  5422                           	opt stack 0
  5423  000080                     _printErrors$1393:
  5424                           	opt stack 0
  5425                           
  5426                           ; 2 bytes @ 0x20
  5427  000080                     	ds	1
  5428  000081                     sendCANFrame@pdata:
  5429                           	opt stack 0
  5430                           
  5431                           ; 2 bytes @ 0x21
  5432  000081                     	ds	1
  5433  000082                     _printStatistics$1374:
  5434                           	opt stack 0
  5435  000082                     _printErrors$1399:
  5436                           	opt stack 0
  5437                           
  5438                           ; 2 bytes @ 0x22
  5439  000082                     	ds	1
  5440  000083                     ??_doModeSLCAN:
  5441  000083                     ??_receiveVSCPModeCanalMsg:
  5442  000083                     ?_sendVSCPFrame:
  5443                           	opt stack 0
  5444  000083                     _receivePrintEventVerbose$1280:
  5445                           	opt stack 0
  5446  000083                     sendVSCPFrame@vscpclass:
  5447                           	opt stack 0
  5448                           
  5449                           ; 2 bytes @ 0x23
  5450  000083                     	ds	1
  5451  000084                     _printStatistics$1380:
  5452                           	opt stack 0
  5453  000084                     _printErrors$1405:
  5454                           	opt stack 0
  5455                           
  5456                           ; 2 bytes @ 0x24
  5457  000084                     	ds	1
  5458  000085                     sendVSCPFrame@vscptype:
  5459                           	opt stack 0
  5460  000085                     _receivePrintEventVerbose$1285:
  5461                           	opt stack 0
  5462                           
  5463                           ; 2 bytes @ 0x25
  5464  000085                     	ds	1
  5465  000086                     sendVSCPFrame@nodeid:
  5466                           	opt stack 0
  5467  000086                     _printErrors$1411:
  5468                           	opt stack 0
  5469                           
  5470                           ; 2 bytes @ 0x26
  5471  000086                     	ds	1
  5472  000087                     sendVSCPFrame@priority:
  5473                           	opt stack 0
  5474  000087                     _receivePrintEventVerbose$1290:
  5475                           	opt stack 0
  5476                           
  5477                           ; 2 bytes @ 0x27
  5478  000087                     	ds	1
  5479  000088                     sendVSCPFrame@size:
  5480                           	opt stack 0
  5481  000088                     _printErrors$1420:
  5482                           	opt stack 0
  5483                           
  5484                           ; 2 bytes @ 0x28
  5485  000088                     	ds	1
  5486  000089                     sendVSCPFrame@pData:
  5487                           	opt stack 0
  5488  000089                     _receivePrintEventVerbose$1295:
  5489                           	opt stack 0
  5490                           
  5491                           ; 2 bytes @ 0x29
  5492  000089                     	ds	1
  5493  00008A                     ??_sendVSCPFrame:
  5494  00008A                     doModeSLCAN@id:
  5495                           	opt stack 0
  5496                           
  5497                           ; 4 bytes @ 0x2A
  5498  00008A                     	ds	1
  5499  00008B                     _receivePrintEventVerbose$1300:
  5500                           	opt stack 0
  5501                           
  5502                           ; 2 bytes @ 0x2B
  5503  00008B                     	ds	2
  5504  00008D                     _receivePrintEventVerbose$1305:
  5505                           	opt stack 0
  5506                           
  5507                           ; 2 bytes @ 0x2D
  5508  00008D                     	ds	1
  5509  00008E                     doModeSLCAN@dlc:
  5510                           	opt stack 0
  5511                           
  5512                           ; 1 bytes @ 0x2E
  5513  00008E                     	ds	1
  5514  00008F                     doModeSLCAN@c:
  5515                           	opt stack 0
  5516  00008F                     receivePrintEventVerbose@i:
  5517                           	opt stack 0
  5518                           
  5519                           ; 1 bytes @ 0x2F
  5520  00008F                     	ds	1
  5521  000090                     doModeSLCAN@rv:
  5522                           	opt stack 0
  5523                           
  5524                           ; 1 bytes @ 0x30
  5525  000090                     	ds	7
  5526  000097                     receiveVSCPModeCanalMsg@data:
  5527                           	opt stack 0
  5528                           
  5529                           ; 8 bytes @ 0x37
  5530  000097                     	ds	7
  5531  00009E                     ?_readRegisterExtended:
  5532                           	opt stack 0
  5533  00009E                     ?_writeRegisterExtended:
  5534                           	opt stack 0
  5535  00009E                     ?_readRegister:
  5536                           	opt stack 0
  5537  00009E                     readRegister@reg:
  5538                           	opt stack 0
  5539  00009E                     readRegisterExtended@page:
  5540                           	opt stack 0
  5541  00009E                     writeRegisterExtended@page:
  5542                           	opt stack 0
  5543                           
  5544                           ; 2 bytes @ 0x3E
  5545  00009E                     	ds	1
  5546  00009F                     readRegister@timeout:
  5547                           	opt stack 0
  5548  00009F                     receiveVSCPModeCanalMsg@id:
  5549                           	opt stack 0
  5550                           
  5551                           ; 4 bytes @ 0x3F
  5552  00009F                     	ds	1
  5553  0000A0                     readRegisterExtended@reg:
  5554                           	opt stack 0
  5555  0000A0                     writeRegisterExtended@reg:
  5556                           	opt stack 0
  5557                           
  5558                           ; 1 bytes @ 0x40
  5559  0000A0                     	ds	1
  5560  0000A1                     readRegister@value:
  5561                           	opt stack 0
  5562  0000A1                     readRegisterExtended@timeout:
  5563                           	opt stack 0
  5564  0000A1                     writeRegisterExtended@timeout:
  5565                           	opt stack 0
  5566                           
  5567                           ; 2 bytes @ 0x41
  5568  0000A1                     	ds	1
  5569  0000A2                     ??_readRegister:
  5570                           
  5571                           ; 0 bytes @ 0x42
  5572  0000A2                     	ds	1
  5573  0000A3                     receiveVSCPModeCanalMsg@dlc:
  5574                           	opt stack 0
  5575  0000A3                     readRegisterExtended@value:
  5576                           	opt stack 0
  5577  0000A3                     writeRegisterExtended@value:
  5578                           	opt stack 0
  5579                           
  5580                           ; 2 bytes @ 0x43
  5581  0000A3                     	ds	2
  5582  0000A5                     ??_readRegisterExtended:
  5583  0000A5                     ??_writeRegisterExtended:
  5584                           
  5585                           ; 0 bytes @ 0x45
  5586  0000A5                     	ds	1
  5587  0000A6                     readRegister@nodeid:
  5588                           	opt stack 0
  5589                           
  5590                           ; 1 bytes @ 0x46
  5591  0000A6                     	ds	1
  5592  0000A7                     printGUID@nodeid:
  5593                           	opt stack 0
  5594  0000A7                     printMDF@nodeid:
  5595                           	opt stack 0
  5596  0000A7                     printNodeFirmwareVersion@nodeid:
  5597                           	opt stack 0
  5598                           
  5599                           ; 1 bytes @ 0x47
  5600  0000A7                     	ds	1
  5601  0000A8                     printMDF@value:
  5602                           	opt stack 0
  5603  0000A8                     printGUID@buf:
  5604                           	opt stack 0
  5605  0000A8                     printNodeFirmwareVersion@buf:
  5606                           	opt stack 0
  5607                           
  5608                           ; 3 bytes @ 0x48
  5609  0000A8                     	ds	1
  5610  0000A9                     readRegisterExtended@nodeid:
  5611                           	opt stack 0
  5612  0000A9                     writeRegisterExtended@nodeid:
  5613                           	opt stack 0
  5614  0000A9                     printMDF@p:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x49
  5618  0000A9                     	ds	2
  5619  0000AB                     printGUID@value:
  5620                           	opt stack 0
  5621  0000AB                     printMDF@i:
  5622                           	opt stack 0
  5623  0000AB                     printNodeFirmwareVersion@value:
  5624                           	opt stack 0
  5625                           
  5626                           ; 1 bytes @ 0x4B
  5627  0000AB                     	ds	1
  5628  0000AC                     printGUID@i:
  5629                           	opt stack 0
  5630  0000AC                     printNodeFirmwareVersion@i:
  5631                           	opt stack 0
  5632                           
  5633                           ; 1 bytes @ 0x4C
  5634  0000AC                     	ds	1
  5635  0000AD                     _findNodes$1464:
  5636                           	opt stack 0
  5637                           
  5638                           ; 2 bytes @ 0x4D
  5639  0000AD                     	ds	2
  5640  0000AF                     findNodes@nFound:
  5641                           	opt stack 0
  5642                           
  5643                           ; 1 bytes @ 0x4F
  5644  0000AF                     	ds	1
  5645  0000B0                     findNodes@value:
  5646                           	opt stack 0
  5647                           
  5648                           ; 1 bytes @ 0x50
  5649  0000B0                     	ds	1
  5650  0000B1                     findNodes@i:
  5651                           	opt stack 0
  5652                           
  5653                           ; 1 bytes @ 0x51
  5654  0000B1                     	ds	1
  5655  0000B2                     ??_doModeVerbose:
  5656                           
  5657                           ; 0 bytes @ 0x52
  5658  0000B2                     	ds	20
  5659  0000C6                     
  5660                           ; 2 bytes @ 0x66
  5661  0000C6                     	ds	2
  5662  0000C8                     
  5663                           ; 3 bytes @ 0x68
  5664  0000C8                     	ds	3
  5665  0000CB                     ??_main:
  5666                           
  5667                           ; 0 bytes @ 0x6B
  5668  0000CB                     	ds	1
  5669  0000CC                     main@c:
  5670                           	opt stack 0
  5671                           
  5672                           ; 1 bytes @ 0x6C
  5673  0000CC                     	ds	1
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           indf0	equ	0xFEF
  5682                           postinc0	equ	0xFEE
  5683                           fsr0h	equ	0xFEA
  5684                           fsr0l	equ	0xFE9
  5685                           wreg	equ	0xFE8
  5686                           indf1	equ	0xFE7
  5687                           postinc1	equ	0xFE6
  5688                           postdec1	equ	0xFE5
  5689                           fsr1h	equ	0xFE2
  5690                           fsr1l	equ	0xFE1
  5691                           indf2	equ	0xFDF
  5692                           postinc2	equ	0xFDE
  5693                           postdec2	equ	0xFDD
  5694                           plusw2	equ	0xFDB
  5695                           fsr2h	equ	0xFDA
  5696                           fsr2l	equ	0xFD9
  5697                           status	equ	0xFD8
  5698                           
  5699                           	psect	cstackCOMRAM
  5700  000001                     __pcstackCOMRAM:
  5701                           	opt stack 0
  5702  000001                     ?i1_WriteTimer0:
  5703                           	opt stack 0
  5704  000001                     ?_fifo_write:
  5705                           	opt stack 0
  5706  000001                     ReadUSART@data:
  5707                           	opt stack 0
  5708  000001                     fifo_write@f:
  5709                           	opt stack 0
  5710  000001                     i1WriteTimer0@timer0:
  5711                           	opt stack 0
  5712                           
  5713                           ; 2 bytes @ 0x0
  5714  000001                     	ds	2
  5715  000003                     fifo_write@buf:
  5716                           	opt stack 0
  5717  000003                     i1WriteTimer0@timer:
  5718                           	opt stack 0
  5719                           
  5720                           ; 2 bytes @ 0x2
  5721  000003                     	ds	1
  5722  000004                     fifo_write@nbytes:
  5723                           	opt stack 0
  5724                           
  5725                           ; 4 bytes @ 0x3
  5726  000004                     	ds	4
  5727  000008                     ??_fifo_write:
  5728                           
  5729                           ; 0 bytes @ 0x7
  5730  000008                     	ds	4
  5731  00000C                     fifo_write@p:
  5732                           	opt stack 0
  5733                           
  5734                           ; 1 bytes @ 0xB
  5735  00000C                     	ds	1
  5736  00000D                     fifo_write@i:
  5737                           	opt stack 0
  5738                           
  5739                           ; 4 bytes @ 0xC
  5740  00000D                     	ds	4
  5741  000011                     ??_Interrupt:
  5742                           
  5743                           ; 0 bytes @ 0x10
  5744  000011                     	ds	7
  5745  000018                     Interrupt@c:
  5746                           	opt stack 0
  5747                           
  5748                           ; 1 bytes @ 0x17
  5749  000018                     	ds	1
  5750  000019                     ?_fifo_init:
  5751                           	opt stack 0
  5752  000019                     ?_WriteTimer0:
  5753                           	opt stack 0
  5754  000019                     ?_OpenUSART:
  5755                           	opt stack 0
  5756  000019                     ?_writeEEPROM:
  5757                           	opt stack 0
  5758  000019                     ?_setFilter:
  5759                           	opt stack 0
  5760  000019                     ?__CANIDToRegs:
  5761                           	opt stack 0
  5762  000019                     ?__RegsToCANID:
  5763                           	opt stack 0
  5764  000019                     ??_isdigit:
  5765  000019                     ?_readEEPROM:
  5766                           	opt stack 0
  5767  000019                     ?_fifo_read:
  5768                           	opt stack 0
  5769  000019                     ?_memset:
  5770                           	opt stack 0
  5771  000019                     ?_strcpy:
  5772                           	opt stack 0
  5773  000019                     ?_strchr:
  5774                           	opt stack 0
  5775  000019                     ?_strlen:
  5776                           	opt stack 0
  5777  000019                     ?_memcpy:
  5778                           	opt stack 0
  5779  000019                     ?_strcat:
  5780                           	opt stack 0
  5781  000019                     ?__ECANPointBuffer:
  5782                           	opt stack 0
  5783  000019                     ?___lwdiv:
  5784                           	opt stack 0
  5785  000019                     ?___lwmod:
  5786                           	opt stack 0
  5787  000019                     ?___wmul:
  5788                           	opt stack 0
  5789  000019                     ?___lldiv:
  5790                           	opt stack 0
  5791  000019                     ECANSetOperationMode@mode:
  5792                           	opt stack 0
  5793  000019                     nibbleFromChar@c:
  5794                           	opt stack 0
  5795  000019                     OpenTimer0@config:
  5796                           	opt stack 0
  5797  000019                     WriteUSART@data:
  5798                           	opt stack 0
  5799  000019                     toupper@c:
  5800                           	opt stack 0
  5801  000019                     __CANIDToRegs@ptr:
  5802                           	opt stack 0
  5803  000019                     __RegsToCANID@ptr:
  5804                           	opt stack 0
  5805  000019                     fifo_init@f:
  5806                           	opt stack 0
  5807  000019                     fifo_read@f:
  5808                           	opt stack 0
  5809  000019                     writeEEPROM@address:
  5810                           	opt stack 0
  5811  000019                     readEEPROM@address:
  5812                           	opt stack 0
  5813  000019                     _init_crc8$2079:
  5814                           	opt stack 0
  5815  000019                     WriteTimer0@timer0:
  5816                           	opt stack 0
  5817  000019                     OpenUSART@spbrg:
  5818                           	opt stack 0
  5819  000019                     ___lwdiv@dividend:
  5820                           	opt stack 0
  5821  000019                     ___lwmod@dividend:
  5822                           	opt stack 0
  5823  000019                     memcpy@d1:
  5824                           	opt stack 0
  5825  000019                     memset@p1:
  5826                           	opt stack 0
  5827  000019                     strcat@to:
  5828                           	opt stack 0
  5829  000019                     strchr@ptr:
  5830                           	opt stack 0
  5831  000019                     strcpy@to:
  5832                           	opt stack 0
  5833  000019                     strlen@s:
  5834                           	opt stack 0
  5835  000019                     ___wmul@multiplier:
  5836                           	opt stack 0
  5837  000019                     setFilter@val:
  5838                           	opt stack 0
  5839  000019                     ___lldiv@dividend:
  5840                           	opt stack 0
  5841                           
  5842                           ; 4 bytes @ 0x18
  5843  000019                     	ds	1
  5844  00001A                     ?_putsUSART:
  5845                           	opt stack 0
  5846  00001A                     ??_printBinary:
  5847  00001A                     ?_strichr:
  5848                           	opt stack 0
  5849  00001A                     _isdigit$2900:
  5850                           	opt stack 0
  5851  00001A                     putsUSART@data:
  5852                           	opt stack 0
  5853  00001A                     strichr@ptr:
  5854                           	opt stack 0
  5855                           
  5856                           ; 2 bytes @ 0x19
  5857  00001A                     	ds	1
  5858  00001B                     __RegsToCANID@val:
  5859                           	opt stack 0
  5860  00001B                     writeEEPROM@data:
  5861                           	opt stack 0
  5862  00001B                     readEEPROM@data:
  5863                           	opt stack 0
  5864  00001B                     OpenUSART@config:
  5865                           	opt stack 0
  5866  00001B                     isdigit@c:
  5867                           	opt stack 0
  5868  00001B                     fifo_init@buf:
  5869                           	opt stack 0
  5870  00001B                     fifo_read@buf:
  5871                           	opt stack 0
  5872  00001B                     init_crc8@j:
  5873                           	opt stack 0
  5874  00001B                     WriteTimer0@timer:
  5875                           	opt stack 0
  5876  00001B                     ___lwdiv@divisor:
  5877                           	opt stack 0
  5878  00001B                     ___lwmod@divisor:
  5879                           	opt stack 0
  5880  00001B                     memcpy@s1:
  5881                           	opt stack 0
  5882  00001B                     memset@c:
  5883                           	opt stack 0
  5884  00001B                     strcat@from:
  5885                           	opt stack 0
  5886  00001B                     strchr@chr:
  5887                           	opt stack 0
  5888  00001B                     strcpy@from:
  5889                           	opt stack 0
  5890  00001B                     strlen@cp:
  5891                           	opt stack 0
  5892  00001B                     ___wmul@multiplicand:
  5893                           	opt stack 0
  5894  00001B                     __CANIDToRegs@val:
  5895                           	opt stack 0
  5896                           
  5897                           ; 4 bytes @ 0x1A
  5898  00001B                     	ds	1
  5899  00001C                     ??_putsUSART:
  5900  00001C                     init_app_eeprom@i:
  5901                           	opt stack 0
  5902  00001C                     printBinary@value:
  5903                           	opt stack 0
  5904  00001C                     __RegsToCANID@type:
  5905                           	opt stack 0
  5906  00001C                     __ECANPointBuffer@b:
  5907                           	opt stack 0
  5908  00001C                     strichr@chr:
  5909                           	opt stack 0
  5910                           
  5911                           ; 2 bytes @ 0x1B
  5912  00001C                     	ds	1
  5913  00001D                     ??_strchr:
  5914  00001D                     ??_setFilter:
  5915  00001D                     ??__RegsToCANID:
  5916  00001D                     ?_hexStringToBytes:
  5917                           	opt stack 0
  5918  00001D                     ?_strnicmp:
  5919                           	opt stack 0
  5920  00001D                     init_crc8@crc:
  5921                           	opt stack 0
  5922  00001D                     ___lwdiv@counter:
  5923                           	opt stack 0
  5924  00001D                     ___lwmod@counter:
  5925                           	opt stack 0
  5926  00001D                     printBinary@i:
  5927                           	opt stack 0
  5928  00001D                     __ECANPointBuffer@pt:
  5929                           	opt stack 0
  5930  00001D                     fifo_init@size:
  5931                           	opt stack 0
  5932  00001D                     fifo_read@nbytes:
  5933                           	opt stack 0
  5934  00001D                     hexStringToBytes@buf:
  5935                           	opt stack 0
  5936  00001D                     memcpy@n:
  5937                           	opt stack 0
  5938  00001D                     memset@n:
  5939                           	opt stack 0
  5940  00001D                     strcat@cp:
  5941                           	opt stack 0
  5942  00001D                     strcpy@cp:
  5943                           	opt stack 0
  5944  00001D                     strnicmp@s1:
  5945                           	opt stack 0
  5946  00001D                     ___wmul@product:
  5947                           	opt stack 0
  5948  00001D                     ___lldiv@divisor:
  5949                           	opt stack 0
  5950                           
  5951                           ; 4 bytes @ 0x1C
  5952  00001D                     	ds	1
  5953  00001E                     init_crc8@i:
  5954                           	opt stack 0
  5955  00001E                     ___lwdiv@quotient:
  5956                           	opt stack 0
  5957                           
  5958                           ; 2 bytes @ 0x1D
  5959  00001E                     	ds	1
  5960  00001F                     ??_fifo_read:
  5961  00001F                     ?_atoi:
  5962                           	opt stack 0
  5963  00001F                     ?_strspn:
  5964                           	opt stack 0
  5965  00001F                     ?_strcspn:
  5966                           	opt stack 0
  5967  00001F                     __CANIDToRegs@type:
  5968                           	opt stack 0
  5969  00001F                     __RegsToCANID@Value:
  5970                           	opt stack 0
  5971  00001F                     hexStringToBytes@size:
  5972                           	opt stack 0
  5973  00001F                     atoi@s:
  5974                           	opt stack 0
  5975  00001F                     memcpy@d:
  5976                           	opt stack 0
  5977  00001F                     memset@p:
  5978                           	opt stack 0
  5979  00001F                     strnicmp@s2:
  5980                           	opt stack 0
  5981  00001F                     strcspn@s1:
  5982                           	opt stack 0
  5983  00001F                     strspn@s1:
  5984                           	opt stack 0
  5985                           
  5986                           ; 2 bytes @ 0x1E
  5987  00001F                     	ds	1
  5988  000020                     ??__CANIDToRegs:
  5989  000020                     ?_crc8:
  5990                           	opt stack 0
  5991  000020                     ?_ECANReceiveMessage:
  5992                           	opt stack 0
  5993  000020                     ?_utoa:
  5994                           	opt stack 0
  5995  000020                     ECANReceiveMessage@data:
  5996                           	opt stack 0
  5997  000020                     crc8@crc:
  5998                           	opt stack 0
  5999  000020                     hexStringToBytes@inhex:
  6000                           	opt stack 0
  6001  000020                     utoa@buf:
  6002                           	opt stack 0
  6003                           
  6004                           ; 2 bytes @ 0x1F
  6005  000020                     	ds	1
  6006  000021                     ??_atoi:
  6007  000021                     memcpy@s:
  6008                           	opt stack 0
  6009  000021                     strnicmp@len:
  6010                           	opt stack 0
  6011  000021                     strcspn@s2:
  6012                           	opt stack 0
  6013  000021                     strspn@s2:
  6014                           	opt stack 0
  6015  000021                     ___lldiv@quotient:
  6016                           	opt stack 0
  6017                           
  6018                           ; 4 bytes @ 0x20
  6019  000021                     	ds	1
  6020  000022                     ??_hexStringToBytes:
  6021  000022                     ECANReceiveMessage@dataLen:
  6022                           	opt stack 0
  6023  000022                     __CANIDToRegs@Value:
  6024                           	opt stack 0
  6025  000022                     crc8@m:
  6026                           	opt stack 0
  6027  000022                     utoa@val:
  6028                           	opt stack 0
  6029                           
  6030                           ; 2 bytes @ 0x21
  6031  000022                     	ds	1
  6032  000023                     ??_crc8:
  6033  000023                     ??_strnicmp:
  6034  000023                     ?_ECANSendMessage:
  6035                           	opt stack 0
  6036  000023                     setFilter@filter:
  6037                           	opt stack 0
  6038  000023                     ECANReceiveMessage@msgFlags:
  6039                           	opt stack 0
  6040  000023                     atoi@sign:
  6041                           	opt stack 0
  6042  000023                     fifo_read@p:
  6043                           	opt stack 0
  6044  000023                     strcspn@i:
  6045                           	opt stack 0
  6046  000023                     strspn@i:
  6047                           	opt stack 0
  6048  000023                     ECANSendMessage@id:
  6049                           	opt stack 0
  6050                           
  6051                           ; 4 bytes @ 0x22
  6052  000023                     	ds	1
  6053  000024                     setFilter@sidh:
  6054                           	opt stack 0
  6055  000024                     ECANReceiveMessage@id:
  6056                           	opt stack 0
  6057  000024                     atoi@a:
  6058                           	opt stack 0
  6059  000024                     utoa@base:
  6060                           	opt stack 0
  6061                           
  6062                           ; 2 bytes @ 0x23
  6063  000024                     	ds	1
  6064  000025                     ?_sendEscapedUartData:
  6065                           	opt stack 0
  6066  000025                     ?_calcCRC:
  6067                           	opt stack 0
  6068  000025                     ?_strtok:
  6069                           	opt stack 0
  6070  000025                     setFilter@sidl:
  6071                           	opt stack 0
  6072  000025                     ___lldiv@counter:
  6073                           	opt stack 0
  6074  000025                     strnicmp@r:
  6075                           	opt stack 0
  6076  000025                     sendEscapedUartData@pcrc:
  6077                           	opt stack 0
  6078  000025                     calcCRC@p:
  6079                           	opt stack 0
  6080  000025                     ECANReceiveMessage@savedPtr:
  6081                           	opt stack 0
  6082  000025                     fifo_read@i:
  6083                           	opt stack 0
  6084  000025                     hexStringToBytes@len:
  6085                           	opt stack 0
  6086  000025                     strtok@s1:
  6087                           	opt stack 0
  6088                           
  6089                           ; 2 bytes @ 0x24
  6090  000025                     	ds	1
  6091  000026                     ?_stristr:
  6092                           	opt stack 0
  6093  000026                     ?___llmod:
  6094                           	opt stack 0
  6095  000026                     setFilter@eidh:
  6096                           	opt stack 0
  6097  000026                     utoa@v:
  6098                           	opt stack 0
  6099  000026                     stristr@s1:
  6100                           	opt stack 0
  6101  000026                     ___llmod@dividend:
  6102                           	opt stack 0
  6103                           
  6104                           ; 4 bytes @ 0x25
  6105  000026                     	ds	1
  6106  000027                     sendEscapedUartData@c:
  6107                           	opt stack 0
  6108  000027                     calcCRC@len:
  6109                           	opt stack 0
  6110  000027                     setFilter@eidl:
  6111                           	opt stack 0
  6112  000027                     ECANReceiveMessage@i:
  6113                           	opt stack 0
  6114  000027                     ECANSendMessage@data:
  6115                           	opt stack 0
  6116  000027                     hexStringToBytes@p:
  6117                           	opt stack 0
  6118  000027                     strtok@s2:
  6119                           	opt stack 0
  6120                           
  6121                           ; 2 bytes @ 0x26
  6122  000027                     	ds	1
  6123  000028                     ?_sendVSCPDriverCommandReply:
  6124                           	opt stack 0
  6125  000028                     sendVSCPDriverErrorFrame@errorcode:
  6126                           	opt stack 0
  6127  000028                     sendVSCPDriverAck@crc:
  6128                           	opt stack 0
  6129  000028                     sendVSCPDriverNack@crc:
  6130                           	opt stack 0
  6131  000028                     sendVSCPDriverCommandReply@cmdCode:
  6132                           	opt stack 0
  6133  000028                     calcCRC@j:
  6134                           	opt stack 0
  6135  000028                     ECANReceiveMessage@mode:
  6136                           	opt stack 0
  6137  000028                     utoa@c:
  6138                           	opt stack 0
  6139  000028                     stristr@s2:
  6140                           	opt stack 0
  6141                           
  6142                           ; 2 bytes @ 0x27
  6143  000028                     	ds	1
  6144  000029                     ?_itoa:
  6145                           	opt stack 0
  6146  000029                     sendVSCPDriverErrorFrame@crc:
  6147                           	opt stack 0
  6148  000029                     sendVSCPDriverCommandReply@cmdReplyCode:
  6149                           	opt stack 0
  6150  000029                     calcCRC@crc:
  6151                           	opt stack 0
  6152  000029                     ECANSendMessage@dataLen:
  6153                           	opt stack 0
  6154  000029                     ECANReceiveMessage@temp:
  6155                           	opt stack 0
  6156  000029                     hexStringToBytes@i:
  6157                           	opt stack 0
  6158  000029                     itoa@buf:
  6159                           	opt stack 0
  6160                           
  6161                           ; 2 bytes @ 0x28
  6162  000029                     	ds	1
  6163  00002A                     sendVSCPDriverCommandReply@crc:
  6164                           	opt stack 0
  6165  00002A                     ECANSendMessage@msgFlags:
  6166                           	opt stack 0
  6167  00002A                     ECANReceiveMessage@ptr:
  6168                           	opt stack 0
  6169  00002A                     ___llmod@divisor:
  6170                           	opt stack 0
  6171                           
  6172                           ; 4 bytes @ 0x29
  6173  00002A                     	ds	1
  6174  00002B                     ??_ECANSendMessage:
  6175  00002B                     itoa@val:
  6176                           	opt stack 0
  6177                           
  6178                           ; 2 bytes @ 0x2A
  6179  00002B                     	ds	1
  6180  00002C                     ?_getCANFrame:
  6181                           	opt stack 0
  6182  00002C                     getCANFrame@pdlc:
  6183                           	opt stack 0
  6184  00002C                     sendVSCPFrame@id:
  6185                           	opt stack 0
  6186                           
  6187                           ; 4 bytes @ 0x2B
  6188  00002C                     	ds	1
  6189  00002D                     getCANFrame@pdata:
  6190                           	opt stack 0
  6191  00002D                     itoa@base:
  6192                           	opt stack 0
  6193                           
  6194                           ; 2 bytes @ 0x2C
  6195  00002D                     	ds	1
  6196  00002E                     ___llmod@counter:
  6197                           	opt stack 0
  6198                           
  6199                           ; 1 bytes @ 0x2D
  6200  00002E                     	ds	1
  6201  00002F                     doModeVscp@c:
  6202                           	opt stack 0
  6203                           
  6204                           ; 1 bytes @ 0x2E
  6205  00002F                     	ds	1
  6206  000030                     tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           prodh	equ	0xFF4
  6211                           prodl	equ	0xFF3
  6212                           intcon	equ	0xFF2
  6213                           indf0	equ	0xFEF
  6214                           postinc0	equ	0xFEE
  6215                           fsr0h	equ	0xFEA
  6216                           fsr0l	equ	0xFE9
  6217                           wreg	equ	0xFE8
  6218                           indf1	equ	0xFE7
  6219                           postinc1	equ	0xFE6
  6220                           postdec1	equ	0xFE5
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           indf2	equ	0xFDF
  6224                           postinc2	equ	0xFDE
  6225                           postdec2	equ	0xFDD
  6226                           plusw2	equ	0xFDB
  6227                           fsr2h	equ	0xFDA
  6228                           fsr2l	equ	0xFD9
  6229                           status	equ	0xFD8
  6230                           
  6231                           ; 0 bytes @ 0x2F
  6232 ;;
  6233 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6234 ;;
  6235 ;; *************** function _main *****************
  6236 ;; Defined at:
  6237 ;;		line 129 in file "main.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  argc            2  102[BANK0 ] int 
  6240 ;;  argv            3  104[BANK0 ] PTR PTR unsigned char 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  c               1  108[BANK0 ] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  2  102[BANK0 ] int 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : F/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6252 ;;      Params:         0       5       0       0       0       0       0
  6253 ;;      Locals:         0       1       0       0       0       0       0
  6254 ;;      Temps:          0       1       0       0       0       0       0
  6255 ;;      Totals:         0       7       0       0       0       0       0
  6256 ;;Total ram usage:        7 bytes
  6257 ;; Hardware stack levels required when called:   10
  6258 ;; This function calls:
  6259 ;;		_fifo_init
  6260 ;;		_init_crc8
  6261 ;;		_readEEPROM
  6262 ;;		_vscp_restoreDefaults
  6263 ;;		_init
  6264 ;;		_putsUSART
  6265 ;;		_printFirmwareVersion
  6266 ;;		_printMode
  6267 ;;		_fifo_read
  6268 ;;		_doModeVerbose
  6269 ;;		_doModeVscp
  6270 ;;		_doModeSLCAN
  6271 ;;		_doModeVscpNode
  6272 ;; This function is called by:
  6273 ;;		Startup code after reset
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text0
  6278  003D4C                     __ptext0:
  6279                           	opt stack 0
  6280  003D4C                     _main:
  6281                           	opt stack 20
  6282                           
  6283                           ;main.c: 131: fifo_init(&serialInputFifo, inputBuffer, sizeof ( inputBuffer));
  6284                           
  6285                           ;incstack = 0
  6286                           ;incstack = 0
  6287  003D4C  0E01               	movlw	high _serialInputFifo
  6288  003D4E  6E1A               	movwf	?_fifo_init+1,c
  6289  003D50  0ECC               	movlw	low _serialInputFifo
  6290  003D52  6E19               	movwf	?_fifo_init,c
  6291  003D54  0102               	movlb	2	; () banked
  6292  003D56  0E02               	movlw	high _inputBuffer
  6293  003D58  6E1C               	movwf	?_fifo_init+3,c
  6294  003D5A  0E00               	movlw	low _inputBuffer
  6295  003D5C  6E1B               	movwf	?_fifo_init+2,c
  6296  003D5E  6A1E               	clrf	?_fifo_init+5,c
  6297  003D60  0E80               	movlw	128
  6298  003D62  6E1D               	movwf	?_fifo_init+4,c
  6299  003D64  EC19  F010         	call	_fifo_init	;wreg free
  6300                           
  6301                           ;main.c: 132: fifo_init(&canInputFifo, caninputBuffer, sizeof ( caninputBuffer));
  6302  003D68  0101               	movlb	1	; () banked
  6303  003D6A  0E01               	movlw	high _canInputFifo
  6304  003D6C  6E1A               	movwf	?_fifo_init+1,c
  6305  003D6E  0EC4               	movlw	low _canInputFifo
  6306  003D70  6E19               	movwf	?_fifo_init,c
  6307  003D72  0E04               	movlw	high _caninputBuffer
  6308  003D74  6E1C               	movwf	?_fifo_init+3,c
  6309  003D76  0E00               	movlw	low _caninputBuffer
  6310  003D78  6E1B               	movwf	?_fifo_init+2,c
  6311  003D7A  0E01               	movlw	1
  6312  003D7C  6E1E               	movwf	?_fifo_init+5,c
  6313  003D7E  0EEE               	movlw	238
  6314  003D80  6E1D               	movwf	?_fifo_init+4,c
  6315  003D82  EC19  F010         	call	_fifo_init	;wreg free
  6316                           
  6317                           ;main.c: 135: init_crc8();
  6318  003D86  EC72  F012         	call	_init_crc8	;wreg free
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;main.c: 139: if ((0x55 != readEEPROM(0x01)) ||
  6322                           ;main.c: 140: (0xaa != readEEPROM(0x02))) {
  6323  003D8A  6A1A               	clrf	?_readEEPROM+1,c
  6324  003D8C  0E01               	movlw	1
  6325  003D8E  6E19               	movwf	?_readEEPROM,c
  6326  003D90  EC5C  F00E         	call	_readEEPROM	;wreg free
  6327  003D94  0A55               	xorlw	85
  6328  003D96  E107               	bnz	l12494
  6329  003D98  6A1A               	clrf	?_readEEPROM+1,c
  6330  003D9A  0E02               	movlw	2
  6331  003D9C  6E19               	movwf	?_readEEPROM,c
  6332  003D9E  EC5C  F00E         	call	_readEEPROM	;wreg free
  6333  003DA2  0AAA               	xorlw	170
  6334  003DA4  A4D8               	btfss	status,2,c
  6335  003DA6                     l12494:
  6336                           
  6337                           ;main.c: 141: vscp_restoreDefaults();
  6338  003DA6  EC4F  F00E         	call	_vscp_restoreDefaults	;wreg free
  6339                           
  6340                           ;main.c: 142: }
  6341                           ;main.c: 144: init();
  6342  003DAA  EC59  F010         	call	_init	;wreg free
  6343                           
  6344                           ;main.c: 148: _delay((unsigned long)((10)*(40000000/4000.0)));
  6345  003DAE  0E82               	movlw	130
  6346  003DB0  0100               	movlb	0	; () banked
  6347  003DB2  6FCB               	movwf	??_main& (0+255),b
  6348  003DB4  0EDD               	movlw	221
  6349  003DB6                     u20197:
  6350  003DB6  2EE8               	decfsz	wreg,f,c
  6351  003DB8  D7FE               	goto	u20197
  6352  003DBA  2FCB               	decfsz	??_main& (0+255),f,b
  6353  003DBC  D7FC               	goto	u20197
  6354  003DBE  D000               	nop2	
  6355                           
  6356                           ;main.c: 152: putsUSART((char *) "\r\nFrankfurt RS-232 CAN4VSCP module\r\n");
  6357  003DC0  0E76               	movlw	high STR_1
  6358  003DC2  6E1B               	movwf	?_putsUSART+1,c
  6359  003DC4  0E53               	movlw	low STR_1
  6360  003DC6  6E1A               	movwf	?_putsUSART,c
  6361  003DC8  EC2E  F011         	call	_putsUSART	;wreg free
  6362                           
  6363                           ;main.c: 153: putsUSART((char *) "Copyright (C) 2014-2015 Grodans Paradis AB, Sweden\r\n
      +                          ");
  6364  003DCC  0E71               	movlw	high STR_2
  6365  003DCE  6E1B               	movwf	?_putsUSART+1,c
  6366  003DD0  0EB1               	movlw	low STR_2
  6367  003DD2  6E1A               	movwf	?_putsUSART,c
  6368  003DD4  EC2E  F011         	call	_putsUSART	;wreg free
  6369                           
  6370                           ;main.c: 154: printFirmwareVersion();
  6371  003DD8  EC93  F014         	call	_printFirmwareVersion	;wreg free
  6372                           
  6373                           ;main.c: 155: printMode();
  6374  003DDC  ECE0  F012         	call	_printMode	;wreg free
  6375                           
  6376                           ;main.c: 159: if (0 && (0 != mode)) {
  6377  003DE0  D02A               	goto	l12526
  6378  003DE2                     l374:
  6379                           
  6380                           ; BSR set to: 0
  6381  003DE2  0004               	clrwdt		;# 
  6382                           
  6383                           ;main.c: 170: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
  6384  003DE4  0E01               	movlw	high _serialInputFifo
  6385  003DE6  6E1A               	movwf	?_fifo_read+1,c
  6386  003DE8  0ECC               	movlw	low _serialInputFifo
  6387  003DEA  6E19               	movwf	?_fifo_read,c
  6388  003DEC  0100               	movlb	0	; () banked
  6389  003DEE  0E00               	movlw	high main@c
  6390  003DF0  6E1C               	movwf	?_fifo_read+3,c
  6391  003DF2  0ECC               	movlw	low main@c
  6392  003DF4  6E1B               	movwf	?_fifo_read+2,c
  6393  003DF6  6A1E               	clrf	?_fifo_read+5,c
  6394  003DF8  0E01               	movlw	1
  6395  003DFA  6E1D               	movwf	?_fifo_read+4,c
  6396  003DFC  EC78  F017         	call	_fifo_read	;wreg free
  6397  003E00  0419               	decf	?_fifo_read,w,c
  6398  003E02  101A               	iorwf	?_fifo_read+1,w,c
  6399  003E04  E10D               	bnz	l375
  6400                           
  6401                           ;main.c: 171: (INTCONbits.GIE = 1);
  6402  003E06  8EF2               	bsf	intcon,7,c	;volatile
  6403                           
  6404                           ;main.c: 172: if ('v' == c) {
  6405  003E08  0100               	movlb	0	; () banked
  6406  003E0A  51CC               	movf	main@c& (0+255),w,b
  6407  003E0C  0A76               	xorlw	118
  6408  003E0E  E108               	bnz	l375
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;main.c: 173: mode = 0;
  6412  003E10  6BD7               	clrf	_mode& (0+255),b
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;main.c: 174: putsUSART((char *) "Temporary verbose mode set\r\n");
  6416  003E12  0E78               	movlw	high STR_4
  6417  003E14  6E1B               	movwf	?_putsUSART+1,c
  6418  003E16  0E2B               	movlw	low STR_4
  6419  003E18  6E1A               	movwf	?_putsUSART,c
  6420  003E1A  EC2E  F011         	call	_putsUSART	;wreg free
  6421                           
  6422                           ;main.c: 175: break;
  6423  003E1E  D00B               	goto	l12526
  6424  003E20                     l375:
  6425                           
  6426                           ;main.c: 176: }
  6427                           ;main.c: 177: }
  6428                           ;main.c: 178: (INTCONbits.GIE = 1);
  6429  003E20  8EF2               	bsf	intcon,7,c	;volatile
  6430  003E22  0EB8               	movlw	184
  6431  003E24  0100               	movlb	0	; () banked
  6432  003E26  5DCD               	subwf	_timekeeper& (0+255),w,b	;volatile
  6433  003E28  0E0B               	movlw	11
  6434  003E2A  59CE               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
  6435  003E2C  0E00               	movlw	0
  6436  003E2E  59CF               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
  6437  003E30  0E00               	movlw	0
  6438  003E32  59D0               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
  6439  003E34  E3D6               	bnc	l374
  6440  003E36                     l12526:
  6441                           
  6442                           ;main.c: 179: }
  6443                           ;main.c: 180: }
  6444                           ;main.c: 182: ledFunctionality = 1;
  6445  003E36  0E01               	movlw	1
  6446  003E38  6E3C               	movwf	_ledFunctionality,c
  6447  003E3A                     l378:
  6448  003E3A  0004               	clrwdt		;# 
  6449                           
  6450                           ;main.c: 190: if (COMSTATbits.TXBO) {
  6451  003E3C  AA74               	btfss	3956,5,c	;volatile
  6452  003E3E  D002               	goto	l379
  6453                           
  6454                           ;main.c: 192: ledFunctionality = 6;
  6455  003E40  0E06               	movlw	6
  6456  003E42  D009               	goto	L1
  6457  003E44                     l379:
  6458  003E44  B874               	btfsc	3956,4,c	;volatile
  6459  003E46  D002               	goto	l12534
  6460  003E48  A674               	btfss	3956,3,c	;volatile
  6461  003E4A  D002               	goto	l381
  6462  003E4C                     l12534:
  6463                           
  6464                           ;main.c: 195: ledFunctionality = 5;
  6465  003E4C  0E05               	movlw	5
  6466  003E4E  D003               	goto	L1
  6467  003E50                     l381:
  6468                           
  6469                           ;main.c: 198: ledFunctionality = 4;
  6470  003E50  0E04               	movlw	4
  6471  003E52  A074               	btfss	3956,0,c	;volatile
  6472                           
  6473                           ;main.c: 201: ledFunctionality = 1;
  6474                           
  6475                           ;main.c: 199: } else {
  6476  003E54  0E01               	movlw	1
  6477  003E56                     L1:
  6478  003E56  6E3C               	movwf	_ledFunctionality,c
  6479                           
  6480                           ;main.c: 202: }
  6481                           ;main.c: 205: if (COMSTATbits.RXBnOVFL) {
  6482  003E58  AC74               	btfss	3956,6,c	;volatile
  6483  003E5A  D007               	goto	l12546
  6484                           
  6485                           ;main.c: 206: can_receiveOverruns++;
  6486  003E5C  0101               	movlb	1	; () banked
  6487  003E5E  2B00               	incf	_can_receiveOverruns& (0+255),f,b
  6488  003E60  0E00               	movlw	0
  6489  003E62  2301               	addwfc	(_can_receiveOverruns+1)& (0+255),f,b
  6490  003E64  2302               	addwfc	(_can_receiveOverruns+2)& (0+255),f,b
  6491  003E66  2303               	addwfc	(_can_receiveOverruns+3)& (0+255),f,b
  6492                           
  6493                           ; BSR set to: 1
  6494                           ;main.c: 207: COMSTATbits.RXBnOVFL = 0;
  6495  003E68  9C74               	bcf	3956,6,c	;volatile
  6496  003E6A                     l12546:
  6497                           
  6498                           ;main.c: 208: }
  6499                           ;main.c: 210: if (0 == mode) {
  6500  003E6A  0100               	movlb	0	; () banked
  6501  003E6C  67D7               	tstfsz	_mode& (0+255),b
  6502  003E6E  D003               	goto	l12550
  6503  003E70                     l12548:
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;main.c: 211: doModeVerbose();
  6507  003E70  EC05  F02D         	call	_doModeVerbose	;wreg free
  6508                           
  6509                           ;main.c: 212: } else if (1 == mode) {
  6510  003E74  D7E2               	goto	l378
  6511  003E76                     l12550:
  6512                           
  6513                           ; BSR set to: 0
  6514  003E76  05D7               	decf	_mode& (0+255),w,b
  6515  003E78  E103               	bnz	l12554
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;main.c: 213: doModeVscp();
  6519  003E7A  EC89  F021         	call	_doModeVscp	;wreg free
  6520                           
  6521                           ;main.c: 214: } else if (2 == mode) {
  6522  003E7E  D7DD               	goto	l378
  6523  003E80                     l12554:
  6524                           
  6525                           ; BSR set to: 0
  6526  003E80  51D7               	movf	_mode& (0+255),w,b
  6527  003E82  0A02               	xorlw	2
  6528  003E84  E103               	bnz	l12558
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;main.c: 215: doModeSLCAN();
  6532  003E86  EC92  F027         	call	_doModeSLCAN	;wreg free
  6533                           
  6534                           ;main.c: 216: } else if (3 == mode) {
  6535  003E8A  D7D7               	goto	l378
  6536  003E8C                     l12558:
  6537                           
  6538                           ; BSR set to: 0
  6539  003E8C  51D7               	movf	_mode& (0+255),w,b
  6540  003E8E  0A03               	xorlw	3
  6541  003E90  E1EF               	bnz	l12548
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;main.c: 217: doModeVscpNode();
  6545  003E92  EC4E  F00E         	call	_doModeVscpNode	;wreg free
  6546                           
  6547                           ;main.c: 218: } else {
  6548  003E96  D7D1               	goto	l378
  6549  003E98                     __end_of_main:
  6550                           	opt stack 0
  6551                           tblptru	equ	0xFF8
  6552                           tblptrh	equ	0xFF7
  6553                           tblptrl	equ	0xFF6
  6554                           tablat	equ	0xFF5
  6555                           prodh	equ	0xFF4
  6556                           prodl	equ	0xFF3
  6557                           intcon	equ	0xFF2
  6558                           indf0	equ	0xFEF
  6559                           postinc0	equ	0xFEE
  6560                           fsr0h	equ	0xFEA
  6561                           fsr0l	equ	0xFE9
  6562                           wreg	equ	0xFE8
  6563                           indf1	equ	0xFE7
  6564                           postinc1	equ	0xFE6
  6565                           postdec1	equ	0xFE5
  6566                           fsr1h	equ	0xFE2
  6567                           fsr1l	equ	0xFE1
  6568                           indf2	equ	0xFDF
  6569                           postinc2	equ	0xFDE
  6570                           postdec2	equ	0xFDD
  6571                           plusw2	equ	0xFDB
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function _doModeVscpNode *****************
  6577 ;; Defined at:
  6578 ;;		line 1310 in file "main.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;		None               void
  6585 ;; Registers used:
  6586 ;;		None
  6587 ;; Tracked objects:
  6588 ;;		On entry : F/0
  6589 ;;		On exit  : F/0
  6590 ;;		Unchanged: F/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6592 ;;      Params:         0       0       0       0       0       0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    2
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_main
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text1
  6607  001C9C                     __ptext1:
  6608                           	opt stack 0
  6609  001C9C                     _doModeVscpNode:
  6610                           	opt stack 27
  6611                           
  6612                           ; BSR set to: 0
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;incstack = 0
  6616                           ;incstack = 0
  6617  001C9C  0012               	return	
  6618  001C9E                     __end_of_doModeVscpNode:
  6619                           	opt stack 0
  6620                           tblptru	equ	0xFF8
  6621                           tblptrh	equ	0xFF7
  6622                           tblptrl	equ	0xFF6
  6623                           tablat	equ	0xFF5
  6624                           prodh	equ	0xFF4
  6625                           prodl	equ	0xFF3
  6626                           intcon	equ	0xFF2
  6627                           indf0	equ	0xFEF
  6628                           postinc0	equ	0xFEE
  6629                           fsr0h	equ	0xFEA
  6630                           fsr0l	equ	0xFE9
  6631                           wreg	equ	0xFE8
  6632                           indf1	equ	0xFE7
  6633                           postinc1	equ	0xFE6
  6634                           postdec1	equ	0xFE5
  6635                           fsr1h	equ	0xFE2
  6636                           fsr1l	equ	0xFE1
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           plusw2	equ	0xFDB
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function _doModeSLCAN *****************
  6646 ;; Defined at:
  6647 ;;		line 1110 in file "main.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  id              4   42[BANK0 ] unsigned long 
  6652 ;;  dlc             1   46[BANK0 ] unsigned char 
  6653 ;;  rv              1   48[BANK0 ] enum E15660
  6654 ;;  c               1   47[BANK0 ] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : F/0
  6661 ;;		On exit  : C/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6664 ;;      Params:         0       0       0       0       0       0       0
  6665 ;;      Locals:         0       7       0       0       0       0       0
  6666 ;;      Temps:          0       7       0       0       0       0       0
  6667 ;;      Totals:         0      14       0       0       0       0       0
  6668 ;;Total ram usage:       14 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    6
  6671 ;; This function calls:
  6672 ;;		_putsUSART
  6673 ;;		_fifo_read
  6674 ;;		_writeEEPROM
  6675 ;;		_ECANSetOperationMode
  6676 ;;		_memset
  6677 ;;		_receivePrintEventSLCAN
  6678 ;;		_strlen
  6679 ;;		_hexStringToBytes
  6680 ;;		_memcpy
  6681 ;;		_sendCANFrame
  6682 ;; This function is called by:
  6683 ;;		_main
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text2
  6688  004F24                     __ptext2:
  6689                           	opt stack 0
  6690  004F24                     _doModeSLCAN:
  6691                           	opt stack 23
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;main.c: 1111: uint8_t c;
  6695                           ;main.c: 1112: BOOL rv = 0;
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;incstack = 0
  6699                           ;incstack = 0
  6700  004F24  6B90               	clrf	doModeSLCAN@rv& (0+255),b
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;main.c: 1115: receivePrintEventSLCAN();
  6704  004F26  EC4D  F022         	call	_receivePrintEventSLCAN	;wreg free
  6705                           
  6706                           ;main.c: 1118: (INTCONbits.GIE = 0);
  6707  004F2A  9EF2               	bcf	intcon,7,c	;volatile
  6708                           
  6709                           ;main.c: 1120: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
  6710  004F2C  0E01               	movlw	high _serialInputFifo
  6711  004F2E  6E1A               	movwf	?_fifo_read+1,c
  6712  004F30  0ECC               	movlw	low _serialInputFifo
  6713  004F32  6E19               	movwf	?_fifo_read,c
  6714  004F34  0100               	movlb	0	; () banked
  6715  004F36  0E00               	movlw	high doModeSLCAN@c
  6716  004F38  6E1C               	movwf	?_fifo_read+3,c
  6717  004F3A  0E8F               	movlw	low doModeSLCAN@c
  6718  004F3C  6E1B               	movwf	?_fifo_read+2,c
  6719  004F3E  6A1E               	clrf	?_fifo_read+5,c
  6720  004F40  0E01               	movlw	1
  6721  004F42  6E1D               	movwf	?_fifo_read+4,c
  6722  004F44  EC78  F017         	call	_fifo_read	;wreg free
  6723  004F48  0419               	decf	?_fifo_read,w,c
  6724  004F4A  101A               	iorwf	?_fifo_read+1,w,c
  6725  004F4C  E001 D1AF          	bnz	l13562
  6726                           
  6727                           ;main.c: 1123: (INTCONbits.GIE = 1);
  6728  004F50  8EF2               	bsf	intcon,7,c	;volatile
  6729                           
  6730                           ;main.c: 1125: if (0x0d != c) {
  6731  004F52  0100               	movlb	0	; () banked
  6732  004F54  518F               	movf	doModeSLCAN@c& (0+255),w,b
  6733  004F56  0A0D               	xorlw	13
  6734  004F58  E101 D160          	bz	l13550
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;main.c: 1126: cmdbuf[ pos ] = c;
  6738  004F5C  0E24               	movlw	low _cmdbuf
  6739  004F5E  25D8               	addwf	_pos& (0+255),w,b
  6740  004F60  6ED9               	movwf	fsr2l,c
  6741  004F62  6ADA               	clrf	fsr2h,c
  6742  004F64  0E01               	movlw	high _cmdbuf
  6743  004F66  22DA               	addwfc	fsr2h,f,c
  6744  004F68  C08F  FFDF         	movff	doModeSLCAN@c,indf2
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;main.c: 1127: pos++;
  6748  004F6C  2BD8               	incf	_pos& (0+255),f,b
  6749  004F6E  D1A0               	goto	l670
  6750  004F70                     l13444:
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;main.c: 1135: if (1 == strlen(cmdbuf)) {
  6754  004F70  0101               	movlb	1	; () banked
  6755  004F72  0E01               	movlw	high _cmdbuf
  6756  004F74  6E1A               	movwf	?_strlen+1,c
  6757  004F76  0E24               	movlw	low _cmdbuf
  6758  004F78  6E19               	movwf	?_strlen,c
  6759  004F7A  EC9E  F00F         	call	_strlen	;wreg free
  6760  004F7E  0419               	decf	?_strlen,w,c
  6761  004F80  101A               	iorwf	?_strlen+1,w,c
  6762  004F82  E001 D176          	bnz	l13552
  6763                           
  6764                           ;main.c: 1136: putsUSART((char *) "JFrankfurt RS-232\r\n");
  6765  004F86  0E7A               	movlw	high STR_124
  6766  004F88  6E1B               	movwf	?_putsUSART+1,c
  6767  004F8A  0E5B               	movlw	low STR_124
  6768  004F8C  6E1A               	movwf	?_putsUSART,c
  6769  004F8E  EC2E  F011         	call	_putsUSART	;wreg free
  6770  004F92                     l13448:
  6771                           
  6772                           ;main.c: 1137: rv = 1;
  6773  004F92  0E01               	movlw	1
  6774  004F94  D0ED               	goto	L4
  6775  004F96                     l13450:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;main.c: 1143: if (1 == strlen(cmdbuf)) {
  6779  004F96  0101               	movlb	1	; () banked
  6780  004F98  0E01               	movlw	high _cmdbuf
  6781  004F9A  6E1A               	movwf	?_strlen+1,c
  6782  004F9C  0E24               	movlw	low _cmdbuf
  6783  004F9E  6E19               	movwf	?_strlen,c
  6784  004FA0  EC9E  F00F         	call	_strlen	;wreg free
  6785  004FA4  0419               	decf	?_strlen,w,c
  6786  004FA6  101A               	iorwf	?_strlen+1,w,c
  6787  004FA8  E001 D163          	bnz	l13552
  6788                           
  6789                           ;main.c: 1144: putsUSART((char *) "V1011\r\n");
  6790  004FAC  0E7B               	movlw	high STR_125
  6791  004FAE  6E1B               	movwf	?_putsUSART+1,c
  6792  004FB0  0ED6               	movlw	low STR_125
  6793  004FB2  6E1A               	movwf	?_putsUSART,c
  6794  004FB4  EC2E  F011         	call	_putsUSART	;wreg free
  6795  004FB8  D7EC               	goto	l13448
  6796  004FBA                     l13456:
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;main.c: 1151: if (1 == strlen(cmdbuf)) {
  6800  004FBA  0101               	movlb	1	; () banked
  6801  004FBC  0E01               	movlw	high _cmdbuf
  6802  004FBE  6E1A               	movwf	?_strlen+1,c
  6803  004FC0  0E24               	movlw	low _cmdbuf
  6804  004FC2  6E19               	movwf	?_strlen,c
  6805  004FC4  EC9E  F00F         	call	_strlen	;wreg free
  6806  004FC8  0419               	decf	?_strlen,w,c
  6807  004FCA  101A               	iorwf	?_strlen+1,w,c
  6808  004FCC  E001 D151          	bnz	l13552
  6809                           
  6810                           ;main.c: 1152: putsUSART((char *) "N1977\r\n");
  6811  004FD0  0E7B               	movlw	high STR_126
  6812  004FD2  6E1B               	movwf	?_putsUSART+1,c
  6813  004FD4  0EDE               	movlw	low STR_126
  6814  004FD6  6E1A               	movwf	?_putsUSART,c
  6815  004FD8  EC2E  F011         	call	_putsUSART	;wreg free
  6816  004FDC  D7DA               	goto	l13448
  6817  004FDE                     l13462:
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;main.c: 1161: bInitiated = 1;
  6821  004FDE  0E01               	movlw	1
  6822  004FE0  6FD4               	movwf	_bInitiated& (0+255),b
  6823                           
  6824                           ;main.c: 1162: rv = 1;
  6825  004FE2  D0C7               	goto	L3
  6826  004FE4                     l680:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;main.c: 1167: if (!bOpen) {
  6830  004FE4  67D5               	tstfsz	_bOpen& (0+255),b
  6831  004FE6  D003               	goto	l13466
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;main.c: 1168: bInitiated = 1;
  6835  004FE8  0E01               	movlw	1
  6836  004FEA  6FD4               	movwf	_bInitiated& (0+255),b
  6837                           
  6838                           ;main.c: 1169: rv = 1;
  6839  004FEC  6F90               	movwf	doModeSLCAN@rv& (0+255),b
  6840  004FEE                     l13466:
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;main.c: 1174: if (1 == strlen(cmdbuf)) {
  6844  004FEE  0101               	movlb	1	; () banked
  6845  004FF0  0E01               	movlw	high _cmdbuf
  6846  004FF2  6E1A               	movwf	?_strlen+1,c
  6847  004FF4  0E24               	movlw	low _cmdbuf
  6848  004FF6  6E19               	movwf	?_strlen,c
  6849  004FF8  EC9E  F00F         	call	_strlen	;wreg free
  6850  004FFC  0419               	decf	?_strlen,w,c
  6851  004FFE  101A               	iorwf	?_strlen+1,w,c
  6852  005000  E001 D137          	bnz	l13552
  6853                           
  6854                           ;main.c: 1175: if (!bOpen && bInitiated) {
  6855  005004  0100               	movlb	0	; () banked
  6856  005006  67D5               	tstfsz	_bOpen& (0+255),b
  6857  005008  D134               	goto	l13552
  6858                           
  6859                           ; BSR set to: 0
  6860  00500A  51D4               	movf	_bInitiated& (0+255),w,b
  6861  00500C  E101 D131          	bz	l13552
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;main.c: 1176: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  6865  005010  0E00               	movlw	0
  6866  005012  EC83  F00E         	call	_ECANSetOperationMode
  6867                           
  6868                           ;main.c: 1177: bOpen = 1;
  6869  005016  0E01               	movlw	1
  6870  005018  0100               	movlb	0	; () banked
  6871  00501A  6FD5               	movwf	_bOpen& (0+255),b
  6872  00501C  D7BA               	goto	l13448
  6873  00501E                     l13478:
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;main.c: 1185: if (1 == strlen(cmdbuf)) {
  6877  00501E  0101               	movlb	1	; () banked
  6878  005020  0E01               	movlw	high _cmdbuf
  6879  005022  6E1A               	movwf	?_strlen+1,c
  6880  005024  0E24               	movlw	low _cmdbuf
  6881  005026  6E19               	movwf	?_strlen,c
  6882  005028  EC9E  F00F         	call	_strlen	;wreg free
  6883  00502C  0419               	decf	?_strlen,w,c
  6884  00502E  101A               	iorwf	?_strlen+1,w,c
  6885  005030  E001 D11F          	bnz	l13552
  6886                           
  6887                           ;main.c: 1186: if (bOpen) {
  6888  005034  0100               	movlb	0	; () banked
  6889  005036  51D5               	movf	_bOpen& (0+255),w,b
  6890  005038  E0AC               	bz	l13448
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;main.c: 1187: ECANSetOperationMode(0x20);
  6894  00503A  0E20               	movlw	32
  6895  00503C  EC83  F00E         	call	_ECANSetOperationMode
  6896                           
  6897                           ;main.c: 1188: bOpen = 0;
  6898  005040  0100               	movlb	0	; () banked
  6899  005042  6BD5               	clrf	_bOpen& (0+255),b
  6900  005044  D7A6               	goto	l13448
  6901  005046                     l13488:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;main.c: 1201: if (bOpen && (strlen(cmdbuf) >= 10)) {
  6905  005046  51D5               	movf	_bOpen& (0+255),w,b
  6906  005048  E101 D113          	bz	l13552
  6907                           
  6908                           ; BSR set to: 0
  6909  00504C  0101               	movlb	1	; () banked
  6910  00504E  0E01               	movlw	high _cmdbuf
  6911  005050  6E1A               	movwf	?_strlen+1,c
  6912  005052  0E24               	movlw	low _cmdbuf
  6913  005054  6E19               	movwf	?_strlen,c
  6914  005056  EC9E  F00F         	call	_strlen	;wreg free
  6915  00505A  0E0A               	movlw	10
  6916  00505C  5C19               	subwf	?_strlen,w,c
  6917  00505E  0E00               	movlw	0
  6918  005060  581A               	subwfb	?_strlen+1,w,c
  6919  005062  E201 D106          	bnc	l13552
  6920                           
  6921                           ;main.c: 1203: uint32_t id;
  6922                           ;main.c: 1204: uint8_t dlc;
  6923                           ;main.c: 1206: if (hexStringToBytes(wrkbuf, sizeof ( wrkbuf), cmdbuf) < 5) {
  6924  005066  0101               	movlb	1	; () banked
  6925  005068  0E01               	movlw	high _wrkbuf
  6926  00506A  6E1E               	movwf	?_hexStringToBytes+1,c
  6927  00506C  0E74               	movlw	low _wrkbuf
  6928  00506E  6E1D               	movwf	?_hexStringToBytes,c
  6929  005070  0E50               	movlw	80
  6930  005072  6E1F               	movwf	?_hexStringToBytes+2,c
  6931  005074  0E01               	movlw	high _cmdbuf
  6932  005076  6E21               	movwf	?_hexStringToBytes+4,c
  6933  005078  0E24               	movlw	low _cmdbuf
  6934  00507A  6E20               	movwf	?_hexStringToBytes+3,c
  6935  00507C  EC6E  F015         	call	_hexStringToBytes	;wreg free
  6936  005080  0100               	movlb	0	; () banked
  6937  005082  6F83               	movwf	??_doModeSLCAN& (0+255),b
  6938  005084  0E05               	movlw	5
  6939  005086  5D83               	subwf	??_doModeSLCAN& (0+255),w,b
  6940  005088  E201 D0F3          	bnc	l13552
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;main.c: 1208: }
  6944                           ;main.c: 1210: id = (uint32_t) wrkbuf[0] << 24 + (uint32_t) wrkbuf[1] << 16 + (uint32_t)
      +                           wrkbuf[2] << 8 + wrkbuf[3];
  6945  00508C  C177  F083         	movff	_wrkbuf+3,??_doModeSLCAN
  6946  005090  0E08               	movlw	8
  6947  005092  2783               	addwf	??_doModeSLCAN& (0+255),f,b
  6948  005094  C176  F084         	movff	_wrkbuf+2,??_doModeSLCAN+1
  6949  005098  0E10               	movlw	16
  6950  00509A  2784               	addwf	(??_doModeSLCAN+1)& (0+255),f,b
  6951  00509C  C175  F085         	movff	_wrkbuf+1,??_doModeSLCAN+2
  6952  0050A0  0E18               	movlw	24
  6953  0050A2  2785               	addwf	(??_doModeSLCAN+2)& (0+255),f,b
  6954  0050A4  C174  F086         	movff	_wrkbuf,??_doModeSLCAN+3
  6955  0050A8  6B87               	clrf	(??_doModeSLCAN+4)& (0+255),b
  6956  0050AA  6B88               	clrf	(??_doModeSLCAN+5)& (0+255),b
  6957  0050AC  6B89               	clrf	(??_doModeSLCAN+6)& (0+255),b
  6958  0050AE  2B85               	incf	(??_doModeSLCAN+2)& (0+255),f,b
  6959  0050B0  D001               	goto	u18000
  6960  0050B2                     u18005:
  6961  0050B2  D8FF               	call	PL82	;call to abstracted procedure
  6962  0050B4                     u18000:
  6963  0050B4  2F85               	decfsz	(??_doModeSLCAN+2)& (0+255),f,b
  6964  0050B6  D7FD               	goto	u18005
  6965  0050B8  2B84               	incf	(??_doModeSLCAN+1)& (0+255),f,b
  6966  0050BA  D001               	goto	u18010
  6967  0050BC                     u18015:
  6968  0050BC  D8FA               	call	PL82	;call to abstracted procedure
  6969  0050BE                     u18010:
  6970  0050BE  2F84               	decfsz	(??_doModeSLCAN+1)& (0+255),f,b
  6971  0050C0  D7FD               	goto	u18015
  6972  0050C2  2B83               	incf	??_doModeSLCAN& (0+255),f,b
  6973  0050C4  D001               	goto	u18020
  6974  0050C6                     u18025:
  6975  0050C6  D8F5               	call	PL82	;call to abstracted procedure
  6976  0050C8                     u18020:
  6977  0050C8  2F83               	decfsz	??_doModeSLCAN& (0+255),f,b
  6978  0050CA  D7FD               	goto	u18025
  6979  0050CC  C089  F08D         	movff	??_doModeSLCAN+6,doModeSLCAN@id+3
  6980  0050D0  C088  F08C         	movff	??_doModeSLCAN+5,doModeSLCAN@id+2
  6981  0050D4  C087  F08B         	movff	??_doModeSLCAN+4,doModeSLCAN@id+1
  6982  0050D8  C086  F08A         	movff	??_doModeSLCAN+3,doModeSLCAN@id
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;main.c: 1211: dlc = vscpData[4];
  6986  0050DC  C044  F08E         	movff	_vscpData+4,doModeSLCAN@dlc
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;main.c: 1214: if (dlc > 8) break;
  6990  0050E0  0E08               	movlw	8
  6991  0050E2  658E               	cpfsgt	doModeSLCAN@dlc& (0+255),b
  6992  0050E4  D001               	goto	l13504
  6993  0050E6  D0C5               	goto	l13552
  6994  0050E8                     l13504:
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;main.c: 1215: if (strlen(cmdbuf) < (10 + 2 * dlc)) break;
  6998  0050E8  90D8               	bcf	status,0,c
  6999  0050EA  358E               	rlcf	doModeSLCAN@dlc& (0+255),w,b
  7000  0050EC  6F83               	movwf	??_doModeSLCAN& (0+255),b
  7001  0050EE  6B84               	clrf	(??_doModeSLCAN+1)& (0+255),b
  7002  0050F0  3784               	rlcf	(??_doModeSLCAN+1)& (0+255),f,b
  7003  0050F2  0E0A               	movlw	10
  7004  0050F4  2783               	addwf	??_doModeSLCAN& (0+255),f,b
  7005  0050F6  0E00               	movlw	0
  7006  0050F8  2384               	addwfc	(??_doModeSLCAN+1)& (0+255),f,b
  7007  0050FA  0101               	movlb	1	; () banked
  7008  0050FC  0E01               	movlw	high _cmdbuf
  7009  0050FE  6E1A               	movwf	?_strlen+1,c
  7010  005100  0E24               	movlw	low _cmdbuf
  7011  005102  6E19               	movwf	?_strlen,c
  7012  005104  EC9E  F00F         	call	_strlen	;wreg free
  7013  005108  0100               	movlb	0	; () banked
  7014  00510A  5183               	movf	??_doModeSLCAN& (0+255),w,b
  7015  00510C  5C19               	subwf	?_strlen,w,c
  7016  00510E  5184               	movf	(??_doModeSLCAN+1)& (0+255),w,b
  7017  005110  581A               	subwfb	?_strlen+1,w,c
  7018  005112  E201 D0AE          	bnc	l13552
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;main.c: 1217: memcpy(vscpData, vscpData + 5, dlc);
  7022  005116  0E40               	movlw	low _vscpData
  7023  005118  6E19               	movwf	?_memcpy,c
  7024  00511A  0E00               	movlw	high _vscpData
  7025  00511C  6E1A               	movwf	?_memcpy+1,c
  7026  00511E  0E0F               	movlw	15
  7027  005120  6E1A               	movwf	?_memcpy+1,c
  7028  005122  0E5F               	movlw	__accesstop+-1
  7029  005124  6419               	cpfsgt	?_memcpy,c
  7030  005126  6A1A               	clrf	?_memcpy+1,c
  7031  005128  0E45               	movlw	low (_vscpData+5)
  7032  00512A  6E1B               	movwf	?_memcpy+2,c
  7033  00512C  0E00               	movlw	high (_vscpData+5)
  7034  00512E  6E1C               	movwf	?_memcpy+3,c
  7035  005130  0E0F               	movlw	15
  7036  005132  6E1C               	movwf	?_memcpy+3,c
  7037  005134  0E5F               	movlw	__accesstop+-1
  7038  005136  641B               	cpfsgt	?_memcpy+2,c
  7039  005138  6A1C               	clrf	?_memcpy+3,c
  7040  00513A  C08E  F01D         	movff	doModeSLCAN@dlc,?_memcpy+4
  7041  00513E  6A1E               	clrf	?_memcpy+5,c
  7042  005140  EC39  F010         	call	_memcpy	;wreg free
  7043                           
  7044                           ;main.c: 1219: rv = sendCANFrame(id, dlc, vscpData);
  7045  005144  C08A  F07C         	movff	doModeSLCAN@id,?_sendCANFrame
  7046  005148  C08B  F07D         	movff	doModeSLCAN@id+1,?_sendCANFrame+1
  7047  00514C  C08C  F07E         	movff	doModeSLCAN@id+2,?_sendCANFrame+2
  7048  005150  C08D  F07F         	movff	doModeSLCAN@id+3,?_sendCANFrame+3
  7049  005154  C08E  F080         	movff	doModeSLCAN@dlc,?_sendCANFrame+4
  7050  005158  0E40               	movlw	low _vscpData
  7051  00515A  0100               	movlb	0	; () banked
  7052  00515C  6F81               	movwf	(?_sendCANFrame+5)& (0+255),b
  7053  00515E  0E00               	movlw	high _vscpData
  7054  005160  6F82               	movwf	(?_sendCANFrame+6)& (0+255),b
  7055  005162  0E0F               	movlw	15
  7056  005164  6F82               	movwf	(?_sendCANFrame+6)& (0+255),b
  7057  005166  0E5F               	movlw	__accesstop+-1
  7058  005168  6581               	cpfsgt	(?_sendCANFrame+5)& (0+255),b
  7059  00516A  6B82               	clrf	(?_sendCANFrame+6)& (0+255),b
  7060  00516C  EC81  F00F         	call	_sendCANFrame	;wreg free
  7061  005170                     L4:
  7062  005170  0100               	movlb	0	; () banked
  7063  005172                     L3:
  7064  005172  6F90               	movwf	doModeSLCAN@rv& (0+255),b
  7065  005174  D07E               	goto	l13552
  7066  005176                     l13512:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;main.c: 1234: if (bOpen && (strlen(cmdbuf) == 1)) {
  7070  005176  51D5               	movf	_bOpen& (0+255),w,b
  7071  005178  E07C               	bz	l13552
  7072                           
  7073                           ; BSR set to: 0
  7074  00517A  0101               	movlb	1	; () banked
  7075  00517C  0E01               	movlw	high _cmdbuf
  7076  00517E  6E1A               	movwf	?_strlen+1,c
  7077  005180  0E24               	movlw	low _cmdbuf
  7078  005182  6E19               	movwf	?_strlen,c
  7079  005184  EC9E  F00F         	call	_strlen	;wreg free
  7080  005188  0419               	decf	?_strlen,w,c
  7081  00518A  101A               	iorwf	?_strlen+1,w,c
  7082  00518C  E172               	bnz	l13552
  7083                           
  7084                           ;main.c: 1235: putsUSART((char *) "F00\r\n");
  7085  00518E  0E7C               	movlw	high STR_127
  7086  005190  6E1B               	movwf	?_putsUSART+1,c
  7087  005192  0E7A               	movlw	low STR_127
  7088  005194  6E1A               	movwf	?_putsUSART,c
  7089  005196  EC2E  F011         	call	_putsUSART	;wreg free
  7090  00519A  D06B               	goto	l13552
  7091  00519C                     l13522:
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;main.c: 1251: if (2 == strlen(cmdbuf)) {
  7095  00519C  0101               	movlb	1	; () banked
  7096  00519E  0E01               	movlw	high _cmdbuf
  7097  0051A0  6E1A               	movwf	?_strlen+1,c
  7098  0051A2  0E24               	movlw	low _cmdbuf
  7099  0051A4  6E19               	movwf	?_strlen,c
  7100  0051A6  EC9E  F00F         	call	_strlen	;wreg free
  7101  0051AA  5019               	movf	?_strlen,w,c
  7102  0051AC  0A02               	xorlw	2
  7103  0051AE  101A               	iorwf	?_strlen+1,w,c
  7104  0051B0  E160               	bnz	l13552
  7105                           
  7106                           ;main.c: 1252: if (!bOpen) {
  7107  0051B2  0100               	movlb	0	; () banked
  7108  0051B4  67D5               	tstfsz	_bOpen& (0+255),b
  7109  0051B6  D05D               	goto	l13552
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;main.c: 1253: if ('0' == cmdbuf[1]) {
  7113  0051B8  0101               	movlb	1	; () banked
  7114  0051BA  5125               	movf	(_cmdbuf+1)& (0+255),w,b
  7115  0051BC  0A30               	xorlw	48
  7116  0051BE  E109               	bnz	l13534
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;main.c: 1254: nTimeStamp = 0;
  7120  0051C0  6A3D               	clrf	_nTimeStamp,c
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;main.c: 1256: writeEEPROM(0x05, 0);
  7124  0051C2  6A1A               	clrf	?_writeEEPROM+1,c
  7125  0051C4  0E05               	movlw	5
  7126  0051C6  6E19               	movwf	?_writeEEPROM,c
  7127  0051C8  0E00               	movlw	0
  7128  0051CA  6A1B               	clrf	?_writeEEPROM+2,c
  7129  0051CC  ECBC  F00E         	call	_writeEEPROM	;wreg free
  7130  0051D0  D6E0               	goto	l13448
  7131  0051D2                     l13534:
  7132                           
  7133                           ; BSR set to: 1
  7134  0051D2  5125               	movf	(_cmdbuf+1)& (0+255),w,b
  7135  0051D4  0A31               	xorlw	49
  7136  0051D6  E10A               	bnz	l705
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;main.c: 1259: nTimeStamp = 1;
  7140  0051D8  0E01               	movlw	1
  7141  0051DA  6E3D               	movwf	_nTimeStamp,c
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;main.c: 1261: writeEEPROM(0x05,
  7145                           ;main.c: 1262: 1);
  7146  0051DC  6A1A               	clrf	?_writeEEPROM+1,c
  7147  0051DE  0E05               	movlw	5
  7148  0051E0  6E19               	movwf	?_writeEEPROM,c
  7149  0051E2  0E01               	movlw	1
  7150  0051E4  6E1B               	movwf	?_writeEEPROM+2,c
  7151  0051E6  ECBC  F00E         	call	_writeEEPROM	;wreg free
  7152  0051EA  D6D3               	goto	l13448
  7153  0051EC                     l705:
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;main.c: 1265: rv = 0;
  7157  0051EC  0100               	movlb	0	; () banked
  7158  0051EE  6B90               	clrf	doModeSLCAN@rv& (0+255),b
  7159  0051F0  D040               	goto	l13552
  7160  0051F2                     l13542:
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;main.c: 1273: writeEEPROM(0x01, 0xFF);
  7164  0051F2  6A1A               	clrf	?_writeEEPROM+1,c
  7165  0051F4  0E01               	movlw	1
  7166  0051F6  6E19               	movwf	?_writeEEPROM,c
  7167  0051F8  0EFF               	movlw	255
  7168  0051FA  681B               	setf	?_writeEEPROM+2,c
  7169  0051FC  ECBC  F00E         	call	_writeEEPROM	;wreg free
  7170  005200  00FF               	reset		;# 
  7171                           
  7172                           ;main.c: 1275: break;
  7173  005202  D037               	goto	l13552
  7174  005204                     l13544:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;main.c: 1278: {
  7178                           ;main.c: 1280: if (0 == strlen(cmdbuf)) {
  7179  005204  0101               	movlb	1	; () banked
  7180  005206  0E01               	movlw	high _cmdbuf
  7181  005208  6E1A               	movwf	?_strlen+1,c
  7182  00520A  0E24               	movlw	low _cmdbuf
  7183  00520C  6E19               	movwf	?_strlen,c
  7184  00520E  EC9E  F00F         	call	_strlen	;wreg free
  7185  005212  501A               	movf	?_strlen+1,w,c
  7186  005214  1019               	iorwf	?_strlen,w,c
  7187  005216  E101 D6BC          	bz	l13448
  7188  00521A  D02B               	goto	l13552
  7189  00521C                     l13550:
  7190                           
  7191                           ; BSR set to: 0
  7192  00521C  518F               	movf	doModeSLCAN@c& (0+255),w,b
  7193                           
  7194                           ; Switch size 1, requested type "space"
  7195                           ; Number of cases is 16, Range of values is 66 to 116
  7196                           ; switch strategies available:
  7197                           ; Name         Instructions Cycles
  7198                           ; simple_byte           49    25 (average)
  7199                           ;	Chosen strategy is simple_byte
  7200  00521E  0A42               	xorlw	66	; case 66
  7201  005220  E0E8               	bz	l13542
  7202  005222  0A01               	xorlw	1	; case 67
  7203  005224  E101 D6FB          	bz	l13478
  7204  005228  0A05               	xorlw	5	; case 70
  7205  00522A  E0A5               	bz	l13512
  7206  00522C  0A0C               	xorlw	12	; case 74
  7207  00522E  E101 D69F          	bz	l13444
  7208  005232  0A07               	xorlw	7	; case 77
  7209  005234  E101 D6AD          	bz	l13448
  7210  005238  0A03               	xorlw	3	; case 78
  7211  00523A  E101 D6BE          	bz	l13456
  7212  00523E  0A01               	xorlw	1	; case 79
  7213  005240  E101 D6D5          	bz	l13466
  7214  005244  0A1D               	xorlw	29	; case 82
  7215  005246  E015               	bz	l13552
  7216  005248  0A01               	xorlw	1	; case 83
  7217  00524A  E101 D6C8          	bz	l13462
  7218  00524E  0A07               	xorlw	7	; case 84
  7219  005250  E101 D6F9          	bz	l13488
  7220  005254  0A02               	xorlw	2	; case 86
  7221  005256  E101 D69E          	bz	l13450
  7222  00525A  0A0C               	xorlw	12	; case 90
  7223  00525C  E09F               	bz	l13522
  7224  00525E  0A37               	xorlw	55	; case 109
  7225  005260  E101 D697          	bz	l13448
  7226  005264  0A1F               	xorlw	31	; case 114
  7227  005266  E005               	bz	l13552
  7228  005268  0A01               	xorlw	1	; case 115
  7229  00526A  E101 D6BB          	bz	l680
  7230  00526E  0A07               	xorlw	7	; case 116
  7231  005270  E1C9               	bnz	l13544
  7232  005272                     l13552:
  7233                           
  7234                           ;main.c: 1288: if (rv) {
  7235  005272  0100               	movlb	0	; () banked
  7236  005274  5190               	movf	doModeSLCAN@rv& (0+255),w,b
  7237  005276  E007               	bz	l13556
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;main.c: 1290: putsUSART((char *) "\r");
  7241  005278  0E7C               	movlw	high STR_128
  7242  00527A  6E1B               	movwf	?_putsUSART+1,c
  7243  00527C  0EF3               	movlw	low STR_128
  7244  00527E  6E1A               	movwf	?_putsUSART,c
  7245  005280  EC2E  F011         	call	_putsUSART	;wreg free
  7246                           
  7247                           ;main.c: 1291: } else {
  7248  005284  D006               	goto	l13558
  7249  005286                     l13556:
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;main.c: 1293: putsUSART((char *) "\a");
  7253  005286  0E7C               	movlw	high STR_129
  7254  005288  6E1B               	movwf	?_putsUSART+1,c
  7255  00528A  0EF1               	movlw	low STR_129
  7256  00528C  6E1A               	movwf	?_putsUSART,c
  7257  00528E  EC2E  F011         	call	_putsUSART	;wreg free
  7258  005292                     l13558:
  7259                           
  7260                           ;main.c: 1294: }
  7261                           ;main.c: 1297: memset(cmdbuf, 0, sizeof ( cmdbuf));
  7262  005292  0101               	movlb	1	; () banked
  7263  005294  0E01               	movlw	high _cmdbuf
  7264  005296  6E1A               	movwf	?_memset+1,c
  7265  005298  0E24               	movlw	low _cmdbuf
  7266  00529A  6E19               	movwf	?_memset,c
  7267  00529C  6A1C               	clrf	?_memset+3,c
  7268  00529E  6A1B               	clrf	?_memset+2,c
  7269  0052A0  6A1E               	clrf	?_memset+5,c
  7270  0052A2  0E50               	movlw	80
  7271  0052A4  6E1D               	movwf	?_memset+4,c
  7272  0052A6  ECCF  F00E         	call	_memset	;wreg free
  7273                           
  7274                           ;main.c: 1298: pos = 0;
  7275  0052AA  0100               	movlb	0	; () banked
  7276  0052AC  6BD8               	clrf	_pos& (0+255),b
  7277  0052AE                     l13562:
  7278                           
  7279                           ;main.c: 1300: }
  7280                           ;main.c: 1303: (INTCONbits.GIE = 1);
  7281  0052AE  8EF2               	bsf	intcon,7,c	;volatile
  7282  0052B0                     l670:
  7283  0052B0  0012               	return	
  7284  0052B2                     __end_of_doModeSLCAN:
  7285                           	opt stack 0
  7286  0052B2                     PL82:
  7287                           	opt stack 23
  7288  0052B2  90D8               	bcf	status,0,c
  7289  0052B4  3786               	rlcf	(??_doModeSLCAN+3)& (0+255),f,b
  7290  0052B6  3787               	rlcf	(??_doModeSLCAN+4)& (0+255),f,b
  7291  0052B8  3788               	rlcf	(??_doModeSLCAN+5)& (0+255),f,b
  7292  0052BA  3789               	rlcf	(??_doModeSLCAN+6)& (0+255),f,b
  7293  0052BC  0012               	return	
  7294  0052BE                     __end_ofPL82:
  7295                           	opt stack 0
  7296                           tblptru	equ	0xFF8
  7297                           tblptrh	equ	0xFF7
  7298                           tblptrl	equ	0xFF6
  7299                           tablat	equ	0xFF5
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           intcon	equ	0xFF2
  7303                           indf0	equ	0xFEF
  7304                           postinc0	equ	0xFEE
  7305                           fsr0h	equ	0xFEA
  7306                           fsr0l	equ	0xFE9
  7307                           wreg	equ	0xFE8
  7308                           indf1	equ	0xFE7
  7309                           postinc1	equ	0xFE6
  7310                           postdec1	equ	0xFE5
  7311                           fsr1h	equ	0xFE2
  7312                           fsr1l	equ	0xFE1
  7313                           indf2	equ	0xFDF
  7314                           postinc2	equ	0xFDE
  7315                           postdec2	equ	0xFDD
  7316                           plusw2	equ	0xFDB
  7317                           fsr2h	equ	0xFDA
  7318                           fsr2l	equ	0xFD9
  7319                           status	equ	0xFD8
  7320                           
  7321 ;; *************** function _hexStringToBytes *****************
  7322 ;; Defined at:
  7323 ;;		line 31 in file "hexutils.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  buf             2   28[COMRAM] PTR unsigned char 
  7326 ;;		 -> wrkbuf(80), 
  7327 ;;  size            1   30[COMRAM] unsigned char 
  7328 ;;  inhex           2   31[COMRAM] PTR unsigned char 
  7329 ;;		 -> cmdbuf(80), 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  i               2   40[COMRAM] int 
  7332 ;;  p               2   38[COMRAM] PTR unsigned char 
  7333 ;;		 -> cmdbuf(80), 
  7334 ;;  len             2   36[COMRAM] int 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      unsigned char 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : F/1
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7344 ;;      Params:         5       0       0       0       0       0       0
  7345 ;;      Locals:         6       0       0       0       0       0       0
  7346 ;;      Temps:          3       0       0       0       0       0       0
  7347 ;;      Totals:        14       0       0       0       0       0       0
  7348 ;;Total ram usage:       14 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; Hardware stack levels required when called:    3
  7351 ;; This function calls:
  7352 ;;		_strlen
  7353 ;;		_nibbleFromChar
  7354 ;; This function is called by:
  7355 ;;		_doModeSLCAN
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text3
  7360  002ADC                     __ptext3:
  7361                           	opt stack 0
  7362  002ADC                     _hexStringToBytes:
  7363                           	opt stack 25
  7364                           
  7365                           ; BSR set to: 1
  7366                           ;hexutils.c: 32: uint8_t *p;
  7367                           ;hexutils.c: 33: int len, i;
  7368                           ;hexutils.c: 35: len = strlen(inhex) / 2;
  7369                           
  7370                           ;incstack = 0
  7371                           ;incstack = 0
  7372  002ADC  C020  F019         	movff	hexStringToBytes@inhex,?_strlen
  7373  002AE0  C021  F01A         	movff	hexStringToBytes@inhex+1,?_strlen+1
  7374  002AE4  EC9E  F00F         	call	_strlen	;wreg free
  7375  002AE8  90D8               	bcf	status,0,c
  7376  002AEA  301A               	rrcf	?_strlen+1,w,c
  7377  002AEC  6E26               	movwf	hexStringToBytes@len+1,c
  7378  002AEE  3019               	rrcf	?_strlen,w,c
  7379  002AF0  6E25               	movwf	hexStringToBytes@len,c
  7380                           
  7381                           ;hexutils.c: 36: if ( len > size ) return 0;
  7382  002AF2  501F               	movf	hexStringToBytes@size,w,c
  7383  002AF4  6E22               	movwf	??_hexStringToBytes& (0+255),c
  7384  002AF6  6A23               	clrf	(??_hexStringToBytes+1)& (0+255),c
  7385  002AF8  5023               	movf	??_hexStringToBytes+1,w,c
  7386  002AFA  0A80               	xorlw	128
  7387  002AFC  6E24               	movwf	(??_hexStringToBytes+2)& (0+255),c
  7388  002AFE  5025               	movf	hexStringToBytes@len,w,c
  7389  002B00  5C22               	subwf	??_hexStringToBytes,w,c
  7390  002B02  5026               	movf	hexStringToBytes@len+1,w,c
  7391  002B04  0A80               	xorlw	128
  7392  002B06  5824               	subwfb	(??_hexStringToBytes+2)& (0+255),w,c
  7393  002B08  E202               	bc	l1493
  7394  002B0A  0E00               	movlw	0
  7395  002B0C  D033               	goto	l1494
  7396  002B0E                     l1493:
  7397                           
  7398                           ;hexutils.c: 37: for (i=0, p = (uint8_t *)inhex; i<len; i++) {
  7399  002B0E  6A29               	clrf	hexStringToBytes@i,c
  7400  002B10  6A2A               	clrf	hexStringToBytes@i+1,c
  7401  002B12  C020  F027         	movff	hexStringToBytes@inhex,hexStringToBytes@p
  7402  002B16  C021  F028         	movff	hexStringToBytes@inhex+1,hexStringToBytes@p+1
  7403  002B1A  D022               	goto	l11844
  7404  002B1C                     l11838:
  7405                           
  7406                           ;hexutils.c: 38: buf[ i ] = (nibbleFromChar(*p) << 4) | nibbleFromChar(*(p+1));
  7407  002B1C  5029               	movf	hexStringToBytes@i,w,c
  7408  002B1E  241D               	addwf	hexStringToBytes@buf,w,c
  7409  002B20  6ED9               	movwf	fsr2l,c
  7410  002B22  502A               	movf	hexStringToBytes@i+1,w,c
  7411  002B24  201E               	addwfc	hexStringToBytes@buf+1,w,c
  7412  002B26  6EDA               	movwf	fsr2h,c
  7413  002B28  EE10 F001          	lfsr	1,1
  7414  002B2C  5027               	movf	hexStringToBytes@p,w,c
  7415  002B2E  26E1               	addwf	fsr1l,f,c
  7416  002B30  5028               	movf	hexStringToBytes@p+1,w,c
  7417  002B32  22E2               	addwfc	fsr1h,f,c
  7418  002B34  50E7               	movf	indf1,w,c
  7419  002B36  ECFA  F00F         	call	_nibbleFromChar
  7420  002B3A  6E22               	movwf	??_hexStringToBytes& (0+255),c
  7421  002B3C  C027  FFE1         	movff	hexStringToBytes@p,fsr1l
  7422  002B40  C028  FFE2         	movff	hexStringToBytes@p+1,fsr1h
  7423  002B44  50E7               	movf	indf1,w,c
  7424  002B46  ECFA  F00F         	call	_nibbleFromChar
  7425  002B4A  6E23               	movwf	(??_hexStringToBytes+1)& (0+255),c
  7426  002B4C  3823               	swapf	??_hexStringToBytes+1,w,c
  7427  002B4E  0BF0               	andlw	240
  7428  002B50  1022               	iorwf	??_hexStringToBytes,w,c
  7429  002B52  6EDF               	movwf	indf2,c
  7430                           
  7431                           ;hexutils.c: 39: p += 2;
  7432  002B54  0E02               	movlw	2
  7433  002B56  2627               	addwf	hexStringToBytes@p,f,c
  7434  002B58  0E00               	movlw	0
  7435  002B5A  2228               	addwfc	hexStringToBytes@p+1,f,c
  7436  002B5C  4A29               	infsnz	hexStringToBytes@i,f,c
  7437  002B5E  2A2A               	incf	hexStringToBytes@i+1,f,c
  7438  002B60                     l11844:
  7439  002B60  502A               	movf	hexStringToBytes@i+1,w,c
  7440  002B62  0A80               	xorlw	128
  7441  002B64  6E22               	movwf	??_hexStringToBytes& (0+255),c
  7442  002B66  5025               	movf	hexStringToBytes@len,w,c
  7443  002B68  5C29               	subwf	hexStringToBytes@i,w,c
  7444  002B6A  5026               	movf	hexStringToBytes@len+1,w,c
  7445  002B6C  0A80               	xorlw	128
  7446  002B6E  5822               	subwfb	??_hexStringToBytes& (0+255),w,c
  7447  002B70  E3D5               	bnc	l11838
  7448                           
  7449                           ;hexutils.c: 40: }
  7450                           ;hexutils.c: 42: return i;
  7451  002B72  5029               	movf	hexStringToBytes@i,w,c
  7452  002B74                     l1494:
  7453  002B74  0012               	return	
  7454  002B76                     __end_of_hexStringToBytes:
  7455                           	opt stack 0
  7456                           tblptru	equ	0xFF8
  7457                           tblptrh	equ	0xFF7
  7458                           tblptrl	equ	0xFF6
  7459                           tablat	equ	0xFF5
  7460                           prodh	equ	0xFF4
  7461                           prodl	equ	0xFF3
  7462                           intcon	equ	0xFF2
  7463                           indf0	equ	0xFEF
  7464                           postinc0	equ	0xFEE
  7465                           fsr0h	equ	0xFEA
  7466                           fsr0l	equ	0xFE9
  7467                           wreg	equ	0xFE8
  7468                           indf1	equ	0xFE7
  7469                           postinc1	equ	0xFE6
  7470                           postdec1	equ	0xFE5
  7471                           fsr1h	equ	0xFE2
  7472                           fsr1l	equ	0xFE1
  7473                           indf2	equ	0xFDF
  7474                           postinc2	equ	0xFDE
  7475                           postdec2	equ	0xFDD
  7476                           plusw2	equ	0xFDB
  7477                           fsr2h	equ	0xFDA
  7478                           fsr2l	equ	0xFD9
  7479                           status	equ	0xFD8
  7480                           
  7481 ;; *************** function _nibbleFromChar *****************
  7482 ;; Defined at:
  7483 ;;		line 16 in file "hexutils.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  c               1    wreg     unsigned char 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  c               1   24[COMRAM] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      unsigned char 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/1
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7497 ;;      Params:         0       0       0       0       0       0       0
  7498 ;;      Locals:         1       0       0       0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0       0
  7500 ;;      Totals:         1       0       0       0       0       0       0
  7501 ;;Total ram usage:        1 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    2
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_hexStringToBytes
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text4
  7512  001FF4                     __ptext4:
  7513                           	opt stack 0
  7514  001FF4                     _nibbleFromChar:
  7515                           	opt stack 25
  7516                           
  7517                           ;incstack = 0
  7518                           ;incstack = 0
  7519                           ;nibbleFromChar@c stored from wreg
  7520  001FF4  CFE8 F019          	movff	wreg,nibbleFromChar@c
  7521                           
  7522                           ;hexutils.c: 17: if(c >= '0' && c <= '9') return c - '0';
  7523  001FF8  0E2F               	movlw	47
  7524  001FFA  6419               	cpfsgt	nibbleFromChar@c,c
  7525  001FFC  D006               	goto	l12288
  7526  001FFE  0E3A               	movlw	58
  7527  002000  6019               	cpfslt	nibbleFromChar@c,c
  7528  002002  D003               	goto	l12288
  7529  002004  5019               	movf	nibbleFromChar@c,w,c
  7530  002006  0FD0               	addlw	208
  7531  002008  D013               	goto	l1488
  7532  00200A                     l12288:
  7533                           
  7534                           ;hexutils.c: 18: if(c >= 'a' && c <= 'f') return c - 'a' + 10;
  7535  00200A  0E60               	movlw	96
  7536  00200C  6419               	cpfsgt	nibbleFromChar@c,c
  7537  00200E  D006               	goto	l12296
  7538  002010  0E67               	movlw	103
  7539  002012  6019               	cpfslt	nibbleFromChar@c,c
  7540  002014  D003               	goto	l12296
  7541  002016  5019               	movf	nibbleFromChar@c,w,c
  7542  002018  0FA9               	addlw	169
  7543  00201A  D00A               	goto	l1488
  7544  00201C                     l12296:
  7545                           
  7546                           ;hexutils.c: 19: if(c >= 'A' && c <= 'F') return c - 'A' + 10;
  7547  00201C  0E40               	movlw	64
  7548  00201E  6419               	cpfsgt	nibbleFromChar@c,c
  7549  002020  D006               	goto	l12304
  7550  002022  0E47               	movlw	71
  7551  002024  6019               	cpfslt	nibbleFromChar@c,c
  7552  002026  D003               	goto	l12304
  7553  002028  5019               	movf	nibbleFromChar@c,w,c
  7554  00202A  0FC9               	addlw	201
  7555  00202C  D001               	goto	l1488
  7556  00202E                     l12304:
  7557                           
  7558                           ;hexutils.c: 20: return 255;
  7559  00202E  0EFF               	movlw	255
  7560  002030                     l1488:
  7561  002030  0012               	return	
  7562  002032                     __end_of_nibbleFromChar:
  7563                           	opt stack 0
  7564                           tblptru	equ	0xFF8
  7565                           tblptrh	equ	0xFF7
  7566                           tblptrl	equ	0xFF6
  7567                           tablat	equ	0xFF5
  7568                           prodh	equ	0xFF4
  7569                           prodl	equ	0xFF3
  7570                           intcon	equ	0xFF2
  7571                           indf0	equ	0xFEF
  7572                           postinc0	equ	0xFEE
  7573                           fsr0h	equ	0xFEA
  7574                           fsr0l	equ	0xFE9
  7575                           wreg	equ	0xFE8
  7576                           indf1	equ	0xFE7
  7577                           postinc1	equ	0xFE6
  7578                           postdec1	equ	0xFE5
  7579                           fsr1h	equ	0xFE2
  7580                           fsr1l	equ	0xFE1
  7581                           indf2	equ	0xFDF
  7582                           postinc2	equ	0xFDE
  7583                           postdec2	equ	0xFDD
  7584                           plusw2	equ	0xFDB
  7585                           fsr2h	equ	0xFDA
  7586                           fsr2l	equ	0xFD9
  7587                           status	equ	0xFD8
  7588                           
  7589 ;; *************** function _receivePrintEventSLCAN *****************
  7590 ;; Defined at:
  7591 ;;		line 1737 in file "main.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;		None
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  id              4   19[BANK0 ] unsigned long 
  7596 ;;  i               2   17[BANK0 ] int 
  7597 ;;  dlc             1   16[BANK0 ] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      enum E15660
  7600 ;; Registers used:
  7601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : F/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7607 ;;      Params:         0       0       0       0       0       0       0
  7608 ;;      Locals:         0       7       0       0       0       0       0
  7609 ;;      Temps:          0       3       0       0       0       0       0
  7610 ;;      Totals:         0      10       0       0       0       0       0
  7611 ;;Total ram usage:       10 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    5
  7614 ;; This function calls:
  7615 ;;		_putsUSART
  7616 ;;		_WriteUSART
  7617 ;;		_strlen
  7618 ;;		_getCANFrame
  7619 ;;		_ultoa
  7620 ;;		_itoa
  7621 ;; This function is called by:
  7622 ;;		_doModeSLCAN
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text5
  7627  00449A                     __ptext5:
  7628                           	opt stack 0
  7629  00449A                     _receivePrintEventSLCAN:
  7630                           	opt stack 23
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;main.c: 1738: int i;
  7634                           ;main.c: 1739: uint8_t dlc;
  7635                           ;main.c: 1740: uint32_t id;
  7636                           ;main.c: 1742: if (getCANFrame(&id, &dlc, vscpData)) {
  7637                           
  7638                           ;incstack = 0
  7639                           ;incstack = 0
  7640  00449A  0E70               	movlw	low receivePrintEventSLCAN@dlc
  7641  00449C  6E2C               	movwf	?_getCANFrame,c
  7642  00449E  0E40               	movlw	low _vscpData
  7643  0044A0  6E2D               	movwf	?_getCANFrame+1,c
  7644  0044A2  0E00               	movlw	high _vscpData
  7645  0044A4  6E2E               	movwf	?_getCANFrame+2,c
  7646  0044A6  0E0F               	movlw	15
  7647  0044A8  6E2E               	movwf	?_getCANFrame+2,c
  7648  0044AA  0E5F               	movlw	__accesstop+-1
  7649  0044AC  642D               	cpfsgt	?_getCANFrame+1,c
  7650  0044AE  6A2E               	clrf	?_getCANFrame+2,c
  7651  0044B0  0E73               	movlw	receivePrintEventSLCAN@id& (0+255)
  7652  0044B2  ECFC  F00E         	call	_getCANFrame
  7653  0044B6  0900               	iorlw	0
  7654  0044B8  E101 D0B0          	bz	l960
  7655                           
  7656                           ;main.c: 1745: cntRxFrames++;
  7657  0044BC  0101               	movlb	1	; () banked
  7658  0044BE  2B0C               	incf	_cntRxFrames& (0+255),f,b
  7659  0044C0  0E00               	movlw	0
  7660  0044C2  230D               	addwfc	(_cntRxFrames+1)& (0+255),f,b
  7661  0044C4  230E               	addwfc	(_cntRxFrames+2)& (0+255),f,b
  7662  0044C6  230F               	addwfc	(_cntRxFrames+3)& (0+255),f,b
  7663                           
  7664                           ;main.c: 1746: cntRxBytes += dlc;
  7665  0044C8  0100               	movlb	0	; () banked
  7666  0044CA  5170               	movf	receivePrintEventSLCAN@dlc& (0+255),w,b
  7667  0044CC  0101               	movlb	1	; () banked
  7668  0044CE  2708               	addwf	_cntRxBytes& (0+255),f,b
  7669  0044D0  0E00               	movlw	0
  7670  0044D2  2309               	addwfc	(_cntRxBytes+1)& (0+255),f,b
  7671  0044D4  230A               	addwfc	(_cntRxBytes+2)& (0+255),f,b
  7672  0044D6  230B               	addwfc	(_cntRxBytes+3)& (0+255),f,b
  7673  0044D8                     l933:
  7674  0044D8  A2AC               	btfss	4012,1,c	;volatile
  7675  0044DA  D7FE               	goto	l933
  7676                           
  7677                           ;main.c: 1749: WriteUSART('T');
  7678  0044DC  0E54               	movlw	84
  7679  0044DE  EC6E  F00E         	call	_WriteUSART
  7680                           
  7681                           ;main.c: 1751: ultoa(wrkbuf, id, 16);
  7682  0044E2  0E01               	movlw	high _wrkbuf
  7683  0044E4  0100               	movlb	0	; () banked
  7684  0044E6  6F61               	movwf	(?_ultoa+1)& (0+255),b
  7685  0044E8  0E74               	movlw	low _wrkbuf
  7686  0044EA  6F60               	movwf	?_ultoa& (0+255),b
  7687  0044EC  C073  F062         	movff	receivePrintEventSLCAN@id,?_ultoa+2
  7688  0044F0  C074  F063         	movff	receivePrintEventSLCAN@id+1,?_ultoa+3
  7689  0044F4  C075  F064         	movff	receivePrintEventSLCAN@id+2,?_ultoa+4
  7690  0044F8  C076  F065         	movff	receivePrintEventSLCAN@id+3,?_ultoa+5
  7691  0044FC  6B67               	clrf	(?_ultoa+7)& (0+255),b
  7692  0044FE  0E10               	movlw	16
  7693  004500  6F66               	movwf	(?_ultoa+6)& (0+255),b
  7694  004502  EC6A  F01A         	call	_ultoa	;wreg free
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;main.c: 1753: for (i = 0; i < ((uint8_t) (8 - sizeof (wrkbuf))); i++) {
  7698  004506  6B71               	clrf	receivePrintEventSLCAN@i& (0+255),b
  7699  004508  6B72               	clrf	(receivePrintEventSLCAN@i+1)& (0+255),b
  7700  00450A                     l938:
  7701                           
  7702                           ; BSR set to: 0
  7703  00450A  A2AC               	btfss	4012,1,c	;volatile
  7704  00450C  D7FE               	goto	l938
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;main.c: 1755: WriteUSART('0');
  7708  00450E  0E30               	movlw	48
  7709  004510  EC6E  F00E         	call	_WriteUSART
  7710                           
  7711                           ; BSR set to: 0
  7712  004514  D884               	call	PL88	;call to abstracted procedure
  7713  004516  B4D8               	btfsc	status,2,c
  7714  004518  5D71               	subwf	receivePrintEventSLCAN@i& (0+255),w,b
  7715  00451A  E3F7               	bnc	l938
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;main.c: 1756: }
  7719                           ;main.c: 1757: putsUSART(wrkbuf);
  7720  00451C  0101               	movlb	1	; () banked
  7721  00451E  0E01               	movlw	high _wrkbuf
  7722  004520  6E1B               	movwf	?_putsUSART+1,c
  7723  004522  0E74               	movlw	low _wrkbuf
  7724  004524  6E1A               	movwf	?_putsUSART,c
  7725  004526  EC2E  F011         	call	_putsUSART	;wreg free
  7726                           
  7727                           ;main.c: 1760: itoa(wrkbuf, dlc, 16);
  7728  00452A  0E01               	movlw	high _wrkbuf
  7729  00452C  6E2A               	movwf	?_itoa+1,c
  7730  00452E  0E74               	movlw	low _wrkbuf
  7731  004530  6E29               	movwf	?_itoa,c
  7732  004532  0100               	movlb	0	; () banked
  7733  004534  C070  F02B         	movff	receivePrintEventSLCAN@dlc,?_itoa+2
  7734  004538  6A2C               	clrf	?_itoa+3,c
  7735  00453A  6A2E               	clrf	?_itoa+5,c
  7736  00453C  0E10               	movlw	16
  7737  00453E  6E2D               	movwf	?_itoa+4,c
  7738  004540  EC2D  F00F         	call	_itoa	;wreg free
  7739  004544                     l941:
  7740  004544  A2AC               	btfss	4012,1,c	;volatile
  7741  004546  D7FE               	goto	l941
  7742                           
  7743                           ;main.c: 1762: WriteUSART(wrkbuf[0]);
  7744  004548  0101               	movlb	1	; () banked
  7745  00454A  5174               	movf	_wrkbuf& (0+255),w,b
  7746  00454C  EC6E  F00E         	call	_WriteUSART
  7747                           
  7748                           ;main.c: 1765: for (i = 0; i < dlc; i++) {
  7749  004550  0100               	movlb	0	; () banked
  7750  004552  6B71               	clrf	receivePrintEventSLCAN@i& (0+255),b
  7751  004554  6B72               	clrf	(receivePrintEventSLCAN@i+1)& (0+255),b
  7752  004556  D02B               	goto	l14438
  7753  004558                     l14426:
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;main.c: 1766: itoa(wrkbuf, vscpData[i], 16);
  7757  004558  0E01               	movlw	high _wrkbuf
  7758  00455A  6E2A               	movwf	?_itoa+1,c
  7759  00455C  0E74               	movlw	low _wrkbuf
  7760  00455E  6E29               	movwf	?_itoa,c
  7761  004560  0100               	movlb	0	; () banked
  7762  004562  5171               	movf	receivePrintEventSLCAN@i& (0+255),w,b
  7763  004564  0F40               	addlw	low _vscpData
  7764  004566  6ED9               	movwf	fsr2l,c
  7765  004568  6ADA               	clrf	fsr2h,c
  7766  00456A  50DF               	movf	indf2,w,c
  7767  00456C  6E2B               	movwf	?_itoa+2,c
  7768  00456E  6A2C               	clrf	?_itoa+3,c
  7769  004570  6A2E               	clrf	?_itoa+5,c
  7770  004572  0E10               	movlw	16
  7771  004574  6E2D               	movwf	?_itoa+4,c
  7772  004576  EC2D  F00F         	call	_itoa	;wreg free
  7773                           
  7774                           ;main.c: 1768: if (2 != strlen(wrkbuf)) {
  7775  00457A  0101               	movlb	1	; () banked
  7776  00457C  0E01               	movlw	high _wrkbuf
  7777  00457E  6E1A               	movwf	?_strlen+1,c
  7778  004580  0E74               	movlw	low _wrkbuf
  7779  004582  6E19               	movwf	?_strlen,c
  7780  004584  EC9E  F00F         	call	_strlen	;wreg free
  7781  004588  5019               	movf	?_strlen,w,c
  7782  00458A  0A02               	xorlw	2
  7783  00458C  101A               	iorwf	?_strlen+1,w,c
  7784  00458E  E005               	bz	l14434
  7785  004590                     l947:
  7786  004590  A2AC               	btfss	4012,1,c	;volatile
  7787  004592  D7FE               	goto	l947
  7788                           
  7789                           ;main.c: 1770: WriteUSART('0');
  7790  004594  0E30               	movlw	48
  7791  004596  EC6E  F00E         	call	_WriteUSART
  7792  00459A                     l14434:
  7793                           
  7794                           ;main.c: 1771: }
  7795                           ;main.c: 1773: putsUSART(wrkbuf);
  7796  00459A  0101               	movlb	1	; () banked
  7797  00459C  0E01               	movlw	high _wrkbuf
  7798  00459E  6E1B               	movwf	?_putsUSART+1,c
  7799  0045A0  0E74               	movlw	low _wrkbuf
  7800  0045A2  6E1A               	movwf	?_putsUSART,c
  7801  0045A4  EC2E  F011         	call	_putsUSART	;wreg free
  7802  0045A8  0100               	movlb	0	; () banked
  7803  0045AA  4B71               	infsnz	receivePrintEventSLCAN@i& (0+255),f,b
  7804  0045AC  2B72               	incf	(receivePrintEventSLCAN@i+1)& (0+255),f,b
  7805  0045AE                     l14438:
  7806                           
  7807                           ; BSR set to: 0
  7808  0045AE  5170               	movf	receivePrintEventSLCAN@dlc& (0+255),w,b
  7809  0045B0  6F6D               	movwf	??_receivePrintEventSLCAN& (0+255),b
  7810  0045B2  6B6E               	clrf	(??_receivePrintEventSLCAN+1)& (0+255),b
  7811  0045B4  5172               	movf	(receivePrintEventSLCAN@i+1)& (0+255),w,b
  7812  0045B6  0A80               	xorlw	128
  7813  0045B8  6F6F               	movwf	(??_receivePrintEventSLCAN+2)& (0+255),b
  7814  0045BA  516D               	movf	??_receivePrintEventSLCAN& (0+255),w,b
  7815  0045BC  5D71               	subwf	receivePrintEventSLCAN@i& (0+255),w,b
  7816  0045BE  516E               	movf	(??_receivePrintEventSLCAN+1)& (0+255),w,b
  7817  0045C0  0A80               	xorlw	128
  7818  0045C2  596F               	subwfb	(??_receivePrintEventSLCAN+2)& (0+255),w,b
  7819  0045C4  E3C9               	bnc	l14426
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;main.c: 1774: }
  7823                           ;main.c: 1777: if (nTimeStamp) {
  7824  0045C6  503D               	movf	_nTimeStamp,w,c
  7825  0045C8  E024               	bz	l957
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;main.c: 1778: ultoa(wrkbuf, timer, 16);
  7829  0045CA  0E01               	movlw	high _wrkbuf
  7830  0045CC  0100               	movlb	0	; () banked
  7831  0045CE  6F61               	movwf	(?_ultoa+1)& (0+255),b
  7832  0045D0  0E74               	movlw	low _wrkbuf
  7833  0045D2  6F60               	movwf	?_ultoa& (0+255),b
  7834  0045D4  C118  F062         	movff	_timer,?_ultoa+2	;volatile
  7835  0045D8  C119  F063         	movff	_timer+1,?_ultoa+3	;volatile
  7836  0045DC  C11A  F064         	movff	_timer+2,?_ultoa+4	;volatile
  7837  0045E0  C11B  F065         	movff	_timer+3,?_ultoa+5	;volatile
  7838  0045E4  6B67               	clrf	(?_ultoa+7)& (0+255),b
  7839  0045E6  0E10               	movlw	16
  7840  0045E8  6F66               	movwf	(?_ultoa+6)& (0+255),b
  7841  0045EA  EC6A  F01A         	call	_ultoa	;wreg free
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;main.c: 1780: for (i = 0; i < ((uint8_t) (8 - sizeof (wrkbuf))); i++) {
  7845  0045EE  6B71               	clrf	receivePrintEventSLCAN@i& (0+255),b
  7846  0045F0  6B72               	clrf	(receivePrintEventSLCAN@i+1)& (0+255),b
  7847  0045F2                     l954:
  7848                           
  7849                           ; BSR set to: 0
  7850  0045F2  A2AC               	btfss	4012,1,c	;volatile
  7851  0045F4  D7FE               	goto	l954
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;main.c: 1782: WriteUSART('0');
  7855  0045F6  0E30               	movlw	48
  7856  0045F8  EC6E  F00E         	call	_WriteUSART
  7857                           
  7858                           ; BSR set to: 0
  7859  0045FC  D810               	call	PL88	;call to abstracted procedure
  7860  0045FE  B4D8               	btfsc	status,2,c
  7861  004600  5D71               	subwf	receivePrintEventSLCAN@i& (0+255),w,b
  7862  004602  E3F7               	bnc	l954
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;main.c: 1783: }
  7866                           ;main.c: 1784: putsUSART(wrkbuf);
  7867  004604  0101               	movlb	1	; () banked
  7868  004606  0E01               	movlw	high _wrkbuf
  7869  004608  6E1B               	movwf	?_putsUSART+1,c
  7870  00460A  0E74               	movlw	low _wrkbuf
  7871  00460C  6E1A               	movwf	?_putsUSART,c
  7872  00460E  EC2E  F011         	call	_putsUSART	;wreg free
  7873  004612                     l957:
  7874  004612  A2AC               	btfss	4012,1,c	;volatile
  7875  004614  D7FE               	goto	l957
  7876                           
  7877                           ;main.c: 1788: WriteUSART(0x0d);
  7878  004616  0E0D               	movlw	13
  7879  004618  EC6E  F00E         	call	_WriteUSART
  7880  00461C                     l960:
  7881  00461C  0012               	return	
  7882  00461E                     __end_of_receivePrintEventSLCAN:
  7883                           	opt stack 0
  7884  00461E                     PL88:
  7885                           	opt stack 23
  7886  00461E  0100               	movlb	0	; () banked
  7887  004620  4B71               	infsnz	receivePrintEventSLCAN@i& (0+255),f,b
  7888  004622  2B72               	incf	(receivePrintEventSLCAN@i+1)& (0+255),f,b
  7889  004624  5172               	movf	(receivePrintEventSLCAN@i+1)& (0+255),w,b
  7890  004626  0A80               	xorlw	128
  7891  004628  0F80               	addlw	-128
  7892  00462A  0CB8               	retlw	184
  7893  00462C                     __end_ofPL88:
  7894                           	opt stack 0
  7895                           tblptru	equ	0xFF8
  7896                           tblptrh	equ	0xFF7
  7897                           tblptrl	equ	0xFF6
  7898                           tablat	equ	0xFF5
  7899                           prodh	equ	0xFF4
  7900                           prodl	equ	0xFF3
  7901                           intcon	equ	0xFF2
  7902                           indf0	equ	0xFEF
  7903                           postinc0	equ	0xFEE
  7904                           fsr0h	equ	0xFEA
  7905                           fsr0l	equ	0xFE9
  7906                           wreg	equ	0xFE8
  7907                           indf1	equ	0xFE7
  7908                           postinc1	equ	0xFE6
  7909                           postdec1	equ	0xFE5
  7910                           fsr1h	equ	0xFE2
  7911                           fsr1l	equ	0xFE1
  7912                           indf2	equ	0xFDF
  7913                           postinc2	equ	0xFDE
  7914                           postdec2	equ	0xFDD
  7915                           plusw2	equ	0xFDB
  7916                           fsr2h	equ	0xFDA
  7917                           fsr2l	equ	0xFD9
  7918                           status	equ	0xFD8
  7919                           
  7920 ;; *************** function _ultoa *****************
  7921 ;; Defined at:
  7922 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\ltoa.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  buf             2    0[BANK0 ] PTR unsigned char 
  7925 ;;		 -> wrkbuf(80), 
  7926 ;;  val             4    2[BANK0 ] unsigned long 
  7927 ;;  base            2    6[BANK0 ] int 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  v               4    8[BANK0 ] unsigned long 
  7930 ;;  c               1   12[BANK0 ] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  2    0[BANK0 ] PTR unsigned char 
  7933 ;; Registers used:
  7934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : F/0
  7937 ;;		On exit  : F/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7940 ;;      Params:         0       8       0       0       0       0       0
  7941 ;;      Locals:         0       5       0       0       0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0
  7943 ;;      Totals:         0      13       0       0       0       0       0
  7944 ;;Total ram usage:       13 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:    3
  7947 ;; This function calls:
  7948 ;;		___lldiv
  7949 ;;		___llmod
  7950 ;; This function is called by:
  7951 ;;		_receivePrintEventSLCAN
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text6
  7956  0034D4                     __ptext6:
  7957                           	opt stack 0
  7958  0034D4                     _ultoa:
  7959                           	opt stack 24
  7960                           
  7961                           ; BSR set to: 0
  7962                           
  7963                           ;incstack = 0
  7964                           ;incstack = 0
  7965  0034D4  C062  F068         	movff	ultoa@val,ultoa@v
  7966  0034D8  C063  F069         	movff	ultoa@val+1,ultoa@v+1
  7967  0034DC  C064  F06A         	movff	ultoa@val+2,ultoa@v+2
  7968  0034E0  C065  F06B         	movff	ultoa@val+3,ultoa@v+3
  7969  0034E4                     l11938:
  7970                           
  7971                           ; BSR set to: 0
  7972  0034E4  C068  F019         	movff	ultoa@v,?___lldiv
  7973  0034E8  C069  F01A         	movff	ultoa@v+1,?___lldiv+1
  7974  0034EC  C06A  F01B         	movff	ultoa@v+2,?___lldiv+2
  7975  0034F0  C06B  F01C         	movff	ultoa@v+3,?___lldiv+3
  7976  0034F4  D858               	call	PL72	;call to abstracted procedure
  7977  0034F6  EC19  F013         	call	___lldiv	;wreg free
  7978  0034FA  C01C  F06B         	movff	?___lldiv+3,ultoa@v+3
  7979  0034FE  C01B  F06A         	movff	?___lldiv+2,ultoa@v+2
  7980  003502  C01A  F069         	movff	?___lldiv+1,ultoa@v+1
  7981  003506  C019  F068         	movff	?___lldiv,ultoa@v
  7982                           
  7983                           ; BSR set to: 0
  7984  00350A  4B60               	infsnz	ultoa@buf& (0+255),f,b
  7985  00350C  2B61               	incf	(ultoa@buf+1)& (0+255),f,b
  7986                           
  7987                           ; BSR set to: 0
  7988  00350E  516B               	movf	(ultoa@v+3)& (0+255),w,b
  7989  003510  1168               	iorwf	ultoa@v& (0+255),w,b
  7990  003512  1169               	iorwf	(ultoa@v+1)& (0+255),w,b
  7991  003514  116A               	iorwf	(ultoa@v+2)& (0+255),w,b
  7992  003516  E1E6               	bnz	l11938
  7993                           
  7994                           ; BSR set to: 0
  7995  003518  C060  FFD9         	movff	ultoa@buf,fsr2l
  7996  00351C  C061  FFDA         	movff	ultoa@buf+1,fsr2h
  7997  003520  6ADF               	clrf	indf2,c
  7998                           
  7999                           ; BSR set to: 0
  8000  003522  0760               	decf	ultoa@buf& (0+255),f,b
  8001  003524  A0D8               	btfss	status,0,c
  8002  003526  0761               	decf	(ultoa@buf+1)& (0+255),f,b
  8003  003528                     l11948:
  8004                           
  8005                           ; BSR set to: 0
  8006  003528  C062  F026         	movff	ultoa@val,?___llmod
  8007  00352C  C063  F027         	movff	ultoa@val+1,?___llmod+1
  8008  003530  C064  F028         	movff	ultoa@val+2,?___llmod+2
  8009  003534  C065  F029         	movff	ultoa@val+3,?___llmod+3
  8010  003538  C066  F02A         	movff	ultoa@base,?___llmod+4
  8011  00353C  C067  F02B         	movff	ultoa@base+1,?___llmod+5
  8012  003540  0E00               	movlw	0
  8013  003542  BE2B               	btfsc	?___llmod+5,7,c
  8014  003544  0EFF               	movlw	-1
  8015  003546  6E2C               	movwf	?___llmod+6,c
  8016  003548  6E2D               	movwf	?___llmod+7,c
  8017  00354A  ECDF  F011         	call	___llmod	;wreg free
  8018  00354E  5026               	movf	?___llmod,w,c
  8019  003550  6F6C               	movwf	ultoa@c& (0+255),b
  8020                           
  8021                           ; BSR set to: 0
  8022  003552  C062  F019         	movff	ultoa@val,?___lldiv
  8023  003556  C063  F01A         	movff	ultoa@val+1,?___lldiv+1
  8024  00355A  C064  F01B         	movff	ultoa@val+2,?___lldiv+2
  8025  00355E  C065  F01C         	movff	ultoa@val+3,?___lldiv+3
  8026  003562  D821               	call	PL72	;call to abstracted procedure
  8027  003564  EC19  F013         	call	___lldiv	;wreg free
  8028  003568  C01C  F065         	movff	?___lldiv+3,ultoa@val+3
  8029  00356C  C01B  F064         	movff	?___lldiv+2,ultoa@val+2
  8030  003570  C01A  F063         	movff	?___lldiv+1,ultoa@val+1
  8031  003574  C019  F062         	movff	?___lldiv,ultoa@val
  8032                           
  8033                           ; BSR set to: 0
  8034  003578  0E09               	movlw	9
  8035  00357A  656C               	cpfsgt	ultoa@c& (0+255),b
  8036  00357C  D002               	goto	l2309
  8037                           
  8038                           ; BSR set to: 0
  8039  00357E  0E07               	movlw	7
  8040  003580  276C               	addwf	ultoa@c& (0+255),f,b
  8041  003582                     l2309:
  8042                           
  8043                           ; BSR set to: 0
  8044  003582  0E30               	movlw	48
  8045  003584  276C               	addwf	ultoa@c& (0+255),f,b
  8046                           
  8047                           ; BSR set to: 0
  8048  003586  C060  FFD9         	movff	ultoa@buf,fsr2l
  8049  00358A  C061  FFDA         	movff	ultoa@buf+1,fsr2h
  8050  00358E  C06C  FFDF         	movff	ultoa@c,indf2
  8051                           
  8052                           ; BSR set to: 0
  8053  003592  0760               	decf	ultoa@buf& (0+255),f,b
  8054  003594  A0D8               	btfss	status,0,c
  8055  003596  0761               	decf	(ultoa@buf+1)& (0+255),f,b
  8056                           
  8057                           ; BSR set to: 0
  8058  003598  5165               	movf	(ultoa@val+3)& (0+255),w,b
  8059  00359A  1162               	iorwf	ultoa@val& (0+255),w,b
  8060  00359C  1163               	iorwf	(ultoa@val+1)& (0+255),w,b
  8061  00359E  1164               	iorwf	(ultoa@val+2)& (0+255),w,b
  8062  0035A0  B4D8               	btfsc	status,2,c
  8063                           
  8064                           ; BSR set to: 0
  8065  0035A2  0012               	return	
  8066  0035A4  D7C1               	goto	l11948
  8067  0035A6                     __end_of_ultoa:
  8068                           	opt stack 0
  8069  0035A6                     PL72:
  8070                           	opt stack 24
  8071  0035A6  C066  F01D         	movff	ultoa@base,?___lldiv+4
  8072  0035AA  C067  F01E         	movff	ultoa@base+1,?___lldiv+5
  8073  0035AE  0E00               	movlw	0
  8074  0035B0  BE1E               	btfsc	?___lldiv+5,7,c
  8075  0035B2  0EFF               	movlw	-1
  8076  0035B4  6E1F               	movwf	?___lldiv+6,c
  8077  0035B6  6E20               	movwf	?___lldiv+7,c
  8078  0035B8  0012               	return	
  8079  0035BA                     __end_ofPL72:
  8080                           	opt stack 0
  8081                           tblptru	equ	0xFF8
  8082                           tblptrh	equ	0xFF7
  8083                           tblptrl	equ	0xFF6
  8084                           tablat	equ	0xFF5
  8085                           prodh	equ	0xFF4
  8086                           prodl	equ	0xFF3
  8087                           intcon	equ	0xFF2
  8088                           indf0	equ	0xFEF
  8089                           postinc0	equ	0xFEE
  8090                           fsr0h	equ	0xFEA
  8091                           fsr0l	equ	0xFE9
  8092                           wreg	equ	0xFE8
  8093                           indf1	equ	0xFE7
  8094                           postinc1	equ	0xFE6
  8095                           postdec1	equ	0xFE5
  8096                           fsr1h	equ	0xFE2
  8097                           fsr1l	equ	0xFE1
  8098                           indf2	equ	0xFDF
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           plusw2	equ	0xFDB
  8102                           fsr2h	equ	0xFDA
  8103                           fsr2l	equ	0xFD9
  8104                           status	equ	0xFD8
  8105                           
  8106 ;; *************** function _doModeVscp *****************
  8107 ;; Defined at:
  8108 ;;		line 945 in file "main.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  c               1   46[COMRAM] unsigned char 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;		None               void
  8115 ;; Registers used:
  8116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : F/0
  8119 ;;		On exit  : C/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8122 ;;      Params:         0       0       0       0       0       0       0
  8123 ;;      Locals:         1       0       0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0
  8125 ;;      Totals:         1       0       0       0       0       0       0
  8126 ;;Total ram usage:        1 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    6
  8129 ;; This function calls:
  8130 ;;		_fifo_read
  8131 ;;		_ECANSetOperationMode
  8132 ;;		_receivePrintEventCANAL
  8133 ;;		_calcCRC
  8134 ;;		_sendVSCPDriverErrorFrame
  8135 ;;		_sendVSCPDriverAck
  8136 ;;		_receiveVSCPModeCanalMsg
  8137 ;;		_sendVSCPDriverNack
  8138 ;;		_sendVSCPDriverCommandReply
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text7
  8145  004312                     __ptext7:
  8146                           	opt stack 0
  8147  004312                     _doModeVscp:
  8148                           	opt stack 23
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;main.c: 946: uint8_t c;
  8152                           ;main.c: 949: if (!bSilent) {
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;incstack = 0
  8156                           ;incstack = 0
  8157  004312  67D6               	tstfsz	_bSilent& (0+255),b
  8158  004314  D002               	goto	l13298
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;main.c: 950: receivePrintEventCANAL();
  8162  004316  EC02  F01E         	call	_receivePrintEventCANAL	;wreg free
  8163  00431A                     l13298:
  8164                           
  8165                           ;main.c: 951: }
  8166                           ;main.c: 954: (INTCONbits.GIE = 0);
  8167  00431A  9EF2               	bcf	intcon,7,c	;volatile
  8168                           
  8169                           ;main.c: 956: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
  8170  00431C  0101               	movlb	1	; () banked
  8171  00431E  0E01               	movlw	high _serialInputFifo
  8172  004320  6E1A               	movwf	?_fifo_read+1,c
  8173  004322  0ECC               	movlw	low _serialInputFifo
  8174  004324  6E19               	movwf	?_fifo_read,c
  8175  004326  0E2F               	movlw	low doModeVscp@c
  8176  004328  6E1B               	movwf	?_fifo_read+2,c
  8177  00432A  0E00               	movlw	high doModeVscp@c
  8178  00432C  6E1C               	movwf	?_fifo_read+3,c
  8179  00432E  0E0F               	movlw	15
  8180  004330  6E1C               	movwf	?_fifo_read+3,c
  8181  004332  0E5F               	movlw	__accesstop+-1
  8182  004334  641B               	cpfsgt	?_fifo_read+2,c
  8183  004336  6A1C               	clrf	?_fifo_read+3,c
  8184  004338  6A1E               	clrf	?_fifo_read+5,c
  8185  00433A  0E01               	movlw	1
  8186  00433C  6E1D               	movwf	?_fifo_read+4,c
  8187  00433E  EC78  F017         	call	_fifo_read	;wreg free
  8188  004342  0419               	decf	?_fifo_read,w,c
  8189  004344  101A               	iorwf	?_fifo_read+1,w,c
  8190  004346  E001 D09B          	bnz	l13424
  8191                           
  8192                           ;main.c: 959: (INTCONbits.GIE = 1);
  8193  00434A  8EF2               	bsf	intcon,7,c	;volatile
  8194                           
  8195                           ;main.c: 961: if (0 == stateVscpDriver) {
  8196  00434C  663F               	tstfsz	_stateVscpDriver,c
  8197  00434E  D00E               	goto	l13318
  8198                           
  8199                           ;main.c: 962: if (bDLE) {
  8200  004350  503B               	movf	_bDLE,w,c
  8201  004352  E009               	bz	l13314
  8202                           
  8203                           ;main.c: 963: bDLE = 0;
  8204  004354  6A3B               	clrf	_bDLE,c
  8205                           
  8206                           ;main.c: 966: if (0x02 == c) {
  8207  004356  502F               	movf	doModeVscp@c,w,c
  8208  004358  0A02               	xorlw	2
  8209  00435A  E122               	bnz	l13352
  8210                           
  8211                           ;main.c: 967: stateVscpDriver = 1;
  8212  00435C  0E01               	movlw	1
  8213  00435E  6E3F               	movwf	_stateVscpDriver,c
  8214                           
  8215                           ;main.c: 968: pos = 0;
  8216  004360  0100               	movlb	0	; () banked
  8217  004362  6BD8               	clrf	_pos& (0+255),b
  8218  004364  D01D               	goto	l13352
  8219  004366                     l13314:
  8220                           
  8221                           ;main.c: 971: bDLE = 1;
  8222  004366  0E01               	movlw	1
  8223  004368  6E3B               	movwf	_bDLE,c
  8224  00436A  D08B               	goto	l628
  8225  00436C                     l13318:
  8226  00436C  043F               	decf	_stateVscpDriver,w,c
  8227  00436E  E118               	bnz	l13352
  8228                           
  8229                           ;main.c: 976: if (bDLE) {
  8230  004370  503B               	movf	_bDLE,w,c
  8231  004372  E00C               	bz	l13336
  8232                           
  8233                           ;main.c: 978: bDLE = 0;
  8234  004374  6A3B               	clrf	_bDLE,c
  8235                           
  8236                           ;main.c: 981: if (0x03 == c) {
  8237  004376  502F               	movf	doModeVscp@c,w,c
  8238  004378  0A03               	xorlw	3
  8239  00437A  E103               	bnz	l13328
  8240                           
  8241                           ;main.c: 982: stateVscpDriver = 2;
  8242  00437C  0E02               	movlw	2
  8243  00437E  6E3F               	movwf	_stateVscpDriver,c
  8244                           
  8245                           ;main.c: 983: }
  8246  004380  D00F               	goto	l13352
  8247  004382                     l13328:
  8248                           
  8249                           ;main.c: 984: else if (0x10 == c) {
  8250  004382  502F               	movf	doModeVscp@c,w,c
  8251  004384  0A10               	xorlw	16
  8252  004386  E10C               	bnz	l13352
  8253                           
  8254                           ;main.c: 986: cmdbuf[ pos++ ] = c;
  8255                           
  8256                           ; BSR set to: 1
  8257  004388  D87D               	call	PL56	;call to abstracted procedure
  8258  00438A  D07B               	goto	l628
  8259  00438C                     l13336:
  8260                           
  8261                           ;main.c: 991: if (0x10 == c) {
  8262  00438C  502F               	movf	doModeVscp@c,w,c
  8263  00438E  0A10               	xorlw	16
  8264  004390  E0EA               	bz	l13314
  8265                           
  8266                           ;main.c: 996: cmdbuf[ pos++ ] = c;
  8267                           
  8268                           ; BSR set to: 1
  8269  004392  D878               	call	PL56	;call to abstracted procedure
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;main.c: 998: if (pos >= 128u) {
  8273  004394  0E7F               	movlw	127
  8274  004396  65D8               	cpfsgt	_pos& (0+255),b
  8275  004398  D074               	goto	l628
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;main.c: 1001: pos = 0;
  8279  00439A  6BD8               	clrf	_pos& (0+255),b
  8280                           
  8281                           ;main.c: 1002: stateVscpDriver = 0;
  8282  00439C  6A3F               	clrf	_stateVscpDriver,c
  8283  00439E  D071               	goto	l628
  8284  0043A0                     l13352:
  8285                           
  8286                           ;main.c: 1006: }
  8287                           ;main.c: 1007: }
  8288                           ;main.c: 1008: }
  8289                           ;main.c: 1013: if (2 == stateVscpDriver) {
  8290  0043A0  503F               	movf	_stateVscpDriver,w,c
  8291  0043A2  0A02               	xorlw	2
  8292  0043A4  E16D               	bnz	l13424
  8293                           
  8294                           ;main.c: 1016: stateVscpDriver = 0;
  8295  0043A6  6A3F               	clrf	_stateVscpDriver,c
  8296                           
  8297                           ;main.c: 1028: if (calcCRC(cmdbuf, pos)) {
  8298  0043A8  0101               	movlb	1	; () banked
  8299  0043AA  0E01               	movlw	high _cmdbuf
  8300  0043AC  6E26               	movwf	?_calcCRC+1,c
  8301  0043AE  0E24               	movlw	low _cmdbuf
  8302  0043B0  6E25               	movwf	?_calcCRC,c
  8303  0043B2  C0D8  F027         	movff	_pos,?_calcCRC+2
  8304  0043B6  EC65  F00F         	call	_calcCRC	;wreg free
  8305  0043BA  0900               	iorlw	0
  8306  0043BC  E003               	bz	l13360
  8307                           
  8308                           ;main.c: 1029: sendVSCPDriverErrorFrame(1);
  8309  0043BE  0E01               	movlw	1
  8310  0043C0  ECAF  F018         	call	_sendVSCPDriverErrorFrame
  8311  0043C4                     l13360:
  8312                           
  8313                           ;main.c: 1030: }
  8314                           ;main.c: 1033: if (0 ==
  8315                           ;main.c: 1034: cmdbuf[ 0 ]) {
  8316  0043C4  0101               	movlb	1	; () banked
  8317  0043C6  6724               	tstfsz	_cmdbuf& (0+255),b
  8318  0043C8  D003               	goto	l13364
  8319  0043CA                     l13362:
  8320                           
  8321                           ;main.c: 1035: sendVSCPDriverAck();
  8322  0043CA  EC5F  F016         	call	_sendVSCPDriverAck	;wreg free
  8323                           
  8324                           ;main.c: 1036: }
  8325  0043CE  D055               	goto	l13420
  8326  0043D0                     l13364:
  8327                           
  8328                           ; BSR set to: 1
  8329                           ;main.c: 1037: else if (1 ==
  8330                           ;main.c: 1038: cmdbuf[ 0 ]) {
  8331  0043D0  0524               	decf	_cmdbuf& (0+255),w,b
  8332  0043D2  E053               	bz	l13420
  8333                           
  8334                           ; BSR set to: 1
  8335                           ;main.c: 1041: else if (2 ==
  8336                           ;main.c: 1042: cmdbuf[ 0 ]) {
  8337  0043D4  5124               	movf	_cmdbuf& (0+255),w,b
  8338  0043D6  0A02               	xorlw	2
  8339  0043D8  E107               	bnz	l13376
  8340                           
  8341                           ; BSR set to: 1
  8342                           ;main.c: 1043: if (receiveVSCPModeCanalMsg()) {
  8343  0043DA  EC88  F019         	call	_receiveVSCPModeCanalMsg	;wreg free
  8344  0043DE  0900               	iorlw	0
  8345  0043E0  E1F4               	bnz	l13362
  8346  0043E2                     l13374:
  8347                           
  8348                           ;main.c: 1046: sendVSCPDriverNack();
  8349  0043E2  EC18  F017         	call	_sendVSCPDriverNack	;wreg free
  8350  0043E6  D049               	goto	l13420
  8351  0043E8                     l13376:
  8352                           
  8353                           ; BSR set to: 1
  8354                           ;main.c: 1049: else if (3 ==
  8355                           ;main.c: 1050: cmdbuf[ 0 ]) {
  8356  0043E8  5124               	movf	_cmdbuf& (0+255),w,b
  8357  0043EA  0A03               	xorlw	3
  8358  0043EC  E0FA               	bz	l13374
  8359                           
  8360                           ; BSR set to: 1
  8361                           ;main.c: 1053: else if (4 ==
  8362                           ;main.c: 1054: cmdbuf[ 0 ]) {
  8363  0043EE  5124               	movf	_cmdbuf& (0+255),w,b
  8364  0043F0  0A04               	xorlw	4
  8365  0043F2  E0F7               	bz	l13374
  8366                           
  8367                           ; BSR set to: 1
  8368                           ;main.c: 1057: else if (255 ==
  8369                           ;main.c: 1058: cmdbuf[ 0 ]) {
  8370  0043F4  2924               	incf	_cmdbuf& (0+255),w,b
  8371  0043F6  E13E               	bnz	l13418
  8372                           
  8373                           ; BSR set to: 1
  8374                           ;main.c: 1060: if (cmdbuf[ 5 ] ==
  8375                           ;main.c: 1061: 0) {
  8376  0043F8  6729               	tstfsz	(_cmdbuf+5)& (0+255),b
  8377  0043FA  D005               	goto	l13390
  8378                           
  8379                           ; BSR set to: 1
  8380                           ;main.c: 1062: sendVSCPDriverCommandReply(0, 0);
  8381  0043FC  0E00               	movlw	0
  8382  0043FE  6A28               	clrf	?_sendVSCPDriverCommandReply,c
  8383  004400  ECDD  F01A         	call	_sendVSCPDriverCommandReply
  8384                           
  8385                           ;main.c: 1063: }
  8386  004404  D03A               	goto	l13420
  8387  004406                     l13390:
  8388                           
  8389                           ; BSR set to: 1
  8390                           ;main.c: 1064: else if (cmdbuf[ 5 ] ==
  8391                           ;main.c: 1065: 1) {
  8392  004406  0529               	decf	(_cmdbuf+5)& (0+255),w,b
  8393  004408  E109               	bnz	l13396
  8394                           
  8395                           ; BSR set to: 1
  8396                           ;main.c: 1066: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
  8397  00440A  0E00               	movlw	0
  8398  00440C  EC83  F00E         	call	_ECANSetOperationMode
  8399                           
  8400                           ;main.c: 1067: sendVSCPDriverCommandReply(0, 1);
  8401  004410  0E01               	movlw	1
  8402  004412  6E28               	movwf	?_sendVSCPDriverCommandReply,c
  8403  004414  0E00               	movlw	0
  8404  004416  ECDD  F01A         	call	_sendVSCPDriverCommandReply
  8405                           
  8406                           ;main.c: 1068: }
  8407  00441A  D02F               	goto	l13420
  8408  00441C                     l13396:
  8409                           
  8410                           ; BSR set to: 1
  8411                           ;main.c: 1069: else if (cmdbuf[ 5 ] ==
  8412                           ;main.c: 1070: 2) {
  8413  00441C  5129               	movf	(_cmdbuf+5)& (0+255),w,b
  8414  00441E  0A02               	xorlw	2
  8415  004420  E109               	bnz	l13402
  8416                           
  8417                           ; BSR set to: 1
  8418                           ;main.c: 1071: ECANSetOperationMode(ECAN_OP_MODE_LOOP);
  8419  004422  0E40               	movlw	64
  8420  004424  EC83  F00E         	call	_ECANSetOperationMode
  8421                           
  8422                           ;main.c: 1072: sendVSCPDriverCommandReply(0, 2);
  8423  004428  0E02               	movlw	2
  8424  00442A  6E28               	movwf	?_sendVSCPDriverCommandReply,c
  8425  00442C  0E00               	movlw	0
  8426  00442E  ECDD  F01A         	call	_sendVSCPDriverCommandReply
  8427                           
  8428                           ;main.c: 1073: }
  8429  004432  D023               	goto	l13420
  8430  004434                     l13402:
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;main.c: 1074: else if (cmdbuf[ 5 ] ==
  8434                           ;main.c: 1075: 3) {
  8435  004434  5129               	movf	(_cmdbuf+5)& (0+255),w,b
  8436  004436  0A03               	xorlw	3
  8437  004438  E109               	bnz	l13408
  8438                           
  8439                           ; BSR set to: 1
  8440                           ;main.c: 1076: ECANSetOperationMode(ECAN_OP_MODE_LISTEN);
  8441  00443A  0E60               	movlw	96
  8442  00443C  EC83  F00E         	call	_ECANSetOperationMode
  8443                           
  8444                           ;main.c: 1077: sendVSCPDriverCommandReply(0, 3);
  8445  004440  0E03               	movlw	3
  8446  004442  6E28               	movwf	?_sendVSCPDriverCommandReply,c
  8447  004444  0E00               	movlw	0
  8448  004446  ECDD  F01A         	call	_sendVSCPDriverCommandReply
  8449                           
  8450                           ;main.c: 1078: }
  8451  00444A  D017               	goto	l13420
  8452  00444C                     l13408:
  8453                           
  8454                           ; BSR set to: 1
  8455                           ;main.c: 1079: else if (cmdbuf[ 5 ] ==
  8456                           ;main.c: 1080: 4) {
  8457  00444C  5129               	movf	(_cmdbuf+5)& (0+255),w,b
  8458  00444E  0A04               	xorlw	4
  8459  004450  E109               	bnz	l13414
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;main.c: 1081: ECANSetOperationMode(0x20);
  8463  004452  0E20               	movlw	32
  8464  004454  EC83  F00E         	call	_ECANSetOperationMode
  8465                           
  8466                           ;main.c: 1082: sendVSCPDriverCommandReply(0, 4);
  8467  004458  0E04               	movlw	4
  8468  00445A  6E28               	movwf	?_sendVSCPDriverCommandReply,c
  8469  00445C  0E00               	movlw	0
  8470  00445E  ECDD  F01A         	call	_sendVSCPDriverCommandReply
  8471                           
  8472                           ;main.c: 1083: }
  8473  004462  D00B               	goto	l13420
  8474  004464                     l13414:
  8475                           
  8476                           ; BSR set to: 1
  8477                           ;main.c: 1084: else if (cmdbuf[ 5 ] ==
  8478                           ;main.c: 1085: 5) {
  8479  004464  5129               	movf	(_cmdbuf+5)& (0+255),w,b
  8480  004466  0A05               	xorlw	5
  8481  004468  E108               	bnz	l13420
  8482                           
  8483                           ; BSR set to: 1
  8484                           ;main.c: 1086: sendVSCPDriverCommandReply(0, 0);
  8485  00446A  0E00               	movlw	0
  8486  00446C  6A28               	clrf	?_sendVSCPDriverCommandReply,c
  8487  00446E  ECDD  F01A         	call	_sendVSCPDriverCommandReply
  8488  004472  D003               	goto	l13420
  8489  004474                     l13418:
  8490                           
  8491                           ; BSR set to: 1
  8492                           ;main.c: 1091: sendVSCPDriverErrorFrame(2);
  8493  004474  0E02               	movlw	2
  8494  004476  ECAF  F018         	call	_sendVSCPDriverErrorFrame
  8495  00447A                     l13420:
  8496                           
  8497                           ;main.c: 1092: }
  8498                           ;main.c: 1095: pos = 0;
  8499  00447A  0100               	movlb	0	; () banked
  8500  00447C  6BD8               	clrf	_pos& (0+255),b
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;main.c: 1096: stateVscpDriver = 0;
  8504  00447E  6A3F               	clrf	_stateVscpDriver,c
  8505  004480                     l13424:
  8506                           
  8507                           ;main.c: 1098: }
  8508                           ;main.c: 1100: }
  8509                           ;main.c: 1103: (INTCONbits.GIE = 1);
  8510  004480  8EF2               	bsf	intcon,7,c	;volatile
  8511  004482                     l628:
  8512  004482  0012               	return	
  8513  004484                     __end_of_doModeVscp:
  8514                           	opt stack 0
  8515  004484                     PL56:
  8516                           	opt stack 23
  8517  004484  0E24               	movlw	low _cmdbuf
  8518  004486  0100               	movlb	0	; () banked
  8519  004488  25D8               	addwf	_pos& (0+255),w,b
  8520  00448A  6ED9               	movwf	fsr2l,c
  8521  00448C  6ADA               	clrf	fsr2h,c
  8522  00448E  0E01               	movlw	high _cmdbuf
  8523  004490  22DA               	addwfc	fsr2h,f,c
  8524  004492  C02F  FFDF         	movff	doModeVscp@c,indf2
  8525  004496  2BD8               	incf	_pos& (0+255),f,b
  8526  004498  0012               	return	
  8527  00449A                     __end_ofPL56:
  8528                           	opt stack 0
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           intcon	equ	0xFF2
  8536                           indf0	equ	0xFEF
  8537                           postinc0	equ	0xFEE
  8538                           fsr0h	equ	0xFEA
  8539                           fsr0l	equ	0xFE9
  8540                           wreg	equ	0xFE8
  8541                           indf1	equ	0xFE7
  8542                           postinc1	equ	0xFE6
  8543                           postdec1	equ	0xFE5
  8544                           fsr1h	equ	0xFE2
  8545                           fsr1l	equ	0xFE1
  8546                           indf2	equ	0xFDF
  8547                           postinc2	equ	0xFDE
  8548                           postdec2	equ	0xFDD
  8549                           plusw2	equ	0xFDB
  8550                           fsr2h	equ	0xFDA
  8551                           fsr2l	equ	0xFD9
  8552                           status	equ	0xFD8
  8553                           
  8554 ;; *************** function _sendVSCPDriverCommandReply *****************
  8555 ;; Defined at:
  8556 ;;		line 1477 in file "main.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  cmdReplyCode    1    wreg     unsigned char 
  8559 ;;  cmdCode         1   39[COMRAM] unsigned char 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  cmdReplyCode    1   40[COMRAM] unsigned char 
  8562 ;;  crc             1   41[COMRAM] unsigned char 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;		None               void
  8565 ;; Registers used:
  8566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/1
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8572 ;;      Params:         1       0       0       0       0       0       0
  8573 ;;      Locals:         2       0       0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0
  8575 ;;      Totals:         3       0       0       0       0       0       0
  8576 ;;Total ram usage:        3 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:    5
  8579 ;; This function calls:
  8580 ;;		_WriteUSART
  8581 ;;		_sendEscapedUartData
  8582 ;;		_crc8
  8583 ;; This function is called by:
  8584 ;;		_doModeVscp
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text8
  8589  0035BA                     __ptext8:
  8590                           	opt stack 0
  8591  0035BA                     _sendVSCPDriverCommandReply:
  8592                           	opt stack 23
  8593                           
  8594                           ;incstack = 0
  8595                           ;incstack = 0
  8596                           ;sendVSCPDriverCommandReply@cmdReplyCode stored from wreg
  8597  0035BA  CFE8 F029          	movff	wreg,sendVSCPDriverCommandReply@cmdReplyCode
  8598                           
  8599                           ;main.c: 1478: uint8_t crc = 0;
  8600  0035BE  6A2A               	clrf	sendVSCPDriverCommandReply@crc,c
  8601  0035C0                     l815:
  8602  0035C0  A2AC               	btfss	4012,1,c	;volatile
  8603  0035C2  D7FE               	goto	l815
  8604                           
  8605                           ;main.c: 1482: WriteUSART(0x10);
  8606  0035C4  0E10               	movlw	16
  8607  0035C6  EC6E  F00E         	call	_WriteUSART
  8608  0035CA                     l818:
  8609  0035CA  A2AC               	btfss	4012,1,c	;volatile
  8610  0035CC  D7FE               	goto	l818
  8611                           
  8612                           ;main.c: 1484: WriteUSART(0x02);
  8613  0035CE  0E02               	movlw	2
  8614  0035D0  EC6E  F00E         	call	_WriteUSART
  8615  0035D4                     l821:
  8616  0035D4  A2AC               	btfss	4012,1,c	;volatile
  8617  0035D6  D7FE               	goto	l821
  8618                           
  8619                           ;main.c: 1488: WriteUSART(254);
  8620  0035D8  0EFE               	movlw	254
  8621  0035DA  EC6E  F00E         	call	_WriteUSART
  8622                           
  8623                           ;main.c: 1489: crc8(&crc, 254);
  8624  0035DE  D85C               	call	PL28	;call to abstracted procedure
  8625  0035E0  6420               	cpfsgt	?_crc8,c
  8626  0035E2  6A21               	clrf	?_crc8+1,c
  8627  0035E4  0EFE               	movlw	254
  8628  0035E6  6E22               	movwf	?_crc8+2,c
  8629  0035E8  EC49  F00F         	call	_crc8	;wreg free
  8630  0035EC                     l824:
  8631  0035EC  A2AC               	btfss	4012,1,c	;volatile
  8632  0035EE  D7FE               	goto	l824
  8633                           
  8634                           ;main.c: 1493: WriteUSART(0);
  8635  0035F0  0E00               	movlw	0
  8636  0035F2  EC6E  F00E         	call	_WriteUSART
  8637                           
  8638                           ;main.c: 1494: crc8(&crc, 0);
  8639  0035F6  0E2A               	movlw	low sendVSCPDriverCommandReply@crc
  8640  0035F8  6E20               	movwf	?_crc8,c
  8641  0035FA  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  8642  0035FC  EC70  F017         	call	PL4	;call to abstracted procedure
  8643  003600  EC49  F00F         	call	_crc8	;wreg free
  8644                           
  8645                           ; BSR set to: 3
  8646                           ;main.c: 1497: sendEscapedUartData(cmdbuf[ 2 ], &crc);
  8647  003604  0E2A               	movlw	low sendVSCPDriverCommandReply@crc
  8648  003606  6E25               	movwf	?_sendEscapedUartData,c
  8649  003608  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  8650  00360A  EC16  F019         	call	PL46	;call to abstracted procedure
  8651  00360E  6425               	cpfsgt	?_sendEscapedUartData,c
  8652  003610  6A26               	clrf	?_sendEscapedUartData+1,c
  8653  003612  0101               	movlb	1	; () banked
  8654  003614  5126               	movf	(_cmdbuf+2)& (0+255),w,b
  8655  003616  ECA9  F012         	call	_sendEscapedUartData
  8656  00361A                     l827:
  8657  00361A  A2AC               	btfss	4012,1,c	;volatile
  8658  00361C  D7FE               	goto	l827
  8659                           
  8660                           ;main.c: 1501: WriteUSART(0);
  8661  00361E  0E00               	movlw	0
  8662  003620  EC6E  F00E         	call	_WriteUSART
  8663                           
  8664                           ;main.c: 1502: crc8(&crc, 0);
  8665  003624  0E2A               	movlw	low sendVSCPDriverCommandReply@crc
  8666  003626  6E20               	movwf	?_crc8,c
  8667  003628  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  8668  00362A  EC70  F017         	call	PL4	;call to abstracted procedure
  8669  00362E  EC49  F00F         	call	_crc8	;wreg free
  8670  003632                     l830:
  8671  003632  A2AC               	btfss	4012,1,c	;volatile
  8672  003634  D7FE               	goto	l830
  8673                           
  8674                           ;main.c: 1504: WriteUSART(2);
  8675  003636  0E02               	movlw	2
  8676  003638  EC6E  F00E         	call	_WriteUSART
  8677                           
  8678                           ;main.c: 1505: crc8(&crc, 2);
  8679  00363C  D82D               	call	PL28	;call to abstracted procedure
  8680  00363E  6420               	cpfsgt	?_crc8,c
  8681  003640  6A21               	clrf	?_crc8+1,c
  8682  003642  0E02               	movlw	2
  8683  003644  6E22               	movwf	?_crc8+2,c
  8684  003646  EC49  F00F         	call	_crc8	;wreg free
  8685  00364A                     l833:
  8686  00364A  A2AC               	btfss	4012,1,c	;volatile
  8687  00364C  D7FE               	goto	l833
  8688                           
  8689                           ;main.c: 1509: sendEscapedUartData(cmdReplyCode, &crc);
  8690  00364E  0E2A               	movlw	low sendVSCPDriverCommandReply@crc
  8691  003650  6E25               	movwf	?_sendEscapedUartData,c
  8692  003652  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  8693  003654  EC16  F019         	call	PL46	;call to abstracted procedure
  8694  003658  6425               	cpfsgt	?_sendEscapedUartData,c
  8695  00365A  6A26               	clrf	?_sendEscapedUartData+1,c
  8696  00365C  5029               	movf	sendVSCPDriverCommandReply@cmdReplyCode,w,c
  8697  00365E  ECA9  F012         	call	_sendEscapedUartData
  8698  003662                     l836:
  8699  003662  A2AC               	btfss	4012,1,c	;volatile
  8700  003664  D7FE               	goto	l836
  8701                           
  8702                           ;main.c: 1513: sendEscapedUartData(cmdCode, &crc);
  8703  003666  0E2A               	movlw	low sendVSCPDriverCommandReply@crc
  8704  003668  6E25               	movwf	?_sendEscapedUartData,c
  8705  00366A  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  8706  00366C  EC16  F019         	call	PL46	;call to abstracted procedure
  8707  003670  6425               	cpfsgt	?_sendEscapedUartData,c
  8708  003672  6A26               	clrf	?_sendEscapedUartData+1,c
  8709  003674  5028               	movf	sendVSCPDriverCommandReply@cmdCode,w,c
  8710  003676  ECA9  F012         	call	_sendEscapedUartData
  8711                           
  8712                           ;main.c: 1516: sendEscapedUartData(crc, (0));
  8713  00367A  6A26               	clrf	?_sendEscapedUartData+1,c
  8714  00367C  6A25               	clrf	?_sendEscapedUartData,c
  8715  00367E  502A               	movf	sendVSCPDriverCommandReply@crc,w,c
  8716  003680  ECA9  F012         	call	_sendEscapedUartData
  8717  003684                     l839:
  8718  003684  A2AC               	btfss	4012,1,c	;volatile
  8719  003686  D7FE               	goto	l839
  8720                           
  8721                           ;main.c: 1520: WriteUSART(0x10);
  8722  003688  0E10               	movlw	16
  8723  00368A  EC6E  F00E         	call	_WriteUSART
  8724  00368E                     l842:
  8725  00368E  A2AC               	btfss	4012,1,c	;volatile
  8726  003690  D7FE               	goto	l842
  8727                           
  8728                           ;main.c: 1522: WriteUSART(0x03);
  8729  003692  0E03               	movlw	3
  8730  003694  EF6E  F00E         	goto	_WriteUSART
  8731  003698                     __end_of_sendVSCPDriverCommandReply:
  8732                           	opt stack 0
  8733  003698                     PL28:
  8734                           	opt stack 23
  8735  003698  0E2A               	movlw	low sendVSCPDriverCommandReply@crc
  8736  00369A  6E20               	movwf	?_crc8,c
  8737  00369C  0E00               	movlw	high sendVSCPDriverCommandReply@crc
  8738  00369E  6E21               	movwf	?_crc8+1,c
  8739  0036A0  0E0F               	movlw	15
  8740  0036A2  6E21               	movwf	?_crc8+1,c
  8741  0036A4  0E5F               	movlw	__accesstop+-1
  8742  0036A6  0012               	return	
  8743  0036A8                     __end_ofPL28:
  8744                           	opt stack 0
  8745                           tblptru	equ	0xFF8
  8746                           tblptrh	equ	0xFF7
  8747                           tblptrl	equ	0xFF6
  8748                           tablat	equ	0xFF5
  8749                           prodh	equ	0xFF4
  8750                           prodl	equ	0xFF3
  8751                           intcon	equ	0xFF2
  8752                           indf0	equ	0xFEF
  8753                           postinc0	equ	0xFEE
  8754                           fsr0h	equ	0xFEA
  8755                           fsr0l	equ	0xFE9
  8756                           wreg	equ	0xFE8
  8757                           indf1	equ	0xFE7
  8758                           postinc1	equ	0xFE6
  8759                           postdec1	equ	0xFE5
  8760                           fsr1h	equ	0xFE2
  8761                           fsr1l	equ	0xFE1
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           plusw2	equ	0xFDB
  8766                           fsr2h	equ	0xFDA
  8767                           fsr2l	equ	0xFD9
  8768                           status	equ	0xFD8
  8769                           
  8770 ;; *************** function _sendVSCPDriverNack *****************
  8771 ;; Defined at:
  8772 ;;		line 1433 in file "main.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;		None
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  crc             1   39[COMRAM] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;		None               void
  8779 ;; Registers used:
  8780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : E/1
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8786 ;;      Params:         0       0       0       0       0       0       0
  8787 ;;      Locals:         1       0       0       0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0
  8789 ;;      Totals:         1       0       0       0       0       0       0
  8790 ;;Total ram usage:        1 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    5
  8793 ;; This function calls:
  8794 ;;		_WriteUSART
  8795 ;;		_sendEscapedUartData
  8796 ;;		_crc8
  8797 ;; This function is called by:
  8798 ;;		_doModeVscp
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text9
  8803  002E30                     __ptext9:
  8804                           	opt stack 0
  8805  002E30                     _sendVSCPDriverNack:
  8806                           	opt stack 23
  8807                           
  8808                           ;main.c: 1434: uint8_t crc = 0;
  8809                           
  8810                           ;incstack = 0
  8811                           ;incstack = 0
  8812  002E30  6A28               	clrf	sendVSCPDriverNack@crc,c
  8813  002E32                     l788:
  8814  002E32  A2AC               	btfss	4012,1,c	;volatile
  8815  002E34  D7FE               	goto	l788
  8816                           
  8817                           ;main.c: 1438: WriteUSART(0x10);
  8818  002E36  0E10               	movlw	16
  8819  002E38  EC6E  F00E         	call	_WriteUSART
  8820  002E3C                     l791:
  8821  002E3C  A2AC               	btfss	4012,1,c	;volatile
  8822  002E3E  D7FE               	goto	l791
  8823                           
  8824                           ;main.c: 1440: WriteUSART(0x02);
  8825  002E40  0E02               	movlw	2
  8826  002E42  EC6E  F00E         	call	_WriteUSART
  8827  002E46                     l794:
  8828  002E46  A2AC               	btfss	4012,1,c	;volatile
  8829  002E48  D7FE               	goto	l794
  8830                           
  8831                           ;main.c: 1444: WriteUSART(252);
  8832  002E4A  0EFC               	movlw	252
  8833  002E4C  EC6E  F00E         	call	_WriteUSART
  8834                           
  8835                           ;main.c: 1445: crc8(&crc, 252);
  8836  002E50  0E28               	movlw	low sendVSCPDriverNack@crc
  8837  002E52  6E20               	movwf	?_crc8,c
  8838  002E54  0E00               	movlw	high sendVSCPDriverNack@crc
  8839  002E56  6E21               	movwf	?_crc8+1,c
  8840  002E58  0E0F               	movlw	15
  8841  002E5A  6E21               	movwf	?_crc8+1,c
  8842  002E5C  0E5F               	movlw	__accesstop+-1
  8843  002E5E  6420               	cpfsgt	?_crc8,c
  8844  002E60  6A21               	clrf	?_crc8+1,c
  8845  002E62  0EFC               	movlw	252
  8846  002E64  6E22               	movwf	?_crc8+2,c
  8847  002E66  EC49  F00F         	call	_crc8	;wreg free
  8848  002E6A                     l797:
  8849  002E6A  A2AC               	btfss	4012,1,c	;volatile
  8850  002E6C  D7FE               	goto	l797
  8851                           
  8852                           ;main.c: 1449: WriteUSART(0);
  8853  002E6E  0E00               	movlw	0
  8854  002E70  EC6E  F00E         	call	_WriteUSART
  8855                           
  8856                           ;main.c: 1450: crc8(&crc, 0);
  8857  002E74  0E28               	movlw	low sendVSCPDriverNack@crc
  8858  002E76  6E20               	movwf	?_crc8,c
  8859  002E78  0E00               	movlw	high sendVSCPDriverNack@crc
  8860  002E7A  D832               	call	PL4	;call to abstracted procedure
  8861  002E7C  EC49  F00F         	call	_crc8	;wreg free
  8862                           
  8863                           ; BSR set to: 3
  8864                           ;main.c: 1453: sendEscapedUartData(cmdbuf[ 2 ], &crc);
  8865  002E80  0E28               	movlw	low sendVSCPDriverNack@crc
  8866  002E82  6E25               	movwf	?_sendEscapedUartData,c
  8867  002E84  0E00               	movlw	high sendVSCPDriverNack@crc
  8868  002E86  EC16  F019         	call	PL46	;call to abstracted procedure
  8869  002E8A  6425               	cpfsgt	?_sendEscapedUartData,c
  8870  002E8C  6A26               	clrf	?_sendEscapedUartData+1,c
  8871  002E8E  0101               	movlb	1	; () banked
  8872  002E90  5126               	movf	(_cmdbuf+2)& (0+255),w,b
  8873  002E92  ECA9  F012         	call	_sendEscapedUartData
  8874  002E96                     l800:
  8875  002E96  A2AC               	btfss	4012,1,c	;volatile
  8876  002E98  D7FE               	goto	l800
  8877                           
  8878                           ;main.c: 1457: WriteUSART(0);
  8879  002E9A  0E00               	movlw	0
  8880  002E9C  EC6E  F00E         	call	_WriteUSART
  8881                           
  8882                           ;main.c: 1458: crc8(&crc, 0);
  8883  002EA0  0E28               	movlw	low sendVSCPDriverNack@crc
  8884  002EA2  6E20               	movwf	?_crc8,c
  8885  002EA4  0E00               	movlw	high sendVSCPDriverNack@crc
  8886  002EA6  D81C               	call	PL4	;call to abstracted procedure
  8887  002EA8  EC49  F00F         	call	_crc8	;wreg free
  8888  002EAC                     l803:
  8889  002EAC  A2AC               	btfss	4012,1,c	;volatile
  8890  002EAE  D7FE               	goto	l803
  8891                           
  8892                           ;main.c: 1460: WriteUSART(0);
  8893  002EB0  0E00               	movlw	0
  8894  002EB2  EC6E  F00E         	call	_WriteUSART
  8895                           
  8896                           ;main.c: 1461: crc8(&crc, 0);
  8897  002EB6  0E28               	movlw	low sendVSCPDriverNack@crc
  8898  002EB8  6E20               	movwf	?_crc8,c
  8899  002EBA  0E00               	movlw	high sendVSCPDriverNack@crc
  8900  002EBC  D811               	call	PL4	;call to abstracted procedure
  8901  002EBE  EC49  F00F         	call	_crc8	;wreg free
  8902                           
  8903                           ; BSR set to: 3
  8904                           ;main.c: 1464: sendEscapedUartData(crc, (0));
  8905  002EC2  6A26               	clrf	?_sendEscapedUartData+1,c
  8906  002EC4  6A25               	clrf	?_sendEscapedUartData,c
  8907  002EC6  5028               	movf	sendVSCPDriverNack@crc,w,c
  8908  002EC8  ECA9  F012         	call	_sendEscapedUartData
  8909  002ECC                     l806:
  8910  002ECC  A2AC               	btfss	4012,1,c	;volatile
  8911  002ECE  D7FE               	goto	l806
  8912                           
  8913                           ;main.c: 1468: WriteUSART(0x10);
  8914  002ED0  0E10               	movlw	16
  8915  002ED2  EC6E  F00E         	call	_WriteUSART
  8916  002ED6                     l809:
  8917  002ED6  A2AC               	btfss	4012,1,c	;volatile
  8918  002ED8  D7FE               	goto	l809
  8919                           
  8920                           ;main.c: 1470: WriteUSART(0x03);
  8921  002EDA  0E03               	movlw	3
  8922  002EDC  EF6E  F00E         	goto	_WriteUSART
  8923  002EE0                     __end_of_sendVSCPDriverNack:
  8924                           	opt stack 0
  8925  002EE0                     PL4:
  8926                           	opt stack 23
  8927  002EE0  6E21               	movwf	?_crc8+1,c
  8928  002EE2  0E0F               	movlw	15
  8929  002EE4  6E21               	movwf	?_crc8+1,c
  8930  002EE6  0E5F               	movlw	__accesstop+-1
  8931  002EE8  6420               	cpfsgt	?_crc8,c
  8932  002EEA  6A21               	clrf	?_crc8+1,c
  8933  002EEC  6A22               	clrf	?_crc8+2,c
  8934  002EEE  0C00               	retlw	0
  8935  002EF0                     __end_ofPL4:
  8936                           	opt stack 0
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           intcon	equ	0xFF2
  8944                           indf0	equ	0xFEF
  8945                           postinc0	equ	0xFEE
  8946                           fsr0h	equ	0xFEA
  8947                           fsr0l	equ	0xFE9
  8948                           wreg	equ	0xFE8
  8949                           indf1	equ	0xFE7
  8950                           postinc1	equ	0xFE6
  8951                           postdec1	equ	0xFE5
  8952                           fsr1h	equ	0xFE2
  8953                           fsr1l	equ	0xFE1
  8954                           indf2	equ	0xFDF
  8955                           postinc2	equ	0xFDE
  8956                           postdec2	equ	0xFDD
  8957                           plusw2	equ	0xFDB
  8958                           fsr2h	equ	0xFDA
  8959                           fsr2l	equ	0xFD9
  8960                           status	equ	0xFD8
  8961                           
  8962 ;; *************** function _receiveVSCPModeCanalMsg *****************
  8963 ;; Defined at:
  8964 ;;		line 1798 in file "main.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;		None
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  data            8   55[BANK0 ] unsigned char [8]
  8969 ;;  id              4   63[BANK0 ] unsigned long 
  8970 ;;  dlc             1   67[BANK0 ] unsigned char 
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      enum E15660
  8973 ;; Registers used:
  8974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8975 ;; Tracked objects:
  8976 ;;		On entry : F/1
  8977 ;;		On exit  : E/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8980 ;;      Params:         0       0       0       0       0       0       0
  8981 ;;      Locals:         0      13       0       0       0       0       0
  8982 ;;      Temps:          0      20       0       0       0       0       0
  8983 ;;      Totals:         0      33       0       0       0       0       0
  8984 ;;Total ram usage:       33 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:    5
  8987 ;; This function calls:
  8988 ;;		_memcpy
  8989 ;;		_sendCANFrame
  8990 ;; This function is called by:
  8991 ;;		_doModeVscp
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           	psect	text10
  8996  003310                     __ptext10:
  8997                           	opt stack 0
  8998  003310                     _receiveVSCPModeCanalMsg:
  8999                           	opt stack 23
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;main.c: 1799: uint32_t id;
  9003                           ;main.c: 1800: uint8_t dlc;
  9004                           ;main.c: 1801: uint8_t data[8];
  9005                           ;main.c: 1803: id = ((uint32_t) cmdbuf[5] << 26) |
  9006                           ;main.c: 1804: ((uint32_t) cmdbuf[5 + 1] << 16) |
  9007                           ;main.c: 1805: ((uint32_t) cmdbuf[5 + 2] << 8) |
  9008                           ;main.c: 1806: cmdbuf[5 + 3];
  9009                           
  9010                           ;incstack = 0
  9011                           ;incstack = 0
  9012  003310  C12B  F083         	movff	_cmdbuf+7,??_receiveVSCPModeCanalMsg
  9013  003314  0100               	movlb	0	; () banked
  9014  003316  6B84               	clrf	(??_receiveVSCPModeCanalMsg+1)& (0+255),b
  9015  003318  6B85               	clrf	(??_receiveVSCPModeCanalMsg+2)& (0+255),b
  9016  00331A  6B86               	clrf	(??_receiveVSCPModeCanalMsg+3)& (0+255),b
  9017  00331C  C085  F086         	movff	??_receiveVSCPModeCanalMsg+2,??_receiveVSCPModeCanalMsg+3
  9018  003320  C084  F085         	movff	??_receiveVSCPModeCanalMsg+1,??_receiveVSCPModeCanalMsg+2
  9019  003324  C083  F084         	movff	??_receiveVSCPModeCanalMsg,??_receiveVSCPModeCanalMsg+1
  9020  003328  6B83               	clrf	??_receiveVSCPModeCanalMsg& (0+255),b
  9021  00332A  C12A  F087         	movff	_cmdbuf+6,??_receiveVSCPModeCanalMsg+4
  9022  00332E  6B88               	clrf	(??_receiveVSCPModeCanalMsg+5)& (0+255),b
  9023  003330  6B89               	clrf	(??_receiveVSCPModeCanalMsg+6)& (0+255),b
  9024  003332  6B8A               	clrf	(??_receiveVSCPModeCanalMsg+7)& (0+255),b
  9025  003334  C088  F08A         	movff	??_receiveVSCPModeCanalMsg+5,??_receiveVSCPModeCanalMsg+7
  9026  003338  C087  F089         	movff	??_receiveVSCPModeCanalMsg+4,??_receiveVSCPModeCanalMsg+6
  9027  00333C  6B88               	clrf	(??_receiveVSCPModeCanalMsg+5)& (0+255),b
  9028  00333E  6B87               	clrf	(??_receiveVSCPModeCanalMsg+4)& (0+255),b
  9029  003340  C129  F08B         	movff	_cmdbuf+5,??_receiveVSCPModeCanalMsg+8
  9030  003344  6B8C               	clrf	(??_receiveVSCPModeCanalMsg+9)& (0+255),b
  9031  003346  6B8D               	clrf	(??_receiveVSCPModeCanalMsg+10)& (0+255),b
  9032  003348  6B8E               	clrf	(??_receiveVSCPModeCanalMsg+11)& (0+255),b
  9033  00334A  0E1A               	movlw	26
  9034  00334C                     u19125:
  9035  00334C  90D8               	bcf	status,0,c
  9036  00334E  378B               	rlcf	(??_receiveVSCPModeCanalMsg+8)& (0+255),f,b
  9037  003350  378C               	rlcf	(??_receiveVSCPModeCanalMsg+9)& (0+255),f,b
  9038  003352  378D               	rlcf	(??_receiveVSCPModeCanalMsg+10)& (0+255),f,b
  9039  003354  378E               	rlcf	(??_receiveVSCPModeCanalMsg+11)& (0+255),f,b
  9040  003356  2EE8               	decfsz	wreg,f,c
  9041  003358  D7F9               	goto	u19125
  9042  00335A  5187               	movf	(??_receiveVSCPModeCanalMsg+4)& (0+255),w,b
  9043  00335C  118B               	iorwf	(??_receiveVSCPModeCanalMsg+8)& (0+255),w,b
  9044  00335E  6F8F               	movwf	(??_receiveVSCPModeCanalMsg+12)& (0+255),b
  9045  003360  5188               	movf	(??_receiveVSCPModeCanalMsg+5)& (0+255),w,b
  9046  003362  118C               	iorwf	(??_receiveVSCPModeCanalMsg+9)& (0+255),w,b
  9047  003364  6F90               	movwf	(??_receiveVSCPModeCanalMsg+13)& (0+255),b
  9048  003366  5189               	movf	(??_receiveVSCPModeCanalMsg+6)& (0+255),w,b
  9049  003368  118D               	iorwf	(??_receiveVSCPModeCanalMsg+10)& (0+255),w,b
  9050  00336A  6F91               	movwf	(??_receiveVSCPModeCanalMsg+14)& (0+255),b
  9051  00336C  518A               	movf	(??_receiveVSCPModeCanalMsg+7)& (0+255),w,b
  9052  00336E  118E               	iorwf	(??_receiveVSCPModeCanalMsg+11)& (0+255),w,b
  9053  003370  6F92               	movwf	(??_receiveVSCPModeCanalMsg+15)& (0+255),b
  9054  003372  5183               	movf	??_receiveVSCPModeCanalMsg& (0+255),w,b
  9055  003374  118F               	iorwf	(??_receiveVSCPModeCanalMsg+12)& (0+255),w,b
  9056  003376  6F93               	movwf	(??_receiveVSCPModeCanalMsg+16)& (0+255),b
  9057  003378  5184               	movf	(??_receiveVSCPModeCanalMsg+1)& (0+255),w,b
  9058  00337A  1190               	iorwf	(??_receiveVSCPModeCanalMsg+13)& (0+255),w,b
  9059  00337C  6F94               	movwf	(??_receiveVSCPModeCanalMsg+17)& (0+255),b
  9060  00337E  5185               	movf	(??_receiveVSCPModeCanalMsg+2)& (0+255),w,b
  9061  003380  1191               	iorwf	(??_receiveVSCPModeCanalMsg+14)& (0+255),w,b
  9062  003382  6F95               	movwf	(??_receiveVSCPModeCanalMsg+18)& (0+255),b
  9063  003384  5186               	movf	(??_receiveVSCPModeCanalMsg+3)& (0+255),w,b
  9064  003386  1192               	iorwf	(??_receiveVSCPModeCanalMsg+15)& (0+255),w,b
  9065  003388  6F96               	movwf	(??_receiveVSCPModeCanalMsg+19)& (0+255),b
  9066  00338A  0101               	movlb	1	; () banked
  9067  00338C  512C               	movf	(_cmdbuf+8)& (0+255),w,b
  9068  00338E  0100               	movlb	0	; () banked
  9069  003390  1193               	iorwf	(??_receiveVSCPModeCanalMsg+16)& (0+255),w,b
  9070  003392  6F9F               	movwf	receiveVSCPModeCanalMsg@id& (0+255),b
  9071  003394  5194               	movf	(??_receiveVSCPModeCanalMsg+17)& (0+255),w,b
  9072  003396  6FA0               	movwf	(receiveVSCPModeCanalMsg@id+1)& (0+255),b
  9073  003398  5195               	movf	(??_receiveVSCPModeCanalMsg+18)& (0+255),w,b
  9074  00339A  6FA1               	movwf	(receiveVSCPModeCanalMsg@id+2)& (0+255),b
  9075  00339C  5196               	movf	(??_receiveVSCPModeCanalMsg+19)& (0+255),w,b
  9076  00339E  6FA2               	movwf	(receiveVSCPModeCanalMsg@id+3)& (0+255),b
  9077                           
  9078                           ;main.c: 1807: dlc = cmdbuf[4] - 4;
  9079  0033A0  0101               	movlb	1	; () banked
  9080  0033A2  5128               	movf	(_cmdbuf+4)& (0+255),w,b
  9081  0033A4  0FFC               	addlw	252
  9082  0033A6  0100               	movlb	0	; () banked
  9083  0033A8  6FA3               	movwf	receiveVSCPModeCanalMsg@dlc& (0+255),b
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;main.c: 1808: memcpy(data, cmdbuf + 5 + 4, dlc);
  9087  0033AA  0E00               	movlw	high receiveVSCPModeCanalMsg@data
  9088  0033AC  6E1A               	movwf	?_memcpy+1,c
  9089  0033AE  0E97               	movlw	low receiveVSCPModeCanalMsg@data
  9090  0033B0  6E19               	movwf	?_memcpy,c
  9091  0033B2  0E2D               	movlw	low (_cmdbuf+9)
  9092  0033B4  6F83               	movwf	??_receiveVSCPModeCanalMsg& (0+255),b
  9093  0033B6  0E01               	movlw	high (_cmdbuf+9)
  9094  0033B8  6F84               	movwf	(??_receiveVSCPModeCanalMsg+1)& (0+255),b
  9095  0033BA  C083  F01B         	movff	??_receiveVSCPModeCanalMsg,?_memcpy+2
  9096  0033BE  C084  F01C         	movff	??_receiveVSCPModeCanalMsg+1,?_memcpy+3
  9097  0033C2  C0A3  F01D         	movff	receiveVSCPModeCanalMsg@dlc,?_memcpy+4
  9098  0033C6  6A1E               	clrf	?_memcpy+5,c
  9099  0033C8  EC39  F010         	call	_memcpy	;wreg free
  9100                           
  9101                           ;main.c: 1810: return sendCANFrame(id, dlc, data);
  9102  0033CC  C09F  F07C         	movff	receiveVSCPModeCanalMsg@id,?_sendCANFrame
  9103  0033D0  C0A0  F07D         	movff	receiveVSCPModeCanalMsg@id+1,?_sendCANFrame+1
  9104  0033D4  C0A1  F07E         	movff	receiveVSCPModeCanalMsg@id+2,?_sendCANFrame+2
  9105  0033D8  C0A2  F07F         	movff	receiveVSCPModeCanalMsg@id+3,?_sendCANFrame+3
  9106  0033DC  C0A3  F080         	movff	receiveVSCPModeCanalMsg@dlc,?_sendCANFrame+4
  9107  0033E0  0100               	movlb	0	; () banked
  9108  0033E2  0E00               	movlw	high receiveVSCPModeCanalMsg@data
  9109  0033E4  6F82               	movwf	(?_sendCANFrame+6)& (0+255),b
  9110  0033E6  0E97               	movlw	low receiveVSCPModeCanalMsg@data
  9111  0033E8  6F81               	movwf	(?_sendCANFrame+5)& (0+255),b
  9112  0033EA  EF81  F00F         	goto	_sendCANFrame	;wreg free
  9113  0033EE                     __end_of_receiveVSCPModeCanalMsg:
  9114                           	opt stack 0
  9115                           tblptru	equ	0xFF8
  9116                           tblptrh	equ	0xFF7
  9117                           tblptrl	equ	0xFF6
  9118                           tablat	equ	0xFF5
  9119                           prodh	equ	0xFF4
  9120                           prodl	equ	0xFF3
  9121                           intcon	equ	0xFF2
  9122                           indf0	equ	0xFEF
  9123                           postinc0	equ	0xFEE
  9124                           fsr0h	equ	0xFEA
  9125                           fsr0l	equ	0xFE9
  9126                           wreg	equ	0xFE8
  9127                           indf1	equ	0xFE7
  9128                           postinc1	equ	0xFE6
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           indf2	equ	0xFDF
  9133                           postinc2	equ	0xFDE
  9134                           postdec2	equ	0xFDD
  9135                           plusw2	equ	0xFDB
  9136                           fsr2h	equ	0xFDA
  9137                           fsr2l	equ	0xFD9
  9138                           status	equ	0xFD8
  9139                           
  9140 ;; *************** function _memcpy *****************
  9141 ;; Defined at:
  9142 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memcpy.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  d1              2   24[COMRAM] PTR void 
  9145 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
  9146 ;;  s1              2   26[COMRAM] PTR const void 
  9147 ;;		 -> vscpData(8), cmdbuf(80), 
  9148 ;;  n               2   28[COMRAM] unsigned int 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  s               2   32[COMRAM] PTR const unsigned char 
  9151 ;;		 -> vscpData(8), cmdbuf(80), 
  9152 ;;  d               2   30[COMRAM] PTR unsigned char 
  9153 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  2   24[COMRAM] PTR void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : F/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9163 ;;      Params:         6       0       0       0       0       0       0
  9164 ;;      Locals:         4       0       0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0
  9166 ;;      Totals:        10       0       0       0       0       0       0
  9167 ;;Total ram usage:       10 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    2
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_doModeSLCAN
  9174 ;;		_receiveVSCPModeCanalMsg
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text11
  9179  002072                     __ptext11:
  9180                           	opt stack 0
  9181  002072                     _memcpy:
  9182                           	opt stack 26
  9183                           
  9184                           ; BSR set to: 0
  9185                           
  9186                           ;incstack = 0
  9187                           ;incstack = 0
  9188  002072  C01B  F021         	movff	memcpy@s1,memcpy@s
  9189  002076  C01C  F022         	movff	memcpy@s1+1,memcpy@s+1
  9190  00207A  C019  F01F         	movff	memcpy@d1,memcpy@d
  9191  00207E  C01A  F020         	movff	memcpy@d1+1,memcpy@d+1
  9192  002082  D00E               	goto	l14470
  9193  002084                     l14464:
  9194  002084  C021  FFD9         	movff	memcpy@s,fsr2l
  9195  002088  C022  FFDA         	movff	memcpy@s+1,fsr2h
  9196  00208C  C01F  FFE1         	movff	memcpy@d,fsr1l
  9197  002090  C020  FFE2         	movff	memcpy@d+1,fsr1h
  9198  002094  CFDF FFE7          	movff	indf2,indf1
  9199  002098  4A21               	infsnz	memcpy@s,f,c
  9200  00209A  2A22               	incf	memcpy@s+1,f,c
  9201  00209C  4A1F               	infsnz	memcpy@d,f,c
  9202  00209E  2A20               	incf	memcpy@d+1,f,c
  9203  0020A0                     l14470:
  9204  0020A0  061D               	decf	memcpy@n,f,c
  9205  0020A2  A0D8               	btfss	status,0,c
  9206  0020A4  061E               	decf	memcpy@n+1,f,c
  9207  0020A6  281D               	incf	memcpy@n& (0+255),w,c
  9208  0020A8  B4D8               	btfsc	status,2,c
  9209  0020AA  281E               	incf	(memcpy@n+1)& (0+255),w,c
  9210  0020AC  B4D8               	btfsc	status,2,c
  9211  0020AE  0012               	return	
  9212  0020B0  D7E9               	goto	l14464
  9213  0020B2                     __end_of_memcpy:
  9214                           	opt stack 0
  9215                           tblptru	equ	0xFF8
  9216                           tblptrh	equ	0xFF7
  9217                           tblptrl	equ	0xFF6
  9218                           tablat	equ	0xFF5
  9219                           prodh	equ	0xFF4
  9220                           prodl	equ	0xFF3
  9221                           intcon	equ	0xFF2
  9222                           indf0	equ	0xFEF
  9223                           postinc0	equ	0xFEE
  9224                           fsr0h	equ	0xFEA
  9225                           fsr0l	equ	0xFE9
  9226                           wreg	equ	0xFE8
  9227                           indf1	equ	0xFE7
  9228                           postinc1	equ	0xFE6
  9229                           postdec1	equ	0xFE5
  9230                           fsr1h	equ	0xFE2
  9231                           fsr1l	equ	0xFE1
  9232                           indf2	equ	0xFDF
  9233                           postinc2	equ	0xFDE
  9234                           postdec2	equ	0xFDD
  9235                           plusw2	equ	0xFDB
  9236                           fsr2h	equ	0xFDA
  9237                           fsr2l	equ	0xFD9
  9238                           status	equ	0xFD8
  9239                           
  9240 ;; *************** function _sendVSCPDriverAck *****************
  9241 ;; Defined at:
  9242 ;;		line 1389 in file "main.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  crc             1   39[COMRAM] unsigned char 
  9247 ;; Return value:  Size  Location     Type
  9248 ;;		None               void
  9249 ;; Registers used:
  9250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : E/1
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9256 ;;      Params:         0       0       0       0       0       0       0
  9257 ;;      Locals:         1       0       0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0
  9259 ;;      Totals:         1       0       0       0       0       0       0
  9260 ;;Total ram usage:        1 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    5
  9263 ;; This function calls:
  9264 ;;		_WriteUSART
  9265 ;;		_sendEscapedUartData
  9266 ;;		_crc8
  9267 ;; This function is called by:
  9268 ;;		_doModeVscp
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text12
  9273  002CBE                     __ptext12:
  9274                           	opt stack 0
  9275  002CBE                     _sendVSCPDriverAck:
  9276                           	opt stack 23
  9277                           
  9278                           ;main.c: 1390: uint8_t crc = 0;
  9279                           
  9280                           ;incstack = 0
  9281                           ;incstack = 0
  9282  002CBE  6A28               	clrf	sendVSCPDriverAck@crc,c
  9283  002CC0                     l761:
  9284  002CC0  A2AC               	btfss	4012,1,c	;volatile
  9285  002CC2  D7FE               	goto	l761
  9286                           
  9287                           ;main.c: 1394: WriteUSART(0x10);
  9288  002CC4  0E10               	movlw	16
  9289  002CC6  EC6E  F00E         	call	_WriteUSART
  9290  002CCA                     l764:
  9291  002CCA  A2AC               	btfss	4012,1,c	;volatile
  9292  002CCC  D7FE               	goto	l764
  9293                           
  9294                           ;main.c: 1396: WriteUSART(0x02);
  9295  002CCE  0E02               	movlw	2
  9296  002CD0  EC6E  F00E         	call	_WriteUSART
  9297  002CD4                     l767:
  9298  002CD4  A2AC               	btfss	4012,1,c	;volatile
  9299  002CD6  D7FE               	goto	l767
  9300                           
  9301                           ;main.c: 1400: WriteUSART(251);
  9302  002CD8  0EFB               	movlw	251
  9303  002CDA  EC6E  F00E         	call	_WriteUSART
  9304                           
  9305                           ;main.c: 1401: crc8(&crc, 251);
  9306  002CDE  0E28               	movlw	low sendVSCPDriverAck@crc
  9307  002CE0  6E20               	movwf	?_crc8,c
  9308  002CE2  0E00               	movlw	high sendVSCPDriverAck@crc
  9309  002CE4  6E21               	movwf	?_crc8+1,c
  9310  002CE6  0E0F               	movlw	15
  9311  002CE8  6E21               	movwf	?_crc8+1,c
  9312  002CEA  0E5F               	movlw	__accesstop+-1
  9313  002CEC  6420               	cpfsgt	?_crc8,c
  9314  002CEE  6A21               	clrf	?_crc8+1,c
  9315  002CF0  0EFB               	movlw	251
  9316  002CF2  6E22               	movwf	?_crc8+2,c
  9317  002CF4  EC49  F00F         	call	_crc8	;wreg free
  9318  002CF8                     l770:
  9319  002CF8  A2AC               	btfss	4012,1,c	;volatile
  9320  002CFA  D7FE               	goto	l770
  9321                           
  9322                           ;main.c: 1405: WriteUSART(0);
  9323  002CFC  0E00               	movlw	0
  9324  002CFE  EC6E  F00E         	call	_WriteUSART
  9325                           
  9326                           ;main.c: 1406: crc8(&crc, 0);
  9327  002D02  0E28               	movlw	low sendVSCPDriverAck@crc
  9328  002D04  6E20               	movwf	?_crc8,c
  9329  002D06  0E00               	movlw	high sendVSCPDriverAck@crc
  9330  002D08  EC70  F017         	call	PL4	;call to abstracted procedure
  9331  002D0C  EC49  F00F         	call	_crc8	;wreg free
  9332                           
  9333                           ; BSR set to: 3
  9334                           ;main.c: 1409: sendEscapedUartData(cmdbuf[ 2 ], &crc);
  9335  002D10  0E28               	movlw	low sendVSCPDriverAck@crc
  9336  002D12  6E25               	movwf	?_sendEscapedUartData,c
  9337  002D14  0E00               	movlw	high sendVSCPDriverAck@crc
  9338  002D16  EC16  F019         	call	PL46	;call to abstracted procedure
  9339  002D1A  6425               	cpfsgt	?_sendEscapedUartData,c
  9340  002D1C  6A26               	clrf	?_sendEscapedUartData+1,c
  9341  002D1E  0101               	movlb	1	; () banked
  9342  002D20  5126               	movf	(_cmdbuf+2)& (0+255),w,b
  9343  002D22  ECA9  F012         	call	_sendEscapedUartData
  9344  002D26                     l773:
  9345  002D26  A2AC               	btfss	4012,1,c	;volatile
  9346  002D28  D7FE               	goto	l773
  9347                           
  9348                           ;main.c: 1413: WriteUSART(0);
  9349  002D2A  0E00               	movlw	0
  9350  002D2C  EC6E  F00E         	call	_WriteUSART
  9351                           
  9352                           ;main.c: 1414: crc8(&crc, 0);
  9353  002D30  0E28               	movlw	low sendVSCPDriverAck@crc
  9354  002D32  6E20               	movwf	?_crc8,c
  9355  002D34  0E00               	movlw	high sendVSCPDriverAck@crc
  9356  002D36  EC70  F017         	call	PL4	;call to abstracted procedure
  9357  002D3A  EC49  F00F         	call	_crc8	;wreg free
  9358  002D3E                     l776:
  9359  002D3E  A2AC               	btfss	4012,1,c	;volatile
  9360  002D40  D7FE               	goto	l776
  9361                           
  9362                           ;main.c: 1416: WriteUSART(0);
  9363  002D42  0E00               	movlw	0
  9364  002D44  EC6E  F00E         	call	_WriteUSART
  9365                           
  9366                           ;main.c: 1417: crc8(&crc, 0);
  9367  002D48  0E28               	movlw	low sendVSCPDriverAck@crc
  9368  002D4A  6E20               	movwf	?_crc8,c
  9369  002D4C  0E00               	movlw	high sendVSCPDriverAck@crc
  9370  002D4E  EC70  F017         	call	PL4	;call to abstracted procedure
  9371  002D52  EC49  F00F         	call	_crc8	;wreg free
  9372                           
  9373                           ; BSR set to: 3
  9374                           ;main.c: 1420: sendEscapedUartData(crc, (0));
  9375  002D56  6A26               	clrf	?_sendEscapedUartData+1,c
  9376  002D58  6A25               	clrf	?_sendEscapedUartData,c
  9377  002D5A  5028               	movf	sendVSCPDriverAck@crc,w,c
  9378  002D5C  ECA9  F012         	call	_sendEscapedUartData
  9379  002D60                     l779:
  9380  002D60  A2AC               	btfss	4012,1,c	;volatile
  9381  002D62  D7FE               	goto	l779
  9382                           
  9383                           ;main.c: 1424: WriteUSART(0x10);
  9384  002D64  0E10               	movlw	16
  9385  002D66  EC6E  F00E         	call	_WriteUSART
  9386  002D6A                     l782:
  9387  002D6A  A2AC               	btfss	4012,1,c	;volatile
  9388  002D6C  D7FE               	goto	l782
  9389                           
  9390                           ;main.c: 1426: WriteUSART(0x03);
  9391  002D6E  0E03               	movlw	3
  9392  002D70  EF6E  F00E         	goto	_WriteUSART
  9393  002D74                     __end_of_sendVSCPDriverAck:
  9394                           	opt stack 0
  9395                           tblptru	equ	0xFF8
  9396                           tblptrh	equ	0xFF7
  9397                           tblptrl	equ	0xFF6
  9398                           tablat	equ	0xFF5
  9399                           prodh	equ	0xFF4
  9400                           prodl	equ	0xFF3
  9401                           intcon	equ	0xFF2
  9402                           indf0	equ	0xFEF
  9403                           postinc0	equ	0xFEE
  9404                           fsr0h	equ	0xFEA
  9405                           fsr0l	equ	0xFE9
  9406                           wreg	equ	0xFE8
  9407                           indf1	equ	0xFE7
  9408                           postinc1	equ	0xFE6
  9409                           postdec1	equ	0xFE5
  9410                           fsr1h	equ	0xFE2
  9411                           fsr1l	equ	0xFE1
  9412                           indf2	equ	0xFDF
  9413                           postinc2	equ	0xFDE
  9414                           postdec2	equ	0xFDD
  9415                           plusw2	equ	0xFDB
  9416                           fsr2h	equ	0xFDA
  9417                           fsr2l	equ	0xFD9
  9418                           status	equ	0xFD8
  9419                           
  9420 ;; *************** function _sendVSCPDriverErrorFrame *****************
  9421 ;; Defined at:
  9422 ;;		line 1342 in file "main.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  errorcode       1    wreg     unsigned char 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  errorcode       1   39[COMRAM] unsigned char 
  9427 ;;  crc             1   40[COMRAM] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;		None               void
  9430 ;; Registers used:
  9431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : D/1
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9437 ;;      Params:         0       0       0       0       0       0       0
  9438 ;;      Locals:         2       0       0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0
  9440 ;;      Totals:         2       0       0       0       0       0       0
  9441 ;;Total ram usage:        2 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    5
  9444 ;; This function calls:
  9445 ;;		_WriteUSART
  9446 ;;		_sendEscapedUartData
  9447 ;;		_crc8
  9448 ;; This function is called by:
  9449 ;;		_doModeVscp
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text13
  9454  00315E                     __ptext13:
  9455                           	opt stack 0
  9456  00315E                     _sendVSCPDriverErrorFrame:
  9457                           	opt stack 23
  9458                           
  9459                           ;incstack = 0
  9460                           ;incstack = 0
  9461                           ;sendVSCPDriverErrorFrame@errorcode stored from wreg
  9462  00315E  CFE8 F028          	movff	wreg,sendVSCPDriverErrorFrame@errorcode
  9463                           
  9464                           ;main.c: 1343: uint8_t crc = 0;
  9465  003162  6A29               	clrf	sendVSCPDriverErrorFrame@crc,c
  9466  003164                     l734:
  9467  003164  A2AC               	btfss	4012,1,c	;volatile
  9468  003166  D7FE               	goto	l734
  9469                           
  9470                           ;main.c: 1347: WriteUSART(0x10);
  9471  003168  0E10               	movlw	16
  9472  00316A  EC6E  F00E         	call	_WriteUSART
  9473  00316E                     l737:
  9474  00316E  A2AC               	btfss	4012,1,c	;volatile
  9475  003170  D7FE               	goto	l737
  9476                           
  9477                           ;main.c: 1349: WriteUSART(0x02);
  9478  003172  0E02               	movlw	2
  9479  003174  EC6E  F00E         	call	_WriteUSART
  9480  003178                     l740:
  9481  003178  A2AC               	btfss	4012,1,c	;volatile
  9482  00317A  D7FE               	goto	l740
  9483                           
  9484                           ;main.c: 1353: WriteUSART(253);
  9485  00317C  0EFD               	movlw	253
  9486  00317E  EC6E  F00E         	call	_WriteUSART
  9487                           
  9488                           ;main.c: 1354: crc8(&crc, 253);
  9489  003182  D84C               	call	PL24	;call to abstracted procedure
  9490  003184  6420               	cpfsgt	?_crc8,c
  9491  003186  6A21               	clrf	?_crc8+1,c
  9492  003188  0EFD               	movlw	253
  9493  00318A  6E22               	movwf	?_crc8+2,c
  9494  00318C  EC49  F00F         	call	_crc8	;wreg free
  9495  003190                     l743:
  9496  003190  A2AC               	btfss	4012,1,c	;volatile
  9497  003192  D7FE               	goto	l743
  9498                           
  9499                           ;main.c: 1358: WriteUSART(0);
  9500  003194  0E00               	movlw	0
  9501  003196  EC6E  F00E         	call	_WriteUSART
  9502                           
  9503                           ;main.c: 1359: crc8(&crc, 0);
  9504  00319A  0E29               	movlw	low sendVSCPDriverErrorFrame@crc
  9505  00319C  6E20               	movwf	?_crc8,c
  9506  00319E  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9507  0031A0  EC70  F017         	call	PL4	;call to abstracted procedure
  9508  0031A4  EC49  F00F         	call	_crc8	;wreg free
  9509                           
  9510                           ; BSR set to: 3
  9511                           ;main.c: 1362: sendEscapedUartData(cmdbuf[ 2 ], &crc);
  9512  0031A8  0E29               	movlw	low sendVSCPDriverErrorFrame@crc
  9513  0031AA  6E25               	movwf	?_sendEscapedUartData,c
  9514  0031AC  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9515  0031AE  D83E               	call	PL46	;call to abstracted procedure
  9516  0031B0  6425               	cpfsgt	?_sendEscapedUartData,c
  9517  0031B2  6A26               	clrf	?_sendEscapedUartData+1,c
  9518  0031B4  0101               	movlb	1	; () banked
  9519  0031B6  5126               	movf	(_cmdbuf+2)& (0+255),w,b
  9520  0031B8  ECA9  F012         	call	_sendEscapedUartData
  9521  0031BC                     l746:
  9522  0031BC  A2AC               	btfss	4012,1,c	;volatile
  9523  0031BE  D7FE               	goto	l746
  9524                           
  9525                           ;main.c: 1366: WriteUSART(0);
  9526  0031C0  0E00               	movlw	0
  9527  0031C2  EC6E  F00E         	call	_WriteUSART
  9528                           
  9529                           ;main.c: 1367: crc8(&crc, 0);
  9530  0031C6  0E29               	movlw	low sendVSCPDriverErrorFrame@crc
  9531  0031C8  6E20               	movwf	?_crc8,c
  9532  0031CA  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9533  0031CC  EC70  F017         	call	PL4	;call to abstracted procedure
  9534  0031D0  EC49  F00F         	call	_crc8	;wreg free
  9535  0031D4                     l749:
  9536  0031D4  A2AC               	btfss	4012,1,c	;volatile
  9537  0031D6  D7FE               	goto	l749
  9538                           
  9539                           ;main.c: 1369: WriteUSART(1);
  9540  0031D8  0E01               	movlw	1
  9541  0031DA  EC6E  F00E         	call	_WriteUSART
  9542                           
  9543                           ;main.c: 1370: crc8(&crc, 1);
  9544  0031DE  D81E               	call	PL24	;call to abstracted procedure
  9545  0031E0  6420               	cpfsgt	?_crc8,c
  9546  0031E2  6A21               	clrf	?_crc8+1,c
  9547  0031E4  0E01               	movlw	1
  9548  0031E6  6E22               	movwf	?_crc8+2,c
  9549  0031E8  EC49  F00F         	call	_crc8	;wreg free
  9550                           
  9551                           ; BSR set to: 3
  9552                           ;main.c: 1373: sendEscapedUartData(errorcode, &crc);
  9553  0031EC  0E29               	movlw	low sendVSCPDriverErrorFrame@crc
  9554  0031EE  6E25               	movwf	?_sendEscapedUartData,c
  9555  0031F0  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9556  0031F2  D81C               	call	PL46	;call to abstracted procedure
  9557  0031F4  6425               	cpfsgt	?_sendEscapedUartData,c
  9558  0031F6  6A26               	clrf	?_sendEscapedUartData+1,c
  9559  0031F8  5028               	movf	sendVSCPDriverErrorFrame@errorcode,w,c
  9560  0031FA  ECA9  F012         	call	_sendEscapedUartData
  9561                           
  9562                           ;main.c: 1376: sendEscapedUartData(crc, (0));
  9563  0031FE  6A26               	clrf	?_sendEscapedUartData+1,c
  9564  003200  6A25               	clrf	?_sendEscapedUartData,c
  9565  003202  5029               	movf	sendVSCPDriverErrorFrame@crc,w,c
  9566  003204  ECA9  F012         	call	_sendEscapedUartData
  9567  003208                     l752:
  9568  003208  A2AC               	btfss	4012,1,c	;volatile
  9569  00320A  D7FE               	goto	l752
  9570                           
  9571                           ;main.c: 1380: WriteUSART(0x10);
  9572  00320C  0E10               	movlw	16
  9573  00320E  EC6E  F00E         	call	_WriteUSART
  9574  003212                     l755:
  9575  003212  A2AC               	btfss	4012,1,c	;volatile
  9576  003214  D7FE               	goto	l755
  9577                           
  9578                           ;main.c: 1382: WriteUSART(0x03);
  9579  003216  0E03               	movlw	3
  9580  003218  EF6E  F00E         	goto	_WriteUSART
  9581  00321C                     __end_of_sendVSCPDriverErrorFrame:
  9582                           	opt stack 0
  9583  00321C                     PL24:
  9584                           	opt stack 23
  9585  00321C  0E29               	movlw	low sendVSCPDriverErrorFrame@crc
  9586  00321E  6E20               	movwf	?_crc8,c
  9587  003220  0E00               	movlw	high sendVSCPDriverErrorFrame@crc
  9588  003222  6E21               	movwf	?_crc8+1,c
  9589  003224  0E0F               	movlw	15
  9590  003226  6E21               	movwf	?_crc8+1,c
  9591  003228  0E5F               	movlw	__accesstop+-1
  9592  00322A  0012               	return	
  9593  00322C                     __end_ofPL24:
  9594                           	opt stack 0
  9595  00322C                     PL46:
  9596                           	opt stack 23
  9597  00322C  6E26               	movwf	?_sendEscapedUartData+1,c
  9598  00322E  0E0F               	movlw	15
  9599  003230  6E26               	movwf	?_sendEscapedUartData+1,c
  9600  003232  0E5F               	movlw	__accesstop+-1
  9601  003234  0012               	return	
  9602  003236                     __end_ofPL46:
  9603                           	opt stack 0
  9604                           tblptru	equ	0xFF8
  9605                           tblptrh	equ	0xFF7
  9606                           tblptrl	equ	0xFF6
  9607                           tablat	equ	0xFF5
  9608                           prodh	equ	0xFF4
  9609                           prodl	equ	0xFF3
  9610                           intcon	equ	0xFF2
  9611                           indf0	equ	0xFEF
  9612                           postinc0	equ	0xFEE
  9613                           fsr0h	equ	0xFEA
  9614                           fsr0l	equ	0xFE9
  9615                           wreg	equ	0xFE8
  9616                           indf1	equ	0xFE7
  9617                           postinc1	equ	0xFE6
  9618                           postdec1	equ	0xFE5
  9619                           fsr1h	equ	0xFE2
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           plusw2	equ	0xFDB
  9625                           fsr2h	equ	0xFDA
  9626                           fsr2l	equ	0xFD9
  9627                           status	equ	0xFD8
  9628                           
  9629 ;; *************** function _calcCRC *****************
  9630 ;; Defined at:
  9631 ;;		line 2015 in file "main.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;  p               2   36[COMRAM] PTR unsigned char 
  9634 ;;		 -> cmdbuf(80), 
  9635 ;;  len             1   38[COMRAM] unsigned char 
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;  crc             1   40[COMRAM] unsigned char 
  9638 ;;  j               1   39[COMRAM] unsigned char 
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      unsigned char 
  9641 ;; Registers used:
  9642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : F/1
  9645 ;;		On exit  : D/1
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9648 ;;      Params:         3       0       0       0       0       0       0
  9649 ;;      Locals:         2       0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0
  9651 ;;      Totals:         5       0       0       0       0       0       0
  9652 ;;Total ram usage:        5 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    4
  9655 ;; This function calls:
  9656 ;;		_crc8
  9657 ;; This function is called by:
  9658 ;;		_doModeVscp
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text14
  9663  001ECA                     __ptext14:
  9664                           	opt stack 0
  9665  001ECA                     _calcCRC:
  9666                           	opt stack 24
  9667                           
  9668                           ; BSR set to: 1
  9669                           ;main.c: 2016: uint8_t j;
  9670                           ;main.c: 2017: uint8_t crc = 0;
  9671                           
  9672                           ;incstack = 0
  9673                           ;incstack = 0
  9674  001ECA  6A29               	clrf	calcCRC@crc,c
  9675                           
  9676                           ;main.c: 2019: for (j = 0; j < len; j++) {
  9677  001ECC  6A28               	clrf	calcCRC@j,c
  9678  001ECE  D014               	goto	l14260
  9679  001ED0                     l14256:
  9680                           
  9681                           ;main.c: 2020: crc8(&crc, p[j]);
  9682  001ED0  0E29               	movlw	low calcCRC@crc
  9683  001ED2  6E20               	movwf	?_crc8,c
  9684  001ED4  0E00               	movlw	high calcCRC@crc
  9685  001ED6  6E21               	movwf	?_crc8+1,c
  9686  001ED8  0E0F               	movlw	15
  9687  001EDA  6E21               	movwf	?_crc8+1,c
  9688  001EDC  0E5F               	movlw	__accesstop+-1
  9689  001EDE  6420               	cpfsgt	?_crc8,c
  9690  001EE0  6A21               	clrf	?_crc8+1,c
  9691  001EE2  5028               	movf	calcCRC@j,w,c
  9692  001EE4  2425               	addwf	calcCRC@p,w,c
  9693  001EE6  6ED9               	movwf	fsr2l,c
  9694  001EE8  0E00               	movlw	0
  9695  001EEA  2026               	addwfc	calcCRC@p+1,w,c
  9696  001EEC  6EDA               	movwf	fsr2h,c
  9697  001EEE  50DF               	movf	indf2,w,c
  9698  001EF0  6E22               	movwf	?_crc8+2,c
  9699  001EF2  EC49  F00F         	call	_crc8	;wreg free
  9700                           
  9701                           ; BSR set to: 3
  9702  001EF6  2A28               	incf	calcCRC@j,f,c
  9703  001EF8                     l14260:
  9704  001EF8  5027               	movf	calcCRC@len,w,c
  9705  001EFA  5C28               	subwf	calcCRC@j,w,c
  9706  001EFC  E3E9               	bnc	l14256
  9707                           
  9708                           ;main.c: 2021: }
  9709                           ;main.c: 2023: return crc;
  9710  001EFE  5029               	movf	calcCRC@crc,w,c
  9711  001F00  0012               	return	
  9712  001F02                     __end_of_calcCRC:
  9713                           	opt stack 0
  9714                           tblptru	equ	0xFF8
  9715                           tblptrh	equ	0xFF7
  9716                           tblptrl	equ	0xFF6
  9717                           tablat	equ	0xFF5
  9718                           prodh	equ	0xFF4
  9719                           prodl	equ	0xFF3
  9720                           intcon	equ	0xFF2
  9721                           indf0	equ	0xFEF
  9722                           postinc0	equ	0xFEE
  9723                           fsr0h	equ	0xFEA
  9724                           fsr0l	equ	0xFE9
  9725                           wreg	equ	0xFE8
  9726                           indf1	equ	0xFE7
  9727                           postinc1	equ	0xFE6
  9728                           postdec1	equ	0xFE5
  9729                           fsr1h	equ	0xFE2
  9730                           fsr1l	equ	0xFE1
  9731                           indf2	equ	0xFDF
  9732                           postinc2	equ	0xFDE
  9733                           postdec2	equ	0xFDD
  9734                           plusw2	equ	0xFDB
  9735                           fsr2h	equ	0xFDA
  9736                           fsr2l	equ	0xFD9
  9737                           status	equ	0xFD8
  9738                           
  9739 ;; *************** function _receivePrintEventCANAL *****************
  9740 ;; Defined at:
  9741 ;;		line 1582 in file "main.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  crc             1   16[BANK0 ] unsigned char 
  9746 ;;  data            8    2[BANK0 ] unsigned char [8]
  9747 ;;  id              4   12[BANK0 ] unsigned long 
  9748 ;;  dlc             1   11[BANK0 ] unsigned char 
  9749 ;;  i               1   10[BANK0 ] unsigned char 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      enum E15660
  9752 ;; Registers used:
  9753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9754 ;; Tracked objects:
  9755 ;;		On entry : F/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9759 ;;      Params:         0       0       0       0       0       0       0
  9760 ;;      Locals:         0      15       0       0       0       0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0
  9762 ;;      Totals:         0      15       0       0       0       0       0
  9763 ;;Total ram usage:       15 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; Hardware stack levels required when called:    5
  9766 ;; This function calls:
  9767 ;;		_WriteUSART
  9768 ;;		_sendEscapedUartData
  9769 ;;		_crc8
  9770 ;;		_getCANFrame
  9771 ;; This function is called by:
  9772 ;;		_doModeVscp
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text15
  9777  003C04                     __ptext15:
  9778                           	opt stack 0
  9779  003C04                     _receivePrintEventCANAL:
  9780                           	opt stack 23
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;main.c: 1583: uint8_t i;
  9784                           ;main.c: 1584: uint32_t id;
  9785                           ;main.c: 1585: uint8_t dlc;
  9786                           ;main.c: 1586: uint8_t data[8];
  9787                           ;main.c: 1588: if (getCANFrame(&id, &dlc, &data)) {
  9788                           
  9789                           ;incstack = 0
  9790                           ;incstack = 0
  9791  003C04  0E6B               	movlw	low receivePrintEventCANAL@dlc
  9792  003C06  6E2C               	movwf	?_getCANFrame,c
  9793  003C08  0E00               	movlw	high receivePrintEventCANAL@data
  9794  003C0A  6E2E               	movwf	?_getCANFrame+2,c
  9795  003C0C  0E62               	movlw	low receivePrintEventCANAL@data
  9796  003C0E  6E2D               	movwf	?_getCANFrame+1,c
  9797  003C10  0E6C               	movlw	receivePrintEventCANAL@id& (0+255)
  9798  003C12  ECFC  F00E         	call	_getCANFrame
  9799  003C16  0900               	iorlw	0
  9800  003C18  E101 D090          	bz	l904
  9801                           
  9802                           ;main.c: 1590: uint8_t crc = 0;
  9803  003C1C  0100               	movlb	0	; () banked
  9804  003C1E  6B70               	clrf	receivePrintEventCANAL@crc& (0+255),b
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;main.c: 1593: cntRxFrames++;
  9808  003C20  0101               	movlb	1	; () banked
  9809  003C22  2B0C               	incf	_cntRxFrames& (0+255),f,b
  9810  003C24  0E00               	movlw	0
  9811  003C26  230D               	addwfc	(_cntRxFrames+1)& (0+255),f,b
  9812  003C28  230E               	addwfc	(_cntRxFrames+2)& (0+255),f,b
  9813  003C2A  230F               	addwfc	(_cntRxFrames+3)& (0+255),f,b
  9814                           
  9815                           ;main.c: 1594: cntRxBytes += dlc;
  9816  003C2C  0100               	movlb	0	; () banked
  9817  003C2E  516B               	movf	receivePrintEventCANAL@dlc& (0+255),w,b
  9818  003C30  0101               	movlb	1	; () banked
  9819  003C32  2708               	addwf	_cntRxBytes& (0+255),f,b
  9820  003C34  0E00               	movlw	0
  9821  003C36  2309               	addwfc	(_cntRxBytes+1)& (0+255),f,b
  9822  003C38  230A               	addwfc	(_cntRxBytes+2)& (0+255),f,b
  9823  003C3A  230B               	addwfc	(_cntRxBytes+3)& (0+255),f,b
  9824  003C3C                     l883:
  9825  003C3C  A2AC               	btfss	4012,1,c	;volatile
  9826  003C3E  D7FE               	goto	l883
  9827                           
  9828                           ;main.c: 1598: WriteUSART(0x10);
  9829  003C40  0E10               	movlw	16
  9830  003C42  EC6E  F00E         	call	_WriteUSART
  9831  003C46                     l886:
  9832  003C46  A2AC               	btfss	4012,1,c	;volatile
  9833  003C48  D7FE               	goto	l886
  9834                           
  9835                           ;main.c: 1600: WriteUSART(0x02);
  9836  003C4A  0E02               	movlw	2
  9837  003C4C  EC6E  F00E         	call	_WriteUSART
  9838  003C50                     l889:
  9839  003C50  A2AC               	btfss	4012,1,c	;volatile
  9840  003C52  D7FE               	goto	l889
  9841                           
  9842                           ;main.c: 1604: WriteUSART(2);
  9843  003C54  0E02               	movlw	2
  9844  003C56  EC6E  F00E         	call	_WriteUSART
  9845                           
  9846                           ;main.c: 1605: crc8(&crc, 2);
  9847  003C5A  0100               	movlb	0	; () banked
  9848  003C5C  0E00               	movlw	high receivePrintEventCANAL@crc
  9849  003C5E  6E21               	movwf	?_crc8+1,c
  9850  003C60  0E70               	movlw	low receivePrintEventCANAL@crc
  9851  003C62  6E20               	movwf	?_crc8,c
  9852  003C64  0E02               	movlw	2
  9853  003C66  6E22               	movwf	?_crc8+2,c
  9854  003C68  EC49  F00F         	call	_crc8	;wreg free
  9855  003C6C                     l892:
  9856  003C6C  A2AC               	btfss	4012,1,c	;volatile
  9857  003C6E  D7FE               	goto	l892
  9858                           
  9859                           ;main.c: 1609: WriteUSART(0);
  9860  003C70  0E00               	movlw	0
  9861  003C72  EC6E  F00E         	call	_WriteUSART
  9862                           
  9863                           ;main.c: 1610: crc8(&crc, 0);
  9864  003C76  0100               	movlb	0	; () banked
  9865  003C78  0E00               	movlw	high receivePrintEventCANAL@crc
  9866  003C7A  6E21               	movwf	?_crc8+1,c
  9867  003C7C  0E70               	movlw	low receivePrintEventCANAL@crc
  9868  003C7E  6E20               	movwf	?_crc8,c
  9869  003C80  0E00               	movlw	0
  9870  003C82  6A22               	clrf	?_crc8+2,c
  9871  003C84  EC49  F00F         	call	_crc8	;wreg free
  9872                           
  9873                           ; BSR set to: 3
  9874                           ;main.c: 1613: sendEscapedUartData(sequencyno, &crc);
  9875  003C88  0100               	movlb	0	; () banked
  9876  003C8A  0E00               	movlw	high receivePrintEventCANAL@crc
  9877  003C8C  6E26               	movwf	?_sendEscapedUartData+1,c
  9878  003C8E  0E70               	movlw	low receivePrintEventCANAL@crc
  9879  003C90  6E25               	movwf	?_sendEscapedUartData,c
  9880  003C92  503E               	movf	_sequencyno,w,c
  9881  003C94  ECA9  F012         	call	_sendEscapedUartData
  9882                           
  9883                           ;main.c: 1614: sequencyno++;
  9884  003C98  2A3E               	incf	_sequencyno,f,c
  9885                           
  9886                           ;main.c: 1617: sendEscapedUartData(0, &crc);
  9887  003C9A  0100               	movlb	0	; () banked
  9888  003C9C  0E00               	movlw	high receivePrintEventCANAL@crc
  9889  003C9E  6E26               	movwf	?_sendEscapedUartData+1,c
  9890  003CA0  0E70               	movlw	low receivePrintEventCANAL@crc
  9891  003CA2  6E25               	movwf	?_sendEscapedUartData,c
  9892  003CA4  0E00               	movlw	0
  9893  003CA6  ECA9  F012         	call	_sendEscapedUartData
  9894                           
  9895                           ;main.c: 1618: sendEscapedUartData(4 + dlc, &crc);
  9896  003CAA  D849               	call	PL94	;call to abstracted procedure
  9897  003CAC  0F04               	addlw	4
  9898  003CAE  ECA9  F012         	call	_sendEscapedUartData
  9899                           
  9900                           ;main.c: 1624: sendEscapedUartData((id >> 24) & 0xff, &crc);
  9901  003CB2  0E00               	movlw	high receivePrintEventCANAL@crc
  9902  003CB4  6E26               	movwf	?_sendEscapedUartData+1,c
  9903  003CB6  0E70               	movlw	low receivePrintEventCANAL@crc
  9904  003CB8  6E25               	movwf	?_sendEscapedUartData,c
  9905  003CBA  0100               	movlb	0	; () banked
  9906  003CBC  516F               	movf	(receivePrintEventCANAL@id+3)& (0+255),w,b
  9907  003CBE  ECA9  F012         	call	_sendEscapedUartData
  9908                           
  9909                           ;main.c: 1625: sendEscapedUartData((id >> 16) & 0xff, &crc);
  9910  003CC2  0E00               	movlw	high receivePrintEventCANAL@crc
  9911  003CC4  6E26               	movwf	?_sendEscapedUartData+1,c
  9912  003CC6  0E70               	movlw	low receivePrintEventCANAL@crc
  9913  003CC8  6E25               	movwf	?_sendEscapedUartData,c
  9914  003CCA  0100               	movlb	0	; () banked
  9915  003CCC  516E               	movf	(receivePrintEventCANAL@id+2)& (0+255),w,b
  9916  003CCE  ECA9  F012         	call	_sendEscapedUartData
  9917                           
  9918                           ;main.c: 1626: sendEscapedUartData((id >> 8) & 0xff, &crc);
  9919  003CD2  0E00               	movlw	high receivePrintEventCANAL@crc
  9920  003CD4  6E26               	movwf	?_sendEscapedUartData+1,c
  9921  003CD6  0E70               	movlw	low receivePrintEventCANAL@crc
  9922  003CD8  6E25               	movwf	?_sendEscapedUartData,c
  9923  003CDA  0100               	movlb	0	; () banked
  9924  003CDC  516D               	movf	(receivePrintEventCANAL@id+1)& (0+255),w,b
  9925  003CDE  ECA9  F012         	call	_sendEscapedUartData
  9926                           
  9927                           ;main.c: 1627: sendEscapedUartData(id & 0xff, &crc);
  9928  003CE2  0100               	movlb	0	; () banked
  9929  003CE4  0E00               	movlw	high receivePrintEventCANAL@crc
  9930  003CE6  6E26               	movwf	?_sendEscapedUartData+1,c
  9931  003CE8  0E70               	movlw	low receivePrintEventCANAL@crc
  9932  003CEA  6E25               	movwf	?_sendEscapedUartData,c
  9933  003CEC  516C               	movf	receivePrintEventCANAL@id& (0+255),w,b
  9934  003CEE  ECA9  F012         	call	_sendEscapedUartData
  9935                           
  9936                           ;main.c: 1630: sendEscapedUartData(dlc, &crc);
  9937  003CF2  D825               	call	PL94	;call to abstracted procedure
  9938  003CF4  ECA9  F012         	call	_sendEscapedUartData
  9939                           
  9940                           ;main.c: 1632: for (i = 0; i < dlc; i++) {
  9941  003CF8  0100               	movlb	0	; () banked
  9942  003CFA  6B6A               	clrf	receivePrintEventCANAL@i& (0+255),b
  9943  003CFC  D00D               	goto	l14244
  9944  003CFE                     l14240:
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;main.c: 1633: sendEscapedUartData(data[ i ], &crc);
  9948  003CFE  0E00               	movlw	high receivePrintEventCANAL@crc
  9949  003D00  6E26               	movwf	?_sendEscapedUartData+1,c
  9950  003D02  0E70               	movlw	low receivePrintEventCANAL@crc
  9951  003D04  6E25               	movwf	?_sendEscapedUartData,c
  9952  003D06  516A               	movf	receivePrintEventCANAL@i& (0+255),w,b
  9953  003D08  0F62               	addlw	low receivePrintEventCANAL@data
  9954  003D0A  6ED9               	movwf	fsr2l,c
  9955  003D0C  6ADA               	clrf	fsr2h,c
  9956  003D0E  50DF               	movf	indf2,w,c
  9957  003D10  ECA9  F012         	call	_sendEscapedUartData
  9958  003D14  0100               	movlb	0	; () banked
  9959  003D16  2B6A               	incf	receivePrintEventCANAL@i& (0+255),f,b
  9960  003D18                     l14244:
  9961                           
  9962                           ; BSR set to: 0
  9963  003D18  516B               	movf	receivePrintEventCANAL@dlc& (0+255),w,b
  9964  003D1A  5D6A               	subwf	receivePrintEventCANAL@i& (0+255),w,b
  9965  003D1C  E3F0               	bnc	l14240
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;main.c: 1634: }
  9969                           ;main.c: 1637: sendEscapedUartData(crc, (0));
  9970  003D1E  6A26               	clrf	?_sendEscapedUartData+1,c
  9971  003D20  6A25               	clrf	?_sendEscapedUartData,c
  9972  003D22  5170               	movf	receivePrintEventCANAL@crc& (0+255),w,b
  9973  003D24  ECA9  F012         	call	_sendEscapedUartData
  9974  003D28                     l898:
  9975  003D28  A2AC               	btfss	4012,1,c	;volatile
  9976  003D2A  D7FE               	goto	l898
  9977                           
  9978                           ;main.c: 1641: WriteUSART(0x10);
  9979  003D2C  0E10               	movlw	16
  9980  003D2E  EC6E  F00E         	call	_WriteUSART
  9981  003D32                     l901:
  9982  003D32  A2AC               	btfss	4012,1,c	;volatile
  9983  003D34  D7FE               	goto	l901
  9984                           
  9985                           ;main.c: 1643: WriteUSART(0x03);
  9986  003D36  0E03               	movlw	3
  9987  003D38  EC6E  F00E         	call	_WriteUSART
  9988  003D3C                     l904:
  9989  003D3C  0012               	return	
  9990  003D3E                     __end_of_receivePrintEventCANAL:
  9991                           	opt stack 0
  9992  003D3E                     PL94:
  9993                           	opt stack 23
  9994  003D3E  0100               	movlb	0	; () banked
  9995  003D40  0E00               	movlw	high receivePrintEventCANAL@crc
  9996  003D42  6E26               	movwf	?_sendEscapedUartData+1,c
  9997  003D44  0E70               	movlw	low receivePrintEventCANAL@crc
  9998  003D46  6E25               	movwf	?_sendEscapedUartData,c
  9999  003D48  516B               	movf	receivePrintEventCANAL@dlc& (0+255),w,b
 10000  003D4A  0012               	return	
 10001  003D4C                     __end_ofPL94:
 10002                           	opt stack 0
 10003                           tblptru	equ	0xFF8
 10004                           tblptrh	equ	0xFF7
 10005                           tblptrl	equ	0xFF6
 10006                           tablat	equ	0xFF5
 10007                           prodh	equ	0xFF4
 10008                           prodl	equ	0xFF3
 10009                           intcon	equ	0xFF2
 10010                           indf0	equ	0xFEF
 10011                           postinc0	equ	0xFEE
 10012                           fsr0h	equ	0xFEA
 10013                           fsr0l	equ	0xFE9
 10014                           wreg	equ	0xFE8
 10015                           indf1	equ	0xFE7
 10016                           postinc1	equ	0xFE6
 10017                           postdec1	equ	0xFE5
 10018                           fsr1h	equ	0xFE2
 10019                           fsr1l	equ	0xFE1
 10020                           indf2	equ	0xFDF
 10021                           postinc2	equ	0xFDE
 10022                           postdec2	equ	0xFDD
 10023                           plusw2	equ	0xFDB
 10024                           fsr2h	equ	0xFDA
 10025                           fsr2l	equ	0xFD9
 10026                           status	equ	0xFD8
 10027                           
 10028 ;; *************** function _sendEscapedUartData *****************
 10029 ;; Defined at:
 10030 ;;		line 1318 in file "main.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;  c               1    wreg     unsigned char 
 10033 ;;  pcrc            2   36[COMRAM] PTR unsigned char 
 10034 ;;		 -> sendReceiveEventVSCP@crc(1), receivePrintEventCANAL@crc(1), sendVSCPDriverCommandReply@crc(1), sendVSCPDriverNac
      +k@crc(1), 
 10035 ;;		 -> sendVSCPDriverAck@crc(1), sendVSCPDriverErrorFrame@crc(1), NULL(0), 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  c               1   38[COMRAM] unsigned char 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;		None               void
 10040 ;; Registers used:
 10041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/1
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10047 ;;      Params:         2       0       0       0       0       0       0
 10048 ;;      Locals:         1       0       0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0
 10050 ;;      Totals:         3       0       0       0       0       0       0
 10051 ;;Total ram usage:        3 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    4
 10054 ;; This function calls:
 10055 ;;		_WriteUSART
 10056 ;;		_crc8
 10057 ;; This function is called by:
 10058 ;;		_sendVSCPDriverErrorFrame
 10059 ;;		_sendVSCPDriverAck
 10060 ;;		_sendVSCPDriverNack
 10061 ;;		_sendVSCPDriverCommandReply
 10062 ;;		_receivePrintEventCANAL
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text16
 10067  002552                     __ptext16:
 10068                           	opt stack 0
 10069  002552                     _sendEscapedUartData:
 10070                           	opt stack 23
 10071                           
 10072                           ;incstack = 0
 10073                           ;incstack = 0
 10074                           ;sendEscapedUartData@c stored from wreg
 10075  002552  CFE8 F027          	movff	wreg,sendEscapedUartData@c
 10076                           
 10077                           ;main.c: 1319: if (0x10 == c) {
 10078  002556  5027               	movf	sendEscapedUartData@c,w,c
 10079  002558  0A10               	xorlw	16
 10080  00255A  E121               	bnz	l727
 10081  00255C                     l718:
 10082  00255C  A2AC               	btfss	4012,1,c	;volatile
 10083  00255E  D7FE               	goto	l718
 10084                           
 10085                           ;main.c: 1322: WriteUSART(0x10);
 10086  002560  0E10               	movlw	16
 10087  002562  EC6E  F00E         	call	_WriteUSART
 10088                           
 10089                           ;main.c: 1323: if ((0) != pcrc) crc8(pcrc, 0x10);
 10090  002566  5026               	movf	sendEscapedUartData@pcrc+1,w,c
 10091  002568  1025               	iorwf	sendEscapedUartData@pcrc,w,c
 10092  00256A  E008               	bz	l722
 10093  00256C  C025  F020         	movff	sendEscapedUartData@pcrc,?_crc8
 10094  002570  C026  F021         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 10095  002574  0E10               	movlw	16
 10096  002576  6E22               	movwf	?_crc8+2,c
 10097  002578  EC49  F00F         	call	_crc8	;wreg free
 10098  00257C                     l722:
 10099  00257C  A2AC               	btfss	4012,1,c	;volatile
 10100  00257E  D7FE               	goto	l722
 10101                           
 10102                           ;main.c: 1326: WriteUSART(0x10);
 10103  002580  0E10               	movlw	16
 10104  002582  EC6E  F00E         	call	_WriteUSART
 10105                           
 10106                           ;main.c: 1327: if ((0) != pcrc) crc8(pcrc, 0x10);
 10107  002586  5026               	movf	sendEscapedUartData@pcrc+1,w,c
 10108  002588  1025               	iorwf	sendEscapedUartData@pcrc,w,c
 10109  00258A  E019               	bz	l731
 10110  00258C  C025  F020         	movff	sendEscapedUartData@pcrc,?_crc8
 10111  002590  C026  F021         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 10112  002594  0E10               	movlw	16
 10113  002596  6E22               	movwf	?_crc8+2,c
 10114  002598  EC49  F00F         	call	_crc8	;wreg free
 10115  00259C  D010               	goto	l731
 10116  00259E                     l727:
 10117  00259E  A2AC               	btfss	4012,1,c	;volatile
 10118  0025A0  D7FE               	goto	l727
 10119                           
 10120                           ;main.c: 1332: WriteUSART(c);
 10121  0025A2  5027               	movf	sendEscapedUartData@c,w,c
 10122  0025A4  EC6E  F00E         	call	_WriteUSART
 10123                           
 10124                           ;main.c: 1333: if ((0) != pcrc) crc8(pcrc, c);
 10125  0025A8  5026               	movf	sendEscapedUartData@pcrc+1,w,c
 10126  0025AA  1025               	iorwf	sendEscapedUartData@pcrc,w,c
 10127  0025AC  E008               	bz	l731
 10128  0025AE  C025  F020         	movff	sendEscapedUartData@pcrc,?_crc8
 10129  0025B2  C026  F021         	movff	sendEscapedUartData@pcrc+1,?_crc8+1
 10130  0025B6  C027  F022         	movff	sendEscapedUartData@c,?_crc8+2
 10131  0025BA  EC49  F00F         	call	_crc8	;wreg free
 10132  0025BE                     l731:
 10133  0025BE  0012               	return	
 10134  0025C0                     __end_of_sendEscapedUartData:
 10135                           	opt stack 0
 10136                           tblptru	equ	0xFF8
 10137                           tblptrh	equ	0xFF7
 10138                           tblptrl	equ	0xFF6
 10139                           tablat	equ	0xFF5
 10140                           prodh	equ	0xFF4
 10141                           prodl	equ	0xFF3
 10142                           intcon	equ	0xFF2
 10143                           indf0	equ	0xFEF
 10144                           postinc0	equ	0xFEE
 10145                           fsr0h	equ	0xFEA
 10146                           fsr0l	equ	0xFE9
 10147                           wreg	equ	0xFE8
 10148                           indf1	equ	0xFE7
 10149                           postinc1	equ	0xFE6
 10150                           postdec1	equ	0xFE5
 10151                           fsr1h	equ	0xFE2
 10152                           fsr1l	equ	0xFE1
 10153                           indf2	equ	0xFDF
 10154                           postinc2	equ	0xFDE
 10155                           postdec2	equ	0xFDD
 10156                           plusw2	equ	0xFDB
 10157                           fsr2h	equ	0xFDA
 10158                           fsr2l	equ	0xFD9
 10159                           status	equ	0xFD8
 10160                           
 10161 ;; *************** function _crc8 *****************
 10162 ;; Defined at:
 10163 ;;		line 47 in file "crc8.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  crc             2   31[COMRAM] PTR unsigned char 
 10166 ;;		 -> calcCRC@crc(1), sendReceiveEventVSCP@crc(1), receivePrintEventCANAL@crc(1), sendVSCPDriverCommandReply@crc(1), 
 10167 ;;		 -> sendVSCPDriverNack@crc(1), sendVSCPDriverAck@crc(1), sendVSCPDriverErrorFrame@crc(1), NULL(0), 
 10168 ;;  m               1   33[COMRAM] unsigned char 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;		None               void
 10173 ;; Registers used:
 10174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/1
 10177 ;;		On exit  : F/3
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10180 ;;      Params:         3       0       0       0       0       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0
 10182 ;;      Temps:          2       0       0       0       0       0       0
 10183 ;;      Totals:         5       0       0       0       0       0       0
 10184 ;;Total ram usage:        5 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:    3
 10187 ;; This function calls:
 10188 ;;		_init_crc8
 10189 ;; This function is called by:
 10190 ;;		_sendEscapedUartData
 10191 ;;		_sendVSCPDriverErrorFrame
 10192 ;;		_sendVSCPDriverAck
 10193 ;;		_sendVSCPDriverNack
 10194 ;;		_sendVSCPDriverCommandReply
 10195 ;;		_receivePrintEventCANAL
 10196 ;;		_calcCRC
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text17
 10201  001E92                     __ptext17:
 10202                           	opt stack 0
 10203  001E92                     _crc8:
 10204                           	opt stack 24
 10205                           
 10206                           ;crc8.c: 48: if ( !made_table ) {
 10207                           
 10208                           ;incstack = 0
 10209                           ;incstack = 0
 10210  001E92  0100               	movlb	0	; () banked
 10211  001E94  51D2               	movf	(_made_table+1)& (0+255),w,b
 10212  001E96  11D1               	iorwf	_made_table& (0+255),w,b
 10213  001E98  B4D8               	btfsc	status,2,c
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;crc8.c: 49: init_crc8();
 10217  001E9A  EC72  F012         	call	_init_crc8	;wreg free
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;crc8.c: 50: }
 10221                           ;crc8.c: 52: *crc = crc8_table[(*crc) ^ m];
 10222  001E9E  C020  FFD9         	movff	crc8@crc,fsr2l
 10223  001EA2  C021  FFDA         	movff	crc8@crc+1,fsr2h
 10224  001EA6  50DF               	movf	indf2,w,c
 10225  001EA8  1822               	xorwf	crc8@m,w,c
 10226  001EAA  6E23               	movwf	??_crc8& (0+255),c
 10227  001EAC  6A24               	clrf	(??_crc8+1)& (0+255),c
 10228  001EAE  0103               	movlb	3	; () banked
 10229  001EB0  0E00               	movlw	low _crc8_table
 10230  001EB2  2423               	addwf	??_crc8,w,c
 10231  001EB4  6ED9               	movwf	fsr2l,c
 10232  001EB6  0E03               	movlw	high _crc8_table
 10233  001EB8  2024               	addwfc	??_crc8+1,w,c
 10234  001EBA  6EDA               	movwf	fsr2h,c
 10235  001EBC  C020  FFE1         	movff	crc8@crc,fsr1l
 10236  001EC0  C021  FFE2         	movff	crc8@crc+1,fsr1h
 10237  001EC4  CFDF FFE7          	movff	indf2,indf1
 10238                           
 10239                           ; BSR set to: 3
 10240  001EC8  0012               	return	
 10241  001ECA                     __end_of_crc8:
 10242                           	opt stack 0
 10243                           tblptru	equ	0xFF8
 10244                           tblptrh	equ	0xFF7
 10245                           tblptrl	equ	0xFF6
 10246                           tablat	equ	0xFF5
 10247                           prodh	equ	0xFF4
 10248                           prodl	equ	0xFF3
 10249                           intcon	equ	0xFF2
 10250                           indf0	equ	0xFEF
 10251                           postinc0	equ	0xFEE
 10252                           fsr0h	equ	0xFEA
 10253                           fsr0l	equ	0xFE9
 10254                           wreg	equ	0xFE8
 10255                           indf1	equ	0xFE7
 10256                           postinc1	equ	0xFE6
 10257                           postdec1	equ	0xFE5
 10258                           fsr1h	equ	0xFE2
 10259                           fsr1l	equ	0xFE1
 10260                           indf2	equ	0xFDF
 10261                           postinc2	equ	0xFDE
 10262                           postdec2	equ	0xFDD
 10263                           plusw2	equ	0xFDB
 10264                           fsr2h	equ	0xFDA
 10265                           fsr2l	equ	0xFD9
 10266                           status	equ	0xFD8
 10267                           
 10268 ;; *************** function _init_crc8 *****************
 10269 ;; Defined at:
 10270 ;;		line 25 in file "crc8.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  i               2   29[COMRAM] int 
 10275 ;;  j               2   26[COMRAM] int 
 10276 ;;  crc             1   28[COMRAM] unsigned char 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;		None               void
 10279 ;; Registers used:
 10280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10281 ;; Tracked objects:
 10282 ;;		On entry : C/1
 10283 ;;		On exit  : F/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10286 ;;      Params:         0       0       0       0       0       0       0
 10287 ;;      Locals:         7       0       0       0       0       0       0
 10288 ;;      Temps:          0       0       0       0       0       0       0
 10289 ;;      Totals:         7       0       0       0       0       0       0
 10290 ;;Total ram usage:        7 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    2
 10293 ;; This function calls:
 10294 ;;		Nothing
 10295 ;; This function is called by:
 10296 ;;		_main
 10297 ;;		_crc8
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           	psect	text18
 10302  0024E4                     __ptext18:
 10303                           	opt stack 0
 10304  0024E4                     _init_crc8:
 10305                           	opt stack 24
 10306                           
 10307                           ;crc8.c: 26: int i,j;
 10308                           ;crc8.c: 27: unsigned char crc;
 10309                           ;crc8.c: 29: if (!made_table) {
 10310                           
 10311                           ; BSR set to: 3
 10312                           ;incstack = 0
 10313                           ;incstack = 0
 10314  0024E4  0100               	movlb	0	; () banked
 10315  0024E6  51D2               	movf	(_made_table+1)& (0+255),w,b
 10316  0024E8  11D1               	iorwf	_made_table& (0+255),w,b
 10317  0024EA  E132               	bnz	l1478
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;crc8.c: 30: for ( i=0; i<256; i++ ) {
 10321  0024EC  6A1E               	clrf	init_crc8@i,c
 10322  0024EE  6A1F               	clrf	init_crc8@i+1,c
 10323  0024F0                     l1470:
 10324                           
 10325                           ;crc8.c: 31: crc = i;
 10326  0024F0  C01E  F01D         	movff	init_crc8@i,init_crc8@crc
 10327                           
 10328                           ;crc8.c: 32: for (j=0; j<8; j++) {
 10329  0024F4  6A1B               	clrf	init_crc8@j,c
 10330  0024F6  6A1C               	clrf	init_crc8@j+1,c
 10331  0024F8                     l1472:
 10332                           
 10333                           ;crc8.c: 33: crc = (crc << 1) ^ ((crc & 0x80) ? 0x07 : 0);
 10334  0024F8  BE1D               	btfsc	init_crc8@crc,7,c
 10335  0024FA  D003               	goto	l12578
 10336  0024FC  6A19               	clrf	_init_crc8$2079,c
 10337  0024FE  6A1A               	clrf	_init_crc8$2079+1,c
 10338  002500  D003               	goto	l12580
 10339  002502                     l12578:
 10340  002502  6A1A               	clrf	_init_crc8$2079+1,c
 10341  002504  0E07               	movlw	7
 10342  002506  6E19               	movwf	_init_crc8$2079,c
 10343  002508                     l12580:
 10344  002508  501D               	movf	init_crc8@crc,w,c
 10345  00250A  241D               	addwf	init_crc8@crc,w,c
 10346  00250C  1819               	xorwf	_init_crc8$2079,w,c
 10347  00250E  6E1D               	movwf	init_crc8@crc,c
 10348  002510  4A1B               	infsnz	init_crc8@j,f,c
 10349  002512  2A1C               	incf	init_crc8@j+1,f,c
 10350  002514  501C               	movf	init_crc8@j+1,w,c
 10351  002516  0A80               	xorlw	128
 10352  002518  0F80               	addlw	-128
 10353  00251A  0E08               	movlw	8
 10354  00251C  B4D8               	btfsc	status,2,c
 10355  00251E  5C1B               	subwf	init_crc8@j,w,c
 10356  002520  E3EB               	bnc	l1472
 10357                           
 10358                           ;crc8.c: 34: }
 10359                           ;crc8.c: 35: crc8_table[i] = crc & 0xFF;
 10360  002522  0103               	movlb	3	; () banked
 10361  002524  0E00               	movlw	low _crc8_table
 10362  002526  241E               	addwf	init_crc8@i,w,c
 10363  002528  6ED9               	movwf	fsr2l,c
 10364  00252A  0E03               	movlw	high _crc8_table
 10365  00252C  201F               	addwfc	init_crc8@i+1,w,c
 10366  00252E  6EDA               	movwf	fsr2h,c
 10367  002530  C01D  FFDF         	movff	init_crc8@crc,indf2
 10368                           
 10369                           ; BSR set to: 3
 10370  002534  4A1E               	infsnz	init_crc8@i,f,c
 10371  002536  2A1F               	incf	init_crc8@i+1,f,c
 10372                           
 10373                           ; BSR set to: 3
 10374  002538  501F               	movf	init_crc8@i+1,w,c
 10375  00253A  0A80               	xorlw	128
 10376  00253C  0F7F               	addlw	-129
 10377  00253E  0E00               	movlw	0
 10378  002540  B4D8               	btfsc	status,2,c
 10379  002542  5C1E               	subwf	init_crc8@i,w,c
 10380  002544  E3D5               	bnc	l1470
 10381                           
 10382                           ; BSR set to: 3
 10383                           ;crc8.c: 37: }
 10384                           ;crc8.c: 38: made_table=1;
 10385  002546  0E00               	movlw	0
 10386  002548  0100               	movlb	0	; () banked
 10387  00254A  6FD2               	movwf	(_made_table+1)& (0+255),b
 10388  00254C  0E01               	movlw	1
 10389  00254E  6FD1               	movwf	_made_table& (0+255),b
 10390  002550                     l1478:
 10391                           
 10392                           ; BSR set to: 0
 10393  002550  0012               	return	
 10394  002552                     __end_of_init_crc8:
 10395                           	opt stack 0
 10396                           tblptru	equ	0xFF8
 10397                           tblptrh	equ	0xFF7
 10398                           tblptrl	equ	0xFF6
 10399                           tablat	equ	0xFF5
 10400                           prodh	equ	0xFF4
 10401                           prodl	equ	0xFF3
 10402                           intcon	equ	0xFF2
 10403                           indf0	equ	0xFEF
 10404                           postinc0	equ	0xFEE
 10405                           fsr0h	equ	0xFEA
 10406                           fsr0l	equ	0xFE9
 10407                           wreg	equ	0xFE8
 10408                           indf1	equ	0xFE7
 10409                           postinc1	equ	0xFE6
 10410                           postdec1	equ	0xFE5
 10411                           fsr1h	equ	0xFE2
 10412                           fsr1l	equ	0xFE1
 10413                           indf2	equ	0xFDF
 10414                           postinc2	equ	0xFDE
 10415                           postdec2	equ	0xFDD
 10416                           plusw2	equ	0xFDB
 10417                           fsr2h	equ	0xFDA
 10418                           fsr2l	equ	0xFD9
 10419                           status	equ	0xFD8
 10420                           
 10421 ;; *************** function _doModeVerbose *****************
 10422 ;; Defined at:
 10423 ;;		line 411 in file "main.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;		None
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  preg            2    6[BANK2 ] PTR unsigned char 
 10428 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 10429 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 10430 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 10431 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 10432 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 10433 ;;		 -> STR_30(2), NULL(0), STR_29(2), cmdbuf(80), 
 10434 ;;  preg            2    4[BANK2 ] PTR unsigned char 
 10435 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 10436 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 10437 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 10438 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 10439 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 10440 ;;		 -> STR_30(2), NULL(0), STR_29(2), cmdbuf(80), 
 10441 ;;  id              4   35[BANK2 ] unsigned long 
 10442 ;;  p               2   59[BANK2 ] PTR unsigned char 
 10443 ;;		 -> NULL(0), cmdbuf(80), 
 10444 ;;  mask_class      2   10[BANK2 ] unsigned short 
 10445 ;;  maskno          1   40[BANK2 ] unsigned char 
 10446 ;;  mask_nodeid     1   19[BANK2 ] unsigned char 
 10447 ;;  mask_type       1   18[BANK2 ] unsigned char 
 10448 ;;  mask_priorit    1   17[BANK2 ] unsigned char 
 10449 ;;  id              4    0[BANK2 ] unsigned long 
 10450 ;;  p               2   57[BANK2 ] PTR unsigned char 
 10451 ;;		 -> NULL(0), cmdbuf(80), 
 10452 ;;  filter_class    2    8[BANK2 ] unsigned short 
 10453 ;;  filterno        1   39[BANK2 ] unsigned char 
 10454 ;;  filter_nodei    1   16[BANK2 ] unsigned char 
 10455 ;;  filter_type     1   15[BANK2 ] unsigned char 
 10456 ;;  filter_prior    1   14[BANK2 ] unsigned char 
 10457 ;;  nodeid          1   47[BANK2 ] unsigned char 
 10458 ;;  p               2   52[BANK2 ] PTR unsigned char 
 10459 ;;		 -> NULL(0), cmdbuf(80), 
 10460 ;;  value           1   42[BANK2 ] unsigned char 
 10461 ;;  reg             1   34[BANK2 ] unsigned char 
 10462 ;;  page            1   33[BANK2 ] unsigned char 
 10463 ;;  nodeid          1   13[BANK2 ] unsigned char 
 10464 ;;  p               2   50[BANK2 ] PTR unsigned char 
 10465 ;;		 -> NULL(0), cmdbuf(80), 
 10466 ;;  value           1   49[BANK2 ] unsigned char 
 10467 ;;  i               1   48[BANK2 ] unsigned char 
 10468 ;;  reg             1   46[BANK2 ] unsigned char 
 10469 ;;  page            1   45[BANK2 ] unsigned char 
 10470 ;;  count           1   43[BANK2 ] unsigned char 
 10471 ;;  rv              1   32[BANK2 ] enum E15660
 10472 ;;  nodeid          1   12[BANK2 ] unsigned char 
 10473 ;;  p               2   55[BANK2 ] PTR unsigned char 
 10474 ;;		 -> NULL(0), cmdbuf(80), 
 10475 ;;  ifmode          1   54[BANK2 ] enum E16371
 10476 ;;  c               1   44[BANK2 ] unsigned char 
 10477 ;;  i               1   41[BANK2 ] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;		None               void
 10480 ;; Registers used:
 10481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10487 ;;      Params:         0       0       0       0       0       0       0
 10488 ;;      Locals:         0       0       0      61       0       0       0
 10489 ;;      Temps:          0      20       0       0       0       0       0
 10490 ;;      Totals:         0      20       0      61       0       0       0
 10491 ;;Total ram usage:       81 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    9
 10494 ;; This function calls:
 10495 ;;		_putsUSART
 10496 ;;		_printFirmwareVersion
 10497 ;;		_fifo_read
 10498 ;;		_writeEEPROM
 10499 ;;		_receivePrintEventVerbose
 10500 ;;		_stristr
 10501 ;;		_ECANSetOperationMode
 10502 ;;		_strtok
 10503 ;;		_atoi
 10504 ;;		_memset
 10505 ;;		_sendVSCPFrame
 10506 ;;		_printStatistics
 10507 ;;		_printErrors
 10508 ;;		_printHelp
 10509 ;;		_findNodes
 10510 ;;		_strcpy
 10511 ;;		_strchr
 10512 ;;		_readRegisterExtended
 10513 ;;		_sprintf
 10514 ;;		_WriteUSART
 10515 ;;		_printBinary
 10516 ;;		_writeRegisterExtended
 10517 ;;		_printNodeFirmwareVersion
 10518 ;;		_printGUID
 10519 ;;		_printMDF
 10520 ;;		_setFilter
 10521 ;;		__CANIDToRegs
 10522 ;; This function is called by:
 10523 ;;		_main
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text19
 10528  005A0A                     __ptext19:
 10529                           	opt stack 0
 10530  005A0A                     _doModeVerbose:
 10531                           	opt stack 20
 10532                           
 10533                           ;main.c: 412: uint8_t c;
 10534                           ;main.c: 413: uint8_t i;
 10535                           ;main.c: 416: if (!bSilent) {
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;incstack = 0
 10539                           ;incstack = 0
 10540  005A0A  0100               	movlb	0	; () banked
 10541  005A0C  67D6               	tstfsz	_bSilent& (0+255),b
 10542  005A0E  D002               	goto	l12694
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;main.c: 417: receivePrintEventVerbose();
 10546  005A10  EC0A  F025         	call	_receivePrintEventVerbose	;wreg free
 10547  005A14                     l12694:
 10548                           
 10549                           ;main.c: 418: }
 10550                           ;main.c: 421: (INTCONbits.GIE = 0);
 10551  005A14  9EF2               	bcf	intcon,7,c	;volatile
 10552                           
 10553                           ;main.c: 423: if (1 == fifo_read(&serialInputFifo, &c, 1)) {
 10554  005A16  0E01               	movlw	high _serialInputFifo
 10555  005A18  6E1A               	movwf	?_fifo_read+1,c
 10556  005A1A  0ECC               	movlw	low _serialInputFifo
 10557  005A1C  6E19               	movwf	?_fifo_read,c
 10558  005A1E  0102               	movlb	2	; () banked
 10559  005A20  0E02               	movlw	high doModeVerbose@c
 10560  005A22  6E1C               	movwf	?_fifo_read+3,c
 10561  005A24  0EAC               	movlw	low doModeVerbose@c
 10562  005A26  6E1B               	movwf	?_fifo_read+2,c
 10563  005A28  6A1E               	clrf	?_fifo_read+5,c
 10564  005A2A  0E01               	movlw	1
 10565  005A2C  6E1D               	movwf	?_fifo_read+4,c
 10566  005A2E  EC78  F017         	call	_fifo_read	;wreg free
 10567  005A32  0419               	decf	?_fifo_read,w,c
 10568  005A34  101A               	iorwf	?_fifo_read+1,w,c
 10569  005A36  E002 EFD1  F035    	bnz	l13292
 10570                           
 10571                           ;main.c: 426: (INTCONbits.GIE = 1);
 10572  005A3C  8EF2               	bsf	intcon,7,c	;volatile
 10573                           
 10574                           ;main.c: 429: cmdbuf[ pos ] = c;
 10575  005A3E  0E24               	movlw	low _cmdbuf
 10576  005A40  0100               	movlb	0	; () banked
 10577  005A42  25D8               	addwf	_pos& (0+255),w,b
 10578  005A44  6ED9               	movwf	fsr2l,c
 10579  005A46  6ADA               	clrf	fsr2h,c
 10580  005A48  0E01               	movlw	high _cmdbuf
 10581  005A4A  22DA               	addwfc	fsr2h,f,c
 10582  005A4C  C2AC  FFDF         	movff	doModeVerbose@c,indf2
 10583                           
 10584                           ; BSR set to: 2
 10585                           ;main.c: 430: pos++;
 10586  005A50  2BD8               	incf	_pos& (0+255),f,b
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;main.c: 432: if (pos >= 128u) {
 10590  005A52  0E7F               	movlw	127
 10591  005A54  65D8               	cpfsgt	_pos& (0+255),b
 10592  005A56  D001               	goto	l12708
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;main.c: 436: pos = 0;
 10596  005A58  6BD8               	clrf	_pos& (0+255),b
 10597  005A5A                     l12708:
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;main.c: 438: }
 10601                           ;main.c: 441: if (0x0d == c) {
 10602  005A5A  0102               	movlb	2	; () banked
 10603  005A5C  51AC               	movf	doModeVerbose@c& (0+255),w,b
 10604  005A5E  0A0D               	xorlw	13
 10605  005A60  E002 EFD1  F035    	bnz	l13292
 10606                           
 10607                           ; BSR set to: 2
 10608                           ;main.c: 443: cmdbuf[ pos ] = 0;
 10609  005A66  0E24               	movlw	low _cmdbuf
 10610  005A68  0100               	movlb	0	; () banked
 10611  005A6A  25D8               	addwf	_pos& (0+255),w,b
 10612  005A6C  6ED9               	movwf	fsr2l,c
 10613  005A6E  6ADA               	clrf	fsr2h,c
 10614  005A70  0101               	movlb	1	; () banked
 10615  005A72  0E01               	movlw	high _cmdbuf
 10616  005A74  22DA               	addwfc	fsr2h,f,c
 10617  005A76  6ADF               	clrf	indf2,c
 10618                           
 10619                           ; BSR set to: 1
 10620                           ;main.c: 446: if (cmdbuf == stristr(cmdbuf, "BOOT")) {
 10621  005A78  6E27               	movwf	?_stristr+1,c
 10622  005A7A  0E24               	movlw	low _cmdbuf
 10623  005A7C  6E26               	movwf	?_stristr,c
 10624  005A7E  0E7C               	movlw	high STR_5
 10625  005A80  6E29               	movwf	?_stristr+3,c
 10626  005A82  0ED0               	movlw	low STR_5
 10627  005A84  6E28               	movwf	?_stristr+2,c
 10628  005A86  EC8F  F013         	call	_stristr	;wreg free
 10629  005A8A  ECD3  F035         	call	PL2	;call to abstracted procedure
 10630  005A8E  E102               	bnz	u16705
 10631  005A90  5026               	movf	?_stristr,w,c
 10632  005A92  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10633  005A94                     u16705:
 10634  005A94  E10F               	bnz	l12718
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;main.c: 447: putsUSART((char *) "Will enter bootloader now...\r\n");
 10638  005A96  0E77               	movlw	high STR_6
 10639  005A98  6E1B               	movwf	?_putsUSART+1,c
 10640  005A9A  0EED               	movlw	low STR_6
 10641  005A9C  6E1A               	movwf	?_putsUSART,c
 10642  005A9E  EC2E  F011         	call	_putsUSART	;wreg free
 10643                           
 10644                           ;main.c: 448: writeEEPROM(0x00, 0xFF);
 10645  005AA2  6A1A               	clrf	?_writeEEPROM+1,c
 10646  005AA4  6A19               	clrf	?_writeEEPROM,c
 10647  005AA6  0EFF               	movlw	255
 10648  005AA8  681B               	setf	?_writeEEPROM+2,c
 10649  005AAA  ECBC  F00E         	call	_writeEEPROM	;wreg free
 10650  005AAE  00FF               	reset		;# 
 10651                           
 10652                           ;main.c: 450: }
 10653  005AB0  EFC3  F035         	goto	l13288
 10654  005AB4                     l12718:
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;main.c: 451: else if (cmdbuf == stristr(cmdbuf, "OPEN")) {
 10658  005AB4  0101               	movlb	1	; () banked
 10659  005AB6  0E01               	movlw	high _cmdbuf
 10660  005AB8  6E27               	movwf	?_stristr+1,c
 10661  005ABA  0E24               	movlw	low _cmdbuf
 10662  005ABC  6E26               	movwf	?_stristr,c
 10663  005ABE  0E7C               	movlw	high STR_7
 10664  005AC0  6E29               	movwf	?_stristr+3,c
 10665  005AC2  0EB7               	movlw	low STR_7
 10666  005AC4  6E28               	movwf	?_stristr+2,c
 10667  005AC6  EC8F  F013         	call	_stristr	;wreg free
 10668  005ACA  ECD3  F035         	call	PL2	;call to abstracted procedure
 10669  005ACE  E102               	bnz	u16715
 10670  005AD0  5026               	movf	?_stristr,w,c
 10671  005AD2  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10672  005AD4                     u16715:
 10673  005AD4  E10C               	bnz	l12726
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;main.c: 452: bSilent = 0;
 10677  005AD6  6BD6               	clrf	_bSilent& (0+255),b
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;main.c: 453: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 10681  005AD8  0E00               	movlw	0
 10682  005ADA  EC83  F00E         	call	_ECANSetOperationMode
 10683                           
 10684                           ;main.c: 454: putsUSART((char *) "+OK\r\n");
 10685  005ADE  0E7C               	movlw	high STR_8
 10686  005AE0  6E1B               	movwf	?_putsUSART+1,c
 10687  005AE2  0E80               	movlw	low STR_8
 10688  005AE4  6E1A               	movwf	?_putsUSART,c
 10689  005AE6  EC2E  F011         	call	_putsUSART	;wreg free
 10690                           
 10691                           ;main.c: 455: }
 10692  005AEA  EFC3  F035         	goto	l13288
 10693  005AEE                     l12726:
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;main.c: 456: else if (cmdbuf == stristr(cmdbuf, "SILENT")) {
 10697  005AEE  0101               	movlb	1	; () banked
 10698  005AF0  0E01               	movlw	high _cmdbuf
 10699  005AF2  6E27               	movwf	?_stristr+1,c
 10700  005AF4  0E24               	movlw	low _cmdbuf
 10701  005AF6  6E26               	movwf	?_stristr,c
 10702  005AF8  0E7C               	movlw	high STR_9
 10703  005AFA  6E29               	movwf	?_stristr+3,c
 10704  005AFC  0E5E               	movlw	low STR_9
 10705  005AFE  6E28               	movwf	?_stristr+2,c
 10706  005B00  EC8F  F013         	call	_stristr	;wreg free
 10707  005B04  ECD3  F035         	call	PL2	;call to abstracted procedure
 10708  005B08  E102               	bnz	u16725
 10709  005B0A  5026               	movf	?_stristr,w,c
 10710  005B0C  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10711  005B0E                     u16725:
 10712  005B0E  E10D               	bnz	l12734
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;main.c: 457: bSilent = 1;
 10716  005B10  0E01               	movlw	1
 10717  005B12  6FD6               	movwf	_bSilent& (0+255),b
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;main.c: 458: ECANSetOperationMode(ECAN_OP_MODE_NORMAL);
 10721  005B14  0E00               	movlw	0
 10722  005B16  EC83  F00E         	call	_ECANSetOperationMode
 10723                           
 10724                           ;main.c: 459: putsUSART((char *) "+OK\r\n");
 10725  005B1A  0E7C               	movlw	high STR_8
 10726  005B1C  6E1B               	movwf	?_putsUSART+1,c
 10727  005B1E  0E80               	movlw	low STR_8
 10728  005B20  6E1A               	movwf	?_putsUSART,c
 10729  005B22  EC2E  F011         	call	_putsUSART	;wreg free
 10730                           
 10731                           ;main.c: 460: }
 10732  005B26  EFC3  F035         	goto	l13288
 10733  005B2A                     l12734:
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;main.c: 461: else if (cmdbuf == stristr(cmdbuf, "CLOSE")) {
 10737  005B2A  0101               	movlb	1	; () banked
 10738  005B2C  0E01               	movlw	high _cmdbuf
 10739  005B2E  6E27               	movwf	?_stristr+1,c
 10740  005B30  0E24               	movlw	low _cmdbuf
 10741  005B32  6E26               	movwf	?_stristr,c
 10742  005B34  0E7C               	movlw	high STR_11
 10743  005B36  6E29               	movwf	?_stristr+3,c
 10744  005B38  0E92               	movlw	low STR_11
 10745  005B3A  6E28               	movwf	?_stristr+2,c
 10746  005B3C  EC8F  F013         	call	_stristr	;wreg free
 10747  005B40  ECD3  F035         	call	PL2	;call to abstracted procedure
 10748  005B44  E102               	bnz	u16735
 10749  005B46  5026               	movf	?_stristr,w,c
 10750  005B48  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10751  005B4A                     u16735:
 10752  005B4A  E10D               	bnz	l12742
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;main.c: 462: bSilent = 1;
 10756  005B4C  0E01               	movlw	1
 10757  005B4E  6FD6               	movwf	_bSilent& (0+255),b
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;main.c: 463: ECANSetOperationMode(0x20);
 10761  005B50  0E20               	movlw	32
 10762  005B52  EC83  F00E         	call	_ECANSetOperationMode
 10763                           
 10764                           ;main.c: 464: putsUSART((char *) "+OK\r\n");
 10765  005B56  0E7C               	movlw	high STR_8
 10766  005B58  6E1B               	movwf	?_putsUSART+1,c
 10767  005B5A  0E80               	movlw	low STR_8
 10768  005B5C  6E1A               	movwf	?_putsUSART,c
 10769  005B5E  EC2E  F011         	call	_putsUSART	;wreg free
 10770                           
 10771                           ;main.c: 465: }
 10772  005B62  EFC3  F035         	goto	l13288
 10773  005B66                     l12742:
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;main.c: 466: else if (cmdbuf == stristr(cmdbuf, "LOOPBACK")) {
 10777  005B66  0101               	movlb	1	; () banked
 10778  005B68  0E01               	movlw	high _cmdbuf
 10779  005B6A  6E27               	movwf	?_stristr+1,c
 10780  005B6C  0E24               	movlw	low _cmdbuf
 10781  005B6E  6E26               	movwf	?_stristr,c
 10782  005B70  0E7B               	movlw	high STR_13
 10783  005B72  6E29               	movwf	?_stristr+3,c
 10784  005B74  0ECD               	movlw	low STR_13
 10785  005B76  6E28               	movwf	?_stristr+2,c
 10786  005B78  EC8F  F013         	call	_stristr	;wreg free
 10787  005B7C  ECD3  F035         	call	PL2	;call to abstracted procedure
 10788  005B80  E102               	bnz	u16745
 10789  005B82  5026               	movf	?_stristr,w,c
 10790  005B84  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10791  005B86                     u16745:
 10792  005B86  E10C               	bnz	l12750
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;main.c: 467: bSilent = 0;
 10796  005B88  6BD6               	clrf	_bSilent& (0+255),b
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;main.c: 468: ECANSetOperationMode(ECAN_OP_MODE_LOOP);
 10800  005B8A  0E40               	movlw	64
 10801  005B8C  EC83  F00E         	call	_ECANSetOperationMode
 10802                           
 10803                           ;main.c: 469: putsUSART((char *) "+OK\r\n");
 10804  005B90  0E7C               	movlw	high STR_8
 10805  005B92  6E1B               	movwf	?_putsUSART+1,c
 10806  005B94  0E80               	movlw	low STR_8
 10807  005B96  6E1A               	movwf	?_putsUSART,c
 10808  005B98  EC2E  F011         	call	_putsUSART	;wreg free
 10809                           
 10810                           ;main.c: 470: }
 10811  005B9C  EFC3  F035         	goto	l13288
 10812  005BA0                     l12750:
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;main.c: 471: else if (cmdbuf == stristr(cmdbuf, "LISTEN")) {
 10816  005BA0  0101               	movlb	1	; () banked
 10817  005BA2  0E01               	movlw	high _cmdbuf
 10818  005BA4  6E27               	movwf	?_stristr+1,c
 10819  005BA6  0E24               	movlw	low _cmdbuf
 10820  005BA8  6E26               	movwf	?_stristr,c
 10821  005BAA  0E7C               	movlw	high STR_15
 10822  005BAC  6E29               	movwf	?_stristr+3,c
 10823  005BAE  0E50               	movlw	low STR_15
 10824  005BB0  6E28               	movwf	?_stristr+2,c
 10825  005BB2  EC8F  F013         	call	_stristr	;wreg free
 10826  005BB6  ECD3  F035         	call	PL2	;call to abstracted procedure
 10827  005BBA  E102               	bnz	u16755
 10828  005BBC  5026               	movf	?_stristr,w,c
 10829  005BBE  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10830  005BC0                     u16755:
 10831  005BC0  E10C               	bnz	l12758
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;main.c: 472: bSilent = 0;
 10835  005BC2  6BD6               	clrf	_bSilent& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;main.c: 473: ECANSetOperationMode(ECAN_OP_MODE_LISTEN);
 10839  005BC4  0E60               	movlw	96
 10840  005BC6  EC83  F00E         	call	_ECANSetOperationMode
 10841                           
 10842                           ;main.c: 474: putsUSART((char *) "+OK\r\n");
 10843  005BCA  0E7C               	movlw	high STR_8
 10844  005BCC  6E1B               	movwf	?_putsUSART+1,c
 10845  005BCE  0E80               	movlw	low STR_8
 10846  005BD0  6E1A               	movwf	?_putsUSART,c
 10847  005BD2  EC2E  F011         	call	_putsUSART	;wreg free
 10848                           
 10849                           ;main.c: 475: }
 10850  005BD6  EFC3  F035         	goto	l13288
 10851  005BDA                     l12758:
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;main.c: 477: else if (cmdbuf == stristr(cmdbuf, "VERSION")) {
 10855  005BDA  0101               	movlb	1	; () banked
 10856  005BDC  0E01               	movlw	high _cmdbuf
 10857  005BDE  6E27               	movwf	?_stristr+1,c
 10858  005BE0  0E24               	movlw	low _cmdbuf
 10859  005BE2  6E26               	movwf	?_stristr,c
 10860  005BE4  0E7C               	movlw	high STR_17
 10861  005BE6  6E29               	movwf	?_stristr+3,c
 10862  005BE8  0E0E               	movlw	low STR_17
 10863  005BEA  6E28               	movwf	?_stristr+2,c
 10864  005BEC  EC8F  F013         	call	_stristr	;wreg free
 10865  005BF0  ECD3  F035         	call	PL2	;call to abstracted procedure
 10866  005BF4  E102               	bnz	u16765
 10867  005BF6  5026               	movf	?_stristr,w,c
 10868  005BF8  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10869  005BFA                     u16765:
 10870  005BFA  E10A               	bnz	l12764
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;main.c: 478: printFirmwareVersion();
 10874  005BFC  EC93  F014         	call	_printFirmwareVersion	;wreg free
 10875                           
 10876                           ;main.c: 479: putsUSART((char *) "+OK\r\n");
 10877  005C00  0E7C               	movlw	high STR_8
 10878  005C02  6E1B               	movwf	?_putsUSART+1,c
 10879  005C04  0E80               	movlw	low STR_8
 10880  005C06  6E1A               	movwf	?_putsUSART,c
 10881  005C08  EC2E  F011         	call	_putsUSART	;wreg free
 10882                           
 10883                           ;main.c: 480: }
 10884  005C0C  EFC3  F035         	goto	l13288
 10885  005C10                     l12764:
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;main.c: 481: else if (cmdbuf == stristr(cmdbuf, "IFMODE")) {
 10889  005C10  0101               	movlb	1	; () banked
 10890  005C12  0E01               	movlw	high _cmdbuf
 10891  005C14  6E27               	movwf	?_stristr+1,c
 10892  005C16  0E24               	movlw	low _cmdbuf
 10893  005C18  6E26               	movwf	?_stristr,c
 10894  005C1A  0E7C               	movlw	high STR_19
 10895  005C1C  6E29               	movwf	?_stristr+3,c
 10896  005C1E  0E49               	movlw	low STR_19
 10897  005C20  6E28               	movwf	?_stristr+2,c
 10898  005C22  EC8F  F013         	call	_stristr	;wreg free
 10899  005C26  ECD3  F035         	call	PL2	;call to abstracted procedure
 10900  005C2A  E102               	bnz	u16775
 10901  005C2C  5026               	movf	?_stristr,w,c
 10902  005C2E  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 10903  005C30                     u16775:
 10904  005C30  E161               	bnz	l12800
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;main.c: 482: ECAN_OP_MODE ifmode = (CANCON & ECAN_OP_MODE_BITS);
 10908  005C32  506F               	movf	3951,w,c	;volatile
 10909  005C34  0BE0               	andlw	224
 10910  005C36  0102               	movlb	2	; () banked
 10911  005C38  6FB6               	movwf	doModeVerbose@ifmode& (0+255),b
 10912                           
 10913                           ; BSR set to: 2
 10914                           ;main.c: 483: if ((ECAN_OP_MODE_NORMAL == ifmode) & !bSilent) {
 10915  005C3A  67B6               	tstfsz	doModeVerbose@ifmode& (0+255),b
 10916  005C3C  D00B               	goto	l12774
 10917                           
 10918                           ; BSR set to: 2
 10919  005C3E  0100               	movlb	0	; () banked
 10920  005C40  67D6               	tstfsz	_bSilent& (0+255),b
 10921  005C42  D008               	goto	l12774
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;main.c: 484: putsUSART((char *) "+OK - Normal mode\r\n");
 10925  005C44  0E7A               	movlw	high STR_20
 10926  005C46  6E1B               	movwf	?_putsUSART+1,c
 10927  005C48  0E83               	movlw	low STR_20
 10928  005C4A  6E1A               	movwf	?_putsUSART,c
 10929  005C4C  EC2E  F011         	call	_putsUSART	;wreg free
 10930                           
 10931                           ;main.c: 485: } else if ((ECAN_OP_MODE_NORMAL == ifmode) & bSilent) {
 10932  005C50  EFC3  F035         	goto	l13288
 10933  005C54                     l12774:
 10934  005C54  0102               	movlb	2	; () banked
 10935  005C56  51B6               	movf	doModeVerbose@ifmode& (0+255),w,b
 10936  005C58  0E01               	movlw	1
 10937  005C5A  A4D8               	btfss	status,2,c
 10938  005C5C  0E00               	movlw	0
 10939  005C5E  0100               	movlb	0	; () banked
 10940  005C60  15D6               	andwf	_bSilent& (0+255),w,b
 10941  005C62  E008               	bz	l12778
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;main.c: 486: putsUSART((char *) "+OK - Silent mode\r\n");
 10945  005C64  0E7A               	movlw	high STR_21
 10946  005C66  6E1B               	movwf	?_putsUSART+1,c
 10947  005C68  0E97               	movlw	low STR_21
 10948  005C6A  6E1A               	movwf	?_putsUSART,c
 10949  005C6C  EC2E  F011         	call	_putsUSART	;wreg free
 10950                           
 10951                           ;main.c: 487: } else if (ECAN_OP_MODE_SLEEP == ifmode) {
 10952  005C70  EFC3  F035         	goto	l13288
 10953  005C74                     l12778:
 10954                           
 10955                           ; BSR set to: 0
 10956  005C74  0102               	movlb	2	; () banked
 10957  005C76  51B6               	movf	doModeVerbose@ifmode& (0+255),w,b
 10958  005C78  0A20               	xorlw	32
 10959  005C7A  E108               	bnz	l12782
 10960                           
 10961                           ; BSR set to: 2
 10962                           ;main.c: 488: putsUSART((char *) "+OK - Sleep mode\r\n");
 10963  005C7C  0E7A               	movlw	high STR_22
 10964  005C7E  6E1B               	movwf	?_putsUSART+1,c
 10965  005C80  0ED3               	movlw	low STR_22
 10966  005C82  6E1A               	movwf	?_putsUSART,c
 10967  005C84  EC2E  F011         	call	_putsUSART	;wreg free
 10968                           
 10969                           ;main.c: 489: } else if (ECAN_OP_MODE_LOOP == ifmode) {
 10970  005C88  EFC3  F035         	goto	l13288
 10971  005C8C                     l12782:
 10972                           
 10973                           ; BSR set to: 2
 10974  005C8C  51B6               	movf	doModeVerbose@ifmode& (0+255),w,b
 10975  005C8E  0A40               	xorlw	64
 10976  005C90  E108               	bnz	l12786
 10977                           
 10978                           ; BSR set to: 2
 10979                           ;main.c: 490: putsUSART((char *) "+OK - Loopback mode\r\n");
 10980  005C92  0E7A               	movlw	high STR_23
 10981  005C94  6E1B               	movwf	?_putsUSART+1,c
 10982  005C96  0E06               	movlw	low STR_23
 10983  005C98  6E1A               	movwf	?_putsUSART,c
 10984  005C9A  EC2E  F011         	call	_putsUSART	;wreg free
 10985                           
 10986                           ;main.c: 491: } else if (ECAN_OP_MODE_LISTEN == ifmode) {
 10987  005C9E  EFC3  F035         	goto	l13288
 10988  005CA2                     l12786:
 10989                           
 10990                           ; BSR set to: 2
 10991  005CA2  51B6               	movf	doModeVerbose@ifmode& (0+255),w,b
 10992  005CA4  0A60               	xorlw	96
 10993  005CA6  E108               	bnz	l12790
 10994                           
 10995                           ; BSR set to: 2
 10996                           ;main.c: 492: putsUSART((char *) "+OK - Listen only mode\r\n");
 10997  005CA8  0E78               	movlw	high STR_24
 10998  005CAA  6E1B               	movwf	?_putsUSART+1,c
 10999  005CAC  0ECF               	movlw	low STR_24
 11000  005CAE  6E1A               	movwf	?_putsUSART,c
 11001  005CB0  EC2E  F011         	call	_putsUSART	;wreg free
 11002                           
 11003                           ;main.c: 493: } else if (ECAN_OP_MODE_CONFIG == ifmode) {
 11004  005CB4  EFC3  F035         	goto	l13288
 11005  005CB8                     l12790:
 11006                           
 11007                           ; BSR set to: 2
 11008  005CB8  51B6               	movf	doModeVerbose@ifmode& (0+255),w,b
 11009  005CBA  0A80               	xorlw	128
 11010  005CBC  E108               	bnz	l12794
 11011                           
 11012                           ; BSR set to: 2
 11013                           ;main.c: 494: putsUSART((char *) "+OK - Closed mode\r\n");
 11014  005CBE  0E7A               	movlw	high STR_25
 11015  005CC0  6E1B               	movwf	?_putsUSART+1,c
 11016  005CC2  0E6F               	movlw	low STR_25
 11017  005CC4  6E1A               	movwf	?_putsUSART,c
 11018  005CC6  EC2E  F011         	call	_putsUSART	;wreg free
 11019                           
 11020                           ;main.c: 495: } else if (ECAN_OP_MODE_BITS == ifmode) {
 11021  005CCA  EFC3  F035         	goto	l13288
 11022  005CCE                     l12794:
 11023                           
 11024                           ; BSR set to: 2
 11025  005CCE  51B6               	movf	doModeVerbose@ifmode& (0+255),w,b
 11026  005CD0  0AE0               	xorlw	224
 11027  005CD2  E108               	bnz	l12798
 11028                           
 11029                           ; BSR set to: 2
 11030                           ;main.c: 496: putsUSART((char *) "+OK - Bits mode\r\n");
 11031  005CD4  0E7A               	movlw	high STR_26
 11032  005CD6  6E1B               	movwf	?_putsUSART+1,c
 11033  005CD8  0EE6               	movlw	low STR_26
 11034  005CDA  6E1A               	movwf	?_putsUSART,c
 11035  005CDC  EC2E  F011         	call	_putsUSART	;wreg free
 11036                           
 11037                           ;main.c: 497: } else {
 11038  005CE0  EFC3  F035         	goto	l13288
 11039  005CE4                     l12798:
 11040                           
 11041                           ; BSR set to: 2
 11042                           ;main.c: 498: putsUSART((char *) "-ERROR - Unknown mode\r\n");
 11043  005CE4  0E79               	movlw	high STR_27
 11044  005CE6  6E1B               	movwf	?_putsUSART+1,c
 11045  005CE8  0E49               	movlw	low STR_27
 11046  005CEA  6E1A               	movwf	?_putsUSART,c
 11047  005CEC  EC2E  F011         	call	_putsUSART	;wreg free
 11048  005CF0  EFC3  F035         	goto	l13288
 11049  005CF4                     l12800:
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;main.c: 502: else if (cmdbuf == stristr(cmdbuf, "TX")) {
 11053  005CF4  0101               	movlb	1	; () banked
 11054  005CF6  0E01               	movlw	high _cmdbuf
 11055  005CF8  6E27               	movwf	?_stristr+1,c
 11056  005CFA  0E24               	movlw	low _cmdbuf
 11057  005CFC  6E26               	movwf	?_stristr,c
 11058  005CFE  0E7C               	movlw	high STR_28
 11059  005D00  6E29               	movwf	?_stristr+3,c
 11060  005D02  0EEB               	movlw	low STR_28
 11061  005D04  6E28               	movwf	?_stristr+2,c
 11062  005D06  EC8F  F013         	call	_stristr	;wreg free
 11063  005D0A  ECD3  F035         	call	PL2	;call to abstracted procedure
 11064  005D0E  E102               	bnz	u16875
 11065  005D10  5026               	movf	?_stristr,w,c
 11066  005D12  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11067  005D14                     u16875:
 11068  005D14  E001 D0D9          	bnz	l12854
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;main.c: 504: char *p = strtok(cmdbuf, ",");
 11072  005D18  EC21  F036         	call	PL30	;call to abstracted procedure
 11073  005D1C  ECDB  F014         	call	_strtok	;wreg free
 11074  005D20  C025  F2B7         	movff	?_strtok,doModeVerbose@p
 11075  005D24  C026  F2B8         	movff	?_strtok+1,doModeVerbose@p+1
 11076                           
 11077                           ;main.c: 507: vscpPriority = 3;
 11078  005D28  0E03               	movlw	3
 11079  005D2A  0100               	movlb	0	; () banked
 11080  005D2C  6FDD               	movwf	_vscpPriority& (0+255),b
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;main.c: 508: if ((0) != p) {
 11084  005D2E  0102               	movlb	2	; () banked
 11085  005D30  51B8               	movf	(doModeVerbose@p+1)& (0+255),w,b
 11086  005D32  11B7               	iorwf	doModeVerbose@p& (0+255),w,b
 11087  005D34  E009               	bz	l12810
 11088                           
 11089                           ; BSR set to: 2
 11090                           ;main.c: 509: vscpPriority = atoi(p);
 11091  005D36  C2B7  F01F         	movff	doModeVerbose@p,?_atoi
 11092  005D3A  C2B8  F020         	movff	doModeVerbose@p+1,?_atoi+1
 11093  005D3E  EC54  F01B         	call	_atoi	;wreg free
 11094  005D42  501F               	movf	?_atoi,w,c
 11095  005D44  0100               	movlb	0	; () banked
 11096  005D46  6FDD               	movwf	_vscpPriority& (0+255),b
 11097  005D48                     l12810:
 11098                           
 11099                           ;main.c: 510: }
 11100                           ;main.c: 513: vscpClass = 0;
 11101  005D48  0100               	movlb	0	; () banked
 11102  005D4A  6BDA               	clrf	_vscpClass& (0+255),b
 11103  005D4C  6BDB               	clrf	(_vscpClass+1)& (0+255),b
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;main.c: 514: if ((0) != (p = strtok((0), ","))) {
 11107  005D4E  ECDA  F035         	call	PL6	;call to abstracted procedure
 11108  005D52  ECDB  F014         	call	_strtok	;wreg free
 11109  005D56  C025  F2B7         	movff	?_strtok,doModeVerbose@p
 11110  005D5A  C026  F2B8         	movff	?_strtok+1,doModeVerbose@p+1
 11111  005D5E  0102               	movlb	2	; () banked
 11112  005D60  51B8               	movf	(doModeVerbose@p+1)& (0+255),w,b
 11113  005D62  11B7               	iorwf	doModeVerbose@p& (0+255),w,b
 11114  005D64  E00A               	bz	l12816
 11115                           
 11116                           ; BSR set to: 2
 11117                           ;main.c: 515: vscpClass = atoi(p);
 11118  005D66  C2B7  F01F         	movff	doModeVerbose@p,?_atoi
 11119  005D6A  C2B8  F020         	movff	doModeVerbose@p+1,?_atoi+1
 11120  005D6E  EC54  F01B         	call	_atoi	;wreg free
 11121  005D72  C01F  F0DA         	movff	?_atoi,_vscpClass
 11122  005D76  C020  F0DB         	movff	?_atoi+1,_vscpClass+1
 11123  005D7A                     l12816:
 11124                           
 11125                           ;main.c: 516: }
 11126                           ;main.c: 519: vscpType = 0;
 11127  005D7A  0100               	movlb	0	; () banked
 11128  005D7C  6BDF               	clrf	_vscpType& (0+255),b
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;main.c: 520: if ((0) != (p = strtok((0), ","))) {
 11132  005D7E  ECDA  F035         	call	PL6	;call to abstracted procedure
 11133  005D82  ECDB  F014         	call	_strtok	;wreg free
 11134  005D86  C025  F2B7         	movff	?_strtok,doModeVerbose@p
 11135  005D8A  C026  F2B8         	movff	?_strtok+1,doModeVerbose@p+1
 11136  005D8E  0102               	movlb	2	; () banked
 11137  005D90  51B8               	movf	(doModeVerbose@p+1)& (0+255),w,b
 11138  005D92  11B7               	iorwf	doModeVerbose@p& (0+255),w,b
 11139  005D94  E009               	bz	l12822
 11140                           
 11141                           ; BSR set to: 2
 11142                           ;main.c: 521: vscpType = atoi(p);
 11143  005D96  C2B7  F01F         	movff	doModeVerbose@p,?_atoi
 11144  005D9A  C2B8  F020         	movff	doModeVerbose@p+1,?_atoi+1
 11145  005D9E  EC54  F01B         	call	_atoi	;wreg free
 11146  005DA2  501F               	movf	?_atoi,w,c
 11147  005DA4  0100               	movlb	0	; () banked
 11148  005DA6  6FDF               	movwf	_vscpType& (0+255),b
 11149  005DA8                     l12822:
 11150                           
 11151                           ;main.c: 522: }
 11152                           ;main.c: 525: vscpNodeId = 0;
 11153  005DA8  0100               	movlb	0	; () banked
 11154  005DAA  6BDC               	clrf	_vscpNodeId& (0+255),b
 11155                           
 11156                           ; BSR set to: 0
 11157                           ;main.c: 526: if ((0) != (p = strtok((0), ","))) {
 11158  005DAC  ECDA  F035         	call	PL6	;call to abstracted procedure
 11159  005DB0  ECDB  F014         	call	_strtok	;wreg free
 11160  005DB4  C025  F2B7         	movff	?_strtok,doModeVerbose@p
 11161  005DB8  C026  F2B8         	movff	?_strtok+1,doModeVerbose@p+1
 11162  005DBC  0102               	movlb	2	; () banked
 11163  005DBE  51B8               	movf	(doModeVerbose@p+1)& (0+255),w,b
 11164  005DC0  11B7               	iorwf	doModeVerbose@p& (0+255),w,b
 11165  005DC2  E009               	bz	l12828
 11166                           
 11167                           ; BSR set to: 2
 11168                           ;main.c: 527: vscpNodeId = atoi(p);
 11169  005DC4  C2B7  F01F         	movff	doModeVerbose@p,?_atoi
 11170  005DC8  C2B8  F020         	movff	doModeVerbose@p+1,?_atoi+1
 11171  005DCC  EC54  F01B         	call	_atoi	;wreg free
 11172  005DD0  501F               	movf	?_atoi,w,c
 11173  005DD2  0100               	movlb	0	; () banked
 11174  005DD4  6FDC               	movwf	_vscpNodeId& (0+255),b
 11175  005DD6                     l12828:
 11176                           
 11177                           ;main.c: 528: }
 11178                           ;main.c: 531: vscpSize = 0;
 11179  005DD6  0100               	movlb	0	; () banked
 11180  005DD8  6BDE               	clrf	_vscpSize& (0+255),b
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;main.c: 532: if ((0) != (p = strtok((0), ","))) {
 11184  005DDA  ECDA  F035         	call	PL6	;call to abstracted procedure
 11185  005DDE  ECDB  F014         	call	_strtok	;wreg free
 11186  005DE2  C025  F2B7         	movff	?_strtok,doModeVerbose@p
 11187  005DE6  C026  F2B8         	movff	?_strtok+1,doModeVerbose@p+1
 11188  005DEA  0102               	movlb	2	; () banked
 11189  005DEC  51B8               	movf	(doModeVerbose@p+1)& (0+255),w,b
 11190  005DEE  11B7               	iorwf	doModeVerbose@p& (0+255),w,b
 11191  005DF0  E009               	bz	l12834
 11192                           
 11193                           ; BSR set to: 2
 11194                           ;main.c: 533: vscpSize = atoi(p);
 11195  005DF2  C2B7  F01F         	movff	doModeVerbose@p,?_atoi
 11196  005DF6  C2B8  F020         	movff	doModeVerbose@p+1,?_atoi+1
 11197  005DFA  EC54  F01B         	call	_atoi	;wreg free
 11198  005DFE  501F               	movf	?_atoi,w,c
 11199  005E00  0100               	movlb	0	; () banked
 11200  005E02  6FDE               	movwf	_vscpSize& (0+255),b
 11201  005E04                     l12834:
 11202                           
 11203                           ;main.c: 534: }
 11204                           ;main.c: 536: memset(vscpData, 0, 8);
 11205  005E04  0E40               	movlw	low _vscpData
 11206  005E06  6E19               	movwf	?_memset,c
 11207  005E08  0E00               	movlw	high _vscpData
 11208  005E0A  6E1A               	movwf	?_memset+1,c
 11209  005E0C  0E0F               	movlw	15
 11210  005E0E  6E1A               	movwf	?_memset+1,c
 11211  005E10  0E5F               	movlw	__accesstop+-1
 11212  005E12  6419               	cpfsgt	?_memset,c
 11213  005E14  6A1A               	clrf	?_memset+1,c
 11214  005E16  6A1C               	clrf	?_memset+3,c
 11215  005E18  6A1B               	clrf	?_memset+2,c
 11216  005E1A  6A1E               	clrf	?_memset+5,c
 11217  005E1C  0E08               	movlw	8
 11218  005E1E  6E1D               	movwf	?_memset+4,c
 11219  005E20  ECCF  F00E         	call	_memset	;wreg free
 11220                           
 11221                           ;main.c: 537: for (i = 0; i < vscpSize; i++) {
 11222  005E24  0102               	movlb	2	; () banked
 11223  005E26  6BA9               	clrf	doModeVerbose@i& (0+255),b
 11224  005E28  D01A               	goto	l12844
 11225  005E2A                     l12838:
 11226                           
 11227                           ; BSR set to: 2
 11228                           ;main.c: 538: if ((0) != (p = strtok((0), ","))) {
 11229  005E2A  ECDA  F035         	call	PL6	;call to abstracted procedure
 11230  005E2E  ECDB  F014         	call	_strtok	;wreg free
 11231  005E32  C025  F2B7         	movff	?_strtok,doModeVerbose@p
 11232  005E36  C026  F2B8         	movff	?_strtok+1,doModeVerbose@p+1
 11233  005E3A  0102               	movlb	2	; () banked
 11234  005E3C  51B8               	movf	(doModeVerbose@p+1)& (0+255),w,b
 11235  005E3E  11B7               	iorwf	doModeVerbose@p& (0+255),w,b
 11236  005E40  E013               	bz	l12846
 11237                           
 11238                           ; BSR set to: 2
 11239                           ;main.c: 539: vscpData[ i ] = atoi(p);
 11240  005E42  51A9               	movf	doModeVerbose@i& (0+255),w,b
 11241  005E44  0F40               	addlw	low _vscpData
 11242  005E46  6ED9               	movwf	fsr2l,c
 11243  005E48  6ADA               	clrf	fsr2h,c
 11244  005E4A  C2B7  F01F         	movff	doModeVerbose@p,?_atoi
 11245  005E4E  C2B8  F020         	movff	doModeVerbose@p+1,?_atoi+1
 11246  005E52  EC54  F01B         	call	_atoi	;wreg free
 11247  005E56  501F               	movf	?_atoi,w,c
 11248  005E58  6EDF               	movwf	indf2,c
 11249                           
 11250                           ;main.c: 540: } else {
 11251  005E5A  0102               	movlb	2	; () banked
 11252  005E5C  2BA9               	incf	doModeVerbose@i& (0+255),f,b
 11253  005E5E                     l12844:
 11254                           
 11255                           ; BSR set to: 2
 11256  005E5E  0100               	movlb	0	; () banked
 11257  005E60  51DE               	movf	_vscpSize& (0+255),w,b
 11258  005E62  0102               	movlb	2	; () banked
 11259  005E64  5DA9               	subwf	doModeVerbose@i& (0+255),w,b
 11260  005E66  E3E1               	bnc	l12838
 11261  005E68                     l12846:
 11262                           
 11263                           ; BSR set to: 2
 11264                           ;main.c: 542: }
 11265                           ;main.c: 543: }
 11266                           ;main.c: 545: if (sendVSCPFrame(vscpClass,
 11267                           ;main.c: 546: vscpType,
 11268                           ;main.c: 547: vscpNodeId,
 11269                           ;main.c: 548: vscpPriority,
 11270                           ;main.c: 549: vscpSize,
 11271                           ;main.c: 550: vscpData)) {
 11272  005E68  C0DA  F083         	movff	_vscpClass,?_sendVSCPFrame
 11273  005E6C  C0DB  F084         	movff	_vscpClass+1,?_sendVSCPFrame+1
 11274  005E70  C0DF  F085         	movff	_vscpType,?_sendVSCPFrame+2
 11275  005E74  C0DC  F086         	movff	_vscpNodeId,?_sendVSCPFrame+3
 11276  005E78  C0DD  F087         	movff	_vscpPriority,?_sendVSCPFrame+4
 11277  005E7C  C0DE  F088         	movff	_vscpSize,?_sendVSCPFrame+5
 11278  005E80  0E40               	movlw	low _vscpData
 11279  005E82  0100               	movlb	0	; () banked
 11280  005E84  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 11281  005E86  ECBA  F016         	call	_sendVSCPFrame	;wreg free
 11282  005E8A  0900               	iorlw	0
 11283  005E8C  E016               	bz	l12852
 11284                           
 11285                           ;main.c: 552: cntTxFrames++;
 11286  005E8E  0101               	movlb	1	; () banked
 11287  005E90  2B14               	incf	_cntTxFrames& (0+255),f,b
 11288  005E92  0E00               	movlw	0
 11289  005E94  2315               	addwfc	(_cntTxFrames+1)& (0+255),f,b
 11290  005E96  2316               	addwfc	(_cntTxFrames+2)& (0+255),f,b
 11291  005E98  2317               	addwfc	(_cntTxFrames+3)& (0+255),f,b
 11292                           
 11293                           ;main.c: 553: cntTxBytes += vscpSize;
 11294  005E9A  0100               	movlb	0	; () banked
 11295  005E9C  51DE               	movf	_vscpSize& (0+255),w,b
 11296  005E9E  0101               	movlb	1	; () banked
 11297  005EA0  2710               	addwf	_cntTxBytes& (0+255),f,b
 11298  005EA2  0E00               	movlw	0
 11299  005EA4  2311               	addwfc	(_cntTxBytes+1)& (0+255),f,b
 11300  005EA6  2312               	addwfc	(_cntTxBytes+2)& (0+255),f,b
 11301  005EA8  2313               	addwfc	(_cntTxBytes+3)& (0+255),f,b
 11302                           
 11303                           ; BSR set to: 1
 11304                           ;main.c: 554: putsUSART((char *) "+OK\r\n");
 11305  005EAA  0E7C               	movlw	high STR_8
 11306  005EAC  6E1B               	movwf	?_putsUSART+1,c
 11307  005EAE  0E80               	movlw	low STR_8
 11308  005EB0  6E1A               	movwf	?_putsUSART,c
 11309  005EB2  EC2E  F011         	call	_putsUSART	;wreg free
 11310                           
 11311                           ;main.c: 555: } else {
 11312  005EB6  EFC3  F035         	goto	l13288
 11313  005EBA                     l12852:
 11314                           
 11315                           ;main.c: 556: putsUSART((char *) "-ERROR - Failed to send event.\r\n");
 11316  005EBA  0E77               	movlw	high STR_36
 11317  005EBC  6E1B               	movwf	?_putsUSART+1,c
 11318  005EBE  0E49               	movlw	low STR_36
 11319  005EC0  6E1A               	movwf	?_putsUSART,c
 11320  005EC2  EC2E  F011         	call	_putsUSART	;wreg free
 11321  005EC6  EFC3  F035         	goto	l13288
 11322  005ECA                     l12854:
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;main.c: 559: else if (cmdbuf == stristr(cmdbuf, "RX")) {
 11326  005ECA  0101               	movlb	1	; () banked
 11327  005ECC  0E01               	movlw	high _cmdbuf
 11328  005ECE  6E27               	movwf	?_stristr+1,c
 11329  005ED0  0E24               	movlw	low _cmdbuf
 11330  005ED2  6E26               	movwf	?_stristr,c
 11331  005ED4  0E7C               	movlw	high STR_37
 11332  005ED6  6E29               	movwf	?_stristr+3,c
 11333  005ED8  0EE8               	movlw	low STR_37
 11334  005EDA  6E28               	movwf	?_stristr+2,c
 11335  005EDC  EC8F  F013         	call	_stristr	;wreg free
 11336  005EE0  ECD3  F035         	call	PL2	;call to abstracted procedure
 11337  005EE4  E102               	bnz	u16965
 11338  005EE6  5026               	movf	?_stristr,w,c
 11339  005EE8  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11340  005EEA                     u16965:
 11341  005EEA  E114               	bnz	l12862
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;main.c: 560: if (receivePrintEventVerbose()) {
 11345  005EEC  EC0A  F025         	call	_receivePrintEventVerbose	;wreg free
 11346  005EF0  0900               	iorlw	0
 11347  005EF2  E008               	bz	l12860
 11348                           
 11349                           ;main.c: 561: putsUSART((char *) "+OK\r\n");
 11350  005EF4  0E7C               	movlw	high STR_8
 11351  005EF6  6E1B               	movwf	?_putsUSART+1,c
 11352  005EF8  0E80               	movlw	low STR_8
 11353  005EFA  6E1A               	movwf	?_putsUSART,c
 11354  005EFC  EC2E  F011         	call	_putsUSART	;wreg free
 11355                           
 11356                           ;main.c: 562: } else {
 11357  005F00  EFC3  F035         	goto	l13288
 11358  005F04                     l12860:
 11359                           
 11360                           ;main.c: 563: putsUSART((char *) "+OK - no events\r\n");
 11361  005F04  0E7A               	movlw	high STR_39
 11362  005F06  6E1B               	movwf	?_putsUSART+1,c
 11363  005F08  0EF8               	movlw	low STR_39
 11364  005F0A  6E1A               	movwf	?_putsUSART,c
 11365  005F0C  EC2E  F011         	call	_putsUSART	;wreg free
 11366  005F10  EFC3  F035         	goto	l13288
 11367  005F14                     l12862:
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;main.c: 566: else if (cmdbuf == stristr(cmdbuf, "STAT")) {
 11371  005F14  0101               	movlb	1	; () banked
 11372  005F16  0E01               	movlw	high _cmdbuf
 11373  005F18  6E27               	movwf	?_stristr+1,c
 11374  005F1A  0E24               	movlw	low _cmdbuf
 11375  005F1C  6E26               	movwf	?_stristr,c
 11376  005F1E  0E7C               	movlw	high STR_40
 11377  005F20  6E29               	movwf	?_stristr+3,c
 11378  005F22  0ECB               	movlw	low STR_40
 11379  005F24  6E28               	movwf	?_stristr+2,c
 11380  005F26  EC8F  F013         	call	_stristr	;wreg free
 11381  005F2A  ECD3  F035         	call	PL2	;call to abstracted procedure
 11382  005F2E  E102               	bnz	u16985
 11383  005F30  5026               	movf	?_stristr,w,c
 11384  005F32  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11385  005F34                     u16985:
 11386  005F34  E104               	bnz	l12866
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;main.c: 567: printStatistics();
 11390  005F36  ECC5  F020         	call	_printStatistics	;wreg free
 11391                           
 11392                           ;main.c: 568: }
 11393  005F3A  EFC3  F035         	goto	l13288
 11394  005F3E                     l12866:
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;main.c: 569: else if (cmdbuf == stristr(cmdbuf, "ERR")) {
 11398  005F3E  0101               	movlb	1	; () banked
 11399  005F40  0E01               	movlw	high _cmdbuf
 11400  005F42  6E27               	movwf	?_stristr+1,c
 11401  005F44  0E24               	movlw	low _cmdbuf
 11402  005F46  6E26               	movwf	?_stristr,c
 11403  005F48  0E7C               	movlw	high STR_41
 11404  005F4A  6E29               	movwf	?_stristr+3,c
 11405  005F4C  0ED9               	movlw	low STR_41
 11406  005F4E  6E28               	movwf	?_stristr+2,c
 11407  005F50  EC8F  F013         	call	_stristr	;wreg free
 11408  005F54  ECD3  F035         	call	PL2	;call to abstracted procedure
 11409  005F58  E102               	bnz	u16995
 11410  005F5A  5026               	movf	?_stristr,w,c
 11411  005F5C  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11412  005F5E                     u16995:
 11413  005F5E  E104               	bnz	l12870
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;main.c: 570: printErrors();
 11417  005F60  EC45  F026         	call	_printErrors	;wreg free
 11418                           
 11419                           ;main.c: 571: }
 11420  005F64  EFC3  F035         	goto	l13288
 11421  005F68                     l12870:
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;main.c: 572: else if (cmdbuf == stristr(cmdbuf, "HELP")) {
 11425  005F68  0101               	movlb	1	; () banked
 11426  005F6A  0E01               	movlw	high _cmdbuf
 11427  005F6C  6E27               	movwf	?_stristr+1,c
 11428  005F6E  0E24               	movlw	low _cmdbuf
 11429  005F70  6E26               	movwf	?_stristr,c
 11430  005F72  0E7C               	movlw	high STR_42
 11431  005F74  6E29               	movwf	?_stristr+3,c
 11432  005F76  0EC6               	movlw	low STR_42
 11433  005F78  6E28               	movwf	?_stristr+2,c
 11434  005F7A  EC8F  F013         	call	_stristr	;wreg free
 11435  005F7E  ECD3  F035         	call	PL2	;call to abstracted procedure
 11436  005F82  E102               	bnz	u17005
 11437  005F84  5026               	movf	?_stristr,w,c
 11438  005F86  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11439  005F88                     u17005:
 11440  005F88  E10A               	bnz	l12874
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;main.c: 573: printHelp();
 11444  005F8A  EC05  F020         	call	_printHelp	;wreg free
 11445                           
 11446                           ;main.c: 574: putsUSART((char *) "+OK\r\n");
 11447  005F8E  0E7C               	movlw	high STR_8
 11448  005F90  6E1B               	movwf	?_putsUSART+1,c
 11449  005F92  0E80               	movlw	low STR_8
 11450  005F94  6E1A               	movwf	?_putsUSART,c
 11451  005F96  EC2E  F011         	call	_putsUSART	;wreg free
 11452                           
 11453                           ;main.c: 575: }
 11454  005F9A  EFC3  F035         	goto	l13288
 11455  005F9E                     l12874:
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;main.c: 576: else if (cmdbuf == stristr(cmdbuf, "FIND")) {
 11459  005F9E  0101               	movlb	1	; () banked
 11460  005FA0  0E01               	movlw	high _cmdbuf
 11461  005FA2  6E27               	movwf	?_stristr+1,c
 11462  005FA4  0E24               	movlw	low _cmdbuf
 11463  005FA6  6E26               	movwf	?_stristr,c
 11464  005FA8  0E7C               	movlw	high STR_44
 11465  005FAA  6E29               	movwf	?_stristr+3,c
 11466  005FAC  0EA3               	movlw	low STR_44
 11467  005FAE  6E28               	movwf	?_stristr+2,c
 11468  005FB0  EC8F  F013         	call	_stristr	;wreg free
 11469  005FB4  ECD3  F035         	call	PL2	;call to abstracted procedure
 11470  005FB8  E102               	bnz	u17015
 11471  005FBA  5026               	movf	?_stristr,w,c
 11472  005FBC  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11473  005FBE                     u17015:
 11474  005FBE  E104               	bnz	l12878
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;main.c: 577: findNodes();
 11478  005FC0  ECF7  F019         	call	_findNodes	;wreg free
 11479                           
 11480                           ;main.c: 578: }
 11481  005FC4  EFC3  F035         	goto	l13288
 11482  005FC8                     l12878:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;main.c: 580: else if (cmdbuf == stristr(cmdbuf, "RREG")) {
 11486  005FC8  0101               	movlb	1	; () banked
 11487  005FCA  0E01               	movlw	high _cmdbuf
 11488  005FCC  6E27               	movwf	?_stristr+1,c
 11489  005FCE  0E24               	movlw	low _cmdbuf
 11490  005FD0  6E26               	movwf	?_stristr,c
 11491  005FD2  0E7C               	movlw	high STR_45
 11492  005FD4  6E29               	movwf	?_stristr+3,c
 11493  005FD6  0EA8               	movlw	low STR_45
 11494  005FD8  6E28               	movwf	?_stristr+2,c
 11495  005FDA  EC8F  F013         	call	_stristr	;wreg free
 11496  005FDE  ECD3  F035         	call	PL2	;call to abstracted procedure
 11497  005FE2  E102               	bnz	u17025
 11498  005FE4  5026               	movf	?_stristr,w,c
 11499  005FE6  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 11500  005FE8                     u17025:
 11501  005FE8  E001 D1AB          	bnz	l13008
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;main.c: 582: uint8_t i;
 11505                           ;main.c: 583: uint8_t nodeid;
 11506                           ;main.c: 584: uint8_t page = 0;
 11507  005FEC  0102               	movlb	2	; () banked
 11508  005FEE  6BAD               	clrf	doModeVerbose@page& (0+255),b
 11509                           
 11510                           ; BSR set to: 2
 11511                           ;main.c: 585: uint8_t reg;
 11512                           ;main.c: 586: uint8_t value;
 11513                           ;main.c: 587: uint8_t count = 1;
 11514  005FF0  0E01               	movlw	1
 11515  005FF2  6FAB               	movwf	doModeVerbose@count& (0+255),b
 11516                           
 11517                           ; BSR set to: 2
 11518                           ;main.c: 589: strcpy(cmdbuf, cmdbuf + 5);
 11519  005FF4  EC06  F036         	call	PL10	;call to abstracted procedure
 11520  005FF8  ECE5  F00E         	call	_strcpy	;wreg free
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;main.c: 590: char *p = strtok(cmdbuf, " ");
 11524  005FFC  0101               	movlb	1	; () banked
 11525  005FFE  EC2B  F036         	call	PL34	;call to abstracted procedure
 11526  006002  ECDB  F014         	call	_strtok	;wreg free
 11527  006006  C025  F2B2         	movff	?_strtok,doModeVerbose@p_1124
 11528  00600A  C026  F2B3         	movff	?_strtok+1,doModeVerbose@p_1124+1
 11529                           
 11530                           ;main.c: 591: if ((0) != p) {
 11531  00600E  0102               	movlb	2	; () banked
 11532  006010  51B3               	movf	(doModeVerbose@p_1124+1)& (0+255),w,b
 11533  006012  11B2               	iorwf	doModeVerbose@p_1124& (0+255),w,b
 11534  006014  E00A               	bz	l12892
 11535                           
 11536                           ; BSR set to: 2
 11537                           ;main.c: 592: nodeid = atoi(p);
 11538  006016  C2B2  F01F         	movff	doModeVerbose@p_1124,?_atoi
 11539  00601A  C2B3  F020         	movff	doModeVerbose@p_1124+1,?_atoi+1
 11540  00601E  EC54  F01B         	call	_atoi	;wreg free
 11541  006022  501F               	movf	?_atoi,w,c
 11542  006024  0102               	movlb	2	; () banked
 11543  006026  6F8C               	movwf	doModeVerbose@nodeid& (0+255),b
 11544                           
 11545                           ;main.c: 593: } else {
 11546  006028  D008               	goto	l12896
 11547  00602A                     l12892:
 11548                           
 11549                           ; BSR set to: 2
 11550                           ;main.c: 594: putsUSART((char *) "-ERROR - Needs nodeid\r\n");
 11551  00602A  0E79               	movlw	high STR_47
 11552  00602C  6E1B               	movwf	?_putsUSART+1,c
 11553  00602E  0E31               	movlw	low STR_47
 11554  006030  6E1A               	movwf	?_putsUSART,c
 11555  006032  EC2E  F011         	call	_putsUSART	;wreg free
 11556  006036  EFD2  F035         	goto	l498
 11557  00603A                     l12896:
 11558                           
 11559                           ; BSR set to: 2
 11560                           ;main.c: 596: }
 11561                           ;main.c: 598: if ((0) != (p = strtok((0), " "))) {
 11562  00603A  EC34  F036         	call	PL36	;call to abstracted procedure
 11563  00603E  ECDB  F014         	call	_strtok	;wreg free
 11564  006042  C025  F2B2         	movff	?_strtok,doModeVerbose@p_1124
 11565  006046  C026  F2B3         	movff	?_strtok+1,doModeVerbose@p_1124+1
 11566  00604A  0102               	movlb	2	; () banked
 11567  00604C  51B3               	movf	(doModeVerbose@p_1124+1)& (0+255),w,b
 11568  00604E  11B2               	iorwf	doModeVerbose@p_1124& (0+255),w,b
 11569  006050  E033               	bz	l12904
 11570                           
 11571                           ; BSR set to: 2
 11572                           ;main.c: 600: char *preg;
 11573                           ;main.c: 601: if (preg = strchr(p, ':')) {
 11574  006052  C2B2  F019         	movff	doModeVerbose@p_1124,?_strchr
 11575  006056  C2B3  F01A         	movff	doModeVerbose@p_1124+1,?_strchr+1
 11576  00605A  6A1C               	clrf	?_strchr+3,c
 11577  00605C  0E3A               	movlw	58
 11578  00605E  6E1B               	movwf	?_strchr+2,c
 11579  006060  ECB1  F011         	call	_strchr	;wreg free
 11580  006064  C019  F284         	movff	?_strchr,doModeVerbose@preg
 11581  006068  C01A  F285         	movff	?_strchr+1,doModeVerbose@preg+1
 11582  00606C  0102               	movlb	2	; () banked
 11583  00606E  5185               	movf	(doModeVerbose@preg+1)& (0+255),w,b
 11584  006070  1184               	iorwf	doModeVerbose@preg& (0+255),w,b
 11585  006072  E018               	bz	l12902
 11586                           
 11587                           ; BSR set to: 2
 11588                           ;main.c: 602: page = atoi(p);
 11589  006074  C2B2  F01F         	movff	doModeVerbose@p_1124,?_atoi
 11590  006078  C2B3  F020         	movff	doModeVerbose@p_1124+1,?_atoi+1
 11591  00607C  EC54  F01B         	call	_atoi	;wreg free
 11592  006080  501F               	movf	?_atoi,w,c
 11593  006082  0102               	movlb	2	; () banked
 11594  006084  6FAD               	movwf	doModeVerbose@page& (0+255),b
 11595                           
 11596                           ;main.c: 603: reg = atoi(preg + 1);
 11597  006086  2984               	incf	doModeVerbose@preg& (0+255),w,b
 11598  006088  0100               	movlb	0	; () banked
 11599  00608A  6FB2               	movwf	??_doModeVerbose& (0+255),b
 11600  00608C  0E00               	movlw	0
 11601  00608E  0102               	movlb	2	; () banked
 11602  006090  2185               	addwfc	(doModeVerbose@preg+1)& (0+255),w,b
 11603  006092  0100               	movlb	0	; () banked
 11604  006094  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 11605  006096  C0B2  F01F         	movff	??_doModeVerbose,?_atoi
 11606  00609A  C0B3  F020         	movff	??_doModeVerbose+1,?_atoi+1
 11607  00609E  EC54  F01B         	call	_atoi	;wreg free
 11608  0060A2  D006               	goto	L5
 11609  0060A4                     l12902:
 11610                           
 11611                           ; BSR set to: 2
 11612                           ;main.c: 605: reg = atoi(p);
 11613  0060A4  C2B2  F01F         	movff	doModeVerbose@p_1124,?_atoi
 11614  0060A8  C2B3  F020         	movff	doModeVerbose@p_1124+1,?_atoi+1
 11615  0060AC  EC54  F01B         	call	_atoi	;wreg free
 11616  0060B0                     L5:
 11617  0060B0  501F               	movf	?_atoi,w,c
 11618  0060B2  0102               	movlb	2	; () banked
 11619  0060B4  6FAE               	movwf	doModeVerbose@reg& (0+255),b
 11620  0060B6  D008               	goto	l12908
 11621  0060B8                     l12904:
 11622                           
 11623                           ; BSR set to: 2
 11624                           ;main.c: 610: putsUSART((char *) "-ERROR - Needs [page:]register\r\n");
 11625  0060B8  0E77               	movlw	high STR_49
 11626  0060BA  6E1B               	movwf	?_putsUSART+1,c
 11627  0060BC  0EAC               	movlw	low STR_49
 11628  0060BE  6E1A               	movwf	?_putsUSART,c
 11629  0060C0  EC2E  F011         	call	_putsUSART	;wreg free
 11630  0060C4  EFD2  F035         	goto	l498
 11631  0060C8                     l12908:
 11632                           
 11633                           ; BSR set to: 2
 11634                           ;main.c: 612: }
 11635                           ;main.c: 615: if ((0) != (p = strtok((0), " "))) {
 11636  0060C8  EC34  F036         	call	PL36	;call to abstracted procedure
 11637  0060CC  ECDB  F014         	call	_strtok	;wreg free
 11638  0060D0  C025  F2B2         	movff	?_strtok,doModeVerbose@p_1124
 11639  0060D4  C026  F2B3         	movff	?_strtok+1,doModeVerbose@p_1124+1
 11640  0060D8  0102               	movlb	2	; () banked
 11641  0060DA  51B3               	movf	(doModeVerbose@p_1124+1)& (0+255),w,b
 11642  0060DC  11B2               	iorwf	doModeVerbose@p_1124& (0+255),w,b
 11643  0060DE  E00D               	bz	l503
 11644                           
 11645                           ; BSR set to: 2
 11646                           ;main.c: 616: count = atoi(p);
 11647  0060E0  C2B2  F01F         	movff	doModeVerbose@p_1124,?_atoi
 11648  0060E4  C2B3  F020         	movff	doModeVerbose@p_1124+1,?_atoi+1
 11649  0060E8  EC54  F01B         	call	_atoi	;wreg free
 11650  0060EC  501F               	movf	?_atoi,w,c
 11651  0060EE  0102               	movlb	2	; () banked
 11652  0060F0  6FAB               	movwf	doModeVerbose@count& (0+255),b
 11653                           
 11654                           ; BSR set to: 2
 11655                           ;main.c: 617: if (0 == count) count = 1;
 11656  0060F2  67AB               	tstfsz	doModeVerbose@count& (0+255),b
 11657  0060F4  D002               	goto	l503
 11658                           
 11659                           ; BSR set to: 2
 11660  0060F6  0E01               	movlw	1
 11661  0060F8  6FAB               	movwf	doModeVerbose@count& (0+255),b
 11662  0060FA                     l503:
 11663                           
 11664                           ; BSR set to: 2
 11665                           ;main.c: 618: }
 11666                           ;main.c: 620: BOOL rv = 1;
 11667  0060FA  0E01               	movlw	1
 11668  0060FC  6FA0               	movwf	doModeVerbose@rv& (0+255),b
 11669                           
 11670                           ; BSR set to: 2
 11671                           ;main.c: 621: for (i = 0; i < count; i++) {
 11672  0060FE  6BB0               	clrf	doModeVerbose@i_1118& (0+255),b
 11673  006100  D10A               	goto	l13000
 11674  006102                     l12918:
 11675                           
 11676                           ; BSR set to: 2
 11677                           ;main.c: 623: if (readRegisterExtended(nodeid,
 11678                           ;main.c: 624: page,
 11679                           ;main.c: 625: (reg + i) & 0xff,
 11680                           ;main.c: 626: rwtimeout,
 11681                           ;main.c: 627: &value)) {
 11682  006102  0100               	movlb	0	; () banked
 11683  006104  C2AD  F09E         	movff	doModeVerbose@page,?_readRegisterExtended
 11684  006108  6B9F               	clrf	(?_readRegisterExtended+1)& (0+255),b
 11685  00610A  0102               	movlb	2	; () banked
 11686  00610C  51AE               	movf	doModeVerbose@reg& (0+255),w,b
 11687  00610E  25B0               	addwf	doModeVerbose@i_1118& (0+255),w,b
 11688  006110  0100               	movlb	0	; () banked
 11689  006112  6FA0               	movwf	(?_readRegisterExtended+2)& (0+255),b
 11690  006114  C0D9  F0A1         	movff	_rwtimeout,?_readRegisterExtended+3
 11691  006118  6BA2               	clrf	(?_readRegisterExtended+4)& (0+255),b
 11692  00611A  0E02               	movlw	high doModeVerbose@value
 11693  00611C  6FA4               	movwf	(?_readRegisterExtended+6)& (0+255),b
 11694  00611E  0EB1               	movlw	low doModeVerbose@value
 11695  006120  6FA3               	movwf	(?_readRegisterExtended+5)& (0+255),b
 11696  006122  0102               	movlb	2	; () banked
 11697  006124  518C               	movf	doModeVerbose@nodeid& (0+255),w,b
 11698  006126  EC47  F018         	call	_readRegisterExtended
 11699  00612A  0900               	iorlw	0
 11700  00612C  E101 D09B          	bz	l507
 11701                           
 11702                           ;main.c: 628: putsUSART((char *) "Value for reg ");
 11703  006130  0E7B               	movlw	high STR_51
 11704  006132  6E1B               	movwf	?_putsUSART+1,c
 11705  006134  0E5E               	movlw	low STR_51
 11706  006136  6E1A               	movwf	?_putsUSART,c
 11707  006138  EC2E  F011         	call	_putsUSART	;wreg free
 11708                           
 11709                           ;main.c: 629: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", page);
 11710  00613C  0100               	movlb	0	; () banked
 11711  00613E  67D3               	tstfsz	_bHex& (0+255),b
 11712  006140  D005               	goto	l12926
 11713                           
 11714                           ; BSR set to: 0
 11715  006142  0E7C               	movlw	high STR_53
 11716  006144  0102               	movlb	2	; () banked
 11717  006146  6F95               	movwf	(_doModeVerbose$1136+1)& (0+255),b
 11718  006148  0EEE               	movlw	low STR_53
 11719  00614A  D004               	goto	L6
 11720  00614C                     l12926:
 11721                           
 11722                           ; BSR set to: 0
 11723  00614C  0E7C               	movlw	high STR_52
 11724  00614E  0102               	movlb	2	; () banked
 11725  006150  6F95               	movwf	(_doModeVerbose$1136+1)& (0+255),b
 11726  006152  0E65               	movlw	low STR_52
 11727  006154                     L6:
 11728  006154  6F94               	movwf	_doModeVerbose$1136& (0+255),b
 11729                           
 11730                           ; BSR set to: 2
 11731  006156  0E01               	movlw	high _wrkbuf
 11732  006158  0100               	movlb	0	; () banked
 11733  00615A  6F61               	movwf	(?_sprintf+1)& (0+255),b
 11734  00615C  0E74               	movlw	low _wrkbuf
 11735  00615E  6F60               	movwf	?_sprintf& (0+255),b
 11736  006160  C294  F062         	movff	_doModeVerbose$1136,?_sprintf+2
 11737  006164  C295  F063         	movff	_doModeVerbose$1136+1,?_sprintf+3
 11738  006168  C2AD  F064         	movff	doModeVerbose@page,?_sprintf+4
 11739  00616C  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11740  00616E  EC5F  F029         	call	_sprintf	;wreg free
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;main.c: 630: putsUSART(wrkbuf);
 11744  006172  0101               	movlb	1	; () banked
 11745  006174  0E01               	movlw	high _wrkbuf
 11746  006176  6E1B               	movwf	?_putsUSART+1,c
 11747  006178  0E74               	movlw	low _wrkbuf
 11748  00617A  6E1A               	movwf	?_putsUSART,c
 11749  00617C  EC2E  F011         	call	_putsUSART	;wreg free
 11750  006180                     l512:
 11751  006180  A2AC               	btfss	4012,1,c	;volatile
 11752  006182  D7FE               	goto	l512
 11753                           
 11754                           ;main.c: 632: WriteUSART(':');
 11755  006184  0E3A               	movlw	58
 11756  006186  EC6E  F00E         	call	_WriteUSART
 11757                           
 11758                           ;main.c: 633: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", (reg + i) & 0xff);
 11759  00618A  0100               	movlb	0	; () banked
 11760  00618C  67D3               	tstfsz	_bHex& (0+255),b
 11761  00618E  D005               	goto	l12938
 11762                           
 11763                           ; BSR set to: 0
 11764  006190  0E7C               	movlw	high STR_53
 11765  006192  0102               	movlb	2	; () banked
 11766  006194  6F97               	movwf	(_doModeVerbose$1148+1)& (0+255),b
 11767  006196  0EEE               	movlw	low STR_53
 11768  006198  D004               	goto	L7
 11769  00619A                     l12938:
 11770                           
 11771                           ; BSR set to: 0
 11772  00619A  0E7C               	movlw	high STR_52
 11773  00619C  0102               	movlb	2	; () banked
 11774  00619E  6F97               	movwf	(_doModeVerbose$1148+1)& (0+255),b
 11775  0061A0  0E65               	movlw	low STR_52
 11776  0061A2                     L7:
 11777  0061A2  6F96               	movwf	_doModeVerbose$1148& (0+255),b
 11778                           
 11779                           ; BSR set to: 2
 11780  0061A4  0E01               	movlw	high _wrkbuf
 11781  0061A6  0100               	movlb	0	; () banked
 11782  0061A8  6F61               	movwf	(?_sprintf+1)& (0+255),b
 11783  0061AA  0E74               	movlw	low _wrkbuf
 11784  0061AC  6F60               	movwf	?_sprintf& (0+255),b
 11785  0061AE  C296  F062         	movff	_doModeVerbose$1148,?_sprintf+2
 11786  0061B2  C297  F063         	movff	_doModeVerbose$1148+1,?_sprintf+3
 11787  0061B6  EC48  F036         	call	PL42	;call to abstracted procedure
 11788  0061BA  EC5F  F029         	call	_sprintf	;wreg free
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;main.c: 634: putsUSART(wrkbuf);
 11792  0061BE  0101               	movlb	1	; () banked
 11793  0061C0  0E01               	movlw	high _wrkbuf
 11794  0061C2  6E1B               	movwf	?_putsUSART+1,c
 11795  0061C4  0E74               	movlw	low _wrkbuf
 11796  0061C6  6E1A               	movwf	?_putsUSART,c
 11797  0061C8  EC2E  F011         	call	_putsUSART	;wreg free
 11798                           
 11799                           ;main.c: 635: putsUSART((char *) " = ");
 11800  0061CC  0E7B               	movlw	high (STR_234+4)
 11801  0061CE  6E1B               	movwf	?_putsUSART+1,c
 11802  0061D0  0EEA               	movlw	low (STR_234+4)
 11803  0061D2  6E1A               	movwf	?_putsUSART,c
 11804  0061D4  EC2E  F011         	call	_putsUSART	;wreg free
 11805                           
 11806                           ;main.c: 636: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", value);
 11807  0061D8  0100               	movlb	0	; () banked
 11808  0061DA  67D3               	tstfsz	_bHex& (0+255),b
 11809  0061DC  D005               	goto	l12950
 11810                           
 11811                           ; BSR set to: 0
 11812  0061DE  0E7C               	movlw	high STR_53
 11813  0061E0  0102               	movlb	2	; () banked
 11814  0061E2  6F99               	movwf	(_doModeVerbose$1153+1)& (0+255),b
 11815  0061E4  0EEE               	movlw	low STR_53
 11816  0061E6  D004               	goto	L8
 11817  0061E8                     l12950:
 11818                           
 11819                           ; BSR set to: 0
 11820  0061E8  0E7C               	movlw	high STR_52
 11821  0061EA  0102               	movlb	2	; () banked
 11822  0061EC  6F99               	movwf	(_doModeVerbose$1153+1)& (0+255),b
 11823  0061EE  0E65               	movlw	low STR_52
 11824  0061F0                     L8:
 11825  0061F0  6F98               	movwf	_doModeVerbose$1153& (0+255),b
 11826                           
 11827                           ; BSR set to: 2
 11828  0061F2  0E01               	movlw	high _wrkbuf
 11829  0061F4  0100               	movlb	0	; () banked
 11830  0061F6  6F61               	movwf	(?_sprintf+1)& (0+255),b
 11831  0061F8  0E74               	movlw	low _wrkbuf
 11832  0061FA  6F60               	movwf	?_sprintf& (0+255),b
 11833  0061FC  C298  F062         	movff	_doModeVerbose$1153,?_sprintf+2
 11834  006200  C299  F063         	movff	_doModeVerbose$1153+1,?_sprintf+3
 11835  006204  C2B1  F064         	movff	doModeVerbose@value,?_sprintf+4
 11836  006208  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11837  00620A  EC5F  F029         	call	_sprintf	;wreg free
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;main.c: 637: putsUSART(wrkbuf);
 11841  00620E  0101               	movlb	1	; () banked
 11842  006210  0E01               	movlw	high _wrkbuf
 11843  006212  6E1B               	movwf	?_putsUSART+1,c
 11844  006214  0E74               	movlw	low _wrkbuf
 11845  006216  6E1A               	movwf	?_putsUSART,c
 11846  006218  EC2E  F011         	call	_putsUSART	;wreg free
 11847  00621C                     l523:
 11848  00621C  A2AC               	btfss	4012,1,c	;volatile
 11849  00621E  D7FE               	goto	l523
 11850                           
 11851                           ;main.c: 639: WriteUSART(' ');
 11852  006220  0E20               	movlw	32
 11853  006222  EC6E  F00E         	call	_WriteUSART
 11854  006226                     l526:
 11855  006226  A2AC               	btfss	4012,1,c	;volatile
 11856  006228  D7FE               	goto	l526
 11857                           
 11858                           ;main.c: 641: if ((value > 32) && (value < 127)) {
 11859  00622A  0E20               	movlw	32
 11860  00622C  0102               	movlb	2	; () banked
 11861  00622E  65B1               	cpfsgt	doModeVerbose@value& (0+255),b
 11862  006230  D007               	goto	l12964
 11863                           
 11864                           ; BSR set to: 2
 11865  006232  0E7F               	movlw	127
 11866  006234  61B1               	cpfslt	doModeVerbose@value& (0+255),b
 11867  006236  D004               	goto	l12964
 11868                           
 11869                           ; BSR set to: 2
 11870                           ;main.c: 642: WriteUSART(value);
 11871  006238  51B1               	movf	doModeVerbose@value& (0+255),w,b
 11872  00623A  EC6E  F00E         	call	_WriteUSART
 11873                           
 11874                           ;main.c: 643: } else {
 11875  00623E  D003               	goto	l531
 11876  006240                     l12964:
 11877                           
 11878                           ; BSR set to: 2
 11879                           ;main.c: 644: WriteUSART('.');
 11880  006240  0E2E               	movlw	46
 11881  006242  EC6E  F00E         	call	_WriteUSART
 11882  006246                     l531:
 11883  006246  A2AC               	btfss	4012,1,c	;volatile
 11884  006248  D7FE               	goto	l531
 11885                           
 11886                           ;main.c: 647: WriteUSART(' ');
 11887  00624A  0E20               	movlw	32
 11888  00624C  EC6E  F00E         	call	_WriteUSART
 11889                           
 11890                           ;main.c: 648: printBinary(value);
 11891  006250  0102               	movlb	2	; () banked
 11892  006252  51B1               	movf	doModeVerbose@value& (0+255),w,b
 11893  006254  ECBF  F010         	call	_printBinary
 11894                           
 11895                           ;main.c: 649: putsUSART((char *) "\r\n");
 11896  006258  0E71               	movlw	high (STR_188+50)
 11897  00625A  6E1B               	movwf	?_putsUSART+1,c
 11898  00625C  0EAE               	movlw	low (STR_188+50)
 11899  00625E  6E1A               	movwf	?_putsUSART,c
 11900  006260  EC2E  F011         	call	_putsUSART	;wreg free
 11901                           
 11902                           ;main.c: 650: } else {
 11903  006264  D056               	goto	l12998
 11904  006266                     l507:
 11905                           
 11906                           ;main.c: 651: rv = 0;
 11907  006266  0102               	movlb	2	; () banked
 11908  006268  6BA0               	clrf	doModeVerbose@rv& (0+255),b
 11909                           
 11910                           ; BSR set to: 2
 11911                           ;main.c: 652: putsUSART((char *) "-ERROR - Unable to read register ");
 11912  00626A  0E77               	movlw	high STR_60
 11913  00626C  6E1B               	movwf	?_putsUSART+1,c
 11914  00626E  0E06               	movlw	low STR_60
 11915  006270  6E1A               	movwf	?_putsUSART,c
 11916  006272  EC2E  F011         	call	_putsUSART	;wreg free
 11917                           
 11918                           ;main.c: 653: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", page);
 11919  006276  0100               	movlb	0	; () banked
 11920  006278  67D3               	tstfsz	_bHex& (0+255),b
 11921  00627A  D005               	goto	l12978
 11922                           
 11923                           ; BSR set to: 0
 11924  00627C  0E7C               	movlw	high STR_53
 11925  00627E  0102               	movlb	2	; () banked
 11926  006280  6F9B               	movwf	(_doModeVerbose$1159+1)& (0+255),b
 11927  006282  0EEE               	movlw	low STR_53
 11928  006284  D004               	goto	L9
 11929  006286                     l12978:
 11930                           
 11931                           ; BSR set to: 0
 11932  006286  0E7C               	movlw	high STR_52
 11933  006288  0102               	movlb	2	; () banked
 11934  00628A  6F9B               	movwf	(_doModeVerbose$1159+1)& (0+255),b
 11935  00628C  0E65               	movlw	low STR_52
 11936  00628E                     L9:
 11937  00628E  6F9A               	movwf	_doModeVerbose$1159& (0+255),b
 11938                           
 11939                           ; BSR set to: 2
 11940  006290  0E01               	movlw	high _wrkbuf
 11941  006292  0100               	movlb	0	; () banked
 11942  006294  6F61               	movwf	(?_sprintf+1)& (0+255),b
 11943  006296  0E74               	movlw	low _wrkbuf
 11944  006298  6F60               	movwf	?_sprintf& (0+255),b
 11945  00629A  C29A  F062         	movff	_doModeVerbose$1159,?_sprintf+2
 11946  00629E  C29B  F063         	movff	_doModeVerbose$1159+1,?_sprintf+3
 11947  0062A2  C2AD  F064         	movff	doModeVerbose@page,?_sprintf+4
 11948  0062A6  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11949  0062A8  EC5F  F029         	call	_sprintf	;wreg free
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;main.c: 654: putsUSART(wrkbuf);
 11953  0062AC  0101               	movlb	1	; () banked
 11954  0062AE  0E01               	movlw	high _wrkbuf
 11955  0062B0  6E1B               	movwf	?_putsUSART+1,c
 11956  0062B2  0E74               	movlw	low _wrkbuf
 11957  0062B4  6E1A               	movwf	?_putsUSART,c
 11958  0062B6  EC2E  F011         	call	_putsUSART	;wreg free
 11959  0062BA                     l539:
 11960  0062BA  A2AC               	btfss	4012,1,c	;volatile
 11961  0062BC  D7FE               	goto	l539
 11962                           
 11963                           ;main.c: 656: WriteUSART(':');
 11964  0062BE  0E3A               	movlw	58
 11965  0062C0  EC6E  F00E         	call	_WriteUSART
 11966                           
 11967                           ;main.c: 657: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", (reg + i) & 0xff);
 11968  0062C4  0100               	movlb	0	; () banked
 11969  0062C6  67D3               	tstfsz	_bHex& (0+255),b
 11970  0062C8  D005               	goto	l12990
 11971                           
 11972                           ; BSR set to: 0
 11973  0062CA  0E7C               	movlw	high STR_53
 11974  0062CC  0102               	movlb	2	; () banked
 11975  0062CE  6F9D               	movwf	(_doModeVerbose$1163+1)& (0+255),b
 11976  0062D0  0EEE               	movlw	low STR_53
 11977  0062D2  D004               	goto	L10
 11978  0062D4                     l12990:
 11979                           
 11980                           ; BSR set to: 0
 11981  0062D4  0E7C               	movlw	high STR_52
 11982  0062D6  0102               	movlb	2	; () banked
 11983  0062D8  6F9D               	movwf	(_doModeVerbose$1163+1)& (0+255),b
 11984  0062DA  0E65               	movlw	low STR_52
 11985  0062DC                     L10:
 11986  0062DC  6F9C               	movwf	_doModeVerbose$1163& (0+255),b
 11987                           
 11988                           ; BSR set to: 2
 11989  0062DE  0E01               	movlw	high _wrkbuf
 11990  0062E0  0100               	movlb	0	; () banked
 11991  0062E2  6F61               	movwf	(?_sprintf+1)& (0+255),b
 11992  0062E4  0E74               	movlw	low _wrkbuf
 11993  0062E6  6F60               	movwf	?_sprintf& (0+255),b
 11994  0062E8  C29C  F062         	movff	_doModeVerbose$1163,?_sprintf+2
 11995  0062EC  C29D  F063         	movff	_doModeVerbose$1163+1,?_sprintf+3
 11996  0062F0  EC48  F036         	call	PL42	;call to abstracted procedure
 11997  0062F4  EC5F  F029         	call	_sprintf	;wreg free
 11998                           
 11999                           ; BSR set to: 0
 12000                           ;main.c: 658: putsUSART(wrkbuf);
 12001  0062F8  0101               	movlb	1	; () banked
 12002  0062FA  0E01               	movlw	high _wrkbuf
 12003  0062FC  6E1B               	movwf	?_putsUSART+1,c
 12004  0062FE  0E74               	movlw	low _wrkbuf
 12005  006300  6E1A               	movwf	?_putsUSART,c
 12006  006302  EC2E  F011         	call	_putsUSART	;wreg free
 12007                           
 12008                           ;main.c: 659: putsUSART((char *) "\r\n");
 12009  006306  0E71               	movlw	high (STR_188+50)
 12010  006308  6E1B               	movwf	?_putsUSART+1,c
 12011  00630A  0EAE               	movlw	low (STR_188+50)
 12012  00630C  6E1A               	movwf	?_putsUSART,c
 12013  00630E  EC2E  F011         	call	_putsUSART	;wreg free
 12014  006312                     l12998:
 12015  006312  0102               	movlb	2	; () banked
 12016  006314  2BB0               	incf	doModeVerbose@i_1118& (0+255),f,b
 12017  006316                     l13000:
 12018                           
 12019                           ; BSR set to: 2
 12020  006316  51AB               	movf	doModeVerbose@count& (0+255),w,b
 12021  006318  5DB0               	subwf	doModeVerbose@i_1118& (0+255),w,b
 12022  00631A  E201 D6F2          	bnc	l12918
 12023                           
 12024                           ; BSR set to: 2
 12025                           ;main.c: 660: }
 12026                           ;main.c: 661: }
 12027                           ;main.c: 663: if (rv) {
 12028  00631E  51A0               	movf	doModeVerbose@rv& (0+255),w,b
 12029  006320  E008               	bz	l13006
 12030                           
 12031                           ; BSR set to: 2
 12032                           ;main.c: 664: putsUSART((char *) "+OK\r\n");
 12033  006322  0E7C               	movlw	high STR_8
 12034  006324  6E1B               	movwf	?_putsUSART+1,c
 12035  006326  0E80               	movlw	low STR_8
 12036  006328  6E1A               	movwf	?_putsUSART,c
 12037  00632A  EC2E  F011         	call	_putsUSART	;wreg free
 12038                           
 12039                           ;main.c: 665: } else {
 12040  00632E  EFC3  F035         	goto	l13288
 12041  006332                     l13006:
 12042                           
 12043                           ; BSR set to: 2
 12044                           ;main.c: 666: putsUSART((char *) "-ERROR - One or more register(s) could not be read.\r\
      +                          n");
 12045  006332  0E71               	movlw	high STR_67
 12046  006334  6E1B               	movwf	?_putsUSART+1,c
 12047  006336  0E46               	movlw	low STR_67
 12048  006338  6E1A               	movwf	?_putsUSART,c
 12049  00633A  EC2E  F011         	call	_putsUSART	;wreg free
 12050  00633E  EFC3  F035         	goto	l13288
 12051  006342                     l13008:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;main.c: 671: else if (cmdbuf == stristr(cmdbuf, "WREG")) {
 12055  006342  0101               	movlb	1	; () banked
 12056  006344  0E01               	movlw	high _cmdbuf
 12057  006346  6E27               	movwf	?_stristr+1,c
 12058  006348  0E24               	movlw	low _cmdbuf
 12059  00634A  6E26               	movwf	?_stristr,c
 12060  00634C  0E7C               	movlw	high STR_68
 12061  00634E  6E29               	movwf	?_stristr+3,c
 12062  006350  0EAD               	movlw	low STR_68
 12063  006352  6E28               	movwf	?_stristr+2,c
 12064  006354  EC8F  F013         	call	_stristr	;wreg free
 12065  006358  ECD3  F035         	call	PL2	;call to abstracted procedure
 12066  00635C  E102               	bnz	u17235
 12067  00635E  5026               	movf	?_stristr,w,c
 12068  006360  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 12069  006362                     u17235:
 12070  006362  E001 D0A8          	bnz	l13050
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;main.c: 673: uint8_t nodeid;
 12074                           ;main.c: 674: uint8_t page = 0;
 12075  006366  0102               	movlb	2	; () banked
 12076  006368  6BA1               	clrf	doModeVerbose@page_1169& (0+255),b
 12077                           
 12078                           ; BSR set to: 2
 12079                           ;main.c: 675: uint8_t reg;
 12080                           ;main.c: 676: uint8_t value;
 12081                           ;main.c: 678: strcpy(cmdbuf, cmdbuf + 5);
 12082  00636A  EC06  F036         	call	PL10	;call to abstracted procedure
 12083  00636E  ECE5  F00E         	call	_strcpy	;wreg free
 12084                           
 12085                           ; BSR set to: 0
 12086                           ;main.c: 679: char *p = strtok(cmdbuf, " ");
 12087  006372  0101               	movlb	1	; () banked
 12088  006374  EC2B  F036         	call	PL34	;call to abstracted procedure
 12089  006378  ECDB  F014         	call	_strtok	;wreg free
 12090  00637C  C025  F2B4         	movff	?_strtok,doModeVerbose@p_1172
 12091  006380  C026  F2B5         	movff	?_strtok+1,doModeVerbose@p_1172+1
 12092                           
 12093                           ;main.c: 680: if ((0) != p) {
 12094  006384  0102               	movlb	2	; () banked
 12095  006386  51B5               	movf	(doModeVerbose@p_1172+1)& (0+255),w,b
 12096  006388  11B4               	iorwf	doModeVerbose@p_1172& (0+255),w,b
 12097  00638A  E00A               	bz	l13020
 12098                           
 12099                           ; BSR set to: 2
 12100                           ;main.c: 681: nodeid = atoi(p);
 12101  00638C  C2B4  F01F         	movff	doModeVerbose@p_1172,?_atoi
 12102  006390  C2B5  F020         	movff	doModeVerbose@p_1172+1,?_atoi+1
 12103  006394  EC54  F01B         	call	_atoi	;wreg free
 12104  006398  501F               	movf	?_atoi,w,c
 12105  00639A  0102               	movlb	2	; () banked
 12106  00639C  6F8D               	movwf	doModeVerbose@nodeid_1168& (0+255),b
 12107                           
 12108                           ;main.c: 682: } else {
 12109  00639E  D007               	goto	l13024
 12110  0063A0                     l13020:
 12111                           
 12112                           ; BSR set to: 2
 12113                           ;main.c: 683: putsUSART((char *) "-ERROR - Needs nodeid\r\n");
 12114  0063A0  0E79               	movlw	high STR_47
 12115  0063A2  6E1B               	movwf	?_putsUSART+1,c
 12116  0063A4  0E31               	movlw	low STR_47
 12117  0063A6  6E1A               	movwf	?_putsUSART,c
 12118  0063A8  EC2E  F011         	call	_putsUSART	;wreg free
 12119  0063AC  D3FB               	goto	l498
 12120  0063AE                     l13024:
 12121                           
 12122                           ; BSR set to: 2
 12123                           ;main.c: 685: }
 12124                           ;main.c: 687: if ((0) != (p = strtok((0), " "))) {
 12125  0063AE  EC34  F036         	call	PL36	;call to abstracted procedure
 12126  0063B2  ECDB  F014         	call	_strtok	;wreg free
 12127  0063B6  C025  F2B4         	movff	?_strtok,doModeVerbose@p_1172
 12128  0063BA  C026  F2B5         	movff	?_strtok+1,doModeVerbose@p_1172+1
 12129  0063BE  0102               	movlb	2	; () banked
 12130  0063C0  51B5               	movf	(doModeVerbose@p_1172+1)& (0+255),w,b
 12131  0063C2  11B4               	iorwf	doModeVerbose@p_1172& (0+255),w,b
 12132  0063C4  E033               	bz	l13032
 12133                           
 12134                           ; BSR set to: 2
 12135                           ;main.c: 689: char *preg;
 12136                           ;main.c: 690: if (preg = strchr(p, ':')) {
 12137  0063C6  C2B4  F019         	movff	doModeVerbose@p_1172,?_strchr
 12138  0063CA  C2B5  F01A         	movff	doModeVerbose@p_1172+1,?_strchr+1
 12139  0063CE  6A1C               	clrf	?_strchr+3,c
 12140  0063D0  0E3A               	movlw	58
 12141  0063D2  6E1B               	movwf	?_strchr+2,c
 12142  0063D4  ECB1  F011         	call	_strchr	;wreg free
 12143  0063D8  C019  F286         	movff	?_strchr,doModeVerbose@preg_1176
 12144  0063DC  C01A  F287         	movff	?_strchr+1,doModeVerbose@preg_1176+1
 12145  0063E0  0102               	movlb	2	; () banked
 12146  0063E2  5187               	movf	(doModeVerbose@preg_1176+1)& (0+255),w,b
 12147  0063E4  1186               	iorwf	doModeVerbose@preg_1176& (0+255),w,b
 12148  0063E6  E018               	bz	l13030
 12149                           
 12150                           ; BSR set to: 2
 12151                           ;main.c: 691: page = atoi(p);
 12152  0063E8  C2B4  F01F         	movff	doModeVerbose@p_1172,?_atoi
 12153  0063EC  C2B5  F020         	movff	doModeVerbose@p_1172+1,?_atoi+1
 12154  0063F0  EC54  F01B         	call	_atoi	;wreg free
 12155  0063F4  501F               	movf	?_atoi,w,c
 12156  0063F6  0102               	movlb	2	; () banked
 12157  0063F8  6FA1               	movwf	doModeVerbose@page_1169& (0+255),b
 12158                           
 12159                           ;main.c: 692: reg = atoi(preg + 1);
 12160  0063FA  2986               	incf	doModeVerbose@preg_1176& (0+255),w,b
 12161  0063FC  0100               	movlb	0	; () banked
 12162  0063FE  6FB2               	movwf	??_doModeVerbose& (0+255),b
 12163  006400  0E00               	movlw	0
 12164  006402  0102               	movlb	2	; () banked
 12165  006404  2187               	addwfc	(doModeVerbose@preg_1176+1)& (0+255),w,b
 12166  006406  0100               	movlb	0	; () banked
 12167  006408  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 12168  00640A  C0B2  F01F         	movff	??_doModeVerbose,?_atoi
 12169  00640E  C0B3  F020         	movff	??_doModeVerbose+1,?_atoi+1
 12170  006412  EC54  F01B         	call	_atoi	;wreg free
 12171  006416  D006               	goto	L11
 12172  006418                     l13030:
 12173                           
 12174                           ; BSR set to: 2
 12175                           ;main.c: 694: reg = atoi(p);
 12176  006418  C2B4  F01F         	movff	doModeVerbose@p_1172,?_atoi
 12177  00641C  C2B5  F020         	movff	doModeVerbose@p_1172+1,?_atoi+1
 12178  006420  EC54  F01B         	call	_atoi	;wreg free
 12179  006424                     L11:
 12180  006424  501F               	movf	?_atoi,w,c
 12181  006426  0102               	movlb	2	; () banked
 12182  006428  6FA2               	movwf	doModeVerbose@reg_1170& (0+255),b
 12183  00642A  D007               	goto	l13036
 12184  00642C                     l13032:
 12185                           
 12186                           ; BSR set to: 2
 12187                           ;main.c: 698: putsUSART((char *) "-ERROR - Needs [page:]register\r\n");
 12188  00642C  0E77               	movlw	high STR_49
 12189  00642E  6E1B               	movwf	?_putsUSART+1,c
 12190  006430  0EAC               	movlw	low STR_49
 12191  006432  6E1A               	movwf	?_putsUSART,c
 12192  006434  EC2E  F011         	call	_putsUSART	;wreg free
 12193  006438  D3B5               	goto	l498
 12194  00643A                     l13036:
 12195                           
 12196                           ; BSR set to: 2
 12197                           ;main.c: 700: }
 12198                           ;main.c: 703: if ((0) != (p = strtok((0), " "))) {
 12199  00643A  EC34  F036         	call	PL36	;call to abstracted procedure
 12200  00643E  ECDB  F014         	call	_strtok	;wreg free
 12201  006442  C025  F2B4         	movff	?_strtok,doModeVerbose@p_1172
 12202  006446  C026  F2B5         	movff	?_strtok+1,doModeVerbose@p_1172+1
 12203  00644A  0102               	movlb	2	; () banked
 12204  00644C  51B5               	movf	(doModeVerbose@p_1172+1)& (0+255),w,b
 12205  00644E  11B4               	iorwf	doModeVerbose@p_1172& (0+255),w,b
 12206  006450  E00A               	bz	l13040
 12207                           
 12208                           ; BSR set to: 2
 12209                           ;main.c: 704: value = atoi(p);
 12210  006452  C2B4  F01F         	movff	doModeVerbose@p_1172,?_atoi
 12211  006456  C2B5  F020         	movff	doModeVerbose@p_1172+1,?_atoi+1
 12212  00645A  EC54  F01B         	call	_atoi	;wreg free
 12213  00645E  501F               	movf	?_atoi,w,c
 12214  006460  0102               	movlb	2	; () banked
 12215  006462  6FAA               	movwf	doModeVerbose@value_1171& (0+255),b
 12216                           
 12217                           ;main.c: 705: } else {
 12218  006464  D007               	goto	l13044
 12219  006466                     l13040:
 12220                           
 12221                           ; BSR set to: 2
 12222                           ;main.c: 706: putsUSART((char *) "-ERROR - Need a value\r\n");
 12223  006466  0E79               	movlw	high STR_74
 12224  006468  6E1B               	movwf	?_putsUSART+1,c
 12225  00646A  0E61               	movlw	low STR_74
 12226  00646C  6E1A               	movwf	?_putsUSART,c
 12227  00646E  EC2E  F011         	call	_putsUSART	;wreg free
 12228  006472  D398               	goto	l498
 12229  006474                     l13044:
 12230                           
 12231                           ; BSR set to: 2
 12232                           ;main.c: 708: }
 12233                           ;main.c: 710: if (writeRegisterExtended(nodeid,
 12234                           ;main.c: 711: page,
 12235                           ;main.c: 712: reg,
 12236                           ;main.c: 713: rwtimeout,
 12237                           ;main.c: 714: &value)) {
 12238  006474  0100               	movlb	0	; () banked
 12239  006476  C2A1  F09E         	movff	doModeVerbose@page_1169,?_writeRegisterExtended
 12240  00647A  6B9F               	clrf	(?_writeRegisterExtended+1)& (0+255),b
 12241  00647C  C2A2  F0A0         	movff	doModeVerbose@reg_1170,?_writeRegisterExtended+2
 12242  006480  C0D9  F0A1         	movff	_rwtimeout,?_writeRegisterExtended+3
 12243  006484  6BA2               	clrf	(?_writeRegisterExtended+4)& (0+255),b
 12244  006486  0E02               	movlw	high doModeVerbose@value_1171
 12245  006488  6FA4               	movwf	(?_writeRegisterExtended+6)& (0+255),b
 12246  00648A  0EAA               	movlw	low doModeVerbose@value_1171
 12247  00648C  6FA3               	movwf	(?_writeRegisterExtended+5)& (0+255),b
 12248  00648E  0102               	movlb	2	; () banked
 12249  006490  518D               	movf	doModeVerbose@nodeid_1168& (0+255),w,b
 12250  006492  EC1B  F019         	call	_writeRegisterExtended
 12251  006496  0900               	iorlw	0
 12252  006498  E007               	bz	l13048
 12253                           
 12254                           ;main.c: 715: putsUSART((char *) "+OK - Value written successfully\r\n");
 12255  00649A  0E76               	movlw	high STR_75
 12256  00649C  6E1B               	movwf	?_putsUSART+1,c
 12257  00649E  0EC1               	movlw	low STR_75
 12258  0064A0  6E1A               	movwf	?_putsUSART,c
 12259  0064A2  EC2E  F011         	call	_putsUSART	;wreg free
 12260                           
 12261                           ;main.c: 716: } else {
 12262  0064A6  D36F               	goto	l13288
 12263  0064A8                     l13048:
 12264                           
 12265                           ;main.c: 717: putsUSART((char *) "-ERROR - Failed to write value\r\n");
 12266  0064A8  0E77               	movlw	high STR_76
 12267  0064AA  6E1B               	movwf	?_putsUSART+1,c
 12268  0064AC  0E8B               	movlw	low STR_76
 12269  0064AE  6E1A               	movwf	?_putsUSART,c
 12270  0064B0  EC2E  F011         	call	_putsUSART	;wreg free
 12271  0064B4  D368               	goto	l13288
 12272  0064B6                     l13050:
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;main.c: 722: else if (cmdbuf == stristr(cmdbuf, "INFO")) {
 12276  0064B6  0101               	movlb	1	; () banked
 12277  0064B8  0E01               	movlw	high _cmdbuf
 12278  0064BA  6E27               	movwf	?_stristr+1,c
 12279  0064BC  0E24               	movlw	low _cmdbuf
 12280  0064BE  6E26               	movwf	?_stristr,c
 12281  0064C0  0E7C               	movlw	high STR_77
 12282  0064C2  6E29               	movwf	?_stristr+3,c
 12283  0064C4  0EBC               	movlw	low STR_77
 12284  0064C6  6E28               	movwf	?_stristr+2,c
 12285  0064C8  EC8F  F013         	call	_stristr	;wreg free
 12286  0064CC  DB6C               	call	PL2	;call to abstracted procedure
 12287  0064CE  E102               	bnz	u17295
 12288  0064D0  5026               	movf	?_stristr,w,c
 12289  0064D2  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 12290  0064D4                     u17295:
 12291  0064D4  E154               	bnz	l13076
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;main.c: 723: uint8_t nodeid;
 12295                           ;main.c: 725: strcpy(cmdbuf, cmdbuf + 9);
 12296  0064D6  0E01               	movlw	high _cmdbuf
 12297  0064D8  6E1A               	movwf	?_strcpy+1,c
 12298  0064DA  0E24               	movlw	low _cmdbuf
 12299  0064DC  6E19               	movwf	?_strcpy,c
 12300  0064DE  0E2D               	movlw	low (_cmdbuf+9)
 12301  0064E0  0100               	movlb	0	; () banked
 12302  0064E2  6FB2               	movwf	??_doModeVerbose& (0+255),b
 12303  0064E4  0E01               	movlw	high (_cmdbuf+9)
 12304  0064E6  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 12305  0064E8  C0B2  F01B         	movff	??_doModeVerbose,?_strcpy+2
 12306  0064EC  C0B3  F01C         	movff	??_doModeVerbose+1,?_strcpy+3
 12307  0064F0  ECE5  F00E         	call	_strcpy	;wreg free
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;main.c: 726: nodeid = atoi(cmdbuf);
 12311  0064F4  0101               	movlb	1	; () banked
 12312  0064F6  0E01               	movlw	high _cmdbuf
 12313  0064F8  6E20               	movwf	?_atoi+1,c
 12314  0064FA  0E24               	movlw	low _cmdbuf
 12315  0064FC  6E1F               	movwf	?_atoi,c
 12316  0064FE  EC54  F01B         	call	_atoi	;wreg free
 12317  006502  501F               	movf	?_atoi,w,c
 12318  006504  0102               	movlb	2	; () banked
 12319  006506  6FAF               	movwf	doModeVerbose@nodeid_1183& (0+255),b
 12320                           
 12321                           ; BSR set to: 2
 12322                           ;main.c: 728: putsUSART((char *) "Info for node id = ");
 12323  006508  0E7A               	movlw	high STR_78
 12324  00650A  6E1B               	movwf	?_putsUSART+1,c
 12325  00650C  0EAB               	movlw	low STR_78
 12326  00650E  6E1A               	movwf	?_putsUSART,c
 12327  006510  EC2E  F011         	call	_putsUSART	;wreg free
 12328                           
 12329                           ;main.c: 729: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", nodeid);
 12330  006514  0100               	movlb	0	; () banked
 12331  006516  67D3               	tstfsz	_bHex& (0+255),b
 12332  006518  D005               	goto	l13062
 12333                           
 12334                           ; BSR set to: 0
 12335  00651A  0E7C               	movlw	high STR_53
 12336  00651C  0102               	movlb	2	; () banked
 12337  00651E  6F9F               	movwf	(_doModeVerbose$1188+1)& (0+255),b
 12338  006520  0EEE               	movlw	low STR_53
 12339  006522  D004               	goto	L12
 12340  006524                     l13062:
 12341                           
 12342                           ; BSR set to: 0
 12343  006524  0E7C               	movlw	high STR_52
 12344  006526  0102               	movlb	2	; () banked
 12345  006528  6F9F               	movwf	(_doModeVerbose$1188+1)& (0+255),b
 12346  00652A  0E65               	movlw	low STR_52
 12347  00652C                     L12:
 12348  00652C  6F9E               	movwf	_doModeVerbose$1188& (0+255),b
 12349                           
 12350                           ; BSR set to: 2
 12351  00652E  0E01               	movlw	high _wrkbuf
 12352  006530  0100               	movlb	0	; () banked
 12353  006532  6F61               	movwf	(?_sprintf+1)& (0+255),b
 12354  006534  0E74               	movlw	low _wrkbuf
 12355  006536  6F60               	movwf	?_sprintf& (0+255),b
 12356  006538  C29E  F062         	movff	_doModeVerbose$1188,?_sprintf+2
 12357  00653C  C29F  F063         	movff	_doModeVerbose$1188+1,?_sprintf+3
 12358  006540  C2AF  F064         	movff	doModeVerbose@nodeid_1183,?_sprintf+4
 12359  006544  6B65               	clrf	(?_sprintf+5)& (0+255),b
 12360  006546  EC5F  F029         	call	_sprintf	;wreg free
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;main.c: 730: putsUSART(wrkbuf);
 12364  00654A  0101               	movlb	1	; () banked
 12365  00654C  0E01               	movlw	high _wrkbuf
 12366  00654E  6E1B               	movwf	?_putsUSART+1,c
 12367  006550  0E74               	movlw	low _wrkbuf
 12368  006552  6E1A               	movwf	?_putsUSART,c
 12369  006554  EC2E  F011         	call	_putsUSART	;wreg free
 12370                           
 12371                           ;main.c: 731: putsUSART((char *) "\r\n");
 12372  006558  0E71               	movlw	high (STR_188+50)
 12373  00655A  6E1B               	movwf	?_putsUSART+1,c
 12374  00655C  0EAE               	movlw	low (STR_188+50)
 12375  00655E  6E1A               	movwf	?_putsUSART,c
 12376  006560  EC2E  F011         	call	_putsUSART	;wreg free
 12377                           
 12378                           ;main.c: 732: printNodeFirmwareVersion(nodeid);
 12379  006564  0102               	movlb	2	; () banked
 12380  006566  51AF               	movf	doModeVerbose@nodeid_1183& (0+255),w,b
 12381  006568  ECDF  F017         	call	_printNodeFirmwareVersion
 12382                           
 12383                           ;main.c: 733: printGUID(nodeid);
 12384  00656C  0102               	movlb	2	; () banked
 12385  00656E  51AF               	movf	doModeVerbose@nodeid_1183& (0+255),w,b
 12386  006570  ECD3  F01B         	call	_printGUID
 12387                           
 12388                           ;main.c: 734: printMDF(nodeid);
 12389  006574  0102               	movlb	2	; () banked
 12390  006576  51AF               	movf	doModeVerbose@nodeid_1183& (0+255),w,b
 12391  006578  EC24  F015         	call	_printMDF
 12392                           
 12393                           ;main.c: 735: }
 12394  00657C  D304               	goto	l13288
 12395  00657E                     l13076:
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;main.c: 738: else if (cmdbuf == stristr(cmdbuf, "FILTER")) {
 12399  00657E  0101               	movlb	1	; () banked
 12400  006580  0E01               	movlw	high _cmdbuf
 12401  006582  6E27               	movwf	?_stristr+1,c
 12402  006584  0E24               	movlw	low _cmdbuf
 12403  006586  6E26               	movwf	?_stristr,c
 12404  006588  0E7C               	movlw	high STR_82
 12405  00658A  6E29               	movwf	?_stristr+3,c
 12406  00658C  0E57               	movlw	low STR_82
 12407  00658E  6E28               	movwf	?_stristr+2,c
 12408  006590  EC8F  F013         	call	_stristr	;wreg free
 12409  006594  DB08               	call	PL2	;call to abstracted procedure
 12410  006596  E102               	bnz	u17315
 12411  006598  5026               	movf	?_stristr,w,c
 12412  00659A  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 12413  00659C                     u17315:
 12414  00659C  E001 D0C6          	bnz	l13142
 12415                           
 12416                           ; BSR set to: 0
 12417                           ;main.c: 740: uint8_t filterno;
 12418                           ;main.c: 741: uint8_t filter_priority;
 12419                           ;main.c: 742: uint16_t filter_class;
 12420                           ;main.c: 743: uint8_t filter_type;
 12421                           ;main.c: 744: uint8_t filter_nodeid;
 12422                           ;main.c: 746: strcpy(cmdbuf, cmdbuf + 8);
 12423  0065A0  0E01               	movlw	high _cmdbuf
 12424  0065A2  DB42               	call	PL16	;call to abstracted procedure
 12425  0065A4  ECE5  F00E         	call	_strcpy	;wreg free
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;main.c: 747: char *p = strtok(cmdbuf, ",");
 12429  0065A8  DB4C               	call	PL30	;call to abstracted procedure
 12430  0065AA  ECDB  F014         	call	_strtok	;wreg free
 12431  0065AE  C025  F2B9         	movff	?_strtok,doModeVerbose@p_1196
 12432  0065B2  C026  F2BA         	movff	?_strtok+1,doModeVerbose@p_1196+1
 12433                           
 12434                           ;main.c: 748: if ((0) != p) {
 12435  0065B6  0102               	movlb	2	; () banked
 12436  0065B8  51BA               	movf	(doModeVerbose@p_1196+1)& (0+255),w,b
 12437  0065BA  11B9               	iorwf	doModeVerbose@p_1196& (0+255),w,b
 12438  0065BC  E013               	bz	l13092
 12439                           
 12440                           ; BSR set to: 2
 12441                           ;main.c: 749: filterno = atoi(p);
 12442  0065BE  C2B9  F01F         	movff	doModeVerbose@p_1196,?_atoi
 12443  0065C2  C2BA  F020         	movff	doModeVerbose@p_1196+1,?_atoi+1
 12444  0065C6  EC54  F01B         	call	_atoi	;wreg free
 12445  0065CA  501F               	movf	?_atoi,w,c
 12446  0065CC  0102               	movlb	2	; () banked
 12447  0065CE  6FA7               	movwf	doModeVerbose@filterno& (0+255),b
 12448                           
 12449                           ; BSR set to: 2
 12450                           ;main.c: 750: if (filterno > 15) {
 12451  0065D0  0E0F               	movlw	15
 12452  0065D2  65A7               	cpfsgt	doModeVerbose@filterno& (0+255),b
 12453  0065D4  D00E               	goto	l13096
 12454                           
 12455                           ; BSR set to: 2
 12456                           ;main.c: 751: putsUSART((char *) "-ERROR - Filter number can only be set to a value betw
      +                          een 0-15.\r\n");
 12457  0065D6  0E6F               	movlw	high STR_84
 12458  0065D8  6E1B               	movwf	?_putsUSART+1,c
 12459  0065DA  0E40               	movlw	low STR_84
 12460  0065DC  6E1A               	movwf	?_putsUSART,c
 12461  0065DE  EC2E  F011         	call	_putsUSART	;wreg free
 12462  0065E2  D2E0               	goto	l498
 12463  0065E4                     l13092:
 12464                           
 12465                           ; BSR set to: 2
 12466                           ;main.c: 755: putsUSART((char *) "-ERROR - No filter number specified.\r\n");
 12467  0065E4  0E75               	movlw	high STR_85
 12468  0065E6  6E1B               	movwf	?_putsUSART+1,c
 12469  0065E8  0E1E               	movlw	low STR_85
 12470  0065EA  6E1A               	movwf	?_putsUSART,c
 12471  0065EC  EC2E  F011         	call	_putsUSART	;wreg free
 12472  0065F0  D2D9               	goto	l498
 12473  0065F2                     l13096:
 12474                           
 12475                           ; BSR set to: 2
 12476                           ;main.c: 757: }
 12477                           ;main.c: 760: p = strtok((0), ",");
 12478  0065F2  DAE0               	call	PL6	;call to abstracted procedure
 12479  0065F4  ECDB  F014         	call	_strtok	;wreg free
 12480  0065F8  C025  F2B9         	movff	?_strtok,doModeVerbose@p_1196
 12481  0065FC  C026  F2BA         	movff	?_strtok+1,doModeVerbose@p_1196+1
 12482                           
 12483                           ;main.c: 761: if ((0) != p) {
 12484  006600  0102               	movlb	2	; () banked
 12485  006602  51BA               	movf	(doModeVerbose@p_1196+1)& (0+255),w,b
 12486  006604  11B9               	iorwf	doModeVerbose@p_1196& (0+255),w,b
 12487  006606  E00A               	bz	l13102
 12488                           
 12489                           ; BSR set to: 2
 12490                           ;main.c: 762: filter_priority = atoi(p);
 12491  006608  C2B9  F01F         	movff	doModeVerbose@p_1196,?_atoi
 12492  00660C  C2BA  F020         	movff	doModeVerbose@p_1196+1,?_atoi+1
 12493  006610  EC54  F01B         	call	_atoi	;wreg free
 12494  006614  501F               	movf	?_atoi,w,c
 12495  006616  0102               	movlb	2	; () banked
 12496  006618  6F8E               	movwf	doModeVerbose@filter_priority& (0+255),b
 12497                           
 12498                           ;main.c: 763: } else {
 12499  00661A  D007               	goto	l13106
 12500  00661C                     l13102:
 12501                           
 12502                           ; BSR set to: 2
 12503                           ;main.c: 764: putsUSART((char *) "-ERROR - filter for priority is missing\r\n");
 12504  00661C  0E74               	movlw	high STR_87
 12505  00661E  6E1B               	movwf	?_putsUSART+1,c
 12506  006620  0E53               	movlw	low STR_87
 12507  006622  6E1A               	movwf	?_putsUSART,c
 12508  006624  EC2E  F011         	call	_putsUSART	;wreg free
 12509  006628  D2BD               	goto	l498
 12510  00662A                     l13106:
 12511                           
 12512                           ; BSR set to: 2
 12513                           ;main.c: 766: }
 12514                           ;main.c: 769: p = strtok((0), ",");
 12515  00662A  DAC4               	call	PL6	;call to abstracted procedure
 12516  00662C  ECDB  F014         	call	_strtok	;wreg free
 12517  006630  C025  F2B9         	movff	?_strtok,doModeVerbose@p_1196
 12518  006634  C026  F2BA         	movff	?_strtok+1,doModeVerbose@p_1196+1
 12519                           
 12520                           ;main.c: 770: if ((0) != p) {
 12521  006638  0102               	movlb	2	; () banked
 12522  00663A  51BA               	movf	(doModeVerbose@p_1196+1)& (0+255),w,b
 12523  00663C  11B9               	iorwf	doModeVerbose@p_1196& (0+255),w,b
 12524  00663E  E00B               	bz	l13112
 12525                           
 12526                           ; BSR set to: 2
 12527                           ;main.c: 771: filter_class = atoi(p);
 12528  006640  C2B9  F01F         	movff	doModeVerbose@p_1196,?_atoi
 12529  006644  C2BA  F020         	movff	doModeVerbose@p_1196+1,?_atoi+1
 12530  006648  EC54  F01B         	call	_atoi	;wreg free
 12531  00664C  C01F  F288         	movff	?_atoi,doModeVerbose@filter_class
 12532  006650  C020  F289         	movff	?_atoi+1,doModeVerbose@filter_class+1
 12533                           
 12534                           ;main.c: 772: } else {
 12535  006654  D007               	goto	l13116
 12536  006656                     l13112:
 12537                           
 12538                           ; BSR set to: 2
 12539                           ;main.c: 773: putsUSART((char *) "-ERROR - filter for class is missing\r\n");
 12540  006656  0E75               	movlw	high STR_89
 12541  006658  6E1B               	movwf	?_putsUSART+1,c
 12542  00665A  0EBA               	movlw	low STR_89
 12543  00665C  6E1A               	movwf	?_putsUSART,c
 12544  00665E  EC2E  F011         	call	_putsUSART	;wreg free
 12545  006662  D2A0               	goto	l498
 12546  006664                     l13116:
 12547                           
 12548                           ;main.c: 775: }
 12549                           ;main.c: 778: p = strtok((0), ",");
 12550  006664  DAA7               	call	PL6	;call to abstracted procedure
 12551  006666  ECDB  F014         	call	_strtok	;wreg free
 12552  00666A  C025  F2B9         	movff	?_strtok,doModeVerbose@p_1196
 12553  00666E  C026  F2BA         	movff	?_strtok+1,doModeVerbose@p_1196+1
 12554                           
 12555                           ;main.c: 779: if ((0) != p) {
 12556  006672  0102               	movlb	2	; () banked
 12557  006674  51BA               	movf	(doModeVerbose@p_1196+1)& (0+255),w,b
 12558  006676  11B9               	iorwf	doModeVerbose@p_1196& (0+255),w,b
 12559  006678  E00A               	bz	l13122
 12560                           
 12561                           ; BSR set to: 2
 12562                           ;main.c: 780: filter_type = atoi(p);
 12563  00667A  C2B9  F01F         	movff	doModeVerbose@p_1196,?_atoi
 12564  00667E  C2BA  F020         	movff	doModeVerbose@p_1196+1,?_atoi+1
 12565  006682  EC54  F01B         	call	_atoi	;wreg free
 12566  006686  501F               	movf	?_atoi,w,c
 12567  006688  0102               	movlb	2	; () banked
 12568  00668A  6F8F               	movwf	doModeVerbose@filter_type& (0+255),b
 12569                           
 12570                           ;main.c: 781: } else {
 12571  00668C  D007               	goto	l13126
 12572  00668E                     l13122:
 12573                           
 12574                           ; BSR set to: 2
 12575                           ;main.c: 782: putsUSART((char *) "-ERROR - filter for type is missing\r\n");
 12576  00668E  0E76               	movlw	high STR_91
 12577  006690  6E1B               	movwf	?_putsUSART+1,c
 12578  006692  0E08               	movlw	low STR_91
 12579  006694  6E1A               	movwf	?_putsUSART,c
 12580  006696  EC2E  F011         	call	_putsUSART	;wreg free
 12581  00669A  D284               	goto	l498
 12582  00669C                     l13126:
 12583                           
 12584                           ; BSR set to: 2
 12585                           ;main.c: 784: }
 12586                           ;main.c: 787: p = strtok((0), ",");
 12587  00669C  DA8B               	call	PL6	;call to abstracted procedure
 12588  00669E  ECDB  F014         	call	_strtok	;wreg free
 12589  0066A2  C025  F2B9         	movff	?_strtok,doModeVerbose@p_1196
 12590  0066A6  C026  F2BA         	movff	?_strtok+1,doModeVerbose@p_1196+1
 12591                           
 12592                           ;main.c: 788: if ((0) != p) {
 12593  0066AA  0102               	movlb	2	; () banked
 12594  0066AC  51BA               	movf	(doModeVerbose@p_1196+1)& (0+255),w,b
 12595  0066AE  11B9               	iorwf	doModeVerbose@p_1196& (0+255),w,b
 12596  0066B0  E00A               	bz	l13132
 12597                           
 12598                           ; BSR set to: 2
 12599                           ;main.c: 789: filter_nodeid = atoi(p);
 12600  0066B2  C2B9  F01F         	movff	doModeVerbose@p_1196,?_atoi
 12601  0066B6  C2BA  F020         	movff	doModeVerbose@p_1196+1,?_atoi+1
 12602  0066BA  EC54  F01B         	call	_atoi	;wreg free
 12603  0066BE  501F               	movf	?_atoi,w,c
 12604  0066C0  0102               	movlb	2	; () banked
 12605  0066C2  6F90               	movwf	doModeVerbose@filter_nodeid& (0+255),b
 12606                           
 12607                           ;main.c: 790: } else {
 12608  0066C4  D007               	goto	l13136
 12609  0066C6                     l13132:
 12610                           
 12611                           ; BSR set to: 2
 12612                           ;main.c: 791: putsUSART((char *) "-ERROR - filter for nide id is missing\r\n");
 12613  0066C6  0E74               	movlw	high STR_93
 12614  0066C8  6E1B               	movwf	?_putsUSART+1,c
 12615  0066CA  0E7D               	movlw	low STR_93
 12616  0066CC  6E1A               	movwf	?_putsUSART,c
 12617  0066CE  EC2E  F011         	call	_putsUSART	;wreg free
 12618  0066D2  D268               	goto	l498
 12619  0066D4                     l13136:
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;main.c: 793: }
 12623                           ;main.c: 796: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 12624  0066D4  0E80               	movlw	128
 12625  0066D6  EC83  F00E         	call	_ECANSetOperationMode
 12626                           
 12627                           ;main.c: 798: uint32_t id = ((uint32_t) filter_priority << 26) |
 12628                           ;main.c: 799: ((uint32_t) filter_class << 16) |
 12629                           ;main.c: 800: ((uint32_t) filter_type << 8) |
 12630                           ;main.c: 801: filter_nodeid;
 12631  0066DA  C28F  F0B2         	movff	doModeVerbose@filter_type,??_doModeVerbose
 12632  0066DE  DACB               	call	PL40	;call to abstracted procedure
 12633  0066E0  5188               	movf	doModeVerbose@filter_class& (0+255),w,b
 12634  0066E2  0100               	movlb	0	; () banked
 12635  0066E4  6FB6               	movwf	(??_doModeVerbose+4)& (0+255),b
 12636  0066E6  0102               	movlb	2	; () banked
 12637  0066E8  5189               	movf	(doModeVerbose@filter_class+1)& (0+255),w,b
 12638  0066EA  DAEB               	call	PL58	;call to abstracted procedure
 12639  0066EC  C28E  F0BA         	movff	doModeVerbose@filter_priority,??_doModeVerbose+8
 12640  0066F0  DA68               	call	PL8	;call to abstracted procedure
 12641  0066F2  5190               	movf	doModeVerbose@filter_nodeid& (0+255),w,b
 12642  0066F4  0100               	movlb	0	; () banked
 12643  0066F6  11C2               	iorwf	(??_doModeVerbose+16)& (0+255),w,b
 12644  0066F8  0102               	movlb	2	; () banked
 12645  0066FA  6F80               	movwf	doModeVerbose@id& (0+255),b
 12646  0066FC  0100               	movlb	0	; () banked
 12647  0066FE  51C3               	movf	(??_doModeVerbose+17)& (0+255),w,b
 12648  006700  0102               	movlb	2	; () banked
 12649  006702  6F81               	movwf	(doModeVerbose@id+1)& (0+255),b
 12650  006704  0100               	movlb	0	; () banked
 12651  006706  51C4               	movf	(??_doModeVerbose+18)& (0+255),w,b
 12652  006708  0102               	movlb	2	; () banked
 12653  00670A  6F82               	movwf	(doModeVerbose@id+2)& (0+255),b
 12654  00670C  0100               	movlb	0	; () banked
 12655  00670E  51C5               	movf	(??_doModeVerbose+19)& (0+255),w,b
 12656  006710  0102               	movlb	2	; () banked
 12657  006712  6F83               	movwf	(doModeVerbose@id+3)& (0+255),b
 12658                           
 12659                           ; BSR set to: 2
 12660                           ;main.c: 802: setFilter(filterno, id);
 12661  006714  C280  F019         	movff	doModeVerbose@id,?_setFilter
 12662  006718  C281  F01A         	movff	doModeVerbose@id+1,?_setFilter+1
 12663  00671C  C282  F01B         	movff	doModeVerbose@id+2,?_setFilter+2
 12664  006720  C283  F01C         	movff	doModeVerbose@id+3,?_setFilter+3
 12665  006724  51A7               	movf	doModeVerbose@filterno& (0+255),w,b
 12666  006726  EC16  F023         	call	_setFilter
 12667                           
 12668                           ;main.c: 803: }
 12669  00672A  D22D               	goto	l13288
 12670  00672C                     l13142:
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;main.c: 806: else if (cmdbuf == stristr(cmdbuf, "MASK")) {
 12674  00672C  0101               	movlb	1	; () banked
 12675  00672E  0E01               	movlw	high _cmdbuf
 12676  006730  6E27               	movwf	?_stristr+1,c
 12677  006732  0E24               	movlw	low _cmdbuf
 12678  006734  6E26               	movwf	?_stristr,c
 12679  006736  0E7C               	movlw	high STR_94
 12680  006738  6E29               	movwf	?_stristr+3,c
 12681  00673A  0EB2               	movlw	low STR_94
 12682  00673C  6E28               	movwf	?_stristr+2,c
 12683  00673E  EC8F  F013         	call	_stristr	;wreg free
 12684  006742  DA31               	call	PL2	;call to abstracted procedure
 12685  006744  E102               	bnz	u17395
 12686  006746  5026               	movf	?_stristr,w,c
 12687  006748  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 12688  00674A                     u17395:
 12689  00674A  E001 D0CD          	bnz	l13212
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;main.c: 808: uint8_t maskno;
 12693                           ;main.c: 809: uint8_t mask_priority;
 12694                           ;main.c: 810: uint16_t mask_class;
 12695                           ;main.c: 811: uint8_t mask_type;
 12696                           ;main.c: 812: uint8_t mask_nodeid;
 12697                           ;main.c: 814: strcpy(cmdbuf, cmdbuf + 8);
 12698  00674E  0E01               	movlw	high _cmdbuf
 12699  006750  DA6B               	call	PL16	;call to abstracted procedure
 12700  006752  ECE5  F00E         	call	_strcpy	;wreg free
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;main.c: 815: char *p = strtok(cmdbuf, ",");
 12704  006756  DA75               	call	PL30	;call to abstracted procedure
 12705  006758  ECDB  F014         	call	_strtok	;wreg free
 12706  00675C  C025  F2BB         	movff	?_strtok,doModeVerbose@p_1215
 12707  006760  C026  F2BC         	movff	?_strtok+1,doModeVerbose@p_1215+1
 12708                           
 12709                           ;main.c: 816: if ((0) != p) {
 12710  006764  0102               	movlb	2	; () banked
 12711  006766  51BC               	movf	(doModeVerbose@p_1215+1)& (0+255),w,b
 12712  006768  11BB               	iorwf	doModeVerbose@p_1215& (0+255),w,b
 12713  00676A  E013               	bz	l13158
 12714                           
 12715                           ; BSR set to: 2
 12716                           ;main.c: 817: maskno = atoi(p);
 12717  00676C  C2BB  F01F         	movff	doModeVerbose@p_1215,?_atoi
 12718  006770  C2BC  F020         	movff	doModeVerbose@p_1215+1,?_atoi+1
 12719  006774  EC54  F01B         	call	_atoi	;wreg free
 12720  006778  501F               	movf	?_atoi,w,c
 12721  00677A  0102               	movlb	2	; () banked
 12722  00677C  6FA8               	movwf	doModeVerbose@maskno& (0+255),b
 12723                           
 12724                           ; BSR set to: 2
 12725                           ;main.c: 818: if (maskno > 1) {
 12726  00677E  0E01               	movlw	1
 12727  006780  65A8               	cpfsgt	doModeVerbose@maskno& (0+255),b
 12728  006782  D00E               	goto	l13162
 12729                           
 12730                           ; BSR set to: 2
 12731                           ;main.c: 819: putsUSART((char *) "-ERROR - Mask number can only be set as 0 or 1.\r\n");
 12732  006784  0E72               	movlw	high STR_96
 12733  006786  6E1B               	movwf	?_putsUSART+1,c
 12734  006788  0E4D               	movlw	low STR_96
 12735  00678A  6E1A               	movwf	?_putsUSART,c
 12736  00678C  EC2E  F011         	call	_putsUSART	;wreg free
 12737  006790  D209               	goto	l498
 12738  006792                     l13158:
 12739                           
 12740                           ; BSR set to: 2
 12741                           ;main.c: 823: putsUSART((char *) "-ERROR - No mask number specified.\r\n");
 12742  006792  0E76               	movlw	high STR_97
 12743  006794  6E1B               	movwf	?_putsUSART+1,c
 12744  006796  0E2E               	movlw	low STR_97
 12745  006798  6E1A               	movwf	?_putsUSART,c
 12746  00679A  EC2E  F011         	call	_putsUSART	;wreg free
 12747  00679E  D202               	goto	l498
 12748  0067A0                     l13162:
 12749                           
 12750                           ; BSR set to: 2
 12751                           ;main.c: 825: }
 12752                           ;main.c: 828: p = strtok((0), ",");
 12753  0067A0  DA09               	call	PL6	;call to abstracted procedure
 12754  0067A2  ECDB  F014         	call	_strtok	;wreg free
 12755  0067A6  C025  F2BB         	movff	?_strtok,doModeVerbose@p_1215
 12756  0067AA  C026  F2BC         	movff	?_strtok+1,doModeVerbose@p_1215+1
 12757                           
 12758                           ;main.c: 829: if ((0) != p) {
 12759  0067AE  0102               	movlb	2	; () banked
 12760  0067B0  51BC               	movf	(doModeVerbose@p_1215+1)& (0+255),w,b
 12761  0067B2  11BB               	iorwf	doModeVerbose@p_1215& (0+255),w,b
 12762  0067B4  E00A               	bz	l13168
 12763                           
 12764                           ; BSR set to: 2
 12765                           ;main.c: 830: mask_priority = atoi(p);
 12766  0067B6  C2BB  F01F         	movff	doModeVerbose@p_1215,?_atoi
 12767  0067BA  C2BC  F020         	movff	doModeVerbose@p_1215+1,?_atoi+1
 12768  0067BE  EC54  F01B         	call	_atoi	;wreg free
 12769  0067C2  501F               	movf	?_atoi,w,c
 12770  0067C4  0102               	movlb	2	; () banked
 12771  0067C6  6F91               	movwf	doModeVerbose@mask_priority& (0+255),b
 12772                           
 12773                           ;main.c: 831: } else {
 12774  0067C8  D007               	goto	l13172
 12775  0067CA                     l13168:
 12776                           
 12777                           ; BSR set to: 2
 12778                           ;main.c: 832: putsUSART((char *) "-ERROR - mask for priority is missing\r\n");
 12779  0067CA  0E74               	movlw	high STR_99
 12780  0067CC  6E1B               	movwf	?_putsUSART+1,c
 12781  0067CE  0ECE               	movlw	low STR_99
 12782  0067D0  6E1A               	movwf	?_putsUSART,c
 12783  0067D2  EC2E  F011         	call	_putsUSART	;wreg free
 12784  0067D6  D1E6               	goto	l498
 12785  0067D8                     l13172:
 12786                           
 12787                           ; BSR set to: 2
 12788                           ;main.c: 834: }
 12789                           ;main.c: 837: p = strtok((0), ",");
 12790  0067D8  D9ED               	call	PL6	;call to abstracted procedure
 12791  0067DA  ECDB  F014         	call	_strtok	;wreg free
 12792  0067DE  C025  F2BB         	movff	?_strtok,doModeVerbose@p_1215
 12793  0067E2  C026  F2BC         	movff	?_strtok+1,doModeVerbose@p_1215+1
 12794                           
 12795                           ;main.c: 838: if ((0) != p) {
 12796  0067E6  0102               	movlb	2	; () banked
 12797  0067E8  51BC               	movf	(doModeVerbose@p_1215+1)& (0+255),w,b
 12798  0067EA  11BB               	iorwf	doModeVerbose@p_1215& (0+255),w,b
 12799  0067EC  E00B               	bz	l13178
 12800                           
 12801                           ; BSR set to: 2
 12802                           ;main.c: 839: mask_class = atoi(p);
 12803  0067EE  C2BB  F01F         	movff	doModeVerbose@p_1215,?_atoi
 12804  0067F2  C2BC  F020         	movff	doModeVerbose@p_1215+1,?_atoi+1
 12805  0067F6  EC54  F01B         	call	_atoi	;wreg free
 12806  0067FA  C01F  F28A         	movff	?_atoi,doModeVerbose@mask_class
 12807  0067FE  C020  F28B         	movff	?_atoi+1,doModeVerbose@mask_class+1
 12808                           
 12809                           ;main.c: 840: } else {
 12810  006802  D007               	goto	l13182
 12811  006804                     l13178:
 12812                           
 12813                           ; BSR set to: 2
 12814                           ;main.c: 841: putsUSART((char *) "-ERROR - mask for class is missing\r\n");
 12815  006804  0E76               	movlw	high STR_101
 12816  006806  6E1B               	movwf	?_putsUSART+1,c
 12817  006808  0E78               	movlw	low STR_101
 12818  00680A  6E1A               	movwf	?_putsUSART,c
 12819  00680C  EC2E  F011         	call	_putsUSART	;wreg free
 12820  006810  D1C9               	goto	l498
 12821  006812                     l13182:
 12822                           
 12823                           ;main.c: 843: }
 12824                           ;main.c: 846: p = strtok((0), ",");
 12825  006812  D9D0               	call	PL6	;call to abstracted procedure
 12826  006814  ECDB  F014         	call	_strtok	;wreg free
 12827  006818  C025  F2BB         	movff	?_strtok,doModeVerbose@p_1215
 12828  00681C  C026  F2BC         	movff	?_strtok+1,doModeVerbose@p_1215+1
 12829                           
 12830                           ;main.c: 847: if ((0) != p) {
 12831  006820  0102               	movlb	2	; () banked
 12832  006822  51BC               	movf	(doModeVerbose@p_1215+1)& (0+255),w,b
 12833  006824  11BB               	iorwf	doModeVerbose@p_1215& (0+255),w,b
 12834  006826  E00A               	bz	l13188
 12835                           
 12836                           ; BSR set to: 2
 12837                           ;main.c: 848: mask_type = atoi(p);
 12838  006828  C2BB  F01F         	movff	doModeVerbose@p_1215,?_atoi
 12839  00682C  C2BC  F020         	movff	doModeVerbose@p_1215+1,?_atoi+1
 12840  006830  EC54  F01B         	call	_atoi	;wreg free
 12841  006834  501F               	movf	?_atoi,w,c
 12842  006836  0102               	movlb	2	; () banked
 12843  006838  6F92               	movwf	doModeVerbose@mask_type& (0+255),b
 12844                           
 12845                           ;main.c: 849: } else {
 12846  00683A  D007               	goto	l13192
 12847  00683C                     l13188:
 12848                           
 12849                           ; BSR set to: 2
 12850                           ;main.c: 850: putsUSART((char *) "-ERROR - mask for type is missing\r\n");
 12851  00683C  0E76               	movlw	high STR_103
 12852  00683E  6E1B               	movwf	?_putsUSART+1,c
 12853  006840  0E9D               	movlw	low STR_103
 12854  006842  6E1A               	movwf	?_putsUSART,c
 12855  006844  EC2E  F011         	call	_putsUSART	;wreg free
 12856  006848  D1AD               	goto	l498
 12857  00684A                     l13192:
 12858                           
 12859                           ; BSR set to: 2
 12860                           ;main.c: 852: }
 12861                           ;main.c: 855: p = strtok((0), ",");
 12862  00684A  D9B4               	call	PL6	;call to abstracted procedure
 12863  00684C  ECDB  F014         	call	_strtok	;wreg free
 12864  006850  C025  F2BB         	movff	?_strtok,doModeVerbose@p_1215
 12865  006854  C026  F2BC         	movff	?_strtok+1,doModeVerbose@p_1215+1
 12866                           
 12867                           ;main.c: 856: if ((0) != p) {
 12868  006858  0102               	movlb	2	; () banked
 12869  00685A  51BC               	movf	(doModeVerbose@p_1215+1)& (0+255),w,b
 12870  00685C  11BB               	iorwf	doModeVerbose@p_1215& (0+255),w,b
 12871  00685E  E00A               	bz	l13198
 12872                           
 12873                           ; BSR set to: 2
 12874                           ;main.c: 857: mask_nodeid = atoi(p);
 12875  006860  C2BB  F01F         	movff	doModeVerbose@p_1215,?_atoi
 12876  006864  C2BC  F020         	movff	doModeVerbose@p_1215+1,?_atoi+1
 12877  006868  EC54  F01B         	call	_atoi	;wreg free
 12878  00686C  501F               	movf	?_atoi,w,c
 12879  00686E  0102               	movlb	2	; () banked
 12880  006870  6F93               	movwf	doModeVerbose@mask_nodeid& (0+255),b
 12881                           
 12882                           ;main.c: 858: } else {
 12883  006872  D007               	goto	l13202
 12884  006874                     l13198:
 12885                           
 12886                           ; BSR set to: 2
 12887                           ;main.c: 859: putsUSART((char *) "-ERROR - mask for nide id is missing\r\n");
 12888  006874  0E75               	movlw	high STR_105
 12889  006876  6E1B               	movwf	?_putsUSART+1,c
 12890  006878  0E93               	movlw	low STR_105
 12891  00687A  6E1A               	movwf	?_putsUSART,c
 12892  00687C  EC2E  F011         	call	_putsUSART	;wreg free
 12893  006880  D191               	goto	l498
 12894  006882                     l13202:
 12895                           
 12896                           ; BSR set to: 2
 12897                           ;main.c: 861: }
 12898                           ;main.c: 863: uint32_t id = ((uint32_t) mask_priority << 26) |
 12899                           ;main.c: 864: ((uint32_t) mask_class << 16) |
 12900                           ;main.c: 865: ((uint32_t) mask_type << 8) |
 12901                           ;main.c: 866: mask_nodeid;
 12902  006882  C292  F0B2         	movff	doModeVerbose@mask_type,??_doModeVerbose
 12903  006886  D9F7               	call	PL40	;call to abstracted procedure
 12904  006888  518A               	movf	doModeVerbose@mask_class& (0+255),w,b
 12905  00688A  0100               	movlb	0	; () banked
 12906  00688C  6FB6               	movwf	(??_doModeVerbose+4)& (0+255),b
 12907  00688E  0102               	movlb	2	; () banked
 12908  006890  518B               	movf	(doModeVerbose@mask_class+1)& (0+255),w,b
 12909  006892  DA17               	call	PL58	;call to abstracted procedure
 12910  006894  C291  F0BA         	movff	doModeVerbose@mask_priority,??_doModeVerbose+8
 12911  006898  D994               	call	PL8	;call to abstracted procedure
 12912  00689A  5193               	movf	doModeVerbose@mask_nodeid& (0+255),w,b
 12913  00689C  0100               	movlb	0	; () banked
 12914  00689E  11C2               	iorwf	(??_doModeVerbose+16)& (0+255),w,b
 12915  0068A0  0102               	movlb	2	; () banked
 12916  0068A2  6FA3               	movwf	doModeVerbose@id_1227& (0+255),b
 12917  0068A4  0100               	movlb	0	; () banked
 12918  0068A6  51C3               	movf	(??_doModeVerbose+17)& (0+255),w,b
 12919  0068A8  0102               	movlb	2	; () banked
 12920  0068AA  6FA4               	movwf	(doModeVerbose@id_1227+1)& (0+255),b
 12921  0068AC  0100               	movlb	0	; () banked
 12922  0068AE  51C4               	movf	(??_doModeVerbose+18)& (0+255),w,b
 12923  0068B0  0102               	movlb	2	; () banked
 12924  0068B2  6FA5               	movwf	(doModeVerbose@id_1227+2)& (0+255),b
 12925  0068B4  0100               	movlb	0	; () banked
 12926  0068B6  51C5               	movf	(??_doModeVerbose+19)& (0+255),w,b
 12927  0068B8  0102               	movlb	2	; () banked
 12928  0068BA  6FA6               	movwf	(doModeVerbose@id_1227+3)& (0+255),b
 12929                           
 12930                           ; BSR set to: 2
 12931                           ;main.c: 869: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 12932  0068BC  0E80               	movlw	128
 12933  0068BE  EC83  F00E         	call	_ECANSetOperationMode
 12934                           
 12935                           ;main.c: 871: maskno ? _CANIDToRegs((BYTE*)&RXM0SIDH, id, 1) :
 12936                           ;main.c: 872: _CANIDToRegs((BYTE*)&RXM1SIDH, id, 1);
 12937  0068C2  0102               	movlb	2	; () banked
 12938  0068C4  51A8               	movf	doModeVerbose@maskno& (0+255),w,b
 12939  0068C6  E008               	bz	l13210
 12940                           
 12941                           ; BSR set to: 2
 12942  0068C8  010F               	movlb	15	; () banked
 12943  0068CA  0E0F               	movlw	15	;volatile
 12944  0068CC  6E1A               	movwf	?__CANIDToRegs+1,c
 12945  0068CE  0E18               	movlw	24	;volatile
 12946  0068D0  D9EC               	call	PL52	;call to abstracted procedure
 12947  0068D2  EC56  F01C         	call	__CANIDToRegs	;wreg free
 12948  0068D6  D157               	goto	l13288
 12949  0068D8                     l13210:
 12950                           
 12951                           ; BSR set to: 2
 12952  0068D8  010F               	movlb	15	; () banked
 12953  0068DA  0E0F               	movlw	15	;volatile
 12954  0068DC  6E1A               	movwf	?__CANIDToRegs+1,c
 12955  0068DE  0E1C               	movlw	28	;volatile
 12956  0068E0  D9E4               	call	PL52	;call to abstracted procedure
 12957  0068E2  EC56  F01C         	call	__CANIDToRegs	;wreg free
 12958  0068E6  D14F               	goto	l13288
 12959  0068E8                     l13212:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;main.c: 879: else if (cmdbuf == stristr(cmdbuf, "SET ")) {
 12963  0068E8  0101               	movlb	1	; () banked
 12964  0068EA  0E01               	movlw	high _cmdbuf
 12965  0068EC  6E27               	movwf	?_stristr+1,c
 12966  0068EE  0E24               	movlw	low _cmdbuf
 12967  0068F0  6E26               	movwf	?_stristr,c
 12968  0068F2  0E7C               	movlw	high STR_106
 12969  0068F4  6E29               	movwf	?_stristr+3,c
 12970  0068F6  0E9E               	movlw	low STR_106
 12971  0068F8  6E28               	movwf	?_stristr+2,c
 12972  0068FA  EC8F  F013         	call	_stristr	;wreg free
 12973  0068FE  D953               	call	PL2	;call to abstracted procedure
 12974  006900  E102               	bnz	u17485
 12975  006902  5026               	movf	?_stristr,w,c
 12976  006904  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 12977  006906                     u17485:
 12978  006906  E001 D138          	bnz	l13286
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;main.c: 882: strcpy(cmdbuf, cmdbuf + 4);
 12982  00690A  0E01               	movlw	high _cmdbuf
 12983  00690C  6E1A               	movwf	?_strcpy+1,c
 12984  00690E  0E24               	movlw	low _cmdbuf
 12985  006910  6E19               	movwf	?_strcpy,c
 12986  006912  0E28               	movlw	low (_cmdbuf+4)
 12987  006914  0100               	movlb	0	; () banked
 12988  006916  6FB2               	movwf	??_doModeVerbose& (0+255),b
 12989  006918  0E01               	movlw	high (_cmdbuf+4)
 12990  00691A  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 12991  00691C  C0B2  F01B         	movff	??_doModeVerbose,?_strcpy+2
 12992  006920  C0B3  F01C         	movff	??_doModeVerbose+1,?_strcpy+3
 12993  006924  ECE5  F00E         	call	_strcpy	;wreg free
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;main.c: 885: if (cmdbuf == stristr(cmdbuf, "HEX")) {
 12997  006928  0101               	movlb	1	; () banked
 12998  00692A  0E01               	movlw	high _cmdbuf
 12999  00692C  6E27               	movwf	?_stristr+1,c
 13000  00692E  0E24               	movlw	low _cmdbuf
 13001  006930  6E26               	movwf	?_stristr,c
 13002  006932  0E7C               	movlw	high STR_107
 13003  006934  6E29               	movwf	?_stristr+3,c
 13004  006936  0EDD               	movlw	low STR_107
 13005  006938  6E28               	movwf	?_stristr+2,c
 13006  00693A  EC8F  F013         	call	_stristr	;wreg free
 13007  00693E  D933               	call	PL2	;call to abstracted procedure
 13008  006940  E102               	bnz	u17495
 13009  006942  5026               	movf	?_stristr,w,c
 13010  006944  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 13011  006946                     u17495:
 13012  006946  E110               	bnz	l13224
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;main.c: 886: bHex = 1;
 13016  006948  0E01               	movlw	1
 13017  00694A  6FD3               	movwf	_bHex& (0+255),b
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;main.c: 887: writeEEPROM(0x06, 1);
 13021  00694C  6A1A               	clrf	?_writeEEPROM+1,c
 13022  00694E  0E06               	movlw	6
 13023  006950  6E19               	movwf	?_writeEEPROM,c
 13024  006952  0E01               	movlw	1
 13025  006954  6E1B               	movwf	?_writeEEPROM+2,c
 13026  006956  ECBC  F00E         	call	_writeEEPROM	;wreg free
 13027                           
 13028                           ;main.c: 888: putsUSART((char *) "+OK - Numerical output now in hexadecimal\r\n");
 13029  00695A  0E74               	movlw	high STR_108
 13030  00695C  6E1B               	movwf	?_putsUSART+1,c
 13031  00695E  0E27               	movlw	low STR_108
 13032  006960  6E1A               	movwf	?_putsUSART,c
 13033  006962  EC2E  F011         	call	_putsUSART	;wreg free
 13034                           
 13035                           ;main.c: 889: }
 13036  006966  D10F               	goto	l13288
 13037  006968                     l13224:
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;main.c: 890: else if (cmdbuf == stristr(cmdbuf, "DECIMAL")) {
 13041  006968  0101               	movlb	1	; () banked
 13042  00696A  0E01               	movlw	high _cmdbuf
 13043  00696C  6E27               	movwf	?_stristr+1,c
 13044  00696E  0E24               	movlw	low _cmdbuf
 13045  006970  6E26               	movwf	?_stristr,c
 13046  006972  0E7C               	movlw	high STR_109
 13047  006974  6E29               	movwf	?_stristr+3,c
 13048  006976  0E06               	movlw	low STR_109
 13049  006978  6E28               	movwf	?_stristr+2,c
 13050  00697A  EC8F  F013         	call	_stristr	;wreg free
 13051  00697E  D913               	call	PL2	;call to abstracted procedure
 13052  006980  E102               	bnz	u17505
 13053  006982  5026               	movf	?_stristr,w,c
 13054  006984  19B2               	xorwf	??_doModeVerbose& (0+255),w,b
 13055  006986                     u17505:
 13056  006986  E10F               	bnz	l13232
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;main.c: 891: bHex = 0;
 13060  006988  6BD3               	clrf	_bHex& (0+255),b
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;main.c: 892: writeEEPROM(0x06, 0);
 13064  00698A  6A1A               	clrf	?_writeEEPROM+1,c
 13065  00698C  0E06               	movlw	6
 13066  00698E  6E19               	movwf	?_writeEEPROM,c
 13067  006990  0E00               	movlw	0
 13068  006992  6A1B               	clrf	?_writeEEPROM+2,c
 13069  006994  ECBC  F00E         	call	_writeEEPROM	;wreg free
 13070                           
 13071                           ;main.c: 893: putsUSART((char *) "+OK - Numerical output now in decimal\r\n");
 13072  006998  0E74               	movlw	high STR_110
 13073  00699A  6E1B               	movwf	?_putsUSART+1,c
 13074  00699C  0EF6               	movlw	low STR_110
 13075  00699E  6E1A               	movwf	?_putsUSART,c
 13076  0069A0  EC2E  F011         	call	_putsUSART	;wreg free
 13077                           
 13078                           ;main.c: 894: } else if (0 != stristr(cmdbuf, "RWTIMEOUT ")) {
 13079  0069A4  D0F0               	goto	l13288
 13080  0069A6                     l13232:
 13081                           
 13082                           ; BSR set to: 0
 13083  0069A6  0101               	movlb	1	; () banked
 13084  0069A8  0E01               	movlw	high _cmdbuf
 13085  0069AA  6E27               	movwf	?_stristr+1,c
 13086  0069AC  0E24               	movlw	low _cmdbuf
 13087  0069AE  6E26               	movwf	?_stristr,c
 13088  0069B0  0E7B               	movlw	high STR_111
 13089  0069B2  6E29               	movwf	?_stristr+3,c
 13090  0069B4  0E87               	movlw	low STR_111
 13091  0069B6  6E28               	movwf	?_stristr+2,c
 13092  0069B8  EC8F  F013         	call	_stristr	;wreg free
 13093  0069BC  5027               	movf	?_stristr+1,w,c
 13094  0069BE  1026               	iorwf	?_stristr,w,c
 13095  0069C0  E025               	bz	l13244
 13096                           
 13097                           ;main.c: 895: strcpy(cmdbuf, cmdbuf + 10);
 13098  0069C2  0E01               	movlw	high _cmdbuf
 13099  0069C4  6E1A               	movwf	?_strcpy+1,c
 13100  0069C6  0E24               	movlw	low _cmdbuf
 13101  0069C8  6E19               	movwf	?_strcpy,c
 13102  0069CA  0E2E               	movlw	low (_cmdbuf+10)
 13103  0069CC  0100               	movlb	0	; () banked
 13104  0069CE  6FB2               	movwf	??_doModeVerbose& (0+255),b
 13105  0069D0  0E01               	movlw	high (_cmdbuf+10)
 13106  0069D2  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 13107  0069D4  C0B2  F01B         	movff	??_doModeVerbose,?_strcpy+2
 13108  0069D8  C0B3  F01C         	movff	??_doModeVerbose+1,?_strcpy+3
 13109  0069DC  ECE5  F00E         	call	_strcpy	;wreg free
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;main.c: 896: rwtimeout = atoi(cmdbuf);
 13113  0069E0  0101               	movlb	1	; () banked
 13114  0069E2  0E01               	movlw	high _cmdbuf
 13115  0069E4  6E20               	movwf	?_atoi+1,c
 13116  0069E6  0E24               	movlw	low _cmdbuf
 13117  0069E8  6E1F               	movwf	?_atoi,c
 13118  0069EA  EC54  F01B         	call	_atoi	;wreg free
 13119  0069EE  501F               	movf	?_atoi,w,c
 13120  0069F0  0100               	movlb	0	; () banked
 13121  0069F2  6FD9               	movwf	_rwtimeout& (0+255),b
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;main.c: 897: if (rwtimeout < 10u) {
 13125  0069F4  0E0A               	movlw	10
 13126  0069F6  61D9               	cpfslt	_rwtimeout& (0+255),b
 13127  0069F8  D001               	goto	l13242
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;main.c: 898: rwtimeout = 10u;
 13131  0069FA  6FD9               	movwf	_rwtimeout& (0+255),b
 13132  0069FC                     l13242:
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;main.c: 899: }
 13136                           ;main.c: 900: writeEEPROM(0x09, rwtimeout);
 13137  0069FC  6A1A               	clrf	?_writeEEPROM+1,c
 13138  0069FE  0E09               	movlw	9
 13139  006A00  6E19               	movwf	?_writeEEPROM,c
 13140  006A02  C0D9  F01B         	movff	_rwtimeout,?_writeEEPROM+2
 13141  006A06  ECBC  F00E         	call	_writeEEPROM	;wreg free
 13142                           
 13143                           ;main.c: 901: } else if (0 != stristr(cmdbuf, "STARTIF ")) {
 13144  006A0A  D0BD               	goto	l13288
 13145  006A0C                     l13244:
 13146  006A0C  0101               	movlb	1	; () banked
 13147  006A0E  0E01               	movlw	high _cmdbuf
 13148  006A10  6E27               	movwf	?_stristr+1,c
 13149  006A12  0E24               	movlw	low _cmdbuf
 13150  006A14  6E26               	movwf	?_stristr,c
 13151  006A16  0E7B               	movlw	high STR_112
 13152  006A18  6E29               	movwf	?_stristr+3,c
 13153  006A1A  0EBB               	movlw	low STR_112
 13154  006A1C  6E28               	movwf	?_stristr+2,c
 13155  006A1E  EC8F  F013         	call	_stristr	;wreg free
 13156  006A22  5027               	movf	?_stristr+1,w,c
 13157  006A24  1026               	iorwf	?_stristr,w,c
 13158  006A26  E005               	bz	l13248
 13159                           
 13160                           ;main.c: 902: strcpy(cmdbuf, cmdbuf + 8);
 13161  006A28  0E01               	movlw	high _cmdbuf
 13162  006A2A  D8FE               	call	PL16	;call to abstracted procedure
 13163  006A2C  ECE5  F00E         	call	_strcpy	;wreg free
 13164                           
 13165                           ;main.c: 903: } else if (0 != stristr(cmdbuf, "MODE ")) {
 13166  006A30  D0AA               	goto	l13288
 13167  006A32                     l13248:
 13168  006A32  0101               	movlb	1	; () banked
 13169  006A34  0E01               	movlw	high _cmdbuf
 13170  006A36  6E27               	movwf	?_stristr+1,c
 13171  006A38  0E24               	movlw	low _cmdbuf
 13172  006A3A  6E26               	movwf	?_stristr,c
 13173  006A3C  0E7C               	movlw	high STR_113
 13174  006A3E  6E29               	movwf	?_stristr+3,c
 13175  006A40  0E86               	movlw	low STR_113
 13176  006A42  6E28               	movwf	?_stristr+2,c
 13177  006A44  EC8F  F013         	call	_stristr	;wreg free
 13178  006A48  5027               	movf	?_stristr+1,w,c
 13179  006A4A  1026               	iorwf	?_stristr,w,c
 13180  006A4C  E05F               	bz	l13276
 13181                           
 13182                           ;main.c: 904: strcpy(cmdbuf, cmdbuf + 5);
 13183  006A4E  D8DE               	call	PL10	;call to abstracted procedure
 13184  006A50  ECE5  F00E         	call	_strcpy	;wreg free
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;main.c: 905: if (0 != stristr(cmdbuf, "VERBOSE")) {
 13188  006A54  0101               	movlb	1	; () banked
 13189  006A56  0E01               	movlw	high _cmdbuf
 13190  006A58  6E27               	movwf	?_stristr+1,c
 13191  006A5A  0E24               	movlw	low _cmdbuf
 13192  006A5C  6E26               	movwf	?_stristr,c
 13193  006A5E  0E7B               	movlw	high STR_114
 13194  006A60  6E29               	movwf	?_stristr+3,c
 13195  006A62  0EFE               	movlw	low STR_114
 13196  006A64  6E28               	movwf	?_stristr+2,c
 13197  006A66  EC8F  F013         	call	_stristr	;wreg free
 13198  006A6A  5027               	movf	?_stristr+1,w,c
 13199  006A6C  1026               	iorwf	?_stristr,w,c
 13200  006A6E  E010               	bz	l13260
 13201                           
 13202                           ;main.c: 906: mode = 0;
 13203  006A70  0100               	movlb	0	; () banked
 13204  006A72  6BD7               	clrf	_mode& (0+255),b
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;main.c: 907: writeEEPROM(0x03, 0);
 13208  006A74  6A1A               	clrf	?_writeEEPROM+1,c
 13209  006A76  0E03               	movlw	3
 13210  006A78  6E19               	movwf	?_writeEEPROM,c
 13211  006A7A  0E00               	movlw	0
 13212  006A7C  6A1B               	clrf	?_writeEEPROM+2,c
 13213  006A7E  ECBC  F00E         	call	_writeEEPROM	;wreg free
 13214                           
 13215                           ;main.c: 908: putsUSART((char *) "+OK - Mode is now verbose\r\n");
 13216  006A82  0E78               	movlw	high STR_115
 13217  006A84  6E1B               	movwf	?_putsUSART+1,c
 13218  006A86  0E48               	movlw	low STR_115
 13219  006A88  6E1A               	movwf	?_putsUSART,c
 13220  006A8A  EC2E  F011         	call	_putsUSART	;wreg free
 13221                           
 13222                           ;main.c: 909: } else if (0 != stristr(cmdbuf, "VSCP")) {
 13223  006A8E  D07B               	goto	l13288
 13224  006A90                     l13260:
 13225  006A90  0101               	movlb	1	; () banked
 13226  006A92  0E01               	movlw	high _cmdbuf
 13227  006A94  6E27               	movwf	?_stristr+1,c
 13228  006A96  0E24               	movlw	low _cmdbuf
 13229  006A98  6E26               	movwf	?_stristr,c
 13230  006A9A  0E7C               	movlw	high STR_116
 13231  006A9C  6E29               	movwf	?_stristr+3,c
 13232  006A9E  0EC1               	movlw	low STR_116
 13233  006AA0  6E28               	movwf	?_stristr+2,c
 13234  006AA2  EC8F  F013         	call	_stristr	;wreg free
 13235  006AA6  5027               	movf	?_stristr+1,w,c
 13236  006AA8  1026               	iorwf	?_stristr,w,c
 13237  006AAA  E011               	bz	l13268
 13238                           
 13239                           ;main.c: 910: mode = 1;
 13240  006AAC  0E01               	movlw	1
 13241  006AAE  0100               	movlb	0	; () banked
 13242  006AB0  6FD7               	movwf	_mode& (0+255),b
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;main.c: 911: writeEEPROM(0x03, 1);
 13246  006AB2  6A1A               	clrf	?_writeEEPROM+1,c
 13247  006AB4  0E03               	movlw	3
 13248  006AB6  6E19               	movwf	?_writeEEPROM,c
 13249  006AB8  0E01               	movlw	1
 13250  006ABA  6E1B               	movwf	?_writeEEPROM+2,c
 13251  006ABC  ECBC  F00E         	call	_writeEEPROM	;wreg free
 13252                           
 13253                           ;main.c: 912: putsUSART((char *) "+OK - Mode is now VSCP Driver\r\n");
 13254  006AC0  0E77               	movlw	high STR_117
 13255  006AC2  6E1B               	movwf	?_putsUSART+1,c
 13256  006AC4  0ECD               	movlw	low STR_117
 13257  006AC6  6E1A               	movwf	?_putsUSART,c
 13258  006AC8  EC2E  F011         	call	_putsUSART	;wreg free
 13259                           
 13260                           ;main.c: 913: } else if (0 != stristr(cmdbuf, "SLCAN")) {
 13261  006ACC  D05C               	goto	l13288
 13262  006ACE                     l13268:
 13263  006ACE  0101               	movlb	1	; () banked
 13264  006AD0  0E01               	movlw	high _cmdbuf
 13265  006AD2  6E27               	movwf	?_stristr+1,c
 13266  006AD4  0E24               	movlw	low _cmdbuf
 13267  006AD6  6E26               	movwf	?_stristr,c
 13268  006AD8  0E7C               	movlw	high STR_118
 13269  006ADA  6E29               	movwf	?_stristr+3,c
 13270  006ADC  0E98               	movlw	low STR_118
 13271  006ADE  6E28               	movwf	?_stristr+2,c
 13272  006AE0  EC8F  F013         	call	_stristr	;wreg free
 13273  006AE4  5027               	movf	?_stristr+1,w,c
 13274  006AE6  1026               	iorwf	?_stristr,w,c
 13275  006AE8  E04E               	bz	l13288
 13276                           
 13277                           ;main.c: 914: mode = 2;
 13278  006AEA  0E02               	movlw	2
 13279  006AEC  0100               	movlb	0	; () banked
 13280  006AEE  6FD7               	movwf	_mode& (0+255),b
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;main.c: 915: writeEEPROM(0x03, 2);
 13284  006AF0  6A1A               	clrf	?_writeEEPROM+1,c
 13285  006AF2  0E03               	movlw	3
 13286  006AF4  6E19               	movwf	?_writeEEPROM,c
 13287  006AF6  0E02               	movlw	2
 13288  006AF8  6E1B               	movwf	?_writeEEPROM+2,c
 13289  006AFA  ECBC  F00E         	call	_writeEEPROM	;wreg free
 13290                           
 13291                           ;main.c: 916: putsUSART((char *) "+OK - Mode is now SLCAN\r\n");
 13292  006AFE  0E78               	movlw	high STR_119
 13293  006B00  6E1B               	movwf	?_putsUSART+1,c
 13294  006B02  0EB5               	movlw	low STR_119
 13295  006B04  6E1A               	movwf	?_putsUSART,c
 13296  006B06  EC2E  F011         	call	_putsUSART	;wreg free
 13297  006B0A  D03D               	goto	l13288
 13298  006B0C                     l13276:
 13299                           
 13300                           ;main.c: 919: else if (0 != stristr(cmdbuf, "FILTER ")) {
 13301  006B0C  0101               	movlb	1	; () banked
 13302  006B0E  0E01               	movlw	high _cmdbuf
 13303  006B10  6E27               	movwf	?_stristr+1,c
 13304  006B12  0E24               	movlw	low _cmdbuf
 13305  006B14  6E26               	movwf	?_stristr,c
 13306  006B16  0E7B               	movlw	high STR_120
 13307  006B18  6E29               	movwf	?_stristr+3,c
 13308  006B1A  0EEE               	movlw	low STR_120
 13309  006B1C  6E28               	movwf	?_stristr+2,c
 13310  006B1E  EC8F  F013         	call	_stristr	;wreg free
 13311  006B22  5027               	movf	?_stristr+1,w,c
 13312  006B24  1026               	iorwf	?_stristr,w,c
 13313  006B26  E010               	bz	l13280
 13314                           
 13315                           ;main.c: 920: strcpy(cmdbuf, cmdbuf + 7);
 13316  006B28  0E01               	movlw	high _cmdbuf
 13317  006B2A  6E1A               	movwf	?_strcpy+1,c
 13318  006B2C  0E24               	movlw	low _cmdbuf
 13319  006B2E  6E19               	movwf	?_strcpy,c
 13320  006B30  0E2B               	movlw	low (_cmdbuf+7)
 13321  006B32  0100               	movlb	0	; () banked
 13322  006B34  6FB2               	movwf	??_doModeVerbose& (0+255),b
 13323  006B36  0E01               	movlw	high (_cmdbuf+7)
 13324  006B38  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 13325  006B3A  C0B2  F01B         	movff	??_doModeVerbose,?_strcpy+2
 13326  006B3E  C0B3  F01C         	movff	??_doModeVerbose+1,?_strcpy+3
 13327  006B42  ECE5  F00E         	call	_strcpy	;wreg free
 13328                           
 13329                           ;main.c: 921: }
 13330  006B46  D01F               	goto	l13288
 13331  006B48                     l13280:
 13332                           
 13333                           ;main.c: 922: else if (0 != stristr(cmdbuf, "MASK ")) {
 13334  006B48  0101               	movlb	1	; () banked
 13335  006B4A  0E01               	movlw	high _cmdbuf
 13336  006B4C  6E27               	movwf	?_stristr+1,c
 13337  006B4E  0E24               	movlw	low _cmdbuf
 13338  006B50  6E26               	movwf	?_stristr,c
 13339  006B52  0E7C               	movlw	high STR_121
 13340  006B54  6E29               	movwf	?_stristr+3,c
 13341  006B56  0E8C               	movlw	low STR_121
 13342  006B58  6E28               	movwf	?_stristr+2,c
 13343  006B5A  EC8F  F013         	call	_stristr	;wreg free
 13344  006B5E  5027               	movf	?_stristr+1,w,c
 13345  006B60  1026               	iorwf	?_stristr,w,c
 13346  006B62  E004               	bz	l13284
 13347                           
 13348                           ;main.c: 923: strcpy(cmdbuf, cmdbuf + 5);
 13349  006B64  D853               	call	PL10	;call to abstracted procedure
 13350  006B66  ECE5  F00E         	call	_strcpy	;wreg free
 13351                           
 13352                           ;main.c: 924: } else {
 13353  006B6A  D00D               	goto	l13288
 13354  006B6C                     l13284:
 13355                           
 13356                           ;main.c: 925: putsUSART((char *) "-ERROR - Unknown 'SET' command\r\n");
 13357  006B6C  0E77               	movlw	high STR_122
 13358  006B6E  6E1B               	movwf	?_putsUSART+1,c
 13359  006B70  0E6A               	movlw	low STR_122
 13360  006B72  6E1A               	movwf	?_putsUSART,c
 13361  006B74  EC2E  F011         	call	_putsUSART	;wreg free
 13362  006B78  D006               	goto	l13288
 13363  006B7A                     l13286:
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;main.c: 929: putsUSART((char *) "-ERROR - Unknown command\r\n");
 13367  006B7A  0E78               	movlw	high STR_123
 13368  006B7C  6E1B               	movwf	?_putsUSART+1,c
 13369  006B7E  0E7F               	movlw	low STR_123
 13370  006B80  6E1A               	movwf	?_putsUSART,c
 13371  006B82  EC2E  F011         	call	_putsUSART	;wreg free
 13372  006B86                     l13288:
 13373                           
 13374                           ;main.c: 930: }
 13375                           ;main.c: 932: memset(cmdbuf, 0, sizeof ( cmdbuf));
 13376  006B86  0101               	movlb	1	; () banked
 13377  006B88  0E01               	movlw	high _cmdbuf
 13378  006B8A  6E1A               	movwf	?_memset+1,c
 13379  006B8C  0E24               	movlw	low _cmdbuf
 13380  006B8E  6E19               	movwf	?_memset,c
 13381  006B90  6A1C               	clrf	?_memset+3,c
 13382  006B92  6A1B               	clrf	?_memset+2,c
 13383  006B94  6A1E               	clrf	?_memset+5,c
 13384  006B96  0E50               	movlw	80
 13385  006B98  6E1D               	movwf	?_memset+4,c
 13386  006B9A  ECCF  F00E         	call	_memset	;wreg free
 13387                           
 13388                           ;main.c: 933: pos = 0;
 13389  006B9E  0100               	movlb	0	; () banked
 13390  006BA0  6BD8               	clrf	_pos& (0+255),b
 13391  006BA2                     l13292:
 13392                           
 13393                           ;main.c: 934: }
 13394                           ;main.c: 935: }
 13395                           ;main.c: 938: (INTCONbits.GIE = 1);
 13396  006BA2  8EF2               	bsf	intcon,7,c	;volatile
 13397  006BA4                     l498:
 13398  006BA4  0012               	return	
 13399  006BA6                     __end_of_doModeVerbose:
 13400                           	opt stack 0
 13401  006BA6                     PL2:
 13402                           	opt stack 20
 13403  006BA6  0E24               	movlw	low _cmdbuf
 13404  006BA8  0100               	movlb	0	; () banked
 13405  006BAA  6FB2               	movwf	??_doModeVerbose& (0+255),b
 13406  006BAC  0E01               	movlw	high _cmdbuf
 13407  006BAE  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 13408  006BB0  1827               	xorwf	?_stristr+1,w,c
 13409  006BB2  0012               	return	
 13410  006BB4                     __end_ofPL2:
 13411                           	opt stack 0
 13412  006BB4                     PL6:
 13413                           	opt stack 20
 13414  006BB4  6A26               	clrf	?_strtok+1,c
 13415  006BB6  6A25               	clrf	?_strtok,c
 13416  006BB8  0E7C               	movlw	high STR_29
 13417  006BBA  6E28               	movwf	?_strtok+3,c
 13418  006BBC  0EF5               	movlw	low STR_29
 13419  006BBE  6E27               	movwf	?_strtok+2,c
 13420  006BC0  0012               	return	
 13421  006BC2                     __end_ofPL6:
 13422                           	opt stack 0
 13423  006BC2                     PL8:
 13424                           	opt stack 20
 13425  006BC2  6BBB               	clrf	(??_doModeVerbose+9)& (0+255),b
 13426  006BC4  6BBC               	clrf	(??_doModeVerbose+10)& (0+255),b
 13427  006BC6  6BBD               	clrf	(??_doModeVerbose+11)& (0+255),b
 13428  006BC8  0E1A               	movlw	26
 13429  006BCA                     u17385:
 13430  006BCA  90D8               	bcf	status,0,c
 13431  006BCC  37BA               	rlcf	(??_doModeVerbose+8)& (0+255),f,b
 13432  006BCE  37BB               	rlcf	(??_doModeVerbose+9)& (0+255),f,b
 13433  006BD0  37BC               	rlcf	(??_doModeVerbose+10)& (0+255),f,b
 13434  006BD2  37BD               	rlcf	(??_doModeVerbose+11)& (0+255),f,b
 13435  006BD4  2EE8               	decfsz	wreg,f,c
 13436  006BD6  D7F9               	goto	u17385
 13437  006BD8  51B6               	movf	(??_doModeVerbose+4)& (0+255),w,b
 13438  006BDA  11BA               	iorwf	(??_doModeVerbose+8)& (0+255),w,b
 13439  006BDC  6FBE               	movwf	(??_doModeVerbose+12)& (0+255),b
 13440  006BDE  51B7               	movf	(??_doModeVerbose+5)& (0+255),w,b
 13441  006BE0  11BB               	iorwf	(??_doModeVerbose+9)& (0+255),w,b
 13442  006BE2  6FBF               	movwf	(??_doModeVerbose+13)& (0+255),b
 13443  006BE4  51B8               	movf	(??_doModeVerbose+6)& (0+255),w,b
 13444  006BE6  11BC               	iorwf	(??_doModeVerbose+10)& (0+255),w,b
 13445  006BE8  6FC0               	movwf	(??_doModeVerbose+14)& (0+255),b
 13446  006BEA  51B9               	movf	(??_doModeVerbose+7)& (0+255),w,b
 13447  006BEC  11BD               	iorwf	(??_doModeVerbose+11)& (0+255),w,b
 13448  006BEE  6FC1               	movwf	(??_doModeVerbose+15)& (0+255),b
 13449  006BF0  51B2               	movf	??_doModeVerbose& (0+255),w,b
 13450  006BF2  11BE               	iorwf	(??_doModeVerbose+12)& (0+255),w,b
 13451  006BF4  6FC2               	movwf	(??_doModeVerbose+16)& (0+255),b
 13452  006BF6  51B3               	movf	(??_doModeVerbose+1)& (0+255),w,b
 13453  006BF8  11BF               	iorwf	(??_doModeVerbose+13)& (0+255),w,b
 13454  006BFA  6FC3               	movwf	(??_doModeVerbose+17)& (0+255),b
 13455  006BFC  51B4               	movf	(??_doModeVerbose+2)& (0+255),w,b
 13456  006BFE  11C0               	iorwf	(??_doModeVerbose+14)& (0+255),w,b
 13457  006C00  6FC4               	movwf	(??_doModeVerbose+18)& (0+255),b
 13458  006C02  51B5               	movf	(??_doModeVerbose+3)& (0+255),w,b
 13459  006C04  11C1               	iorwf	(??_doModeVerbose+15)& (0+255),w,b
 13460  006C06  6FC5               	movwf	(??_doModeVerbose+19)& (0+255),b
 13461  006C08  0102               	movlb	2	; () banked
 13462  006C0A  0012               	return	
 13463  006C0C                     __end_ofPL8:
 13464                           	opt stack 0
 13465  006C0C                     PL10:
 13466                           	opt stack 20
 13467  006C0C  0E01               	movlw	high _cmdbuf
 13468  006C0E  6E1A               	movwf	?_strcpy+1,c
 13469  006C10  0E24               	movlw	low _cmdbuf
 13470  006C12  6E19               	movwf	?_strcpy,c
 13471  006C14  0E29               	movlw	low (_cmdbuf+5)
 13472  006C16  0100               	movlb	0	; () banked
 13473  006C18  6FB2               	movwf	??_doModeVerbose& (0+255),b
 13474  006C1A  0E01               	movlw	high (_cmdbuf+5)
 13475  006C1C  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 13476  006C1E  C0B2  F01B         	movff	??_doModeVerbose,?_strcpy+2
 13477  006C22  C0B3  F01C         	movff	??_doModeVerbose+1,?_strcpy+3
 13478  006C26  0012               	return	
 13479  006C28                     __end_ofPL10:
 13480                           	opt stack 0
 13481  006C28                     PL16:
 13482                           	opt stack 20
 13483  006C28  6E1A               	movwf	?_strcpy+1,c
 13484  006C2A  0E24               	movlw	low _cmdbuf
 13485  006C2C  6E19               	movwf	?_strcpy,c
 13486  006C2E  0E2C               	movlw	low (_cmdbuf+8)
 13487  006C30  0100               	movlb	0	; () banked
 13488  006C32  6FB2               	movwf	??_doModeVerbose& (0+255),b
 13489  006C34  0E01               	movlw	high (_cmdbuf+8)
 13490  006C36  6FB3               	movwf	(??_doModeVerbose+1)& (0+255),b
 13491  006C38  C0B2  F01B         	movff	??_doModeVerbose,?_strcpy+2
 13492  006C3C  C0B3  F01C         	movff	??_doModeVerbose+1,?_strcpy+3
 13493  006C40  0012               	return	
 13494  006C42                     __end_ofPL16:
 13495                           	opt stack 0
 13496  006C42                     PL30:
 13497                           	opt stack 20
 13498  006C42  0101               	movlb	1	; () banked
 13499  006C44  0E01               	movlw	high _cmdbuf
 13500  006C46  6E26               	movwf	?_strtok+1,c
 13501  006C48  0E24               	movlw	low _cmdbuf
 13502  006C4A  6E25               	movwf	?_strtok,c
 13503  006C4C  0E7C               	movlw	high STR_29
 13504  006C4E  6E28               	movwf	?_strtok+3,c
 13505  006C50  0EF5               	movlw	low STR_29
 13506  006C52  6E27               	movwf	?_strtok+2,c
 13507  006C54  0012               	return	
 13508  006C56                     __end_ofPL30:
 13509                           	opt stack 0
 13510  006C56                     PL34:
 13511                           	opt stack 20
 13512  006C56  0E01               	movlw	high _cmdbuf
 13513  006C58  6E26               	movwf	?_strtok+1,c
 13514  006C5A  0E24               	movlw	low _cmdbuf
 13515  006C5C  6E25               	movwf	?_strtok,c
 13516  006C5E  0E7C               	movlw	high (STR_247+5)
 13517  006C60  6E28               	movwf	?_strtok+3,c
 13518  006C62  0E2B               	movlw	low (STR_247+5)
 13519  006C64  6E27               	movwf	?_strtok+2,c
 13520  006C66  0012               	return	
 13521  006C68                     __end_ofPL34:
 13522                           	opt stack 0
 13523  006C68                     PL36:
 13524                           	opt stack 20
 13525  006C68  6A26               	clrf	?_strtok+1,c
 13526  006C6A  6A25               	clrf	?_strtok,c
 13527  006C6C  0E7C               	movlw	high (STR_247+5)
 13528  006C6E  6E28               	movwf	?_strtok+3,c
 13529  006C70  0E2B               	movlw	low (STR_247+5)
 13530  006C72  6E27               	movwf	?_strtok+2,c
 13531  006C74  0012               	return	
 13532  006C76                     __end_ofPL36:
 13533                           	opt stack 0
 13534  006C76                     PL40:
 13535                           	opt stack 20
 13536  006C76  0100               	movlb	0	; () banked
 13537  006C78  6BB3               	clrf	(??_doModeVerbose+1)& (0+255),b
 13538  006C7A  6BB4               	clrf	(??_doModeVerbose+2)& (0+255),b
 13539  006C7C  6BB5               	clrf	(??_doModeVerbose+3)& (0+255),b
 13540  006C7E  C0B4  F0B5         	movff	??_doModeVerbose+2,??_doModeVerbose+3
 13541  006C82  C0B3  F0B4         	movff	??_doModeVerbose+1,??_doModeVerbose+2
 13542  006C86  C0B2  F0B3         	movff	??_doModeVerbose,??_doModeVerbose+1
 13543  006C8A  6BB2               	clrf	??_doModeVerbose& (0+255),b
 13544  006C8C  0102               	movlb	2	; () banked
 13545  006C8E  0012               	return	
 13546  006C90                     __end_ofPL40:
 13547                           	opt stack 0
 13548  006C90                     PL42:
 13549                           	opt stack 20
 13550  006C90  0102               	movlb	2	; () banked
 13551  006C92  51B0               	movf	doModeVerbose@i_1118& (0+255),w,b
 13552  006C94  C2AE  F0B2         	movff	doModeVerbose@reg,??_doModeVerbose
 13553  006C98  0100               	movlb	0	; () banked
 13554  006C9A  6BB3               	clrf	(??_doModeVerbose+1)& (0+255),b
 13555  006C9C  27B2               	addwf	??_doModeVerbose& (0+255),f,b
 13556  006C9E  0E00               	movlw	0
 13557  006CA0  23B3               	addwfc	(??_doModeVerbose+1)& (0+255),f,b
 13558  006CA2  51B2               	movf	??_doModeVerbose& (0+255),w,b
 13559  006CA4  6F64               	movwf	(?_sprintf+4)& (0+255),b
 13560  006CA6  6B65               	clrf	(?_sprintf+5)& (0+255),b
 13561  006CA8  0012               	return	
 13562  006CAA                     __end_ofPL42:
 13563                           	opt stack 0
 13564  006CAA                     PL52:
 13565                           	opt stack 20
 13566  006CAA  6E19               	movwf	?__CANIDToRegs,c
 13567  006CAC  C2A3  F01B         	movff	doModeVerbose@id_1227,?__CANIDToRegs+2
 13568  006CB0  C2A4  F01C         	movff	doModeVerbose@id_1227+1,?__CANIDToRegs+3
 13569  006CB4  C2A5  F01D         	movff	doModeVerbose@id_1227+2,?__CANIDToRegs+4
 13570  006CB8  C2A6  F01E         	movff	doModeVerbose@id_1227+3,?__CANIDToRegs+5
 13571  006CBC  0E01               	movlw	1
 13572  006CBE  6E1F               	movwf	?__CANIDToRegs+6,c
 13573  006CC0  0C01               	retlw	1
 13574  006CC2                     __end_ofPL52:
 13575                           	opt stack 0
 13576  006CC2                     PL58:
 13577                           	opt stack 20
 13578  006CC2  0100               	movlb	0	; () banked
 13579  006CC4  6FB7               	movwf	(??_doModeVerbose+5)& (0+255),b
 13580  006CC6  6BB8               	clrf	(??_doModeVerbose+6)& (0+255),b
 13581  006CC8  6BB9               	clrf	(??_doModeVerbose+7)& (0+255),b
 13582  006CCA  C0B7  F0B9         	movff	??_doModeVerbose+5,??_doModeVerbose+7
 13583  006CCE  C0B6  F0B8         	movff	??_doModeVerbose+4,??_doModeVerbose+6
 13584  006CD2  6BB7               	clrf	(??_doModeVerbose+5)& (0+255),b
 13585  006CD4  6BB6               	clrf	(??_doModeVerbose+4)& (0+255),b
 13586  006CD6  0012               	return	
 13587  006CD8                     __end_ofPL58:
 13588                           	opt stack 0
 13589                           tblptru	equ	0xFF8
 13590                           tblptrh	equ	0xFF7
 13591                           tblptrl	equ	0xFF6
 13592                           tablat	equ	0xFF5
 13593                           prodh	equ	0xFF4
 13594                           prodl	equ	0xFF3
 13595                           intcon	equ	0xFF2
 13596                           indf0	equ	0xFEF
 13597                           postinc0	equ	0xFEE
 13598                           fsr0h	equ	0xFEA
 13599                           fsr0l	equ	0xFE9
 13600                           wreg	equ	0xFE8
 13601                           indf1	equ	0xFE7
 13602                           postinc1	equ	0xFE6
 13603                           postdec1	equ	0xFE5
 13604                           fsr1h	equ	0xFE2
 13605                           fsr1l	equ	0xFE1
 13606                           indf2	equ	0xFDF
 13607                           postinc2	equ	0xFDE
 13608                           postdec2	equ	0xFDD
 13609                           plusw2	equ	0xFDB
 13610                           fsr2h	equ	0xFDA
 13611                           fsr2l	equ	0xFD9
 13612                           status	equ	0xFD8
 13613                           
 13614 ;; *************** function _setFilter *****************
 13615 ;; Defined at:
 13616 ;;		line 2393 in file "main.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;  filter          1    wreg     unsigned char 
 13619 ;;  val             4   24[COMRAM] unsigned long 
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;  filter          1   34[COMRAM] unsigned char 
 13622 ;;  eidl            1   38[COMRAM] unsigned char 
 13623 ;;  eidh            1   37[COMRAM] unsigned char 
 13624 ;;  sidl            1   36[COMRAM] unsigned char 
 13625 ;;  sidh            1   35[COMRAM] unsigned char 
 13626 ;; Return value:  Size  Location     Type
 13627 ;;		None               void
 13628 ;; Registers used:
 13629 ;;		wreg, status,2, status,0
 13630 ;; Tracked objects:
 13631 ;;		On entry : F/2
 13632 ;;		On exit  : F/2
 13633 ;;		Unchanged: F/0
 13634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13635 ;;      Params:         4       0       0       0       0       0       0
 13636 ;;      Locals:         5       0       0       0       0       0       0
 13637 ;;      Temps:          6       0       0       0       0       0       0
 13638 ;;      Totals:        15       0       0       0       0       0       0
 13639 ;;Total ram usage:       15 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    2
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_doModeVerbose
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           	psect	text20
 13650  00462C                     __ptext20:
 13651                           	opt stack 0
 13652  00462C                     _setFilter:
 13653                           	opt stack 26
 13654                           
 13655                           ;incstack = 0
 13656                           ;incstack = 0
 13657                           ;setFilter@filter stored from wreg
 13658  00462C  CFE8 F023          	movff	wreg,setFilter@filter
 13659                           
 13660                           ; BSR set to: 2
 13661                           ;main.c: 2394: uint8_t sidh = (long) val >> 21L;
 13662  004630  0E15               	movlw	21
 13663  004632  6E1D               	movwf	??_setFilter& (0+255),c
 13664  004634  C019  F01E         	movff	setFilter@val,??_setFilter+1
 13665  004638  C01A  F01F         	movff	setFilter@val+1,??_setFilter+2
 13666  00463C  C01B  F020         	movff	setFilter@val+2,??_setFilter+3
 13667  004640  C01C  F021         	movff	setFilter@val+3,??_setFilter+4
 13668  004644                     u14625:
 13669  004644  661D               	tstfsz	??_setFilter,c
 13670  004646  D001               	goto	u14626
 13671  004648  D007               	goto	u14627
 13672  00464A                     u14626:
 13673  00464A  3421               	rlcf	??_setFilter+4,w,c
 13674  00464C  3221               	rrcf	??_setFilter+4,f,c
 13675  00464E  3220               	rrcf	??_setFilter+3,f,c
 13676  004650  321F               	rrcf	??_setFilter+2,f,c
 13677  004652  321E               	rrcf	??_setFilter+1,f,c
 13678  004654  2E1D               	decfsz	??_setFilter,f,c
 13679  004656  D7F6               	goto	u14625
 13680  004658                     u14627:
 13681  004658  501E               	movf	??_setFilter+1,w,c
 13682  00465A  6E24               	movwf	setFilter@sidh,c
 13683                           
 13684                           ;main.c: 2395: uint8_t sidl = (((long) val >> 13L) & 0xe0) |
 13685                           ;main.c: 2396: ((long) (val) & 0x03L) |
 13686                           ;main.c: 2397: 0x08;
 13687  00465C  C019  F01D         	movff	setFilter@val,??_setFilter
 13688  004660  0E03               	movlw	3
 13689  004662  161D               	andwf	??_setFilter,f,c
 13690  004664  0E0D               	movlw	13
 13691  004666  6E1E               	movwf	(??_setFilter+1)& (0+255),c
 13692  004668  C019  F01F         	movff	setFilter@val,??_setFilter+2
 13693  00466C  C01A  F020         	movff	setFilter@val+1,??_setFilter+3
 13694  004670  C01B  F021         	movff	setFilter@val+2,??_setFilter+4
 13695  004674  C01C  F022         	movff	setFilter@val+3,??_setFilter+5
 13696  004678                     u14635:
 13697  004678  661E               	tstfsz	??_setFilter+1,c
 13698  00467A  D001               	goto	u14636
 13699  00467C  D007               	goto	u14637
 13700  00467E                     u14636:
 13701  00467E  3422               	rlcf	??_setFilter+5,w,c
 13702  004680  3222               	rrcf	??_setFilter+5,f,c
 13703  004682  3221               	rrcf	??_setFilter+4,f,c
 13704  004684  3220               	rrcf	??_setFilter+3,f,c
 13705  004686  321F               	rrcf	??_setFilter+2,f,c
 13706  004688  2E1E               	decfsz	??_setFilter+1,f,c
 13707  00468A  D7F6               	goto	u14635
 13708  00468C                     u14637:
 13709  00468C  501F               	movf	??_setFilter+2,w,c
 13710  00468E  0BE0               	andlw	224
 13711  004690  101D               	iorwf	??_setFilter,w,c
 13712  004692  0908               	iorlw	8
 13713  004694  6E25               	movwf	setFilter@sidl,c
 13714                           
 13715                           ; BSR set to: 2
 13716                           ;main.c: 2398: uint8_t eidh = (long) val >> 8L;
 13717  004696  C01A  F026         	movff	setFilter@val+1,setFilter@eidh
 13718                           
 13719                           ; BSR set to: 2
 13720                           ;main.c: 2399: uint8_t eidl = val;
 13721  00469A  C019  F027         	movff	setFilter@val,setFilter@eidl
 13722                           
 13723                           ;main.c: 2401: switch (filter) {
 13724  00469E  D090               	goto	l11532
 13725  0046A0                     l1138:
 13726                           
 13727                           ; BSR set to: 2
 13728                           ;main.c: 2404: RXF0SIDH = sidh;
 13729  0046A0  C024  FF00         	movff	setFilter@sidh,3840	;volatile
 13730                           
 13731                           ;main.c: 2405: RXF0SIDL = sidl;
 13732  0046A4  C025  FF01         	movff	setFilter@sidl,3841	;volatile
 13733                           
 13734                           ;main.c: 2406: RXF0EIDH = eidh;
 13735  0046A8  C026  FF02         	movff	setFilter@eidh,3842	;volatile
 13736                           
 13737                           ;main.c: 2407: RXF0EIDL = eidl;
 13738  0046AC  C027  FF03         	movff	setFilter@eidl,3843	;volatile
 13739                           
 13740                           ;main.c: 2408: break;
 13741  0046B0  D0AA               	goto	l1155
 13742  0046B2                     l1140:
 13743                           
 13744                           ; BSR set to: 2
 13745                           ;main.c: 2411: RXF1SIDH = sidh;
 13746  0046B2  C024  FF04         	movff	setFilter@sidh,3844	;volatile
 13747                           
 13748                           ;main.c: 2412: RXF1SIDL = sidl;
 13749  0046B6  C025  FF05         	movff	setFilter@sidl,3845	;volatile
 13750                           
 13751                           ;main.c: 2413: RXF1EIDH = eidh;
 13752  0046BA  C026  FF06         	movff	setFilter@eidh,3846	;volatile
 13753                           
 13754                           ;main.c: 2414: RXF1EIDL = eidl;
 13755  0046BE  C027  FF07         	movff	setFilter@eidl,3847	;volatile
 13756                           
 13757                           ;main.c: 2415: break;
 13758  0046C2  D0A1               	goto	l1155
 13759  0046C4                     l1141:
 13760                           
 13761                           ; BSR set to: 2
 13762                           ;main.c: 2418: RXF2SIDH = sidh;
 13763  0046C4  C024  FF08         	movff	setFilter@sidh,3848	;volatile
 13764                           
 13765                           ;main.c: 2419: RXF2SIDL = sidl;
 13766  0046C8  C025  FF09         	movff	setFilter@sidl,3849	;volatile
 13767                           
 13768                           ;main.c: 2420: RXF2EIDH = eidh;
 13769  0046CC  C026  FF0A         	movff	setFilter@eidh,3850	;volatile
 13770                           
 13771                           ;main.c: 2421: RXF2EIDL = eidl;
 13772  0046D0  C027  FF0B         	movff	setFilter@eidl,3851	;volatile
 13773                           
 13774                           ;main.c: 2422: break;
 13775  0046D4  D098               	goto	l1155
 13776  0046D6                     l1142:
 13777                           
 13778                           ; BSR set to: 2
 13779                           ;main.c: 2425: RXF3SIDH = sidh;
 13780  0046D6  C024  FF0C         	movff	setFilter@sidh,3852	;volatile
 13781                           
 13782                           ;main.c: 2426: RXF3SIDL = sidl;
 13783  0046DA  C025  FF0D         	movff	setFilter@sidl,3853	;volatile
 13784                           
 13785                           ;main.c: 2427: RXF3EIDH = eidh;
 13786  0046DE  C026  FF0E         	movff	setFilter@eidh,3854	;volatile
 13787                           
 13788                           ;main.c: 2428: RXF3EIDL = eidl;
 13789  0046E2  C027  FF0F         	movff	setFilter@eidl,3855	;volatile
 13790                           
 13791                           ;main.c: 2429: break;
 13792  0046E6  D08F               	goto	l1155
 13793  0046E8                     l1143:
 13794                           
 13795                           ; BSR set to: 2
 13796                           ;main.c: 2432: RXF4SIDH = sidh;
 13797  0046E8  C024  FF10         	movff	setFilter@sidh,3856	;volatile
 13798                           
 13799                           ;main.c: 2433: RXF4SIDL = sidl;
 13800  0046EC  C025  FF11         	movff	setFilter@sidl,3857	;volatile
 13801                           
 13802                           ;main.c: 2434: RXF4EIDH = eidh;
 13803  0046F0  C026  FF12         	movff	setFilter@eidh,3858	;volatile
 13804                           
 13805                           ;main.c: 2435: RXF4EIDL = eidl;
 13806  0046F4  C027  FF13         	movff	setFilter@eidl,3859	;volatile
 13807                           
 13808                           ;main.c: 2436: break;
 13809  0046F8  D086               	goto	l1155
 13810  0046FA                     l1144:
 13811                           
 13812                           ; BSR set to: 2
 13813                           ;main.c: 2439: RXF5SIDH = sidh;
 13814  0046FA  C024  FF14         	movff	setFilter@sidh,3860	;volatile
 13815                           
 13816                           ;main.c: 2440: RXF5SIDL = sidl;
 13817  0046FE  C025  FF15         	movff	setFilter@sidl,3861	;volatile
 13818                           
 13819                           ;main.c: 2441: RXF5EIDH = eidh;
 13820  004702  C026  FF16         	movff	setFilter@eidh,3862	;volatile
 13821                           
 13822                           ;main.c: 2442: RXF5EIDL = eidl;
 13823  004706  C027  FF17         	movff	setFilter@eidl,3863	;volatile
 13824                           
 13825                           ;main.c: 2443: break;
 13826  00470A  D07D               	goto	l1155
 13827  00470C                     l1145:
 13828                           
 13829                           ; BSR set to: 2
 13830                           ;main.c: 2446: RXF6SIDH = sidh;
 13831  00470C  C024  FD60         	movff	setFilter@sidh,3424	;volatile
 13832                           
 13833                           ;main.c: 2447: RXF6SIDL = sidl;
 13834  004710  C025  FD61         	movff	setFilter@sidl,3425	;volatile
 13835                           
 13836                           ;main.c: 2448: RXF6EIDH = eidh;
 13837  004714  C026  FD62         	movff	setFilter@eidh,3426	;volatile
 13838                           
 13839                           ;main.c: 2449: RXF6EIDL = eidl;
 13840  004718  C027  FD63         	movff	setFilter@eidl,3427	;volatile
 13841                           
 13842                           ;main.c: 2450: break;
 13843  00471C  D074               	goto	l1155
 13844  00471E                     l1146:
 13845                           
 13846                           ; BSR set to: 2
 13847                           ;main.c: 2453: RXF7SIDH = sidh;
 13848  00471E  C024  FD64         	movff	setFilter@sidh,3428	;volatile
 13849                           
 13850                           ;main.c: 2454: RXF7SIDL = sidl;
 13851  004722  C025  FD65         	movff	setFilter@sidl,3429	;volatile
 13852                           
 13853                           ;main.c: 2455: RXF7EIDH = eidh;
 13854  004726  C026  FD66         	movff	setFilter@eidh,3430	;volatile
 13855                           
 13856                           ;main.c: 2456: RXF7EIDL = eidl;
 13857  00472A  C027  FD67         	movff	setFilter@eidl,3431	;volatile
 13858                           
 13859                           ;main.c: 2457: break;
 13860  00472E  D06B               	goto	l1155
 13861  004730                     l1147:
 13862                           
 13863                           ; BSR set to: 2
 13864                           ;main.c: 2460: RXF8SIDH = sidh;
 13865  004730  C024  FD68         	movff	setFilter@sidh,3432	;volatile
 13866                           
 13867                           ;main.c: 2461: RXF8SIDL = sidl;
 13868  004734  C025  FD69         	movff	setFilter@sidl,3433	;volatile
 13869                           
 13870                           ;main.c: 2462: RXF8EIDH = eidh;
 13871  004738  C026  FD6A         	movff	setFilter@eidh,3434	;volatile
 13872                           
 13873                           ;main.c: 2463: RXF8EIDL = eidl;
 13874  00473C  C027  FD6B         	movff	setFilter@eidl,3435	;volatile
 13875                           
 13876                           ;main.c: 2464: break;
 13877  004740  D062               	goto	l1155
 13878  004742                     l1148:
 13879                           
 13880                           ; BSR set to: 2
 13881                           ;main.c: 2467: RXF9SIDH = sidh;
 13882  004742  C024  FD70         	movff	setFilter@sidh,3440	;volatile
 13883                           
 13884                           ;main.c: 2468: RXF9SIDL = sidl;
 13885  004746  C025  FD71         	movff	setFilter@sidl,3441	;volatile
 13886                           
 13887                           ;main.c: 2469: RXF9EIDH = eidh;
 13888  00474A  C026  FD72         	movff	setFilter@eidh,3442	;volatile
 13889                           
 13890                           ;main.c: 2470: RXF9EIDL = eidl;
 13891  00474E  C027  FD73         	movff	setFilter@eidl,3443	;volatile
 13892                           
 13893                           ;main.c: 2471: break;
 13894  004752  D059               	goto	l1155
 13895  004754                     l1149:
 13896                           
 13897                           ; BSR set to: 2
 13898                           ;main.c: 2474: RXF10SIDH = sidh;
 13899  004754  C024  FD74         	movff	setFilter@sidh,3444	;volatile
 13900                           
 13901                           ;main.c: 2475: RXF10SIDL = sidl;
 13902  004758  C025  FD75         	movff	setFilter@sidl,3445	;volatile
 13903                           
 13904                           ;main.c: 2476: RXF10EIDH = eidh;
 13905  00475C  C026  FD76         	movff	setFilter@eidh,3446	;volatile
 13906                           
 13907                           ;main.c: 2477: RXF10EIDL = eidl;
 13908  004760  C027  FD77         	movff	setFilter@eidl,3447	;volatile
 13909                           
 13910                           ;main.c: 2478: break;
 13911  004764  D050               	goto	l1155
 13912  004766                     l1150:
 13913                           
 13914                           ; BSR set to: 2
 13915                           ;main.c: 2481: RXF11SIDH = sidh;
 13916  004766  C024  FD78         	movff	setFilter@sidh,3448	;volatile
 13917                           
 13918                           ;main.c: 2482: RXF11SIDL = sidl;
 13919  00476A  C025  FD79         	movff	setFilter@sidl,3449	;volatile
 13920                           
 13921                           ;main.c: 2483: RXF11EIDH = eidh;
 13922  00476E  C026  FD7A         	movff	setFilter@eidh,3450	;volatile
 13923                           
 13924                           ;main.c: 2484: RXF11EIDL = eidl;
 13925  004772  C027  FD7B         	movff	setFilter@eidl,3451	;volatile
 13926                           
 13927                           ;main.c: 2485: break;
 13928  004776  D047               	goto	l1155
 13929  004778                     l1151:
 13930                           
 13931                           ; BSR set to: 2
 13932                           ;main.c: 2488: RXF12SIDH = sidh;
 13933  004778  C024  FD80         	movff	setFilter@sidh,3456	;volatile
 13934                           
 13935                           ;main.c: 2489: RXF12SIDL = sidl;
 13936  00477C  C025  FD81         	movff	setFilter@sidl,3457	;volatile
 13937                           
 13938                           ;main.c: 2490: RXF12EIDH = eidh;
 13939  004780  C026  FD82         	movff	setFilter@eidh,3458	;volatile
 13940                           
 13941                           ;main.c: 2491: RXF12EIDL = eidl;
 13942  004784  C027  FD83         	movff	setFilter@eidl,3459	;volatile
 13943                           
 13944                           ;main.c: 2492: break;
 13945  004788  D03E               	goto	l1155
 13946  00478A                     l1152:
 13947                           
 13948                           ; BSR set to: 2
 13949                           ;main.c: 2495: RXF13SIDH = sidh;
 13950  00478A  C024  FD84         	movff	setFilter@sidh,3460	;volatile
 13951                           
 13952                           ;main.c: 2496: RXF13SIDL = sidl;
 13953  00478E  C025  FD85         	movff	setFilter@sidl,3461	;volatile
 13954                           
 13955                           ;main.c: 2497: RXF13EIDH = eidh;
 13956  004792  C026  FD86         	movff	setFilter@eidh,3462	;volatile
 13957                           
 13958                           ;main.c: 2498: RXF13EIDL = eidl;
 13959  004796  C027  FD87         	movff	setFilter@eidl,3463	;volatile
 13960                           
 13961                           ;main.c: 2499: break;
 13962  00479A  D035               	goto	l1155
 13963  00479C                     l1153:
 13964                           
 13965                           ; BSR set to: 2
 13966                           ;main.c: 2502: RXF14SIDH = sidh;
 13967  00479C  C024  FD88         	movff	setFilter@sidh,3464	;volatile
 13968                           
 13969                           ;main.c: 2503: RXF14SIDL = sidl;
 13970  0047A0  C025  FD89         	movff	setFilter@sidl,3465	;volatile
 13971                           
 13972                           ;main.c: 2504: RXF14EIDH = eidh;
 13973  0047A4  C026  FD8A         	movff	setFilter@eidh,3466	;volatile
 13974                           
 13975                           ;main.c: 2505: RXF14EIDL = eidl;
 13976  0047A8  C027  FD8B         	movff	setFilter@eidl,3467	;volatile
 13977                           
 13978                           ;main.c: 2506: break;
 13979  0047AC  D02C               	goto	l1155
 13980  0047AE                     l1154:
 13981                           
 13982                           ; BSR set to: 2
 13983                           ;main.c: 2509: RXF15SIDH = sidh;
 13984  0047AE  C024  FD90         	movff	setFilter@sidh,3472	;volatile
 13985                           
 13986                           ;main.c: 2510: RXF15SIDL = sidl;
 13987  0047B2  C025  FD91         	movff	setFilter@sidl,3473	;volatile
 13988                           
 13989                           ;main.c: 2511: RXF15EIDH = eidh;
 13990  0047B6  C026  FD92         	movff	setFilter@eidh,3474	;volatile
 13991                           
 13992                           ;main.c: 2512: RXF15EIDL = eidl;
 13993  0047BA  C027  FD93         	movff	setFilter@eidl,3475	;volatile
 13994                           
 13995                           ;main.c: 2513: break;
 13996  0047BE  D023               	goto	l1155
 13997  0047C0                     l11532:
 13998                           
 13999                           ; BSR set to: 2
 14000  0047C0  5023               	movf	setFilter@filter,w,c
 14001                           
 14002                           ; Switch size 1, requested type "space"
 14003                           ; Number of cases is 16, Range of values is 0 to 15
 14004                           ; switch strategies available:
 14005                           ; Name         Instructions Cycles
 14006                           ; simple_byte           49    25 (average)
 14007                           ;	Chosen strategy is simple_byte
 14008  0047C2  E101 D76D          	bz	l1138
 14009  0047C6  0A01               	xorlw	1	; case 1
 14010  0047C8  E101 D773          	bz	l1140
 14011  0047CC  0A03               	xorlw	3	; case 2
 14012  0047CE  E101 D779          	bz	l1141
 14013  0047D2  0A01               	xorlw	1	; case 3
 14014  0047D4  E080               	bz	l1142
 14015  0047D6  0A07               	xorlw	7	; case 4
 14016  0047D8  E087               	bz	l1143
 14017  0047DA  0A01               	xorlw	1	; case 5
 14018  0047DC  E08E               	bz	l1144
 14019  0047DE  0A03               	xorlw	3	; case 6
 14020  0047E0  E095               	bz	l1145
 14021  0047E2  0A01               	xorlw	1	; case 7
 14022  0047E4  E09C               	bz	l1146
 14023  0047E6  0A0F               	xorlw	15	; case 8
 14024  0047E8  E0A3               	bz	l1147
 14025  0047EA  0A01               	xorlw	1	; case 9
 14026  0047EC  E0AA               	bz	l1148
 14027  0047EE  0A03               	xorlw	3	; case 10
 14028  0047F0  E0B1               	bz	l1149
 14029  0047F2  0A01               	xorlw	1	; case 11
 14030  0047F4  E0B8               	bz	l1150
 14031  0047F6  0A07               	xorlw	7	; case 12
 14032  0047F8  E0BF               	bz	l1151
 14033  0047FA  0A01               	xorlw	1	; case 13
 14034  0047FC  E0C6               	bz	l1152
 14035  0047FE  0A03               	xorlw	3	; case 14
 14036  004800  E0CD               	bz	l1153
 14037  004802  0A01               	xorlw	1	; case 15
 14038  004804  E0D4               	bz	l1154
 14039  004806                     l1155:
 14040                           
 14041                           ; BSR set to: 2
 14042  004806  0012               	return	
 14043  004808                     __end_of_setFilter:
 14044                           	opt stack 0
 14045                           tblptru	equ	0xFF8
 14046                           tblptrh	equ	0xFF7
 14047                           tblptrl	equ	0xFF6
 14048                           tablat	equ	0xFF5
 14049                           prodh	equ	0xFF4
 14050                           prodl	equ	0xFF3
 14051                           intcon	equ	0xFF2
 14052                           indf0	equ	0xFEF
 14053                           postinc0	equ	0xFEE
 14054                           fsr0h	equ	0xFEA
 14055                           fsr0l	equ	0xFE9
 14056                           wreg	equ	0xFE8
 14057                           indf1	equ	0xFE7
 14058                           postinc1	equ	0xFE6
 14059                           postdec1	equ	0xFE5
 14060                           fsr1h	equ	0xFE2
 14061                           fsr1l	equ	0xFE1
 14062                           indf2	equ	0xFDF
 14063                           postinc2	equ	0xFDE
 14064                           postdec2	equ	0xFDD
 14065                           plusw2	equ	0xFDB
 14066                           fsr2h	equ	0xFDA
 14067                           fsr2l	equ	0xFD9
 14068                           status	equ	0xFD8
 14069                           
 14070 ;; *************** function _writeRegisterExtended *****************
 14071 ;; Defined at:
 14072 ;;		line 1965 in file "main.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;  nodeid          1    wreg     unsigned char 
 14075 ;;  page            2   62[BANK0 ] unsigned short 
 14076 ;;  reg             1   64[BANK0 ] unsigned char 
 14077 ;;  timeout         2   65[BANK0 ] unsigned short 
 14078 ;;  value           2   67[BANK0 ] PTR unsigned char 
 14079 ;;		 -> doModeVerbose@value_1171(1), 
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;  nodeid          1   73[BANK0 ] unsigned char 
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1    wreg      enum E15660
 14084 ;; Registers used:
 14085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14086 ;; Tracked objects:
 14087 ;;		On entry : F/2
 14088 ;;		On exit  : E/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14091 ;;      Params:         0       7       0       0       0       0       0
 14092 ;;      Locals:         0       1       0       0       0       0       0
 14093 ;;      Temps:          0       4       0       0       0       0       0
 14094 ;;      Totals:         0      12       0       0       0       0       0
 14095 ;;Total ram usage:       12 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:    6
 14098 ;; This function calls:
 14099 ;;		_sendVSCPFrame
 14100 ;;		_getVSCPFrame
 14101 ;; This function is called by:
 14102 ;;		_doModeVerbose
 14103 ;; This function uses a non-reentrant model
 14104 ;;
 14105                           
 14106                           	psect	text21
 14107  003236                     __ptext21:
 14108                           	opt stack 0
 14109  003236                     _writeRegisterExtended:
 14110                           	opt stack 22
 14111                           
 14112                           ; BSR set to: 2
 14113                           ;incstack = 0
 14114                           ;incstack = 0
 14115                           ;writeRegisterExtended@nodeid stored from wreg
 14116  003236  CFE8 F0A9          	movff	wreg,writeRegisterExtended@nodeid
 14117                           
 14118                           ; BSR set to: 2
 14119                           ;main.c: 1966: vscpData[ 0 ] = nodeid;
 14120  00323A  C0A9  F040         	movff	writeRegisterExtended@nodeid,_vscpData
 14121                           
 14122                           ; BSR set to: 2
 14123                           ;main.c: 1967: vscpData[ 1 ] = page >> 8;
 14124  00323E  0100               	movlb	0	; () banked
 14125  003240  519F               	movf	(writeRegisterExtended@page+1)& (0+255),w,b
 14126  003242  6E41               	movwf	_vscpData+1,c
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;main.c: 1968: vscpData[ 2 ] = page & 0xff;
 14130  003244  C09E  F042         	movff	writeRegisterExtended@page,_vscpData+2
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;main.c: 1969: vscpData[ 3 ] = reg;
 14134  003248  C0A0  F043         	movff	writeRegisterExtended@reg,_vscpData+3
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;main.c: 1970: vscpData[ 4 ] = *value;
 14138  00324C  C0A3  FFD9         	movff	writeRegisterExtended@value,fsr2l
 14139  003250  C0A4  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 14140  003254  50DF               	movf	indf2,w,c
 14141  003256  6E44               	movwf	_vscpData+4,c
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;main.c: 1972: if (sendVSCPFrame(0,
 14145                           ;main.c: 1973: 38,
 14146                           ;main.c: 1974: 0,
 14147                           ;main.c: 1975: 0,
 14148                           ;main.c: 1976: 5,
 14149                           ;main.c: 1977: vscpData)) {
 14150  003258  6B84               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 14151  00325A  6B83               	clrf	?_sendVSCPFrame& (0+255),b
 14152  00325C  0E26               	movlw	38
 14153  00325E  6F85               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 14154  003260  6B86               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 14155  003262  6B87               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 14156  003264  0E05               	movlw	5
 14157  003266  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 14158  003268  0E40               	movlw	low _vscpData
 14159  00326A  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 14160  00326C  ECBA  F016         	call	_sendVSCPFrame	;wreg free
 14161  003270  0900               	iorlw	0
 14162  003272  E04C               	bz	l14084
 14163                           
 14164                           ;main.c: 1979: timekeeper = 0;
 14165  003274  0100               	movlb	0	; () banked
 14166  003276  6BCD               	clrf	_timekeeper& (0+255),b	;volatile
 14167  003278  6BCE               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 14168  00327A  6BCF               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 14169  00327C  6BD0               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 14170                           
 14171                           ;main.c: 1980: while (timekeeper < timeout) {
 14172  00327E  D036               	goto	l14082
 14173  003280                     l995:
 14174                           
 14175                           ; BSR set to: 0
 14176  003280  0004               	clrwdt		;# 
 14177                           
 14178                           ;main.c: 1984: if (getVSCPFrame(&vscpClass,
 14179                           ;main.c: 1985: &vscpType,
 14180                           ;main.c: 1986: &vscpNodeId,
 14181                           ;main.c: 1987: &vscpPriority,
 14182                           ;main.c: 1988: &vscpSize,
 14183                           ;main.c: 1989: vscpData)) {
 14184  003282  0100               	movlb	0	; () banked
 14185  003284  0EDF               	movlw	low _vscpType
 14186  003286  6F62               	movwf	?_getVSCPFrame& (0+255),b
 14187  003288  0EDC               	movlw	low _vscpNodeId
 14188  00328A  6F63               	movwf	(?_getVSCPFrame+1)& (0+255),b
 14189  00328C  0EDD               	movlw	low _vscpPriority
 14190  00328E  6F64               	movwf	(?_getVSCPFrame+2)& (0+255),b
 14191  003290  0EDE               	movlw	low _vscpSize
 14192  003292  6F65               	movwf	(?_getVSCPFrame+3)& (0+255),b
 14193  003294  0E40               	movlw	low _vscpData
 14194  003296  6F66               	movwf	(?_getVSCPFrame+4)& (0+255),b
 14195  003298  0EDA               	movlw	_vscpClass& (0+255)
 14196  00329A  EC0C  F014         	call	_getVSCPFrame
 14197  00329E  0900               	iorlw	0
 14198  0032A0  E025               	bz	l14082
 14199                           
 14200                           ;main.c: 1991: if ((nodeid == vscpNodeId) &&
 14201                           ;main.c: 1992: (5 == vscpSize) &&
 14202                           ;main.c: 1993: (0 == vscpData[ 0 ]) &&
 14203                           ;main.c: 1994: ((page >> 8) == vscpData[ 1 ]) &&
 14204                           ;main.c: 1995: ((page & 0xff) == vscpData[ 2 ]) &&
 14205                           ;main.c: 1996: (reg == vscpData[ 3 ]) &&
 14206                           ;main.c: 1997: (*value == vscpData[ 4 ])) {
 14207  0032A2  0100               	movlb	0	; () banked
 14208  0032A4  51DC               	movf	_vscpNodeId& (0+255),w,b
 14209  0032A6  63A9               	cpfseq	writeRegisterExtended@nodeid& (0+255),b
 14210  0032A8  D021               	goto	l14082
 14211                           
 14212                           ; BSR set to: 0
 14213  0032AA  51DE               	movf	_vscpSize& (0+255),w,b
 14214  0032AC  0A05               	xorlw	5
 14215  0032AE  E11E               	bnz	l14082
 14216                           
 14217                           ; BSR set to: 0
 14218  0032B0  6640               	tstfsz	_vscpData,c
 14219  0032B2  D01C               	goto	l14082
 14220                           
 14221                           ; BSR set to: 0
 14222  0032B4  519F               	movf	(writeRegisterExtended@page+1)& (0+255),w,b
 14223  0032B6  1841               	xorwf	_vscpData+1,w,c
 14224  0032B8  E119               	bnz	l14082
 14225                           
 14226                           ; BSR set to: 0
 14227  0032BA  519E               	movf	writeRegisterExtended@page& (0+255),w,b
 14228  0032BC  EE20  F042         	lfsr	2,_vscpData+2
 14229  0032C0  62DF               	cpfseq	indf2,c
 14230  0032C2  D014               	goto	l14082
 14231                           
 14232                           ; BSR set to: 0
 14233  0032C4  51A0               	movf	writeRegisterExtended@reg& (0+255),w,b
 14234  0032C6  EE20  F043         	lfsr	2,_vscpData+3
 14235  0032CA  62DF               	cpfseq	indf2,c
 14236  0032CC  D00F               	goto	l14082
 14237                           
 14238                           ; BSR set to: 0
 14239  0032CE  5044               	movf	_vscpData+4,w,c
 14240  0032D0  C0A3  FFD9         	movff	writeRegisterExtended@value,fsr2l
 14241  0032D4  C0A4  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 14242  0032D8  62DF               	cpfseq	indf2,c
 14243  0032DA  D008               	goto	l14082
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;main.c: 1998: *value = vscpData[ 1 ];
 14247  0032DC  C0A3  FFD9         	movff	writeRegisterExtended@value,fsr2l
 14248  0032E0  C0A4  FFDA         	movff	writeRegisterExtended@value+1,fsr2h
 14249  0032E4  C041  FFDF         	movff	_vscpData+1,indf2
 14250                           
 14251                           ; BSR set to: 0
 14252                           ;main.c: 1999: return 1;
 14253  0032E8  0E01               	movlw	1
 14254  0032EA  D011               	goto	l998
 14255  0032EC                     l14082:
 14256  0032EC  0100               	movlb	0	; () banked
 14257  0032EE  51A1               	movf	writeRegisterExtended@timeout& (0+255),w,b
 14258  0032F0  6FA5               	movwf	??_writeRegisterExtended& (0+255),b
 14259  0032F2  51A2               	movf	(writeRegisterExtended@timeout+1)& (0+255),w,b
 14260  0032F4  6FA6               	movwf	(??_writeRegisterExtended+1)& (0+255),b
 14261  0032F6  6BA7               	clrf	(??_writeRegisterExtended+2)& (0+255),b
 14262  0032F8  6BA8               	clrf	(??_writeRegisterExtended+3)& (0+255),b
 14263  0032FA  51A5               	movf	??_writeRegisterExtended& (0+255),w,b
 14264  0032FC  5DCD               	subwf	_timekeeper& (0+255),w,b	;volatile
 14265  0032FE  51A6               	movf	(??_writeRegisterExtended+1)& (0+255),w,b
 14266  003300  59CE               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 14267  003302  51A7               	movf	(??_writeRegisterExtended+2)& (0+255),w,b
 14268  003304  59CF               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 14269  003306  51A8               	movf	(??_writeRegisterExtended+3)& (0+255),w,b
 14270  003308  59D0               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 14271  00330A  E3BA               	bnc	l995
 14272  00330C                     l14084:
 14273                           
 14274                           ;main.c: 2000: }
 14275                           ;main.c: 2002: }
 14276                           ;main.c: 2004: }
 14277                           ;main.c: 2006: }
 14278                           ;main.c: 2008: return 0;
 14279  00330C  0E00               	movlw	0
 14280  00330E                     l998:
 14281  00330E  0012               	return	
 14282  003310                     __end_of_writeRegisterExtended:
 14283                           	opt stack 0
 14284                           tblptru	equ	0xFF8
 14285                           tblptrh	equ	0xFF7
 14286                           tblptrl	equ	0xFF6
 14287                           tablat	equ	0xFF5
 14288                           prodh	equ	0xFF4
 14289                           prodl	equ	0xFF3
 14290                           intcon	equ	0xFF2
 14291                           indf0	equ	0xFEF
 14292                           postinc0	equ	0xFEE
 14293                           fsr0h	equ	0xFEA
 14294                           fsr0l	equ	0xFE9
 14295                           wreg	equ	0xFE8
 14296                           indf1	equ	0xFE7
 14297                           postinc1	equ	0xFE6
 14298                           postdec1	equ	0xFE5
 14299                           fsr1h	equ	0xFE2
 14300                           fsr1l	equ	0xFE1
 14301                           indf2	equ	0xFDF
 14302                           postinc2	equ	0xFDE
 14303                           postdec2	equ	0xFDD
 14304                           plusw2	equ	0xFDB
 14305                           fsr2h	equ	0xFDA
 14306                           fsr2l	equ	0xFD9
 14307                           status	equ	0xFD8
 14308                           
 14309 ;; *************** function _printBinary *****************
 14310 ;; Defined at:
 14311 ;;		line 2049 in file "main.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;  value           1    wreg     unsigned char 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;  value           1   27[COMRAM] unsigned char 
 14316 ;;  i               2   28[COMRAM] int 
 14317 ;; Return value:  Size  Location     Type
 14318 ;;		None               void
 14319 ;; Registers used:
 14320 ;;		wreg, status,2, status,0, cstack
 14321 ;; Tracked objects:
 14322 ;;		On entry : F/2
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14326 ;;      Params:         0       0       0       0       0       0       0
 14327 ;;      Locals:         3       0       0       0       0       0       0
 14328 ;;      Temps:          2       0       0       0       0       0       0
 14329 ;;      Totals:         5       0       0       0       0       0       0
 14330 ;;Total ram usage:        5 bytes
 14331 ;; Hardware stack levels used:    1
 14332 ;; Hardware stack levels required when called:    3
 14333 ;; This function calls:
 14334 ;;		_WriteUSART
 14335 ;; This function is called by:
 14336 ;;		_doModeVerbose
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340                           	psect	text22
 14341  00217E                     __ptext22:
 14342                           	opt stack 0
 14343  00217E                     _printBinary:
 14344                           	opt stack 25
 14345                           
 14346                           ;incstack = 0
 14347                           ;incstack = 0
 14348                           ;printBinary@value stored from wreg
 14349  00217E  CFE8 F01C          	movff	wreg,printBinary@value
 14350                           
 14351                           ; BSR set to: 2
 14352                           ;main.c: 2050: int i;
 14353                           ;main.c: 2052: for (i = 7; i >= 0; i--) {
 14354  002182  6A1E               	clrf	printBinary@i+1,c
 14355  002184  0E07               	movlw	7
 14356  002186  6E1D               	movwf	printBinary@i,c
 14357  002188                     l14034:
 14358                           
 14359                           ;main.c: 2053: if (value & (1 << i)) {
 14360  002188  C01D  F01A         	movff	printBinary@i,??_printBinary
 14361  00218C  0E01               	movlw	1
 14362  00218E  6E1B               	movwf	(??_printBinary+1)& (0+255),c
 14363  002190  2A1A               	incf	??_printBinary,f,c
 14364  002192  D002               	goto	u18594
 14365  002194                     u18595:
 14366  002194  90D8               	bcf	status,0,c
 14367  002196  361B               	rlcf	??_printBinary+1,f,c
 14368  002198                     u18594:
 14369  002198  2E1A               	decfsz	??_printBinary,f,c
 14370  00219A  D7FC               	goto	u18595
 14371  00219C  501B               	movf	??_printBinary+1,w,c
 14372  00219E  141C               	andwf	printBinary@value,w,c
 14373  0021A0  E006               	bz	l1018
 14374  0021A2                     l1014:
 14375  0021A2  A2AC               	btfss	4012,1,c	;volatile
 14376  0021A4  D7FE               	goto	l1014
 14377                           
 14378                           ;main.c: 2055: WriteUSART('1');
 14379  0021A6  0E31               	movlw	49
 14380  0021A8  EC6E  F00E         	call	_WriteUSART
 14381                           
 14382                           ;main.c: 2056: } else {
 14383  0021AC  D005               	goto	l14042
 14384  0021AE                     l1018:
 14385  0021AE  A2AC               	btfss	4012,1,c	;volatile
 14386  0021B0  D7FE               	goto	l1018
 14387                           
 14388                           ;main.c: 2058: WriteUSART('0');
 14389  0021B2  0E30               	movlw	48
 14390  0021B4  EC6E  F00E         	call	_WriteUSART
 14391  0021B8                     l14042:
 14392  0021B8  061D               	decf	printBinary@i,f,c
 14393  0021BA  A0D8               	btfss	status,0,c
 14394  0021BC  061E               	decf	printBinary@i+1,f,c
 14395  0021BE  BE1E               	btfsc	printBinary@i+1,7,c
 14396  0021C0  0012               	return	
 14397  0021C2  D7E2               	goto	l14034
 14398  0021C4                     __end_of_printBinary:
 14399                           	opt stack 0
 14400                           tblptru	equ	0xFF8
 14401                           tblptrh	equ	0xFF7
 14402                           tblptrl	equ	0xFF6
 14403                           tablat	equ	0xFF5
 14404                           prodh	equ	0xFF4
 14405                           prodl	equ	0xFF3
 14406                           intcon	equ	0xFF2
 14407                           indf0	equ	0xFEF
 14408                           postinc0	equ	0xFEE
 14409                           fsr0h	equ	0xFEA
 14410                           fsr0l	equ	0xFE9
 14411                           wreg	equ	0xFE8
 14412                           indf1	equ	0xFE7
 14413                           postinc1	equ	0xFE6
 14414                           postdec1	equ	0xFE5
 14415                           fsr1h	equ	0xFE2
 14416                           fsr1l	equ	0xFE1
 14417                           indf2	equ	0xFDF
 14418                           postinc2	equ	0xFDE
 14419                           postdec2	equ	0xFDD
 14420                           plusw2	equ	0xFDB
 14421                           fsr2h	equ	0xFDA
 14422                           fsr2l	equ	0xFD9
 14423                           status	equ	0xFD8
 14424                           
 14425 ;; *************** function _readRegisterExtended *****************
 14426 ;; Defined at:
 14427 ;;		line 1866 in file "main.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  nodeid          1    wreg     unsigned char 
 14430 ;;  page            2   62[BANK0 ] unsigned short 
 14431 ;;  reg             1   64[BANK0 ] unsigned char 
 14432 ;;  timeout         2   65[BANK0 ] unsigned short 
 14433 ;;  value           2   67[BANK0 ] PTR unsigned char 
 14434 ;;		 -> doModeVerbose@value(1), 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  nodeid          1   73[BANK0 ] unsigned char 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      enum E15660
 14439 ;; Registers used:
 14440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14441 ;; Tracked objects:
 14442 ;;		On entry : F/2
 14443 ;;		On exit  : E/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14446 ;;      Params:         0       7       0       0       0       0       0
 14447 ;;      Locals:         0       1       0       0       0       0       0
 14448 ;;      Temps:          0       4       0       0       0       0       0
 14449 ;;      Totals:         0      12       0       0       0       0       0
 14450 ;;Total ram usage:       12 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    6
 14453 ;; This function calls:
 14454 ;;		_sendVSCPFrame
 14455 ;;		_getVSCPFrame
 14456 ;; This function is called by:
 14457 ;;		_doModeVerbose
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           	psect	text23
 14462  00308E                     __ptext23:
 14463                           	opt stack 0
 14464  00308E                     _readRegisterExtended:
 14465                           	opt stack 22
 14466                           
 14467                           ;incstack = 0
 14468                           ;incstack = 0
 14469                           ;readRegisterExtended@nodeid stored from wreg
 14470  00308E  CFE8 F0A9          	movff	wreg,readRegisterExtended@nodeid
 14471                           
 14472                           ; BSR set to: 2
 14473                           ;main.c: 1867: vscpData[ 0 ] = nodeid;
 14474  003092  C0A9  F040         	movff	readRegisterExtended@nodeid,_vscpData
 14475                           
 14476                           ; BSR set to: 2
 14477                           ;main.c: 1868: vscpData[ 1 ] = page >> 8;
 14478  003096  0100               	movlb	0	; () banked
 14479  003098  519F               	movf	(readRegisterExtended@page+1)& (0+255),w,b
 14480  00309A  6E41               	movwf	_vscpData+1,c
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;main.c: 1869: vscpData[ 2 ] = page & 0xff;
 14484  00309C  C09E  F042         	movff	readRegisterExtended@page,_vscpData+2
 14485                           
 14486                           ; BSR set to: 0
 14487                           ;main.c: 1870: vscpData[ 3 ] = reg;
 14488  0030A0  C0A0  F043         	movff	readRegisterExtended@reg,_vscpData+3
 14489                           
 14490                           ; BSR set to: 0
 14491                           ;main.c: 1871: vscpData[ 4 ] = 1;
 14492  0030A4  0E01               	movlw	1
 14493  0030A6  6E44               	movwf	_vscpData+4,c
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;main.c: 1873: if (sendVSCPFrame(0,
 14497                           ;main.c: 1874: 37,
 14498                           ;main.c: 1875: 0,
 14499                           ;main.c: 1876: 0,
 14500                           ;main.c: 1877: 5,
 14501                           ;main.c: 1878: vscpData)) {
 14502  0030A8  6B84               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 14503  0030AA  6B83               	clrf	?_sendVSCPFrame& (0+255),b
 14504  0030AC  0E25               	movlw	37
 14505  0030AE  6F85               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 14506  0030B0  6B86               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 14507  0030B2  6B87               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 14508  0030B4  0E05               	movlw	5
 14509  0030B6  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 14510  0030B8  0E40               	movlw	low _vscpData
 14511  0030BA  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 14512  0030BC  ECBA  F016         	call	_sendVSCPFrame	;wreg free
 14513  0030C0  0900               	iorlw	0
 14514  0030C2  E04B               	bz	l14016
 14515                           
 14516                           ;main.c: 1880: timekeeper = 0;
 14517  0030C4  0100               	movlb	0	; () banked
 14518  0030C6  6BCD               	clrf	_timekeeper& (0+255),b	;volatile
 14519  0030C8  6BCE               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 14520  0030CA  6BCF               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 14521  0030CC  6BD0               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 14522                           
 14523                           ;main.c: 1881: while (timekeeper < timeout) {
 14524  0030CE  D035               	goto	l14014
 14525  0030D0                     l977:
 14526                           
 14527                           ; BSR set to: 0
 14528  0030D0  0004               	clrwdt		;# 
 14529                           
 14530                           ;main.c: 1885: if (getVSCPFrame(&vscpClass,
 14531                           ;main.c: 1886: &vscpType,
 14532                           ;main.c: 1887: &vscpNodeId,
 14533                           ;main.c: 1888: &vscpPriority,
 14534                           ;main.c: 1889: &vscpSize,
 14535                           ;main.c: 1890: vscpData)) {
 14536  0030D2  0100               	movlb	0	; () banked
 14537  0030D4  0EDF               	movlw	low _vscpType
 14538  0030D6  6F62               	movwf	?_getVSCPFrame& (0+255),b
 14539  0030D8  0EDC               	movlw	low _vscpNodeId
 14540  0030DA  6F63               	movwf	(?_getVSCPFrame+1)& (0+255),b
 14541  0030DC  0EDD               	movlw	low _vscpPriority
 14542  0030DE  6F64               	movwf	(?_getVSCPFrame+2)& (0+255),b
 14543  0030E0  0EDE               	movlw	low _vscpSize
 14544  0030E2  6F65               	movwf	(?_getVSCPFrame+3)& (0+255),b
 14545  0030E4  0E40               	movlw	low _vscpData
 14546  0030E6  6F66               	movwf	(?_getVSCPFrame+4)& (0+255),b
 14547  0030E8  0EDA               	movlw	_vscpClass& (0+255)
 14548  0030EA  EC0C  F014         	call	_getVSCPFrame
 14549  0030EE  0900               	iorlw	0
 14550  0030F0  E024               	bz	l14014
 14551                           
 14552                           ;main.c: 1891: if ((nodeid == vscpNodeId) &&
 14553                           ;main.c: 1892: (0 == vscpClass) &&
 14554                           ;main.c: 1893: (39 == vscpType) &&
 14555                           ;main.c: 1894: (5 == vscpSize) &&
 14556                           ;main.c: 1895: (0 == vscpData[ 0 ]) &&
 14557                           ;main.c: 1896: ((page >> 8) == vscpData[ 1 ]) &&
 14558                           ;main.c: 1897: ((page & 0xff) == vscpData[ 2 ]) &&
 14559                           ;main.c: 1898: (reg == vscpData[ 3 ])) {
 14560  0030F2  0100               	movlb	0	; () banked
 14561  0030F4  51DC               	movf	_vscpNodeId& (0+255),w,b
 14562  0030F6  63A9               	cpfseq	readRegisterExtended@nodeid& (0+255),b
 14563  0030F8  D020               	goto	l14014
 14564                           
 14565                           ; BSR set to: 0
 14566  0030FA  51DB               	movf	(_vscpClass+1)& (0+255),w,b
 14567  0030FC  11DA               	iorwf	_vscpClass& (0+255),w,b
 14568  0030FE  E11D               	bnz	l14014
 14569                           
 14570                           ; BSR set to: 0
 14571  003100  51DF               	movf	_vscpType& (0+255),w,b
 14572  003102  0A27               	xorlw	39
 14573  003104  E11A               	bnz	l14014
 14574                           
 14575                           ; BSR set to: 0
 14576  003106  51DE               	movf	_vscpSize& (0+255),w,b
 14577  003108  0A05               	xorlw	5
 14578  00310A  E117               	bnz	l14014
 14579                           
 14580                           ; BSR set to: 0
 14581  00310C  6640               	tstfsz	_vscpData,c
 14582  00310E  D015               	goto	l14014
 14583                           
 14584                           ; BSR set to: 0
 14585  003110  519F               	movf	(readRegisterExtended@page+1)& (0+255),w,b
 14586  003112  1841               	xorwf	_vscpData+1,w,c
 14587  003114  E112               	bnz	l14014
 14588                           
 14589                           ; BSR set to: 0
 14590  003116  519E               	movf	readRegisterExtended@page& (0+255),w,b
 14591  003118  EE20  F042         	lfsr	2,_vscpData+2
 14592  00311C  62DF               	cpfseq	indf2,c
 14593  00311E  D00D               	goto	l14014
 14594                           
 14595                           ; BSR set to: 0
 14596  003120  51A0               	movf	readRegisterExtended@reg& (0+255),w,b
 14597  003122  EE20  F043         	lfsr	2,_vscpData+3
 14598  003126  62DF               	cpfseq	indf2,c
 14599  003128  D008               	goto	l14014
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;main.c: 1899: *value = vscpData[ 4 ];
 14603  00312A  C0A3  FFD9         	movff	readRegisterExtended@value,fsr2l
 14604  00312E  C0A4  FFDA         	movff	readRegisterExtended@value+1,fsr2h
 14605  003132  C044  FFDF         	movff	_vscpData+4,indf2
 14606                           
 14607                           ; BSR set to: 0
 14608                           ;main.c: 1900: return 1;
 14609  003136  0E01               	movlw	1
 14610  003138  D011               	goto	l980
 14611  00313A                     l14014:
 14612  00313A  0100               	movlb	0	; () banked
 14613  00313C  51A1               	movf	readRegisterExtended@timeout& (0+255),w,b
 14614  00313E  6FA5               	movwf	??_readRegisterExtended& (0+255),b
 14615  003140  51A2               	movf	(readRegisterExtended@timeout+1)& (0+255),w,b
 14616  003142  6FA6               	movwf	(??_readRegisterExtended+1)& (0+255),b
 14617  003144  6BA7               	clrf	(??_readRegisterExtended+2)& (0+255),b
 14618  003146  6BA8               	clrf	(??_readRegisterExtended+3)& (0+255),b
 14619  003148  51A5               	movf	??_readRegisterExtended& (0+255),w,b
 14620  00314A  5DCD               	subwf	_timekeeper& (0+255),w,b	;volatile
 14621  00314C  51A6               	movf	(??_readRegisterExtended+1)& (0+255),w,b
 14622  00314E  59CE               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 14623  003150  51A7               	movf	(??_readRegisterExtended+2)& (0+255),w,b
 14624  003152  59CF               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 14625  003154  51A8               	movf	(??_readRegisterExtended+3)& (0+255),w,b
 14626  003156  59D0               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 14627  003158  E3BB               	bnc	l977
 14628  00315A                     l14016:
 14629                           
 14630                           ;main.c: 1901: }
 14631                           ;main.c: 1902: }
 14632                           ;main.c: 1903: }
 14633                           ;main.c: 1904: }
 14634                           ;main.c: 1906: return 0;
 14635  00315A  0E00               	movlw	0
 14636  00315C                     l980:
 14637  00315C  0012               	return	
 14638  00315E                     __end_of_readRegisterExtended:
 14639                           	opt stack 0
 14640                           tblptru	equ	0xFF8
 14641                           tblptrh	equ	0xFF7
 14642                           tblptrl	equ	0xFF6
 14643                           tablat	equ	0xFF5
 14644                           prodh	equ	0xFF4
 14645                           prodl	equ	0xFF3
 14646                           intcon	equ	0xFF2
 14647                           indf0	equ	0xFEF
 14648                           postinc0	equ	0xFEE
 14649                           fsr0h	equ	0xFEA
 14650                           fsr0l	equ	0xFE9
 14651                           wreg	equ	0xFE8
 14652                           indf1	equ	0xFE7
 14653                           postinc1	equ	0xFE6
 14654                           postdec1	equ	0xFE5
 14655                           fsr1h	equ	0xFE2
 14656                           fsr1l	equ	0xFE1
 14657                           indf2	equ	0xFDF
 14658                           postinc2	equ	0xFDE
 14659                           postdec2	equ	0xFDD
 14660                           plusw2	equ	0xFDB
 14661                           fsr2h	equ	0xFDA
 14662                           fsr2l	equ	0xFD9
 14663                           status	equ	0xFD8
 14664                           
 14665 ;; *************** function _strcpy *****************
 14666 ;; Defined at:
 14667 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcpy.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  to              2   24[COMRAM] PTR unsigned char 
 14670 ;;		 -> cmdbuf(80), 
 14671 ;;  from            2   26[COMRAM] PTR const unsigned char 
 14672 ;;		 -> cmdbuf(80), 
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;  cp              2   28[COMRAM] PTR unsigned char 
 14675 ;;		 -> cmdbuf(80), 
 14676 ;; Return value:  Size  Location     Type
 14677 ;;                  2   24[COMRAM] PTR unsigned char 
 14678 ;; Registers used:
 14679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14680 ;; Tracked objects:
 14681 ;;		On entry : F/0
 14682 ;;		On exit  : F/0
 14683 ;;		Unchanged: F/0
 14684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14685 ;;      Params:         4       0       0       0       0       0       0
 14686 ;;      Locals:         2       0       0       0       0       0       0
 14687 ;;      Temps:          0       0       0       0       0       0       0
 14688 ;;      Totals:         6       0       0       0       0       0       0
 14689 ;;Total ram usage:        6 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:    2
 14692 ;; This function calls:
 14693 ;;		Nothing
 14694 ;; This function is called by:
 14695 ;;		_doModeVerbose
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           	psect	text24
 14700  001DCA                     __ptext24:
 14701                           	opt stack 0
 14702  001DCA                     _strcpy:
 14703                           	opt stack 26
 14704                           
 14705                           ; BSR set to: 0
 14706                           
 14707                           ;incstack = 0
 14708                           ;incstack = 0
 14709  001DCA  C019  F01D         	movff	strcpy@to,strcpy@cp
 14710  001DCE  C01A  F01E         	movff	strcpy@to+1,strcpy@cp+1
 14711  001DD2  D004               	goto	l10974
 14712  001DD4                     l10972:
 14713                           
 14714                           ; BSR set to: 0
 14715  001DD4  4A1D               	infsnz	strcpy@cp,f,c
 14716  001DD6  2A1E               	incf	strcpy@cp+1,f,c
 14717  001DD8  4A1B               	infsnz	strcpy@from,f,c
 14718  001DDA  2A1C               	incf	strcpy@from+1,f,c
 14719  001DDC                     l10974:
 14720                           
 14721                           ; BSR set to: 0
 14722  001DDC  C01B  FFD9         	movff	strcpy@from,fsr2l
 14723  001DE0  C01C  FFDA         	movff	strcpy@from+1,fsr2h
 14724  001DE4  C01D  FFE1         	movff	strcpy@cp,fsr1l
 14725  001DE8  C01E  FFE2         	movff	strcpy@cp+1,fsr1h
 14726  001DEC  CFDF FFE7          	movff	indf2,indf1
 14727  001DF0  50E7               	movf	indf1,w,c
 14728  001DF2  B4D8               	btfsc	status,2,c
 14729                           
 14730                           ; BSR set to: 0
 14731  001DF4  0012               	return	
 14732  001DF6  D7EE               	goto	l10972
 14733  001DF8                     __end_of_strcpy:
 14734                           	opt stack 0
 14735                           tblptru	equ	0xFF8
 14736                           tblptrh	equ	0xFF7
 14737                           tblptrl	equ	0xFF6
 14738                           tablat	equ	0xFF5
 14739                           prodh	equ	0xFF4
 14740                           prodl	equ	0xFF3
 14741                           intcon	equ	0xFF2
 14742                           indf0	equ	0xFEF
 14743                           postinc0	equ	0xFEE
 14744                           fsr0h	equ	0xFEA
 14745                           fsr0l	equ	0xFE9
 14746                           wreg	equ	0xFE8
 14747                           indf1	equ	0xFE7
 14748                           postinc1	equ	0xFE6
 14749                           postdec1	equ	0xFE5
 14750                           fsr1h	equ	0xFE2
 14751                           fsr1l	equ	0xFE1
 14752                           indf2	equ	0xFDF
 14753                           postinc2	equ	0xFDE
 14754                           postdec2	equ	0xFDD
 14755                           plusw2	equ	0xFDB
 14756                           fsr2h	equ	0xFDA
 14757                           fsr2l	equ	0xFD9
 14758                           status	equ	0xFD8
 14759                           
 14760 ;; *************** function _findNodes *****************
 14761 ;; Defined at:
 14762 ;;		line 2203 in file "main.c"
 14763 ;; Parameters:    Size  Location     Type
 14764 ;;		None
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;  i               1   81[BANK0 ] unsigned char 
 14767 ;;  value           1   80[BANK0 ] unsigned char 
 14768 ;;  nFound          1   79[BANK0 ] unsigned char 
 14769 ;; Return value:  Size  Location     Type
 14770 ;;		None               void
 14771 ;; Registers used:
 14772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14773 ;; Tracked objects:
 14774 ;;		On entry : F/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14778 ;;      Params:         0       0       0       0       0       0       0
 14779 ;;      Locals:         0       5       0       0       0       0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0
 14781 ;;      Totals:         0       5       0       0       0       0       0
 14782 ;;Total ram usage:        5 bytes
 14783 ;; Hardware stack levels used:    1
 14784 ;; Hardware stack levels required when called:    8
 14785 ;; This function calls:
 14786 ;;		_putsUSART
 14787 ;;		_printNodeFirmwareVersion
 14788 ;;		_printGUID
 14789 ;;		_printMDF
 14790 ;;		_itoa
 14791 ;;		_readRegister
 14792 ;; This function is called by:
 14793 ;;		_doModeVerbose
 14794 ;; This function uses a non-reentrant model
 14795 ;;
 14796                           
 14797                           	psect	text25
 14798  0033EE                     __ptext25:
 14799                           	opt stack 0
 14800  0033EE                     _findNodes:
 14801                           	opt stack 20
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;main.c: 2204: uint8_t nFound = 0;
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;incstack = 0
 14808                           ;incstack = 0
 14809  0033EE  6BAF               	clrf	findNodes@nFound& (0+255),b
 14810                           
 14811                           ; BSR set to: 0
 14812                           ;main.c: 2205: uint8_t i;
 14813                           ;main.c: 2206: uint8_t value;
 14814                           ;main.c: 2208: putsUSART((char *) "-----------------------------------------------------
      +                          -----------\r\n");
 14815  0033F0  0E6E               	movlw	high STR_229
 14816  0033F2  6E1B               	movwf	?_putsUSART+1,c
 14817  0033F4  0E77               	movlw	low STR_229
 14818  0033F6  6E1A               	movwf	?_putsUSART,c
 14819  0033F8  EC2E  F011         	call	_putsUSART	;wreg free
 14820                           
 14821                           ;main.c: 2210: for (i = 1; i != 0; i++) {
 14822  0033FC  0E01               	movlw	1
 14823  0033FE  0100               	movlb	0	; () banked
 14824  003400  6FB1               	movwf	findNodes@i& (0+255),b
 14825  003402                     l1079:
 14826                           
 14827                           ; BSR set to: 0
 14828  003402  0004               	clrwdt		;# 
 14829                           
 14830                           ;main.c: 2214: if (readRegister(i,
 14831                           ;main.c: 2215: 0xE0,
 14832                           ;main.c: 2216: rwtimeout,
 14833                           ;main.c: 2217: &value)) {
 14834  003404  0EE0               	movlw	224
 14835  003406  0100               	movlb	0	; () banked
 14836  003408  6F9E               	movwf	?_readRegister& (0+255),b
 14837  00340A  C0D9  F09F         	movff	_rwtimeout,?_readRegister+1
 14838  00340E  6BA0               	clrf	(?_readRegister+2)& (0+255),b
 14839  003410  0EB0               	movlw	low findNodes@value
 14840  003412  6FA1               	movwf	(?_readRegister+3)& (0+255),b
 14841  003414  51B1               	movf	findNodes@i& (0+255),w,b
 14842  003416  EC0B  F016         	call	_readRegister
 14843  00341A  0900               	iorlw	0
 14844  00341C  E03E               	bz	l13966
 14845                           
 14846                           ;main.c: 2218: putsUSART((char *) "Node found with node id = ");
 14847  00341E  0E78               	movlw	high STR_230
 14848  003420  6E1B               	movwf	?_putsUSART+1,c
 14849  003422  0E9A               	movlw	low STR_230
 14850  003424  6E1A               	movwf	?_putsUSART,c
 14851  003426  EC2E  F011         	call	_putsUSART	;wreg free
 14852                           
 14853                           ;main.c: 2219: itoa(wrkbuf, vscpNodeId, bHex ? 16 : 10);
 14854  00342A  0100               	movlb	0	; () banked
 14855  00342C  67D3               	tstfsz	_bHex& (0+255),b
 14856  00342E  D003               	goto	l13948
 14857                           
 14858                           ; BSR set to: 0
 14859  003430  6BAE               	clrf	(_findNodes$1464+1)& (0+255),b
 14860  003432  0E0A               	movlw	10
 14861  003434  D002               	goto	L13
 14862  003436                     l13948:
 14863                           
 14864                           ; BSR set to: 0
 14865  003436  6BAE               	clrf	(_findNodes$1464+1)& (0+255),b
 14866  003438  0E10               	movlw	16
 14867  00343A                     L13:
 14868  00343A  6FAD               	movwf	_findNodes$1464& (0+255),b
 14869                           
 14870                           ; BSR set to: 0
 14871  00343C  0E01               	movlw	high _wrkbuf
 14872  00343E  6E2A               	movwf	?_itoa+1,c
 14873  003440  0E74               	movlw	low _wrkbuf
 14874  003442  6E29               	movwf	?_itoa,c
 14875  003444  0100               	movlb	0	; () banked
 14876  003446  C0DC  F02B         	movff	_vscpNodeId,?_itoa+2
 14877  00344A  6A2C               	clrf	?_itoa+3,c
 14878  00344C  C0AD  F02D         	movff	_findNodes$1464,?_itoa+4
 14879  003450  C0AE  F02E         	movff	_findNodes$1464+1,?_itoa+5
 14880  003454  EC2D  F00F         	call	_itoa	;wreg free
 14881                           
 14882                           ;main.c: 2220: putsUSART(wrkbuf);
 14883  003458  0101               	movlb	1	; () banked
 14884  00345A  0E01               	movlw	high _wrkbuf
 14885  00345C  6E1B               	movwf	?_putsUSART+1,c
 14886  00345E  0E74               	movlw	low _wrkbuf
 14887  003460  6E1A               	movwf	?_putsUSART,c
 14888  003462  EC2E  F011         	call	_putsUSART	;wreg free
 14889                           
 14890                           ;main.c: 2221: putsUSART((char *) "\r\n");
 14891  003466  0E71               	movlw	high (STR_188+50)
 14892  003468  6E1B               	movwf	?_putsUSART+1,c
 14893  00346A  0EAE               	movlw	low (STR_188+50)
 14894  00346C  6E1A               	movwf	?_putsUSART,c
 14895  00346E  EC2E  F011         	call	_putsUSART	;wreg free
 14896                           
 14897                           ;main.c: 2222: printNodeFirmwareVersion(i);
 14898  003472  0100               	movlb	0	; () banked
 14899  003474  51B1               	movf	findNodes@i& (0+255),w,b
 14900  003476  ECDF  F017         	call	_printNodeFirmwareVersion
 14901                           
 14902                           ;main.c: 2223: printGUID(i);
 14903  00347A  0100               	movlb	0	; () banked
 14904  00347C  51B1               	movf	findNodes@i& (0+255),w,b
 14905  00347E  ECD3  F01B         	call	_printGUID
 14906                           
 14907                           ;main.c: 2224: printMDF(i);
 14908  003482  0100               	movlb	0	; () banked
 14909  003484  51B1               	movf	findNodes@i& (0+255),w,b
 14910  003486  EC24  F015         	call	_printMDF
 14911                           
 14912                           ;main.c: 2225: putsUSART((char *) "-----------------------------------------------------
      +                          -----------\r\n");
 14913  00348A  0E6E               	movlw	high STR_229
 14914  00348C  6E1B               	movwf	?_putsUSART+1,c
 14915  00348E  0E77               	movlw	low STR_229
 14916  003490  6E1A               	movwf	?_putsUSART,c
 14917  003492  EC2E  F011         	call	_putsUSART	;wreg free
 14918                           
 14919                           ;main.c: 2226: nFound++;
 14920  003496  0100               	movlb	0	; () banked
 14921  003498  2BAF               	incf	findNodes@nFound& (0+255),f,b
 14922  00349A                     l13966:
 14923  00349A  0100               	movlb	0	; () banked
 14924  00349C  2BB1               	incf	findNodes@i& (0+255),f,b
 14925                           
 14926                           ; BSR set to: 0
 14927  00349E  67B1               	tstfsz	findNodes@i& (0+255),b
 14928  0034A0  D7B0               	goto	l1079
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;main.c: 2227: }
 14932                           ;main.c: 2229: }
 14933                           ;main.c: 2231: itoa(wrkbuf, nFound, 10);
 14934  0034A2  0E01               	movlw	high _wrkbuf
 14935  0034A4  6E2A               	movwf	?_itoa+1,c
 14936  0034A6  0E74               	movlw	low _wrkbuf
 14937  0034A8  6E29               	movwf	?_itoa,c
 14938  0034AA  C0AF  F02B         	movff	findNodes@nFound,?_itoa+2
 14939  0034AE  6A2C               	clrf	?_itoa+3,c
 14940  0034B0  6A2E               	clrf	?_itoa+5,c
 14941  0034B2  0E0A               	movlw	10
 14942  0034B4  6E2D               	movwf	?_itoa+4,c
 14943  0034B6  EC2D  F00F         	call	_itoa	;wreg free
 14944                           
 14945                           ;main.c: 2232: putsUSART(wrkbuf);
 14946  0034BA  0101               	movlb	1	; () banked
 14947  0034BC  0E01               	movlw	high _wrkbuf
 14948  0034BE  6E1B               	movwf	?_putsUSART+1,c
 14949  0034C0  0E74               	movlw	low _wrkbuf
 14950  0034C2  6E1A               	movwf	?_putsUSART,c
 14951  0034C4  EC2E  F011         	call	_putsUSART	;wreg free
 14952                           
 14953                           ;main.c: 2233: putsUSART((char *) " nodes found\r\n");
 14954  0034C8  0E7B               	movlw	high STR_233
 14955  0034CA  6E1B               	movwf	?_putsUSART+1,c
 14956  0034CC  0E4F               	movlw	low STR_233
 14957  0034CE  6E1A               	movwf	?_putsUSART,c
 14958  0034D0  EF2E  F011         	goto	_putsUSART	;wreg free
 14959  0034D4                     __end_of_findNodes:
 14960                           	opt stack 0
 14961                           tblptru	equ	0xFF8
 14962                           tblptrh	equ	0xFF7
 14963                           tblptrl	equ	0xFF6
 14964                           tablat	equ	0xFF5
 14965                           prodh	equ	0xFF4
 14966                           prodl	equ	0xFF3
 14967                           intcon	equ	0xFF2
 14968                           indf0	equ	0xFEF
 14969                           postinc0	equ	0xFEE
 14970                           fsr0h	equ	0xFEA
 14971                           fsr0l	equ	0xFE9
 14972                           wreg	equ	0xFE8
 14973                           indf1	equ	0xFE7
 14974                           postinc1	equ	0xFE6
 14975                           postdec1	equ	0xFE5
 14976                           fsr1h	equ	0xFE2
 14977                           fsr1l	equ	0xFE1
 14978                           indf2	equ	0xFDF
 14979                           postinc2	equ	0xFDE
 14980                           postdec2	equ	0xFDD
 14981                           plusw2	equ	0xFDB
 14982                           fsr2h	equ	0xFDA
 14983                           fsr2l	equ	0xFD9
 14984                           status	equ	0xFD8
 14985                           
 14986 ;; *************** function _printMDF *****************
 14987 ;; Defined at:
 14988 ;;		line 2282 in file "main.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;  nodeid          1    wreg     unsigned char 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;  nodeid          1   71[BANK0 ] unsigned char 
 14993 ;;  p               2   73[BANK0 ] PTR unsigned char 
 14994 ;;		 -> wrkbuf(80), 
 14995 ;;  i               1   75[BANK0 ] unsigned char 
 14996 ;;  value           1   72[BANK0 ] unsigned char 
 14997 ;; Return value:  Size  Location     Type
 14998 ;;		None               void
 14999 ;; Registers used:
 15000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15001 ;; Tracked objects:
 15002 ;;		On entry : D/2
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15006 ;;      Params:         0       0       0       0       0       0       0
 15007 ;;      Locals:         0       5       0       0       0       0       0
 15008 ;;      Temps:          0       0       0       0       0       0       0
 15009 ;;      Totals:         0       5       0       0       0       0       0
 15010 ;;Total ram usage:        5 bytes
 15011 ;; Hardware stack levels used:    1
 15012 ;; Hardware stack levels required when called:    7
 15013 ;; This function calls:
 15014 ;;		_putsUSART
 15015 ;;		_memset
 15016 ;;		_readRegister
 15017 ;; This function is called by:
 15018 ;;		_doModeVerbose
 15019 ;;		_findNodes
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           	psect	text26
 15024  002A48                     __ptext26:
 15025                           	opt stack 0
 15026  002A48                     _printMDF:
 15027                           	opt stack 21
 15028                           
 15029                           ;incstack = 0
 15030                           ;incstack = 0
 15031                           ;printMDF@nodeid stored from wreg
 15032  002A48  CFE8 F0A7          	movff	wreg,printMDF@nodeid
 15033                           
 15034                           ;main.c: 2283: uint8_t i;
 15035                           ;main.c: 2284: uint8_t value;
 15036                           ;main.c: 2285: char *p = wrkbuf;
 15037  002A4C  0E01               	movlw	high _wrkbuf
 15038  002A4E  0100               	movlb	0	; () banked
 15039  002A50  6FAA               	movwf	(printMDF@p+1)& (0+255),b
 15040  002A52  0E74               	movlw	low _wrkbuf
 15041  002A54  6FA9               	movwf	printMDF@p& (0+255),b
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;main.c: 2286: memset(wrkbuf, 0, sizeof (wrkbuf));
 15045  002A56  0101               	movlb	1	; () banked
 15046  002A58  0E01               	movlw	high _wrkbuf
 15047  002A5A  6E1A               	movwf	?_memset+1,c
 15048  002A5C  0E74               	movlw	low _wrkbuf
 15049  002A5E  6E19               	movwf	?_memset,c
 15050  002A60  6A1C               	clrf	?_memset+3,c
 15051  002A62  6A1B               	clrf	?_memset+2,c
 15052  002A64  6A1E               	clrf	?_memset+5,c
 15053  002A66  0E50               	movlw	80
 15054  002A68  6E1D               	movwf	?_memset+4,c
 15055  002A6A  ECCF  F00E         	call	_memset	;wreg free
 15056                           
 15057                           ;main.c: 2287: putsUSART((char *) "MDF = http://");
 15058  002A6E  0E7B               	movlw	high STR_239
 15059  002A70  6E1B               	movwf	?_putsUSART+1,c
 15060  002A72  0E6D               	movlw	low STR_239
 15061  002A74  6E1A               	movwf	?_putsUSART,c
 15062  002A76  EC2E  F011         	call	_putsUSART	;wreg free
 15063                           
 15064                           ;main.c: 2289: for (i = 0; i < 32; i++) {
 15065  002A7A  0100               	movlb	0	; () banked
 15066  002A7C  6BAB               	clrf	printMDF@i& (0+255),b
 15067  002A7E                     l14160:
 15068                           
 15069                           ; BSR set to: 0
 15070                           ;main.c: 2290: if (readRegister(nodeid,
 15071                           ;main.c: 2291: 0xE0 + i,
 15072                           ;main.c: 2292: rwtimeout,
 15073                           ;main.c: 2293: &value)) {
 15074  002A7E  51AB               	movf	printMDF@i& (0+255),w,b
 15075  002A80  0FE0               	addlw	224
 15076  002A82  6F9E               	movwf	?_readRegister& (0+255),b
 15077  002A84  C0D9  F09F         	movff	_rwtimeout,?_readRegister+1
 15078  002A88  6BA0               	clrf	(?_readRegister+2)& (0+255),b
 15079  002A8A  0EA8               	movlw	low printMDF@value
 15080  002A8C  6FA1               	movwf	(?_readRegister+3)& (0+255),b
 15081  002A8E  51A7               	movf	printMDF@nodeid& (0+255),w,b
 15082  002A90  EC0B  F016         	call	_readRegister
 15083  002A94  0900               	iorlw	0
 15084  002A96  E00A               	bz	l14166
 15085                           
 15086                           ;main.c: 2294: *p = value;
 15087  002A98  C0A9  FFD9         	movff	printMDF@p,fsr2l
 15088  002A9C  C0AA  FFDA         	movff	printMDF@p+1,fsr2h
 15089  002AA0  C0A8  FFDF         	movff	printMDF@value,indf2
 15090  002AA4                     l14164:
 15091                           
 15092                           ;main.c: 2295: p++;
 15093  002AA4  0100               	movlb	0	; () banked
 15094  002AA6  4BA9               	infsnz	printMDF@p& (0+255),f,b
 15095  002AA8  2BAA               	incf	(printMDF@p+1)& (0+255),f,b
 15096                           
 15097                           ;main.c: 2297: } else {
 15098  002AAA  D007               	goto	l14170
 15099  002AAC                     l14166:
 15100                           
 15101                           ;main.c: 2298: *p = '?';
 15102  002AAC  C0A9  FFD9         	movff	printMDF@p,fsr2l
 15103  002AB0  C0AA  FFDA         	movff	printMDF@p+1,fsr2h
 15104  002AB4  0E3F               	movlw	63
 15105  002AB6  6EDF               	movwf	indf2,c
 15106  002AB8  D7F5               	goto	l14164
 15107  002ABA                     l14170:
 15108                           
 15109                           ; BSR set to: 0
 15110  002ABA  2BAB               	incf	printMDF@i& (0+255),f,b
 15111                           
 15112                           ; BSR set to: 0
 15113  002ABC  0E1F               	movlw	31
 15114  002ABE  65AB               	cpfsgt	printMDF@i& (0+255),b
 15115  002AC0  D7DE               	goto	l14160
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;main.c: 2300: }
 15119                           ;main.c: 2301: }
 15120                           ;main.c: 2303: putsUSART(wrkbuf);
 15121  002AC2  0101               	movlb	1	; () banked
 15122  002AC4  0E01               	movlw	high _wrkbuf
 15123  002AC6  6E1B               	movwf	?_putsUSART+1,c
 15124  002AC8  0E74               	movlw	low _wrkbuf
 15125  002ACA  6E1A               	movwf	?_putsUSART,c
 15126  002ACC  EC2E  F011         	call	_putsUSART	;wreg free
 15127                           
 15128                           ;main.c: 2304: putsUSART((char *) "\r\n");
 15129  002AD0  0E71               	movlw	high (STR_188+50)
 15130  002AD2  6E1B               	movwf	?_putsUSART+1,c
 15131  002AD4  0EAE               	movlw	low (STR_188+50)
 15132  002AD6  6E1A               	movwf	?_putsUSART,c
 15133  002AD8  EF2E  F011         	goto	_putsUSART	;wreg free
 15134  002ADC                     __end_of_printMDF:
 15135                           	opt stack 0
 15136                           tblptru	equ	0xFF8
 15137                           tblptrh	equ	0xFF7
 15138                           tblptrl	equ	0xFF6
 15139                           tablat	equ	0xFF5
 15140                           prodh	equ	0xFF4
 15141                           prodl	equ	0xFF3
 15142                           intcon	equ	0xFF2
 15143                           indf0	equ	0xFEF
 15144                           postinc0	equ	0xFEE
 15145                           fsr0h	equ	0xFEA
 15146                           fsr0l	equ	0xFE9
 15147                           wreg	equ	0xFE8
 15148                           indf1	equ	0xFE7
 15149                           postinc1	equ	0xFE6
 15150                           postdec1	equ	0xFE5
 15151                           fsr1h	equ	0xFE2
 15152                           fsr1l	equ	0xFE1
 15153                           indf2	equ	0xFDF
 15154                           postinc2	equ	0xFDE
 15155                           postdec2	equ	0xFDD
 15156                           plusw2	equ	0xFDB
 15157                           fsr2h	equ	0xFDA
 15158                           fsr2l	equ	0xFD9
 15159                           status	equ	0xFD8
 15160                           
 15161 ;; *************** function _printGUID *****************
 15162 ;; Defined at:
 15163 ;;		line 2242 in file "main.c"
 15164 ;; Parameters:    Size  Location     Type
 15165 ;;  nodeid          1    wreg     unsigned char 
 15166 ;; Auto vars:     Size  Location     Type
 15167 ;;  nodeid          1   71[BANK0 ] unsigned char 
 15168 ;;  buf             3   72[BANK0 ] unsigned char [3]
 15169 ;;  i               1   76[BANK0 ] unsigned char 
 15170 ;;  value           1   75[BANK0 ] unsigned char 
 15171 ;; Return value:  Size  Location     Type
 15172 ;;		None               void
 15173 ;; Registers used:
 15174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15175 ;; Tracked objects:
 15176 ;;		On entry : D/2
 15177 ;;		On exit  : 0/0
 15178 ;;		Unchanged: 0/0
 15179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15180 ;;      Params:         0       0       0       0       0       0       0
 15181 ;;      Locals:         0       6       0       0       0       0       0
 15182 ;;      Temps:          0       0       0       0       0       0       0
 15183 ;;      Totals:         0       6       0       0       0       0       0
 15184 ;;Total ram usage:        6 bytes
 15185 ;; Hardware stack levels used:    1
 15186 ;; Hardware stack levels required when called:    7
 15187 ;; This function calls:
 15188 ;;		_putsUSART
 15189 ;;		_memset
 15190 ;;		_strlen
 15191 ;;		_itoa
 15192 ;;		_readRegister
 15193 ;;		_strcat
 15194 ;; This function is called by:
 15195 ;;		_doModeVerbose
 15196 ;;		_findNodes
 15197 ;; This function uses a non-reentrant model
 15198 ;;
 15199                           
 15200                           	psect	text27
 15201  0037A6                     __ptext27:
 15202                           	opt stack 0
 15203  0037A6                     _printGUID:
 15204                           	opt stack 21
 15205                           
 15206                           ;incstack = 0
 15207                           ;incstack = 0
 15208                           ;printGUID@nodeid stored from wreg
 15209  0037A6  CFE8 F0A7          	movff	wreg,printGUID@nodeid
 15210                           
 15211                           ;main.c: 2243: uint8_t i;
 15212                           ;main.c: 2244: uint8_t value;
 15213                           ;main.c: 2245: char buf[3];
 15214                           ;main.c: 2247: memset(wrkbuf, 0, sizeof (wrkbuf));
 15215  0037AA  0101               	movlb	1	; () banked
 15216  0037AC  0E01               	movlw	high _wrkbuf
 15217  0037AE  6E1A               	movwf	?_memset+1,c
 15218  0037B0  0E74               	movlw	low _wrkbuf
 15219  0037B2  6E19               	movwf	?_memset,c
 15220  0037B4  6A1C               	clrf	?_memset+3,c
 15221  0037B6  6A1B               	clrf	?_memset+2,c
 15222  0037B8  6A1E               	clrf	?_memset+5,c
 15223  0037BA  0E50               	movlw	80
 15224  0037BC  6E1D               	movwf	?_memset+4,c
 15225  0037BE  ECCF  F00E         	call	_memset	;wreg free
 15226                           
 15227                           ;main.c: 2248: putsUSART((char *) "GUID = ");
 15228  0037C2  0E7B               	movlw	high STR_234
 15229  0037C4  6E1B               	movwf	?_putsUSART+1,c
 15230  0037C6  0EE6               	movlw	low STR_234
 15231  0037C8  6E1A               	movwf	?_putsUSART,c
 15232  0037CA  EC2E  F011         	call	_putsUSART	;wreg free
 15233                           
 15234                           ;main.c: 2250: for (i = 0; i < 16; i++) {
 15235  0037CE  0100               	movlb	0	; () banked
 15236  0037D0  6BAC               	clrf	printGUID@i& (0+255),b
 15237  0037D2                     l14126:
 15238                           
 15239                           ; BSR set to: 0
 15240                           ;main.c: 2251: if (readRegister(nodeid,
 15241                           ;main.c: 2252: 0xD0 + i,
 15242                           ;main.c: 2253: rwtimeout,
 15243                           ;main.c: 2254: &value)) {
 15244  0037D2  51AC               	movf	printGUID@i& (0+255),w,b
 15245  0037D4  0FD0               	addlw	208
 15246  0037D6  6F9E               	movwf	?_readRegister& (0+255),b
 15247  0037D8  C0D9  F09F         	movff	_rwtimeout,?_readRegister+1
 15248  0037DC  6BA0               	clrf	(?_readRegister+2)& (0+255),b
 15249  0037DE  0EAB               	movlw	low printGUID@value
 15250  0037E0  6FA1               	movwf	(?_readRegister+3)& (0+255),b
 15251  0037E2  51A7               	movf	printGUID@nodeid& (0+255),w,b
 15252  0037E4  EC0B  F016         	call	_readRegister
 15253  0037E8  0900               	iorlw	0
 15254  0037EA  E02A               	bz	l14136
 15255                           
 15256                           ;main.c: 2255: itoa(buf, value, 16);
 15257  0037EC  0100               	movlb	0	; () banked
 15258  0037EE  0E00               	movlw	high printGUID@buf
 15259  0037F0  6E2A               	movwf	?_itoa+1,c
 15260  0037F2  0EA8               	movlw	low printGUID@buf
 15261  0037F4  6E29               	movwf	?_itoa,c
 15262  0037F6  C0AB  F02B         	movff	printGUID@value,?_itoa+2
 15263  0037FA  6A2C               	clrf	?_itoa+3,c
 15264  0037FC  6A2E               	clrf	?_itoa+5,c
 15265  0037FE  0E10               	movlw	16
 15266  003800  6E2D               	movwf	?_itoa+4,c
 15267  003802  EC2D  F00F         	call	_itoa	;wreg free
 15268                           
 15269                           ;main.c: 2256: if (1 == strlen(buf)) {
 15270  003806  0100               	movlb	0	; () banked
 15271  003808  0E00               	movlw	high printGUID@buf
 15272  00380A  6E1A               	movwf	?_strlen+1,c
 15273  00380C  0EA8               	movlw	low printGUID@buf
 15274  00380E  6E19               	movwf	?_strlen,c
 15275  003810  EC9E  F00F         	call	_strlen	;wreg free
 15276  003814  0419               	decf	?_strlen,w,c
 15277  003816  101A               	iorwf	?_strlen+1,w,c
 15278  003818  E10F               	bnz	l14134
 15279                           
 15280                           ;main.c: 2257: strcat(wrkbuf, "0");
 15281  00381A  0101               	movlb	1	; () banked
 15282  00381C  0E01               	movlw	high _wrkbuf
 15283  00381E  6E1A               	movwf	?_strcat+1,c
 15284  003820  0E74               	movlw	low _wrkbuf
 15285  003822  6E19               	movwf	?_strcat,c
 15286  003824  0E7C               	movlw	high STR_235
 15287  003826  6E1C               	movwf	?_strcat+3,c
 15288  003828  0EF9               	movlw	low STR_235
 15289  00382A  6E1B               	movwf	?_strcat+2,c
 15290  00382C  EC58  F011         	call	_strcat	;wreg free
 15291                           
 15292                           ;main.c: 2258: strcat(wrkbuf, buf);
 15293  003830  D833               	call	PL76	;call to abstracted procedure
 15294  003832  EC58  F011         	call	_strcat	;wreg free
 15295                           
 15296                           ;main.c: 2259: } else {
 15297  003836  D00F               	goto	l14138
 15298  003838                     l14134:
 15299                           
 15300                           ;main.c: 2260: strcat(wrkbuf, buf);
 15301  003838  D82F               	call	PL76	;call to abstracted procedure
 15302  00383A  EC58  F011         	call	_strcat	;wreg free
 15303  00383E  D00B               	goto	l14138
 15304  003840                     l14136:
 15305                           
 15306                           ;main.c: 2264: strcat(wrkbuf, "--");
 15307  003840  0101               	movlb	1	; () banked
 15308  003842  0E01               	movlw	high _wrkbuf
 15309  003844  6E1A               	movwf	?_strcat+1,c
 15310  003846  0E74               	movlw	low _wrkbuf
 15311  003848  6E19               	movwf	?_strcat,c
 15312  00384A  0E7C               	movlw	high STR_236
 15313  00384C  6E1C               	movwf	?_strcat+3,c
 15314  00384E  0EE5               	movlw	low STR_236
 15315  003850  6E1B               	movwf	?_strcat+2,c
 15316  003852  EC58  F011         	call	_strcat	;wreg free
 15317  003856                     l14138:
 15318                           
 15319                           ;main.c: 2265: }
 15320                           ;main.c: 2267: if (i < 15) {
 15321  003856  0E0F               	movlw	15
 15322  003858  0100               	movlb	0	; () banked
 15323  00385A  61AC               	cpfslt	printGUID@i& (0+255),b
 15324  00385C  D00B               	goto	l14142
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;main.c: 2268: strcat(wrkbuf, ":");
 15328  00385E  0101               	movlb	1	; () banked
 15329  003860  0E01               	movlw	high _wrkbuf
 15330  003862  6E1A               	movwf	?_strcat+1,c
 15331  003864  0E74               	movlw	low _wrkbuf
 15332  003866  6E19               	movwf	?_strcat,c
 15333  003868  0E7C               	movlw	high STR_237
 15334  00386A  6E1C               	movwf	?_strcat+3,c
 15335  00386C  0EFB               	movlw	low STR_237
 15336  00386E  6E1B               	movwf	?_strcat+2,c
 15337  003870  EC58  F011         	call	_strcat	;wreg free
 15338  003874                     l14142:
 15339  003874  0100               	movlb	0	; () banked
 15340  003876  2BAC               	incf	printGUID@i& (0+255),f,b
 15341                           
 15342                           ; BSR set to: 0
 15343  003878  0E0F               	movlw	15
 15344  00387A  65AC               	cpfsgt	printGUID@i& (0+255),b
 15345  00387C  D7AA               	goto	l14126
 15346                           
 15347                           ; BSR set to: 0
 15348                           ;main.c: 2269: }
 15349                           ;main.c: 2271: }
 15350                           ;main.c: 2273: putsUSART(wrkbuf);
 15351  00387E  0101               	movlb	1	; () banked
 15352  003880  0E01               	movlw	high _wrkbuf
 15353  003882  6E1B               	movwf	?_putsUSART+1,c
 15354  003884  0E74               	movlw	low _wrkbuf
 15355  003886  6E1A               	movwf	?_putsUSART,c
 15356  003888  EC2E  F011         	call	_putsUSART	;wreg free
 15357                           
 15358                           ;main.c: 2274: putsUSART((char *) "\r\n");
 15359  00388C  0E71               	movlw	high (STR_188+50)
 15360  00388E  6E1B               	movwf	?_putsUSART+1,c
 15361  003890  0EAE               	movlw	low (STR_188+50)
 15362  003892  6E1A               	movwf	?_putsUSART,c
 15363  003894  EF2E  F011         	goto	_putsUSART	;wreg free
 15364  003898                     __end_of_printGUID:
 15365                           	opt stack 0
 15366  003898                     PL76:
 15367                           	opt stack 21
 15368  003898  0E01               	movlw	high _wrkbuf
 15369  00389A  6E1A               	movwf	?_strcat+1,c
 15370  00389C  0E74               	movlw	low _wrkbuf
 15371  00389E  6E19               	movwf	?_strcat,c
 15372  0038A0  0100               	movlb	0	; () banked
 15373  0038A2  0E00               	movlw	high printGUID@buf
 15374  0038A4  6E1C               	movwf	?_strcat+3,c
 15375  0038A6  0EA8               	movlw	low printGUID@buf
 15376  0038A8  6E1B               	movwf	?_strcat+2,c
 15377  0038AA  0012               	return	
 15378  0038AC                     __end_ofPL76:
 15379                           	opt stack 0
 15380                           tblptru	equ	0xFF8
 15381                           tblptrh	equ	0xFF7
 15382                           tblptrl	equ	0xFF6
 15383                           tablat	equ	0xFF5
 15384                           prodh	equ	0xFF4
 15385                           prodl	equ	0xFF3
 15386                           intcon	equ	0xFF2
 15387                           indf0	equ	0xFEF
 15388                           postinc0	equ	0xFEE
 15389                           fsr0h	equ	0xFEA
 15390                           fsr0l	equ	0xFE9
 15391                           wreg	equ	0xFE8
 15392                           indf1	equ	0xFE7
 15393                           postinc1	equ	0xFE6
 15394                           postdec1	equ	0xFE5
 15395                           fsr1h	equ	0xFE2
 15396                           fsr1l	equ	0xFE1
 15397                           indf2	equ	0xFDF
 15398                           postinc2	equ	0xFDE
 15399                           postdec2	equ	0xFDD
 15400                           plusw2	equ	0xFDB
 15401                           fsr2h	equ	0xFDA
 15402                           fsr2l	equ	0xFD9
 15403                           status	equ	0xFD8
 15404                           
 15405 ;; *************** function _printNodeFirmwareVersion *****************
 15406 ;; Defined at:
 15407 ;;		line 2311 in file "main.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;  nodeid          1    wreg     unsigned char 
 15410 ;; Auto vars:     Size  Location     Type
 15411 ;;  nodeid          1   71[BANK0 ] unsigned char 
 15412 ;;  buf             3   72[BANK0 ] unsigned char [3]
 15413 ;;  i               1   76[BANK0 ] unsigned char 
 15414 ;;  value           1   75[BANK0 ] unsigned char 
 15415 ;; Return value:  Size  Location     Type
 15416 ;;		None               void
 15417 ;; Registers used:
 15418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15419 ;; Tracked objects:
 15420 ;;		On entry : D/2
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15424 ;;      Params:         0       0       0       0       0       0       0
 15425 ;;      Locals:         0       6       0       0       0       0       0
 15426 ;;      Temps:          0       0       0       0       0       0       0
 15427 ;;      Totals:         0       6       0       0       0       0       0
 15428 ;;Total ram usage:        6 bytes
 15429 ;; Hardware stack levels used:    1
 15430 ;; Hardware stack levels required when called:    7
 15431 ;; This function calls:
 15432 ;;		_putsUSART
 15433 ;;		_memset
 15434 ;;		_itoa
 15435 ;;		_readRegister
 15436 ;;		_strcat
 15437 ;; This function is called by:
 15438 ;;		_doModeVerbose
 15439 ;;		_findNodes
 15440 ;; This function uses a non-reentrant model
 15441 ;;
 15442                           
 15443                           	psect	text28
 15444  002FBE                     __ptext28:
 15445                           	opt stack 0
 15446  002FBE                     _printNodeFirmwareVersion:
 15447                           	opt stack 21
 15448                           
 15449                           ;incstack = 0
 15450                           ;incstack = 0
 15451                           ;printNodeFirmwareVersion@nodeid stored from wreg
 15452  002FBE  CFE8 F0A7          	movff	wreg,printNodeFirmwareVersion@nodeid
 15453                           
 15454                           ;main.c: 2312: uint8_t i;
 15455                           ;main.c: 2313: uint8_t value;
 15456                           ;main.c: 2314: char buf[3];
 15457                           ;main.c: 2316: memset(wrkbuf, 0, sizeof (wrkbuf));
 15458  002FC2  0101               	movlb	1	; () banked
 15459  002FC4  0E01               	movlw	high _wrkbuf
 15460  002FC6  6E1A               	movwf	?_memset+1,c
 15461  002FC8  0E74               	movlw	low _wrkbuf
 15462  002FCA  6E19               	movwf	?_memset,c
 15463  002FCC  6A1C               	clrf	?_memset+3,c
 15464  002FCE  6A1B               	clrf	?_memset+2,c
 15465  002FD0  6A1E               	clrf	?_memset+5,c
 15466  002FD2  0E50               	movlw	80
 15467  002FD4  6E1D               	movwf	?_memset+4,c
 15468  002FD6  ECCF  F00E         	call	_memset	;wreg free
 15469                           
 15470                           ;main.c: 2317: putsUSART((char *) "Firmware version = ");
 15471  002FDA  0E7A               	movlw	high STR_241
 15472  002FDC  6E1B               	movwf	?_putsUSART+1,c
 15473  002FDE  0EBF               	movlw	low STR_241
 15474  002FE0  6E1A               	movwf	?_putsUSART,c
 15475  002FE2  EC2E  F011         	call	_putsUSART	;wreg free
 15476                           
 15477                           ;main.c: 2319: for (i = 0; i < 3; i++) {
 15478  002FE6  0100               	movlb	0	; () banked
 15479  002FE8  6BAC               	clrf	printNodeFirmwareVersion@i& (0+255),b
 15480  002FEA                     l14098:
 15481                           
 15482                           ; BSR set to: 0
 15483                           ;main.c: 2320: if (readRegister(nodeid,
 15484                           ;main.c: 2321: 0x94 + i,
 15485                           ;main.c: 2322: rwtimeout,
 15486                           ;main.c: 2323: &value)) {
 15487  002FEA  51AC               	movf	printNodeFirmwareVersion@i& (0+255),w,b
 15488  002FEC  0F94               	addlw	148
 15489  002FEE  6F9E               	movwf	?_readRegister& (0+255),b
 15490  002FF0  C0D9  F09F         	movff	_rwtimeout,?_readRegister+1
 15491  002FF4  6BA0               	clrf	(?_readRegister+2)& (0+255),b
 15492  002FF6  0EAB               	movlw	low printNodeFirmwareVersion@value
 15493  002FF8  6FA1               	movwf	(?_readRegister+3)& (0+255),b
 15494  002FFA  51A7               	movf	printNodeFirmwareVersion@nodeid& (0+255),w,b
 15495  002FFC  EC0B  F016         	call	_readRegister
 15496  003000  0900               	iorlw	0
 15497  003002  E019               	bz	l14104
 15498                           
 15499                           ;main.c: 2324: itoa(buf, value, 16);
 15500  003004  0100               	movlb	0	; () banked
 15501  003006  0E00               	movlw	high printNodeFirmwareVersion@buf
 15502  003008  6E2A               	movwf	?_itoa+1,c
 15503  00300A  0EA8               	movlw	low printNodeFirmwareVersion@buf
 15504  00300C  6E29               	movwf	?_itoa,c
 15505  00300E  C0AB  F02B         	movff	printNodeFirmwareVersion@value,?_itoa+2
 15506  003012  6A2C               	clrf	?_itoa+3,c
 15507  003014  6A2E               	clrf	?_itoa+5,c
 15508  003016  0E10               	movlw	16
 15509  003018  6E2D               	movwf	?_itoa+4,c
 15510  00301A  EC2D  F00F         	call	_itoa	;wreg free
 15511                           
 15512                           ;main.c: 2325: strcat(wrkbuf, buf);
 15513  00301E  0E01               	movlw	high _wrkbuf
 15514  003020  6E1A               	movwf	?_strcat+1,c
 15515  003022  0E74               	movlw	low _wrkbuf
 15516  003024  6E19               	movwf	?_strcat,c
 15517  003026  0100               	movlb	0	; () banked
 15518  003028  0E00               	movlw	high printNodeFirmwareVersion@buf
 15519  00302A  6E1C               	movwf	?_strcat+3,c
 15520  00302C  0EA8               	movlw	low printNodeFirmwareVersion@buf
 15521  00302E  6E1B               	movwf	?_strcat+2,c
 15522  003030  EC58  F011         	call	_strcat	;wreg free
 15523                           
 15524                           ;main.c: 2326: } else {
 15525  003034  D00B               	goto	l14106
 15526  003036                     l14104:
 15527                           
 15528                           ;main.c: 2327: strcat(wrkbuf, "?");
 15529  003036  0101               	movlb	1	; () banked
 15530  003038  0E01               	movlw	high _wrkbuf
 15531  00303A  6E1A               	movwf	?_strcat+1,c
 15532  00303C  0E74               	movlw	low _wrkbuf
 15533  00303E  6E19               	movwf	?_strcat,c
 15534  003040  0E7C               	movlw	high STR_242
 15535  003042  6E1C               	movwf	?_strcat+3,c
 15536  003044  0EFD               	movlw	low STR_242
 15537  003046  6E1B               	movwf	?_strcat+2,c
 15538  003048  EC58  F011         	call	_strcat	;wreg free
 15539  00304C                     l14106:
 15540                           
 15541                           ;main.c: 2328: }
 15542                           ;main.c: 2330: if (i < 2) {
 15543  00304C  0E02               	movlw	2
 15544  00304E  0100               	movlb	0	; () banked
 15545  003050  61AC               	cpfslt	printNodeFirmwareVersion@i& (0+255),b
 15546  003052  D00B               	goto	l14110
 15547                           
 15548                           ; BSR set to: 0
 15549                           ;main.c: 2331: strcat(wrkbuf, ".");
 15550  003054  0101               	movlb	1	; () banked
 15551  003056  0E01               	movlw	high _wrkbuf
 15552  003058  6E1A               	movwf	?_strcat+1,c
 15553  00305A  0E74               	movlw	low _wrkbuf
 15554  00305C  6E19               	movwf	?_strcat,c
 15555  00305E  0E7C               	movlw	high STR_243
 15556  003060  6E1C               	movwf	?_strcat+3,c
 15557  003062  0EF7               	movlw	low STR_243
 15558  003064  6E1B               	movwf	?_strcat+2,c
 15559  003066  EC58  F011         	call	_strcat	;wreg free
 15560  00306A                     l14110:
 15561  00306A  0100               	movlb	0	; () banked
 15562  00306C  2BAC               	incf	printNodeFirmwareVersion@i& (0+255),f,b
 15563                           
 15564                           ; BSR set to: 0
 15565  00306E  0E02               	movlw	2
 15566  003070  65AC               	cpfsgt	printNodeFirmwareVersion@i& (0+255),b
 15567  003072  D7BB               	goto	l14098
 15568                           
 15569                           ; BSR set to: 0
 15570                           ;main.c: 2332: }
 15571                           ;main.c: 2334: }
 15572                           ;main.c: 2336: putsUSART(wrkbuf);
 15573  003074  0101               	movlb	1	; () banked
 15574  003076  0E01               	movlw	high _wrkbuf
 15575  003078  6E1B               	movwf	?_putsUSART+1,c
 15576  00307A  0E74               	movlw	low _wrkbuf
 15577  00307C  6E1A               	movwf	?_putsUSART,c
 15578  00307E  EC2E  F011         	call	_putsUSART	;wreg free
 15579                           
 15580                           ;main.c: 2337: putsUSART((char *) "\r\n");
 15581  003082  0E71               	movlw	high (STR_188+50)
 15582  003084  6E1B               	movwf	?_putsUSART+1,c
 15583  003086  0EAE               	movlw	low (STR_188+50)
 15584  003088  6E1A               	movwf	?_putsUSART,c
 15585  00308A  EF2E  F011         	goto	_putsUSART	;wreg free
 15586  00308E                     __end_of_printNodeFirmwareVersion:
 15587                           	opt stack 0
 15588                           tblptru	equ	0xFF8
 15589                           tblptrh	equ	0xFF7
 15590                           tblptrl	equ	0xFF6
 15591                           tablat	equ	0xFF5
 15592                           prodh	equ	0xFF4
 15593                           prodl	equ	0xFF3
 15594                           intcon	equ	0xFF2
 15595                           indf0	equ	0xFEF
 15596                           postinc0	equ	0xFEE
 15597                           fsr0h	equ	0xFEA
 15598                           fsr0l	equ	0xFE9
 15599                           wreg	equ	0xFE8
 15600                           indf1	equ	0xFE7
 15601                           postinc1	equ	0xFE6
 15602                           postdec1	equ	0xFE5
 15603                           fsr1h	equ	0xFE2
 15604                           fsr1l	equ	0xFE1
 15605                           indf2	equ	0xFDF
 15606                           postinc2	equ	0xFDE
 15607                           postdec2	equ	0xFDD
 15608                           plusw2	equ	0xFDB
 15609                           fsr2h	equ	0xFDA
 15610                           fsr2l	equ	0xFD9
 15611                           status	equ	0xFD8
 15612                           
 15613 ;; *************** function _strcat *****************
 15614 ;; Defined at:
 15615 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcat.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  to              2   24[COMRAM] PTR unsigned char 
 15618 ;;		 -> wrkbuf(80), 
 15619 ;;  from            2   26[COMRAM] PTR const unsigned char 
 15620 ;;		 -> STR_243(2), STR_242(2), printNodeFirmwareVersion@buf(3), STR_237(2), 
 15621 ;;		 -> STR_236(3), STR_235(2), printGUID@buf(3), 
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;  cp              2   28[COMRAM] PTR unsigned char 
 15624 ;;		 -> wrkbuf(80), 
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  2   24[COMRAM] PTR unsigned char 
 15627 ;; Registers used:
 15628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15629 ;; Tracked objects:
 15630 ;;		On entry : E/1
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15634 ;;      Params:         4       0       0       0       0       0       0
 15635 ;;      Locals:         2       0       0       0       0       0       0
 15636 ;;      Temps:          0       0       0       0       0       0       0
 15637 ;;      Totals:         6       0       0       0       0       0       0
 15638 ;;Total ram usage:        6 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; Hardware stack levels required when called:    2
 15641 ;; This function calls:
 15642 ;;		Nothing
 15643 ;; This function is called by:
 15644 ;;		_printGUID
 15645 ;;		_printNodeFirmwareVersion
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           	psect	text29
 15650  0022B0                     __ptext29:
 15651                           	opt stack 0
 15652  0022B0                     _strcat:
 15653                           	opt stack 25
 15654                           
 15655                           ;incstack = 0
 15656                           ;incstack = 0
 15657  0022B0  C019  F01D         	movff	strcat@to,strcat@cp
 15658  0022B4  C01A  F01E         	movff	strcat@to+1,strcat@cp+1
 15659  0022B8  D002               	goto	l12010
 15660  0022BA                     l12008:
 15661  0022BA  4A1D               	infsnz	strcat@cp,f,c
 15662  0022BC  2A1E               	incf	strcat@cp+1,f,c
 15663  0022BE                     l12010:
 15664  0022BE  C01D  FFD9         	movff	strcat@cp,fsr2l
 15665  0022C2  C01E  FFDA         	movff	strcat@cp+1,fsr2h
 15666  0022C6  50DF               	movf	indf2,w,c
 15667  0022C8  E005               	bz	l12014
 15668  0022CA  D7F7               	goto	l12008
 15669  0022CC                     l12012:
 15670  0022CC  4A1D               	infsnz	strcat@cp,f,c
 15671  0022CE  2A1E               	incf	strcat@cp+1,f,c
 15672  0022D0  4A1B               	infsnz	strcat@from,f,c
 15673  0022D2  2A1C               	incf	strcat@from+1,f,c
 15674  0022D4                     l12014:
 15675  0022D4  C01B  FFF6         	movff	strcat@from,tblptrl
 15676  0022D8  C01C  FFF7         	movff	strcat@from+1,tblptrh
 15677  0022DC  6AF8               	clrf	tblptru,c
 15678  0022DE  C01D  FFD9         	movff	strcat@cp,fsr2l
 15679  0022E2  C01E  FFDA         	movff	strcat@cp+1,fsr2h
 15680  0022E6  0E05               	movlw	(high __ramtop+-1)
 15681  0022E8  64F7               	cpfsgt	tblptrh,c
 15682  0022EA  D003               	bra	u15577
 15683  0022EC  0008               	tblrd		*
 15684  0022EE  50F5               	movf	tablat,w,c
 15685  0022F0  D005               	bra	u15570
 15686  0022F2                     u15577:
 15687  0022F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 15688  0022F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 15689  0022FA  50EF               	movf	indf0,w,c
 15690  0022FC                     u15570:
 15691  0022FC  6EDF               	movwf	indf2,c
 15692  0022FE  50DF               	movf	indf2,w,c
 15693  002300  B4D8               	btfsc	status,2,c
 15694  002302  0012               	return	
 15695  002304  D7E3               	goto	l12012
 15696  002306                     __end_of_strcat:
 15697                           	opt stack 0
 15698                           tblptru	equ	0xFF8
 15699                           tblptrh	equ	0xFF7
 15700                           tblptrl	equ	0xFF6
 15701                           tablat	equ	0xFF5
 15702                           prodh	equ	0xFF4
 15703                           prodl	equ	0xFF3
 15704                           intcon	equ	0xFF2
 15705                           indf0	equ	0xFEF
 15706                           postinc0	equ	0xFEE
 15707                           fsr0h	equ	0xFEA
 15708                           fsr0l	equ	0xFE9
 15709                           wreg	equ	0xFE8
 15710                           indf1	equ	0xFE7
 15711                           postinc1	equ	0xFE6
 15712                           postdec1	equ	0xFE5
 15713                           fsr1h	equ	0xFE2
 15714                           fsr1l	equ	0xFE1
 15715                           indf2	equ	0xFDF
 15716                           postinc2	equ	0xFDE
 15717                           postdec2	equ	0xFDD
 15718                           plusw2	equ	0xFDB
 15719                           fsr2h	equ	0xFDA
 15720                           fsr2l	equ	0xFD9
 15721                           status	equ	0xFD8
 15722                           
 15723 ;; *************** function _readRegister *****************
 15724 ;; Defined at:
 15725 ;;		line 1821 in file "main.c"
 15726 ;; Parameters:    Size  Location     Type
 15727 ;;  nodeid          1    wreg     unsigned char 
 15728 ;;  reg             1   62[BANK0 ] unsigned char 
 15729 ;;  timeout         2   63[BANK0 ] unsigned short 
 15730 ;;  value           1   65[BANK0 ] PTR unsigned char 
 15731 ;;		 -> printNodeFirmwareVersion@value(1), printMDF@value(1), printGUID@value(1), findNodes@value(1), 
 15732 ;; Auto vars:     Size  Location     Type
 15733 ;;  nodeid          1   70[BANK0 ] unsigned char 
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  1    wreg      enum E15660
 15736 ;; Registers used:
 15737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15738 ;; Tracked objects:
 15739 ;;		On entry : F/0
 15740 ;;		On exit  : E/0
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15743 ;;      Params:         0       4       0       0       0       0       0
 15744 ;;      Locals:         0       1       0       0       0       0       0
 15745 ;;      Temps:          0       4       0       0       0       0       0
 15746 ;;      Totals:         0       9       0       0       0       0       0
 15747 ;;Total ram usage:        9 bytes
 15748 ;; Hardware stack levels used:    1
 15749 ;; Hardware stack levels required when called:    6
 15750 ;; This function calls:
 15751 ;;		_sendVSCPFrame
 15752 ;;		_getVSCPFrame
 15753 ;; This function is called by:
 15754 ;;		_findNodes
 15755 ;;		_printGUID
 15756 ;;		_printMDF
 15757 ;;		_printNodeFirmwareVersion
 15758 ;; This function uses a non-reentrant model
 15759 ;;
 15760                           
 15761                           	psect	text30
 15762  002C16                     __ptext30:
 15763                           	opt stack 0
 15764  002C16                     _readRegister:
 15765                           	opt stack 21
 15766                           
 15767                           ;incstack = 0
 15768                           ;incstack = 0
 15769                           ;readRegister@nodeid stored from wreg
 15770  002C16  CFE8 F0A6          	movff	wreg,readRegister@nodeid
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;main.c: 1822: vscpData[ 0 ] = nodeid;
 15774  002C1A  C0A6  F040         	movff	readRegister@nodeid,_vscpData
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;main.c: 1823: vscpData[ 1 ] = reg;
 15778  002C1E  C09E  F041         	movff	readRegister@reg,_vscpData+1
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;main.c: 1825: if (sendVSCPFrame(0,
 15782                           ;main.c: 1826: 9,
 15783                           ;main.c: 1827: 0,
 15784                           ;main.c: 1828: 0,
 15785                           ;main.c: 1829: 2,
 15786                           ;main.c: 1830: vscpData)) {
 15787  002C22  6B84               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 15788  002C24  6B83               	clrf	?_sendVSCPFrame& (0+255),b
 15789  002C26  0E09               	movlw	9
 15790  002C28  6F85               	movwf	(?_sendVSCPFrame+2)& (0+255),b
 15791  002C2A  6B86               	clrf	(?_sendVSCPFrame+3)& (0+255),b
 15792  002C2C  6B87               	clrf	(?_sendVSCPFrame+4)& (0+255),b
 15793  002C2E  0E02               	movlw	2
 15794  002C30  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 15795  002C32  0E40               	movlw	low _vscpData
 15796  002C34  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 15797  002C36  ECBA  F016         	call	_sendVSCPFrame	;wreg free
 15798  002C3A  0900               	iorlw	0
 15799  002C3C  E03E               	bz	l14588
 15800                           
 15801                           ;main.c: 1832: timekeeper = 0;
 15802  002C3E  0100               	movlb	0	; () banked
 15803  002C40  6BCD               	clrf	_timekeeper& (0+255),b	;volatile
 15804  002C42  6BCE               	clrf	(_timekeeper+1)& (0+255),b	;volatile
 15805  002C44  6BCF               	clrf	(_timekeeper+2)& (0+255),b	;volatile
 15806  002C46  6BD0               	clrf	(_timekeeper+3)& (0+255),b	;volatile
 15807                           
 15808                           ;main.c: 1833: while (timekeeper < timeout) {
 15809  002C48  D028               	goto	l14586
 15810  002C4A                     l968:
 15811                           
 15812                           ; BSR set to: 0
 15813  002C4A  0004               	clrwdt		;# 
 15814                           
 15815                           ;main.c: 1837: if (getVSCPFrame(&vscpClass,
 15816                           ;main.c: 1838: &vscpType,
 15817                           ;main.c: 1839: &vscpNodeId,
 15818                           ;main.c: 1840: &vscpPriority,
 15819                           ;main.c: 1841: &vscpSize,
 15820                           ;main.c: 1842: vscpData)) {
 15821  002C4C  0100               	movlb	0	; () banked
 15822  002C4E  0EDF               	movlw	low _vscpType
 15823  002C50  6F62               	movwf	?_getVSCPFrame& (0+255),b
 15824  002C52  0EDC               	movlw	low _vscpNodeId
 15825  002C54  6F63               	movwf	(?_getVSCPFrame+1)& (0+255),b
 15826  002C56  0EDD               	movlw	low _vscpPriority
 15827  002C58  6F64               	movwf	(?_getVSCPFrame+2)& (0+255),b
 15828  002C5A  0EDE               	movlw	low _vscpSize
 15829  002C5C  6F65               	movwf	(?_getVSCPFrame+3)& (0+255),b
 15830  002C5E  0E40               	movlw	low _vscpData
 15831  002C60  6F66               	movwf	(?_getVSCPFrame+4)& (0+255),b
 15832  002C62  0EDA               	movlw	_vscpClass& (0+255)
 15833  002C64  EC0C  F014         	call	_getVSCPFrame
 15834  002C68  0900               	iorlw	0
 15835  002C6A  E017               	bz	l14586
 15836                           
 15837                           ;main.c: 1843: if ((nodeid == vscpNodeId) &&
 15838                           ;main.c: 1844: (0 == vscpClass) &&
 15839                           ;main.c: 1845: (10 == vscpType) &&
 15840                           ;main.c: 1846: (2 == vscpSize) &&
 15841                           ;main.c: 1847: (reg == vscpData[ 0 ])) {
 15842  002C6C  0100               	movlb	0	; () banked
 15843  002C6E  51DC               	movf	_vscpNodeId& (0+255),w,b
 15844  002C70  63A6               	cpfseq	readRegister@nodeid& (0+255),b
 15845  002C72  D013               	goto	l14586
 15846                           
 15847                           ; BSR set to: 0
 15848  002C74  51DB               	movf	(_vscpClass+1)& (0+255),w,b
 15849  002C76  11DA               	iorwf	_vscpClass& (0+255),w,b
 15850  002C78  E110               	bnz	l14586
 15851                           
 15852                           ; BSR set to: 0
 15853  002C7A  51DF               	movf	_vscpType& (0+255),w,b
 15854  002C7C  0A0A               	xorlw	10
 15855  002C7E  E10D               	bnz	l14586
 15856                           
 15857                           ; BSR set to: 0
 15858  002C80  51DE               	movf	_vscpSize& (0+255),w,b
 15859  002C82  0A02               	xorlw	2
 15860  002C84  E10A               	bnz	l14586
 15861                           
 15862                           ; BSR set to: 0
 15863  002C86  5040               	movf	_vscpData,w,c
 15864  002C88  639E               	cpfseq	readRegister@reg& (0+255),b
 15865  002C8A  D007               	goto	l14586
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;main.c: 1848: *value = vscpData[ 1 ];
 15869  002C8C  51A1               	movf	readRegister@value& (0+255),w,b
 15870  002C8E  6ED9               	movwf	fsr2l,c
 15871  002C90  6ADA               	clrf	fsr2h,c
 15872  002C92  C041  FFDF         	movff	_vscpData+1,indf2
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;main.c: 1849: return 1;
 15876  002C96  0E01               	movlw	1
 15877  002C98  D011               	goto	l971
 15878  002C9A                     l14586:
 15879  002C9A  0100               	movlb	0	; () banked
 15880  002C9C  519F               	movf	readRegister@timeout& (0+255),w,b
 15881  002C9E  6FA2               	movwf	??_readRegister& (0+255),b
 15882  002CA0  51A0               	movf	(readRegister@timeout+1)& (0+255),w,b
 15883  002CA2  6FA3               	movwf	(??_readRegister+1)& (0+255),b
 15884  002CA4  6BA4               	clrf	(??_readRegister+2)& (0+255),b
 15885  002CA6  6BA5               	clrf	(??_readRegister+3)& (0+255),b
 15886  002CA8  51A2               	movf	??_readRegister& (0+255),w,b
 15887  002CAA  5DCD               	subwf	_timekeeper& (0+255),w,b	;volatile
 15888  002CAC  51A3               	movf	(??_readRegister+1)& (0+255),w,b
 15889  002CAE  59CE               	subwfb	(_timekeeper+1)& (0+255),w,b	;volatile
 15890  002CB0  51A4               	movf	(??_readRegister+2)& (0+255),w,b
 15891  002CB2  59CF               	subwfb	(_timekeeper+2)& (0+255),w,b	;volatile
 15892  002CB4  51A5               	movf	(??_readRegister+3)& (0+255),w,b
 15893  002CB6  59D0               	subwfb	(_timekeeper+3)& (0+255),w,b	;volatile
 15894  002CB8  E3C8               	bnc	l968
 15895  002CBA                     l14588:
 15896                           
 15897                           ;main.c: 1850: }
 15898                           ;main.c: 1851: }
 15899                           ;main.c: 1852: }
 15900                           ;main.c: 1853: }
 15901                           ;main.c: 1855: return 0;
 15902  002CBA  0E00               	movlw	0
 15903  002CBC                     l971:
 15904  002CBC  0012               	return	
 15905  002CBE                     __end_of_readRegister:
 15906                           	opt stack 0
 15907                           tblptru	equ	0xFF8
 15908                           tblptrh	equ	0xFF7
 15909                           tblptrl	equ	0xFF6
 15910                           tablat	equ	0xFF5
 15911                           prodh	equ	0xFF4
 15912                           prodl	equ	0xFF3
 15913                           intcon	equ	0xFF2
 15914                           indf0	equ	0xFEF
 15915                           postinc0	equ	0xFEE
 15916                           fsr0h	equ	0xFEA
 15917                           fsr0l	equ	0xFE9
 15918                           wreg	equ	0xFE8
 15919                           indf1	equ	0xFE7
 15920                           postinc1	equ	0xFE6
 15921                           postdec1	equ	0xFE5
 15922                           fsr1h	equ	0xFE2
 15923                           fsr1l	equ	0xFE1
 15924                           indf2	equ	0xFDF
 15925                           postinc2	equ	0xFDE
 15926                           postdec2	equ	0xFDD
 15927                           plusw2	equ	0xFDB
 15928                           fsr2h	equ	0xFDA
 15929                           fsr2l	equ	0xFD9
 15930                           status	equ	0xFD8
 15931                           
 15932 ;; *************** function _sendVSCPFrame *****************
 15933 ;; Defined at:
 15934 ;;		line 2529 in file "main.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;  vscpclass       2   35[BANK0 ] unsigned short 
 15937 ;;  vscptype        1   37[BANK0 ] unsigned char 
 15938 ;;  nodeid          1   38[BANK0 ] unsigned char 
 15939 ;;  priority        1   39[BANK0 ] unsigned char 
 15940 ;;  size            1   40[BANK0 ] unsigned char 
 15941 ;;  pData           1   41[BANK0 ] PTR unsigned char 
 15942 ;;		 -> vscpData(8), 
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;  id              4   43[COMRAM] unsigned long 
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  1    wreg      unsigned char 
 15947 ;; Registers used:
 15948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15949 ;; Tracked objects:
 15950 ;;		On entry : F/0
 15951 ;;		On exit  : E/0
 15952 ;;		Unchanged: 0/0
 15953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15954 ;;      Params:         0       7       0       0       0       0       0
 15955 ;;      Locals:         4       0       0       0       0       0       0
 15956 ;;      Temps:          0      20       0       0       0       0       0
 15957 ;;      Totals:         4      27       0       0       0       0       0
 15958 ;;Total ram usage:       31 bytes
 15959 ;; Hardware stack levels used:    1
 15960 ;; Hardware stack levels required when called:    5
 15961 ;; This function calls:
 15962 ;;		_sendCANFrame
 15963 ;; This function is called by:
 15964 ;;		_doModeVerbose
 15965 ;;		_readRegister
 15966 ;;		_readRegisterExtended
 15967 ;;		_writeRegisterExtended
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971                           	psect	text31
 15972  002D74                     __ptext31:
 15973                           	opt stack 0
 15974  002D74                     _sendVSCPFrame:
 15975                           	opt stack 21
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;main.c: 2530: uint32_t id = ((uint32_t) priority << 26) |
 15979                           ;main.c: 2531: ((uint32_t) vscpclass << 16) |
 15980                           ;main.c: 2532: ((uint32_t) vscptype << 8) |
 15981                           ;main.c: 2533: nodeid;
 15982                           
 15983                           ;incstack = 0
 15984                           ;incstack = 0
 15985  002D74  C085  F08A         	movff	sendVSCPFrame@vscptype,??_sendVSCPFrame
 15986  002D78  6B8B               	clrf	(??_sendVSCPFrame+1)& (0+255),b
 15987  002D7A  6B8C               	clrf	(??_sendVSCPFrame+2)& (0+255),b
 15988  002D7C  6B8D               	clrf	(??_sendVSCPFrame+3)& (0+255),b
 15989  002D7E  C08C  F08D         	movff	??_sendVSCPFrame+2,??_sendVSCPFrame+3
 15990  002D82  C08B  F08C         	movff	??_sendVSCPFrame+1,??_sendVSCPFrame+2
 15991  002D86  C08A  F08B         	movff	??_sendVSCPFrame,??_sendVSCPFrame+1
 15992  002D8A  6B8A               	clrf	??_sendVSCPFrame& (0+255),b
 15993  002D8C  5183               	movf	sendVSCPFrame@vscpclass& (0+255),w,b
 15994  002D8E  6F8E               	movwf	(??_sendVSCPFrame+4)& (0+255),b
 15995  002D90  5184               	movf	(sendVSCPFrame@vscpclass+1)& (0+255),w,b
 15996  002D92  6F8F               	movwf	(??_sendVSCPFrame+5)& (0+255),b
 15997  002D94  6B90               	clrf	(??_sendVSCPFrame+6)& (0+255),b
 15998  002D96  6B91               	clrf	(??_sendVSCPFrame+7)& (0+255),b
 15999  002D98  C08F  F091         	movff	??_sendVSCPFrame+5,??_sendVSCPFrame+7
 16000  002D9C  C08E  F090         	movff	??_sendVSCPFrame+4,??_sendVSCPFrame+6
 16001  002DA0  6B8F               	clrf	(??_sendVSCPFrame+5)& (0+255),b
 16002  002DA2  6B8E               	clrf	(??_sendVSCPFrame+4)& (0+255),b
 16003  002DA4  C087  F092         	movff	sendVSCPFrame@priority,??_sendVSCPFrame+8
 16004  002DA8  6B93               	clrf	(??_sendVSCPFrame+9)& (0+255),b
 16005  002DAA  6B94               	clrf	(??_sendVSCPFrame+10)& (0+255),b
 16006  002DAC  6B95               	clrf	(??_sendVSCPFrame+11)& (0+255),b
 16007  002DAE  0E1A               	movlw	26
 16008  002DB0                     u18245:
 16009  002DB0  90D8               	bcf	status,0,c
 16010  002DB2  3792               	rlcf	(??_sendVSCPFrame+8)& (0+255),f,b
 16011  002DB4  3793               	rlcf	(??_sendVSCPFrame+9)& (0+255),f,b
 16012  002DB6  3794               	rlcf	(??_sendVSCPFrame+10)& (0+255),f,b
 16013  002DB8  3795               	rlcf	(??_sendVSCPFrame+11)& (0+255),f,b
 16014  002DBA  2EE8               	decfsz	wreg,f,c
 16015  002DBC  D7F9               	goto	u18245
 16016  002DBE  518E               	movf	(??_sendVSCPFrame+4)& (0+255),w,b
 16017  002DC0  1192               	iorwf	(??_sendVSCPFrame+8)& (0+255),w,b
 16018  002DC2  6F96               	movwf	(??_sendVSCPFrame+12)& (0+255),b
 16019  002DC4  518F               	movf	(??_sendVSCPFrame+5)& (0+255),w,b
 16020  002DC6  1193               	iorwf	(??_sendVSCPFrame+9)& (0+255),w,b
 16021  002DC8  6F97               	movwf	(??_sendVSCPFrame+13)& (0+255),b
 16022  002DCA  5190               	movf	(??_sendVSCPFrame+6)& (0+255),w,b
 16023  002DCC  1194               	iorwf	(??_sendVSCPFrame+10)& (0+255),w,b
 16024  002DCE  6F98               	movwf	(??_sendVSCPFrame+14)& (0+255),b
 16025  002DD0  5191               	movf	(??_sendVSCPFrame+7)& (0+255),w,b
 16026  002DD2  1195               	iorwf	(??_sendVSCPFrame+11)& (0+255),w,b
 16027  002DD4  6F99               	movwf	(??_sendVSCPFrame+15)& (0+255),b
 16028  002DD6  518A               	movf	??_sendVSCPFrame& (0+255),w,b
 16029  002DD8  1196               	iorwf	(??_sendVSCPFrame+12)& (0+255),w,b
 16030  002DDA  6F9A               	movwf	(??_sendVSCPFrame+16)& (0+255),b
 16031  002DDC  518B               	movf	(??_sendVSCPFrame+1)& (0+255),w,b
 16032  002DDE  1197               	iorwf	(??_sendVSCPFrame+13)& (0+255),w,b
 16033  002DE0  6F9B               	movwf	(??_sendVSCPFrame+17)& (0+255),b
 16034  002DE2  518C               	movf	(??_sendVSCPFrame+2)& (0+255),w,b
 16035  002DE4  1198               	iorwf	(??_sendVSCPFrame+14)& (0+255),w,b
 16036  002DE6  6F9C               	movwf	(??_sendVSCPFrame+18)& (0+255),b
 16037  002DE8  518D               	movf	(??_sendVSCPFrame+3)& (0+255),w,b
 16038  002DEA  1199               	iorwf	(??_sendVSCPFrame+15)& (0+255),w,b
 16039  002DEC  6F9D               	movwf	(??_sendVSCPFrame+19)& (0+255),b
 16040  002DEE  5186               	movf	sendVSCPFrame@nodeid& (0+255),w,b
 16041  002DF0  119A               	iorwf	(??_sendVSCPFrame+16)& (0+255),w,b
 16042  002DF2  6E2C               	movwf	sendVSCPFrame@id,c
 16043  002DF4  519B               	movf	(??_sendVSCPFrame+17)& (0+255),w,b
 16044  002DF6  6E2D               	movwf	sendVSCPFrame@id+1,c
 16045  002DF8  519C               	movf	(??_sendVSCPFrame+18)& (0+255),w,b
 16046  002DFA  6E2E               	movwf	sendVSCPFrame@id+2,c
 16047  002DFC  519D               	movf	(??_sendVSCPFrame+19)& (0+255),w,b
 16048  002DFE  6E2F               	movwf	sendVSCPFrame@id+3,c
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;main.c: 2535: if (!sendCANFrame(id, size, pData)) {
 16052  002E00  C02C  F07C         	movff	sendVSCPFrame@id,?_sendCANFrame
 16053  002E04  C02D  F07D         	movff	sendVSCPFrame@id+1,?_sendCANFrame+1
 16054  002E08  C02E  F07E         	movff	sendVSCPFrame@id+2,?_sendCANFrame+2
 16055  002E0C  C02F  F07F         	movff	sendVSCPFrame@id+3,?_sendCANFrame+3
 16056  002E10  C088  F080         	movff	sendVSCPFrame@size,?_sendCANFrame+4
 16057  002E14  C089  F081         	movff	sendVSCPFrame@pData,?_sendCANFrame+5
 16058  002E18  0E0F               	movlw	15
 16059  002E1A  6F82               	movwf	(?_sendCANFrame+6)& (0+255),b
 16060  002E1C  0E5F               	movlw	__accesstop+-1
 16061  002E1E  6581               	cpfsgt	(?_sendCANFrame+5)& (0+255),b
 16062  002E20  6B82               	clrf	(?_sendCANFrame+6)& (0+255),b
 16063  002E22  EC81  F00F         	call	_sendCANFrame	;wreg free
 16064  002E26  0900               	iorlw	0
 16065                           
 16066                           ;main.c: 2537: return 0;
 16067  002E28  0E00               	movlw	0
 16068  002E2A  A4D8               	btfss	status,2,c
 16069                           
 16070                           ;main.c: 2538: }
 16071                           ;main.c: 2540: return 1;
 16072  002E2C  0E01               	movlw	1
 16073  002E2E  0012               	return	
 16074  002E30                     __end_of_sendVSCPFrame:
 16075                           	opt stack 0
 16076                           tblptru	equ	0xFF8
 16077                           tblptrh	equ	0xFF7
 16078                           tblptrl	equ	0xFF6
 16079                           tablat	equ	0xFF5
 16080                           prodh	equ	0xFF4
 16081                           prodl	equ	0xFF3
 16082                           intcon	equ	0xFF2
 16083                           indf0	equ	0xFEF
 16084                           postinc0	equ	0xFEE
 16085                           fsr0h	equ	0xFEA
 16086                           fsr0l	equ	0xFE9
 16087                           wreg	equ	0xFE8
 16088                           indf1	equ	0xFE7
 16089                           postinc1	equ	0xFE6
 16090                           postdec1	equ	0xFE5
 16091                           fsr1h	equ	0xFE2
 16092                           fsr1l	equ	0xFE1
 16093                           indf2	equ	0xFDF
 16094                           postinc2	equ	0xFDE
 16095                           postdec2	equ	0xFDD
 16096                           plusw2	equ	0xFDB
 16097                           fsr2h	equ	0xFDA
 16098                           fsr2l	equ	0xFD9
 16099                           status	equ	0xFD8
 16100                           
 16101 ;; *************** function _sendCANFrame *****************
 16102 ;; Defined at:
 16103 ;;		line 2573 in file "main.c"
 16104 ;; Parameters:    Size  Location     Type
 16105 ;;  id              4   28[BANK0 ] unsigned long 
 16106 ;;  dlc             1   32[BANK0 ] unsigned char 
 16107 ;;  pdata           2   33[BANK0 ] PTR unsigned char 
 16108 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 16109 ;; Auto vars:     Size  Location     Type
 16110 ;;		None
 16111 ;; Return value:  Size  Location     Type
 16112 ;;                  1    wreg      unsigned char 
 16113 ;; Registers used:
 16114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16115 ;; Tracked objects:
 16116 ;;		On entry : F/0
 16117 ;;		On exit  : E/0
 16118 ;;		Unchanged: 0/0
 16119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16120 ;;      Params:         0       7       0       0       0       0       0
 16121 ;;      Locals:         0       0       0       0       0       0       0
 16122 ;;      Temps:          0       0       0       0       0       0       0
 16123 ;;      Totals:         0       7       0       0       0       0       0
 16124 ;;Total ram usage:        7 bytes
 16125 ;; Hardware stack levels used:    1
 16126 ;; Hardware stack levels required when called:    4
 16127 ;; This function calls:
 16128 ;;		_ECANSendMessage
 16129 ;; This function is called by:
 16130 ;;		_doModeSLCAN
 16131 ;;		_receiveVSCPModeCanalMsg
 16132 ;;		_sendVSCPFrame
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           
 16136                           	psect	text32
 16137  001F02                     __ptext32:
 16138                           	opt stack 0
 16139  001F02                     _sendCANFrame:
 16140                           	opt stack 24
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;main.c: 2574: if (!ECANSendMessage(id, pdata, dlc, ECAN_TX_XTD_FRAME)) {
 16144                           
 16145                           ;incstack = 0
 16146                           ;incstack = 0
 16147  001F02  C07C  F023         	movff	sendCANFrame@id,?_ECANSendMessage
 16148  001F06  C07D  F024         	movff	sendCANFrame@id+1,?_ECANSendMessage+1
 16149  001F0A  C07E  F025         	movff	sendCANFrame@id+2,?_ECANSendMessage+2
 16150  001F0E  C07F  F026         	movff	sendCANFrame@id+3,?_ECANSendMessage+3
 16151  001F12  C081  F027         	movff	sendCANFrame@pdata,?_ECANSendMessage+4
 16152  001F16  C082  F028         	movff	sendCANFrame@pdata+1,?_ECANSendMessage+5
 16153  001F1A  C080  F029         	movff	sendCANFrame@dlc,?_ECANSendMessage+6
 16154  001F1E  0E20               	movlw	32
 16155  001F20  6E2A               	movwf	?_ECANSendMessage+7,c
 16156  001F22  EC4C  F01F         	call	_ECANSendMessage	;wreg free
 16157  001F26  0900               	iorlw	0
 16158  001F28  E107               	bnz	l14480
 16159                           
 16160                           ; BSR set to: 0
 16161                           ;main.c: 2576: can_transmitOverruns++;
 16162  001F2A  0101               	movlb	1	; () banked
 16163  001F2C  2B04               	incf	_can_transmitOverruns& (0+255),f,b
 16164  001F2E  0E00               	movlw	0
 16165  001F30  2305               	addwfc	(_can_transmitOverruns+1)& (0+255),f,b
 16166  001F32  2306               	addwfc	(_can_transmitOverruns+2)& (0+255),f,b
 16167  001F34  2307               	addwfc	(_can_transmitOverruns+3)& (0+255),f,b
 16168                           
 16169                           ; BSR set to: 1
 16170                           ;main.c: 2577: return 0;
 16171  001F36  D001               	goto	l1167
 16172  001F38                     l14480:
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;main.c: 2578: }
 16176                           ;main.c: 2580: return 1;
 16177  001F38  0E01               	movlw	1
 16178  001F3A                     l1167:
 16179  001F3A  0012               	return	
 16180  001F3C                     __end_of_sendCANFrame:
 16181                           	opt stack 0
 16182                           tblptru	equ	0xFF8
 16183                           tblptrh	equ	0xFF7
 16184                           tblptrl	equ	0xFF6
 16185                           tablat	equ	0xFF5
 16186                           prodh	equ	0xFF4
 16187                           prodl	equ	0xFF3
 16188                           intcon	equ	0xFF2
 16189                           indf0	equ	0xFEF
 16190                           postinc0	equ	0xFEE
 16191                           fsr0h	equ	0xFEA
 16192                           fsr0l	equ	0xFE9
 16193                           wreg	equ	0xFE8
 16194                           indf1	equ	0xFE7
 16195                           postinc1	equ	0xFE6
 16196                           postdec1	equ	0xFE5
 16197                           fsr1h	equ	0xFE2
 16198                           fsr1l	equ	0xFE1
 16199                           indf2	equ	0xFDF
 16200                           postinc2	equ	0xFDE
 16201                           postdec2	equ	0xFDD
 16202                           plusw2	equ	0xFDB
 16203                           fsr2h	equ	0xFDA
 16204                           fsr2l	equ	0xFD9
 16205                           status	equ	0xFD8
 16206                           
 16207 ;; *************** function _ECANSendMessage *****************
 16208 ;; Defined at:
 16209 ;;		line 617 in file "ECAN.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;  id              4   34[COMRAM] unsigned long 
 16212 ;;  data            2   38[COMRAM] PTR unsigned char 
 16213 ;;		 -> receiveVSCPModeCanalMsg@data(8), vscpData(8), 
 16214 ;;  dataLen         1   40[COMRAM] unsigned char 
 16215 ;;  msgFlags        1   41[COMRAM] enum E16315
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;  pb             18    0[BANK0 ] PTR unsigned char [9]
 16218 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 16219 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 16220 ;;		 -> B0CON(1), 
 16221 ;;  ptr             2   26[BANK0 ] PTR unsigned char 
 16222 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 16223 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 16224 ;;		 -> B0CON(1), 
 16225 ;;  tempPtr         2   22[BANK0 ] PTR unsigned char 
 16226 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 16227 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 16228 ;;		 -> B0CON(1), 
 16229 ;;  i               1   25[BANK0 ] unsigned char 
 16230 ;;  temp            1   24[BANK0 ] unsigned char 
 16231 ;;  tempBSEL0       1   21[BANK0 ] struct .
 16232 ;;  j               1   20[BANK0 ] unsigned char 
 16233 ;;  buffers         1   19[BANK0 ] unsigned char 
 16234 ;;  mode            1   18[BANK0 ] unsigned char 
 16235 ;; Return value:  Size  Location     Type
 16236 ;;                  1    wreg      enum E15660
 16237 ;; Registers used:
 16238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16239 ;; Tracked objects:
 16240 ;;		On entry : F/0
 16241 ;;		On exit  : F/0
 16242 ;;		Unchanged: 0/0
 16243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16244 ;;      Params:         8       0       0       0       0       0       0
 16245 ;;      Locals:         0      28       0       0       0       0       0
 16246 ;;      Temps:          1       0       0       0       0       0       0
 16247 ;;      Totals:         9      28       0       0       0       0       0
 16248 ;;Total ram usage:       37 bytes
 16249 ;; Hardware stack levels used:    1
 16250 ;; Hardware stack levels required when called:    3
 16251 ;; This function calls:
 16252 ;;		__CANIDToRegs
 16253 ;; This function is called by:
 16254 ;;		_sendCANFrame
 16255 ;; This function uses a non-reentrant model
 16256 ;;
 16257                           
 16258                           	psect	text33
 16259  003E98                     __ptext33:
 16260                           	opt stack 0
 16261  003E98                     _ECANSendMessage:
 16262                           	opt stack 24
 16263                           
 16264                           ; BSR set to: 0
 16265                           ;ECAN.c: 619: BYTE mode;
 16266                           ;ECAN.c: 620: BYTE buffers;
 16267                           ;ECAN.c: 628: BYTE i,j;
 16268                           ;ECAN.c: 629: BYTE *ptr, *tempPtr;
 16269                           ;ECAN.c: 630: BYTE* pb[9];
 16270                           ;ECAN.c: 631: BYTE temp;
 16271                           ;ECAN.c: 634: BYTE_VAL tempBSEL0;
 16272                           ;ECAN.c: 641: pb[0]=(BYTE*)&TXB0CON;
 16273                           
 16274                           ;incstack = 0
 16275                           ;incstack = 0
 16276  003E98  0E0F               	movlw	15	;volatile
 16277  003E9A  0100               	movlb	0	; () banked
 16278  003E9C  6F61               	movwf	(ECANSendMessage@pb+1)& (0+255),b
 16279  003E9E  0E40               	movlw	64	;volatile
 16280  003EA0  6F60               	movwf	ECANSendMessage@pb& (0+255),b
 16281                           
 16282                           ;ECAN.c: 642: pb[1]=(BYTE*)&TXB1CON;
 16283  003EA2  0E0F               	movlw	15	;volatile
 16284  003EA4  6F63               	movwf	(ECANSendMessage@pb+3)& (0+255),b
 16285  003EA6  0E30               	movlw	48	;volatile
 16286  003EA8  6F62               	movwf	(ECANSendMessage@pb+2)& (0+255),b
 16287                           
 16288                           ;ECAN.c: 643: pb[2]=(BYTE*)&TXB2CON;
 16289  003EAA  0E0F               	movlw	15	;volatile
 16290  003EAC  6F65               	movwf	(ECANSendMessage@pb+5)& (0+255),b
 16291  003EAE  0E20               	movlw	32	;volatile
 16292  003EB0  6F64               	movwf	(ECANSendMessage@pb+4)& (0+255),b
 16293                           
 16294                           ;ECAN.c: 650: pb[3]=(BYTE*)&B0CON;
 16295  003EB2  0E0E               	movlw	14	;volatile
 16296  003EB4  6F67               	movwf	(ECANSendMessage@pb+7)& (0+255),b
 16297  003EB6  0E20               	movlw	32	;volatile
 16298  003EB8  6F66               	movwf	(ECANSendMessage@pb+6)& (0+255),b
 16299                           
 16300                           ;ECAN.c: 651: pb[4]=(BYTE*)&B1CON;
 16301  003EBA  0E0E               	movlw	14	;volatile
 16302  003EBC  6F69               	movwf	(ECANSendMessage@pb+9)& (0+255),b
 16303  003EBE  0E30               	movlw	48	;volatile
 16304  003EC0  6F68               	movwf	(ECANSendMessage@pb+8)& (0+255),b
 16305                           
 16306                           ;ECAN.c: 652: pb[5]=(BYTE*)&B2CON;
 16307  003EC2  0E0E               	movlw	14	;volatile
 16308  003EC4  6F6B               	movwf	(ECANSendMessage@pb+11)& (0+255),b
 16309  003EC6  0E40               	movlw	64	;volatile
 16310  003EC8  6F6A               	movwf	(ECANSendMessage@pb+10)& (0+255),b
 16311                           
 16312                           ;ECAN.c: 653: pb[6]=(BYTE*)&B3CON;
 16313  003ECA  0E0E               	movlw	14	;volatile
 16314  003ECC  6F6D               	movwf	(ECANSendMessage@pb+13)& (0+255),b
 16315  003ECE  0E50               	movlw	80	;volatile
 16316  003ED0  6F6C               	movwf	(ECANSendMessage@pb+12)& (0+255),b
 16317                           
 16318                           ;ECAN.c: 654: pb[7]=(BYTE*)&B4CON;
 16319  003ED2  0E0E               	movlw	14	;volatile
 16320  003ED4  6F6F               	movwf	(ECANSendMessage@pb+15)& (0+255),b
 16321  003ED6  0E60               	movlw	96	;volatile
 16322  003ED8  6F6E               	movwf	(ECANSendMessage@pb+14)& (0+255),b
 16323                           
 16324                           ;ECAN.c: 655: pb[8]=(BYTE*)&B5CON;
 16325  003EDA  0E0E               	movlw	14	;volatile
 16326  003EDC  6F71               	movwf	(ECANSendMessage@pb+17)& (0+255),b
 16327  003EDE  0E70               	movlw	112	;volatile
 16328  003EE0  6F70               	movwf	(ECANSendMessage@pb+16)& (0+255),b
 16329                           
 16330                           ; BSR set to: 0
 16331                           ;ECAN.c: 659: mode = ECANCON&0xC0;
 16332  003EE2  5077               	movf	3959,w,c	;volatile
 16333  003EE4  0BC0               	andlw	192
 16334  003EE6  6F72               	movwf	ECANSendMessage@mode& (0+255),b
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;ECAN.c: 660: if ( mode == 0x00 )
 16338  003EE8  6772               	tstfsz	ECANSendMessage@mode& (0+255),b
 16339  003EEA  D002               	goto	l14600
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;ECAN.c: 661: buffers = 2;
 16343  003EEC  0E02               	movlw	2
 16344  003EEE  D001               	goto	L14
 16345  003EF0                     l14600:
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;ECAN.c: 662: else
 16349                           ;ECAN.c: 663: buffers = 8;
 16350  003EF0  0E08               	movlw	8
 16351  003EF2                     L14:
 16352  003EF2  6F73               	movwf	ECANSendMessage@buffers& (0+255),b
 16353                           
 16354                           ; BSR set to: 0
 16355                           ;ECAN.c: 684: tempBSEL0.Val = BSEL0 >> 1;
 16356  003EF4  010D               	movlb	13	; () banked
 16357  003EF6  90D8               	bcf	status,0,c
 16358  003EF8  31F8               	rrcf	248,w,b	;volatile
 16359  003EFA  0100               	movlb	0	; () banked
 16360  003EFC  6F75               	movwf	ECANSendMessage@tempBSEL0& (0+255),b
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;ECAN.c: 686: for ( i = 0; i < buffers; i++ )
 16364  003EFE  6B79               	clrf	ECANSendMessage@i& (0+255),b
 16365  003F00  D07E               	goto	l14660
 16366  003F02                     l14606:
 16367                           
 16368                           ; BSR set to: 0
 16369                           ;ECAN.c: 688: {
 16370                           ;ECAN.c: 693: ptr = pb[i];
 16371  003F02  5179               	movf	ECANSendMessage@i& (0+255),w,b
 16372  003F04  0D02               	mullw	2
 16373  003F06  50F3               	movf	prodl,w,c
 16374  003F08  0F60               	addlw	low ECANSendMessage@pb
 16375  003F0A  6ED9               	movwf	fsr2l,c
 16376  003F0C  6ADA               	clrf	fsr2h,c
 16377  003F0E  CFDE F07A          	movff	postinc2,ECANSendMessage@ptr
 16378  003F12  CFDD F07B          	movff	postdec2,ECANSendMessage@ptr+1
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;ECAN.c: 694: tempPtr = ptr;
 16382  003F16  C07A  F076         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
 16383  003F1A  C07B  F077         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
 16384                           
 16385                           ; BSR set to: 0
 16386                           ;ECAN.c: 702: if ( i > 2 )
 16387  003F1E  0E02               	movlw	2
 16388  003F20  6579               	cpfsgt	ECANSendMessage@i& (0+255),b
 16389  003F22  D004               	goto	l14618
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;ECAN.c: 703: {
 16393                           ;ECAN.c: 707: tempBSEL0.Val >>= 1;
 16394  003F24  90D8               	bcf	status,0,c
 16395  003F26  3375               	rrcf	ECANSendMessage@tempBSEL0& (0+255),f,b
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;ECAN.c: 712: if ( !tempBSEL0.bits.b0 )
 16399  003F28  A175               	btfss	ECANSendMessage@tempBSEL0& (0+255),0,b
 16400  003F2A  D068               	goto	l14658
 16401  003F2C                     l14618:
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;ECAN.c: 714: }
 16405                           ;ECAN.c: 720: if ( !(*ptr & 0x08) )
 16406  003F2C  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 16407  003F30  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 16408  003F34  50DF               	movf	indf2,w,c
 16409  003F36  6E2B               	movwf	??_ECANSendMessage& (0+255),c
 16410  003F38  B62B               	btfsc	??_ECANSendMessage,3,c
 16411  003F3A  D060               	goto	l14658
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;ECAN.c: 721: {
 16415                           ;ECAN.c: 723: *ptr &= ~ECAN_TX_PRIORITY_BITS;
 16416  003F3C  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 16417  003F40  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 16418  003F44  0EFC               	movlw	252
 16419  003F46  16DF               	andwf	indf2,f,c
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;ECAN.c: 724: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
 16423  003F48  C02A  F02B         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
 16424  003F4C  0E03               	movlw	3
 16425  003F4E  162B               	andwf	??_ECANSendMessage,f,c
 16426  003F50  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 16427  003F54  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 16428  003F58  502B               	movf	??_ECANSendMessage,w,c
 16429  003F5A  12DF               	iorwf	indf2,f,c
 16430                           
 16431                           ; BSR set to: 0
 16432                           ;ECAN.c: 727: if ( msgFlags & ECAN_TX_RTR_BIT )
 16433  003F5C  AC2A               	btfss	ECANSendMessage@msgFlags,6,c
 16434  003F5E  D004               	goto	l1333
 16435                           
 16436                           ; BSR set to: 0
 16437                           ;ECAN.c: 728: temp = 0x40 | dataLen;
 16438  003F60  5029               	movf	ECANSendMessage@dataLen,w,c
 16439  003F62  0940               	iorlw	64
 16440  003F64  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 16441  003F66  D002               	goto	l14628
 16442  003F68                     l1333:
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;ECAN.c: 729: else
 16446                           ;ECAN.c: 730: temp = dataLen;
 16447  003F68  C029  F078         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
 16448  003F6C                     l14628:
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;ECAN.c: 732: *(ptr+5) = temp;
 16452  003F6C  EE20 F005          	lfsr	2,5
 16453  003F70  517A               	movf	ECANSendMessage@ptr& (0+255),w,b
 16454  003F72  26D9               	addwf	fsr2l,f,c
 16455  003F74  517B               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
 16456  003F76  22DA               	addwfc	fsr2h,f,c
 16457  003F78  C078  FFDF         	movff	ECANSendMessage@temp,indf2
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;ECAN.c: 735: if ( msgFlags & ECAN_TX_FRAME_BIT )
 16461  003F7C  AA2A               	btfss	ECANSendMessage@msgFlags,5,c
 16462  003F7E  D003               	goto	l1335
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;ECAN.c: 736: temp = 1;
 16466  003F80  0E01               	movlw	1
 16467  003F82  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 16468  003F84  D001               	goto	l14634
 16469  003F86                     l1335:
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;ECAN.c: 738: else
 16473                           ;ECAN.c: 739: temp = 0;
 16474  003F86  6B78               	clrf	ECANSendMessage@temp& (0+255),b
 16475  003F88                     l14634:
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;ECAN.c: 742: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
 16479  003F88  297A               	incf	ECANSendMessage@ptr& (0+255),w,b
 16480  003F8A  6E19               	movwf	?__CANIDToRegs,c
 16481  003F8C  0E00               	movlw	0
 16482  003F8E  217B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
 16483  003F90  6E1A               	movwf	?__CANIDToRegs+1,c
 16484  003F92  C023  F01B         	movff	ECANSendMessage@id,?__CANIDToRegs+2
 16485  003F96  C024  F01C         	movff	ECANSendMessage@id+1,?__CANIDToRegs+3
 16486  003F9A  C025  F01D         	movff	ECANSendMessage@id+2,?__CANIDToRegs+4
 16487  003F9E  C026  F01E         	movff	ECANSendMessage@id+3,?__CANIDToRegs+5
 16488  003FA2  C078  F01F         	movff	ECANSendMessage@temp,?__CANIDToRegs+6
 16489  003FA6  EC56  F01C         	call	__CANIDToRegs	;wreg free
 16490                           
 16491                           ;ECAN.c: 745: ptr += 6;
 16492  003FAA  0E06               	movlw	6
 16493  003FAC  0100               	movlb	0	; () banked
 16494  003FAE  277A               	addwf	ECANSendMessage@ptr& (0+255),f,b
 16495  003FB0  0E00               	movlw	0
 16496  003FB2  237B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;ECAN.c: 747: for ( j = 0 ; j < dataLen; j++ )
 16500  003FB4  6B74               	clrf	ECANSendMessage@j& (0+255),b
 16501  003FB6  D00F               	goto	l14648
 16502  003FB8                     l14640:
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;ECAN.c: 748: *ptr++ = *data++;
 16506  003FB8  C027  FFD9         	movff	ECANSendMessage@data,fsr2l
 16507  003FBC  C028  FFDA         	movff	ECANSendMessage@data+1,fsr2h
 16508  003FC0  C07A  FFE1         	movff	ECANSendMessage@ptr,fsr1l
 16509  003FC4  C07B  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
 16510  003FC8  CFDF FFE7          	movff	indf2,indf1
 16511                           
 16512                           ; BSR set to: 0
 16513  003FCC  4A27               	infsnz	ECANSendMessage@data,f,c
 16514  003FCE  2A28               	incf	ECANSendMessage@data+1,f,c
 16515                           
 16516                           ; BSR set to: 0
 16517  003FD0  4B7A               	infsnz	ECANSendMessage@ptr& (0+255),f,b
 16518  003FD2  2B7B               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
 16519                           
 16520                           ; BSR set to: 0
 16521  003FD4  2B74               	incf	ECANSendMessage@j& (0+255),f,b
 16522  003FD6                     l14648:
 16523                           
 16524                           ; BSR set to: 0
 16525  003FD6  5029               	movf	ECANSendMessage@dataLen,w,c
 16526  003FD8  5D74               	subwf	ECANSendMessage@j& (0+255),w,b
 16527  003FDA  E3EE               	bnc	l14640
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;ECAN.c: 752: if ( !(*tempPtr & 0x04) )
 16531  003FDC  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 16532  003FE0  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 16533  003FE4  50DF               	movf	indf2,w,c
 16534  003FE6  6E2B               	movwf	??_ECANSendMessage& (0+255),c
 16535  003FE8  B42B               	btfsc	??_ECANSendMessage,2,c
 16536  003FEA  D006               	goto	l14654
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;ECAN.c: 753: *tempPtr |= 0x08;
 16540  003FEC  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 16541  003FF0  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 16542  003FF4  0E00               	movlw	0
 16543  003FF6  86DB               	bsf	plusw2,3,c
 16544  003FF8                     l14654:
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;ECAN.c: 755: return TRUE;
 16548  003FF8  0E01               	movlw	1
 16549  003FFA  D006               	goto	l1341
 16550  003FFC                     l14658:
 16551                           
 16552                           ; BSR set to: 0
 16553  003FFC  2B79               	incf	ECANSendMessage@i& (0+255),f,b
 16554  003FFE                     l14660:
 16555                           
 16556                           ; BSR set to: 0
 16557  003FFE  5173               	movf	ECANSendMessage@buffers& (0+255),w,b
 16558  004000  5D79               	subwf	ECANSendMessage@i& (0+255),w,b
 16559  004002  E201 D77E          	bnc	l14606
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;ECAN.c: 756: }
 16563                           ;ECAN.c: 757: }
 16564                           ;ECAN.c: 760: return FALSE;
 16565  004006  0E00               	movlw	0
 16566  004008                     l1341:
 16567                           
 16568                           ; BSR set to: 0
 16569  004008  0012               	return	
 16570  00400A                     __end_of_ECANSendMessage:
 16571                           	opt stack 0
 16572                           tblptru	equ	0xFF8
 16573                           tblptrh	equ	0xFF7
 16574                           tblptrl	equ	0xFF6
 16575                           tablat	equ	0xFF5
 16576                           prodh	equ	0xFF4
 16577                           prodl	equ	0xFF3
 16578                           intcon	equ	0xFF2
 16579                           indf0	equ	0xFEF
 16580                           postinc0	equ	0xFEE
 16581                           fsr0h	equ	0xFEA
 16582                           fsr0l	equ	0xFE9
 16583                           wreg	equ	0xFE8
 16584                           indf1	equ	0xFE7
 16585                           postinc1	equ	0xFE6
 16586                           postdec1	equ	0xFE5
 16587                           fsr1h	equ	0xFE2
 16588                           fsr1l	equ	0xFE1
 16589                           indf2	equ	0xFDF
 16590                           postinc2	equ	0xFDE
 16591                           postdec2	equ	0xFDD
 16592                           plusw2	equ	0xFDB
 16593                           fsr2h	equ	0xFDA
 16594                           fsr2l	equ	0xFD9
 16595                           status	equ	0xFD8
 16596                           
 16597 ;; *************** function __CANIDToRegs *****************
 16598 ;; Defined at:
 16599 ;;		line 1099 in file "ECAN.c"
 16600 ;; Parameters:    Size  Location     Type
 16601 ;;  ptr             2   24[COMRAM] PTR unsigned char 
 16602 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 16603 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 16604 ;;		 -> B0CON(1), RXM1SIDH(1), RXM0SIDH(1), 
 16605 ;;  val             4   26[COMRAM] unsigned long 
 16606 ;;  type            1   30[COMRAM] unsigned char 
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;  Value           1   33[COMRAM] PTR struct _CAN_MESSAGE_
 16609 ;;		 -> _CANIDToRegs@val(4), 
 16610 ;; Return value:  Size  Location     Type
 16611 ;;		None               void
 16612 ;; Registers used:
 16613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/F
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16619 ;;      Params:         7       0       0       0       0       0       0
 16620 ;;      Locals:         1       0       0       0       0       0       0
 16621 ;;      Temps:          2       0       0       0       0       0       0
 16622 ;;      Totals:        10       0       0       0       0       0       0
 16623 ;;Total ram usage:       10 bytes
 16624 ;; Hardware stack levels used:    1
 16625 ;; Hardware stack levels required when called:    2
 16626 ;; This function calls:
 16627 ;;		Nothing
 16628 ;; This function is called by:
 16629 ;;		_doModeVerbose
 16630 ;;		_ECANSendMessage
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634                           	psect	text34
 16635  0038AC                     __ptext34:
 16636                           	opt stack 0
 16637  0038AC                     __CANIDToRegs:
 16638                           	opt stack 24
 16639                           
 16640                           ;ECAN.c: 1100: CAN_MESSAGE_ID *Value;
 16641                           ;ECAN.c: 1102: Value = (CAN_MESSAGE_ID*)&val;
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;incstack = 0
 16645                           ;incstack = 0
 16646  0038AC  0E1B               	movlw	low __CANIDToRegs@val
 16647  0038AE  6E22               	movwf	__CANIDToRegs@Value,c
 16648                           
 16649                           ;ECAN.c: 1104: if ( type == 0 )
 16650  0038B0  661F               	tstfsz	__CANIDToRegs@type,c
 16651  0038B2  D022               	goto	l14186
 16652                           
 16653                           ;ECAN.c: 1105: {
 16654                           ;ECAN.c: 1107: *ptr = Value->BYTES.BYTE_1 >> 3;
 16655  0038B4  5022               	movf	__CANIDToRegs@Value,w,c
 16656  0038B6  6ED9               	movwf	fsr2l,c
 16657  0038B8  6ADA               	clrf	fsr2h,c
 16658  0038BA  50DF               	movf	indf2,w,c
 16659  0038BC  6E20               	movwf	??__CANIDToRegs& (0+255),c
 16660  0038BE  90D8               	bcf	status,0,c
 16661  0038C0  3220               	rrcf	??__CANIDToRegs,f,c
 16662  0038C2  90D8               	bcf	status,0,c
 16663  0038C4  3220               	rrcf	??__CANIDToRegs,f,c
 16664  0038C6  90D8               	bcf	status,0,c
 16665  0038C8  3020               	rrcf	??__CANIDToRegs,w,c
 16666                           
 16667                           ;ECAN.c: 1108: *ptr |= (Value->BYTES.BYTE_2 << 5);
 16668  0038CA  D862               	call	PL54	;call to abstracted procedure
 16669  0038CC  2AD9               	incf	fsr2l,f,c
 16670  0038CE  6ADA               	clrf	fsr2h,c
 16671  0038D0  D872               	call	PL96	;call to abstracted procedure
 16672  0038D2                     u18845:
 16673  0038D2  90D8               	bcf	status,0,c
 16674  0038D4  3620               	rlcf	??__CANIDToRegs,f,c
 16675  0038D6  2E21               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 16676  0038D8  D7FC               	goto	u18845
 16677  0038DA  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16678                           
 16679                           ;ECAN.c: 1109: ptr++;
 16680                           
 16681                           ;ECAN.c: 1110: *ptr = Value->BYTES.BYTE_1 << 5;
 16682  0038DE  D846               	call	PL32	;call to abstracted procedure
 16683  0038E0  D86A               	call	PL96	;call to abstracted procedure
 16684  0038E2                     u18855:
 16685  0038E2  90D8               	bcf	status,0,c
 16686  0038E4  3620               	rlcf	??__CANIDToRegs,f,c
 16687  0038E6  2E21               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 16688  0038E8  D7FC               	goto	u18855
 16689  0038EA  5020               	movf	??__CANIDToRegs,w,c
 16690  0038EC  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16691  0038F0  C01A  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 16692  0038F4  6EDF               	movwf	indf2,c
 16693                           
 16694                           ;ECAN.c: 1111: }
 16695  0038F6  D039               	goto	l1395
 16696  0038F8                     l14186:
 16697                           
 16698                           ;ECAN.c: 1112: else
 16699                           ;ECAN.c: 1113: {
 16700                           ;ECAN.c: 1115: *ptr = Value->BYTES.BYTE_3 >> 5;
 16701  0038F8  5022               	movf	__CANIDToRegs@Value,w,c
 16702  0038FA  D842               	call	PL48	;call to abstracted procedure
 16703  0038FC  0E05               	movlw	5
 16704  0038FE  6E21               	movwf	(??__CANIDToRegs+1)& (0+255),c
 16705  003900                     u18865:
 16706  003900  90D8               	bcf	status,0,c
 16707  003902  3220               	rrcf	??__CANIDToRegs,f,c
 16708  003904  2E21               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 16709  003906  D7FC               	goto	u18865
 16710  003908  5020               	movf	??__CANIDToRegs,w,c
 16711                           
 16712                           ;ECAN.c: 1116: *ptr |= Value->BYTES.BYTE_4 << 3;
 16713  00390A  D842               	call	PL54	;call to abstracted procedure
 16714  00390C  0E03               	movlw	3
 16715  00390E  D849               	call	PL74	;call to abstracted procedure
 16716  003910  3620               	rlcf	??__CANIDToRegs,f,c
 16717  003912  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16718                           
 16719                           ;ECAN.c: 1117: ptr++;
 16720                           
 16721                           ;ECAN.c: 1118: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
 16722  003916  D82A               	call	PL32	;call to abstracted procedure
 16723  003918  0E02               	movlw	2
 16724  00391A  D843               	call	PL74	;call to abstracted procedure
 16725  00391C  3420               	rlcf	??__CANIDToRegs,w,c
 16726  00391E  0BE0               	andlw	224
 16727  003920  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16728  003924  C01A  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 16729  003928  6EDF               	movwf	indf2,c
 16730                           
 16731                           ;ECAN.c: 1120: *ptr |= 0b00001000;
 16732  00392A  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16733  00392E  C01A  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 16734  003932  0E00               	movlw	0
 16735  003934  86DB               	bsf	plusw2,3,c
 16736                           
 16737                           ;ECAN.c: 1121: *ptr |= Value->BYTES.BYTE_3 & 0x03;
 16738  003936  5022               	movf	__CANIDToRegs@Value,w,c
 16739  003938  D823               	call	PL48	;call to abstracted procedure
 16740  00393A  0E03               	movlw	3
 16741  00393C  1620               	andwf	??__CANIDToRegs,f,c
 16742  00393E  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16743                           
 16744                           ;ECAN.c: 1122: ptr++;
 16745                           
 16746                           ;ECAN.c: 1123: *ptr = Value->BYTES.BYTE_2;
 16747  003942  D814               	call	PL32	;call to abstracted procedure
 16748  003944  2AD9               	incf	fsr2l,f,c
 16749  003946  6ADA               	clrf	fsr2h,c
 16750  003948  C019  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 16751  00394C  C01A  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 16752  003950  CFDF FFE7          	movff	indf2,indf1
 16753                           
 16754                           ;ECAN.c: 1124: ptr++;
 16755  003954  4A19               	infsnz	__CANIDToRegs@ptr,f,c
 16756  003956  2A1A               	incf	__CANIDToRegs@ptr+1,f,c
 16757                           
 16758                           ;ECAN.c: 1125: *ptr = Value->BYTES.BYTE_1;
 16759  003958  5022               	movf	__CANIDToRegs@Value,w,c
 16760  00395A  6ED9               	movwf	fsr2l,c
 16761  00395C  6ADA               	clrf	fsr2h,c
 16762  00395E  C019  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 16763  003962  C01A  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 16764  003966  CFDF FFE7          	movff	indf2,indf1
 16765  00396A                     l1395:
 16766  00396A  0012               	return	
 16767  00396C                     __end_of__CANIDToRegs:
 16768                           	opt stack 0
 16769  00396C                     PL32:
 16770                           	opt stack 24
 16771  00396C  C01A  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 16772  003970  5020               	movf	??__CANIDToRegs,w,c
 16773  003972  12DF               	iorwf	indf2,f,c
 16774  003974  4A19               	infsnz	__CANIDToRegs@ptr,f,c
 16775  003976  2A1A               	incf	__CANIDToRegs@ptr+1,f,c
 16776  003978  5022               	movf	__CANIDToRegs@Value,w,c
 16777  00397A  6ED9               	movwf	fsr2l,c
 16778  00397C  6ADA               	clrf	fsr2h,c
 16779  00397E  0012               	return	
 16780  003980                     __end_ofPL32:
 16781                           	opt stack 0
 16782  003980                     PL48:
 16783                           	opt stack 24
 16784  003980  6ED9               	movwf	fsr2l,c
 16785  003982  6ADA               	clrf	fsr2h,c
 16786  003984  0E02               	movlw	2
 16787  003986  26D9               	addwf	fsr2l,f,c
 16788  003988  6ADA               	clrf	fsr2h,c
 16789  00398A  50DF               	movf	indf2,w,c
 16790  00398C  6E20               	movwf	??__CANIDToRegs& (0+255),c
 16791  00398E  0012               	return	
 16792  003990                     __end_ofPL48:
 16793                           	opt stack 0
 16794  003990                     PL54:
 16795                           	opt stack 24
 16796  003990  C019  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 16797  003994  C01A  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 16798  003998  6EDF               	movwf	indf2,c
 16799  00399A  5022               	movf	__CANIDToRegs@Value,w,c
 16800  00399C  6ED9               	movwf	fsr2l,c
 16801  00399E  6ADA               	clrf	fsr2h,c
 16802  0039A0  0012               	return	
 16803  0039A2                     __end_ofPL54:
 16804                           	opt stack 0
 16805  0039A2                     PL74:
 16806                           	opt stack 24
 16807  0039A2  26D9               	addwf	fsr2l,f,c
 16808  0039A4  6ADA               	clrf	fsr2h,c
 16809  0039A6  50DF               	movf	indf2,w,c
 16810  0039A8  6E20               	movwf	??__CANIDToRegs& (0+255),c
 16811  0039AA  90D8               	bcf	status,0,c
 16812  0039AC  3620               	rlcf	??__CANIDToRegs,f,c
 16813  0039AE  90D8               	bcf	status,0,c
 16814  0039B0  3620               	rlcf	??__CANIDToRegs,f,c
 16815  0039B2  90D8               	bcf	status,0,c
 16816  0039B4  0012               	return	
 16817  0039B6                     __end_ofPL74:
 16818                           	opt stack 0
 16819  0039B6                     PL96:
 16820                           	opt stack 24
 16821  0039B6  50DF               	movf	indf2,w,c
 16822  0039B8  6E20               	movwf	??__CANIDToRegs& (0+255),c
 16823  0039BA  0E05               	movlw	5
 16824  0039BC  6E21               	movwf	(??__CANIDToRegs+1)& (0+255),c
 16825  0039BE  0C05               	retlw	5
 16826  0039C0                     __end_ofPL96:
 16827                           	opt stack 0
 16828                           tblptru	equ	0xFF8
 16829                           tblptrh	equ	0xFF7
 16830                           tblptrl	equ	0xFF6
 16831                           tablat	equ	0xFF5
 16832                           prodh	equ	0xFF4
 16833                           prodl	equ	0xFF3
 16834                           intcon	equ	0xFF2
 16835                           indf0	equ	0xFEF
 16836                           postinc0	equ	0xFEE
 16837                           fsr0h	equ	0xFEA
 16838                           fsr0l	equ	0xFE9
 16839                           wreg	equ	0xFE8
 16840                           indf1	equ	0xFE7
 16841                           postinc1	equ	0xFE6
 16842                           postdec1	equ	0xFE5
 16843                           fsr1h	equ	0xFE2
 16844                           fsr1l	equ	0xFE1
 16845                           indf2	equ	0xFDF
 16846                           postinc2	equ	0xFDE
 16847                           postdec2	equ	0xFDD
 16848                           plusw2	equ	0xFDB
 16849                           fsr2h	equ	0xFDA
 16850                           fsr2l	equ	0xFD9
 16851                           status	equ	0xFD8
 16852                           
 16853 ;; *************** function _memset *****************
 16854 ;; Defined at:
 16855 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memset.c"
 16856 ;; Parameters:    Size  Location     Type
 16857 ;;  p1              2   24[COMRAM] PTR void 
 16858 ;;		 -> wrkbuf(80), vscpData(8), cmdbuf(80), 
 16859 ;;  c               2   26[COMRAM] int 
 16860 ;;  n               2   28[COMRAM] unsigned int 
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;  p               2   30[COMRAM] PTR unsigned char 
 16863 ;;		 -> wrkbuf(80), vscpData(8), cmdbuf(80), 
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  2   24[COMRAM] PTR void 
 16866 ;; Registers used:
 16867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16868 ;; Tracked objects:
 16869 ;;		On entry : C/1
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16873 ;;      Params:         6       0       0       0       0       0       0
 16874 ;;      Locals:         2       0       0       0       0       0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0
 16876 ;;      Totals:         8       0       0       0       0       0       0
 16877 ;;Total ram usage:        8 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:    2
 16880 ;; This function calls:
 16881 ;;		Nothing
 16882 ;; This function is called by:
 16883 ;;		_doModeVerbose
 16884 ;;		_doModeSLCAN
 16885 ;;		_printGUID
 16886 ;;		_printMDF
 16887 ;;		_printNodeFirmwareVersion
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text35
 16892  001D9E                     __ptext35:
 16893                           	opt stack 0
 16894  001D9E                     _memset:
 16895                           	opt stack 26
 16896                           
 16897                           ;incstack = 0
 16898                           ;incstack = 0
 16899  001D9E  C019  F01F         	movff	memset@p1,memset@p
 16900  001DA2  C01A  F020         	movff	memset@p1+1,memset@p+1
 16901  001DA6  D008               	goto	l10746
 16902  001DA8                     l10742:
 16903  001DA8  C01F  FFD9         	movff	memset@p,fsr2l
 16904  001DAC  C020  FFDA         	movff	memset@p+1,fsr2h
 16905  001DB0  C01B  FFDF         	movff	memset@c,indf2
 16906  001DB4  4A1F               	infsnz	memset@p,f,c
 16907  001DB6  2A20               	incf	memset@p+1,f,c
 16908  001DB8                     l10746:
 16909  001DB8  061D               	decf	memset@n,f,c
 16910  001DBA  A0D8               	btfss	status,0,c
 16911  001DBC  061E               	decf	memset@n+1,f,c
 16912  001DBE  281D               	incf	memset@n& (0+255),w,c
 16913  001DC0  B4D8               	btfsc	status,2,c
 16914  001DC2  281E               	incf	(memset@n+1)& (0+255),w,c
 16915  001DC4  B4D8               	btfsc	status,2,c
 16916  001DC6  0012               	return	
 16917  001DC8  D7EF               	goto	l10742
 16918  001DCA                     __end_of_memset:
 16919                           	opt stack 0
 16920                           tblptru	equ	0xFF8
 16921                           tblptrh	equ	0xFF7
 16922                           tblptrl	equ	0xFF6
 16923                           tablat	equ	0xFF5
 16924                           prodh	equ	0xFF4
 16925                           prodl	equ	0xFF3
 16926                           intcon	equ	0xFF2
 16927                           indf0	equ	0xFEF
 16928                           postinc0	equ	0xFEE
 16929                           fsr0h	equ	0xFEA
 16930                           fsr0l	equ	0xFE9
 16931                           wreg	equ	0xFE8
 16932                           indf1	equ	0xFE7
 16933                           postinc1	equ	0xFE6
 16934                           postdec1	equ	0xFE5
 16935                           fsr1h	equ	0xFE2
 16936                           fsr1l	equ	0xFE1
 16937                           indf2	equ	0xFDF
 16938                           postinc2	equ	0xFDE
 16939                           postdec2	equ	0xFDD
 16940                           plusw2	equ	0xFDB
 16941                           fsr2h	equ	0xFDA
 16942                           fsr2l	equ	0xFD9
 16943                           status	equ	0xFD8
 16944                           
 16945 ;; *************** function _printHelp *****************
 16946 ;; Defined at:
 16947 ;;		line 2163 in file "main.c"
 16948 ;; Parameters:    Size  Location     Type
 16949 ;;		None
 16950 ;; Auto vars:     Size  Location     Type
 16951 ;;		None
 16952 ;; Return value:  Size  Location     Type
 16953 ;;		None               void
 16954 ;; Registers used:
 16955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16956 ;; Tracked objects:
 16957 ;;		On entry : F/0
 16958 ;;		On exit  : 0/0
 16959 ;;		Unchanged: 0/0
 16960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16961 ;;      Params:         0       0       0       0       0       0       0
 16962 ;;      Locals:         0       0       0       0       0       0       0
 16963 ;;      Temps:          0       0       0       0       0       0       0
 16964 ;;      Totals:         0       0       0       0       0       0       0
 16965 ;;Total ram usage:        0 bytes
 16966 ;; Hardware stack levels used:    1
 16967 ;; Hardware stack levels required when called:    4
 16968 ;; This function calls:
 16969 ;;		_putsUSART
 16970 ;; This function is called by:
 16971 ;;		_doModeVerbose
 16972 ;; This function uses a non-reentrant model
 16973 ;;
 16974                           
 16975                           	psect	text36
 16976  00400A                     __ptext36:
 16977                           	opt stack 0
 16978  00400A                     _printHelp:
 16979                           	opt stack 24
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;main.c: 2164: putsUSART((char *) "Help for the Frankfurt RS-232 module\r\n");
 16983                           
 16984                           ;incstack = 0
 16985                           ;incstack = 0
 16986  00400A  0E75               	movlw	high STR_197
 16987  00400C  6E1B               	movwf	?_putsUSART+1,c
 16988  00400E  0E6C               	movlw	low STR_197
 16989  004010  6E1A               	movwf	?_putsUSART,c
 16990  004012  EC2E  F011         	call	_putsUSART	;wreg free
 16991                           
 16992                           ;main.c: 2165: putsUSART((char *) "------------------------------------\r\n");
 16993  004016  0E6E               	movlw	high (STR_229+28)
 16994  004018  6E1B               	movwf	?_putsUSART+1,c
 16995  00401A  0E93               	movlw	low (STR_229+28)
 16996  00401C  6E1A               	movwf	?_putsUSART,c
 16997  00401E  EC2E  F011         	call	_putsUSART	;wreg free
 16998                           
 16999                           ;main.c: 2166: putsUSART((char *) "BOOT - Enter bootloader.\r\n");
 17000  004022  0E78               	movlw	high STR_199
 17001  004024  6E1B               	movwf	?_putsUSART+1,c
 17002  004026  0E64               	movlw	low STR_199
 17003  004028  6E1A               	movwf	?_putsUSART,c
 17004  00402A  EC2E  F011         	call	_putsUSART	;wreg free
 17005                           
 17006                           ;main.c: 2167: putsUSART((char *) "OPEN - Open CAN interface in normal mode.\r\n");
 17007  00402E  0E73               	movlw	high STR_200
 17008  004030  6E1B               	movwf	?_putsUSART+1,c
 17009  004032  0EFB               	movlw	low STR_200
 17010  004034  6E1A               	movwf	?_putsUSART,c
 17011  004036  EC2E  F011         	call	_putsUSART	;wreg free
 17012                           
 17013                           ;main.c: 2168: putsUSART((char *) "SILENT - Open CAN interface in silent mode.\r\n");
 17014  00403A  0E73               	movlw	high STR_201
 17015  00403C  6E1B               	movwf	?_putsUSART+1,c
 17016  00403E  0EA1               	movlw	low STR_201
 17017  004040  6E1A               	movwf	?_putsUSART,c
 17018  004042  EC2E  F011         	call	_putsUSART	;wreg free
 17019                           
 17020                           ;main.c: 2169: putsUSART((char *) "LISTEN - Open CAN interface in listen only mode.\r\n"
      +                          );
 17021  004046  0E72               	movlw	high STR_202
 17022  004048  6E1B               	movwf	?_putsUSART+1,c
 17023  00404A  0E1A               	movlw	low STR_202
 17024  00404C  6E1A               	movwf	?_putsUSART,c
 17025  00404E  EC2E  F011         	call	_putsUSART	;wreg free
 17026                           
 17027                           ;main.c: 2170: putsUSART((char *) "LOOPBACK - Open CAN interface in loopback mode.\r\n");
 17028  004052  0E72               	movlw	high STR_203
 17029  004054  6E1B               	movwf	?_putsUSART+1,c
 17030  004056  0E7F               	movlw	low STR_203
 17031  004058  6E1A               	movwf	?_putsUSART,c
 17032  00405A  EC2E  F011         	call	_putsUSART	;wreg free
 17033                           
 17034                           ;main.c: 2171: putsUSART((char *) "CLOSE - Close CAN interface.\r\n");
 17035  00405E  0E78               	movlw	high STR_204
 17036  004060  6E1B               	movwf	?_putsUSART+1,c
 17037  004062  0E0C               	movlw	low STR_204
 17038  004064  6E1A               	movwf	?_putsUSART,c
 17039  004066  EC2E  F011         	call	_putsUSART	;wreg free
 17040                           
 17041                           ;main.c: 2172: putsUSART((char *) "VERSION - Display firmware version information.\r\n");
 17042  00406A  0E72               	movlw	high STR_205
 17043  00406C  6E1B               	movwf	?_putsUSART+1,c
 17044  00406E  0EB1               	movlw	low STR_205
 17045  004070  6E1A               	movwf	?_putsUSART,c
 17046  004072  EC2E  F011         	call	_putsUSART	;wreg free
 17047                           
 17048                           ;main.c: 2173: putsUSART((char *) "IFMODE - Display selected interface mode.\r\n");
 17049  004076  0E73               	movlw	high STR_206
 17050  004078  6E1B               	movwf	?_putsUSART+1,c
 17051  00407A  0ECF               	movlw	low STR_206
 17052  00407C  6E1A               	movwf	?_putsUSART,c
 17053  00407E  EC2E  F011         	call	_putsUSART	;wreg free
 17054                           
 17055                           ;main.c: 2174: putsUSART((char *) "TX - Send CAN frame .\r\n");
 17056  004082  0E79               	movlw	high STR_207
 17057  004084  6E1B               	movwf	?_putsUSART+1,c
 17058  004086  0E01               	movlw	low STR_207
 17059  004088  6E1A               	movwf	?_putsUSART,c
 17060  00408A  EC2E  F011         	call	_putsUSART	;wreg free
 17061                           
 17062                           ;main.c: 2175: putsUSART((char *) "     Format: priority,class,type,nodeid,count,data,,,
      +                          \r\n");
 17063  00408E  0E70               	movlw	high STR_208
 17064  004090  6E1B               	movwf	?_putsUSART+1,c
 17065  004092  0E33               	movlw	low STR_208
 17066  004094  6E1A               	movwf	?_putsUSART,c
 17067  004096  EC2E  F011         	call	_putsUSART	;wreg free
 17068                           
 17069                           ;main.c: 2176: putsUSART((char *) "RX - Read CAN frame.\r\n");
 17070  00409A  0E79               	movlw	high STR_209
 17071  00409C  6E1B               	movwf	?_putsUSART+1,c
 17072  00409E  0EC1               	movlw	low STR_209
 17073  0040A0  6E1A               	movwf	?_putsUSART,c
 17074  0040A2  EC2E  F011         	call	_putsUSART	;wreg free
 17075                           
 17076                           ;main.c: 2177: putsUSART((char *) "STAT - Display CAN statistics.\r\n");
 17077  0040A6  0E77               	movlw	high STR_210
 17078  0040A8  6E1B               	movwf	?_putsUSART+1,c
 17079  0040AA  0E28               	movlw	low STR_210
 17080  0040AC  6E1A               	movwf	?_putsUSART,c
 17081  0040AE  EC2E  F011         	call	_putsUSART	;wreg free
 17082                           
 17083                           ;main.c: 2178: putsUSART((char *) "ERR - Display CAN error information.\r\n");
 17084  0040B2  0E75               	movlw	high STR_211
 17085  0040B4  6E1B               	movwf	?_putsUSART+1,c
 17086  0040B6  0E45               	movlw	low STR_211
 17087  0040B8  6E1A               	movwf	?_putsUSART,c
 17088  0040BA  EC2E  F011         	call	_putsUSART	;wreg free
 17089                           
 17090                           ;main.c: 2179: putsUSART((char *) "HELP - Display this help information.\r\n");
 17091  0040BE  0E74               	movlw	high STR_212
 17092  0040C0  6E1B               	movwf	?_putsUSART+1,c
 17093  0040C2  0EA6               	movlw	low STR_212
 17094  0040C4  6E1A               	movwf	?_putsUSART,c
 17095  0040C6  EC2E  F011         	call	_putsUSART	;wreg free
 17096                           
 17097                           ;main.c: 2180: putsUSART((char *) "FIND - Find available CAN4VSCP nodes on bus.\r\n");
 17098  0040CA  0E73               	movlw	high STR_213
 17099  0040CC  6E1B               	movwf	?_putsUSART+1,c
 17100  0040CE  0E72               	movlw	low STR_213
 17101  0040D0  6E1A               	movwf	?_putsUSART,c
 17102  0040D2  EC2E  F011         	call	_putsUSART	;wreg free
 17103                           
 17104                           ;main.c: 2181: putsUSART((char *) "RREG - Read register(s) of node (Format: rreg [page:]
      +                          reg [count]).\r\n");
 17105  0040D6  0E6E               	movlw	high STR_214
 17106  0040D8  6E1B               	movwf	?_putsUSART+1,c
 17107  0040DA  0E32               	movlw	low STR_214
 17108  0040DC  6E1A               	movwf	?_putsUSART,c
 17109  0040DE  EC2E  F011         	call	_putsUSART	;wreg free
 17110                           
 17111                           ;main.c: 2182: putsUSART((char *) "WREG - Write register of node (Format: wreg [page:]re
      +                          g content).\r\n");
 17112  0040E2  0E6E               	movlw	high STR_215
 17113  0040E4  6E1B               	movwf	?_putsUSART+1,c
 17114  0040E6  0EFD               	movlw	low STR_215
 17115  0040E8  6E1A               	movwf	?_putsUSART,c
 17116  0040EA  EC2E  F011         	call	_putsUSART	;wreg free
 17117                           
 17118                           ;main.c: 2183: putsUSART((char *) "INFO - Get info about an existent node on the bus (Fo
      +                          rmat: info nickname).\r\n");
 17119  0040EE  0E6D               	movlw	high STR_216
 17120  0040F0  6E1B               	movwf	?_putsUSART+1,c
 17121  0040F2  0E9E               	movlw	low STR_216
 17122  0040F4  6E1A               	movwf	?_putsUSART,c
 17123  0040F6  EC2E  F011         	call	_putsUSART	;wreg free
 17124                           
 17125                           ;main.c: 2184: putsUSART((char *) "FILTER - Set filter .\r\n");
 17126  0040FA  0E79               	movlw	high STR_217
 17127  0040FC  6E1B               	movwf	?_putsUSART+1,c
 17128  0040FE  0E19               	movlw	low STR_217
 17129  004100  6E1A               	movwf	?_putsUSART,c
 17130  004102  EC2E  F011         	call	_putsUSART	;wreg free
 17131                           
 17132                           ;main.c: 2185: putsUSART((char *) "         Format: filter filterno,prio,class,type,node
      +                          id  (filterno = 0-15).\r\n");
 17133  004106  0E6D               	movlw	high STR_218
 17134  004108  6E1B               	movwf	?_putsUSART+1,c
 17135  00410A  0E50               	movlw	low STR_218
 17136  00410C  6E1A               	movwf	?_putsUSART,c
 17137  00410E  EC2E  F011         	call	_putsUSART	;wreg free
 17138                           
 17139                           ;main.c: 2186: putsUSART((char *) "MASK - Set mask .\r\n");
 17140  004112  0E7A               	movlw	high STR_219
 17141  004114  6E1B               	movwf	?_putsUSART+1,c
 17142  004116  0E47               	movlw	low STR_219
 17143  004118  6E1A               	movwf	?_putsUSART,c
 17144  00411A  EC2E  F011         	call	_putsUSART	;wreg free
 17145                           
 17146                           ;main.c: 2187: putsUSART((char *) "       Format: mask maskno,prio,class,type,nodeid (ma
      +                          skno = 0 or 1).\r\n");
 17147  00411E  0E6D               	movlw	high STR_220
 17148  004120  6E1B               	movwf	?_putsUSART+1,c
 17149  004122  0EEB               	movlw	low STR_220
 17150  004124  6E1A               	movwf	?_putsUSART,c
 17151  004126  EC2E  F011         	call	_putsUSART	;wreg free
 17152                           
 17153                           ;main.c: 2188: putsUSART((char *) "SET - Persistent functionality.\r\n");
 17154  00412A  0E76               	movlw	high STR_221
 17155  00412C  6E1B               	movwf	?_putsUSART+1,c
 17156  00412E  0EE4               	movlw	low STR_221
 17157  004130  6E1A               	movwf	?_putsUSART,c
 17158  004132  EC2E  F011         	call	_putsUSART	;wreg free
 17159                           
 17160                           ;main.c: 2189: putsUSART((char *) "    HEX - Display numericals in hexadecimal.\r\n");
 17161  004136  0E73               	movlw	high STR_222
 17162  004138  6E1B               	movwf	?_putsUSART+1,c
 17163  00413A  0E43               	movlw	low STR_222
 17164  00413C  6E1A               	movwf	?_putsUSART,c
 17165  00413E  EC2E  F011         	call	_putsUSART	;wreg free
 17166                           
 17167                           ;main.c: 2190: putsUSART((char *) "    DECIMAL - Display numericals in decimal.\r\n");
 17168  004142  0E73               	movlw	high STR_223
 17169  004144  6E1B               	movwf	?_putsUSART+1,c
 17170  004146  0E14               	movlw	low STR_223
 17171  004148  6E1A               	movwf	?_putsUSART,c
 17172  00414A  EC2E  F011         	call	_putsUSART	;wreg free
 17173                           
 17174                           ;main.c: 2191: putsUSART((char *) "    RWTIMEOUT - Set register read/write timeout. Defa
      +                          ult=10 ms .\r\n");
 17175  00414E  0E6E               	movlw	high STR_224
 17176  004150  6E1B               	movwf	?_putsUSART+1,c
 17177  004152  0EBA               	movlw	low STR_224
 17178  004154  6E1A               	movwf	?_putsUSART,c
 17179  004156  EC2E  F011         	call	_putsUSART	;wreg free
 17180                           
 17181                           ;main.c: 2192: putsUSART((char *) "                Format: set rwtimeout timeout.\r\n");
 17182  00415A  0E72               	movlw	high STR_225
 17183  00415C  6E1B               	movwf	?_putsUSART+1,c
 17184  00415E  0EE3               	movlw	low STR_225
 17185  004160  6E1A               	movwf	?_putsUSART,c
 17186  004162  EC2E  F011         	call	_putsUSART	;wreg free
 17187                           
 17188                           ;main.c: 2193: putsUSART((char *) "    STARTIF - Set interface state to use on startup.\
      +                          r\n");
 17189  004166  0E70               	movlw	high STR_226
 17190  004168  6E1B               	movwf	?_putsUSART+1,c
 17191  00416A  0EA2               	movlw	low STR_226
 17192  00416C  6E1A               	movwf	?_putsUSART,c
 17193  00416E  EC2E  F011         	call	_putsUSART	;wreg free
 17194                           
 17195                           ;main.c: 2194: putsUSART((char *) "    MODE - Set adapter mode that should be used on st
      +                          artup.\r\n");
 17196  004172  0E6F               	movlw	high STR_227
 17197  004174  6E1B               	movwf	?_putsUSART+1,c
 17198  004176  0E82               	movlw	low STR_227
 17199  004178  6E1A               	movwf	?_putsUSART,c
 17200  00417A  EC2E  F011         	call	_putsUSART	;wreg free
 17201                           
 17202                           ;main.c: 2195: putsUSART((char *) "           Modes: verbose|vscp|slcan\r\n");
 17203  00417E  0E75               	movlw	high STR_228
 17204  004180  6E1B               	movwf	?_putsUSART+1,c
 17205  004182  0EE1               	movlw	low STR_228
 17206  004184  6E1A               	movwf	?_putsUSART,c
 17207  004186  EF2E  F011         	goto	_putsUSART	;wreg free
 17208  00418A                     __end_of_printHelp:
 17209                           	opt stack 0
 17210                           tblptru	equ	0xFF8
 17211                           tblptrh	equ	0xFF7
 17212                           tblptrl	equ	0xFF6
 17213                           tablat	equ	0xFF5
 17214                           prodh	equ	0xFF4
 17215                           prodl	equ	0xFF3
 17216                           intcon	equ	0xFF2
 17217                           indf0	equ	0xFEF
 17218                           postinc0	equ	0xFEE
 17219                           fsr0h	equ	0xFEA
 17220                           fsr0l	equ	0xFE9
 17221                           wreg	equ	0xFE8
 17222                           indf1	equ	0xFE7
 17223                           postinc1	equ	0xFE6
 17224                           postdec1	equ	0xFE5
 17225                           fsr1h	equ	0xFE2
 17226                           fsr1l	equ	0xFE1
 17227                           indf2	equ	0xFDF
 17228                           postinc2	equ	0xFDE
 17229                           postdec2	equ	0xFDD
 17230                           plusw2	equ	0xFDB
 17231                           fsr2h	equ	0xFDA
 17232                           fsr2l	equ	0xFD9
 17233                           status	equ	0xFD8
 17234                           
 17235 ;; *************** function _printErrors *****************
 17236 ;; Defined at:
 17237 ;;		line 2093 in file "main.c"
 17238 ;; Parameters:    Size  Location     Type
 17239 ;;		None
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;		None
 17242 ;; Return value:  Size  Location     Type
 17243 ;;		None               void
 17244 ;; Registers used:
 17245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17246 ;; Tracked objects:
 17247 ;;		On entry : F/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17251 ;;      Params:         0       0       0       0       0       0       0
 17252 ;;      Locals:         0      12       0       0       0       0       0
 17253 ;;      Temps:          0       0       0       0       0       0       0
 17254 ;;      Totals:         0      12       0       0       0       0       0
 17255 ;;Total ram usage:       12 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:    4
 17258 ;; This function calls:
 17259 ;;		_putsUSART
 17260 ;;		_sprintf
 17261 ;; This function is called by:
 17262 ;;		_doModeVerbose
 17263 ;; This function uses a non-reentrant model
 17264 ;;
 17265                           
 17266                           	psect	text37
 17267  004C8A                     __ptext37:
 17268                           	opt stack 0
 17269  004C8A                     _printErrors:
 17270                           	opt stack 24
 17271                           
 17272                           ; BSR set to: 0
 17273                           ;main.c: 2094: putsUSART((char *) "CAN Receive overruns: ");
 17274                           
 17275                           ;incstack = 0
 17276                           ;incstack = 0
 17277  004C8A  0E79               	movlw	high STR_167
 17278  004C8C  6E1B               	movwf	?_putsUSART+1,c
 17279  004C8E  0ED8               	movlw	low STR_167
 17280  004C90  6E1A               	movwf	?_putsUSART,c
 17281  004C92  EC2E  F011         	call	_putsUSART	;wreg free
 17282                           
 17283                           ;main.c: 2095: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", can_receiveOverruns);
 17284  004C96  0100               	movlb	0	; () banked
 17285  004C98  67D3               	tstfsz	_bHex& (0+255),b
 17286  004C9A  D004               	goto	l13828
 17287                           
 17288                           ; BSR set to: 0
 17289  004C9C  0E7C               	movlw	high STR_153
 17290  004C9E  6F7F               	movwf	(_printErrors$1387+1)& (0+255),b
 17291  004CA0  0EE1               	movlw	low STR_153
 17292  004CA2  D003               	goto	L15
 17293  004CA4                     l13828:
 17294                           
 17295                           ; BSR set to: 0
 17296  004CA4  0E7C               	movlw	high STR_168
 17297  004CA6  6F7F               	movwf	(_printErrors$1387+1)& (0+255),b
 17298  004CA8  0E16               	movlw	low STR_168
 17299  004CAA                     L15:
 17300  004CAA  6F7E               	movwf	_printErrors$1387& (0+255),b
 17301                           
 17302                           ; BSR set to: 0
 17303  004CAC  0E01               	movlw	high _wrkbuf
 17304  004CAE  0100               	movlb	0	; () banked
 17305  004CB0  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17306  004CB2  0E74               	movlw	low _wrkbuf
 17307  004CB4  6F60               	movwf	?_sprintf& (0+255),b
 17308  004CB6  C07E  F062         	movff	_printErrors$1387,?_sprintf+2
 17309  004CBA  C07F  F063         	movff	_printErrors$1387+1,?_sprintf+3
 17310  004CBE  C100  F064         	movff	_can_receiveOverruns,?_sprintf+4
 17311  004CC2  C101  F065         	movff	_can_receiveOverruns+1,?_sprintf+5
 17312  004CC6  C102  F066         	movff	_can_receiveOverruns+2,?_sprintf+6
 17313  004CCA  C103  F067         	movff	_can_receiveOverruns+3,?_sprintf+7
 17314  004CCE  EC5F  F029         	call	_sprintf	;wreg free
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;main.c: 2096: putsUSART(wrkbuf);
 17318  004CD2  0101               	movlb	1	; () banked
 17319  004CD4  0E01               	movlw	high _wrkbuf
 17320  004CD6  6E1B               	movwf	?_putsUSART+1,c
 17321  004CD8  0E74               	movlw	low _wrkbuf
 17322  004CDA  6E1A               	movwf	?_putsUSART,c
 17323  004CDC  EC2E  F011         	call	_putsUSART	;wreg free
 17324                           
 17325                           ;main.c: 2097: putsUSART((char *) "\r\n");
 17326  004CE0  0E71               	movlw	high (STR_188+50)
 17327  004CE2  6E1B               	movwf	?_putsUSART+1,c
 17328  004CE4  0EAE               	movlw	low (STR_188+50)
 17329  004CE6  6E1A               	movwf	?_putsUSART,c
 17330  004CE8  EC2E  F011         	call	_putsUSART	;wreg free
 17331                           
 17332                           ;main.c: 2099: putsUSART((char *) "CAN Transmit overruns: ");
 17333  004CEC  0E79               	movlw	high STR_171
 17334  004CEE  6E1B               	movwf	?_putsUSART+1,c
 17335  004CF0  0EA9               	movlw	low STR_171
 17336  004CF2  6E1A               	movwf	?_putsUSART,c
 17337  004CF4  EC2E  F011         	call	_putsUSART	;wreg free
 17338                           
 17339                           ;main.c: 2100: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", can_transmitOverruns);
 17340  004CF8  0100               	movlb	0	; () banked
 17341  004CFA  67D3               	tstfsz	_bHex& (0+255),b
 17342  004CFC  D004               	goto	l13842
 17343                           
 17344                           ; BSR set to: 0
 17345  004CFE  0E7C               	movlw	high STR_153
 17346  004D00  6F81               	movwf	(_printErrors$1393+1)& (0+255),b
 17347  004D02  0EE1               	movlw	low STR_153
 17348  004D04  D003               	goto	L16
 17349  004D06                     l13842:
 17350                           
 17351                           ; BSR set to: 0
 17352  004D06  0E7C               	movlw	high STR_168
 17353  004D08  6F81               	movwf	(_printErrors$1393+1)& (0+255),b
 17354  004D0A  0E16               	movlw	low STR_168
 17355  004D0C                     L16:
 17356  004D0C  6F80               	movwf	_printErrors$1393& (0+255),b
 17357                           
 17358                           ; BSR set to: 0
 17359  004D0E  0E01               	movlw	high _wrkbuf
 17360  004D10  0100               	movlb	0	; () banked
 17361  004D12  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17362  004D14  0E74               	movlw	low _wrkbuf
 17363  004D16  6F60               	movwf	?_sprintf& (0+255),b
 17364  004D18  C080  F062         	movff	_printErrors$1393,?_sprintf+2
 17365  004D1C  C081  F063         	movff	_printErrors$1393+1,?_sprintf+3
 17366  004D20  C104  F064         	movff	_can_transmitOverruns,?_sprintf+4
 17367  004D24  C105  F065         	movff	_can_transmitOverruns+1,?_sprintf+5
 17368  004D28  C106  F066         	movff	_can_transmitOverruns+2,?_sprintf+6
 17369  004D2C  C107  F067         	movff	_can_transmitOverruns+3,?_sprintf+7
 17370  004D30  EC5F  F029         	call	_sprintf	;wreg free
 17371                           
 17372                           ; BSR set to: 0
 17373                           ;main.c: 2101: putsUSART(wrkbuf);
 17374  004D34  0101               	movlb	1	; () banked
 17375  004D36  0E01               	movlw	high _wrkbuf
 17376  004D38  6E1B               	movwf	?_putsUSART+1,c
 17377  004D3A  0E74               	movlw	low _wrkbuf
 17378  004D3C  6E1A               	movwf	?_putsUSART,c
 17379  004D3E  EC2E  F011         	call	_putsUSART	;wreg free
 17380                           
 17381                           ;main.c: 2102: putsUSART((char *) "\r\n");
 17382  004D42  0E71               	movlw	high (STR_188+50)
 17383  004D44  6E1B               	movwf	?_putsUSART+1,c
 17384  004D46  0EAE               	movlw	low (STR_188+50)
 17385  004D48  6E1A               	movwf	?_putsUSART,c
 17386  004D4A  EC2E  F011         	call	_putsUSART	;wreg free
 17387                           
 17388                           ;main.c: 2104: putsUSART((char *) "UART Receive overruns: ");
 17389  004D4E  0E79               	movlw	high STR_175
 17390  004D50  6E1B               	movwf	?_putsUSART+1,c
 17391  004D52  0E91               	movlw	low STR_175
 17392  004D54  6E1A               	movwf	?_putsUSART,c
 17393  004D56  EC2E  F011         	call	_putsUSART	;wreg free
 17394                           
 17395                           ;main.c: 2105: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", uart_receiveOverruns);
 17396  004D5A  0100               	movlb	0	; () banked
 17397  004D5C  67D3               	tstfsz	_bHex& (0+255),b
 17398  004D5E  D004               	goto	l13856
 17399                           
 17400                           ; BSR set to: 0
 17401  004D60  0E7C               	movlw	high STR_153
 17402  004D62  6F83               	movwf	(_printErrors$1399+1)& (0+255),b
 17403  004D64  0EE1               	movlw	low STR_153
 17404  004D66  D003               	goto	L17
 17405  004D68                     l13856:
 17406                           
 17407                           ; BSR set to: 0
 17408  004D68  0E7C               	movlw	high STR_168
 17409  004D6A  6F83               	movwf	(_printErrors$1399+1)& (0+255),b
 17410  004D6C  0E16               	movlw	low STR_168
 17411  004D6E                     L17:
 17412  004D6E  6F82               	movwf	_printErrors$1399& (0+255),b
 17413                           
 17414                           ; BSR set to: 0
 17415  004D70  0E01               	movlw	high _wrkbuf
 17416  004D72  0100               	movlb	0	; () banked
 17417  004D74  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17418  004D76  0E74               	movlw	low _wrkbuf
 17419  004D78  6F60               	movwf	?_sprintf& (0+255),b
 17420  004D7A  C082  F062         	movff	_printErrors$1399,?_sprintf+2
 17421  004D7E  C083  F063         	movff	_printErrors$1399+1,?_sprintf+3
 17422  004D82  C11C  F064         	movff	_uart_receiveOverruns,?_sprintf+4
 17423  004D86  C11D  F065         	movff	_uart_receiveOverruns+1,?_sprintf+5
 17424  004D8A  C11E  F066         	movff	_uart_receiveOverruns+2,?_sprintf+6
 17425  004D8E  C11F  F067         	movff	_uart_receiveOverruns+3,?_sprintf+7
 17426  004D92  EC5F  F029         	call	_sprintf	;wreg free
 17427                           
 17428                           ; BSR set to: 0
 17429                           ;main.c: 2106: putsUSART(wrkbuf);
 17430  004D96  0101               	movlb	1	; () banked
 17431  004D98  0E01               	movlw	high _wrkbuf
 17432  004D9A  6E1B               	movwf	?_putsUSART+1,c
 17433  004D9C  0E74               	movlw	low _wrkbuf
 17434  004D9E  6E1A               	movwf	?_putsUSART,c
 17435  004DA0  EC2E  F011         	call	_putsUSART	;wreg free
 17436                           
 17437                           ;main.c: 2107: putsUSART((char *) "\r\n");
 17438  004DA4  0E71               	movlw	high (STR_188+50)
 17439  004DA6  6E1B               	movwf	?_putsUSART+1,c
 17440  004DA8  0EAE               	movlw	low (STR_188+50)
 17441  004DAA  6E1A               	movwf	?_putsUSART,c
 17442  004DAC  EC2E  F011         	call	_putsUSART	;wreg free
 17443                           
 17444                           ;main.c: 2109: putsUSART((char *) "UART Receive overruns: ");
 17445  004DB0  0E79               	movlw	high STR_175
 17446  004DB2  6E1B               	movwf	?_putsUSART+1,c
 17447  004DB4  0E91               	movlw	low STR_175
 17448  004DB6  6E1A               	movwf	?_putsUSART,c
 17449  004DB8  EC2E  F011         	call	_putsUSART	;wreg free
 17450                           
 17451                           ;main.c: 2110: sprintf(wrkbuf, bHex ? "0x%08lX" : "%lu", uart_transmitOverruns);
 17452  004DBC  0100               	movlb	0	; () banked
 17453  004DBE  67D3               	tstfsz	_bHex& (0+255),b
 17454  004DC0  D004               	goto	l13870
 17455                           
 17456                           ; BSR set to: 0
 17457  004DC2  0E7C               	movlw	high STR_153
 17458  004DC4  6F85               	movwf	(_printErrors$1405+1)& (0+255),b
 17459  004DC6  0EE1               	movlw	low STR_153
 17460  004DC8  D003               	goto	L18
 17461  004DCA                     l13870:
 17462                           
 17463                           ; BSR set to: 0
 17464  004DCA  0E7C               	movlw	high STR_168
 17465  004DCC  6F85               	movwf	(_printErrors$1405+1)& (0+255),b
 17466  004DCE  0E16               	movlw	low STR_168
 17467  004DD0                     L18:
 17468  004DD0  6F84               	movwf	_printErrors$1405& (0+255),b
 17469                           
 17470                           ; BSR set to: 0
 17471  004DD2  0E01               	movlw	high _wrkbuf
 17472  004DD4  0100               	movlb	0	; () banked
 17473  004DD6  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17474  004DD8  0E74               	movlw	low _wrkbuf
 17475  004DDA  6F60               	movwf	?_sprintf& (0+255),b
 17476  004DDC  C084  F062         	movff	_printErrors$1405,?_sprintf+2
 17477  004DE0  C085  F063         	movff	_printErrors$1405+1,?_sprintf+3
 17478  004DE4  C120  F064         	movff	_uart_transmitOverruns,?_sprintf+4
 17479  004DE8  C121  F065         	movff	_uart_transmitOverruns+1,?_sprintf+5
 17480  004DEC  C122  F066         	movff	_uart_transmitOverruns+2,?_sprintf+6
 17481  004DF0  C123  F067         	movff	_uart_transmitOverruns+3,?_sprintf+7
 17482  004DF4  EC5F  F029         	call	_sprintf	;wreg free
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;main.c: 2111: putsUSART(wrkbuf);
 17486  004DF8  0101               	movlb	1	; () banked
 17487  004DFA  0E01               	movlw	high _wrkbuf
 17488  004DFC  6E1B               	movwf	?_putsUSART+1,c
 17489  004DFE  0E74               	movlw	low _wrkbuf
 17490  004E00  6E1A               	movwf	?_putsUSART,c
 17491  004E02  EC2E  F011         	call	_putsUSART	;wreg free
 17492                           
 17493                           ;main.c: 2112: putsUSART((char *) "\r\n");
 17494  004E06  0E71               	movlw	high (STR_188+50)
 17495  004E08  6E1B               	movwf	?_putsUSART+1,c
 17496  004E0A  0EAE               	movlw	low (STR_188+50)
 17497  004E0C  6E1A               	movwf	?_putsUSART,c
 17498  004E0E  EC2E  F011         	call	_putsUSART	;wreg free
 17499                           
 17500                           ;main.c: 2118: putsUSART((char *) "Transmit Error Counter: ");
 17501  004E12  0E78               	movlw	high STR_183
 17502  004E14  6E1B               	movwf	?_putsUSART+1,c
 17503  004E16  0EE8               	movlw	low STR_183
 17504  004E18  6E1A               	movwf	?_putsUSART,c
 17505  004E1A  EC2E  F011         	call	_putsUSART	;wreg free
 17506                           
 17507                           ;main.c: 2119: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", TXERRCNT);
 17508  004E1E  0100               	movlb	0	; () banked
 17509  004E20  67D3               	tstfsz	_bHex& (0+255),b
 17510  004E22  D004               	goto	l13884
 17511                           
 17512                           ; BSR set to: 0
 17513  004E24  0E7C               	movlw	high STR_53
 17514  004E26  6F87               	movwf	(_printErrors$1411+1)& (0+255),b
 17515  004E28  0EEE               	movlw	low STR_53
 17516  004E2A  D003               	goto	L19
 17517  004E2C                     l13884:
 17518                           
 17519                           ; BSR set to: 0
 17520  004E2C  0E7C               	movlw	high STR_52
 17521  004E2E  6F87               	movwf	(_printErrors$1411+1)& (0+255),b
 17522  004E30  0E65               	movlw	low STR_52
 17523  004E32                     L19:
 17524  004E32  6F86               	movwf	_printErrors$1411& (0+255),b
 17525                           
 17526                           ; BSR set to: 0
 17527  004E34  0E01               	movlw	high _wrkbuf
 17528  004E36  0100               	movlb	0	; () banked
 17529  004E38  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17530  004E3A  0E74               	movlw	low _wrkbuf
 17531  004E3C  6F60               	movwf	?_sprintf& (0+255),b
 17532  004E3E  C086  F062         	movff	_printErrors$1411,?_sprintf+2
 17533  004E42  C087  F063         	movff	_printErrors$1411+1,?_sprintf+3
 17534  004E46  CF76 F064          	movff	3958,?_sprintf+4	;volatile
 17535  004E4A  6B65               	clrf	(?_sprintf+5)& (0+255),b
 17536  004E4C  EC5F  F029         	call	_sprintf	;wreg free
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;main.c: 2120: putsUSART(wrkbuf);
 17540  004E50  0101               	movlb	1	; () banked
 17541  004E52  0E01               	movlw	high _wrkbuf
 17542  004E54  6E1B               	movwf	?_putsUSART+1,c
 17543  004E56  0E74               	movlw	low _wrkbuf
 17544  004E58  6E1A               	movwf	?_putsUSART,c
 17545  004E5A  EC2E  F011         	call	_putsUSART	;wreg free
 17546                           
 17547                           ;main.c: 2121: putsUSART((char *) "\r\n");
 17548  004E5E  0E71               	movlw	high (STR_188+50)
 17549  004E60  6E1B               	movwf	?_putsUSART+1,c
 17550  004E62  0EAE               	movlw	low (STR_188+50)
 17551  004E64  6E1A               	movwf	?_putsUSART,c
 17552  004E66  EC2E  F011         	call	_putsUSART	;wreg free
 17553                           
 17554                           ;main.c: 2123: if (COMSTATbits.TXWARN) {
 17555  004E6A  A474               	btfss	3956,2,c	;volatile
 17556  004E6C  D006               	goto	l13896
 17557                           
 17558                           ;main.c: 2124: putsUSART((char *) "Transmitter in Error State Warning (128 > TERRCNT ? 9
      +                          6)\r\n");
 17559  004E6E  0E6F               	movlw	high STR_187
 17560  004E70  6E1B               	movwf	?_putsUSART+1,c
 17561  004E72  0EC0               	movlw	low STR_187
 17562  004E74  6E1A               	movwf	?_putsUSART,c
 17563  004E76  EC2E  F011         	call	_putsUSART	;wreg free
 17564  004E7A                     l13896:
 17565                           
 17566                           ;main.c: 2125: }
 17567                           ;main.c: 2127: if (COMSTATbits.TXBO) {
 17568  004E7A  AA74               	btfss	3956,5,c	;volatile
 17569  004E7C  D006               	goto	l13900
 17570                           
 17571                           ;main.c: 2128: putsUSART((char *) "Transmitter in Error State Bus OFF (TERRCNT ? 256)\r\
      +                          n");
 17572  004E7E  0E71               	movlw	high STR_188
 17573  004E80  6E1B               	movwf	?_putsUSART+1,c
 17574  004E82  0E7C               	movlw	low STR_188
 17575  004E84  6E1A               	movwf	?_putsUSART,c
 17576  004E86  EC2E  F011         	call	_putsUSART	;wreg free
 17577  004E8A                     l13900:
 17578                           
 17579                           ;main.c: 2129: }
 17580                           ;main.c: 2131: if (COMSTATbits.TXBP) {
 17581  004E8A  A874               	btfss	3956,4,c	;volatile
 17582  004E8C  D006               	goto	l1065
 17583                           
 17584                           ;main.c: 2132: putsUSART((char *) "Transmitter in Error State Bus Passive (TERRCNT ? 128
      +                          )\r\n");
 17585  004E8E  0E6F               	movlw	high STR_189
 17586  004E90  6E1B               	movwf	?_putsUSART+1,c
 17587  004E92  0EFA               	movlw	low STR_189
 17588  004E94  6E1A               	movwf	?_putsUSART,c
 17589  004E96  EC2E  F011         	call	_putsUSART	;wreg free
 17590  004E9A                     l1065:
 17591                           
 17592                           ;main.c: 2133: }
 17593                           ;main.c: 2139: putsUSART((char *) "Receive Error Counter: ");
 17594  004E9A  0E79               	movlw	high STR_190
 17595  004E9C  6E1B               	movwf	?_putsUSART+1,c
 17596  004E9E  0E79               	movlw	low STR_190
 17597  004EA0  6E1A               	movwf	?_putsUSART,c
 17598  004EA2  EC2E  F011         	call	_putsUSART	;wreg free
 17599                           
 17600                           ;main.c: 2140: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", RXERRCNT);
 17601  004EA6  0100               	movlb	0	; () banked
 17602  004EA8  67D3               	tstfsz	_bHex& (0+255),b
 17603  004EAA  D004               	goto	l13908
 17604                           
 17605                           ; BSR set to: 0
 17606  004EAC  0E7C               	movlw	high STR_53
 17607  004EAE  6F89               	movwf	(_printErrors$1420+1)& (0+255),b
 17608  004EB0  0EEE               	movlw	low STR_53
 17609  004EB2  D003               	goto	L20
 17610  004EB4                     l13908:
 17611                           
 17612                           ; BSR set to: 0
 17613  004EB4  0E7C               	movlw	high STR_52
 17614  004EB6  6F89               	movwf	(_printErrors$1420+1)& (0+255),b
 17615  004EB8  0E65               	movlw	low STR_52
 17616  004EBA                     L20:
 17617  004EBA  6F88               	movwf	_printErrors$1420& (0+255),b
 17618                           
 17619                           ; BSR set to: 0
 17620  004EBC  0E01               	movlw	high _wrkbuf
 17621  004EBE  0100               	movlb	0	; () banked
 17622  004EC0  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17623  004EC2  0E74               	movlw	low _wrkbuf
 17624  004EC4  6F60               	movwf	?_sprintf& (0+255),b
 17625  004EC6  C088  F062         	movff	_printErrors$1420,?_sprintf+2
 17626  004ECA  C089  F063         	movff	_printErrors$1420+1,?_sprintf+3
 17627  004ECE  CF75 F064          	movff	3957,?_sprintf+4	;volatile
 17628  004ED2  6B65               	clrf	(?_sprintf+5)& (0+255),b
 17629  004ED4  EC5F  F029         	call	_sprintf	;wreg free
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;main.c: 2141: putsUSART(wrkbuf);
 17633  004ED8  0101               	movlb	1	; () banked
 17634  004EDA  0E01               	movlw	high _wrkbuf
 17635  004EDC  6E1B               	movwf	?_putsUSART+1,c
 17636  004EDE  0E74               	movlw	low _wrkbuf
 17637  004EE0  6E1A               	movwf	?_putsUSART,c
 17638  004EE2  EC2E  F011         	call	_putsUSART	;wreg free
 17639                           
 17640                           ;main.c: 2142: putsUSART((char *) "\r\n");
 17641  004EE6  0E71               	movlw	high (STR_188+50)
 17642  004EE8  6E1B               	movwf	?_putsUSART+1,c
 17643  004EEA  0EAE               	movlw	low (STR_188+50)
 17644  004EEC  6E1A               	movwf	?_putsUSART,c
 17645  004EEE  EC2E  F011         	call	_putsUSART	;wreg free
 17646                           
 17647                           ;main.c: 2144: if (COMSTATbits.RXWARN) {
 17648  004EF2  A274               	btfss	3956,1,c	;volatile
 17649  004EF4  D006               	goto	l13920
 17650                           
 17651                           ;main.c: 2145: putsUSART((char *) "Receiver in Error State Warning (128 > RERRCNT ? 96)\
      +                          r\n");
 17652  004EF6  0E70               	movlw	high STR_194
 17653  004EF8  6E1B               	movwf	?_putsUSART+1,c
 17654  004EFA  0E6B               	movlw	low STR_194
 17655  004EFC  6E1A               	movwf	?_putsUSART,c
 17656  004EFE  EC2E  F011         	call	_putsUSART	;wreg free
 17657  004F02                     l13920:
 17658                           
 17659                           ;main.c: 2146: }
 17660                           ;main.c: 2148: if (COMSTATbits.RXBP) {
 17661  004F02  A674               	btfss	3956,3,c	;volatile
 17662  004F04  D006               	goto	l13924
 17663                           
 17664                           ;main.c: 2149: putsUSART((char *) "Receiver in Error State Bus Passive (RERRCNT ? 128)\r
      +                          \n");
 17665  004F06  0E71               	movlw	high STR_195
 17666  004F08  6E1B               	movwf	?_putsUSART+1,c
 17667  004F0A  0E10               	movlw	low STR_195
 17668  004F0C  6E1A               	movwf	?_putsUSART,c
 17669  004F0E  EC2E  F011         	call	_putsUSART	;wreg free
 17670  004F12                     l13924:
 17671                           
 17672                           ;main.c: 2150: }
 17673                           ;main.c: 2152: if (COMSTATbits.EWARN) {
 17674  004F12  A074               	btfss	3956,0,c	;volatile
 17675  004F14  D006               	goto	l1073
 17676                           
 17677                           ;main.c: 2153: putsUSART((char *) "Transmitter or Receiver is in Error State Warning\r\n
      +                          ");
 17678  004F16  0E71               	movlw	high STR_196
 17679  004F18  6E1B               	movwf	?_putsUSART+1,c
 17680  004F1A  0EE6               	movlw	low STR_196
 17681  004F1C  6E1A               	movwf	?_putsUSART,c
 17682  004F1E  EC2E  F011         	call	_putsUSART	;wreg free
 17683  004F22                     l1073:
 17684  004F22  0012               	return	
 17685  004F24                     __end_of_printErrors:
 17686                           	opt stack 0
 17687                           tblptru	equ	0xFF8
 17688                           tblptrh	equ	0xFF7
 17689                           tblptrl	equ	0xFF6
 17690                           tablat	equ	0xFF5
 17691                           prodh	equ	0xFF4
 17692                           prodl	equ	0xFF3
 17693                           intcon	equ	0xFF2
 17694                           indf0	equ	0xFEF
 17695                           postinc0	equ	0xFEE
 17696                           fsr0h	equ	0xFEA
 17697                           fsr0l	equ	0xFE9
 17698                           wreg	equ	0xFE8
 17699                           indf1	equ	0xFE7
 17700                           postinc1	equ	0xFE6
 17701                           postdec1	equ	0xFE5
 17702                           fsr1h	equ	0xFE2
 17703                           fsr1l	equ	0xFE1
 17704                           indf2	equ	0xFDF
 17705                           postinc2	equ	0xFDE
 17706                           postdec2	equ	0xFDD
 17707                           plusw2	equ	0xFDB
 17708                           fsr2h	equ	0xFDA
 17709                           fsr2l	equ	0xFD9
 17710                           status	equ	0xFD8
 17711                           
 17712 ;; *************** function _printStatistics *****************
 17713 ;; Defined at:
 17714 ;;		line 2067 in file "main.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;		None
 17717 ;; Auto vars:     Size  Location     Type
 17718 ;;		None
 17719 ;; Return value:  Size  Location     Type
 17720 ;;		None               void
 17721 ;; Registers used:
 17722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17723 ;; Tracked objects:
 17724 ;;		On entry : F/0
 17725 ;;		On exit  : 0/0
 17726 ;;		Unchanged: 0/0
 17727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17728 ;;      Params:         0       0       0       0       0       0       0
 17729 ;;      Locals:         0       8       0       0       0       0       0
 17730 ;;      Temps:          0       0       0       0       0       0       0
 17731 ;;      Totals:         0       8       0       0       0       0       0
 17732 ;;Total ram usage:        8 bytes
 17733 ;; Hardware stack levels used:    1
 17734 ;; Hardware stack levels required when called:    4
 17735 ;; This function calls:
 17736 ;;		_putsUSART
 17737 ;;		_sprintf
 17738 ;; This function is called by:
 17739 ;;		_doModeVerbose
 17740 ;; This function uses a non-reentrant model
 17741 ;;
 17742                           
 17743                           	psect	text38
 17744  00418A                     __ptext38:
 17745                           	opt stack 0
 17746  00418A                     _printStatistics:
 17747                           	opt stack 24
 17748                           
 17749                           ; BSR set to: 0
 17750                           ;main.c: 2068: putsUSART((char *) "Sent CAN frames: ");
 17751                           
 17752                           ;incstack = 0
 17753                           ;incstack = 0
 17754  00418A  0E7B               	movlw	high STR_151
 17755  00418C  6E1B               	movwf	?_putsUSART+1,c
 17756  00418E  0E0A               	movlw	low STR_151
 17757  004190  6E1A               	movwf	?_putsUSART,c
 17758  004192  EC2E  F011         	call	_putsUSART	;wreg free
 17759                           
 17760                           ;main.c: 2069: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntTxFrames);
 17761  004196  0100               	movlb	0	; () banked
 17762  004198  67D3               	tstfsz	_bHex& (0+255),b
 17763  00419A  D004               	goto	l13772
 17764                           
 17765                           ; BSR set to: 0
 17766  00419C  0E7C               	movlw	high STR_153
 17767  00419E  6F7F               	movwf	(_printStatistics$1362+1)& (0+255),b
 17768  0041A0  0EE1               	movlw	low STR_153
 17769  0041A2  D003               	goto	L21
 17770  0041A4                     l13772:
 17771                           
 17772                           ; BSR set to: 0
 17773  0041A4  0E7C               	movlw	high STR_152
 17774  0041A6  6F7F               	movwf	(_printStatistics$1362+1)& (0+255),b
 17775  0041A8  0E73               	movlw	low STR_152
 17776  0041AA                     L21:
 17777  0041AA  6F7E               	movwf	_printStatistics$1362& (0+255),b
 17778                           
 17779                           ; BSR set to: 0
 17780  0041AC  0E01               	movlw	high _wrkbuf
 17781  0041AE  0100               	movlb	0	; () banked
 17782  0041B0  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17783  0041B2  0E74               	movlw	low _wrkbuf
 17784  0041B4  6F60               	movwf	?_sprintf& (0+255),b
 17785  0041B6  C07E  F062         	movff	_printStatistics$1362,?_sprintf+2
 17786  0041BA  C07F  F063         	movff	_printStatistics$1362+1,?_sprintf+3
 17787  0041BE  C114  F064         	movff	_cntTxFrames,?_sprintf+4
 17788  0041C2  C115  F065         	movff	_cntTxFrames+1,?_sprintf+5
 17789  0041C6  C116  F066         	movff	_cntTxFrames+2,?_sprintf+6
 17790  0041CA  C117  F067         	movff	_cntTxFrames+3,?_sprintf+7
 17791  0041CE  EC5F  F029         	call	_sprintf	;wreg free
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;main.c: 2070: putsUSART(wrkbuf);
 17795  0041D2  0101               	movlb	1	; () banked
 17796  0041D4  0E01               	movlw	high _wrkbuf
 17797  0041D6  6E1B               	movwf	?_putsUSART+1,c
 17798  0041D8  0E74               	movlw	low _wrkbuf
 17799  0041DA  6E1A               	movwf	?_putsUSART,c
 17800  0041DC  EC2E  F011         	call	_putsUSART	;wreg free
 17801                           
 17802                           ;main.c: 2071: putsUSART((char *) "\r\n");
 17803  0041E0  0E71               	movlw	high (STR_188+50)
 17804  0041E2  6E1B               	movwf	?_putsUSART+1,c
 17805  0041E4  0EAE               	movlw	low (STR_188+50)
 17806  0041E6  6E1A               	movwf	?_putsUSART,c
 17807  0041E8  EC2E  F011         	call	_putsUSART	;wreg free
 17808                           
 17809                           ;main.c: 2073: putsUSART((char *) "Sent CAN bytes: ");
 17810  0041EC  0E7B               	movlw	high STR_155
 17811  0041EE  6E1B               	movwf	?_putsUSART+1,c
 17812  0041F0  0E3E               	movlw	low STR_155
 17813  0041F2  6E1A               	movwf	?_putsUSART,c
 17814  0041F4  EC2E  F011         	call	_putsUSART	;wreg free
 17815                           
 17816                           ;main.c: 2074: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntTxBytes);
 17817  0041F8  0100               	movlb	0	; () banked
 17818  0041FA  67D3               	tstfsz	_bHex& (0+255),b
 17819  0041FC  D004               	goto	l13786
 17820                           
 17821                           ; BSR set to: 0
 17822  0041FE  0E7C               	movlw	high STR_153
 17823  004200  6F81               	movwf	(_printStatistics$1368+1)& (0+255),b
 17824  004202  0EE1               	movlw	low STR_153
 17825  004204  D003               	goto	L22
 17826  004206                     l13786:
 17827                           
 17828                           ; BSR set to: 0
 17829  004206  0E7C               	movlw	high STR_152
 17830  004208  6F81               	movwf	(_printStatistics$1368+1)& (0+255),b
 17831  00420A  0E73               	movlw	low STR_152
 17832  00420C                     L22:
 17833  00420C  6F80               	movwf	_printStatistics$1368& (0+255),b
 17834                           
 17835                           ; BSR set to: 0
 17836  00420E  0E01               	movlw	high _wrkbuf
 17837  004210  0100               	movlb	0	; () banked
 17838  004212  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17839  004214  0E74               	movlw	low _wrkbuf
 17840  004216  6F60               	movwf	?_sprintf& (0+255),b
 17841  004218  C080  F062         	movff	_printStatistics$1368,?_sprintf+2
 17842  00421C  C081  F063         	movff	_printStatistics$1368+1,?_sprintf+3
 17843  004220  C110  F064         	movff	_cntTxBytes,?_sprintf+4
 17844  004224  C111  F065         	movff	_cntTxBytes+1,?_sprintf+5
 17845  004228  C112  F066         	movff	_cntTxBytes+2,?_sprintf+6
 17846  00422C  C113  F067         	movff	_cntTxBytes+3,?_sprintf+7
 17847  004230  EC5F  F029         	call	_sprintf	;wreg free
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;main.c: 2075: putsUSART(wrkbuf);
 17851  004234  0101               	movlb	1	; () banked
 17852  004236  0E01               	movlw	high _wrkbuf
 17853  004238  6E1B               	movwf	?_putsUSART+1,c
 17854  00423A  0E74               	movlw	low _wrkbuf
 17855  00423C  6E1A               	movwf	?_putsUSART,c
 17856  00423E  EC2E  F011         	call	_putsUSART	;wreg free
 17857                           
 17858                           ;main.c: 2076: putsUSART((char *) "\r\n");
 17859  004242  0E71               	movlw	high (STR_188+50)
 17860  004244  6E1B               	movwf	?_putsUSART+1,c
 17861  004246  0EAE               	movlw	low (STR_188+50)
 17862  004248  6E1A               	movwf	?_putsUSART,c
 17863  00424A  EC2E  F011         	call	_putsUSART	;wreg free
 17864                           
 17865                           ;main.c: 2078: putsUSART((char *) "Received CAN frames: ");
 17866  00424E  0E7A               	movlw	high STR_159
 17867  004250  6E1B               	movwf	?_putsUSART+1,c
 17868  004252  0E1C               	movlw	low STR_159
 17869  004254  6E1A               	movwf	?_putsUSART,c
 17870  004256  EC2E  F011         	call	_putsUSART	;wreg free
 17871                           
 17872                           ;main.c: 2079: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntRxFrames);
 17873  00425A  0100               	movlb	0	; () banked
 17874  00425C  67D3               	tstfsz	_bHex& (0+255),b
 17875  00425E  D004               	goto	l13800
 17876                           
 17877                           ; BSR set to: 0
 17878  004260  0E7C               	movlw	high STR_153
 17879  004262  6F83               	movwf	(_printStatistics$1374+1)& (0+255),b
 17880  004264  0EE1               	movlw	low STR_153
 17881  004266  D003               	goto	L23
 17882  004268                     l13800:
 17883                           
 17884                           ; BSR set to: 0
 17885  004268  0E7C               	movlw	high STR_152
 17886  00426A  6F83               	movwf	(_printStatistics$1374+1)& (0+255),b
 17887  00426C  0E73               	movlw	low STR_152
 17888  00426E                     L23:
 17889  00426E  6F82               	movwf	_printStatistics$1374& (0+255),b
 17890                           
 17891                           ; BSR set to: 0
 17892  004270  0E01               	movlw	high _wrkbuf
 17893  004272  0100               	movlb	0	; () banked
 17894  004274  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17895  004276  0E74               	movlw	low _wrkbuf
 17896  004278  6F60               	movwf	?_sprintf& (0+255),b
 17897  00427A  C082  F062         	movff	_printStatistics$1374,?_sprintf+2
 17898  00427E  C083  F063         	movff	_printStatistics$1374+1,?_sprintf+3
 17899  004282  C10C  F064         	movff	_cntRxFrames,?_sprintf+4
 17900  004286  C10D  F065         	movff	_cntRxFrames+1,?_sprintf+5
 17901  00428A  C10E  F066         	movff	_cntRxFrames+2,?_sprintf+6
 17902  00428E  C10F  F067         	movff	_cntRxFrames+3,?_sprintf+7
 17903  004292  EC5F  F029         	call	_sprintf	;wreg free
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;main.c: 2080: putsUSART(wrkbuf);
 17907  004296  0101               	movlb	1	; () banked
 17908  004298  0E01               	movlw	high _wrkbuf
 17909  00429A  6E1B               	movwf	?_putsUSART+1,c
 17910  00429C  0E74               	movlw	low _wrkbuf
 17911  00429E  6E1A               	movwf	?_putsUSART,c
 17912  0042A0  EC2E  F011         	call	_putsUSART	;wreg free
 17913                           
 17914                           ;main.c: 2081: putsUSART((char *) "\r\n");
 17915  0042A4  0E71               	movlw	high (STR_188+50)
 17916  0042A6  6E1B               	movwf	?_putsUSART+1,c
 17917  0042A8  0EAE               	movlw	low (STR_188+50)
 17918  0042AA  6E1A               	movwf	?_putsUSART,c
 17919  0042AC  EC2E  F011         	call	_putsUSART	;wreg free
 17920                           
 17921                           ;main.c: 2083: putsUSART((char *) "Received CAN bytes: ");
 17922  0042B0  0E7A               	movlw	high STR_163
 17923  0042B2  6E1B               	movwf	?_putsUSART+1,c
 17924  0042B4  0E32               	movlw	low STR_163
 17925  0042B6  6E1A               	movwf	?_putsUSART,c
 17926  0042B8  EC2E  F011         	call	_putsUSART	;wreg free
 17927                           
 17928                           ;main.c: 2084: sprintf(wrkbuf, bHex ? "0x%08X" : "%lu", cntRxBytes);
 17929  0042BC  0100               	movlb	0	; () banked
 17930  0042BE  67D3               	tstfsz	_bHex& (0+255),b
 17931  0042C0  D004               	goto	l13814
 17932                           
 17933                           ; BSR set to: 0
 17934  0042C2  0E7C               	movlw	high STR_153
 17935  0042C4  6F85               	movwf	(_printStatistics$1380+1)& (0+255),b
 17936  0042C6  0EE1               	movlw	low STR_153
 17937  0042C8  D003               	goto	L24
 17938  0042CA                     l13814:
 17939                           
 17940                           ; BSR set to: 0
 17941  0042CA  0E7C               	movlw	high STR_152
 17942  0042CC  6F85               	movwf	(_printStatistics$1380+1)& (0+255),b
 17943  0042CE  0E73               	movlw	low STR_152
 17944  0042D0                     L24:
 17945  0042D0  6F84               	movwf	_printStatistics$1380& (0+255),b
 17946                           
 17947                           ; BSR set to: 0
 17948  0042D2  0E01               	movlw	high _wrkbuf
 17949  0042D4  0100               	movlb	0	; () banked
 17950  0042D6  6F61               	movwf	(?_sprintf+1)& (0+255),b
 17951  0042D8  0E74               	movlw	low _wrkbuf
 17952  0042DA  6F60               	movwf	?_sprintf& (0+255),b
 17953  0042DC  C084  F062         	movff	_printStatistics$1380,?_sprintf+2
 17954  0042E0  C085  F063         	movff	_printStatistics$1380+1,?_sprintf+3
 17955  0042E4  C108  F064         	movff	_cntRxBytes,?_sprintf+4
 17956  0042E8  C109  F065         	movff	_cntRxBytes+1,?_sprintf+5
 17957  0042EC  C10A  F066         	movff	_cntRxBytes+2,?_sprintf+6
 17958  0042F0  C10B  F067         	movff	_cntRxBytes+3,?_sprintf+7
 17959  0042F4  EC5F  F029         	call	_sprintf	;wreg free
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;main.c: 2085: putsUSART(wrkbuf);
 17963  0042F8  0101               	movlb	1	; () banked
 17964  0042FA  0E01               	movlw	high _wrkbuf
 17965  0042FC  6E1B               	movwf	?_putsUSART+1,c
 17966  0042FE  0E74               	movlw	low _wrkbuf
 17967  004300  6E1A               	movwf	?_putsUSART,c
 17968  004302  EC2E  F011         	call	_putsUSART	;wreg free
 17969                           
 17970                           ;main.c: 2086: putsUSART((char *) "\r\n");
 17971  004306  0E71               	movlw	high (STR_188+50)
 17972  004308  6E1B               	movwf	?_putsUSART+1,c
 17973  00430A  0EAE               	movlw	low (STR_188+50)
 17974  00430C  6E1A               	movwf	?_putsUSART,c
 17975  00430E  EF2E  F011         	goto	_putsUSART	;wreg free
 17976  004312                     __end_of_printStatistics:
 17977                           	opt stack 0
 17978                           tblptru	equ	0xFF8
 17979                           tblptrh	equ	0xFF7
 17980                           tblptrl	equ	0xFF6
 17981                           tablat	equ	0xFF5
 17982                           prodh	equ	0xFF4
 17983                           prodl	equ	0xFF3
 17984                           intcon	equ	0xFF2
 17985                           indf0	equ	0xFEF
 17986                           postinc0	equ	0xFEE
 17987                           fsr0h	equ	0xFEA
 17988                           fsr0l	equ	0xFE9
 17989                           wreg	equ	0xFE8
 17990                           indf1	equ	0xFE7
 17991                           postinc1	equ	0xFE6
 17992                           postdec1	equ	0xFE5
 17993                           fsr1h	equ	0xFE2
 17994                           fsr1l	equ	0xFE1
 17995                           indf2	equ	0xFDF
 17996                           postinc2	equ	0xFDE
 17997                           postdec2	equ	0xFDD
 17998                           plusw2	equ	0xFDB
 17999                           fsr2h	equ	0xFDA
 18000                           fsr2l	equ	0xFD9
 18001                           status	equ	0xFD8
 18002                           
 18003 ;; *************** function _atoi *****************
 18004 ;; Defined at:
 18005 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\atoi.c"
 18006 ;; Parameters:    Size  Location     Type
 18007 ;;  s               2   30[COMRAM] PTR const unsigned char 
 18008 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 18009 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 18010 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 18011 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 18012 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 18013 ;;		 -> STR_30(2), NULL(0), STR_29(2), cmdbuf(80), 
 18014 ;; Auto vars:     Size  Location     Type
 18015 ;;  a               2   35[COMRAM] int 
 18016 ;;  sign            1   34[COMRAM] unsigned char 
 18017 ;; Return value:  Size  Location     Type
 18018 ;;                  2   30[COMRAM] int 
 18019 ;; Registers used:
 18020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18021 ;; Tracked objects:
 18022 ;;		On entry : C/2
 18023 ;;		On exit  : 0/0
 18024 ;;		Unchanged: 0/0
 18025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18026 ;;      Params:         2       0       0       0       0       0       0
 18027 ;;      Locals:         3       0       0       0       0       0       0
 18028 ;;      Temps:          2       0       0       0       0       0       0
 18029 ;;      Totals:         7       0       0       0       0       0       0
 18030 ;;Total ram usage:        7 bytes
 18031 ;; Hardware stack levels used:    1
 18032 ;; Hardware stack levels required when called:    3
 18033 ;; This function calls:
 18034 ;;		_isdigit
 18035 ;;		___wmul
 18036 ;; This function is called by:
 18037 ;;		_doModeVerbose
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041                           	psect	text39
 18042  0036A8                     __ptext39:
 18043                           	opt stack 0
 18044  0036A8                     _atoi:
 18045                           	opt stack 25
 18046                           
 18047                           ;incstack = 0
 18048                           ;incstack = 0
 18049  0036A8  D002               	goto	l10718
 18050  0036AA                     l10716:
 18051  0036AA  4A1F               	infsnz	atoi@s,f,c
 18052  0036AC  2A20               	incf	atoi@s+1,f,c
 18053  0036AE                     l10718:
 18054  0036AE  501F               	movf	atoi@s,w,c
 18055  0036B0  6EF6               	movwf	tblptrl,c
 18056  0036B2  6EE9               	movwf	fsr0l,c
 18057  0036B4  0E05               	movlw	(high __ramtop+-1)
 18058  0036B6  6EEA               	movwf	fsr0h,c
 18059  0036B8  5020               	movf	atoi@s+1,w,c
 18060  0036BA  64EA               	cpfsgt	fsr0h,c
 18061  0036BC  D003               	bra	u13257
 18062  0036BE  6EEA               	movwf	fsr0h,c
 18063  0036C0  50EF               	movf	indf0,w,c
 18064  0036C2  D003               	bra	u13250
 18065  0036C4                     u13257:
 18066  0036C4  6EF7               	movwf	tblptrh,c
 18067  0036C6  0008               	tblrd		*
 18068  0036C8  50F5               	movf	tablat,w,c
 18069  0036CA                     u13250:
 18070  0036CA  0A20               	xorlw	32
 18071  0036CC  E0EE               	bz	l10716
 18072  0036CE  D864               	call	PL22	;call to abstracted procedure
 18073  0036D0  64EA               	cpfsgt	fsr0h,c
 18074  0036D2  D003               	bra	u13277
 18075  0036D4  6EEA               	movwf	fsr0h,c
 18076  0036D6  50EF               	movf	indf0,w,c
 18077  0036D8  D003               	bra	u13270
 18078  0036DA                     u13277:
 18079  0036DA  6EF7               	movwf	tblptrh,c
 18080  0036DC  0008               	tblrd		*
 18081  0036DE  50F5               	movf	tablat,w,c
 18082  0036E0                     u13270:
 18083  0036E0  0A09               	xorlw	9
 18084  0036E2  E0E3               	bz	l10716
 18085  0036E4  6A24               	clrf	atoi@a,c
 18086  0036E6  6A25               	clrf	atoi@a+1,c
 18087  0036E8  6A23               	clrf	atoi@sign,c
 18088  0036EA  D856               	call	PL22	;call to abstracted procedure
 18089  0036EC  64EA               	cpfsgt	fsr0h,c
 18090  0036EE  D003               	bra	u13297
 18091  0036F0  6EEA               	movwf	fsr0h,c
 18092  0036F2  50EF               	movf	indf0,w,c
 18093  0036F4  D003               	bra	u13290
 18094  0036F6                     u13297:
 18095  0036F6  6EF7               	movwf	tblptrh,c
 18096  0036F8  0008               	tblrd		*
 18097  0036FA  50F5               	movf	tablat,w,c
 18098  0036FC                     u13290:
 18099  0036FC  0A2D               	xorlw	45
 18100  0036FE  E102               	bnz	l10726
 18101  003700  2A23               	incf	atoi@sign,f,c
 18102  003702  D00B               	goto	l10728
 18103  003704                     l10726:
 18104  003704  D849               	call	PL22	;call to abstracted procedure
 18105  003706  64EA               	cpfsgt	fsr0h,c
 18106  003708  D003               	bra	u13317
 18107  00370A  6EEA               	movwf	fsr0h,c
 18108  00370C  50EF               	movf	indf0,w,c
 18109  00370E  D003               	bra	u13310
 18110  003710                     u13317:
 18111  003710  6EF7               	movwf	tblptrh,c
 18112  003712  0008               	tblrd		*
 18113  003714  50F5               	movf	tablat,w,c
 18114  003716                     u13310:
 18115  003716  0A2B               	xorlw	43
 18116  003718  E11F               	bnz	l10734
 18117  00371A                     l10728:
 18118  00371A  4A1F               	infsnz	atoi@s,f,c
 18119  00371C  2A20               	incf	atoi@s+1,f,c
 18120  00371E  D01C               	goto	l10734
 18121  003720                     l10730:
 18122  003720  C024  F019         	movff	atoi@a,?___wmul
 18123  003724  C025  F01A         	movff	atoi@a+1,?___wmul+1
 18124  003728  6A1C               	clrf	?___wmul+3,c
 18125  00372A  0E0A               	movlw	10
 18126  00372C  6E1B               	movwf	?___wmul+2,c
 18127  00372E  EC14  F00F         	call	___wmul	;wreg free
 18128  003732  D832               	call	PL22	;call to abstracted procedure
 18129  003734  64EA               	cpfsgt	fsr0h,c
 18130  003736  D003               	bra	u13337
 18131  003738  6EEA               	movwf	fsr0h,c
 18132  00373A  50EF               	movf	indf0,w,c
 18133  00373C  D003               	bra	u13330
 18134  00373E                     u13337:
 18135  00373E  6EF7               	movwf	tblptrh,c
 18136  003740  0008               	tblrd		*
 18137  003742  50F5               	movf	tablat,w,c
 18138  003744                     u13330:
 18139  003744  2619               	addwf	?___wmul,f,c
 18140  003746  0E00               	movlw	0
 18141  003748  221A               	addwfc	?___wmul+1,f,c
 18142  00374A  0ED0               	movlw	208
 18143  00374C  2419               	addwf	?___wmul,w,c
 18144  00374E  6E24               	movwf	atoi@a,c
 18145  003750  0EFF               	movlw	255
 18146  003752  201A               	addwfc	?___wmul+1,w,c
 18147  003754  6E25               	movwf	atoi@a+1,c
 18148  003756  D7E1               	goto	l10728
 18149  003758                     l10734:
 18150  003758  D81F               	call	PL22	;call to abstracted procedure
 18151  00375A  64EA               	cpfsgt	fsr0h,c
 18152  00375C  D003               	bra	u13347
 18153  00375E  6EEA               	movwf	fsr0h,c
 18154  003760  50EF               	movf	indf0,w,c
 18155  003762  D003               	bra	u13340
 18156  003764                     u13347:
 18157  003764  6EF7               	movwf	tblptrh,c
 18158  003766  0008               	tblrd		*
 18159  003768  50F5               	movf	tablat,w,c
 18160  00376A                     u13340:
 18161  00376A  ECAD  F00E         	call	_isdigit
 18162  00376E  E2D8               	bc	l10730
 18163  003770  5023               	movf	atoi@sign,w,c
 18164  003772  E00D               	bz	l1934
 18165  003774  C024  F021         	movff	atoi@a,??_atoi
 18166  003778  C025  F022         	movff	atoi@a+1,??_atoi+1
 18167  00377C  1E21               	comf	??_atoi,f,c
 18168  00377E  1E22               	comf	??_atoi+1,f,c
 18169  003780  4A21               	infsnz	??_atoi,f,c
 18170  003782  2A22               	incf	??_atoi+1,f,c
 18171  003784  C021  F01F         	movff	??_atoi,?_atoi
 18172  003788  C022  F020         	movff	??_atoi+1,?_atoi+1
 18173  00378C  D004               	goto	l1935
 18174  00378E                     l1934:
 18175  00378E  C024  F01F         	movff	atoi@a,?_atoi
 18176  003792  C025  F020         	movff	atoi@a+1,?_atoi+1
 18177  003796                     l1935:
 18178  003796  0012               	return	
 18179  003798                     __end_of_atoi:
 18180                           	opt stack 0
 18181  003798                     PL22:
 18182                           	opt stack 25
 18183  003798  501F               	movf	atoi@s,w,c
 18184  00379A  6EF6               	movwf	tblptrl,c
 18185  00379C  6EE9               	movwf	fsr0l,c
 18186  00379E  0E05               	movlw	(high __ramtop+-1)
 18187  0037A0  6EEA               	movwf	fsr0h,c
 18188  0037A2  5020               	movf	atoi@s+1,w,c
 18189  0037A4  0012               	return	
 18190  0037A6                     __end_ofPL22:
 18191                           	opt stack 0
 18192                           tblptru	equ	0xFF8
 18193                           tblptrh	equ	0xFF7
 18194                           tblptrl	equ	0xFF6
 18195                           tablat	equ	0xFF5
 18196                           prodh	equ	0xFF4
 18197                           prodl	equ	0xFF3
 18198                           intcon	equ	0xFF2
 18199                           indf0	equ	0xFEF
 18200                           postinc0	equ	0xFEE
 18201                           fsr0h	equ	0xFEA
 18202                           fsr0l	equ	0xFE9
 18203                           wreg	equ	0xFE8
 18204                           indf1	equ	0xFE7
 18205                           postinc1	equ	0xFE6
 18206                           postdec1	equ	0xFE5
 18207                           fsr1h	equ	0xFE2
 18208                           fsr1l	equ	0xFE1
 18209                           indf2	equ	0xFDF
 18210                           postinc2	equ	0xFDE
 18211                           postdec2	equ	0xFDD
 18212                           plusw2	equ	0xFDB
 18213                           fsr2h	equ	0xFDA
 18214                           fsr2l	equ	0xFD9
 18215                           status	equ	0xFD8
 18216                           
 18217 ;; *************** function _strtok *****************
 18218 ;; Defined at:
 18219 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strtok.c"
 18220 ;; Parameters:    Size  Location     Type
 18221 ;;  s1              2   36[COMRAM] PTR unsigned char 
 18222 ;;		 -> NULL(0), cmdbuf(80), 
 18223 ;;  s2              2   38[COMRAM] PTR const unsigned char 
 18224 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 18225 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 18226 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 18227 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 18228 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 18229 ;;		 -> STR_30(2), STR_29(2), 
 18230 ;; Auto vars:     Size  Location     Type
 18231 ;;		None
 18232 ;; Return value:  Size  Location     Type
 18233 ;;                  2   36[COMRAM] PTR unsigned char 
 18234 ;; Registers used:
 18235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/1
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18241 ;;      Params:         4       0       0       0       0       0       0
 18242 ;;      Locals:         0       0       0       0       0       0       0
 18243 ;;      Temps:          0       0       0       0       0       0       0
 18244 ;;      Totals:         4       0       0       0       0       0       0
 18245 ;;Total ram usage:        4 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:    4
 18248 ;; This function calls:
 18249 ;;		_strspn
 18250 ;;		_strcspn
 18251 ;; This function is called by:
 18252 ;;		_doModeVerbose
 18253 ;; This function uses a non-reentrant model
 18254 ;;
 18255                           
 18256                           	psect	text40
 18257  0029B6                     __ptext40:
 18258                           	opt stack 0
 18259  0029B6                     _strtok:
 18260                           	opt stack 24
 18261                           
 18262                           ;incstack = 0
 18263                           ;incstack = 0
 18264  0029B6  5026               	movf	strtok@s1+1,w,c
 18265  0029B8  1025               	iorwf	strtok@s1,w,c
 18266  0029BA  E104               	bnz	l10696
 18267  0029BC  C032  F025         	movff	strtok@sp,strtok@s1
 18268  0029C0  C033  F026         	movff	strtok@sp+1,strtok@s1+1
 18269  0029C4                     l10696:
 18270  0029C4  5026               	movf	strtok@s1+1,w,c
 18271  0029C6  1025               	iorwf	strtok@s1,w,c
 18272  0029C8  E016               	bz	L25
 18273  0029CA  C025  F01F         	movff	strtok@s1,?_strspn
 18274  0029CE  C026  F020         	movff	strtok@s1+1,?_strspn+1
 18275  0029D2  C027  F021         	movff	strtok@s2,?_strspn+2
 18276  0029D6  C028  F022         	movff	strtok@s2+1,?_strspn+3
 18277  0029DA  EC7B  F010         	call	_strspn	;wreg free
 18278  0029DE  501F               	movf	?_strspn,w,c
 18279  0029E0  2625               	addwf	strtok@s1,f,c
 18280  0029E2  5020               	movf	?_strspn+1,w,c
 18281  0029E4  2226               	addwfc	strtok@s1+1,f,c
 18282  0029E6  C025  FFD9         	movff	strtok@s1,fsr2l
 18283  0029EA  C026  FFDA         	movff	strtok@s1+1,fsr2h
 18284  0029EE  50DF               	movf	indf2,w,c
 18285  0029F0  E105               	bnz	l10706
 18286  0029F2  6A32               	clrf	strtok@sp,c
 18287  0029F4  6A33               	clrf	strtok@sp+1,c
 18288  0029F6                     L25:
 18289  0029F6  6A25               	clrf	?_strtok,c
 18290  0029F8  6A26               	clrf	?_strtok+1,c
 18291  0029FA  D025               	goto	l2427
 18292  0029FC                     l10706:
 18293  0029FC  C025  F01F         	movff	strtok@s1,?_strcspn
 18294  002A00  C026  F020         	movff	strtok@s1+1,?_strcspn+1
 18295  002A04  C027  F021         	movff	strtok@s2,?_strcspn+2
 18296  002A08  C028  F022         	movff	strtok@s2+1,?_strcspn+3
 18297  002A0C  EC9D  F010         	call	_strcspn	;wreg free
 18298  002A10  501F               	movf	?_strcspn,w,c
 18299  002A12  2425               	addwf	strtok@s1,w,c
 18300  002A14  6E32               	movwf	strtok@sp,c
 18301  002A16  5020               	movf	?_strcspn+1,w,c
 18302  002A18  2026               	addwfc	strtok@s1+1,w,c
 18303  002A1A  6E33               	movwf	strtok@sp+1,c
 18304  002A1C  C032  FFD9         	movff	strtok@sp,fsr2l
 18305  002A20  C033  FFDA         	movff	strtok@sp+1,fsr2h
 18306  002A24  50DF               	movf	indf2,w,c
 18307  002A26  E009               	bz	l2429
 18308  002A28  C032  FFD9         	movff	strtok@sp,fsr2l
 18309  002A2C  C033  FFDA         	movff	strtok@sp+1,fsr2h
 18310  002A30  0E00               	movlw	0
 18311  002A32  6EDF               	movwf	indf2,c
 18312  002A34  4A32               	infsnz	strtok@sp,f,c
 18313  002A36  2A33               	incf	strtok@sp+1,f,c
 18314  002A38  D002               	goto	l2430
 18315  002A3A                     l2429:
 18316  002A3A  6A32               	clrf	strtok@sp,c
 18317  002A3C  6A33               	clrf	strtok@sp+1,c
 18318  002A3E                     l2430:
 18319  002A3E  C025  F025         	movff	strtok@s1,?_strtok
 18320  002A42  C026  F026         	movff	strtok@s1+1,?_strtok+1
 18321  002A46                     l2427:
 18322  002A46  0012               	return	
 18323  002A48                     __end_of_strtok:
 18324                           	opt stack 0
 18325                           tblptru	equ	0xFF8
 18326                           tblptrh	equ	0xFF7
 18327                           tblptrl	equ	0xFF6
 18328                           tablat	equ	0xFF5
 18329                           prodh	equ	0xFF4
 18330                           prodl	equ	0xFF3
 18331                           intcon	equ	0xFF2
 18332                           indf0	equ	0xFEF
 18333                           postinc0	equ	0xFEE
 18334                           fsr0h	equ	0xFEA
 18335                           fsr0l	equ	0xFE9
 18336                           wreg	equ	0xFE8
 18337                           indf1	equ	0xFE7
 18338                           postinc1	equ	0xFE6
 18339                           postdec1	equ	0xFE5
 18340                           fsr1h	equ	0xFE2
 18341                           fsr1l	equ	0xFE1
 18342                           indf2	equ	0xFDF
 18343                           postinc2	equ	0xFDE
 18344                           postdec2	equ	0xFDD
 18345                           plusw2	equ	0xFDB
 18346                           fsr2h	equ	0xFDA
 18347                           fsr2l	equ	0xFD9
 18348                           status	equ	0xFD8
 18349                           
 18350 ;; *************** function _strcspn *****************
 18351 ;; Defined at:
 18352 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcspn.c"
 18353 ;; Parameters:    Size  Location     Type
 18354 ;;  s1              2   30[COMRAM] PTR const unsigned char 
 18355 ;;		 -> NULL(0), cmdbuf(80), 
 18356 ;;  s2              2   32[COMRAM] PTR const unsigned char 
 18357 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 18358 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 18359 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 18360 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 18361 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 18362 ;;		 -> STR_30(2), STR_29(2), 
 18363 ;; Auto vars:     Size  Location     Type
 18364 ;;  i               2   34[COMRAM] unsigned int 
 18365 ;; Return value:  Size  Location     Type
 18366 ;;                  2   30[COMRAM] unsigned int 
 18367 ;; Registers used:
 18368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18369 ;; Tracked objects:
 18370 ;;		On entry : 0/1
 18371 ;;		On exit  : 0/0
 18372 ;;		Unchanged: 0/0
 18373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18374 ;;      Params:         4       0       0       0       0       0       0
 18375 ;;      Locals:         2       0       0       0       0       0       0
 18376 ;;      Temps:          0       0       0       0       0       0       0
 18377 ;;      Totals:         6       0       0       0       0       0       0
 18378 ;;Total ram usage:        6 bytes
 18379 ;; Hardware stack levels used:    1
 18380 ;; Hardware stack levels required when called:    3
 18381 ;; This function calls:
 18382 ;;		_strchr
 18383 ;; This function is called by:
 18384 ;;		_strtok
 18385 ;; This function uses a non-reentrant model
 18386 ;;
 18387                           
 18388                           	psect	text41
 18389  00213A                     __ptext41:
 18390                           	opt stack 0
 18391  00213A                     _strcspn:
 18392                           	opt stack 24
 18393                           
 18394                           ;incstack = 0
 18395                           ;incstack = 0
 18396  00213A  6A23               	clrf	strcspn@i,c
 18397  00213C  6A24               	clrf	strcspn@i+1,c
 18398  00213E  D004               	goto	l12472
 18399  002140                     l12470:
 18400  002140  4A1F               	infsnz	strcspn@s1,f,c
 18401  002142  2A20               	incf	strcspn@s1+1,f,c
 18402  002144  4A23               	infsnz	strcspn@i,f,c
 18403  002146  2A24               	incf	strcspn@i+1,f,c
 18404  002148                     l12472:
 18405  002148  C01F  FFD9         	movff	strcspn@s1,fsr2l
 18406  00214C  C020  FFDA         	movff	strcspn@s1+1,fsr2h
 18407  002150  50DF               	movf	indf2,w,c
 18408  002152  E010               	bz	l2454
 18409  002154  C021  F019         	movff	strcspn@s2,?_strchr
 18410  002158  C022  F01A         	movff	strcspn@s2+1,?_strchr+1
 18411  00215C  C01F  FFD9         	movff	strcspn@s1,fsr2l
 18412  002160  C020  FFDA         	movff	strcspn@s1+1,fsr2h
 18413  002164  50DF               	movf	indf2,w,c
 18414  002166  6E1B               	movwf	?_strchr+2,c
 18415  002168  6A1C               	clrf	?_strchr+3,c
 18416  00216A  ECB1  F011         	call	_strchr	;wreg free
 18417  00216E  501A               	movf	?_strchr+1,w,c
 18418  002170  1019               	iorwf	?_strchr,w,c
 18419  002172  E0E6               	bz	l12470
 18420  002174                     l2454:
 18421  002174  C023  F01F         	movff	strcspn@i,?_strcspn
 18422  002178  C024  F020         	movff	strcspn@i+1,?_strcspn+1
 18423  00217C  0012               	return	
 18424  00217E                     __end_of_strcspn:
 18425                           	opt stack 0
 18426                           tblptru	equ	0xFF8
 18427                           tblptrh	equ	0xFF7
 18428                           tblptrl	equ	0xFF6
 18429                           tablat	equ	0xFF5
 18430                           prodh	equ	0xFF4
 18431                           prodl	equ	0xFF3
 18432                           intcon	equ	0xFF2
 18433                           indf0	equ	0xFEF
 18434                           postinc0	equ	0xFEE
 18435                           fsr0h	equ	0xFEA
 18436                           fsr0l	equ	0xFE9
 18437                           wreg	equ	0xFE8
 18438                           indf1	equ	0xFE7
 18439                           postinc1	equ	0xFE6
 18440                           postdec1	equ	0xFE5
 18441                           fsr1h	equ	0xFE2
 18442                           fsr1l	equ	0xFE1
 18443                           indf2	equ	0xFDF
 18444                           postinc2	equ	0xFDE
 18445                           postdec2	equ	0xFDD
 18446                           plusw2	equ	0xFDB
 18447                           fsr2h	equ	0xFDA
 18448                           fsr2l	equ	0xFD9
 18449                           status	equ	0xFD8
 18450                           
 18451 ;; *************** function _strspn *****************
 18452 ;; Defined at:
 18453 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strspn.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;  s1              2   30[COMRAM] PTR const unsigned char 
 18456 ;;		 -> NULL(0), cmdbuf(80), 
 18457 ;;  s2              2   32[COMRAM] PTR const unsigned char 
 18458 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 18459 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 18460 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 18461 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 18462 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 18463 ;;		 -> STR_30(2), STR_29(2), 
 18464 ;; Auto vars:     Size  Location     Type
 18465 ;;  i               2   34[COMRAM] unsigned int 
 18466 ;; Return value:  Size  Location     Type
 18467 ;;                  2   30[COMRAM] unsigned int 
 18468 ;; Registers used:
 18469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18470 ;; Tracked objects:
 18471 ;;		On entry : 0/1
 18472 ;;		On exit  : 0/0
 18473 ;;		Unchanged: 0/0
 18474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18475 ;;      Params:         4       0       0       0       0       0       0
 18476 ;;      Locals:         2       0       0       0       0       0       0
 18477 ;;      Temps:          0       0       0       0       0       0       0
 18478 ;;      Totals:         6       0       0       0       0       0       0
 18479 ;;Total ram usage:        6 bytes
 18480 ;; Hardware stack levels used:    1
 18481 ;; Hardware stack levels required when called:    3
 18482 ;; This function calls:
 18483 ;;		_strchr
 18484 ;; This function is called by:
 18485 ;;		_strtok
 18486 ;; This function uses a non-reentrant model
 18487 ;;
 18488                           
 18489                           	psect	text42
 18490  0020F6                     __ptext42:
 18491                           	opt stack 0
 18492  0020F6                     _strspn:
 18493                           	opt stack 24
 18494                           
 18495                           ;incstack = 0
 18496                           ;incstack = 0
 18497  0020F6  6A23               	clrf	strspn@i,c
 18498  0020F8  6A24               	clrf	strspn@i+1,c
 18499  0020FA  D004               	goto	l12464
 18500  0020FC                     l12462:
 18501  0020FC  4A1F               	infsnz	strspn@s1,f,c
 18502  0020FE  2A20               	incf	strspn@s1+1,f,c
 18503  002100  4A23               	infsnz	strspn@i,f,c
 18504  002102  2A24               	incf	strspn@i+1,f,c
 18505  002104                     l12464:
 18506  002104  C01F  FFD9         	movff	strspn@s1,fsr2l
 18507  002108  C020  FFDA         	movff	strspn@s1+1,fsr2h
 18508  00210C  50DF               	movf	indf2,w,c
 18509  00210E  E010               	bz	l2473
 18510  002110  C021  F019         	movff	strspn@s2,?_strchr
 18511  002114  C022  F01A         	movff	strspn@s2+1,?_strchr+1
 18512  002118  C01F  FFD9         	movff	strspn@s1,fsr2l
 18513  00211C  C020  FFDA         	movff	strspn@s1+1,fsr2h
 18514  002120  50DF               	movf	indf2,w,c
 18515  002122  6E1B               	movwf	?_strchr+2,c
 18516  002124  6A1C               	clrf	?_strchr+3,c
 18517  002126  ECB1  F011         	call	_strchr	;wreg free
 18518  00212A  501A               	movf	?_strchr+1,w,c
 18519  00212C  1019               	iorwf	?_strchr,w,c
 18520  00212E  E1E6               	bnz	l12462
 18521  002130                     l2473:
 18522  002130  C023  F01F         	movff	strspn@i,?_strspn
 18523  002134  C024  F020         	movff	strspn@i+1,?_strspn+1
 18524  002138  0012               	return	
 18525  00213A                     __end_of_strspn:
 18526                           	opt stack 0
 18527                           tblptru	equ	0xFF8
 18528                           tblptrh	equ	0xFF7
 18529                           tblptrl	equ	0xFF6
 18530                           tablat	equ	0xFF5
 18531                           prodh	equ	0xFF4
 18532                           prodl	equ	0xFF3
 18533                           intcon	equ	0xFF2
 18534                           indf0	equ	0xFEF
 18535                           postinc0	equ	0xFEE
 18536                           fsr0h	equ	0xFEA
 18537                           fsr0l	equ	0xFE9
 18538                           wreg	equ	0xFE8
 18539                           indf1	equ	0xFE7
 18540                           postinc1	equ	0xFE6
 18541                           postdec1	equ	0xFE5
 18542                           fsr1h	equ	0xFE2
 18543                           fsr1l	equ	0xFE1
 18544                           indf2	equ	0xFDF
 18545                           postinc2	equ	0xFDE
 18546                           postdec2	equ	0xFDD
 18547                           plusw2	equ	0xFDB
 18548                           fsr2h	equ	0xFDA
 18549                           fsr2l	equ	0xFD9
 18550                           status	equ	0xFD8
 18551                           
 18552 ;; *************** function _strchr *****************
 18553 ;; Defined at:
 18554 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strchr.c"
 18555 ;; Parameters:    Size  Location     Type
 18556 ;;  ptr             2   24[COMRAM] PTR const unsigned char 
 18557 ;;		 -> STR_104(2), STR_102(2), STR_100(2), STR_98(2), 
 18558 ;;		 -> STR_95(2), STR_92(2), STR_90(2), STR_88(2), 
 18559 ;;		 -> STR_86(2), STR_83(2), STR_73(2), STR_71(2), 
 18560 ;;		 -> STR_69(2), STR_50(2), STR_48(2), STR_46(2), 
 18561 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
 18562 ;;		 -> STR_30(2), NULL(0), STR_29(2), cmdbuf(80), 
 18563 ;;  chr             2   26[COMRAM] int 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;		None
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  2   24[COMRAM] PTR unsigned char 
 18568 ;; Registers used:
 18569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/2
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18575 ;;      Params:         4       0       0       0       0       0       0
 18576 ;;      Locals:         0       0       0       0       0       0       0
 18577 ;;      Temps:          2       0       0       0       0       0       0
 18578 ;;      Totals:         6       0       0       0       0       0       0
 18579 ;;Total ram usage:        6 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; Hardware stack levels required when called:    2
 18582 ;; This function calls:
 18583 ;;		Nothing
 18584 ;; This function is called by:
 18585 ;;		_doModeVerbose
 18586 ;;		_strcspn
 18587 ;;		_strspn
 18588 ;; This function uses a non-reentrant model
 18589 ;;
 18590                           
 18591                           	psect	text43
 18592  002362                     __ptext43:
 18593                           	opt stack 0
 18594  002362                     _strchr:
 18595                           	opt stack 26
 18596  002362                     l2375:
 18597  002362  5019               	movf	strchr@ptr,w,c
 18598  002364  6EF6               	movwf	tblptrl,c
 18599  002366  6EE9               	movwf	fsr0l,c
 18600  002368  0E05               	movlw	(high __ramtop+-1)
 18601  00236A  6EEA               	movwf	fsr0h,c
 18602  00236C  501A               	movf	strchr@ptr+1,w,c
 18603  00236E  64EA               	cpfsgt	fsr0h,c
 18604  002370  D003               	bra	u13617
 18605  002372  6EEA               	movwf	fsr0h,c
 18606  002374  50EF               	movf	indf0,w,c
 18607  002376  D003               	bra	u13610
 18608  002378                     u13617:
 18609  002378  6EF7               	movwf	tblptrh,c
 18610  00237A  0008               	tblrd		*
 18611  00237C  50F5               	movf	tablat,w,c
 18612  00237E                     u13610:
 18613  00237E  181B               	xorwf	strchr@chr,w,c
 18614  002380  E105               	bnz	l10980
 18615  002382  C019  F019         	movff	strchr@ptr,?_strchr
 18616  002386  C01A  F01A         	movff	strchr@ptr+1,?_strchr+1
 18617  00238A  D018               	goto	l2377
 18618  00238C                     l10980:
 18619  00238C  5019               	movf	strchr@ptr,w,c
 18620  00238E  6E1D               	movwf	??_strchr& (0+255),c
 18621  002390  501A               	movf	strchr@ptr+1,w,c
 18622  002392  6E1E               	movwf	(??_strchr+1)& (0+255),c
 18623  002394  4A19               	infsnz	strchr@ptr,f,c
 18624  002396  2A1A               	incf	strchr@ptr+1,f,c
 18625  002398  501D               	movf	??_strchr,w,c
 18626  00239A  6EF6               	movwf	tblptrl,c
 18627  00239C  6EE9               	movwf	fsr0l,c
 18628  00239E  0E05               	movlw	(high __ramtop+-1)
 18629  0023A0  6EEA               	movwf	fsr0h,c
 18630  0023A2  501E               	movf	??_strchr+1,w,c
 18631  0023A4  64EA               	cpfsgt	fsr0h,c
 18632  0023A6  D003               	bra	u13637
 18633  0023A8  6EEA               	movwf	fsr0h,c
 18634  0023AA  50EF               	movf	indf0,w,c
 18635  0023AC  D003               	bra	u13630
 18636  0023AE                     u13637:
 18637  0023AE  6EF7               	movwf	tblptrh,c
 18638  0023B0  0008               	tblrd		*
 18639  0023B2  50F5               	movf	tablat,w,c
 18640  0023B4                     u13630:
 18641  0023B4  0900               	iorlw	0
 18642  0023B6  E1D5               	bnz	l2375
 18643  0023B8  6A19               	clrf	?_strchr,c
 18644  0023BA  6A1A               	clrf	?_strchr+1,c
 18645  0023BC                     l2377:
 18646  0023BC  0012               	return	
 18647  0023BE                     __end_of_strchr:
 18648                           	opt stack 0
 18649                           tblptru	equ	0xFF8
 18650                           tblptrh	equ	0xFF7
 18651                           tblptrl	equ	0xFF6
 18652                           tablat	equ	0xFF5
 18653                           prodh	equ	0xFF4
 18654                           prodl	equ	0xFF3
 18655                           intcon	equ	0xFF2
 18656                           indf0	equ	0xFEF
 18657                           postinc0	equ	0xFEE
 18658                           fsr0h	equ	0xFEA
 18659                           fsr0l	equ	0xFE9
 18660                           wreg	equ	0xFE8
 18661                           indf1	equ	0xFE7
 18662                           postinc1	equ	0xFE6
 18663                           postdec1	equ	0xFE5
 18664                           fsr1h	equ	0xFE2
 18665                           fsr1l	equ	0xFE1
 18666                           indf2	equ	0xFDF
 18667                           postinc2	equ	0xFDE
 18668                           postdec2	equ	0xFDD
 18669                           plusw2	equ	0xFDB
 18670                           fsr2h	equ	0xFDA
 18671                           fsr2l	equ	0xFD9
 18672                           status	equ	0xFD8
 18673                           
 18674 ;; *************** function _stristr *****************
 18675 ;; Defined at:
 18676 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\stristr.c"
 18677 ;; Parameters:    Size  Location     Type
 18678 ;;  s1              2   37[COMRAM] PTR const unsigned char 
 18679 ;;		 -> NULL(0), cmdbuf(80), 
 18680 ;;  s2              2   39[COMRAM] PTR const unsigned char 
 18681 ;;		 -> STR_121(6), STR_120(8), STR_118(6), STR_116(5), 
 18682 ;;		 -> STR_114(8), STR_113(6), STR_112(9), STR_111(11), 
 18683 ;;		 -> STR_109(8), STR_107(4), STR_106(5), STR_94(5), 
 18684 ;;		 -> STR_82(7), STR_77(5), STR_68(5), STR_45(5), 
 18685 ;;		 -> STR_44(5), STR_42(5), STR_41(4), STR_40(5), 
 18686 ;;		 -> STR_37(3), STR_28(3), STR_19(7), STR_17(8), 
 18687 ;;		 -> STR_15(7), STR_13(9), STR_11(6), STR_9(7), 
 18688 ;;		 -> STR_7(5), STR_5(5), 
 18689 ;; Auto vars:     Size  Location     Type
 18690 ;;		None
 18691 ;; Return value:  Size  Location     Type
 18692 ;;                  2   37[COMRAM] PTR unsigned char 
 18693 ;; Registers used:
 18694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18695 ;; Tracked objects:
 18696 ;;		On entry : F/1
 18697 ;;		On exit  : 0/0
 18698 ;;		Unchanged: 0/0
 18699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18700 ;;      Params:         4       0       0       0       0       0       0
 18701 ;;      Locals:         0       0       0       0       0       0       0
 18702 ;;      Temps:          0       0       0       0       0       0       0
 18703 ;;      Totals:         4       0       0       0       0       0       0
 18704 ;;Total ram usage:        4 bytes
 18705 ;; Hardware stack levels used:    1
 18706 ;; Hardware stack levels required when called:    4
 18707 ;; This function calls:
 18708 ;;		_strlen
 18709 ;;		_strnicmp
 18710 ;;		_strichr
 18711 ;; This function is called by:
 18712 ;;		_doModeVerbose
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           	psect	text44
 18717  00271E                     __ptext44:
 18718                           	opt stack 0
 18719  00271E                     _stristr:
 18720                           	opt stack 24
 18721                           
 18722                           ; BSR set to: 1
 18723                           
 18724                           ;incstack = 0
 18725                           ;incstack = 0
 18726  00271E  D02F               	goto	l10684
 18727  002720                     l10678:
 18728  002720  C026  F01D         	movff	stristr@s1,?_strnicmp
 18729  002724  C027  F01E         	movff	stristr@s1+1,?_strnicmp+1
 18730  002728  C028  F01F         	movff	stristr@s2,?_strnicmp+2
 18731  00272C  C029  F020         	movff	stristr@s2+1,?_strnicmp+3
 18732  002730  C028  F019         	movff	stristr@s2,?_strlen
 18733  002734  C029  F01A         	movff	stristr@s2+1,?_strlen+1
 18734  002738  EC9E  F00F         	call	_strlen	;wreg free
 18735  00273C  C019  F021         	movff	?_strlen,?_strnicmp+4
 18736  002740  C01A  F022         	movff	?_strlen+1,?_strnicmp+5
 18737  002744  EC10  F012         	call	_strnicmp	;wreg free
 18738  002748  501E               	movf	?_strnicmp+1,w,c
 18739  00274A  101D               	iorwf	?_strnicmp,w,c
 18740  00274C  E105               	bnz	l10682
 18741  00274E  C026  F026         	movff	stristr@s1,?_stristr
 18742  002752  C027  F027         	movff	stristr@s1+1,?_stristr+1
 18743  002756  D01E               	goto	l2396
 18744  002758                     l10682:
 18745  002758  2826               	incf	stristr@s1,w,c
 18746  00275A  6E1A               	movwf	?_strichr,c
 18747  00275C  0E00               	movlw	0
 18748  00275E  2027               	addwfc	stristr@s1+1,w,c
 18749  002760  6E1B               	movwf	?_strichr+1,c
 18750  002762  C028  FFF6         	movff	stristr@s2,tblptrl
 18751  002766  C029  FFF7         	movff	stristr@s2+1,tblptrh
 18752  00276A  0008               	tblrd		*
 18753  00276C  50F5               	movf	tablat,w,c
 18754  00276E  6E1C               	movwf	?_strichr+2,c
 18755  002770  6A1D               	clrf	?_strichr+3,c
 18756  002772  ECDB  F00F         	call	_strichr	;wreg free
 18757  002776  C01A  F026         	movff	?_strichr,stristr@s1
 18758  00277A  C01B  F027         	movff	?_strichr+1,stristr@s1+1
 18759  00277E                     l10684:
 18760  00277E  5027               	movf	stristr@s1+1,w,c
 18761  002780  1026               	iorwf	stristr@s1,w,c
 18762  002782  E006               	bz	l2399
 18763  002784  C026  FFD9         	movff	stristr@s1,fsr2l
 18764  002788  C027  FFDA         	movff	stristr@s1+1,fsr2h
 18765  00278C  50DF               	movf	indf2,w,c
 18766  00278E  E1C8               	bnz	l10678
 18767  002790                     l2399:
 18768  002790  6A26               	clrf	?_stristr,c
 18769  002792  6A27               	clrf	?_stristr+1,c
 18770  002794                     l2396:
 18771  002794  0012               	return	
 18772  002796                     __end_of_stristr:
 18773                           	opt stack 0
 18774                           tblptru	equ	0xFF8
 18775                           tblptrh	equ	0xFF7
 18776                           tblptrl	equ	0xFF6
 18777                           tablat	equ	0xFF5
 18778                           prodh	equ	0xFF4
 18779                           prodl	equ	0xFF3
 18780                           intcon	equ	0xFF2
 18781                           indf0	equ	0xFEF
 18782                           postinc0	equ	0xFEE
 18783                           fsr0h	equ	0xFEA
 18784                           fsr0l	equ	0xFE9
 18785                           wreg	equ	0xFE8
 18786                           indf1	equ	0xFE7
 18787                           postinc1	equ	0xFE6
 18788                           postdec1	equ	0xFE5
 18789                           fsr1h	equ	0xFE2
 18790                           fsr1l	equ	0xFE1
 18791                           indf2	equ	0xFDF
 18792                           postinc2	equ	0xFDE
 18793                           postdec2	equ	0xFDD
 18794                           plusw2	equ	0xFDB
 18795                           fsr2h	equ	0xFDA
 18796                           fsr2l	equ	0xFD9
 18797                           status	equ	0xFD8
 18798                           
 18799 ;; *************** function _strichr *****************
 18800 ;; Defined at:
 18801 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strichr.c"
 18802 ;; Parameters:    Size  Location     Type
 18803 ;;  ptr             2   25[COMRAM] PTR const unsigned char 
 18804 ;;		 -> NULL(0), cmdbuf(80), 
 18805 ;;  chr             2   27[COMRAM] int 
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;		None
 18808 ;; Return value:  Size  Location     Type
 18809 ;;                  2   25[COMRAM] PTR unsigned char 
 18810 ;; Registers used:
 18811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18812 ;; Tracked objects:
 18813 ;;		On entry : 0/1
 18814 ;;		On exit  : 0/0
 18815 ;;		Unchanged: 0/0
 18816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18817 ;;      Params:         4       0       0       0       0       0       0
 18818 ;;      Locals:         0       0       0       0       0       0       0
 18819 ;;      Temps:          0       0       0       0       0       0       0
 18820 ;;      Totals:         4       0       0       0       0       0       0
 18821 ;;Total ram usage:        4 bytes
 18822 ;; Hardware stack levels used:    1
 18823 ;; Hardware stack levels required when called:    3
 18824 ;; This function calls:
 18825 ;;		_toupper
 18826 ;; This function is called by:
 18827 ;;		_stristr
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text45
 18832  001FB6                     __ptext45:
 18833                           	opt stack 0
 18834  001FB6                     _strichr:
 18835                           	opt stack 24
 18836                           
 18837                           ;incstack = 0
 18838                           ;incstack = 0
 18839  001FB6  501C               	movf	strichr@chr,w,c
 18840  001FB8  EC78  F00E         	call	_toupper
 18841  001FBC  6E1C               	movwf	strichr@chr,c
 18842  001FBE  6A1D               	clrf	strichr@chr+1,c
 18843  001FC0  D010               	goto	l12448
 18844  001FC2                     l12442:
 18845  001FC2  C01A  FFD9         	movff	strichr@ptr,fsr2l
 18846  001FC6  C01B  FFDA         	movff	strichr@ptr+1,fsr2h
 18847  001FCA  50DF               	movf	indf2,w,c
 18848  001FCC  EC78  F00E         	call	_toupper
 18849  001FD0  181C               	xorwf	strichr@chr,w,c
 18850  001FD2  E105               	bnz	l12446
 18851  001FD4  C01A  F01A         	movff	strichr@ptr,?_strichr
 18852  001FD8  C01B  F01B         	movff	strichr@ptr+1,?_strichr+1
 18853  001FDC  D00A               	goto	l2463
 18854  001FDE                     l12446:
 18855  001FDE  4A1A               	infsnz	strichr@ptr,f,c
 18856  001FE0  2A1B               	incf	strichr@ptr+1,f,c
 18857  001FE2                     l12448:
 18858  001FE2  C01A  FFD9         	movff	strichr@ptr,fsr2l
 18859  001FE6  C01B  FFDA         	movff	strichr@ptr+1,fsr2h
 18860  001FEA  50DF               	movf	indf2,w,c
 18861  001FEC  E1EA               	bnz	l12442
 18862  001FEE  6A1A               	clrf	?_strichr,c
 18863  001FF0  6A1B               	clrf	?_strichr+1,c
 18864  001FF2                     l2463:
 18865  001FF2  0012               	return	
 18866  001FF4                     __end_of_strichr:
 18867                           	opt stack 0
 18868                           tblptru	equ	0xFF8
 18869                           tblptrh	equ	0xFF7
 18870                           tblptrl	equ	0xFF6
 18871                           tablat	equ	0xFF5
 18872                           prodh	equ	0xFF4
 18873                           prodl	equ	0xFF3
 18874                           intcon	equ	0xFF2
 18875                           indf0	equ	0xFEF
 18876                           postinc0	equ	0xFEE
 18877                           fsr0h	equ	0xFEA
 18878                           fsr0l	equ	0xFE9
 18879                           wreg	equ	0xFE8
 18880                           indf1	equ	0xFE7
 18881                           postinc1	equ	0xFE6
 18882                           postdec1	equ	0xFE5
 18883                           fsr1h	equ	0xFE2
 18884                           fsr1l	equ	0xFE1
 18885                           indf2	equ	0xFDF
 18886                           postinc2	equ	0xFDE
 18887                           postdec2	equ	0xFDD
 18888                           plusw2	equ	0xFDB
 18889                           fsr2h	equ	0xFDA
 18890                           fsr2l	equ	0xFD9
 18891                           status	equ	0xFD8
 18892                           
 18893 ;; *************** function _strnicmp *****************
 18894 ;; Defined at:
 18895 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strnicmp.c"
 18896 ;; Parameters:    Size  Location     Type
 18897 ;;  s1              2   28[COMRAM] PTR const unsigned char 
 18898 ;;		 -> NULL(0), cmdbuf(80), 
 18899 ;;  s2              2   30[COMRAM] PTR const unsigned char 
 18900 ;;		 -> STR_121(6), STR_120(8), STR_118(6), STR_116(5), 
 18901 ;;		 -> STR_114(8), STR_113(6), STR_112(9), STR_111(11), 
 18902 ;;		 -> STR_109(8), STR_107(4), STR_106(5), STR_94(5), 
 18903 ;;		 -> STR_82(7), STR_77(5), STR_68(5), STR_45(5), 
 18904 ;;		 -> STR_44(5), STR_42(5), STR_41(4), STR_40(5), 
 18905 ;;		 -> STR_37(3), STR_28(3), STR_19(7), STR_17(8), 
 18906 ;;		 -> STR_15(7), STR_13(9), STR_11(6), STR_9(7), 
 18907 ;;		 -> STR_7(5), STR_5(5), 
 18908 ;;  len             2   32[COMRAM] unsigned int 
 18909 ;; Auto vars:     Size  Location     Type
 18910 ;;  r               1   36[COMRAM] char 
 18911 ;; Return value:  Size  Location     Type
 18912 ;;                  2   28[COMRAM] int 
 18913 ;; Registers used:
 18914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18915 ;; Tracked objects:
 18916 ;;		On entry : 0/1
 18917 ;;		On exit  : 0/0
 18918 ;;		Unchanged: 0/0
 18919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18920 ;;      Params:         6       0       0       0       0       0       0
 18921 ;;      Locals:         1       0       0       0       0       0       0
 18922 ;;      Temps:          2       0       0       0       0       0       0
 18923 ;;      Totals:         9       0       0       0       0       0       0
 18924 ;;Total ram usage:        9 bytes
 18925 ;; Hardware stack levels used:    1
 18926 ;; Hardware stack levels required when called:    3
 18927 ;; This function calls:
 18928 ;;		_toupper
 18929 ;; This function is called by:
 18930 ;;		_stristr
 18931 ;; This function uses a non-reentrant model
 18932 ;;
 18933                           
 18934                           	psect	text46
 18935  002420                     __ptext46:
 18936                           	opt stack 0
 18937  002420                     _strnicmp:
 18938                           	opt stack 24
 18939                           
 18940                           ;incstack = 0
 18941                           ;incstack = 0
 18942  002420  D026               	goto	l12438
 18943  002422                     l12428:
 18944  002422  C01F  FFF6         	movff	strnicmp@s2,tblptrl
 18945  002426  C020  FFF7         	movff	strnicmp@s2+1,tblptrh
 18946  00242A  0008               	tblrd		*
 18947  00242C  50F5               	movf	tablat,w,c
 18948  00242E  EC78  F00E         	call	_toupper
 18949  002432  6E23               	movwf	??_strnicmp& (0+255),c
 18950  002434  C01D  FFD9         	movff	strnicmp@s1,fsr2l
 18951  002438  C01E  FFDA         	movff	strnicmp@s1+1,fsr2h
 18952  00243C  50DF               	movf	indf2,w,c
 18953  00243E  EC78  F00E         	call	_toupper
 18954  002442  6E24               	movwf	(??_strnicmp+1)& (0+255),c
 18955  002444  5023               	movf	??_strnicmp,w,c
 18956  002446  5C24               	subwf	??_strnicmp+1,w,c
 18957  002448  6E25               	movwf	strnicmp@r,c
 18958  00244A  6625               	tstfsz	strnicmp@r& (0+255),c
 18959  00244C  D006               	goto	l12432
 18960  00244E  C01D  FFD9         	movff	strnicmp@s1,fsr2l
 18961  002452  C01E  FFDA         	movff	strnicmp@s1+1,fsr2h
 18962  002456  50DF               	movf	indf2,w,c
 18963  002458  E106               	bnz	l12436
 18964  00245A                     l12432:
 18965  00245A  5025               	movf	strnicmp@r,w,c
 18966  00245C  6E1D               	movwf	?_strnicmp,c
 18967  00245E  6A1E               	clrf	?_strnicmp+1,c
 18968  002460  BE1D               	btfsc	?_strnicmp,7,c
 18969  002462  061E               	decf	?_strnicmp+1,f,c
 18970  002464  D00D               	goto	l2415
 18971  002466                     l12436:
 18972  002466  4A1D               	infsnz	strnicmp@s1,f,c
 18973  002468  2A1E               	incf	strnicmp@s1+1,f,c
 18974  00246A  4A1F               	infsnz	strnicmp@s2,f,c
 18975  00246C  2A20               	incf	strnicmp@s2+1,f,c
 18976  00246E                     l12438:
 18977  00246E  0621               	decf	strnicmp@len,f,c
 18978  002470  A0D8               	btfss	status,0,c
 18979  002472  0622               	decf	strnicmp@len+1,f,c
 18980  002474  2821               	incf	strnicmp@len& (0+255),w,c
 18981  002476  B4D8               	btfsc	status,2,c
 18982  002478  2822               	incf	(strnicmp@len+1)& (0+255),w,c
 18983  00247A  E1D3               	bnz	l12428
 18984  00247C  6A1D               	clrf	?_strnicmp,c
 18985  00247E  6A1E               	clrf	?_strnicmp+1,c
 18986  002480                     l2415:
 18987  002480  0012               	return	
 18988  002482                     __end_of_strnicmp:
 18989                           	opt stack 0
 18990                           tblptru	equ	0xFF8
 18991                           tblptrh	equ	0xFF7
 18992                           tblptrl	equ	0xFF6
 18993                           tablat	equ	0xFF5
 18994                           prodh	equ	0xFF4
 18995                           prodl	equ	0xFF3
 18996                           intcon	equ	0xFF2
 18997                           indf0	equ	0xFEF
 18998                           postinc0	equ	0xFEE
 18999                           fsr0h	equ	0xFEA
 19000                           fsr0l	equ	0xFE9
 19001                           wreg	equ	0xFE8
 19002                           indf1	equ	0xFE7
 19003                           postinc1	equ	0xFE6
 19004                           postdec1	equ	0xFE5
 19005                           fsr1h	equ	0xFE2
 19006                           fsr1l	equ	0xFE1
 19007                           indf2	equ	0xFDF
 19008                           postinc2	equ	0xFDE
 19009                           postdec2	equ	0xFDD
 19010                           plusw2	equ	0xFDB
 19011                           fsr2h	equ	0xFDA
 19012                           fsr2l	equ	0xFD9
 19013                           status	equ	0xFD8
 19014                           
 19015 ;; *************** function _toupper *****************
 19016 ;; Defined at:
 19017 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\toupper.c"
 19018 ;; Parameters:    Size  Location     Type
 19019 ;;  c               1    wreg     unsigned char 
 19020 ;; Auto vars:     Size  Location     Type
 19021 ;;  c               1   24[COMRAM] unsigned char 
 19022 ;; Return value:  Size  Location     Type
 19023 ;;                  1    wreg      unsigned char 
 19024 ;; Registers used:
 19025 ;;		wreg, status,2, status,0
 19026 ;; Tracked objects:
 19027 ;;		On entry : 0/1
 19028 ;;		On exit  : 0/0
 19029 ;;		Unchanged: 0/0
 19030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19031 ;;      Params:         0       0       0       0       0       0       0
 19032 ;;      Locals:         1       0       0       0       0       0       0
 19033 ;;      Temps:          0       0       0       0       0       0       0
 19034 ;;      Totals:         1       0       0       0       0       0       0
 19035 ;;Total ram usage:        1 bytes
 19036 ;; Hardware stack levels used:    1
 19037 ;; Hardware stack levels required when called:    2
 19038 ;; This function calls:
 19039 ;;		Nothing
 19040 ;; This function is called by:
 19041 ;;		_strnicmp
 19042 ;;		_strichr
 19043 ;; This function uses a non-reentrant model
 19044 ;;
 19045                           
 19046                           	psect	text47
 19047  001CF0                     __ptext47:
 19048                           	opt stack 0
 19049  001CF0                     _toupper:
 19050                           	opt stack 24
 19051                           
 19052                           ;incstack = 0
 19053                           ;incstack = 0
 19054                           ;toupper@c stored from wreg
 19055  001CF0  CFE8 F019          	movff	wreg,toupper@c
 19056  001CF4  0E7B               	movlw	123
 19057  001CF6  6019               	cpfslt	toupper@c,c
 19058  001CF8  D004               	goto	l12456
 19059  001CFA  0E60               	movlw	96
 19060  001CFC  6419               	cpfsgt	toupper@c,c
 19061  001CFE  D001               	goto	l12456
 19062  001D00  9A19               	bcf	toupper@c,5,c
 19063  001D02                     l12456:
 19064  001D02  5019               	movf	toupper@c,w,c
 19065  001D04  0012               	return	
 19066  001D06                     __end_of_toupper:
 19067                           	opt stack 0
 19068                           tblptru	equ	0xFF8
 19069                           tblptrh	equ	0xFF7
 19070                           tblptrl	equ	0xFF6
 19071                           tablat	equ	0xFF5
 19072                           prodh	equ	0xFF4
 19073                           prodl	equ	0xFF3
 19074                           intcon	equ	0xFF2
 19075                           indf0	equ	0xFEF
 19076                           postinc0	equ	0xFEE
 19077                           fsr0h	equ	0xFEA
 19078                           fsr0l	equ	0xFE9
 19079                           wreg	equ	0xFE8
 19080                           indf1	equ	0xFE7
 19081                           postinc1	equ	0xFE6
 19082                           postdec1	equ	0xFE5
 19083                           fsr1h	equ	0xFE2
 19084                           fsr1l	equ	0xFE1
 19085                           indf2	equ	0xFDF
 19086                           postinc2	equ	0xFDE
 19087                           postdec2	equ	0xFDD
 19088                           plusw2	equ	0xFDB
 19089                           fsr2h	equ	0xFDA
 19090                           fsr2l	equ	0xFD9
 19091                           status	equ	0xFD8
 19092                           
 19093 ;; *************** function _strlen *****************
 19094 ;; Defined at:
 19095 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strlen.c"
 19096 ;; Parameters:    Size  Location     Type
 19097 ;;  s               2   24[COMRAM] PTR const unsigned char 
 19098 ;;		 -> printGUID@buf(3), STR_121(6), STR_120(8), STR_118(6), 
 19099 ;;		 -> STR_116(5), STR_114(8), STR_113(6), STR_112(9), 
 19100 ;;		 -> STR_111(11), STR_109(8), STR_107(4), STR_106(5), 
 19101 ;;		 -> STR_94(5), STR_82(7), STR_77(5), STR_68(5), 
 19102 ;;		 -> wrkbuf(80), STR_45(5), STR_44(5), STR_42(5), 
 19103 ;;		 -> STR_41(4), STR_40(5), STR_37(3), STR_28(3), 
 19104 ;;		 -> STR_19(7), STR_17(8), STR_15(7), STR_13(9), 
 19105 ;;		 -> STR_11(6), STR_9(7), STR_7(5), STR_5(5), 
 19106 ;;		 -> cmdbuf(80), 
 19107 ;; Auto vars:     Size  Location     Type
 19108 ;;  cp              2   26[COMRAM] PTR const unsigned char 
 19109 ;;		 -> printGUID@buf(3), STR_121(6), STR_120(8), STR_118(6), 
 19110 ;;		 -> STR_116(5), STR_114(8), STR_113(6), STR_112(9), 
 19111 ;;		 -> STR_111(11), STR_109(8), STR_107(4), STR_106(5), 
 19112 ;;		 -> STR_94(5), STR_82(7), STR_77(5), STR_68(5), 
 19113 ;;		 -> wrkbuf(80), STR_45(5), STR_44(5), STR_42(5), 
 19114 ;;		 -> STR_41(4), STR_40(5), STR_37(3), STR_28(3), 
 19115 ;;		 -> STR_19(7), STR_17(8), STR_15(7), STR_13(9), 
 19116 ;;		 -> STR_11(6), STR_9(7), STR_7(5), STR_5(5), 
 19117 ;;		 -> cmdbuf(80), 
 19118 ;; Return value:  Size  Location     Type
 19119 ;;                  2   24[COMRAM] unsigned int 
 19120 ;; Registers used:
 19121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 19122 ;; Tracked objects:
 19123 ;;		On entry : 0/1
 19124 ;;		On exit  : 0/0
 19125 ;;		Unchanged: 0/0
 19126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19127 ;;      Params:         2       0       0       0       0       0       0
 19128 ;;      Locals:         2       0       0       0       0       0       0
 19129 ;;      Temps:          0       0       0       0       0       0       0
 19130 ;;      Totals:         4       0       0       0       0       0       0
 19131 ;;Total ram usage:        4 bytes
 19132 ;; Hardware stack levels used:    1
 19133 ;; Hardware stack levels required when called:    2
 19134 ;; This function calls:
 19135 ;;		Nothing
 19136 ;; This function is called by:
 19137 ;;		_doModeSLCAN
 19138 ;;		_receivePrintEventSLCAN
 19139 ;;		_printGUID
 19140 ;;		_hexStringToBytes
 19141 ;;		_stristr
 19142 ;; This function uses a non-reentrant model
 19143 ;;
 19144                           
 19145                           	psect	text48
 19146  001F3C                     __ptext48:
 19147                           	opt stack 0
 19148  001F3C                     _strlen:
 19149                           	opt stack 25
 19150                           
 19151                           ;incstack = 0
 19152                           ;incstack = 0
 19153  001F3C  C019  F01B         	movff	strlen@s,strlen@cp
 19154  001F40  C01A  F01C         	movff	strlen@s+1,strlen@cp+1
 19155  001F44  D002               	goto	l11824
 19156  001F46                     l11822:
 19157  001F46  4A1B               	infsnz	strlen@cp,f,c
 19158  001F48  2A1C               	incf	strlen@cp+1,f,c
 19159  001F4A                     l11824:
 19160  001F4A  501B               	movf	strlen@cp,w,c
 19161  001F4C  6EF6               	movwf	tblptrl,c
 19162  001F4E  6EE9               	movwf	fsr0l,c
 19163  001F50  0E05               	movlw	(high __ramtop+-1)
 19164  001F52  6EEA               	movwf	fsr0h,c
 19165  001F54  501C               	movf	strlen@cp+1,w,c
 19166  001F56  64EA               	cpfsgt	fsr0h,c
 19167  001F58  D003               	bra	u15247
 19168  001F5A  6EEA               	movwf	fsr0h,c
 19169  001F5C  50EF               	movf	indf0,w,c
 19170  001F5E  D003               	bra	u15240
 19171  001F60                     u15247:
 19172  001F60  6EF7               	movwf	tblptrh,c
 19173  001F62  0008               	tblrd		*
 19174  001F64  50F5               	movf	tablat,w,c
 19175  001F66                     u15240:
 19176  001F66  0900               	iorlw	0
 19177  001F68  E1EE               	bnz	l11822
 19178  001F6A  5019               	movf	strlen@s,w,c
 19179  001F6C  5C1B               	subwf	strlen@cp,w,c
 19180  001F6E  6E19               	movwf	?_strlen,c
 19181  001F70  501A               	movf	strlen@s+1,w,c
 19182  001F72  581C               	subwfb	strlen@cp+1,w,c
 19183  001F74  6E1A               	movwf	?_strlen+1,c
 19184  001F76  0012               	return	
 19185  001F78                     __end_of_strlen:
 19186                           	opt stack 0
 19187                           tblptru	equ	0xFF8
 19188                           tblptrh	equ	0xFF7
 19189                           tblptrl	equ	0xFF6
 19190                           tablat	equ	0xFF5
 19191                           prodh	equ	0xFF4
 19192                           prodl	equ	0xFF3
 19193                           intcon	equ	0xFF2
 19194                           indf0	equ	0xFEF
 19195                           postinc0	equ	0xFEE
 19196                           fsr0h	equ	0xFEA
 19197                           fsr0l	equ	0xFE9
 19198                           wreg	equ	0xFE8
 19199                           indf1	equ	0xFE7
 19200                           postinc1	equ	0xFE6
 19201                           postdec1	equ	0xFE5
 19202                           fsr1h	equ	0xFE2
 19203                           fsr1l	equ	0xFE1
 19204                           indf2	equ	0xFDF
 19205                           postinc2	equ	0xFDE
 19206                           postdec2	equ	0xFDD
 19207                           plusw2	equ	0xFDB
 19208                           fsr2h	equ	0xFDA
 19209                           fsr2l	equ	0xFD9
 19210                           status	equ	0xFD8
 19211                           
 19212 ;; *************** function _receivePrintEventVerbose *****************
 19213 ;; Defined at:
 19214 ;;		line 1529 in file "main.c"
 19215 ;; Parameters:    Size  Location     Type
 19216 ;;		None
 19217 ;; Auto vars:     Size  Location     Type
 19218 ;;  i               1   47[BANK0 ] unsigned char 
 19219 ;; Return value:  Size  Location     Type
 19220 ;;                  1    wreg      enum E15660
 19221 ;; Registers used:
 19222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 19223 ;; Tracked objects:
 19224 ;;		On entry : F/0
 19225 ;;		On exit  : 0/0
 19226 ;;		Unchanged: 0/0
 19227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19228 ;;      Params:         0       0       0       0       0       0       0
 19229 ;;      Locals:         0      13       0       0       0       0       0
 19230 ;;      Temps:          0       5       0       0       0       0       0
 19231 ;;      Totals:         0      18       0       0       0       0       0
 19232 ;;Total ram usage:       18 bytes
 19233 ;; Hardware stack levels used:    1
 19234 ;; Hardware stack levels required when called:    6
 19235 ;; This function calls:
 19236 ;;		_putsUSART
 19237 ;;		_sprintf
 19238 ;;		_getVSCPFrame
 19239 ;; This function is called by:
 19240 ;;		_doModeVerbose
 19241 ;; This function uses a non-reentrant model
 19242 ;;
 19243                           
 19244                           	psect	text49
 19245  004A14                     __ptext49:
 19246                           	opt stack 0
 19247  004A14                     _receivePrintEventVerbose:
 19248                           	opt stack 22
 19249                           
 19250                           ; BSR set to: 0
 19251                           ;main.c: 1530: uint8_t i;
 19252                           ;main.c: 1532: if (getVSCPFrame(&vscpClass,
 19253                           ;main.c: 1533: &vscpType,
 19254                           ;main.c: 1534: &vscpNodeId,
 19255                           ;main.c: 1535: &vscpPriority,
 19256                           ;main.c: 1536: &vscpSize,
 19257                           ;main.c: 1537: vscpData)) {
 19258                           
 19259                           ;incstack = 0
 19260                           ;incstack = 0
 19261  004A14  0EDF               	movlw	low _vscpType
 19262  004A16  6F62               	movwf	?_getVSCPFrame& (0+255),b
 19263  004A18  0EDC               	movlw	low _vscpNodeId
 19264  004A1A  6F63               	movwf	(?_getVSCPFrame+1)& (0+255),b
 19265  004A1C  0EDD               	movlw	low _vscpPriority
 19266  004A1E  6F64               	movwf	(?_getVSCPFrame+2)& (0+255),b
 19267  004A20  0EDE               	movlw	low _vscpSize
 19268  004A22  6F65               	movwf	(?_getVSCPFrame+3)& (0+255),b
 19269  004A24  0E40               	movlw	low _vscpData
 19270  004A26  6F66               	movwf	(?_getVSCPFrame+4)& (0+255),b
 19271  004A28  0EDA               	movlw	_vscpClass& (0+255)
 19272  004A2A  EC0C  F014         	call	_getVSCPFrame
 19273  004A2E  0900               	iorlw	0
 19274  004A30  E101 D129          	bz	l13746
 19275                           
 19276                           ;main.c: 1540: cntRxFrames++;
 19277  004A34  0101               	movlb	1	; () banked
 19278  004A36  2B0C               	incf	_cntRxFrames& (0+255),f,b
 19279  004A38  0E00               	movlw	0
 19280  004A3A  230D               	addwfc	(_cntRxFrames+1)& (0+255),f,b
 19281  004A3C  230E               	addwfc	(_cntRxFrames+2)& (0+255),f,b
 19282  004A3E  230F               	addwfc	(_cntRxFrames+3)& (0+255),f,b
 19283                           
 19284                           ;main.c: 1541: cntRxBytes += vscpSize;
 19285  004A40  0100               	movlb	0	; () banked
 19286  004A42  51DE               	movf	_vscpSize& (0+255),w,b
 19287  004A44  0101               	movlb	1	; () banked
 19288  004A46  2708               	addwf	_cntRxBytes& (0+255),f,b
 19289  004A48  0E00               	movlw	0
 19290  004A4A  2309               	addwfc	(_cntRxBytes+1)& (0+255),f,b
 19291  004A4C  230A               	addwfc	(_cntRxBytes+2)& (0+255),f,b
 19292  004A4E  230B               	addwfc	(_cntRxBytes+3)& (0+255),f,b
 19293                           
 19294                           ; BSR set to: 1
 19295                           ;main.c: 1543: putsUSART((char *) "<Prio=");
 19296  004A50  0E7C               	movlw	high STR_130
 19297  004A52  6E1B               	movwf	?_putsUSART+1,c
 19298  004A54  0E42               	movlw	low STR_130
 19299  004A56  6E1A               	movwf	?_putsUSART,c
 19300  004A58  EC2E  F011         	call	_putsUSART	;wreg free
 19301                           
 19302                           ;main.c: 1544: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpPriority);
 19303  004A5C  0100               	movlb	0	; () banked
 19304  004A5E  67D3               	tstfsz	_bHex& (0+255),b
 19305  004A60  D004               	goto	l13664
 19306                           
 19307                           ; BSR set to: 0
 19308  004A62  0E7C               	movlw	high STR_53
 19309  004A64  6F84               	movwf	(_receivePrintEventVerbose$1280+1)& (0+255),b
 19310  004A66  0EEE               	movlw	low STR_53
 19311  004A68  D003               	goto	L26
 19312  004A6A                     l13664:
 19313                           
 19314                           ; BSR set to: 0
 19315  004A6A  0E7C               	movlw	high STR_52
 19316  004A6C  6F84               	movwf	(_receivePrintEventVerbose$1280+1)& (0+255),b
 19317  004A6E  0E65               	movlw	low STR_52
 19318  004A70                     L26:
 19319  004A70  6F83               	movwf	_receivePrintEventVerbose$1280& (0+255),b
 19320                           
 19321                           ; BSR set to: 0
 19322  004A72  0E01               	movlw	high _wrkbuf
 19323  004A74  0100               	movlb	0	; () banked
 19324  004A76  6F61               	movwf	(?_sprintf+1)& (0+255),b
 19325  004A78  0E74               	movlw	low _wrkbuf
 19326  004A7A  6F60               	movwf	?_sprintf& (0+255),b
 19327  004A7C  C083  F062         	movff	_receivePrintEventVerbose$1280,?_sprintf+2
 19328  004A80  C084  F063         	movff	_receivePrintEventVerbose$1280+1,?_sprintf+3
 19329  004A84  C0DD  F064         	movff	_vscpPriority,?_sprintf+4
 19330  004A88  6B65               	clrf	(?_sprintf+5)& (0+255),b
 19331  004A8A  EC5F  F029         	call	_sprintf	;wreg free
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;main.c: 1545: putsUSART(wrkbuf);
 19335  004A8E  0101               	movlb	1	; () banked
 19336  004A90  0E01               	movlw	high _wrkbuf
 19337  004A92  6E1B               	movwf	?_putsUSART+1,c
 19338  004A94  0E74               	movlw	low _wrkbuf
 19339  004A96  6E1A               	movwf	?_putsUSART,c
 19340  004A98  EC2E  F011         	call	_putsUSART	;wreg free
 19341                           
 19342                           ;main.c: 1546: putsUSART((char *) ",class=");
 19343  004A9C  0E7B               	movlw	high STR_133
 19344  004A9E  6E1B               	movwf	?_putsUSART+1,c
 19345  004AA0  0EF6               	movlw	low STR_133
 19346  004AA2  6E1A               	movwf	?_putsUSART,c
 19347  004AA4  EC2E  F011         	call	_putsUSART	;wreg free
 19348                           
 19349                           ;main.c: 1547: sprintf(wrkbuf, bHex ? "0x%04X" : "%d", vscpClass);
 19350  004AA8  0100               	movlb	0	; () banked
 19351  004AAA  67D3               	tstfsz	_bHex& (0+255),b
 19352  004AAC  D004               	goto	l13676
 19353                           
 19354                           ; BSR set to: 0
 19355  004AAE  0E7C               	movlw	high STR_53
 19356  004AB0  6F86               	movwf	(_receivePrintEventVerbose$1285+1)& (0+255),b
 19357  004AB2  0EEE               	movlw	low STR_53
 19358  004AB4  D003               	goto	L27
 19359  004AB6                     l13676:
 19360                           
 19361                           ; BSR set to: 0
 19362  004AB6  0E7C               	movlw	high STR_134
 19363  004AB8  6F86               	movwf	(_receivePrintEventVerbose$1285+1)& (0+255),b
 19364  004ABA  0E6C               	movlw	low STR_134
 19365  004ABC                     L27:
 19366  004ABC  6F85               	movwf	_receivePrintEventVerbose$1285& (0+255),b
 19367                           
 19368                           ; BSR set to: 0
 19369  004ABE  0E01               	movlw	high _wrkbuf
 19370  004AC0  0100               	movlb	0	; () banked
 19371  004AC2  6F61               	movwf	(?_sprintf+1)& (0+255),b
 19372  004AC4  0E74               	movlw	low _wrkbuf
 19373  004AC6  6F60               	movwf	?_sprintf& (0+255),b
 19374  004AC8  C085  F062         	movff	_receivePrintEventVerbose$1285,?_sprintf+2
 19375  004ACC  C086  F063         	movff	_receivePrintEventVerbose$1285+1,?_sprintf+3
 19376  004AD0  C0DA  F064         	movff	_vscpClass,?_sprintf+4
 19377  004AD4  C0DB  F065         	movff	_vscpClass+1,?_sprintf+5
 19378  004AD8  EC5F  F029         	call	_sprintf	;wreg free
 19379                           
 19380                           ; BSR set to: 0
 19381                           ;main.c: 1548: putsUSART(wrkbuf);
 19382  004ADC  0101               	movlb	1	; () banked
 19383  004ADE  0E01               	movlw	high _wrkbuf
 19384  004AE0  6E1B               	movwf	?_putsUSART+1,c
 19385  004AE2  0E74               	movlw	low _wrkbuf
 19386  004AE4  6E1A               	movwf	?_putsUSART,c
 19387  004AE6  EC2E  F011         	call	_putsUSART	;wreg free
 19388                           
 19389                           ;main.c: 1549: putsUSART((char *) ",type=");
 19390  004AEA  0E7C               	movlw	high STR_136
 19391  004AEC  6E1B               	movwf	?_putsUSART+1,c
 19392  004AEE  0E34               	movlw	low STR_136
 19393  004AF0  6E1A               	movwf	?_putsUSART,c
 19394  004AF2  EC2E  F011         	call	_putsUSART	;wreg free
 19395                           
 19396                           ;main.c: 1550: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpType);
 19397  004AF6  0100               	movlb	0	; () banked
 19398  004AF8  67D3               	tstfsz	_bHex& (0+255),b
 19399  004AFA  D004               	goto	l13688
 19400                           
 19401                           ; BSR set to: 0
 19402  004AFC  0E7C               	movlw	high STR_53
 19403  004AFE  6F88               	movwf	(_receivePrintEventVerbose$1290+1)& (0+255),b
 19404  004B00  0EEE               	movlw	low STR_53
 19405  004B02  D003               	goto	L28
 19406  004B04                     l13688:
 19407                           
 19408                           ; BSR set to: 0
 19409  004B04  0E7C               	movlw	high STR_52
 19410  004B06  6F88               	movwf	(_receivePrintEventVerbose$1290+1)& (0+255),b
 19411  004B08  0E65               	movlw	low STR_52
 19412  004B0A                     L28:
 19413  004B0A  6F87               	movwf	_receivePrintEventVerbose$1290& (0+255),b
 19414                           
 19415                           ; BSR set to: 0
 19416  004B0C  0E01               	movlw	high _wrkbuf
 19417  004B0E  0100               	movlb	0	; () banked
 19418  004B10  6F61               	movwf	(?_sprintf+1)& (0+255),b
 19419  004B12  0E74               	movlw	low _wrkbuf
 19420  004B14  6F60               	movwf	?_sprintf& (0+255),b
 19421  004B16  C087  F062         	movff	_receivePrintEventVerbose$1290,?_sprintf+2
 19422  004B1A  C088  F063         	movff	_receivePrintEventVerbose$1290+1,?_sprintf+3
 19423  004B1E  C0DF  F064         	movff	_vscpType,?_sprintf+4
 19424  004B22  6B65               	clrf	(?_sprintf+5)& (0+255),b
 19425  004B24  EC5F  F029         	call	_sprintf	;wreg free
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;main.c: 1551: putsUSART(wrkbuf);
 19429  004B28  0101               	movlb	1	; () banked
 19430  004B2A  0E01               	movlw	high _wrkbuf
 19431  004B2C  6E1B               	movwf	?_putsUSART+1,c
 19432  004B2E  0E74               	movlw	low _wrkbuf
 19433  004B30  6E1A               	movwf	?_putsUSART,c
 19434  004B32  EC2E  F011         	call	_putsUSART	;wreg free
 19435                           
 19436                           ;main.c: 1552: putsUSART((char *) ",nodeid=");
 19437  004B36  0E7B               	movlw	high STR_139
 19438  004B38  6E1B               	movwf	?_putsUSART+1,c
 19439  004B3A  0EC4               	movlw	low STR_139
 19440  004B3C  6E1A               	movwf	?_putsUSART,c
 19441  004B3E  EC2E  F011         	call	_putsUSART	;wreg free
 19442                           
 19443                           ;main.c: 1553: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpNodeId);
 19444  004B42  0100               	movlb	0	; () banked
 19445  004B44  67D3               	tstfsz	_bHex& (0+255),b
 19446  004B46  D004               	goto	l13700
 19447                           
 19448                           ; BSR set to: 0
 19449  004B48  0E7C               	movlw	high STR_53
 19450  004B4A  6F8A               	movwf	(_receivePrintEventVerbose$1295+1)& (0+255),b
 19451  004B4C  0EEE               	movlw	low STR_53
 19452  004B4E  D003               	goto	L29
 19453  004B50                     l13700:
 19454                           
 19455                           ; BSR set to: 0
 19456  004B50  0E7C               	movlw	high STR_52
 19457  004B52  6F8A               	movwf	(_receivePrintEventVerbose$1295+1)& (0+255),b
 19458  004B54  0E65               	movlw	low STR_52
 19459  004B56                     L29:
 19460  004B56  6F89               	movwf	_receivePrintEventVerbose$1295& (0+255),b
 19461                           
 19462                           ; BSR set to: 0
 19463  004B58  0E01               	movlw	high _wrkbuf
 19464  004B5A  0100               	movlb	0	; () banked
 19465  004B5C  6F61               	movwf	(?_sprintf+1)& (0+255),b
 19466  004B5E  0E74               	movlw	low _wrkbuf
 19467  004B60  6F60               	movwf	?_sprintf& (0+255),b
 19468  004B62  C089  F062         	movff	_receivePrintEventVerbose$1295,?_sprintf+2
 19469  004B66  C08A  F063         	movff	_receivePrintEventVerbose$1295+1,?_sprintf+3
 19470  004B6A  C0DC  F064         	movff	_vscpNodeId,?_sprintf+4
 19471  004B6E  6B65               	clrf	(?_sprintf+5)& (0+255),b
 19472  004B70  EC5F  F029         	call	_sprintf	;wreg free
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;main.c: 1554: putsUSART(wrkbuf);
 19476  004B74  0101               	movlb	1	; () banked
 19477  004B76  0E01               	movlw	high _wrkbuf
 19478  004B78  6E1B               	movwf	?_putsUSART+1,c
 19479  004B7A  0E74               	movlw	low _wrkbuf
 19480  004B7C  6E1A               	movwf	?_putsUSART,c
 19481  004B7E  EC2E  F011         	call	_putsUSART	;wreg free
 19482                           
 19483                           ;main.c: 1555: putsUSART((char *) ",size=");
 19484  004B82  0E7C               	movlw	high STR_142
 19485  004B84  6E1B               	movwf	?_putsUSART+1,c
 19486  004B86  0E3B               	movlw	low STR_142
 19487  004B88  6E1A               	movwf	?_putsUSART,c
 19488  004B8A  EC2E  F011         	call	_putsUSART	;wreg free
 19489                           
 19490                           ;main.c: 1556: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpSize);
 19491  004B8E  0100               	movlb	0	; () banked
 19492  004B90  67D3               	tstfsz	_bHex& (0+255),b
 19493  004B92  D004               	goto	l13712
 19494                           
 19495                           ; BSR set to: 0
 19496  004B94  0E7C               	movlw	high STR_53
 19497  004B96  6F8C               	movwf	(_receivePrintEventVerbose$1300+1)& (0+255),b
 19498  004B98  0EEE               	movlw	low STR_53
 19499  004B9A  D003               	goto	L30
 19500  004B9C                     l13712:
 19501                           
 19502                           ; BSR set to: 0
 19503  004B9C  0E7C               	movlw	high STR_52
 19504  004B9E  6F8C               	movwf	(_receivePrintEventVerbose$1300+1)& (0+255),b
 19505  004BA0  0E65               	movlw	low STR_52
 19506  004BA2                     L30:
 19507  004BA2  6F8B               	movwf	_receivePrintEventVerbose$1300& (0+255),b
 19508                           
 19509                           ; BSR set to: 0
 19510  004BA4  0E01               	movlw	high _wrkbuf
 19511  004BA6  0100               	movlb	0	; () banked
 19512  004BA8  6F61               	movwf	(?_sprintf+1)& (0+255),b
 19513  004BAA  0E74               	movlw	low _wrkbuf
 19514  004BAC  6F60               	movwf	?_sprintf& (0+255),b
 19515  004BAE  C08B  F062         	movff	_receivePrintEventVerbose$1300,?_sprintf+2
 19516  004BB2  C08C  F063         	movff	_receivePrintEventVerbose$1300+1,?_sprintf+3
 19517  004BB6  C0DE  F064         	movff	_vscpSize,?_sprintf+4
 19518  004BBA  6B65               	clrf	(?_sprintf+5)& (0+255),b
 19519  004BBC  EC5F  F029         	call	_sprintf	;wreg free
 19520                           
 19521                           ; BSR set to: 0
 19522                           ;main.c: 1557: putsUSART(wrkbuf);
 19523  004BC0  0101               	movlb	1	; () banked
 19524  004BC2  0E01               	movlw	high _wrkbuf
 19525  004BC4  6E1B               	movwf	?_putsUSART+1,c
 19526  004BC6  0E74               	movlw	low _wrkbuf
 19527  004BC8  6E1A               	movwf	?_putsUSART,c
 19528  004BCA  EC2E  F011         	call	_putsUSART	;wreg free
 19529                           
 19530                           ;main.c: 1558: if (vscpSize > 0) {
 19531  004BCE  0100               	movlb	0	; () banked
 19532  004BD0  51DE               	movf	_vscpSize& (0+255),w,b
 19533  004BD2  E04B               	bz	l13740
 19534                           
 19535                           ; BSR set to: 0
 19536                           ;main.c: 1559: putsUSART((char *) ",Data=");
 19537  004BD4  0E7C               	movlw	high STR_145
 19538  004BD6  6E1B               	movwf	?_putsUSART+1,c
 19539  004BD8  0E2D               	movlw	low STR_145
 19540  004BDA  6E1A               	movwf	?_putsUSART,c
 19541  004BDC  EC2E  F011         	call	_putsUSART	;wreg free
 19542                           
 19543                           ;main.c: 1560: for (i = 0; i < vscpSize; i++) {
 19544  004BE0  0100               	movlb	0	; () banked
 19545  004BE2  6B8F               	clrf	receivePrintEventVerbose@i& (0+255),b
 19546  004BE4  D03E               	goto	l13738
 19547  004BE6                     l871:
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;main.c: 1562: sprintf(wrkbuf, bHex ? "0x%02X" : "%d", vscpData[i]);
 19551  004BE6  67D3               	tstfsz	_bHex& (0+255),b
 19552  004BE8  D004               	goto	l13726
 19553                           
 19554                           ; BSR set to: 0
 19555  004BEA  0E7C               	movlw	high STR_53
 19556  004BEC  6F8E               	movwf	(_receivePrintEventVerbose$1305+1)& (0+255),b
 19557  004BEE  0EEE               	movlw	low STR_53
 19558  004BF0  D003               	goto	L31
 19559  004BF2                     l13726:
 19560                           
 19561                           ; BSR set to: 0
 19562  004BF2  0E7C               	movlw	high STR_52
 19563  004BF4  6F8E               	movwf	(_receivePrintEventVerbose$1305+1)& (0+255),b
 19564  004BF6  0E65               	movlw	low STR_52
 19565  004BF8                     L31:
 19566  004BF8  6F8D               	movwf	_receivePrintEventVerbose$1305& (0+255),b
 19567                           
 19568                           ; BSR set to: 0
 19569  004BFA  0E01               	movlw	high _wrkbuf
 19570  004BFC  0100               	movlb	0	; () banked
 19571  004BFE  6F61               	movwf	(?_sprintf+1)& (0+255),b
 19572  004C00  0E74               	movlw	low _wrkbuf
 19573  004C02  6F60               	movwf	?_sprintf& (0+255),b
 19574  004C04  C08D  F062         	movff	_receivePrintEventVerbose$1305,?_sprintf+2
 19575  004C08  C08E  F063         	movff	_receivePrintEventVerbose$1305+1,?_sprintf+3
 19576  004C0C  518F               	movf	receivePrintEventVerbose@i& (0+255),w,b
 19577  004C0E  0F40               	addlw	low _vscpData
 19578  004C10  6ED9               	movwf	fsr2l,c
 19579  004C12  6ADA               	clrf	fsr2h,c
 19580  004C14  50DF               	movf	indf2,w,c
 19581  004C16  6F64               	movwf	(?_sprintf+4)& (0+255),b
 19582  004C18  6B65               	clrf	(?_sprintf+5)& (0+255),b
 19583  004C1A  EC5F  F029         	call	_sprintf	;wreg free
 19584                           
 19585                           ; BSR set to: 0
 19586                           ;main.c: 1563: putsUSART(wrkbuf);
 19587  004C1E  0101               	movlb	1	; () banked
 19588  004C20  0E01               	movlw	high _wrkbuf
 19589  004C22  6E1B               	movwf	?_putsUSART+1,c
 19590  004C24  0E74               	movlw	low _wrkbuf
 19591  004C26  6E1A               	movwf	?_putsUSART,c
 19592  004C28  EC2E  F011         	call	_putsUSART	;wreg free
 19593                           
 19594                           ;main.c: 1564: if (i < (vscpSize - 1)) {
 19595  004C2C  0EFF               	movlw	255
 19596  004C2E  0100               	movlb	0	; () banked
 19597  004C30  25DE               	addwf	_vscpSize& (0+255),w,b
 19598  004C32  6F7E               	movwf	??_receivePrintEventVerbose& (0+255),b
 19599  004C34  6B7F               	clrf	(??_receivePrintEventVerbose+1)& (0+255),b
 19600  004C36  0EFF               	movlw	255
 19601  004C38  237F               	addwfc	(??_receivePrintEventVerbose+1)& (0+255),f,b
 19602  004C3A  518F               	movf	receivePrintEventVerbose@i& (0+255),w,b
 19603  004C3C  6F80               	movwf	(??_receivePrintEventVerbose+2)& (0+255),b
 19604  004C3E  6B81               	clrf	(??_receivePrintEventVerbose+3)& (0+255),b
 19605  004C40  5181               	movf	(??_receivePrintEventVerbose+3)& (0+255),w,b
 19606  004C42  0A80               	xorlw	128
 19607  004C44  6F82               	movwf	(??_receivePrintEventVerbose+4)& (0+255),b
 19608  004C46  517E               	movf	??_receivePrintEventVerbose& (0+255),w,b
 19609  004C48  5D80               	subwf	(??_receivePrintEventVerbose+2)& (0+255),w,b
 19610  004C4A  517F               	movf	(??_receivePrintEventVerbose+1)& (0+255),w,b
 19611  004C4C  0A80               	xorlw	128
 19612  004C4E  5982               	subwfb	(??_receivePrintEventVerbose+4)& (0+255),w,b
 19613  004C50  E206               	bc	l13736
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;main.c: 1565: putsUSART((char *) ",");
 19617  004C52  0E7C               	movlw	high STR_29
 19618  004C54  6E1B               	movwf	?_putsUSART+1,c
 19619  004C56  0EF5               	movlw	low STR_29
 19620  004C58  6E1A               	movwf	?_putsUSART,c
 19621  004C5A  EC2E  F011         	call	_putsUSART	;wreg free
 19622  004C5E                     l13736:
 19623  004C5E  0100               	movlb	0	; () banked
 19624  004C60  2B8F               	incf	receivePrintEventVerbose@i& (0+255),f,b
 19625  004C62                     l13738:
 19626                           
 19627                           ; BSR set to: 0
 19628  004C62  51DE               	movf	_vscpSize& (0+255),w,b
 19629  004C64  5D8F               	subwf	receivePrintEventVerbose@i& (0+255),w,b
 19630  004C66  E207               	bc	l878
 19631  004C68  D7BE               	goto	l871
 19632  004C6A                     l13740:
 19633                           
 19634                           ; BSR set to: 0
 19635                           ;main.c: 1569: putsUSART((char *) ",Data=none");
 19636  004C6A  0E7B               	movlw	high STR_149
 19637  004C6C  6E1B               	movwf	?_putsUSART+1,c
 19638  004C6E  0E92               	movlw	low STR_149
 19639  004C70  6E1A               	movwf	?_putsUSART,c
 19640  004C72  EC2E  F011         	call	_putsUSART	;wreg free
 19641  004C76                     l878:
 19642                           
 19643                           ;main.c: 1570: }
 19644                           ;main.c: 1571: putsUSART((char *) ">\r\n");
 19645  004C76  0E7C               	movlw	high STR_150
 19646  004C78  6E1B               	movwf	?_putsUSART+1,c
 19647  004C7A  0ED5               	movlw	low STR_150
 19648  004C7C  6E1A               	movwf	?_putsUSART,c
 19649  004C7E  EC2E  F011         	call	_putsUSART	;wreg free
 19650                           
 19651                           ;main.c: 1572: return 1;
 19652  004C82  0E01               	movlw	1
 19653  004C84  D001               	goto	l879
 19654  004C86                     l13746:
 19655                           
 19656                           ;main.c: 1573: }
 19657                           ;main.c: 1575: return 0;
 19658  004C86  0E00               	movlw	0
 19659  004C88                     l879:
 19660  004C88  0012               	return	
 19661  004C8A                     __end_of_receivePrintEventVerbose:
 19662                           	opt stack 0
 19663                           tblptru	equ	0xFF8
 19664                           tblptrh	equ	0xFF7
 19665                           tblptrl	equ	0xFF6
 19666                           tablat	equ	0xFF5
 19667                           prodh	equ	0xFF4
 19668                           prodl	equ	0xFF3
 19669                           intcon	equ	0xFF2
 19670                           indf0	equ	0xFEF
 19671                           postinc0	equ	0xFEE
 19672                           fsr0h	equ	0xFEA
 19673                           fsr0l	equ	0xFE9
 19674                           wreg	equ	0xFE8
 19675                           indf1	equ	0xFE7
 19676                           postinc1	equ	0xFE6
 19677                           postdec1	equ	0xFE5
 19678                           fsr1h	equ	0xFE2
 19679                           fsr1l	equ	0xFE1
 19680                           indf2	equ	0xFDF
 19681                           postinc2	equ	0xFDE
 19682                           postdec2	equ	0xFDD
 19683                           plusw2	equ	0xFDB
 19684                           fsr2h	equ	0xFDA
 19685                           fsr2l	equ	0xFD9
 19686                           status	equ	0xFD8
 19687                           
 19688 ;; *************** function _getVSCPFrame *****************
 19689 ;; Defined at:
 19690 ;;		line 2553 in file "main.c"
 19691 ;; Parameters:    Size  Location     Type
 19692 ;;  pvscpclass      1    wreg     PTR unsigned short 
 19693 ;;		 -> vscpClass(2), 
 19694 ;;  pvscptype       1    2[BANK0 ] PTR unsigned char 
 19695 ;;		 -> vscpType(1), 
 19696 ;;  pNodeId         1    3[BANK0 ] PTR unsigned char 
 19697 ;;		 -> vscpNodeId(1), 
 19698 ;;  pPriority       1    4[BANK0 ] PTR unsigned char 
 19699 ;;		 -> vscpPriority(1), 
 19700 ;;  pSize           1    5[BANK0 ] PTR unsigned char 
 19701 ;;		 -> vscpSize(1), 
 19702 ;;  pData           1    6[BANK0 ] PTR unsigned char 
 19703 ;;		 -> vscpData(8), 
 19704 ;; Auto vars:     Size  Location     Type
 19705 ;;  pvscpclass      1   11[BANK0 ] PTR unsigned short 
 19706 ;;		 -> vscpClass(2), 
 19707 ;;  id              4   12[BANK0 ] unsigned long 
 19708 ;; Return value:  Size  Location     Type
 19709 ;;                  1    wreg      unsigned char 
 19710 ;; Registers used:
 19711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19712 ;; Tracked objects:
 19713 ;;		On entry : F/0
 19714 ;;		On exit  : 0/0
 19715 ;;		Unchanged: 0/0
 19716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19717 ;;      Params:         0       5       0       0       0       0       0
 19718 ;;      Locals:         0       5       0       0       0       0       0
 19719 ;;      Temps:          0       4       0       0       0       0       0
 19720 ;;      Totals:         0      14       0       0       0       0       0
 19721 ;;Total ram usage:       14 bytes
 19722 ;; Hardware stack levels used:    1
 19723 ;; Hardware stack levels required when called:    5
 19724 ;; This function calls:
 19725 ;;		_getCANFrame
 19726 ;; This function is called by:
 19727 ;;		_receivePrintEventVerbose
 19728 ;;		_readRegister
 19729 ;;		_readRegisterExtended
 19730 ;;		_writeRegisterExtended
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           	psect	text50
 19735  002818                     __ptext50:
 19736                           	opt stack 0
 19737  002818                     _getVSCPFrame:
 19738                           	opt stack 21
 19739                           
 19740                           ;incstack = 0
 19741                           ;incstack = 0
 19742                           ;getVSCPFrame@pvscpclass stored from wreg
 19743  002818  CFE8 F06B          	movff	wreg,getVSCPFrame@pvscpclass
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;main.c: 2554: uint32_t id;
 19747                           ;main.c: 2556: if (!getCANFrame(&id, pSize, pData)) {
 19748  00281C  C065  F02C         	movff	getVSCPFrame@pSize,?_getCANFrame
 19749  002820  C066  F02D         	movff	getVSCPFrame@pData,?_getCANFrame+1
 19750  002824  0E0F               	movlw	15
 19751  002826  6E2E               	movwf	?_getCANFrame+2,c
 19752  002828  0E5F               	movlw	__accesstop+-1
 19753  00282A  642D               	cpfsgt	?_getCANFrame+1,c
 19754  00282C  6A2E               	clrf	?_getCANFrame+2,c
 19755  00282E  0E6C               	movlw	getVSCPFrame@id& (0+255)
 19756  002830  ECFC  F00E         	call	_getCANFrame
 19757  002834  0900               	iorlw	0
 19758  002836  E102               	bnz	l14518
 19759                           
 19760                           ;main.c: 2557: return 0;
 19761  002838  0E00               	movlw	0
 19762  00283A  D02F               	goto	l1163
 19763  00283C                     l14518:
 19764                           
 19765                           ;main.c: 2558: }
 19766                           ;main.c: 2560: *pNodeId = id & 0x0ff;
 19767  00283C  0100               	movlb	0	; () banked
 19768  00283E  5163               	movf	getVSCPFrame@pNodeId& (0+255),w,b
 19769  002840  6ED9               	movwf	fsr2l,c
 19770  002842  6ADA               	clrf	fsr2h,c
 19771  002844  C06C  FFDF         	movff	getVSCPFrame@id,indf2
 19772                           
 19773                           ;main.c: 2561: *pvscptype = (id >> 8) & 0xff;
 19774  002848  5162               	movf	getVSCPFrame@pvscptype& (0+255),w,b
 19775  00284A  6ED9               	movwf	fsr2l,c
 19776  00284C  6ADA               	clrf	fsr2h,c
 19777  00284E  C06D  FFDF         	movff	getVSCPFrame@id+1,indf2
 19778                           
 19779                           ; BSR set to: 0
 19780                           ;main.c: 2562: *pvscpclass = (id >> 16) & 0x1ff;
 19781  002852  516E               	movf	(getVSCPFrame@id+2)& (0+255),w,b
 19782  002854  6F67               	movwf	??_getVSCPFrame& (0+255),b
 19783  002856  0E01               	movlw	1
 19784  002858  156F               	andwf	(getVSCPFrame@id+3)& (0+255),w,b
 19785  00285A  6F68               	movwf	(??_getVSCPFrame+1)& (0+255),b
 19786  00285C  516B               	movf	getVSCPFrame@pvscpclass& (0+255),w,b
 19787  00285E  6ED9               	movwf	fsr2l,c
 19788  002860  6ADA               	clrf	fsr2h,c
 19789  002862  C067  FFDE         	movff	??_getVSCPFrame,postinc2
 19790  002866  C068  FFDD         	movff	??_getVSCPFrame+1,postdec2
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;main.c: 2563: *pPriority = (uint16_t) (0x07 & (id >> 26));
 19794  00286A  5164               	movf	getVSCPFrame@pPriority& (0+255),w,b
 19795  00286C  6ED9               	movwf	fsr2l,c
 19796  00286E  6ADA               	clrf	fsr2h,c
 19797  002870  C06C  F067         	movff	getVSCPFrame@id,??_getVSCPFrame
 19798  002874  C06D  F068         	movff	getVSCPFrame@id+1,??_getVSCPFrame+1
 19799  002878  C06E  F069         	movff	getVSCPFrame@id+2,??_getVSCPFrame+2
 19800  00287C  C06F  F06A         	movff	getVSCPFrame@id+3,??_getVSCPFrame+3
 19801  002880  0E1B               	movlw	27
 19802  002882  D005               	goto	u19550
 19803  002884                     u19555:
 19804  002884  90D8               	bcf	status,0,c
 19805  002886  336A               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 19806  002888  3369               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 19807  00288A  3368               	rrcf	(??_getVSCPFrame+1)& (0+255),f,b
 19808  00288C  3367               	rrcf	??_getVSCPFrame& (0+255),f,b
 19809  00288E                     u19550:
 19810  00288E  2EE8               	decfsz	wreg,f,c
 19811  002890  D7F9               	goto	u19555
 19812  002892  5167               	movf	??_getVSCPFrame& (0+255),w,b
 19813  002894  0B07               	andlw	7
 19814  002896  6EDF               	movwf	indf2,c
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;main.c: 2565: return 1;
 19818  002898  0E01               	movlw	1
 19819  00289A                     l1163:
 19820  00289A  0012               	return	
 19821  00289C                     __end_of_getVSCPFrame:
 19822                           	opt stack 0
 19823                           tblptru	equ	0xFF8
 19824                           tblptrh	equ	0xFF7
 19825                           tblptrl	equ	0xFF6
 19826                           tablat	equ	0xFF5
 19827                           prodh	equ	0xFF4
 19828                           prodl	equ	0xFF3
 19829                           intcon	equ	0xFF2
 19830                           indf0	equ	0xFEF
 19831                           postinc0	equ	0xFEE
 19832                           fsr0h	equ	0xFEA
 19833                           fsr0l	equ	0xFE9
 19834                           wreg	equ	0xFE8
 19835                           indf1	equ	0xFE7
 19836                           postinc1	equ	0xFE6
 19837                           postdec1	equ	0xFE5
 19838                           fsr1h	equ	0xFE2
 19839                           fsr1l	equ	0xFE1
 19840                           indf2	equ	0xFDF
 19841                           postinc2	equ	0xFDE
 19842                           postdec2	equ	0xFDD
 19843                           plusw2	equ	0xFDB
 19844                           fsr2h	equ	0xFDA
 19845                           fsr2l	equ	0xFD9
 19846                           status	equ	0xFD8
 19847                           
 19848 ;; *************** function _getCANFrame *****************
 19849 ;; Defined at:
 19850 ;;		line 2587 in file "main.c"
 19851 ;; Parameters:    Size  Location     Type
 19852 ;;  pid             1    wreg     PTR unsigned long 
 19853 ;;		 -> getVSCPFrame@id(4), receivePrintEventSLCAN@id(4), receivePrintEventCANAL@id(4), 
 19854 ;;  pdlc            1   43[COMRAM] PTR unsigned char 
 19855 ;;		 -> receivePrintEventSLCAN@dlc(1), receivePrintEventCANAL@dlc(1), vscpSize(1), 
 19856 ;;  pdata           2   44[COMRAM] PTR unsigned char 
 19857 ;;		 -> receivePrintEventCANAL@data(8), vscpData(8), 
 19858 ;; Auto vars:     Size  Location     Type
 19859 ;;  pid             1    0[BANK0 ] PTR unsigned long 
 19860 ;;		 -> getVSCPFrame@id(4), receivePrintEventSLCAN@id(4), receivePrintEventCANAL@id(4), 
 19861 ;;  flags           1    1[BANK0 ] enum E16358
 19862 ;; Return value:  Size  Location     Type
 19863 ;;                  1    wreg      unsigned char 
 19864 ;; Registers used:
 19865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19866 ;; Tracked objects:
 19867 ;;		On entry : F/0
 19868 ;;		On exit  : 0/0
 19869 ;;		Unchanged: 0/0
 19870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19871 ;;      Params:         3       0       0       0       0       0       0
 19872 ;;      Locals:         0       2       0       0       0       0       0
 19873 ;;      Temps:          0       0       0       0       0       0       0
 19874 ;;      Totals:         3       2       0       0       0       0       0
 19875 ;;Total ram usage:        5 bytes
 19876 ;; Hardware stack levels used:    1
 19877 ;; Hardware stack levels required when called:    4
 19878 ;; This function calls:
 19879 ;;		_ECANReceiveMessage
 19880 ;; This function is called by:
 19881 ;;		_receivePrintEventCANAL
 19882 ;;		_receivePrintEventSLCAN
 19883 ;;		_getVSCPFrame
 19884 ;; This function uses a non-reentrant model
 19885 ;;
 19886                           
 19887                           	psect	text51
 19888  001DF8                     __ptext51:
 19889                           	opt stack 0
 19890  001DF8                     _getCANFrame:
 19891                           	opt stack 23
 19892                           
 19893                           ;incstack = 0
 19894                           ;incstack = 0
 19895                           ;getCANFrame@pid stored from wreg
 19896  001DF8  CFE8 F060          	movff	wreg,getCANFrame@pid
 19897                           
 19898                           ; BSR set to: 0
 19899                           ;main.c: 2589: ECAN_RX_MSG_FLAGS flags;
 19900                           ;main.c: 2591: if (ECANReceiveMessage((unsigned long *) pid,
 19901                           ;main.c: 2592: (BYTE*) pdata,
 19902                           ;main.c: 2593: (BYTE*) pdlc,
 19903                           ;main.c: 2594: &flags)) {
 19904  001DFC  C02D  F020         	movff	getCANFrame@pdata,?_ECANReceiveMessage
 19905  001E00  C02E  F021         	movff	getCANFrame@pdata+1,?_ECANReceiveMessage+1
 19906  001E04  C02C  F022         	movff	getCANFrame@pdlc,?_ECANReceiveMessage+2
 19907  001E08  0E61               	movlw	low getCANFrame@flags
 19908  001E0A  6E23               	movwf	?_ECANReceiveMessage+3,c
 19909  001E0C  5160               	movf	getCANFrame@pid& (0+255),w,b
 19910  001E0E  EC04  F024         	call	_ECANReceiveMessage
 19911  001E12  0900               	iorlw	0
 19912  001E14  E003               	bz	l14532
 19913                           
 19914                           ;main.c: 2597: if (flags & ECAN_RX_RTR_FRAME) return 0;
 19915  001E16  0100               	movlb	0	; () banked
 19916  001E18  AD61               	btfss	getCANFrame@flags& (0+255),6,b
 19917  001E1A  D002               	goto	l1171
 19918  001E1C                     l14532:
 19919  001E1C  0E00               	movlw	0
 19920  001E1E  D003               	goto	l1172
 19921  001E20                     l1171:
 19922                           
 19923                           ; BSR set to: 0
 19924                           ;main.c: 2600: if (!(flags & ECAN_RX_XTD_FRAME)) return 0;
 19925  001E20  AB61               	btfss	getCANFrame@flags& (0+255),5,b
 19926  001E22  D7FC               	goto	l14532
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;main.c: 2602: return 1;
 19930  001E24  0E01               	movlw	1
 19931  001E26                     l1172:
 19932  001E26  0012               	return	
 19933  001E28                     __end_of_getCANFrame:
 19934                           	opt stack 0
 19935                           tblptru	equ	0xFF8
 19936                           tblptrh	equ	0xFF7
 19937                           tblptrl	equ	0xFF6
 19938                           tablat	equ	0xFF5
 19939                           prodh	equ	0xFF4
 19940                           prodl	equ	0xFF3
 19941                           intcon	equ	0xFF2
 19942                           indf0	equ	0xFEF
 19943                           postinc0	equ	0xFEE
 19944                           fsr0h	equ	0xFEA
 19945                           fsr0l	equ	0xFE9
 19946                           wreg	equ	0xFE8
 19947                           indf1	equ	0xFE7
 19948                           postinc1	equ	0xFE6
 19949                           postdec1	equ	0xFE5
 19950                           fsr1h	equ	0xFE2
 19951                           fsr1l	equ	0xFE1
 19952                           indf2	equ	0xFDF
 19953                           postinc2	equ	0xFDE
 19954                           postdec2	equ	0xFDD
 19955                           plusw2	equ	0xFDB
 19956                           fsr2h	equ	0xFDA
 19957                           fsr2l	equ	0xFD9
 19958                           status	equ	0xFD8
 19959                           
 19960 ;; *************** function _ECANReceiveMessage *****************
 19961 ;; Defined at:
 19962 ;;		line 803 in file "ECAN.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;  id              1    wreg     PTR unsigned long 
 19965 ;;		 -> getVSCPFrame@id(4), receivePrintEventSLCAN@id(4), receivePrintEventCANAL@id(4), 
 19966 ;;  data            2   31[COMRAM] PTR unsigned char 
 19967 ;;		 -> receivePrintEventCANAL@data(8), vscpData(8), 
 19968 ;;  dataLen         1   33[COMRAM] PTR unsigned char 
 19969 ;;		 -> receivePrintEventSLCAN@dlc(1), receivePrintEventCANAL@dlc(1), vscpSize(1), 
 19970 ;;  msgFlags        1   34[COMRAM] PTR enum E16333
 19971 ;;		 -> getCANFrame@flags(1), 
 19972 ;; Auto vars:     Size  Location     Type
 19973 ;;  id              1   35[COMRAM] PTR unsigned long 
 19974 ;;		 -> getVSCPFrame@id(4), receivePrintEventSLCAN@id(4), receivePrintEventCANAL@id(4), 
 19975 ;;  ptr             2   41[COMRAM] PTR unsigned char 
 19976 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 19977 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 19978 ;;  savedPtr        2   36[COMRAM] PTR unsigned char 
 19979 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 19980 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 19981 ;;  temp            1   40[COMRAM] struct .
 19982 ;;  mode            1   39[COMRAM] unsigned char 
 19983 ;;  i               1   38[COMRAM] unsigned char 
 19984 ;; Return value:  Size  Location     Type
 19985 ;;                  1    wreg      enum E15660
 19986 ;; Registers used:
 19987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19988 ;; Tracked objects:
 19989 ;;		On entry : F/0
 19990 ;;		On exit  : 0/0
 19991 ;;		Unchanged: 0/0
 19992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19993 ;;      Params:         4       0       0       0       0       0       0
 19994 ;;      Locals:         8       0       0       0       0       0       0
 19995 ;;      Temps:          0       0       0       0       0       0       0
 19996 ;;      Totals:        12       0       0       0       0       0       0
 19997 ;;Total ram usage:       12 bytes
 19998 ;; Hardware stack levels used:    1
 19999 ;; Hardware stack levels required when called:    3
 20000 ;; This function calls:
 20001 ;;		__ECANPointBuffer
 20002 ;;		__RegsToCANID
 20003 ;; This function is called by:
 20004 ;;		_getCANFrame
 20005 ;; This function uses a non-reentrant model
 20006 ;;
 20007                           
 20008                           	psect	text52
 20009  004808                     __ptext52:
 20010                           	opt stack 0
 20011  004808                     _ECANReceiveMessage:
 20012                           	opt stack 23
 20013                           
 20014                           ;incstack = 0
 20015                           ;incstack = 0
 20016                           ;ECANReceiveMessage@id stored from wreg
 20017  004808  CFE8 F024          	movff	wreg,ECANReceiveMessage@id
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;ECAN.c: 805: BYTE mode;
 20021                           ;ECAN.c: 808: BYTE *ptr, *savedPtr;
 20022                           ;ECAN.c: 809: char i;
 20023                           ;ECAN.c: 810: BYTE_VAL temp;
 20024                           ;ECAN.c: 812: _ECANRxFilterHitInfo.Val = 0;
 20025  00480C  6A35               	clrf	__ECANRxFilterHitInfo,c
 20026                           
 20027                           ; BSR set to: 0
 20028                           ;ECAN.c: 815: mode = ECANCON&0xC0;
 20029  00480E  5077               	movf	3959,w,c	;volatile
 20030  004810  0BC0               	andlw	192
 20031  004812  6E28               	movwf	ECANReceiveMessage@mode,c
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;ECAN.c: 816: if ( mode == 0x00 )
 20035  004814  6628               	tstfsz	ECANReceiveMessage@mode,c
 20036  004816  D032               	goto	l14704
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;ECAN.c: 822: {
 20040                           ;ECAN.c: 824: if ( RXB0FUL )
 20041  004818  AE60               	btfss	3936,7,c	;volatile
 20042  00481A  D012               	goto	l1346
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;ECAN.c: 825: {
 20046                           ;ECAN.c: 827: RXB0IF = 0;
 20047  00481C  90A4               	bcf	4004,0,c	;volatile
 20048                           
 20049                           ;ECAN.c: 830: if ( RXB0OVFL )
 20050  00481E  AE74               	btfss	3956,7,c	;volatile
 20051  004820  D006               	goto	l14680
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;ECAN.c: 831: {
 20055                           ;ECAN.c: 832: *msgFlags |= ECAN_RX_OVERFLOW;
 20056  004822  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20057  004824  6ED9               	movwf	fsr2l,c
 20058  004826  6ADA               	clrf	fsr2h,c
 20059  004828  0E00               	movlw	0
 20060  00482A  86DB               	bsf	plusw2,3,c
 20061                           
 20062                           ; BSR set to: 0
 20063                           ;ECAN.c: 833: RXB0OVFL = 0;
 20064  00482C  9E74               	bcf	3956,7,c	;volatile
 20065  00482E                     l14680:
 20066                           
 20067                           ; BSR set to: 0
 20068                           ;ECAN.c: 834: }
 20069                           ;ECAN.c: 836: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
 20070  00482E  A060               	btfss	3936,0,c	;volatile
 20071  004830  D002               	bra	u19805
 20072  004832  8035               	bsf	__ECANRxFilterHitInfo,0,c
 20073  004834  D001               	bra	u19807
 20074  004836                     u19805:
 20075  004836  9035               	bcf	__ECANRxFilterHitInfo,0,c
 20076  004838                     u19807:
 20077                           
 20078                           ;ECAN.c: 838: ptr = (BYTE*)&RXB0CON;
 20079  004838  0E0F               	movlw	15	;volatile
 20080  00483A  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20081  00483C  0E60               	movlw	96	;volatile
 20082  00483E  D01A               	goto	L32
 20083  004840                     l1346:
 20084                           
 20085                           ; BSR set to: 0
 20086                           ;ECAN.c: 841: else if ( RXB1CONbits.RXFUL )
 20087  004840  010F               	movlb	15	; () banked
 20088  004842  AF50               	btfss	80,7,b	;volatile
 20089  004844  D019               	goto	l14698
 20090                           
 20091                           ; BSR set to: 15
 20092                           ;ECAN.c: 842: {
 20093                           ;ECAN.c: 844: RXB1IF = 0;
 20094  004846  92A4               	bcf	4004,1,c	;volatile
 20095                           
 20096                           ;ECAN.c: 847: if ( RXB1OVFL )
 20097  004848  AC74               	btfss	3956,6,c	;volatile
 20098  00484A  D006               	goto	l14690
 20099                           
 20100                           ; BSR set to: 15
 20101                           ;ECAN.c: 848: {
 20102                           ;ECAN.c: 849: *msgFlags |= ECAN_RX_OVERFLOW;
 20103  00484C  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20104  00484E  6ED9               	movwf	fsr2l,c
 20105  004850  6ADA               	clrf	fsr2h,c
 20106  004852  0E00               	movlw	0
 20107  004854  86DB               	bsf	plusw2,3,c
 20108                           
 20109                           ; BSR set to: 15
 20110                           ;ECAN.c: 850: RXB1OVFL = 0;
 20111  004856  9C74               	bcf	3956,6,c	;volatile
 20112  004858                     l14690:
 20113                           
 20114                           ; BSR set to: 15
 20115                           ;ECAN.c: 851: }
 20116                           ;ECAN.c: 853: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
 20117  004858  5150               	movf	80,w,b	;volatile
 20118  00485A  0B07               	andlw	7
 20119  00485C  6E35               	movwf	__ECANRxFilterHitInfo,c
 20120                           
 20121                           ; BSR set to: 15
 20122                           ;ECAN.c: 855: if ( _ECANRxFilterHitInfo.Val < 0x02 )
 20123  00485E  0E02               	movlw	2
 20124  004860  6035               	cpfslt	__ECANRxFilterHitInfo,c
 20125  004862  D005               	goto	l14696
 20126                           
 20127                           ; BSR set to: 15
 20128                           ;ECAN.c: 856: *msgFlags |= ECAN_RX_DBL_BUFFERED;
 20129  004864  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20130  004866  6ED9               	movwf	fsr2l,c
 20131  004868  6ADA               	clrf	fsr2h,c
 20132  00486A  0E00               	movlw	0
 20133  00486C  8EDB               	bsf	plusw2,7,c
 20134  00486E                     l14696:
 20135                           
 20136                           ; BSR set to: 15
 20137                           ;ECAN.c: 859: ptr = (BYTE*)&RXB1CON;
 20138  00486E  0E0F               	movlw	15	;volatile
 20139  004870  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20140  004872  0E50               	movlw	80	;volatile
 20141  004874                     L32:
 20142  004874  6E2A               	movwf	ECANReceiveMessage@ptr,c
 20143                           
 20144                           ;ECAN.c: 860: }
 20145  004876  D065               	goto	l14758
 20146  004878                     l14698:
 20147                           
 20148                           ;ECAN.c: 861: else
 20149                           ;ECAN.c: 862: return FALSE;
 20150  004878  0E00               	movlw	0
 20151  00487A  D0C4               	goto	l1353
 20152  00487C                     l14704:
 20153                           
 20154                           ; BSR set to: 0
 20155                           ;ECAN.c: 869: else if ( mode == 0x40 )
 20156  00487C  5028               	movf	ECANReceiveMessage@mode,w,c
 20157  00487E  0A40               	xorlw	64
 20158  004880  E146               	bnz	l1356
 20159                           
 20160                           ; BSR set to: 0
 20161                           ;ECAN.c: 875: {
 20162                           ;ECAN.c: 876: if ( RXB0FUL )
 20163  004882  AE60               	btfss	3936,7,c	;volatile
 20164  004884  D004               	goto	l1357
 20165                           
 20166                           ; BSR set to: 0
 20167                           ;ECAN.c: 877: ptr = (BYTE*)&RXB0CON;
 20168  004886  0E0F               	movlw	15	;volatile
 20169  004888  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20170  00488A  0E60               	movlw	96	;volatile
 20171  00488C  D03E               	goto	L39
 20172  00488E                     l1357:
 20173                           
 20174                           ; BSR set to: 0
 20175                           ;ECAN.c: 879: else if (RXB1CONbits.RXFUL)
 20176  00488E  010F               	movlb	15	; () banked
 20177  004890  AF50               	btfss	80,7,b	;volatile
 20178  004892  D004               	goto	l1359
 20179                           
 20180                           ; BSR set to: 15
 20181                           ;ECAN.c: 880: ptr = (BYTE*)&RXB1CON;
 20182  004894  0E0F               	movlw	15	;volatile
 20183  004896  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20184  004898  0E50               	movlw	80	;volatile
 20185  00489A  D037               	goto	L39
 20186  00489C                     l1359:
 20187                           
 20188                           ; BSR set to: 15
 20189                           ;ECAN.c: 882: else if ( (B0TXEN==0) && B0RXFUL )
 20190  00489C  010D               	movlb	13
 20191  00489E  B5F8               	btfsc	248,2,b	;volatile
 20192  0048A0  D007               	goto	l1361
 20193  0048A2  010E               	movlb	14
 20194  0048A4  AF20               	btfss	32,7,b	;volatile
 20195  0048A6  D004               	goto	l1361
 20196                           
 20197                           ;ECAN.c: 883: ptr = (BYTE*)&B0CON;
 20198  0048A8  0E0E               	movlw	14	;volatile
 20199  0048AA  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20200  0048AC  0E20               	movlw	32	;volatile
 20201  0048AE  D02D               	goto	L39
 20202  0048B0                     l1361:
 20203                           
 20204                           ;ECAN.c: 885: else if ( (B1TXEN==0) && B1RXFUL )
 20205  0048B0  010D               	movlb	13
 20206  0048B2  B7F8               	btfsc	248,3,b	;volatile
 20207  0048B4  D007               	goto	l1363
 20208  0048B6  010E               	movlb	14
 20209  0048B8  AF30               	btfss	48,7,b	;volatile
 20210  0048BA  D004               	goto	l1363
 20211                           
 20212                           ;ECAN.c: 886: ptr = (BYTE*)&B1CON;
 20213  0048BC  0E0E               	movlw	14	;volatile
 20214  0048BE  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20215  0048C0  0E30               	movlw	48	;volatile
 20216  0048C2  D023               	goto	L39
 20217  0048C4                     l1363:
 20218                           
 20219                           ;ECAN.c: 888: else if ( (B2TXEN==0) && B2RXFUL )
 20220  0048C4  010D               	movlb	13
 20221  0048C6  B9F8               	btfsc	248,4,b	;volatile
 20222  0048C8  D007               	goto	l1365
 20223  0048CA  010E               	movlb	14
 20224  0048CC  AF40               	btfss	64,7,b	;volatile
 20225  0048CE  D004               	goto	l1365
 20226                           
 20227                           ;ECAN.c: 889: ptr = (BYTE*)&B2CON;
 20228  0048D0  0E0E               	movlw	14	;volatile
 20229  0048D2  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20230  0048D4  0E40               	movlw	64	;volatile
 20231  0048D6  D019               	goto	L39
 20232  0048D8                     l1365:
 20233                           
 20234                           ;ECAN.c: 891: else if ( (B3TXEN==0) && B3RXFUL )
 20235  0048D8  010D               	movlb	13
 20236  0048DA  BBF8               	btfsc	248,5,b	;volatile
 20237  0048DC  D005               	goto	l1367
 20238  0048DE  010E               	movlb	14
 20239  0048E0  AF50               	btfss	80,7,b	;volatile
 20240  0048E2  D002               	goto	l1367
 20241                           
 20242                           ;ECAN.c: 892: ptr = (BYTE*)&B3CON;
 20243  0048E4  0E0E               	movlw	14	;volatile
 20244  0048E6  D7D7               	goto	L40
 20245  0048E8                     l1367:
 20246                           
 20247                           ;ECAN.c: 894: else if ( (B4TXEN==0) && B4RXFUL )
 20248  0048E8  010D               	movlb	13
 20249  0048EA  BDF8               	btfsc	248,6,b	;volatile
 20250  0048EC  D005               	goto	l1369
 20251  0048EE  010E               	movlb	14
 20252  0048F0  AF60               	btfss	96,7,b	;volatile
 20253  0048F2  D002               	goto	l1369
 20254                           
 20255                           ;ECAN.c: 895: ptr = (BYTE*)&B4CON;
 20256  0048F4  0E0E               	movlw	14	;volatile
 20257  0048F6  D7C8               	goto	L41
 20258  0048F8                     l1369:
 20259                           
 20260                           ;ECAN.c: 897: else if ( (B5TXEN==0) && B5RXFUL )
 20261  0048F8  010D               	movlb	13
 20262  0048FA  BFF8               	btfsc	248,7,b	;volatile
 20263  0048FC  D7BD               	goto	l14698
 20264  0048FE  010E               	movlb	14
 20265  004900  AF70               	btfss	112,7,b	;volatile
 20266  004902  D7BA               	goto	l14698
 20267                           
 20268                           ;ECAN.c: 898: ptr = (BYTE*)&B5CON;
 20269  004904  0E0E               	movlw	14	;volatile
 20270  004906  6E2B               	movwf	ECANReceiveMessage@ptr+1,c
 20271  004908  0E70               	movlw	112	;volatile
 20272  00490A                     L39:
 20273  00490A  6E2A               	movwf	ECANReceiveMessage@ptr,c
 20274  00490C  D00A               	goto	l14748
 20275  00490E                     l1356:
 20276                           
 20277                           ; BSR set to: 0
 20278                           ;ECAN.c: 910: else
 20279                           ;ECAN.c: 915: {
 20280                           ;ECAN.c: 916: if ( FIFOEMPTY == 1 )
 20281  00490E  AE74               	btfss	3956,7,c	;volatile
 20282  004910  D7B3               	goto	l14698
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;ECAN.c: 917: {
 20286                           ;ECAN.c: 918: ptr = (BYTE*)_ECANPointBuffer(CANCON&0x07);
 20287  004912  506F               	movf	3951,w,c	;volatile
 20288  004914  0B07               	andlw	7
 20289  004916  EC54  F013         	call	__ECANPointBuffer
 20290  00491A  C019  F02A         	movff	?__ECANPointBuffer,ECANReceiveMessage@ptr
 20291  00491E  C01A  F02B         	movff	?__ECANPointBuffer+1,ECANReceiveMessage@ptr+1
 20292  004922                     l14748:
 20293                           
 20294                           ;ECAN.c: 930: _ECANRxFilterHitInfo.Val = *ptr & 0x1f;
 20295  004922  C02A  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 20296  004926  C02B  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 20297  00492A  50DF               	movf	indf2,w,c
 20298  00492C  0B1F               	andlw	31
 20299  00492E  6E35               	movwf	__ECANRxFilterHitInfo,c
 20300                           
 20301                           ;ECAN.c: 932: RXB1IF = 0;
 20302  004930  92A4               	bcf	4004,1,c	;volatile
 20303                           
 20304                           ;ECAN.c: 934: if ( RXB1OVFL )
 20305  004932  AC74               	btfss	3956,6,c	;volatile
 20306  004934  D006               	goto	l14758
 20307                           
 20308                           ;ECAN.c: 935: {
 20309                           ;ECAN.c: 936: *msgFlags |= ECAN_RX_OVERFLOW;
 20310  004936  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20311  004938  6ED9               	movwf	fsr2l,c
 20312  00493A  6ADA               	clrf	fsr2h,c
 20313  00493C  0E00               	movlw	0
 20314  00493E  86DB               	bsf	plusw2,3,c
 20315                           
 20316                           ;ECAN.c: 937: RXB1OVFL = 0;
 20317  004940  9C74               	bcf	3956,6,c	;volatile
 20318  004942                     l14758:
 20319                           
 20320                           ;ECAN.c: 942: savedPtr = ptr;
 20321  004942  C02A  F025         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
 20322  004946  C02B  F026         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
 20323                           
 20324                           ;ECAN.c: 943: *msgFlags = 0;
 20325  00494A  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20326  00494C  6ED9               	movwf	fsr2l,c
 20327  00494E  6ADA               	clrf	fsr2h,c
 20328  004950  6ADF               	clrf	indf2,c
 20329                           
 20330                           ;ECAN.c: 946: temp.Val = *(ptr+5);
 20331  004952  EE20 F005          	lfsr	2,5
 20332  004956  D857               	call	PL90	;call to abstracted procedure
 20333                           
 20334                           ;ECAN.c: 947: *dataLen = temp.Val & 0b00001111;
 20335  004958  5022               	movf	ECANReceiveMessage@dataLen,w,c
 20336  00495A  6ED9               	movwf	fsr2l,c
 20337  00495C  6ADA               	clrf	fsr2h,c
 20338  00495E  5029               	movf	ECANReceiveMessage@temp,w,c
 20339  004960  0B0F               	andlw	15
 20340  004962  6EDF               	movwf	indf2,c
 20341                           
 20342                           ;ECAN.c: 950: if ( temp.bits.b6 )
 20343  004964  AC29               	btfss	ECANReceiveMessage@temp,6,c
 20344  004966  D005               	goto	l1377
 20345                           
 20346                           ;ECAN.c: 951: *msgFlags |= ECAN_RX_RTR_FRAME;
 20347  004968  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20348  00496A  6ED9               	movwf	fsr2l,c
 20349  00496C  6ADA               	clrf	fsr2h,c
 20350  00496E  0E00               	movlw	0
 20351  004970  8CDB               	bsf	plusw2,6,c
 20352  004972                     l1377:
 20353                           
 20354                           ;ECAN.c: 954: temp.Val = *(ptr+2);
 20355  004972  EE20 F002          	lfsr	2,2
 20356  004976  D847               	call	PL90	;call to abstracted procedure
 20357                           
 20358                           ;ECAN.c: 955: if ( temp.bits.b3 )
 20359  004978  A629               	btfss	ECANReceiveMessage@temp,3,c
 20360  00497A  D008               	goto	l1378
 20361                           
 20362                           ;ECAN.c: 956: {
 20363                           ;ECAN.c: 957: *msgFlags |= ECAN_RX_XTD_FRAME;
 20364  00497C  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20365  00497E  6ED9               	movwf	fsr2l,c
 20366  004980  6ADA               	clrf	fsr2h,c
 20367  004982  0E00               	movlw	0
 20368  004984  8ADB               	bsf	plusw2,5,c
 20369                           
 20370                           ;ECAN.c: 958: temp.Val = 1;
 20371  004986  0E01               	movlw	1
 20372  004988  6E29               	movwf	ECANReceiveMessage@temp,c
 20373                           
 20374                           ;ECAN.c: 959: }
 20375  00498A  D001               	goto	l14776
 20376  00498C                     l1378:
 20377                           
 20378                           ;ECAN.c: 960: else
 20379                           ;ECAN.c: 961: temp.Val = 0;
 20380  00498C  6A29               	clrf	ECANReceiveMessage@temp,c
 20381  00498E                     l14776:
 20382                           
 20383                           ;ECAN.c: 963: _RegsToCANID(ptr+1, id, temp.Val);
 20384  00498E  282A               	incf	ECANReceiveMessage@ptr,w,c
 20385  004990  6E19               	movwf	?__RegsToCANID,c
 20386  004992  0E00               	movlw	0
 20387  004994  202B               	addwfc	ECANReceiveMessage@ptr+1,w,c
 20388  004996  6E1A               	movwf	?__RegsToCANID+1,c
 20389  004998  C024  F01B         	movff	ECANReceiveMessage@id,?__RegsToCANID+2
 20390  00499C  C029  F01C         	movff	ECANReceiveMessage@temp,?__RegsToCANID+3
 20391  0049A0  ECE0  F01C         	call	__RegsToCANID	;wreg free
 20392                           
 20393                           ;ECAN.c: 966: ptr += 6;
 20394  0049A4  0E06               	movlw	6
 20395  0049A6  262A               	addwf	ECANReceiveMessage@ptr,f,c
 20396  0049A8  0E00               	movlw	0
 20397  0049AA  222B               	addwfc	ECANReceiveMessage@ptr+1,f,c
 20398                           
 20399                           ;ECAN.c: 967: temp.Val = *dataLen;
 20400  0049AC  5022               	movf	ECANReceiveMessage@dataLen,w,c
 20401  0049AE  6ED9               	movwf	fsr2l,c
 20402  0049B0  6ADA               	clrf	fsr2h,c
 20403  0049B2  50DF               	movf	indf2,w,c
 20404  0049B4  6E29               	movwf	ECANReceiveMessage@temp,c
 20405                           
 20406                           ;ECAN.c: 968: for ( i = 0; i < temp.Val; i++ )
 20407  0049B6  6A27               	clrf	ECANReceiveMessage@i,c
 20408  0049B8  D00F               	goto	l14792
 20409  0049BA                     l14784:
 20410                           
 20411                           ;ECAN.c: 969: *data++ = *ptr++;
 20412  0049BA  C02A  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 20413  0049BE  C02B  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 20414  0049C2  C020  FFE1         	movff	ECANReceiveMessage@data,fsr1l
 20415  0049C6  C021  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
 20416  0049CA  CFDF FFE7          	movff	indf2,indf1
 20417  0049CE  4A2A               	infsnz	ECANReceiveMessage@ptr,f,c
 20418  0049D0  2A2B               	incf	ECANReceiveMessage@ptr+1,f,c
 20419  0049D2  4A20               	infsnz	ECANReceiveMessage@data,f,c
 20420  0049D4  2A21               	incf	ECANReceiveMessage@data+1,f,c
 20421  0049D6  2A27               	incf	ECANReceiveMessage@i,f,c
 20422  0049D8                     l14792:
 20423  0049D8  5029               	movf	ECANReceiveMessage@temp,w,c
 20424  0049DA  5C27               	subwf	ECANReceiveMessage@i,w,c
 20425  0049DC  E3EE               	bnc	l14784
 20426                           
 20427                           ;ECAN.c: 972: if ( IRXIF )
 20428  0049DE  AEA4               	btfss	4004,7,c	;volatile
 20429  0049E0  D006               	goto	l14798
 20430                           
 20431                           ;ECAN.c: 973: {
 20432                           ;ECAN.c: 974: *msgFlags |= ECAN_RX_INVALID_MSG;
 20433  0049E2  5023               	movf	ECANReceiveMessage@msgFlags,w,c
 20434  0049E4  6ED9               	movwf	fsr2l,c
 20435  0049E6  6ADA               	clrf	fsr2h,c
 20436  0049E8  0E00               	movlw	0
 20437  0049EA  88DB               	bsf	plusw2,4,c
 20438                           
 20439                           ;ECAN.c: 975: IRXIF = 0;
 20440  0049EC  9EA4               	bcf	4004,7,c	;volatile
 20441  0049EE                     l14798:
 20442                           
 20443                           ;ECAN.c: 976: }
 20444                           ;ECAN.c: 979: *savedPtr &= 0x7f;
 20445  0049EE  C025  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
 20446  0049F2  C026  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
 20447  0049F6  0E7F               	movlw	127
 20448  0049F8  16DF               	andwf	indf2,f,c
 20449                           
 20450                           ;ECAN.c: 983: if ( mode == 0x80 )
 20451  0049FA  5028               	movf	ECANReceiveMessage@mode,w,c
 20452  0049FC  0A80               	xorlw	128
 20453  0049FE  B4D8               	btfsc	status,2,c
 20454                           
 20455                           ;ECAN.c: 984: FIFOEMPTY = 0;
 20456  004A00  9E74               	bcf	3956,7,c	;volatile
 20457                           
 20458                           ;ECAN.c: 990: return TRUE;
 20459  004A02  0E01               	movlw	1
 20460  004A04                     l1353:
 20461  004A04  0012               	return	
 20462  004A06                     __end_of_ECANReceiveMessage:
 20463                           	opt stack 0
 20464  004A06                     PL90:
 20465                           	opt stack 23
 20466  004A06  502A               	movf	ECANReceiveMessage@ptr,w,c
 20467  004A08  26D9               	addwf	fsr2l,f,c
 20468  004A0A  502B               	movf	ECANReceiveMessage@ptr+1,w,c
 20469  004A0C  22DA               	addwfc	fsr2h,f,c
 20470  004A0E  50DF               	movf	indf2,w,c
 20471  004A10  6E29               	movwf	ECANReceiveMessage@temp,c
 20472  004A12  0012               	return	
 20473  004A14                     __end_ofPL90:
 20474                           	opt stack 0
 20475                           tblptru	equ	0xFF8
 20476                           tblptrh	equ	0xFF7
 20477                           tblptrl	equ	0xFF6
 20478                           tablat	equ	0xFF5
 20479                           prodh	equ	0xFF4
 20480                           prodl	equ	0xFF3
 20481                           intcon	equ	0xFF2
 20482                           indf0	equ	0xFEF
 20483                           postinc0	equ	0xFEE
 20484                           fsr0h	equ	0xFEA
 20485                           fsr0l	equ	0xFE9
 20486                           wreg	equ	0xFE8
 20487                           indf1	equ	0xFE7
 20488                           postinc1	equ	0xFE6
 20489                           postdec1	equ	0xFE5
 20490                           fsr1h	equ	0xFE2
 20491                           fsr1l	equ	0xFE1
 20492                           indf2	equ	0xFDF
 20493                           postinc2	equ	0xFDE
 20494                           postdec2	equ	0xFDD
 20495                           plusw2	equ	0xFDB
 20496                           fsr2h	equ	0xFDA
 20497                           fsr2l	equ	0xFD9
 20498                           status	equ	0xFD8
 20499                           
 20500 ;; *************** function __RegsToCANID *****************
 20501 ;; Defined at:
 20502 ;;		line 1156 in file "ECAN.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;  ptr             2   24[COMRAM] PTR unsigned char 
 20505 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 20506 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 20507 ;;  val             1   26[COMRAM] PTR unsigned long 
 20508 ;;		 -> getVSCPFrame@id(4), receivePrintEventSLCAN@id(4), receivePrintEventCANAL@id(4), 
 20509 ;;  type            1   27[COMRAM] unsigned char 
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;  Value           1   30[COMRAM] PTR struct _CAN_MESSAGE_
 20512 ;;		 -> getVSCPFrame@id(4), receivePrintEventSLCAN@id(4), receivePrintEventCANAL@id(4), 
 20513 ;; Return value:  Size  Location     Type
 20514 ;;		None               void
 20515 ;; Registers used:
 20516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20517 ;; Tracked objects:
 20518 ;;		On entry : 0/0
 20519 ;;		On exit  : 0/0
 20520 ;;		Unchanged: 0/0
 20521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20522 ;;      Params:         4       0       0       0       0       0       0
 20523 ;;      Locals:         1       0       0       0       0       0       0
 20524 ;;      Temps:          2       0       0       0       0       0       0
 20525 ;;      Totals:         7       0       0       0       0       0       0
 20526 ;;Total ram usage:        7 bytes
 20527 ;; Hardware stack levels used:    1
 20528 ;; Hardware stack levels required when called:    2
 20529 ;; This function calls:
 20530 ;;		Nothing
 20531 ;; This function is called by:
 20532 ;;		_ECANReceiveMessage
 20533 ;; This function uses a non-reentrant model
 20534 ;;
 20535                           
 20536                           	psect	text53
 20537  0039C0                     __ptext53:
 20538                           	opt stack 0
 20539  0039C0                     __RegsToCANID:
 20540                           	opt stack 23
 20541                           
 20542                           ;ECAN.c: 1157: CAN_MESSAGE_ID *Value;
 20543                           ;ECAN.c: 1159: Value = (CAN_MESSAGE_ID*)val;
 20544                           
 20545                           ;incstack = 0
 20546                           ;incstack = 0
 20547  0039C0  C01B  F01F         	movff	__RegsToCANID@val,__RegsToCANID@Value
 20548                           
 20549                           ;ECAN.c: 1161: if ( type == 0 )
 20550  0039C4  661C               	tstfsz	__RegsToCANID@type,c
 20551  0039C6  D02B               	goto	l14842
 20552                           
 20553                           ;ECAN.c: 1162: {
 20554                           ;ECAN.c: 1164: Value->BYTES.BYTE_1 = (*ptr << 3);
 20555  0039C8  501F               	movf	__RegsToCANID@Value,w,c
 20556  0039CA  6ED9               	movwf	fsr2l,c
 20557  0039CC  D86C               	call	PL68	;call to abstracted procedure
 20558  0039CE  361D               	rlcf	??__RegsToCANID,f,c
 20559  0039D0  90D8               	bcf	status,0,c
 20560  0039D2  361D               	rlcf	??__RegsToCANID,f,c
 20561  0039D4  90D8               	bcf	status,0,c
 20562  0039D6  341D               	rlcf	??__RegsToCANID,w,c
 20563  0039D8  6EDF               	movwf	indf2,c
 20564                           
 20565                           ;ECAN.c: 1165: Value->BYTES.BYTE_2 = *ptr >> 5;
 20566  0039DA  501F               	movf	__RegsToCANID@Value,w,c
 20567  0039DC  6ED9               	movwf	fsr2l,c
 20568  0039DE  6ADA               	clrf	fsr2h,c
 20569  0039E0  2AD9               	incf	fsr2l,f,c
 20570  0039E2  6ADA               	clrf	fsr2h,c
 20571  0039E4  D873               	call	PL78	;call to abstracted procedure
 20572  0039E6                     u20075:
 20573  0039E6  90D8               	bcf	status,0,c
 20574  0039E8  321D               	rrcf	??__RegsToCANID,f,c
 20575  0039EA  2E1E               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 20576  0039EC  D7FC               	goto	u20075
 20577  0039EE  501D               	movf	??__RegsToCANID,w,c
 20578                           
 20579                           ;ECAN.c: 1166: ptr++;
 20580                           
 20581                           ;ECAN.c: 1167: Value->BYTES.BYTE_1 |= (*ptr >> 5);
 20582  0039F0  D863               	call	PL70	;call to abstracted procedure
 20583  0039F2  0E05               	movlw	5
 20584  0039F4  6E1E               	movwf	(??__RegsToCANID+1)& (0+255),c
 20585  0039F6                     u20085:
 20586  0039F6  90D8               	bcf	status,0,c
 20587  0039F8  321D               	rrcf	??__RegsToCANID,f,c
 20588  0039FA  2E1E               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 20589  0039FC  D7FC               	goto	u20085
 20590  0039FE  501F               	movf	__RegsToCANID@Value,w,c
 20591  003A00  6ED9               	movwf	fsr2l,c
 20592  003A02  6ADA               	clrf	fsr2h,c
 20593  003A04  501D               	movf	??__RegsToCANID,w,c
 20594  003A06  12DF               	iorwf	indf2,f,c
 20595                           
 20596                           ;ECAN.c: 1168: Value->BYTES.BYTE_3 = 0x00;
 20597  003A08  D83D               	call	PL38	;call to abstracted procedure
 20598  003A0A  6ADF               	clrf	indf2,c
 20599                           
 20600                           ;ECAN.c: 1169: Value->BYTES.BYTE_4 = 0x00;
 20601  003A0C  501F               	movf	__RegsToCANID@Value,w,c
 20602  003A0E  6ED9               	movwf	fsr2l,c
 20603  003A10  6ADA               	clrf	fsr2h,c
 20604  003A12  0E03               	movlw	3
 20605  003A14  26D9               	addwf	fsr2l,f,c
 20606  003A16  6ADA               	clrf	fsr2h,c
 20607  003A18  0E00               	movlw	0
 20608  003A1A  6EDF               	movwf	indf2,c
 20609                           
 20610                           ;ECAN.c: 1170: }
 20611  003A1C  D032               	goto	l1400
 20612  003A1E                     l14842:
 20613                           
 20614                           ;ECAN.c: 1171: else
 20615                           ;ECAN.c: 1172: {
 20616                           ;ECAN.c: 1174: Value->BYTES.BYTE_3 = (*ptr << 5);
 20617  003A1E  D832               	call	PL38	;call to abstracted procedure
 20618  003A20  D855               	call	PL78	;call to abstracted procedure
 20619  003A22                     u20095:
 20620  003A22  90D8               	bcf	status,0,c
 20621  003A24  361D               	rlcf	??__RegsToCANID,f,c
 20622  003A26  2E1E               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 20623  003A28  D7FC               	goto	u20095
 20624  003A2A  501D               	movf	??__RegsToCANID,w,c
 20625  003A2C  6EDF               	movwf	indf2,c
 20626                           
 20627                           ;ECAN.c: 1175: Value->BYTES.BYTE_4 = (*ptr >> 3);
 20628  003A2E  501F               	movf	__RegsToCANID@Value,w,c
 20629  003A30  6ED9               	movwf	fsr2l,c
 20630  003A32  6ADA               	clrf	fsr2h,c
 20631  003A34  0E03               	movlw	3
 20632  003A36  26D9               	addwf	fsr2l,f,c
 20633  003A38  D836               	call	PL68	;call to abstracted procedure
 20634  003A3A  321D               	rrcf	??__RegsToCANID,f,c
 20635  003A3C  90D8               	bcf	status,0,c
 20636  003A3E  321D               	rrcf	??__RegsToCANID,f,c
 20637  003A40  90D8               	bcf	status,0,c
 20638  003A42  301D               	rrcf	??__RegsToCANID,w,c
 20639                           
 20640                           ;ECAN.c: 1176: ptr++;
 20641                           
 20642                           ;ECAN.c: 1177: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
 20643  003A44  D839               	call	PL70	;call to abstracted procedure
 20644  003A46  0E03               	movlw	3
 20645  003A48  161D               	andwf	??__RegsToCANID,f,c
 20646  003A4A  D81C               	call	PL38	;call to abstracted procedure
 20647  003A4C  501D               	movf	??__RegsToCANID,w,c
 20648  003A4E  12DF               	iorwf	indf2,f,c
 20649                           
 20650                           ;ECAN.c: 1179: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
 20651  003A50  C019  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20652  003A54  C01A  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20653  003A58  50DF               	movf	indf2,w,c
 20654  003A5A  6E1D               	movwf	??__RegsToCANID& (0+255),c
 20655  003A5C  90D8               	bcf	status,0,c
 20656  003A5E  321D               	rrcf	??__RegsToCANID,f,c
 20657  003A60  90D8               	bcf	status,0,c
 20658  003A62  321D               	rrcf	??__RegsToCANID,f,c
 20659  003A64  90D8               	bcf	status,0,c
 20660  003A66  321D               	rrcf	??__RegsToCANID,f,c
 20661  003A68  0E1C               	movlw	28
 20662  003A6A  161D               	andwf	??__RegsToCANID,f,c
 20663  003A6C  D80B               	call	PL38	;call to abstracted procedure
 20664  003A6E  501D               	movf	??__RegsToCANID,w,c
 20665  003A70  12DF               	iorwf	indf2,f,c
 20666                           
 20667                           ;ECAN.c: 1180: ptr++;
 20668                           
 20669                           ;ECAN.c: 1181: Value->BYTES.BYTE_2 = *ptr;
 20670  003A72  D80F               	call	PL64	;call to abstracted procedure
 20671  003A74  2AE1               	incf	fsr1l,f,c
 20672  003A76  6AE2               	clrf	fsr1h,c
 20673  003A78  CFDF FFE7          	movff	indf2,indf1
 20674                           
 20675                           ;ECAN.c: 1182: ptr++;
 20676                           
 20677                           ;ECAN.c: 1183: Value->BYTES.BYTE_1 = *ptr;
 20678  003A7C  D80A               	call	PL64	;call to abstracted procedure
 20679  003A7E  CFDF FFE7          	movff	indf2,indf1
 20680  003A82                     l1400:
 20681  003A82  0012               	return	
 20682  003A84                     __end_of__RegsToCANID:
 20683                           	opt stack 0
 20684  003A84                     PL38:
 20685                           	opt stack 23
 20686  003A84  501F               	movf	__RegsToCANID@Value,w,c
 20687  003A86  6ED9               	movwf	fsr2l,c
 20688  003A88  6ADA               	clrf	fsr2h,c
 20689  003A8A  0E02               	movlw	2
 20690  003A8C  26D9               	addwf	fsr2l,f,c
 20691  003A8E  6ADA               	clrf	fsr2h,c
 20692  003A90  0012               	return	
 20693  003A92                     __end_ofPL38:
 20694                           	opt stack 0
 20695  003A92                     PL64:
 20696                           	opt stack 23
 20697  003A92  4A19               	infsnz	__RegsToCANID@ptr,f,c
 20698  003A94  2A1A               	incf	__RegsToCANID@ptr+1,f,c
 20699  003A96  C019  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20700  003A9A  C01A  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20701  003A9E  501F               	movf	__RegsToCANID@Value,w,c
 20702  003AA0  6EE1               	movwf	fsr1l,c
 20703  003AA2  6AE2               	clrf	fsr1h,c
 20704  003AA4  0012               	return	
 20705  003AA6                     __end_ofPL64:
 20706                           	opt stack 0
 20707  003AA6                     PL68:
 20708                           	opt stack 23
 20709  003AA6  6ADA               	clrf	fsr2h,c
 20710  003AA8  C019  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 20711  003AAC  C01A  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 20712  003AB0  50E7               	movf	indf1,w,c
 20713  003AB2  6E1D               	movwf	??__RegsToCANID& (0+255),c
 20714  003AB4  90D8               	bcf	status,0,c
 20715  003AB6  0012               	return	
 20716  003AB8                     __end_ofPL68:
 20717                           	opt stack 0
 20718  003AB8                     PL70:
 20719                           	opt stack 23
 20720  003AB8  6EDF               	movwf	indf2,c
 20721  003ABA  4A19               	infsnz	__RegsToCANID@ptr,f,c
 20722  003ABC  2A1A               	incf	__RegsToCANID@ptr+1,f,c
 20723  003ABE  C019  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20724  003AC2  C01A  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20725  003AC6  50DF               	movf	indf2,w,c
 20726  003AC8  6E1D               	movwf	??__RegsToCANID& (0+255),c
 20727  003ACA  0012               	return	
 20728  003ACC                     __end_ofPL70:
 20729                           	opt stack 0
 20730  003ACC                     PL78:
 20731                           	opt stack 23
 20732  003ACC  C019  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 20733  003AD0  C01A  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 20734  003AD4  50E7               	movf	indf1,w,c
 20735  003AD6  6E1D               	movwf	??__RegsToCANID& (0+255),c
 20736  003AD8  0E05               	movlw	5
 20737  003ADA  6E1E               	movwf	(??__RegsToCANID+1)& (0+255),c
 20738  003ADC  0C05               	retlw	5
 20739  003ADE                     __end_ofPL78:
 20740                           	opt stack 0
 20741                           tblptru	equ	0xFF8
 20742                           tblptrh	equ	0xFF7
 20743                           tblptrl	equ	0xFF6
 20744                           tablat	equ	0xFF5
 20745                           prodh	equ	0xFF4
 20746                           prodl	equ	0xFF3
 20747                           intcon	equ	0xFF2
 20748                           indf0	equ	0xFEF
 20749                           postinc0	equ	0xFEE
 20750                           fsr0h	equ	0xFEA
 20751                           fsr0l	equ	0xFE9
 20752                           wreg	equ	0xFE8
 20753                           indf1	equ	0xFE7
 20754                           postinc1	equ	0xFE6
 20755                           postdec1	equ	0xFE5
 20756                           fsr1h	equ	0xFE2
 20757                           fsr1l	equ	0xFE1
 20758                           indf2	equ	0xFDF
 20759                           postinc2	equ	0xFDE
 20760                           postdec2	equ	0xFDD
 20761                           plusw2	equ	0xFDB
 20762                           fsr2h	equ	0xFDA
 20763                           fsr2l	equ	0xFD9
 20764                           status	equ	0xFD8
 20765                           
 20766 ;; *************** function __ECANPointBuffer *****************
 20767 ;; Defined at:
 20768 ;;		line 1207 in file "ECAN.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  b               1    wreg     unsigned char 
 20771 ;; Auto vars:     Size  Location     Type
 20772 ;;  b               1   27[COMRAM] unsigned char 
 20773 ;;  pt              2   28[COMRAM] PTR unsigned char 
 20774 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 20775 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 20776 ;; Return value:  Size  Location     Type
 20777 ;;                  2   24[COMRAM] PTR unsigned char 
 20778 ;; Registers used:
 20779 ;;		wreg, status,2, status,0
 20780 ;; Tracked objects:
 20781 ;;		On entry : F/0
 20782 ;;		On exit  : 0/0
 20783 ;;		Unchanged: 0/0
 20784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20785 ;;      Params:         3       0       0       0       0       0       0
 20786 ;;      Locals:         3       0       0       0       0       0       0
 20787 ;;      Temps:          0       0       0       0       0       0       0
 20788 ;;      Totals:         6       0       0       0       0       0       0
 20789 ;;Total ram usage:        6 bytes
 20790 ;; Hardware stack levels used:    1
 20791 ;; Hardware stack levels required when called:    2
 20792 ;; This function calls:
 20793 ;;		Nothing
 20794 ;; This function is called by:
 20795 ;;		_ECANReceiveMessage
 20796 ;; This function uses a non-reentrant model
 20797 ;;
 20798                           
 20799                           	psect	text54
 20800  0026A8                     __ptext54:
 20801                           	opt stack 0
 20802  0026A8                     __ECANPointBuffer:
 20803                           	opt stack 23
 20804                           
 20805                           ;incstack = 0
 20806                           ;incstack = 0
 20807                           ;__ECANPointBuffer@b stored from wreg
 20808  0026A8  CFE8 F01C          	movff	wreg,__ECANPointBuffer@b
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;ECAN.c: 1208: BYTE* pt;
 20812                           ;ECAN.c: 1210: switch(b)
 20813  0026AC  D024               	goto	l14828
 20814  0026AE                     l14810:
 20815                           
 20816                           ; BSR set to: 0
 20817                           ;ECAN.c: 1213: pt=(BYTE*)&RXB0CON;
 20818  0026AE  0E0F               	movlw	15	;volatile
 20819  0026B0  6E1E               	movwf	__ECANPointBuffer@pt+1,c
 20820  0026B2  0E60               	movlw	96	;volatile
 20821  0026B4  D01E               	goto	L48
 20822  0026B6                     l14812:
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;ECAN.c: 1216: pt=(BYTE*)&RXB1CON;
 20826  0026B6  010F               	movlb	15	; () banked
 20827  0026B8  0E0F               	movlw	15	;volatile
 20828  0026BA  6E1E               	movwf	__ECANPointBuffer@pt+1,c
 20829  0026BC  0E50               	movlw	80	;volatile
 20830  0026BE  D019               	goto	L48
 20831  0026C0                     l14814:
 20832                           
 20833                           ; BSR set to: 0
 20834                           ;ECAN.c: 1219: pt=(BYTE*)&B0CON;
 20835  0026C0  010E               	movlb	14	; () banked
 20836  0026C2  0E0E               	movlw	14	;volatile
 20837  0026C4  6E1E               	movwf	__ECANPointBuffer@pt+1,c
 20838  0026C6  0E20               	movlw	32	;volatile
 20839  0026C8  D014               	goto	L48
 20840  0026CA                     l14816:
 20841                           
 20842                           ; BSR set to: 0
 20843                           ;ECAN.c: 1222: pt=(BYTE*)&B1CON;
 20844  0026CA  010E               	movlb	14	; () banked
 20845  0026CC  0E0E               	movlw	14	;volatile
 20846  0026CE  6E1E               	movwf	__ECANPointBuffer@pt+1,c
 20847  0026D0  0E30               	movlw	48	;volatile
 20848  0026D2  D00F               	goto	L48
 20849  0026D4                     l14818:
 20850                           
 20851                           ; BSR set to: 0
 20852                           ;ECAN.c: 1225: pt=(BYTE*)&B2CON;
 20853  0026D4  010E               	movlb	14	; () banked
 20854  0026D6  0E0E               	movlw	14	;volatile
 20855  0026D8  6E1E               	movwf	__ECANPointBuffer@pt+1,c
 20856  0026DA  0E40               	movlw	64	;volatile
 20857  0026DC  D00A               	goto	L48
 20858  0026DE                     l14820:
 20859                           
 20860                           ; BSR set to: 0
 20861                           ;ECAN.c: 1228: pt=(BYTE*)&B3CON;
 20862  0026DE  010E               	movlb	14	; () banked
 20863  0026E0  0E0E               	movlw	14	;volatile
 20864  0026E2  D7EB               	goto	L49
 20865  0026E4                     l14822:
 20866                           
 20867                           ; BSR set to: 0
 20868                           ;ECAN.c: 1231: pt=(BYTE*)&B4CON;
 20869  0026E4  010E               	movlb	14	; () banked
 20870  0026E6  0E0E               	movlw	14	;volatile
 20871  0026E8  D7E3               	goto	L50
 20872  0026EA                     l14824:
 20873                           
 20874                           ; BSR set to: 0
 20875                           ;ECAN.c: 1234: pt=(BYTE*)&B5CON;
 20876  0026EA  010E               	movlb	14	; () banked
 20877  0026EC  0E0E               	movlw	14	;volatile
 20878  0026EE  6E1E               	movwf	__ECANPointBuffer@pt+1,c
 20879  0026F0  0E70               	movlw	112	;volatile
 20880  0026F2                     L48:
 20881  0026F2  6E1D               	movwf	__ECANPointBuffer@pt,c
 20882                           
 20883                           ;ECAN.c: 1235: break;
 20884  0026F4  D00F               	goto	l1405
 20885  0026F6                     l14828:
 20886                           
 20887                           ; BSR set to: 0
 20888  0026F6  501C               	movf	__ECANPointBuffer@b,w,c
 20889                           
 20890                           ; Switch size 1, requested type "space"
 20891                           ; Number of cases is 7, Range of values is 0 to 6
 20892                           ; switch strategies available:
 20893                           ; Name         Instructions Cycles
 20894                           ; simple_byte           22    12 (average)
 20895                           ;	Chosen strategy is simple_byte
 20896  0026F8  E0DA               	bz	l14810
 20897  0026FA  0A01               	xorlw	1	; case 1
 20898  0026FC  E0DC               	bz	l14812
 20899  0026FE  0A03               	xorlw	3	; case 2
 20900  002700  E0DF               	bz	l14814
 20901  002702  0A01               	xorlw	1	; case 3
 20902  002704  E0E2               	bz	l14816
 20903  002706  0A07               	xorlw	7	; case 4
 20904  002708  E0E5               	bz	l14818
 20905  00270A  0A01               	xorlw	1	; case 5
 20906  00270C  E0E8               	bz	l14820
 20907  00270E  0A03               	xorlw	3	; case 6
 20908  002710  E0E9               	bz	l14822
 20909  002712  D7EB               	goto	l14824
 20910  002714                     l1405:
 20911                           
 20912                           ;ECAN.c: 1237: return (pt);
 20913  002714  C01D  F019         	movff	__ECANPointBuffer@pt,?__ECANPointBuffer
 20914  002718  C01E  F01A         	movff	__ECANPointBuffer@pt+1,?__ECANPointBuffer+1
 20915  00271C  0012               	return	
 20916  00271E                     __end_of__ECANPointBuffer:
 20917                           	opt stack 0
 20918                           tblptru	equ	0xFF8
 20919                           tblptrh	equ	0xFF7
 20920                           tblptrl	equ	0xFF6
 20921                           tablat	equ	0xFF5
 20922                           prodh	equ	0xFF4
 20923                           prodl	equ	0xFF3
 20924                           intcon	equ	0xFF2
 20925                           indf0	equ	0xFEF
 20926                           postinc0	equ	0xFEE
 20927                           fsr0h	equ	0xFEA
 20928                           fsr0l	equ	0xFE9
 20929                           wreg	equ	0xFE8
 20930                           indf1	equ	0xFE7
 20931                           postinc1	equ	0xFE6
 20932                           postdec1	equ	0xFE5
 20933                           fsr1h	equ	0xFE2
 20934                           fsr1l	equ	0xFE1
 20935                           indf2	equ	0xFDF
 20936                           postinc2	equ	0xFDE
 20937                           postdec2	equ	0xFDD
 20938                           plusw2	equ	0xFDB
 20939                           fsr2h	equ	0xFDA
 20940                           fsr2l	equ	0xFD9
 20941                           status	equ	0xFD8
 20942                           
 20943 ;; *************** function _sprintf *****************
 20944 ;; Defined at:
 20945 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;  sp              2    0[BANK0 ] PTR unsigned char 
 20948 ;;		 -> wrkbuf(80), 
 20949 ;;  f               2    2[BANK0 ] PTR const unsigned char 
 20950 ;;		 -> STR_192(3), STR_191(7), STR_185(3), STR_184(7), 
 20951 ;;		 -> STR_181(4), STR_180(8), STR_177(4), STR_176(8), 
 20952 ;;		 -> STR_173(4), STR_172(8), STR_169(4), STR_168(8), 
 20953 ;;		 -> STR_165(4), STR_164(7), STR_161(4), STR_160(7), 
 20954 ;;		 -> STR_157(4), STR_156(7), STR_153(4), STR_152(7), 
 20955 ;;		 -> STR_147(3), STR_146(7), STR_144(3), STR_143(7), 
 20956 ;;		 -> STR_141(3), STR_140(7), STR_138(3), STR_137(7), 
 20957 ;;		 -> STR_135(3), STR_134(7), STR_132(3), STR_131(7), 
 20958 ;;		 -> STR_80(3), STR_79(7), STR_64(3), STR_63(7), 
 20959 ;;		 -> STR_62(3), STR_61(7), STR_58(3), STR_57(7), 
 20960 ;;		 -> STR_55(3), STR_54(7), STR_53(3), STR_52(7), 
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;  idx             1   11[BANK0 ] unsigned char 
 20963 ;;  _val            4   23[BANK0 ] struct .
 20964 ;;  flag            2   28[BANK0 ] unsigned short 
 20965 ;;  width           2   21[BANK0 ] int 
 20966 ;;  prec            2   19[BANK0 ] int 
 20967 ;;  c               1   27[BANK0 ] char 
 20968 ;;  ap              1   18[BANK0 ] PTR void [1]
 20969 ;;		 -> ?_sprintf(2), 
 20970 ;; Return value:  Size  Location     Type
 20971 ;;                  2    0[BANK0 ] int 
 20972 ;; Registers used:
 20973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20974 ;; Tracked objects:
 20975 ;;		On entry : F/0
 20976 ;;		On exit  : F/0
 20977 ;;		Unchanged: 0/0
 20978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20979 ;;      Params:         0       8       0       0       0       0       0
 20980 ;;      Locals:         0      19       0       0       0       0       0
 20981 ;;      Temps:          0       3       0       0       0       0       0
 20982 ;;      Totals:         0      30       0       0       0       0       0
 20983 ;;Total ram usage:       30 bytes
 20984 ;; Hardware stack levels used:    1
 20985 ;; Hardware stack levels required when called:    3
 20986 ;; This function calls:
 20987 ;;		_isdigit
 20988 ;;		___lldiv
 20989 ;;		___llmod
 20990 ;;		___wmul
 20991 ;; This function is called by:
 20992 ;;		_doModeVerbose
 20993 ;;		_receivePrintEventVerbose
 20994 ;;		_printStatistics
 20995 ;;		_printErrors
 20996 ;; This function uses a non-reentrant model
 20997 ;;
 20998                           
 20999                           	psect	text55
 21000  0052BE                     __ptext55:
 21001                           	opt stack 0
 21002  0052BE                     _sprintf:
 21003                           	opt stack 25
 21004                           
 21005                           ; BSR set to: 0
 21006                           ;doprnt.c: 494: va_list ap;
 21007                           ;doprnt.c: 499: signed char c;
 21008                           ;doprnt.c: 501: int width;
 21009                           ;doprnt.c: 504: int prec;
 21010                           ;doprnt.c: 508: unsigned short flag;
 21011                           ;doprnt.c: 527: union {
 21012                           ;doprnt.c: 528: unsigned long _val;
 21013                           ;doprnt.c: 529: struct {
 21014                           ;doprnt.c: 530: const char * _cp;
 21015                           ;doprnt.c: 531: unsigned _len;
 21016                           ;doprnt.c: 532: } _str;
 21017                           ;doprnt.c: 533: } _val;
 21018                           ;doprnt.c: 542: *ap = __va_start();
 21019                           
 21020                           ;incstack = 0
 21021                           ;incstack = 0
 21022  0052BE  0E64               	movlw	low (?_sprintf+4)
 21023  0052C0  6F72               	movwf	sprintf@ap& (0+255),b
 21024                           
 21025                           ;doprnt.c: 545: while(c = *f++) {
 21026  0052C2  D332               	goto	l11362
 21027  0052C4                     l11028:
 21028                           
 21029                           ; BSR set to: 0
 21030                           ;doprnt.c: 547: if(c != '%')
 21031  0052C4  517B               	movf	sprintf@c& (0+255),w,b
 21032  0052C6  0A25               	xorlw	37
 21033  0052C8  E009               	bz	l1529
 21034                           
 21035                           ; BSR set to: 0
 21036                           ;doprnt.c: 549: {
 21037                           ;doprnt.c: 550: ((*sp++ = (c)));
 21038  0052CA  C060  FFD9         	movff	sprintf@sp,fsr2l
 21039  0052CE  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 21040  0052D2  C07B  FFDF         	movff	sprintf@c,indf2
 21041                           
 21042                           ; BSR set to: 0
 21043  0052D6  4B60               	infsnz	sprintf@sp& (0+255),f,b
 21044  0052D8  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 21045                           
 21046                           ;doprnt.c: 551: continue;
 21047  0052DA  D326               	goto	l11362
 21048  0052DC                     l1529:
 21049                           
 21050                           ; BSR set to: 0
 21051                           ;doprnt.c: 552: }
 21052                           ;doprnt.c: 555: width = 0;
 21053  0052DC  6B75               	clrf	sprintf@width& (0+255),b
 21054  0052DE  6B76               	clrf	(sprintf@width+1)& (0+255),b
 21055                           
 21056                           ;doprnt.c: 557: flag = 0;
 21057  0052E0  6B7C               	clrf	sprintf@flag& (0+255),b
 21058  0052E2  6B7D               	clrf	(sprintf@flag+1)& (0+255),b
 21059  0052E4  D009               	goto	l11044
 21060  0052E6                     l11034:
 21061                           
 21062                           ; BSR set to: 0
 21063                           ;doprnt.c: 563: flag |= 0x08;
 21064  0052E6  877C               	bsf	sprintf@flag& (0+255),3,b
 21065  0052E8  D005               	goto	L51
 21066  0052EA                     l11036:
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;doprnt.c: 570: flag |= 0x01;
 21070  0052EA  817C               	bsf	sprintf@flag& (0+255),0,b
 21071  0052EC  D003               	goto	L51
 21072  0052EE                     l11038:
 21073                           
 21074                           ; BSR set to: 0
 21075                           ;doprnt.c: 583: flag |= 0x800;
 21076  0052EE  877D               	bsf	(sprintf@flag+1)& (0+255),3,b
 21077  0052F0  D001               	goto	L51
 21078  0052F2                     l11040:
 21079                           
 21080                           ; BSR set to: 0
 21081                           ;doprnt.c: 589: flag |= 0x04;
 21082  0052F2  857C               	bsf	sprintf@flag& (0+255),2,b
 21083  0052F4                     L51:
 21084                           
 21085                           ;doprnt.c: 590: f++;
 21086  0052F4  4B62               	infsnz	sprintf@f& (0+255),f,b
 21087  0052F6  2B63               	incf	(sprintf@f+1)& (0+255),f,b
 21088  0052F8                     l11044:
 21089                           
 21090                           ; BSR set to: 0
 21091  0052F8  C062  FFF6         	movff	sprintf@f,tblptrl
 21092  0052FC  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21093  005300  0008               	tblrd		*
 21094  005302  50F5               	movf	tablat,w,c
 21095                           
 21096                           ; Switch size 1, requested type "space"
 21097                           ; Number of cases is 4, Range of values is 32 to 48
 21098                           ; switch strategies available:
 21099                           ; Name         Instructions Cycles
 21100                           ; simple_byte           13     7 (average)
 21101                           ;	Chosen strategy is simple_byte
 21102  005304  0A20               	xorlw	32	; case 32
 21103  005306  E0F1               	bz	l11036
 21104  005308  0A03               	xorlw	3	; case 35
 21105  00530A  E0F1               	bz	l11038
 21106  00530C  0A0E               	xorlw	14	; case 45
 21107  00530E  E0EB               	bz	l11034
 21108  005310  0A1D               	xorlw	29	; case 48
 21109  005312  E0EF               	bz	l11040
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;doprnt.c: 602: if(flag & 0x08)
 21113  005314  B77C               	btfsc	sprintf@flag& (0+255),3,b
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;doprnt.c: 603: flag &= ~0x04;
 21117  005316  957C               	bcf	sprintf@flag& (0+255),2,b
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 21121  005318  C062  FFF6         	movff	sprintf@f,tblptrl
 21122  00531C  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21123  005320  0008               	tblrd		*
 21124  005322  50F5               	movf	tablat,w,c
 21125  005324  ECAD  F00E         	call	_isdigit
 21126  005328  E327               	bnc	l11060
 21127                           
 21128                           ;doprnt.c: 607: width = 0;
 21129  00532A  0100               	movlb	0	; () banked
 21130  00532C  6B75               	clrf	sprintf@width& (0+255),b
 21131  00532E  6B76               	clrf	(sprintf@width+1)& (0+255),b
 21132  005330                     l11052:
 21133                           
 21134                           ;doprnt.c: 609: width *= 10;
 21135  005330  C075  F019         	movff	sprintf@width,?___wmul
 21136  005334  C076  F01A         	movff	sprintf@width+1,?___wmul+1
 21137  005338  6A1C               	clrf	?___wmul+3,c
 21138  00533A  0E0A               	movlw	10
 21139  00533C  6E1B               	movwf	?___wmul+2,c
 21140  00533E  EC14  F00F         	call	___wmul	;wreg free
 21141  005342  C019  F075         	movff	?___wmul,sprintf@width
 21142  005346  C01A  F076         	movff	?___wmul+1,sprintf@width+1
 21143                           
 21144                           ;doprnt.c: 610: width += *f++ - '0';
 21145  00534A  0100               	movlb	0	; () banked
 21146  00534C  C062  FFF6         	movff	sprintf@f,tblptrl
 21147  005350  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21148  005354  0008               	tblrd		*
 21149  005356  CFF5 F068          	movff	tablat,??_sprintf
 21150  00535A  0ED0               	movlw	208
 21151  00535C  2568               	addwf	??_sprintf& (0+255),w,b
 21152  00535E  6F69               	movwf	(??_sprintf+1)& (0+255),b
 21153  005360  6B6A               	clrf	(??_sprintf+2)& (0+255),b
 21154  005362  0EFF               	movlw	255
 21155  005364  236A               	addwfc	(??_sprintf+2)& (0+255),f,b
 21156  005366  5169               	movf	(??_sprintf+1)& (0+255),w,b
 21157  005368  2775               	addwf	sprintf@width& (0+255),f,b
 21158  00536A  516A               	movf	(??_sprintf+2)& (0+255),w,b
 21159  00536C  2376               	addwfc	(sprintf@width+1)& (0+255),f,b
 21160                           
 21161                           ; BSR set to: 0
 21162                           
 21163                           ; BSR set to: 0
 21164                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 21165  00536E  DB3A               	call	PL80	;call to abstracted procedure
 21166  005370  ECAD  F00E         	call	_isdigit
 21167  005374  E315               	bnc	l11068
 21168  005376  D7DC               	goto	l11052
 21169  005378                     l11060:
 21170  005378  0100               	movlb	0	; () banked
 21171  00537A  C062  FFF6         	movff	sprintf@f,tblptrl
 21172  00537E  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21173  005382  0008               	tblrd		*
 21174  005384  50F5               	movf	tablat,w,c
 21175  005386  0A2A               	xorlw	42
 21176  005388  E10B               	bnz	l11068
 21177                           
 21178                           ; BSR set to: 0
 21179                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 21180  00538A  5172               	movf	sprintf@ap& (0+255),w,b
 21181  00538C  6ED9               	movwf	fsr2l,c
 21182  00538E  6ADA               	clrf	fsr2h,c
 21183  005390  CFDE F075          	movff	postinc2,sprintf@width
 21184  005394  CFDD F076          	movff	postdec2,sprintf@width+1
 21185                           
 21186                           ; BSR set to: 0
 21187  005398  0E02               	movlw	2
 21188  00539A  2772               	addwf	sprintf@ap& (0+255),f,b
 21189                           
 21190                           ; BSR set to: 0
 21191                           ;doprnt.c: 615: f++;
 21192  00539C  4B62               	infsnz	sprintf@f& (0+255),f,b
 21193  00539E  2B63               	incf	(sprintf@f+1)& (0+255),f,b
 21194  0053A0                     l11068:
 21195                           
 21196                           ;doprnt.c: 617: }
 21197                           ;doprnt.c: 620: if(*f == '.') {
 21198  0053A0  0100               	movlb	0	; () banked
 21199  0053A2  C062  FFF6         	movff	sprintf@f,tblptrl
 21200  0053A6  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21201  0053AA  0008               	tblrd		*
 21202  0053AC  50F5               	movf	tablat,w,c
 21203  0053AE  0A2E               	xorlw	46
 21204  0053B0  E138               	bnz	l1545
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;doprnt.c: 621: flag |= 0x4000;
 21208  0053B2  8D7D               	bsf	(sprintf@flag+1)& (0+255),6,b
 21209                           
 21210                           ;doprnt.c: 622: f++;
 21211                           
 21212                           ; BSR set to: 0
 21213                           ;doprnt.c: 624: if(*f == '*') {
 21214  0053B4  DB17               	call	PL80	;call to abstracted procedure
 21215  0053B6  0A2A               	xorlw	42
 21216  0053B8  E10C               	bnz	l1546
 21217                           
 21218                           ; BSR set to: 0
 21219                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 21220  0053BA  5172               	movf	sprintf@ap& (0+255),w,b
 21221  0053BC  6ED9               	movwf	fsr2l,c
 21222  0053BE  6ADA               	clrf	fsr2h,c
 21223  0053C0  CFDE F073          	movff	postinc2,sprintf@prec
 21224  0053C4  CFDD F074          	movff	postdec2,sprintf@prec+1
 21225                           
 21226                           ; BSR set to: 0
 21227  0053C8  0E02               	movlw	2
 21228  0053CA  2772               	addwf	sprintf@ap& (0+255),f,b
 21229                           
 21230                           ; BSR set to: 0
 21231                           ;doprnt.c: 626: f++;
 21232  0053CC  4B62               	infsnz	sprintf@f& (0+255),f,b
 21233  0053CE  2B63               	incf	(sprintf@f+1)& (0+255),f,b
 21234                           
 21235                           ;doprnt.c: 627: } else
 21236  0053D0  D089               	goto	l11138
 21237  0053D2                     l1546:
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;doprnt.c: 629: {
 21241                           ;doprnt.c: 630: prec = 0;
 21242  0053D2  6B73               	clrf	sprintf@prec& (0+255),b
 21243  0053D4  6B74               	clrf	(sprintf@prec+1)& (0+255),b
 21244                           
 21245                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 21246  0053D6  D01B               	goto	l11084
 21247  0053D8                     l11080:
 21248                           
 21249                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 21250  0053D8  C073  F019         	movff	sprintf@prec,?___wmul
 21251  0053DC  C074  F01A         	movff	sprintf@prec+1,?___wmul+1
 21252  0053E0  6A1C               	clrf	?___wmul+3,c
 21253  0053E2  0E0A               	movlw	10
 21254  0053E4  6E1B               	movwf	?___wmul+2,c
 21255  0053E6  EC14  F00F         	call	___wmul	;wreg free
 21256  0053EA  0100               	movlb	0	; () banked
 21257  0053EC  C062  FFF6         	movff	sprintf@f,tblptrl
 21258  0053F0  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21259  0053F4  0008               	tblrd		*
 21260  0053F6  50F5               	movf	tablat,w,c
 21261  0053F8  2619               	addwf	?___wmul,f,c
 21262  0053FA  0E00               	movlw	0
 21263  0053FC  221A               	addwfc	?___wmul+1,f,c
 21264  0053FE  0ED0               	movlw	208
 21265  005400  2419               	addwf	?___wmul,w,c
 21266  005402  6F73               	movwf	sprintf@prec& (0+255),b
 21267  005404  0EFF               	movlw	255
 21268  005406  201A               	addwfc	?___wmul+1,w,c
 21269  005408  6F74               	movwf	(sprintf@prec+1)& (0+255),b
 21270                           
 21271                           ; BSR set to: 0
 21272  00540A  4B62               	infsnz	sprintf@f& (0+255),f,b
 21273  00540C  2B63               	incf	(sprintf@f+1)& (0+255),f,b
 21274  00540E                     l11084:
 21275                           
 21276                           ; BSR set to: 0
 21277  00540E  C062  FFF6         	movff	sprintf@f,tblptrl
 21278  005412  C063  FFF7         	movff	sprintf@f+1,tblptrh
 21279  005416  0008               	tblrd		*
 21280  005418  50F5               	movf	tablat,w,c
 21281  00541A  ECAD  F00E         	call	_isdigit
 21282  00541E  E362               	bnc	l11138
 21283  005420  D7DB               	goto	l11080
 21284  005422                     l1545:
 21285                           
 21286                           ; BSR set to: 0
 21287                           ;doprnt.c: 635: prec = 0;
 21288  005422  6B73               	clrf	sprintf@prec& (0+255),b
 21289  005424  6B74               	clrf	(sprintf@prec+1)& (0+255),b
 21290  005426  D05E               	goto	l11138
 21291  005428                     l11086:
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;doprnt.c: 652: flag |= 0x10;
 21295  005428  897C               	bsf	sprintf@flag& (0+255),4,b
 21296                           
 21297                           ;doprnt.c: 653: goto loop;
 21298  00542A  D05C               	goto	l11138
 21299  00542C                     l11088:
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;doprnt.c: 700: flag |= 0x40;
 21303  00542C  8D7C               	bsf	sprintf@flag& (0+255),6,b
 21304                           
 21305                           ;doprnt.c: 702: break;
 21306  00542E  D070               	goto	l11140
 21307  005430                     l11090:
 21308                           
 21309                           ; BSR set to: 0
 21310                           ;doprnt.c: 723: flag |= 0x20;
 21311  005430  8B7C               	bsf	sprintf@flag& (0+255),5,b
 21312  005432                     l1562:
 21313                           
 21314                           ; BSR set to: 0
 21315                           ;doprnt.c: 730: flag |= 0x80;
 21316  005432  8F7C               	bsf	sprintf@flag& (0+255),7,b
 21317                           
 21318                           ;doprnt.c: 732: break;
 21319  005434  D06D               	goto	l11140
 21320  005436                     l11092:
 21321                           
 21322                           ; BSR set to: 0
 21323                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 21324  005436  5174               	movf	(sprintf@prec+1)& (0+255),w,b
 21325  005438  1173               	iorwf	sprintf@prec& (0+255),w,b
 21326  00543A  E009               	bz	l11098
 21327                           
 21328                           ; BSR set to: 0
 21329  00543C  5178               	movf	(sprintf@_val+1)& (0+255),w,b
 21330  00543E  5D73               	subwf	sprintf@prec& (0+255),w,b
 21331  005440  5179               	movf	(sprintf@_val+2)& (0+255),w,b
 21332  005442  5974               	subwfb	(sprintf@prec+1)& (0+255),w,b
 21333  005444  E204               	bc	l11098
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;doprnt.c: 763: _val._str._len = prec;
 21337  005446  C073  F078         	movff	sprintf@prec,sprintf@_val+1
 21338  00544A  C074  F079         	movff	sprintf@prec+1,sprintf@_val+2
 21339  00544E                     l11098:
 21340                           
 21341                           ; BSR set to: 0
 21342                           ;doprnt.c: 766: if(width > _val._str._len)
 21343  00544E  5175               	movf	sprintf@width& (0+255),w,b
 21344  005450  5D78               	subwf	(sprintf@_val+1)& (0+255),w,b
 21345  005452  5176               	movf	(sprintf@width+1)& (0+255),w,b
 21346  005454  5979               	subwfb	(sprintf@_val+2)& (0+255),w,b
 21347  005456  E207               	bc	l1565
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;doprnt.c: 767: width -= _val._str._len;
 21351  005458  EE20  F078         	lfsr	2,sprintf@_val+1
 21352  00545C  50DE               	movf	postinc2,w,c
 21353  00545E  5F75               	subwf	sprintf@width& (0+255),f,b
 21354  005460  50DD               	movf	postdec2,w,c
 21355  005462  5B76               	subwfb	(sprintf@width+1)& (0+255),f,b
 21356  005464  D002               	goto	l1566
 21357  005466                     l1565:
 21358                           
 21359                           ; BSR set to: 0
 21360                           ;doprnt.c: 768: else
 21361                           ;doprnt.c: 769: width = 0;
 21362  005466  6B75               	clrf	sprintf@width& (0+255),b
 21363  005468  6B76               	clrf	(sprintf@width+1)& (0+255),b
 21364  00546A                     l1566:
 21365                           
 21366                           ; BSR set to: 0
 21367                           ;doprnt.c: 771: if(!(flag & 0x08))
 21368  00546A  A77C               	btfss	sprintf@flag& (0+255),3,b
 21369  00546C  D004               	goto	l11108
 21370  00546E  D015               	goto	l11116
 21371  005470                     l11104:
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;doprnt.c: 774: ((*sp++ = (' ')));
 21375  005470  DAA8               	call	PL62	;call to abstracted procedure
 21376                           
 21377                           ; BSR set to: 0
 21378  005472  4B60               	infsnz	sprintf@sp& (0+255),f,b
 21379  005474  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 21380  005476                     l11108:
 21381                           
 21382                           ; BSR set to: 0
 21383  005476  0775               	decf	sprintf@width& (0+255),f,b
 21384  005478  DAC3               	call	PL98	;call to abstracted procedure
 21385  00547A  B4D8               	btfsc	status,2,c
 21386  00547C  2976               	incf	(sprintf@width+1)& (0+255),w,b
 21387  00547E  E00D               	bz	l11116
 21388  005480  D7F7               	goto	l11104
 21389  005482                     l11110:
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 21393  005482  5177               	movf	sprintf@_val& (0+255),w,b
 21394  005484  6ED9               	movwf	fsr2l,c
 21395  005486  6ADA               	clrf	fsr2h,c
 21396  005488  C060  FFE1         	movff	sprintf@sp,fsr1l
 21397  00548C  C061  FFE2         	movff	sprintf@sp+1,fsr1h
 21398  005490  CFDF FFE7          	movff	indf2,indf1
 21399                           
 21400                           ; BSR set to: 0
 21401  005494  2B77               	incf	sprintf@_val& (0+255),f,b
 21402                           
 21403                           ; BSR set to: 0
 21404  005496  4B60               	infsnz	sprintf@sp& (0+255),f,b
 21405  005498  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 21406  00549A                     l11116:
 21407                           
 21408                           ; BSR set to: 0
 21409  00549A  0778               	decf	(sprintf@_val+1)& (0+255),f,b
 21410  00549C  A0D8               	btfss	status,0,c
 21411  00549E  0779               	decf	(sprintf@_val+2)& (0+255),f,b
 21412  0054A0  0100               	movlb	0	; () banked
 21413  0054A2  2978               	incf	(sprintf@_val+1)& (0+255),w,b
 21414  0054A4  B4D8               	btfsc	status,2,c
 21415  0054A6  2979               	incf	(sprintf@_val+2)& (0+255),w,b
 21416  0054A8  E1EC               	bnz	l11110
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;doprnt.c: 779: if(flag & 0x08)
 21420  0054AA  B77C               	btfsc	sprintf@flag& (0+255),3,b
 21421  0054AC  D004               	goto	l11124
 21422  0054AE  D23C               	goto	l11362
 21423  0054B0                     l11120:
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;doprnt.c: 781: ((*sp++ = (' ')));
 21427  0054B0  DA88               	call	PL62	;call to abstracted procedure
 21428                           
 21429                           ; BSR set to: 0
 21430  0054B2  4B60               	infsnz	sprintf@sp& (0+255),f,b
 21431  0054B4  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 21432  0054B6                     l11124:
 21433                           
 21434                           ; BSR set to: 0
 21435  0054B6  0775               	decf	sprintf@width& (0+255),f,b
 21436  0054B8  DAA3               	call	PL98	;call to abstracted procedure
 21437  0054BA  B4D8               	btfsc	status,2,c
 21438  0054BC  2976               	incf	(sprintf@width+1)& (0+255),w,b
 21439  0054BE  E101 D233          	bz	l11362
 21440  0054C2  D7F6               	goto	l11120
 21441  0054C4                     l11126:
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 21445  0054C4  5172               	movf	sprintf@ap& (0+255),w,b
 21446  0054C6  6ED9               	movwf	fsr2l,c
 21447  0054C8  6ADA               	clrf	fsr2h,c
 21448  0054CA  50DF               	movf	indf2,w,c
 21449  0054CC  6F7B               	movwf	sprintf@c& (0+255),b
 21450                           
 21451                           ; BSR set to: 0
 21452  0054CE  0E02               	movlw	2
 21453  0054D0  2772               	addwf	sprintf@ap& (0+255),f,b
 21454  0054D2                     l11130:
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 21458  0054D2  0E7B               	movlw	low sprintf@c
 21459  0054D4  6F77               	movwf	sprintf@_val& (0+255),b
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;doprnt.c: 815: _val._str._len = 1;
 21463  0054D6  6B79               	clrf	(sprintf@_val+2)& (0+255),b
 21464  0054D8  0E01               	movlw	1
 21465  0054DA  6F78               	movwf	(sprintf@_val+1)& (0+255),b
 21466                           
 21467                           ;doprnt.c: 816: goto dostring;
 21468  0054DC  D7AC               	goto	l11092
 21469  0054DE                     l11134:
 21470                           
 21471                           ; BSR set to: 0
 21472                           ;doprnt.c: 827: flag |= 0xC0;
 21473  0054DE  0EC0               	movlw	192
 21474  0054E0  137C               	iorwf	sprintf@flag& (0+255),f,b
 21475                           
 21476                           ;doprnt.c: 828: break;
 21477  0054E2  D016               	goto	l11140
 21478  0054E4                     l11138:
 21479  0054E4  0100               	movlb	0	; () banked
 21480  0054E6  DA74               	call	PL66	;call to abstracted procedure
 21481  0054E8  517B               	movf	sprintf@c& (0+255),w,b
 21482                           
 21483                           ; Switch size 1, requested type "space"
 21484                           ; Number of cases is 9, Range of values is 0 to 120
 21485                           ; switch strategies available:
 21486                           ; Name         Instructions Cycles
 21487                           ; simple_byte           28    15 (average)
 21488                           ;	Chosen strategy is simple_byte
 21489  0054EA  E101 D221          	bz	l11364
 21490  0054EE  0A58               	xorlw	88	; case 88
 21491  0054F0  E09F               	bz	l11090
 21492  0054F2  0A3B               	xorlw	59	; case 99
 21493  0054F4  E0E7               	bz	l11126
 21494  0054F6  0A07               	xorlw	7	; case 100
 21495  0054F8  E00B               	bz	l11140
 21496  0054FA  0A0D               	xorlw	13	; case 105
 21497  0054FC  E009               	bz	l11140
 21498  0054FE  0A05               	xorlw	5	; case 108
 21499  005500  E093               	bz	l11086
 21500  005502  0A03               	xorlw	3	; case 111
 21501  005504  E093               	bz	l11088
 21502  005506  0A1A               	xorlw	26	; case 117
 21503  005508  E0EA               	bz	l11134
 21504  00550A  0A0D               	xorlw	13	; case 120
 21505  00550C  E092               	bz	l1562
 21506  00550E  D7E1               	goto	l11130
 21507  005510                     l11140:
 21508                           
 21509                           ; BSR set to: 0
 21510                           ;doprnt.c: 1258: if((flag & (0xC0)) == 0x00)
 21511  005510  517C               	movf	sprintf@flag& (0+255),w,b
 21512  005512  0BC0               	andlw	192
 21513  005514  E120               	bnz	l1581
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;doprnt.c: 1260: {
 21517                           ;doprnt.c: 1262: if(flag & 0x10)
 21518  005516  A97C               	btfss	sprintf@flag& (0+255),4,b
 21519  005518  D003               	goto	l11148
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;doprnt.c: 1263: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
 21523  00551A  5172               	movf	sprintf@ap& (0+255),w,b
 21524                           
 21525                           ; BSR set to: 0
 21526  00551C  DA47               	call	PL50	;call to abstracted procedure
 21527  00551E  D00D               	goto	L52
 21528  005520                     l11148:
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;doprnt.c: 1264: else
 21532                           ;doprnt.c: 1266: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21533  005520  5172               	movf	sprintf@ap& (0+255),w,b
 21534  005522  6ED9               	movwf	fsr2l,c
 21535  005524  6ADA               	clrf	fsr2h,c
 21536  005526  CFDE F077          	movff	postinc2,sprintf@_val
 21537  00552A  CFDD F078          	movff	postdec2,sprintf@_val+1
 21538  00552E  0E00               	movlw	0
 21539  005530  BF78               	btfsc	(sprintf@_val+1)& (0+255),7,b
 21540  005532  0EFF               	movlw	-1
 21541  005534  6F79               	movwf	(sprintf@_val+2)& (0+255),b
 21542  005536  6F7A               	movwf	(sprintf@_val+3)& (0+255),b
 21543                           
 21544                           ; BSR set to: 0
 21545  005538  0E02               	movlw	2
 21546  00553A                     L52:
 21547  00553A  2772               	addwf	sprintf@ap& (0+255),f,b
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;doprnt.c: 1268: if((long)_val._val < 0) {
 21551  00553C  AF7A               	btfss	(sprintf@_val+3)& (0+255),7,b
 21552  00553E  D01F               	goto	l11166
 21553                           
 21554                           ; BSR set to: 0
 21555                           ;doprnt.c: 1269: flag |= 0x03;
 21556  005540  0E03               	movlw	3
 21557  005542  137C               	iorwf	sprintf@flag& (0+255),f,b
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;doprnt.c: 1270: _val._val = -_val._val;
 21561  005544  1F7A               	comf	(sprintf@_val+3)& (0+255),f,b
 21562  005546  1F79               	comf	(sprintf@_val+2)& (0+255),f,b
 21563  005548  1F78               	comf	(sprintf@_val+1)& (0+255),f,b
 21564  00554A  6D77               	negf	sprintf@_val& (0+255),b
 21565  00554C  0E00               	movlw	0
 21566  00554E  2378               	addwfc	(sprintf@_val+1)& (0+255),f,b
 21567  005550  2379               	addwfc	(sprintf@_val+2)& (0+255),f,b
 21568  005552  237A               	addwfc	(sprintf@_val+3)& (0+255),f,b
 21569  005554  D014               	goto	l11166
 21570  005556                     l1581:
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;doprnt.c: 1275: else
 21574                           ;doprnt.c: 1280: {
 21575                           ;doprnt.c: 1288: if(flag & 0x10)
 21576  005556  A97C               	btfss	sprintf@flag& (0+255),4,b
 21577  005558  D003               	goto	l11162
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;doprnt.c: 1289: _val._val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsig
      +                          ned long)0));
 21581  00555A  5172               	movf	sprintf@ap& (0+255),w,b
 21582                           
 21583                           ; BSR set to: 0
 21584  00555C  DA27               	call	PL50	;call to abstracted procedure
 21585  00555E  D00E               	goto	L53
 21586  005560                     l11162:
 21587                           
 21588                           ; BSR set to: 0
 21589                           ;doprnt.c: 1290: else
 21590                           ;doprnt.c: 1293: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21591  005560  5172               	movf	sprintf@ap& (0+255),w,b
 21592  005562  6ED9               	movwf	fsr2l,c
 21593  005564  6ADA               	clrf	fsr2h,c
 21594  005566  CFDE F068          	movff	postinc2,??_sprintf
 21595  00556A  CFDD F069          	movff	postdec2,??_sprintf+1
 21596  00556E  C068  F077         	movff	??_sprintf,sprintf@_val
 21597  005572  C069  F078         	movff	??_sprintf+1,sprintf@_val+1
 21598  005576  6B79               	clrf	(sprintf@_val+2)& (0+255),b
 21599  005578  6B7A               	clrf	(sprintf@_val+3)& (0+255),b
 21600                           
 21601                           ; BSR set to: 0
 21602  00557A  0E02               	movlw	2
 21603  00557C                     L53:
 21604  00557C  2772               	addwf	sprintf@ap& (0+255),f,b
 21605  00557E                     l11166:
 21606                           
 21607                           ; BSR set to: 0
 21608                           ;doprnt.c: 1294: }
 21609                           ;doprnt.c: 1297: if(prec == 0 && _val._val == 0)
 21610  00557E  5174               	movf	(sprintf@prec+1)& (0+255),w,b
 21611  005580  1173               	iorwf	sprintf@prec& (0+255),w,b
 21612  005582  E15C               	bnz	l11216
 21613                           
 21614                           ; BSR set to: 0
 21615  005584  517A               	movf	(sprintf@_val+3)& (0+255),w,b
 21616  005586  1177               	iorwf	sprintf@_val& (0+255),w,b
 21617  005588  1178               	iorwf	(sprintf@_val+1)& (0+255),w,b
 21618  00558A  1179               	iorwf	(sprintf@_val+2)& (0+255),w,b
 21619  00558C  E157               	bnz	l11216
 21620                           
 21621                           ; BSR set to: 0
 21622                           ;doprnt.c: 1298: prec++;
 21623  00558E  4B73               	infsnz	sprintf@prec& (0+255),f,b
 21624  005590  2B74               	incf	(sprintf@prec+1)& (0+255),f,b
 21625  005592  D054               	goto	l11216
 21626  005594                     l11172:
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;doprnt.c: 1309: case 0xC0:
 21630                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21631  005594  0E01               	movlw	1
 21632  005596  6F7B               	movwf	sprintf@c& (0+255),b
 21633  005598                     l11174:
 21634                           
 21635                           ; BSR set to: 0
 21636  005598  517B               	movf	sprintf@c& (0+255),w,b
 21637  00559A  0A0A               	xorlw	10
 21638  00559C  E058               	bz	l11218
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 21642  00559E  517B               	movf	sprintf@c& (0+255),w,b
 21643  0055A0  0D04               	mullw	4
 21644  0055A2  0E08               	movlw	low _dpowers
 21645  0055A4  24F3               	addwf	prodl,w,c
 21646  0055A6  6EF6               	movwf	tblptrl,c
 21647  0055A8  0E6D               	movlw	high _dpowers
 21648  0055AA  20F4               	addwfc	prodh,w,c
 21649  0055AC  6EF7               	movwf	tblptrh,c
 21650  0055AE  0009               	tblrd		*+
 21651  0055B0  50F5               	movf	tablat,w,c
 21652  0055B2  5D77               	subwf	sprintf@_val& (0+255),w,b
 21653  0055B4  0009               	tblrd		*+
 21654  0055B6  50F5               	movf	tablat,w,c
 21655  0055B8  5978               	subwfb	(sprintf@_val+1)& (0+255),w,b
 21656  0055BA  0009               	tblrd		*+
 21657  0055BC  50F5               	movf	tablat,w,c
 21658  0055BE  5979               	subwfb	(sprintf@_val+2)& (0+255),w,b
 21659  0055C0  0009               	tblrd		*+
 21660  0055C2  50F5               	movf	tablat,w,c
 21661  0055C4  597A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 21662  0055C6  E343               	bnc	l11218
 21663                           
 21664                           ; BSR set to: 0
 21665  0055C8  2B7B               	incf	sprintf@c& (0+255),f,b
 21666  0055CA  D7E6               	goto	l11174
 21667  0055CC                     l11186:
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;doprnt.c: 1323: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21671  0055CC  0E01               	movlw	1
 21672  0055CE  6F7B               	movwf	sprintf@c& (0+255),b
 21673  0055D0                     l11188:
 21674                           
 21675                           ; BSR set to: 0
 21676  0055D0  517B               	movf	sprintf@c& (0+255),w,b
 21677  0055D2  0A08               	xorlw	8
 21678  0055D4  E03C               	bz	l11218
 21679                           
 21680                           ; BSR set to: 0
 21681                           ;doprnt.c: 1324: if(_val._val < hexpowers[c])
 21682  0055D6  517B               	movf	sprintf@c& (0+255),w,b
 21683  0055D8  0D04               	mullw	4
 21684  0055DA  0E30               	movlw	low _hexpowers
 21685  0055DC  24F3               	addwf	prodl,w,c
 21686  0055DE  6EF6               	movwf	tblptrl,c
 21687  0055E0  0E6D               	movlw	high _hexpowers
 21688  0055E2  20F4               	addwfc	prodh,w,c
 21689  0055E4  6EF7               	movwf	tblptrh,c
 21690  0055E6  0009               	tblrd		*+
 21691  0055E8  50F5               	movf	tablat,w,c
 21692  0055EA  5D77               	subwf	sprintf@_val& (0+255),w,b
 21693  0055EC  0009               	tblrd		*+
 21694  0055EE  50F5               	movf	tablat,w,c
 21695  0055F0  5978               	subwfb	(sprintf@_val+1)& (0+255),w,b
 21696  0055F2  0009               	tblrd		*+
 21697  0055F4  50F5               	movf	tablat,w,c
 21698  0055F6  5979               	subwfb	(sprintf@_val+2)& (0+255),w,b
 21699  0055F8  0009               	tblrd		*+
 21700  0055FA  50F5               	movf	tablat,w,c
 21701  0055FC  597A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 21702  0055FE  E327               	bnc	l11218
 21703                           
 21704                           ; BSR set to: 0
 21705  005600  2B7B               	incf	sprintf@c& (0+255),f,b
 21706  005602  D7E6               	goto	l11188
 21707  005604                     l11200:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;doprnt.c: 1335: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 21711  005604  0E01               	movlw	1
 21712  005606  6F7B               	movwf	sprintf@c& (0+255),b
 21713  005608                     l11202:
 21714                           
 21715                           ; BSR set to: 0
 21716  005608  517B               	movf	sprintf@c& (0+255),w,b
 21717  00560A  0A0C               	xorlw	12
 21718  00560C  E020               	bz	l11218
 21719                           
 21720                           ; BSR set to: 0
 21721                           ;doprnt.c: 1336: if(_val._val < octpowers[c])
 21722  00560E  517B               	movf	sprintf@c& (0+255),w,b
 21723  005610  0D04               	mullw	4
 21724  005612  0ED8               	movlw	low _octpowers
 21725  005614  24F3               	addwf	prodl,w,c
 21726  005616  6EF6               	movwf	tblptrl,c
 21727  005618  0E6C               	movlw	high _octpowers
 21728  00561A  20F4               	addwfc	prodh,w,c
 21729  00561C  6EF7               	movwf	tblptrh,c
 21730  00561E  0009               	tblrd		*+
 21731  005620  50F5               	movf	tablat,w,c
 21732  005622  5D77               	subwf	sprintf@_val& (0+255),w,b
 21733  005624  0009               	tblrd		*+
 21734  005626  50F5               	movf	tablat,w,c
 21735  005628  5978               	subwfb	(sprintf@_val+1)& (0+255),w,b
 21736  00562A  0009               	tblrd		*+
 21737  00562C  50F5               	movf	tablat,w,c
 21738  00562E  5979               	subwfb	(sprintf@_val+2)& (0+255),w,b
 21739  005630  0009               	tblrd		*+
 21740  005632  50F5               	movf	tablat,w,c
 21741  005634  597A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 21742  005636  E30B               	bnc	l11218
 21743                           
 21744                           ; BSR set to: 0
 21745  005638  2B7B               	incf	sprintf@c& (0+255),f,b
 21746  00563A  D7E6               	goto	l11202
 21747  00563C                     l11216:
 21748                           
 21749                           ; BSR set to: 0
 21750  00563C  517C               	movf	sprintf@flag& (0+255),w,b
 21751  00563E  0BC0               	andlw	192
 21752                           
 21753                           ; Switch size 1, requested type "space"
 21754                           ; Number of cases is 4, Range of values is 0 to 192
 21755                           ; switch strategies available:
 21756                           ; Name         Instructions Cycles
 21757                           ; simple_byte           13     7 (average)
 21758                           ;	Chosen strategy is simple_byte
 21759  005640  E0A9               	bz	l11172
 21760  005642  0A40               	xorlw	64	; case 64
 21761  005644  E0DF               	bz	l11200
 21762  005646  0AC0               	xorlw	192	; case 128
 21763  005648  E0C1               	bz	l11186
 21764  00564A  0A40               	xorlw	64	; case 192
 21765  00564C  E0A3               	bz	l11172
 21766  00564E                     l11218:
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;doprnt.c: 1346: if(c < prec)
 21770  00564E  0E80               	movlw	128
 21771  005650  BF7B               	btfsc	sprintf@c& (0+255),7,b
 21772  005652  0E7F               	movlw	127
 21773  005654  6F68               	movwf	??_sprintf& (0+255),b
 21774  005656  5173               	movf	sprintf@prec& (0+255),w,b
 21775  005658  5D7B               	subwf	sprintf@c& (0+255),w,b
 21776  00565A  5174               	movf	(sprintf@prec+1)& (0+255),w,b
 21777  00565C  0A80               	xorlw	128
 21778  00565E  5968               	subwfb	??_sprintf& (0+255),w,b
 21779  005660  E203               	bc	l11222
 21780                           
 21781                           ; BSR set to: 0
 21782                           ;doprnt.c: 1347: c = prec;
 21783  005662  C073  F07B         	movff	sprintf@prec,sprintf@c
 21784  005666  D00F               	goto	l11226
 21785  005668                     l11222:
 21786                           
 21787                           ; BSR set to: 0
 21788                           ;doprnt.c: 1348: else if(prec < c)
 21789  005668  5174               	movf	(sprintf@prec+1)& (0+255),w,b
 21790  00566A  0A80               	xorlw	128
 21791  00566C  6F68               	movwf	??_sprintf& (0+255),b
 21792  00566E  517B               	movf	sprintf@c& (0+255),w,b
 21793  005670  5D73               	subwf	sprintf@prec& (0+255),w,b
 21794  005672  0E80               	movlw	128
 21795  005674  BF7B               	btfsc	sprintf@c& (0+255),7,b
 21796  005676  0E7F               	movlw	127
 21797  005678  5968               	subwfb	??_sprintf& (0+255),w,b
 21798  00567A  E205               	bc	l11226
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;doprnt.c: 1349: prec = c;
 21802  00567C  517B               	movf	sprintf@c& (0+255),w,b
 21803  00567E  6F73               	movwf	sprintf@prec& (0+255),b
 21804  005680  6B74               	clrf	(sprintf@prec+1)& (0+255),b
 21805  005682  BF73               	btfsc	sprintf@prec& (0+255),7,b
 21806  005684  0774               	decf	(sprintf@prec+1)& (0+255),f,b
 21807  005686                     l11226:
 21808                           
 21809                           ; BSR set to: 0
 21810                           ;doprnt.c: 1352: if(width && flag & 0x03)
 21811  005686  5176               	movf	(sprintf@width+1)& (0+255),w,b
 21812  005688  1175               	iorwf	sprintf@width& (0+255),w,b
 21813  00568A  E006               	bz	l11232
 21814                           
 21815                           ; BSR set to: 0
 21816  00568C  517C               	movf	sprintf@flag& (0+255),w,b
 21817  00568E  0B03               	andlw	3
 21818  005690  E003               	bz	l11232
 21819                           
 21820                           ; BSR set to: 0
 21821                           ;doprnt.c: 1353: width--;
 21822  005692  0775               	decf	sprintf@width& (0+255),f,b
 21823  005694  A0D8               	btfss	status,0,c
 21824  005696  0776               	decf	(sprintf@width+1)& (0+255),f,b
 21825  005698                     l11232:
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;doprnt.c: 1355: if(flag & 0x4000) {
 21829  005698  AD7D               	btfss	(sprintf@flag+1)& (0+255),6,b
 21830  00569A  D010               	goto	l11238
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;doprnt.c: 1356: if(width > prec)
 21834  00569C  5174               	movf	(sprintf@prec+1)& (0+255),w,b
 21835  00569E  0A80               	xorlw	128
 21836  0056A0  6F68               	movwf	??_sprintf& (0+255),b
 21837  0056A2  5175               	movf	sprintf@width& (0+255),w,b
 21838  0056A4  5D73               	subwf	sprintf@prec& (0+255),w,b
 21839  0056A6  5176               	movf	(sprintf@width+1)& (0+255),w,b
 21840  0056A8  0A80               	xorlw	128
 21841  0056AA  5968               	subwfb	??_sprintf& (0+255),w,b
 21842  0056AC  E205               	bc	l1609
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;doprnt.c: 1357: width -= prec;
 21846  0056AE  5173               	movf	sprintf@prec& (0+255),w,b
 21847  0056B0  5F75               	subwf	sprintf@width& (0+255),f,b
 21848  0056B2  5174               	movf	(sprintf@prec+1)& (0+255),w,b
 21849  0056B4  5B76               	subwfb	(sprintf@width+1)& (0+255),f,b
 21850  0056B6  D002               	goto	l11238
 21851  0056B8                     l1609:
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;doprnt.c: 1358: else
 21855                           ;doprnt.c: 1359: width = 0;
 21856  0056B8  6B75               	clrf	sprintf@width& (0+255),b
 21857  0056BA  6B76               	clrf	(sprintf@width+1)& (0+255),b
 21858  0056BC                     l11238:
 21859                           
 21860                           ; BSR set to: 0
 21861                           ;doprnt.c: 1360: }
 21862                           ;doprnt.c: 1364: if((flag & (
 21863                           ;doprnt.c: 1366: 0x04|
 21864                           ;doprnt.c: 1368: (0xC0)|0x800)) == (0x40|0x800)) {
 21865  0056BC  0EC4               	movlw	196
 21866  0056BE  D94E               	call	PL18	;call to abstracted procedure
 21867  0056C0  0E40               	movlw	64
 21868  0056C2  B4D8               	btfsc	status,2,c
 21869  0056C4  1968               	xorwf	??_sprintf& (0+255),w,b
 21870  0056C6  E107               	bnz	l11244
 21871                           
 21872                           ; BSR set to: 0
 21873                           ;doprnt.c: 1369: if(width)
 21874  0056C8  5176               	movf	(sprintf@width+1)& (0+255),w,b
 21875  0056CA  1175               	iorwf	sprintf@width& (0+255),w,b
 21876  0056CC  E018               	bz	l11250
 21877                           
 21878                           ; BSR set to: 0
 21879                           ;doprnt.c: 1370: width--;
 21880  0056CE  0775               	decf	sprintf@width& (0+255),f,b
 21881  0056D0  A0D8               	btfss	status,0,c
 21882  0056D2  0776               	decf	(sprintf@width+1)& (0+255),f,b
 21883  0056D4  D014               	goto	l11250
 21884  0056D6                     l11244:
 21885                           
 21886                           ; BSR set to: 0
 21887                           ;doprnt.c: 1375: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21888  0056D6  0EC0               	movlw	192
 21889  0056D8  D941               	call	PL18	;call to abstracted procedure
 21890  0056DA  0E80               	movlw	128
 21891  0056DC  B4D8               	btfsc	status,2,c
 21892  0056DE  1968               	xorwf	??_sprintf& (0+255),w,b
 21893  0056E0  E10E               	bnz	l11250
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;doprnt.c: 1379: if(width > 2)
 21897  0056E2  5176               	movf	(sprintf@width+1)& (0+255),w,b
 21898  0056E4  0A80               	xorlw	128
 21899  0056E6  0F80               	addlw	-128
 21900  0056E8  0E03               	movlw	3
 21901  0056EA  B4D8               	btfsc	status,2,c
 21902  0056EC  5D75               	subwf	sprintf@width& (0+255),w,b
 21903  0056EE  E305               	bnc	l1615
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;doprnt.c: 1380: width -= 2;
 21907  0056F0  0EFE               	movlw	254
 21908  0056F2  2775               	addwf	sprintf@width& (0+255),f,b
 21909  0056F4  0EFF               	movlw	255
 21910  0056F6  2376               	addwfc	(sprintf@width+1)& (0+255),f,b
 21911  0056F8  D002               	goto	l11250
 21912  0056FA                     l1615:
 21913                           
 21914                           ; BSR set to: 0
 21915                           ;doprnt.c: 1381: else
 21916                           ;doprnt.c: 1382: width = 0;
 21917  0056FA  6B75               	clrf	sprintf@width& (0+255),b
 21918  0056FC  6B76               	clrf	(sprintf@width+1)& (0+255),b
 21919  0056FE                     l11250:
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;doprnt.c: 1383: }
 21923                           ;doprnt.c: 1388: if(width > c)
 21924  0056FE  0E80               	movlw	128
 21925  005700  BF7B               	btfsc	sprintf@c& (0+255),7,b
 21926  005702  0E7F               	movlw	127
 21927  005704  6F68               	movwf	??_sprintf& (0+255),b
 21928  005706  5175               	movf	sprintf@width& (0+255),w,b
 21929  005708  5D7B               	subwf	sprintf@c& (0+255),w,b
 21930  00570A  5176               	movf	(sprintf@width+1)& (0+255),w,b
 21931  00570C  0A80               	xorlw	128
 21932  00570E  5968               	subwfb	??_sprintf& (0+255),w,b
 21933  005710  E207               	bc	l1617
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;doprnt.c: 1389: width -= c;
 21937  005712  517B               	movf	sprintf@c& (0+255),w,b
 21938  005714  5F75               	subwf	sprintf@width& (0+255),f,b
 21939  005716  0E00               	movlw	0
 21940  005718  BF7B               	btfsc	sprintf@c& (0+255),7,b
 21941  00571A  0EFF               	movlw	255
 21942  00571C  5B76               	subwfb	(sprintf@width+1)& (0+255),f,b
 21943  00571E  D002               	goto	l1618
 21944  005720                     l1617:
 21945                           
 21946                           ; BSR set to: 0
 21947                           ;doprnt.c: 1390: else
 21948                           ;doprnt.c: 1391: width = 0;
 21949  005720  6B75               	clrf	sprintf@width& (0+255),b
 21950  005722  6B76               	clrf	(sprintf@width+1)& (0+255),b
 21951  005724                     l1618:
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;doprnt.c: 1394: if(flag & 0x04) {
 21955  005724  A57C               	btfss	sprintf@flag& (0+255),2,b
 21956  005726  D03C               	goto	l11288
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;doprnt.c: 1399: if(flag & 0x03)
 21960  005728  517C               	movf	sprintf@flag& (0+255),w,b
 21961  00572A  0B03               	andlw	3
 21962  00572C  E009               	bz	l1620
 21963                           
 21964                           ; BSR set to: 0
 21965                           ;doprnt.c: 1400: ((*sp++ = ('-')));
 21966  00572E  C060  FFD9         	movff	sprintf@sp,fsr2l
 21967  005732  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 21968  005736  0E2D               	movlw	45
 21969  005738  6EDF               	movwf	indf2,c
 21970  00573A                     l11258:
 21971                           
 21972                           ; BSR set to: 0
 21973  00573A  4B60               	infsnz	sprintf@sp& (0+255),f,b
 21974  00573C  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 21975  00573E  D022               	goto	l11280
 21976  005740                     l1620:
 21977                           
 21978                           ; BSR set to: 0
 21979                           ;doprnt.c: 1403: else
 21980                           ;doprnt.c: 1406: if(flag & 0x01)
 21981  005740  A17C               	btfss	sprintf@flag& (0+255),0,b
 21982  005742  D006               	goto	l11264
 21983                           
 21984                           ; BSR set to: 0
 21985                           ;doprnt.c: 1407: ((*sp++ = (' ')));
 21986  005744  C060  FFD9         	movff	sprintf@sp,fsr2l
 21987  005748  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 21988  00574C  0E20               	movlw	32
 21989  00574E  D7F4               	goto	L54
 21990  005750                     l11264:
 21991                           
 21992                           ; BSR set to: 0
 21993                           ;doprnt.c: 1410: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21994  005750  0EC0               	movlw	192
 21995  005752  D904               	call	PL18	;call to abstracted procedure
 21996  005754  0E80               	movlw	128
 21997  005756  B4D8               	btfsc	status,2,c
 21998  005758  1968               	xorwf	??_sprintf& (0+255),w,b
 21999  00575A  E114               	bnz	l11280
 22000                           
 22001                           ; BSR set to: 0
 22002                           ;doprnt.c: 1411: ((*sp++ = ('0')));
 22003  00575C  C060  FFD9         	movff	sprintf@sp,fsr2l
 22004  005760  D94A               	call	PL84	;call to abstracted procedure
 22005                           
 22006                           ; BSR set to: 0
 22007  005762  4B60               	infsnz	sprintf@sp& (0+255),f,b
 22008  005764  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 22009                           
 22010                           ; BSR set to: 0
 22011                           ;doprnt.c: 1413: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 22012  005766  BB7C               	btfsc	sprintf@flag& (0+255),5,b
 22013  005768  D003               	goto	l11274
 22014                           
 22015                           ; BSR set to: 0
 22016  00576A  6B6D               	clrf	(_sprintf$2141+1)& (0+255),b
 22017  00576C  0E78               	movlw	120
 22018  00576E  D002               	goto	L55
 22019  005770                     l11274:
 22020                           
 22021                           ; BSR set to: 0
 22022  005770  6B6D               	clrf	(_sprintf$2141+1)& (0+255),b
 22023  005772  0E58               	movlw	88
 22024  005774                     L55:
 22025  005774  6F6C               	movwf	_sprintf$2141& (0+255),b
 22026                           
 22027                           ; BSR set to: 0
 22028  005776  C060  FFD9         	movff	sprintf@sp,fsr2l
 22029  00577A  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22030  00577E  C06C  FFDF         	movff	_sprintf$2141,indf2
 22031  005782  D7DB               	goto	l11258
 22032  005784                     l11280:
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;doprnt.c: 1419: }
 22036                           ;doprnt.c: 1422: if(width)
 22037  005784  5176               	movf	(sprintf@width+1)& (0+255),w,b
 22038  005786  1175               	iorwf	sprintf@width& (0+255),w,b
 22039  005788  E101 D0B9          	bz	l11352
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;doprnt.c: 1424: ((*sp++ = ('0')));
 22043  00578C  C060  FFD9         	movff	sprintf@sp,fsr2l
 22044  005790  D932               	call	PL84	;call to abstracted procedure
 22045                           
 22046                           ; BSR set to: 0
 22047  005792  4B60               	infsnz	sprintf@sp& (0+255),f,b
 22048  005794  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;doprnt.c: 1425: while(--width);
 22052  005796  0775               	decf	sprintf@width& (0+255),f,b
 22053  005798  A0D8               	btfss	status,0,c
 22054  00579A  0776               	decf	(sprintf@width+1)& (0+255),f,b
 22055  00579C  0100               	movlb	0	; () banked
 22056  00579E  D7F2               	goto	l11280
 22057  0057A0                     l11288:
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;doprnt.c: 1429: {
 22061                           ;doprnt.c: 1431: if(width
 22062                           ;doprnt.c: 1433: && !(flag & 0x08)
 22063                           ;doprnt.c: 1435: )
 22064  0057A0  5176               	movf	(sprintf@width+1)& (0+255),w,b
 22065  0057A2  1175               	iorwf	sprintf@width& (0+255),w,b
 22066  0057A4  A4D8               	btfss	status,2,c
 22067                           
 22068                           ; BSR set to: 0
 22069  0057A6  B77C               	btfsc	sprintf@flag& (0+255),3,b
 22070  0057A8  D004               	goto	l11298
 22071  0057AA                     l11292:
 22072                           
 22073                           ; BSR set to: 0
 22074                           ;doprnt.c: 1437: ((*sp++ = (' ')));
 22075  0057AA  C060  FFD9         	movff	sprintf@sp,fsr2l
 22076                           
 22077                           ; BSR set to: 0
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;doprnt.c: 1438: while(--width);
 22081  0057AE  D8F1               	call	PL44	;call to abstracted procedure
 22082  0057B0  E1FC               	bnz	l11292
 22083  0057B2                     l11298:
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;doprnt.c: 1445: if(flag & 0x03)
 22087  0057B2  517C               	movf	sprintf@flag& (0+255),w,b
 22088  0057B4  0B03               	andlw	3
 22089  0057B6  E009               	bz	l1636
 22090                           
 22091                           ; BSR set to: 0
 22092                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 22093  0057B8  C060  FFD9         	movff	sprintf@sp,fsr2l
 22094  0057BC  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22095  0057C0  0E2D               	movlw	45
 22096  0057C2  6EDF               	movwf	indf2,c
 22097                           
 22098                           ; BSR set to: 0
 22099  0057C4  4B60               	infsnz	sprintf@sp& (0+255),f,b
 22100  0057C6  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 22101  0057C8  D008               	goto	l11308
 22102  0057CA                     l1636:
 22103                           
 22104                           ; BSR set to: 0
 22105                           ;doprnt.c: 1450: else if(flag & 0x01)
 22106  0057CA  A17C               	btfss	sprintf@flag& (0+255),0,b
 22107  0057CC  D006               	goto	l11308
 22108                           
 22109                           ; BSR set to: 0
 22110                           ;doprnt.c: 1451: ((*sp++ = (' ')));
 22111  0057CE  C060  FFD9         	movff	sprintf@sp,fsr2l
 22112  0057D2  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22113  0057D6  0E20               	movlw	32
 22114  0057D8  D7F4               	goto	L56
 22115  0057DA                     l11308:
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;doprnt.c: 1455: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 22119  0057DA  0EC0               	movlw	192
 22120  0057DC  D8BF               	call	PL18	;call to abstracted procedure
 22121  0057DE  0E40               	movlw	64
 22122  0057E0  B4D8               	btfsc	status,2,c
 22123  0057E2  1968               	xorwf	??_sprintf& (0+255),w,b
 22124  0057E4  E106               	bnz	l11314
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;doprnt.c: 1456: ((*sp++ = ('0')));
 22128  0057E6  C060  FFD9         	movff	sprintf@sp,fsr2l
 22129  0057EA  D905               	call	PL84	;call to abstracted procedure
 22130  0057EC                     l11312:
 22131                           
 22132                           ; BSR set to: 0
 22133  0057EC  4B60               	infsnz	sprintf@sp& (0+255),f,b
 22134  0057EE  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 22135  0057F0  D086               	goto	l11352
 22136  0057F2                     l11314:
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;doprnt.c: 1457: else
 22140                           ;doprnt.c: 1461: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 22141  0057F2  0EC0               	movlw	192
 22142  0057F4  D8B3               	call	PL18	;call to abstracted procedure
 22143  0057F6  0E80               	movlw	128
 22144  0057F8  B4D8               	btfsc	status,2,c
 22145  0057FA  1968               	xorwf	??_sprintf& (0+255),w,b
 22146  0057FC  E001 D07F          	bnz	l11352
 22147                           
 22148                           ; BSR set to: 0
 22149                           ;doprnt.c: 1465: ((*sp++ = ('0')));
 22150  005800  C060  FFD9         	movff	sprintf@sp,fsr2l
 22151  005804  D8F8               	call	PL84	;call to abstracted procedure
 22152                           
 22153                           ; BSR set to: 0
 22154  005806  4B60               	infsnz	sprintf@sp& (0+255),f,b
 22155  005808  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 22156                           
 22157                           ; BSR set to: 0
 22158                           ;doprnt.c: 1467: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 22159  00580A  BB7C               	btfsc	sprintf@flag& (0+255),5,b
 22160  00580C  D003               	goto	l11324
 22161                           
 22162                           ; BSR set to: 0
 22163  00580E  6B6F               	clrf	(_sprintf$2142+1)& (0+255),b
 22164  005810  0E78               	movlw	120
 22165  005812  D002               	goto	L57
 22166  005814                     l11324:
 22167                           
 22168                           ; BSR set to: 0
 22169  005814  6B6F               	clrf	(_sprintf$2142+1)& (0+255),b
 22170  005816  0E58               	movlw	88
 22171  005818                     L57:
 22172  005818  6F6E               	movwf	_sprintf$2142& (0+255),b
 22173                           
 22174                           ; BSR set to: 0
 22175  00581A  C060  FFD9         	movff	sprintf@sp,fsr2l
 22176  00581E  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22177  005822  C06E  FFDF         	movff	_sprintf$2142,indf2
 22178  005826  D7E2               	goto	l11312
 22179  005828                     l11330:
 22180                           
 22181                           ; BSR set to: 0
 22182                           ;doprnt.c: 1493: case 0xC0:
 22183                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 22184  005828  C073  F068         	movff	sprintf@prec,??_sprintf
 22185  00582C  C074  F069         	movff	sprintf@prec+1,??_sprintf+1
 22186  005830  90D8               	bcf	status,0,c
 22187  005832  3768               	rlcf	??_sprintf& (0+255),f,b
 22188  005834  3769               	rlcf	(??_sprintf+1)& (0+255),f,b
 22189  005836  90D8               	bcf	status,0,c
 22190  005838  3768               	rlcf	??_sprintf& (0+255),f,b
 22191  00583A  3769               	rlcf	(??_sprintf+1)& (0+255),f,b
 22192  00583C  0E08               	movlw	low _dpowers
 22193  00583E  2568               	addwf	??_sprintf& (0+255),w,b
 22194  005840  6EF6               	movwf	tblptrl,c
 22195  005842  0E6D               	movlw	high _dpowers
 22196  005844  D87C               	call	PL12	;call to abstracted procedure
 22197  005846  C077  F019         	movff	sprintf@_val,?___lldiv
 22198  00584A  C078  F01A         	movff	sprintf@_val+1,?___lldiv+1
 22199  00584E  C079  F01B         	movff	sprintf@_val+2,?___lldiv+2
 22200  005852  C07A  F01C         	movff	sprintf@_val+3,?___lldiv+3
 22201  005856  EC19  F013         	call	___lldiv	;wreg free
 22202  00585A  C01C  F029         	movff	?___lldiv+3,?___llmod+3
 22203  00585E  C01B  F028         	movff	?___lldiv+2,?___llmod+2
 22204  005862  C01A  F027         	movff	?___lldiv+1,?___llmod+1
 22205  005866  C019  F026         	movff	?___lldiv,?___llmod
 22206  00586A  0E0A               	movlw	10
 22207  00586C  6E2A               	movwf	?___llmod+4,c
 22208  00586E  0E00               	movlw	0
 22209  005870  6A2B               	clrf	?___llmod+5,c
 22210  005872  6A2C               	clrf	?___llmod+6,c
 22211  005874  6A2D               	clrf	?___llmod+7,c
 22212  005876  ECDF  F011         	call	___llmod	;wreg free
 22213  00587A  5026               	movf	?___llmod,w,c
 22214  00587C  D02D               	goto	L58
 22215  00587E                     l11332:
 22216                           
 22217                           ; BSR set to: 0
 22218                           ;doprnt.c: 1506: {
 22219                           ;doprnt.c: 1507: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 22220  00587E  D876               	call	PL20	;call to abstracted procedure
 22221  005880  0E30               	movlw	low _hexpowers
 22222  005882  2568               	addwf	??_sprintf& (0+255),w,b
 22223  005884  6EF6               	movwf	tblptrl,c
 22224  005886  0E6D               	movlw	high _hexpowers
 22225  005888  D85A               	call	PL12	;call to abstracted procedure
 22226  00588A  EC19  F013         	call	___lldiv	;wreg free
 22227  00588E  5019               	movf	?___lldiv,w,c
 22228  005890  0B0F               	andlw	15
 22229  005892  6F6B               	movwf	sprintf@idx& (0+255),b
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;doprnt.c: 1509: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 22233  005894  BB7C               	btfsc	sprintf@flag& (0+255),5,b
 22234  005896  D004               	goto	l11338
 22235                           
 22236                           ; BSR set to: 0
 22237  005898  0E7B               	movlw	high STR_255
 22238  00589A  6F71               	movwf	(_sprintf$2148+1)& (0+255),b
 22239  00589C  0E2D               	movlw	low STR_255
 22240  00589E  D003               	goto	L59
 22241  0058A0                     l11338:
 22242                           
 22243                           ; BSR set to: 0
 22244  0058A0  0E7B               	movlw	high STR_254
 22245  0058A2  6F71               	movwf	(_sprintf$2148+1)& (0+255),b
 22246  0058A4  0E1C               	movlw	low STR_254
 22247  0058A6                     L59:
 22248  0058A6  6F70               	movwf	_sprintf$2148& (0+255),b
 22249                           
 22250                           ; BSR set to: 0
 22251  0058A8  516B               	movf	sprintf@idx& (0+255),w,b
 22252  0058AA  2570               	addwf	_sprintf$2148& (0+255),w,b
 22253  0058AC  6F68               	movwf	??_sprintf& (0+255),b
 22254  0058AE  0E00               	movlw	0
 22255  0058B0  2171               	addwfc	(_sprintf$2148+1)& (0+255),w,b
 22256  0058B2  6F69               	movwf	(??_sprintf+1)& (0+255),b
 22257  0058B4  C068  FFF6         	movff	??_sprintf,tblptrl
 22258  0058B8  C069  FFF7         	movff	??_sprintf+1,tblptrh
 22259  0058BC  0008               	tblrd		*
 22260  0058BE  CFF5 F07B          	movff	tablat,sprintf@c
 22261                           
 22262                           ;doprnt.c: 1515: }
 22263                           ;doprnt.c: 1517: break;
 22264  0058C2  D016               	goto	l11348
 22265  0058C4                     l11342:
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;doprnt.c: 1525: c = ((_val._val / octpowers[prec]) & 07) + '0';
 22269  0058C4  D853               	call	PL20	;call to abstracted procedure
 22270  0058C6  0ED8               	movlw	low _octpowers
 22271  0058C8  2568               	addwf	??_sprintf& (0+255),w,b
 22272  0058CA  6EF6               	movwf	tblptrl,c
 22273  0058CC  0E6C               	movlw	high _octpowers
 22274  0058CE  D837               	call	PL12	;call to abstracted procedure
 22275  0058D0  EC19  F013         	call	___lldiv	;wreg free
 22276  0058D4  5019               	movf	?___lldiv,w,c
 22277  0058D6  0B07               	andlw	7
 22278  0058D8                     L58:
 22279  0058D8  0F30               	addlw	48
 22280  0058DA  6F7B               	movwf	sprintf@c& (0+255),b
 22281                           
 22282                           ;doprnt.c: 1527: break;
 22283  0058DC  D009               	goto	l11348
 22284  0058DE                     l11346:
 22285                           
 22286                           ; BSR set to: 0
 22287  0058DE  517C               	movf	sprintf@flag& (0+255),w,b
 22288  0058E0  0BC0               	andlw	192
 22289                           
 22290                           ; Switch size 1, requested type "space"
 22291                           ; Number of cases is 4, Range of values is 0 to 192
 22292                           ; switch strategies available:
 22293                           ; Name         Instructions Cycles
 22294                           ; simple_byte           13     7 (average)
 22295                           ;	Chosen strategy is simple_byte
 22296  0058E2  E0A2               	bz	l11330
 22297  0058E4  0A40               	xorlw	64	; case 64
 22298  0058E6  E0EE               	bz	l11342
 22299  0058E8  0AC0               	xorlw	192	; case 128
 22300  0058EA  E0C9               	bz	l11332
 22301  0058EC  0A40               	xorlw	64	; case 192
 22302  0058EE  E09C               	bz	l11330
 22303  0058F0                     l11348:
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;doprnt.c: 1531: ((*sp++ = (c)));
 22307  0058F0  C060  FFD9         	movff	sprintf@sp,fsr2l
 22308  0058F4  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22309  0058F8  C07B  FFDF         	movff	sprintf@c,indf2
 22310  0058FC  D777               	goto	l11312
 22311  0058FE                     l11352:
 22312                           
 22313                           ; BSR set to: 0
 22314  0058FE  0773               	decf	sprintf@prec& (0+255),f,b
 22315  005900  A0D8               	btfss	status,0,c
 22316  005902  0774               	decf	(sprintf@prec+1)& (0+255),f,b
 22317  005904  0100               	movlb	0	; () banked
 22318  005906  2973               	incf	sprintf@prec& (0+255),w,b
 22319  005908  B4D8               	btfsc	status,2,c
 22320  00590A  2974               	incf	(sprintf@prec+1)& (0+255),w,b
 22321  00590C  E1E8               	bnz	l11346
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;doprnt.c: 1532: }
 22325                           ;doprnt.c: 1535: if((flag & 0x08) && width > 0)
 22326  00590E  A77C               	btfss	sprintf@flag& (0+255),3,b
 22327  005910  D00B               	goto	l11362
 22328                           
 22329                           ; BSR set to: 0
 22330  005912  5176               	movf	(sprintf@width+1)& (0+255),w,b
 22331  005914  0A80               	xorlw	128
 22332  005916  0F80               	addlw	-128
 22333  005918  0E01               	movlw	1
 22334  00591A  B4D8               	btfsc	status,2,c
 22335  00591C  5D75               	subwf	sprintf@width& (0+255),w,b
 22336  00591E  E304               	bnc	l11362
 22337  005920                     l11356:
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;doprnt.c: 1537: ((*sp++ = (' ')));
 22341  005920  C060  FFD9         	movff	sprintf@sp,fsr2l
 22342                           
 22343                           ; BSR set to: 0
 22344                           
 22345                           ; BSR set to: 0
 22346                           ;doprnt.c: 1538: while(--width);
 22347  005924  D836               	call	PL44	;call to abstracted procedure
 22348  005926  E1FC               	bnz	l11356
 22349  005928                     l11362:
 22350                           
 22351                           ; BSR set to: 0
 22352  005928  D853               	call	PL66	;call to abstracted procedure
 22353  00592A  0100               	movlb	0	; () banked
 22354  00592C  677B               	tstfsz	sprintf@c& (0+255),b
 22355  00592E  D4CA               	goto	l11028
 22356  005930                     l11364:
 22357                           
 22358                           ; BSR set to: 0
 22359                           ;doprnt.c: 1545: *sp = 0;
 22360  005930  C060  FFD9         	movff	sprintf@sp,fsr2l
 22361  005934  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22362  005938  0E00               	movlw	0
 22363  00593A  6EDF               	movwf	indf2,c
 22364                           
 22365                           ; BSR set to: 0
 22366  00593C  0C00               	retlw	0
 22367  00593E                     __end_of_sprintf:
 22368                           	opt stack 0
 22369  00593E                     PL12:
 22370                           	opt stack 25
 22371  00593E  2169               	addwfc	(??_sprintf+1)& (0+255),w,b
 22372  005940  6EF7               	movwf	tblptrh,c
 22373  005942  0009               	tblrd		*+
 22374  005944  CFF5 F01D          	movff	tablat,?___lldiv+4
 22375  005948  0009               	tblrd		*+
 22376  00594A  CFF5 F01E          	movff	tablat,?___lldiv+5
 22377  00594E  0009               	tblrd		*+
 22378  005950  CFF5 F01F          	movff	tablat,?___lldiv+6
 22379  005954  000A               	tblrd		*-
 22380  005956  CFF5 F020          	movff	tablat,?___lldiv+7
 22381  00595A  0012               	return	
 22382  00595C                     __end_ofPL12:
 22383                           	opt stack 0
 22384  00595C                     PL18:
 22385                           	opt stack 25
 22386  00595C  157C               	andwf	sprintf@flag& (0+255),w,b
 22387  00595E  6F68               	movwf	??_sprintf& (0+255),b
 22388  005960  0E08               	movlw	8
 22389  005962  157D               	andwf	(sprintf@flag+1)& (0+255),w,b
 22390  005964  6F69               	movwf	(??_sprintf+1)& (0+255),b
 22391  005966  5169               	movf	(??_sprintf+1)& (0+255),w,b
 22392  005968  0A08               	xorlw	8
 22393  00596A  0012               	return	
 22394  00596C                     __end_ofPL18:
 22395                           	opt stack 0
 22396  00596C                     PL20:
 22397                           	opt stack 25
 22398  00596C  C077  F019         	movff	sprintf@_val,?___lldiv
 22399  005970  C078  F01A         	movff	sprintf@_val+1,?___lldiv+1
 22400  005974  C079  F01B         	movff	sprintf@_val+2,?___lldiv+2
 22401  005978  C07A  F01C         	movff	sprintf@_val+3,?___lldiv+3
 22402  00597C  C073  F068         	movff	sprintf@prec,??_sprintf
 22403  005980  C074  F069         	movff	sprintf@prec+1,??_sprintf+1
 22404  005984  90D8               	bcf	status,0,c
 22405  005986  3768               	rlcf	??_sprintf& (0+255),f,b
 22406  005988  3769               	rlcf	(??_sprintf+1)& (0+255),f,b
 22407  00598A  90D8               	bcf	status,0,c
 22408  00598C  3768               	rlcf	??_sprintf& (0+255),f,b
 22409  00598E  3769               	rlcf	(??_sprintf+1)& (0+255),f,b
 22410  005990  0012               	return	
 22411  005992                     __end_ofPL20:
 22412                           	opt stack 0
 22413  005992                     PL44:
 22414                           	opt stack 25
 22415  005992  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22416  005996  0E20               	movlw	32
 22417  005998  6EDF               	movwf	indf2,c
 22418  00599A  4B60               	infsnz	sprintf@sp& (0+255),f,b
 22419  00599C  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
 22420  00599E  0775               	decf	sprintf@width& (0+255),f,b
 22421  0059A0  A0D8               	btfss	status,0,c
 22422  0059A2  0776               	decf	(sprintf@width+1)& (0+255),f,b
 22423  0059A4  0100               	movlb	0	; () banked
 22424  0059A6  5176               	movf	(sprintf@width+1)& (0+255),w,b
 22425  0059A8  1175               	iorwf	sprintf@width& (0+255),w,b
 22426  0059AA  0012               	return	
 22427  0059AC                     __end_ofPL44:
 22428                           	opt stack 0
 22429  0059AC                     PL50:
 22430                           	opt stack 25
 22431  0059AC  6ED9               	movwf	fsr2l,c
 22432  0059AE  6ADA               	clrf	fsr2h,c
 22433  0059B0  CFDE F077          	movff	postinc2,sprintf@_val
 22434  0059B4  CFDE F078          	movff	postinc2,sprintf@_val+1
 22435  0059B8  CFDE F079          	movff	postinc2,sprintf@_val+2
 22436  0059BC  CFDE F07A          	movff	postinc2,sprintf@_val+3
 22437  0059C0  0C04               	retlw	4
 22438  0059C2                     __end_ofPL50:
 22439                           	opt stack 0
 22440  0059C2                     PL62:
 22441                           	opt stack 25
 22442  0059C2  C060  FFD9         	movff	sprintf@sp,fsr2l
 22443  0059C6  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22444  0059CA  0E20               	movlw	32
 22445  0059CC  6EDF               	movwf	indf2,c
 22446  0059CE  0C20               	retlw	32
 22447  0059D0                     __end_ofPL62:
 22448                           	opt stack 0
 22449  0059D0                     PL66:
 22450                           	opt stack 25
 22451  0059D0  C062  FFF6         	movff	sprintf@f,tblptrl
 22452  0059D4  C063  FFF7         	movff	sprintf@f+1,tblptrh
 22453  0059D8  4B62               	infsnz	sprintf@f& (0+255),f,b
 22454  0059DA  2B63               	incf	(sprintf@f+1)& (0+255),f,b
 22455  0059DC  0008               	tblrd		*
 22456  0059DE  CFF5 F07B          	movff	tablat,sprintf@c
 22457  0059E2  0012               	return	
 22458  0059E4                     __end_ofPL66:
 22459                           	opt stack 0
 22460  0059E4                     PL80:
 22461                           	opt stack 25
 22462  0059E4  4B62               	infsnz	sprintf@f& (0+255),f,b
 22463  0059E6  2B63               	incf	(sprintf@f+1)& (0+255),f,b
 22464  0059E8  C062  FFF6         	movff	sprintf@f,tblptrl
 22465  0059EC  C063  FFF7         	movff	sprintf@f+1,tblptrh
 22466  0059F0  0008               	tblrd		*
 22467  0059F2  50F5               	movf	tablat,w,c
 22468  0059F4  0012               	return	
 22469  0059F6                     __end_ofPL80:
 22470                           	opt stack 0
 22471  0059F6                     PL84:
 22472                           	opt stack 25
 22473  0059F6  C061  FFDA         	movff	sprintf@sp+1,fsr2h
 22474  0059FA  0E30               	movlw	48
 22475  0059FC  6EDF               	movwf	indf2,c
 22476  0059FE  0C30               	retlw	48
 22477  005A00                     __end_ofPL84:
 22478                           	opt stack 0
 22479  005A00                     PL98:
 22480                           	opt stack 25
 22481  005A00  A0D8               	btfss	status,0,c
 22482  005A02  0776               	decf	(sprintf@width+1)& (0+255),f,b
 22483  005A04  0100               	movlb	0	; () banked
 22484  005A06  2975               	incf	sprintf@width& (0+255),w,b
 22485  005A08  0012               	return	
 22486  005A0A                     __end_ofPL98:
 22487                           	opt stack 0
 22488                           tblptru	equ	0xFF8
 22489                           tblptrh	equ	0xFF7
 22490                           tblptrl	equ	0xFF6
 22491                           tablat	equ	0xFF5
 22492                           prodh	equ	0xFF4
 22493                           prodl	equ	0xFF3
 22494                           intcon	equ	0xFF2
 22495                           indf0	equ	0xFEF
 22496                           postinc0	equ	0xFEE
 22497                           fsr0h	equ	0xFEA
 22498                           fsr0l	equ	0xFE9
 22499                           wreg	equ	0xFE8
 22500                           indf1	equ	0xFE7
 22501                           postinc1	equ	0xFE6
 22502                           postdec1	equ	0xFE5
 22503                           fsr1h	equ	0xFE2
 22504                           fsr1l	equ	0xFE1
 22505                           indf2	equ	0xFDF
 22506                           postinc2	equ	0xFDE
 22507                           postdec2	equ	0xFDD
 22508                           plusw2	equ	0xFDB
 22509                           fsr2h	equ	0xFDA
 22510                           fsr2l	equ	0xFD9
 22511                           status	equ	0xFD8
 22512                           
 22513 ;; *************** function ___wmul *****************
 22514 ;; Defined at:
 22515 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\wmul.c"
 22516 ;; Parameters:    Size  Location     Type
 22517 ;;  multiplier      2   24[COMRAM] unsigned int 
 22518 ;;  multiplicand    2   26[COMRAM] unsigned int 
 22519 ;; Auto vars:     Size  Location     Type
 22520 ;;  product         2   28[COMRAM] unsigned int 
 22521 ;; Return value:  Size  Location     Type
 22522 ;;                  2   24[COMRAM] unsigned int 
 22523 ;; Registers used:
 22524 ;;		wreg, status,2, status,0, prodl, prodh
 22525 ;; Tracked objects:
 22526 ;;		On entry : 0/2
 22527 ;;		On exit  : 0/0
 22528 ;;		Unchanged: 0/0
 22529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22530 ;;      Params:         4       0       0       0       0       0       0
 22531 ;;      Locals:         2       0       0       0       0       0       0
 22532 ;;      Temps:          0       0       0       0       0       0       0
 22533 ;;      Totals:         6       0       0       0       0       0       0
 22534 ;;Total ram usage:        6 bytes
 22535 ;; Hardware stack levels used:    1
 22536 ;; Hardware stack levels required when called:    2
 22537 ;; This function calls:
 22538 ;;		Nothing
 22539 ;; This function is called by:
 22540 ;;		_sprintf
 22541 ;;		_atoi
 22542 ;; This function uses a non-reentrant model
 22543 ;;
 22544                           
 22545                           	psect	text56
 22546  001E28                     __ptext56:
 22547                           	opt stack 0
 22548  001E28                     ___wmul:
 22549                           	opt stack 25
 22550                           
 22551                           ; BSR set to: 0
 22552                           ;incstack = 0
 22553                           ;incstack = 0
 22554  001E28  5019               	movf	___wmul@multiplier,w,c
 22555  001E2A  021B               	mulwf	___wmul@multiplicand,c
 22556  001E2C  CFF3 F01D          	movff	prodl,___wmul@product
 22557  001E30  CFF4 F01E          	movff	prodh,___wmul@product+1
 22558  001E34  5019               	movf	___wmul@multiplier,w,c
 22559  001E36  021C               	mulwf	___wmul@multiplicand+1,c
 22560  001E38  D808               	call	PL86	;call to abstracted procedure
 22561  001E3A  501A               	movf	___wmul@multiplier+1,w,c
 22562  001E3C  021B               	mulwf	___wmul@multiplicand,c
 22563  001E3E  D805               	call	PL86	;call to abstracted procedure
 22564  001E40  C01D  F019         	movff	___wmul@product,?___wmul
 22565  001E44  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
 22566  001E48  0012               	return	
 22567  001E4A                     __end_of___wmul:
 22568                           	opt stack 0
 22569  001E4A                     PL86:
 22570                           	opt stack 25
 22571  001E4A  CFF3 FFF4          	movff	prodl,prodh
 22572  001E4E  6AF3               	clrf	prodl,c
 22573  001E50  50F3               	movf	prodl,w,c
 22574  001E52  261D               	addwf	___wmul@product,f,c
 22575  001E54  50F4               	movf	prodh,w,c
 22576  001E56  221E               	addwfc	___wmul@product+1,f,c
 22577  001E58  0012               	return	
 22578  001E5A                     __end_ofPL86:
 22579                           	opt stack 0
 22580                           tblptru	equ	0xFF8
 22581                           tblptrh	equ	0xFF7
 22582                           tblptrl	equ	0xFF6
 22583                           tablat	equ	0xFF5
 22584                           prodh	equ	0xFF4
 22585                           prodl	equ	0xFF3
 22586                           intcon	equ	0xFF2
 22587                           indf0	equ	0xFEF
 22588                           postinc0	equ	0xFEE
 22589                           fsr0h	equ	0xFEA
 22590                           fsr0l	equ	0xFE9
 22591                           wreg	equ	0xFE8
 22592                           indf1	equ	0xFE7
 22593                           postinc1	equ	0xFE6
 22594                           postdec1	equ	0xFE5
 22595                           fsr1h	equ	0xFE2
 22596                           fsr1l	equ	0xFE1
 22597                           indf2	equ	0xFDF
 22598                           postinc2	equ	0xFDE
 22599                           postdec2	equ	0xFDD
 22600                           plusw2	equ	0xFDB
 22601                           fsr2h	equ	0xFDA
 22602                           fsr2l	equ	0xFD9
 22603                           status	equ	0xFD8
 22604                           
 22605 ;; *************** function ___llmod *****************
 22606 ;; Defined at:
 22607 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\llmod.c"
 22608 ;; Parameters:    Size  Location     Type
 22609 ;;  dividend        4   37[COMRAM] unsigned long 
 22610 ;;  divisor         4   41[COMRAM] unsigned long 
 22611 ;; Auto vars:     Size  Location     Type
 22612 ;;  counter         1   45[COMRAM] unsigned char 
 22613 ;; Return value:  Size  Location     Type
 22614 ;;                  4   37[COMRAM] unsigned long 
 22615 ;; Registers used:
 22616 ;;		wreg, status,2, status,0
 22617 ;; Tracked objects:
 22618 ;;		On entry : F/0
 22619 ;;		On exit  : F/0
 22620 ;;		Unchanged: F/0
 22621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22622 ;;      Params:         8       0       0       0       0       0       0
 22623 ;;      Locals:         1       0       0       0       0       0       0
 22624 ;;      Temps:          0       0       0       0       0       0       0
 22625 ;;      Totals:         9       0       0       0       0       0       0
 22626 ;;Total ram usage:        9 bytes
 22627 ;; Hardware stack levels used:    1
 22628 ;; Hardware stack levels required when called:    2
 22629 ;; This function calls:
 22630 ;;		Nothing
 22631 ;; This function is called by:
 22632 ;;		_sprintf
 22633 ;;		_ultoa
 22634 ;; This function uses a non-reentrant model
 22635 ;;
 22636                           
 22637                           	psect	text57
 22638  0023BE                     __ptext57:
 22639                           	opt stack 0
 22640  0023BE                     ___llmod:
 22641                           	opt stack 24
 22642                           
 22643                           ; BSR set to: 0
 22644                           
 22645                           ;incstack = 0
 22646                           ;incstack = 0
 22647  0023BE  502D               	movf	___llmod@divisor+3,w,c
 22648  0023C0  102A               	iorwf	___llmod@divisor,w,c
 22649  0023C2  102B               	iorwf	___llmod@divisor+1,w,c
 22650  0023C4  102C               	iorwf	___llmod@divisor+2,w,c
 22651  0023C6  E023               	bz	l2251
 22652                           
 22653                           ; BSR set to: 0
 22654  0023C8  0E01               	movlw	1
 22655  0023CA  6E2E               	movwf	___llmod@counter,c
 22656  0023CC  D006               	goto	l12378
 22657  0023CE                     l12376:
 22658                           
 22659                           ; BSR set to: 0
 22660  0023CE  90D8               	bcf	status,0,c
 22661  0023D0  362A               	rlcf	___llmod@divisor,f,c
 22662  0023D2  362B               	rlcf	___llmod@divisor+1,f,c
 22663  0023D4  362C               	rlcf	___llmod@divisor+2,f,c
 22664  0023D6  362D               	rlcf	___llmod@divisor+3,f,c
 22665  0023D8  2A2E               	incf	___llmod@counter,f,c
 22666  0023DA                     l12378:
 22667                           
 22668                           ; BSR set to: 0
 22669  0023DA  AE2D               	btfss	___llmod@divisor+3,7,c
 22670  0023DC  D7F8               	goto	l12376
 22671  0023DE                     l12380:
 22672                           
 22673                           ; BSR set to: 0
 22674  0023DE  502A               	movf	___llmod@divisor,w,c
 22675  0023E0  5C26               	subwf	___llmod@dividend,w,c
 22676  0023E2  502B               	movf	___llmod@divisor+1,w,c
 22677  0023E4  5827               	subwfb	___llmod@dividend+1,w,c
 22678  0023E6  502C               	movf	___llmod@divisor+2,w,c
 22679  0023E8  5828               	subwfb	___llmod@dividend+2,w,c
 22680  0023EA  502D               	movf	___llmod@divisor+3,w,c
 22681  0023EC  5829               	subwfb	___llmod@dividend+3,w,c
 22682  0023EE  E308               	bnc	l12384
 22683                           
 22684                           ; BSR set to: 0
 22685  0023F0  502A               	movf	___llmod@divisor,w,c
 22686  0023F2  5E26               	subwf	___llmod@dividend,f,c
 22687  0023F4  502B               	movf	___llmod@divisor+1,w,c
 22688  0023F6  5A27               	subwfb	___llmod@dividend+1,f,c
 22689  0023F8  502C               	movf	___llmod@divisor+2,w,c
 22690  0023FA  5A28               	subwfb	___llmod@dividend+2,f,c
 22691  0023FC  502D               	movf	___llmod@divisor+3,w,c
 22692  0023FE  5A29               	subwfb	___llmod@dividend+3,f,c
 22693  002400                     l12384:
 22694                           
 22695                           ; BSR set to: 0
 22696  002400  90D8               	bcf	status,0,c
 22697  002402  322D               	rrcf	___llmod@divisor+3,f,c
 22698  002404  322C               	rrcf	___llmod@divisor+2,f,c
 22699  002406  322B               	rrcf	___llmod@divisor+1,f,c
 22700  002408  322A               	rrcf	___llmod@divisor,f,c
 22701                           
 22702                           ; BSR set to: 0
 22703  00240A  2E2E               	decfsz	___llmod@counter,f,c
 22704  00240C  D7E8               	goto	l12380
 22705  00240E                     l2251:
 22706                           
 22707                           ; BSR set to: 0
 22708  00240E  C026  F026         	movff	___llmod@dividend,?___llmod
 22709  002412  C027  F027         	movff	___llmod@dividend+1,?___llmod+1
 22710  002416  C028  F028         	movff	___llmod@dividend+2,?___llmod+2
 22711  00241A  C029  F029         	movff	___llmod@dividend+3,?___llmod+3
 22712                           
 22713                           ; BSR set to: 0
 22714  00241E  0012               	return	
 22715  002420                     __end_of___llmod:
 22716                           	opt stack 0
 22717                           tblptru	equ	0xFF8
 22718                           tblptrh	equ	0xFF7
 22719                           tblptrl	equ	0xFF6
 22720                           tablat	equ	0xFF5
 22721                           prodh	equ	0xFF4
 22722                           prodl	equ	0xFF3
 22723                           intcon	equ	0xFF2
 22724                           indf0	equ	0xFEF
 22725                           postinc0	equ	0xFEE
 22726                           fsr0h	equ	0xFEA
 22727                           fsr0l	equ	0xFE9
 22728                           wreg	equ	0xFE8
 22729                           indf1	equ	0xFE7
 22730                           postinc1	equ	0xFE6
 22731                           postdec1	equ	0xFE5
 22732                           fsr1h	equ	0xFE2
 22733                           fsr1l	equ	0xFE1
 22734                           indf2	equ	0xFDF
 22735                           postinc2	equ	0xFDE
 22736                           postdec2	equ	0xFDD
 22737                           plusw2	equ	0xFDB
 22738                           fsr2h	equ	0xFDA
 22739                           fsr2l	equ	0xFD9
 22740                           status	equ	0xFD8
 22741                           
 22742 ;; *************** function ___lldiv *****************
 22743 ;; Defined at:
 22744 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lldiv.c"
 22745 ;; Parameters:    Size  Location     Type
 22746 ;;  dividend        4   24[COMRAM] unsigned long 
 22747 ;;  divisor         4   28[COMRAM] unsigned long 
 22748 ;; Auto vars:     Size  Location     Type
 22749 ;;  quotient        4   32[COMRAM] unsigned long 
 22750 ;;  counter         1   36[COMRAM] unsigned char 
 22751 ;; Return value:  Size  Location     Type
 22752 ;;                  4   24[COMRAM] unsigned long 
 22753 ;; Registers used:
 22754 ;;		wreg, status,2, status,0
 22755 ;; Tracked objects:
 22756 ;;		On entry : F/0
 22757 ;;		On exit  : F/0
 22758 ;;		Unchanged: F/0
 22759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22760 ;;      Params:         8       0       0       0       0       0       0
 22761 ;;      Locals:         5       0       0       0       0       0       0
 22762 ;;      Temps:          0       0       0       0       0       0       0
 22763 ;;      Totals:        13       0       0       0       0       0       0
 22764 ;;Total ram usage:       13 bytes
 22765 ;; Hardware stack levels used:    1
 22766 ;; Hardware stack levels required when called:    2
 22767 ;; This function calls:
 22768 ;;		Nothing
 22769 ;; This function is called by:
 22770 ;;		_sprintf
 22771 ;;		_ultoa
 22772 ;; This function uses a non-reentrant model
 22773 ;;
 22774                           
 22775                           	psect	text58
 22776  002632                     __ptext58:
 22777                           	opt stack 0
 22778  002632                     ___lldiv:
 22779                           	opt stack 24
 22780                           
 22781                           ; BSR set to: 0
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;incstack = 0
 22785                           ;incstack = 0
 22786  002632  6A21               	clrf	___lldiv@quotient,c
 22787  002634  6A22               	clrf	___lldiv@quotient+1,c
 22788  002636  6A23               	clrf	___lldiv@quotient+2,c
 22789  002638  6A24               	clrf	___lldiv@quotient+3,c
 22790                           
 22791                           ; BSR set to: 0
 22792  00263A  5020               	movf	___lldiv@divisor+3,w,c
 22793  00263C  101D               	iorwf	___lldiv@divisor,w,c
 22794  00263E  101E               	iorwf	___lldiv@divisor+1,w,c
 22795  002640  101F               	iorwf	___lldiv@divisor+2,w,c
 22796  002642  E029               	bz	l2241
 22797                           
 22798                           ; BSR set to: 0
 22799  002644  0E01               	movlw	1
 22800  002646  6E25               	movwf	___lldiv@counter,c
 22801  002648  D006               	goto	l12358
 22802  00264A                     l12356:
 22803                           
 22804                           ; BSR set to: 0
 22805  00264A  90D8               	bcf	status,0,c
 22806  00264C  361D               	rlcf	___lldiv@divisor,f,c
 22807  00264E  361E               	rlcf	___lldiv@divisor+1,f,c
 22808  002650  361F               	rlcf	___lldiv@divisor+2,f,c
 22809  002652  3620               	rlcf	___lldiv@divisor+3,f,c
 22810  002654  2A25               	incf	___lldiv@counter,f,c
 22811  002656                     l12358:
 22812                           
 22813                           ; BSR set to: 0
 22814  002656  AE20               	btfss	___lldiv@divisor+3,7,c
 22815  002658  D7F8               	goto	l12356
 22816  00265A                     l12360:
 22817                           
 22818                           ; BSR set to: 0
 22819  00265A  90D8               	bcf	status,0,c
 22820  00265C  3621               	rlcf	___lldiv@quotient,f,c
 22821  00265E  3622               	rlcf	___lldiv@quotient+1,f,c
 22822  002660  3623               	rlcf	___lldiv@quotient+2,f,c
 22823  002662  3624               	rlcf	___lldiv@quotient+3,f,c
 22824                           
 22825                           ; BSR set to: 0
 22826  002664  501D               	movf	___lldiv@divisor,w,c
 22827  002666  5C19               	subwf	___lldiv@dividend,w,c
 22828  002668  501E               	movf	___lldiv@divisor+1,w,c
 22829  00266A  581A               	subwfb	___lldiv@dividend+1,w,c
 22830  00266C  501F               	movf	___lldiv@divisor+2,w,c
 22831  00266E  581B               	subwfb	___lldiv@dividend+2,w,c
 22832  002670  5020               	movf	___lldiv@divisor+3,w,c
 22833  002672  581C               	subwfb	___lldiv@dividend+3,w,c
 22834  002674  E309               	bnc	l12368
 22835                           
 22836                           ; BSR set to: 0
 22837  002676  501D               	movf	___lldiv@divisor,w,c
 22838  002678  5E19               	subwf	___lldiv@dividend,f,c
 22839  00267A  501E               	movf	___lldiv@divisor+1,w,c
 22840  00267C  5A1A               	subwfb	___lldiv@dividend+1,f,c
 22841  00267E  501F               	movf	___lldiv@divisor+2,w,c
 22842  002680  5A1B               	subwfb	___lldiv@dividend+2,f,c
 22843  002682  5020               	movf	___lldiv@divisor+3,w,c
 22844  002684  5A1C               	subwfb	___lldiv@dividend+3,f,c
 22845                           
 22846                           ; BSR set to: 0
 22847  002686  8021               	bsf	___lldiv@quotient,0,c
 22848  002688                     l12368:
 22849                           
 22850                           ; BSR set to: 0
 22851  002688  90D8               	bcf	status,0,c
 22852  00268A  3220               	rrcf	___lldiv@divisor+3,f,c
 22853  00268C  321F               	rrcf	___lldiv@divisor+2,f,c
 22854  00268E  321E               	rrcf	___lldiv@divisor+1,f,c
 22855  002690  321D               	rrcf	___lldiv@divisor,f,c
 22856                           
 22857                           ; BSR set to: 0
 22858  002692  2E25               	decfsz	___lldiv@counter,f,c
 22859  002694  D7E2               	goto	l12360
 22860  002696                     l2241:
 22861                           
 22862                           ; BSR set to: 0
 22863  002696  C021  F019         	movff	___lldiv@quotient,?___lldiv
 22864  00269A  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
 22865  00269E  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
 22866  0026A2  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
 22867                           
 22868                           ; BSR set to: 0
 22869  0026A6  0012               	return	
 22870  0026A8                     __end_of___lldiv:
 22871                           	opt stack 0
 22872                           tblptru	equ	0xFF8
 22873                           tblptrh	equ	0xFF7
 22874                           tblptrl	equ	0xFF6
 22875                           tablat	equ	0xFF5
 22876                           prodh	equ	0xFF4
 22877                           prodl	equ	0xFF3
 22878                           intcon	equ	0xFF2
 22879                           indf0	equ	0xFEF
 22880                           postinc0	equ	0xFEE
 22881                           fsr0h	equ	0xFEA
 22882                           fsr0l	equ	0xFE9
 22883                           wreg	equ	0xFE8
 22884                           indf1	equ	0xFE7
 22885                           postinc1	equ	0xFE6
 22886                           postdec1	equ	0xFE5
 22887                           fsr1h	equ	0xFE2
 22888                           fsr1l	equ	0xFE1
 22889                           indf2	equ	0xFDF
 22890                           postinc2	equ	0xFDE
 22891                           postdec2	equ	0xFDD
 22892                           plusw2	equ	0xFDB
 22893                           fsr2h	equ	0xFDA
 22894                           fsr2l	equ	0xFD9
 22895                           status	equ	0xFD8
 22896                           
 22897 ;; *************** function _isdigit *****************
 22898 ;; Defined at:
 22899 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isdigit.c"
 22900 ;; Parameters:    Size  Location     Type
 22901 ;;  c               1    wreg     unsigned char 
 22902 ;; Auto vars:     Size  Location     Type
 22903 ;;  c               1   26[COMRAM] unsigned char 
 22904 ;; Return value:  Size  Location     Type
 22905 ;;		None               void
 22906 ;; Registers used:
 22907 ;;		wreg, status,2, status,0
 22908 ;; Tracked objects:
 22909 ;;		On entry : 0/2
 22910 ;;		On exit  : 0/0
 22911 ;;		Unchanged: 0/0
 22912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22913 ;;      Params:         0       0       0       0       0       0       0
 22914 ;;      Locals:         2       0       0       0       0       0       0
 22915 ;;      Temps:          1       0       0       0       0       0       0
 22916 ;;      Totals:         3       0       0       0       0       0       0
 22917 ;;Total ram usage:        3 bytes
 22918 ;; Hardware stack levels used:    1
 22919 ;; Hardware stack levels required when called:    2
 22920 ;; This function calls:
 22921 ;;		Nothing
 22922 ;; This function is called by:
 22923 ;;		_sprintf
 22924 ;;		_atoi
 22925 ;; This function uses a non-reentrant model
 22926 ;;
 22927                           
 22928                           	psect	text59
 22929  001D5A                     __ptext59:
 22930                           	opt stack 0
 22931  001D5A                     _isdigit:
 22932                           	opt stack 25
 22933                           
 22934                           ; BSR set to: 0
 22935                           ;incstack = 0
 22936                           ;incstack = 0
 22937                           ;isdigit@c stored from wreg
 22938  001D5A  CFE8 F01B          	movff	wreg,isdigit@c
 22939  001D5E  6A1A               	clrf	_isdigit$2900,c
 22940  001D60  0E3A               	movlw	58
 22941  001D62  601B               	cpfslt	isdigit@c,c
 22942  001D64  D005               	goto	l12316
 22943  001D66  0E2F               	movlw	47
 22944  001D68  641B               	cpfsgt	isdigit@c,c
 22945  001D6A  D002               	goto	l12316
 22946  001D6C  0E01               	movlw	1
 22947  001D6E  6E1A               	movwf	_isdigit$2900,c
 22948  001D70                     l12316:
 22949  001D70  C01A  F019         	movff	_isdigit$2900,??_isdigit
 22950  001D74  3019               	rrcf	??_isdigit,w,c
 22951  001D76  0012               	return	
 22952  001D78                     __end_of_isdigit:
 22953                           	opt stack 0
 22954                           tblptru	equ	0xFF8
 22955                           tblptrh	equ	0xFF7
 22956                           tblptrl	equ	0xFF6
 22957                           tablat	equ	0xFF5
 22958                           prodh	equ	0xFF4
 22959                           prodl	equ	0xFF3
 22960                           intcon	equ	0xFF2
 22961                           indf0	equ	0xFEF
 22962                           postinc0	equ	0xFEE
 22963                           fsr0h	equ	0xFEA
 22964                           fsr0l	equ	0xFE9
 22965                           wreg	equ	0xFE8
 22966                           indf1	equ	0xFE7
 22967                           postinc1	equ	0xFE6
 22968                           postdec1	equ	0xFE5
 22969                           fsr1h	equ	0xFE2
 22970                           fsr1l	equ	0xFE1
 22971                           indf2	equ	0xFDF
 22972                           postinc2	equ	0xFDE
 22973                           postdec2	equ	0xFDD
 22974                           plusw2	equ	0xFDB
 22975                           fsr2h	equ	0xFDA
 22976                           fsr2l	equ	0xFD9
 22977                           status	equ	0xFD8
 22978                           
 22979 ;; *************** function _fifo_read *****************
 22980 ;; Defined at:
 22981 ;;		line 29 in file "fifo.c"
 22982 ;; Parameters:    Size  Location     Type
 22983 ;;  f               2   24[COMRAM] PTR struct .
 22984 ;;		 -> serialInputFifo(8), 
 22985 ;;  buf             2   26[COMRAM] PTR void 
 22986 ;;		 -> doModeSLCAN@c(1), doModeVscp@c(1), doModeVerbose@c(1), main@c(1), 
 22987 ;;  nbytes          2   28[COMRAM] unsigned short 
 22988 ;; Auto vars:     Size  Location     Type
 22989 ;;  i               2   36[COMRAM] unsigned short 
 22990 ;;  p               2   34[COMRAM] PTR unsigned char 
 22991 ;;		 -> doModeSLCAN@c(1), doModeVscp@c(1), doModeVerbose@c(1), main@c(1), 
 22992 ;; Return value:  Size  Location     Type
 22993 ;;                  2   24[COMRAM] unsigned short 
 22994 ;; Registers used:
 22995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22996 ;; Tracked objects:
 22997 ;;		On entry : C/0
 22998 ;;		On exit  : C/0
 22999 ;;		Unchanged: C/0
 23000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23001 ;;      Params:         6       0       0       0       0       0       0
 23002 ;;      Locals:         4       0       0       0       0       0       0
 23003 ;;      Temps:          4       0       0       0       0       0       0
 23004 ;;      Totals:        14       0       0       0       0       0       0
 23005 ;;Total ram usage:       14 bytes
 23006 ;; Hardware stack levels used:    1
 23007 ;; Hardware stack levels required when called:    2
 23008 ;; This function calls:
 23009 ;;		Nothing
 23010 ;; This function is called by:
 23011 ;;		_main
 23012 ;;		_doModeVerbose
 23013 ;;		_doModeVscp
 23014 ;;		_doModeSLCAN
 23015 ;; This function uses a non-reentrant model
 23016 ;;
 23017                           
 23018                           	psect	text60
 23019  002EF0                     __ptext60:
 23020                           	opt stack 0
 23021  002EF0                     _fifo_read:
 23022                           	opt stack 26
 23023                           
 23024                           ;fifo.c: 30: uint16_t i;
 23025                           ;fifo.c: 31: uint8_t *p;
 23026                           ;fifo.c: 32: p = buf;
 23027                           
 23028                           ;incstack = 0
 23029                           ;incstack = 0
 23030  002EF0  C01B  F023         	movff	fifo_read@buf,fifo_read@p
 23031  002EF4  C01C  F024         	movff	fifo_read@buf+1,fifo_read@p+1
 23032                           
 23033                           ;fifo.c: 34: for (i = 0; i < nbytes; i++) {
 23034  002EF8  6A25               	clrf	fifo_read@i,c
 23035  002EFA  6A26               	clrf	fifo_read@i+1,c
 23036  002EFC  D045               	goto	l12688
 23037  002EFE                     l12674:
 23038                           
 23039                           ;fifo.c: 36: if (f->tail != f->head) {
 23040  002EFE  EE20 F002          	lfsr	2,2
 23041  002F02  D84C               	call	PL26	;call to abstracted procedure
 23042  002F04  B4D8               	btfsc	status,2,c
 23043  002F06  18E7               	xorwf	indf1,w,c
 23044  002F08  E038               	bz	l1421
 23045                           
 23046                           ;fifo.c: 37: *p++ = f->buf[ f->tail ];
 23047  002F0A  EE20 F004          	lfsr	2,4
 23048  002F0E  5019               	movf	fifo_read@f,w,c
 23049  002F10  26D9               	addwf	fsr2l,f,c
 23050  002F12  501A               	movf	fifo_read@f+1,w,c
 23051  002F14  22DA               	addwfc	fsr2h,f,c
 23052  002F16  CFDE F01F          	movff	postinc2,??_fifo_read
 23053  002F1A  CFDD F020          	movff	postdec2,??_fifo_read+1
 23054  002F1E  C019  FFD9         	movff	fifo_read@f,fsr2l
 23055  002F22  C01A  FFDA         	movff	fifo_read@f+1,fsr2h
 23056  002F26  CFDE F021          	movff	postinc2,??_fifo_read+2
 23057  002F2A  CFDD F022          	movff	postdec2,??_fifo_read+3
 23058  002F2E  501F               	movf	??_fifo_read,w,c
 23059  002F30  2421               	addwf	??_fifo_read+2,w,c
 23060  002F32  6ED9               	movwf	fsr2l,c
 23061  002F34  5020               	movf	??_fifo_read+1,w,c
 23062  002F36  2022               	addwfc	??_fifo_read+3,w,c
 23063  002F38  6EDA               	movwf	fsr2h,c
 23064  002F3A  C023  FFE1         	movff	fifo_read@p,fsr1l
 23065  002F3E  C024  FFE2         	movff	fifo_read@p+1,fsr1h
 23066  002F42  CFDF FFE7          	movff	indf2,indf1
 23067  002F46  4A23               	infsnz	fifo_read@p,f,c
 23068  002F48  2A24               	incf	fifo_read@p+1,f,c
 23069                           
 23070                           ;fifo.c: 38: f->tail++;
 23071  002F4A  EE20 F004          	lfsr	2,4
 23072  002F4E  5019               	movf	fifo_read@f,w,c
 23073  002F50  26D9               	addwf	fsr2l,f,c
 23074  002F52  501A               	movf	fifo_read@f+1,w,c
 23075  002F54  22DA               	addwfc	fsr2h,f,c
 23076  002F56  2ADE               	incf	postinc2,f,c
 23077  002F58  0E00               	movlw	0
 23078  002F5A  22DD               	addwfc	postdec2,f,c
 23079                           
 23080                           ;fifo.c: 39: if (f->tail == f->size) {
 23081  002F5C  EE20 F006          	lfsr	2,6
 23082  002F60  D81D               	call	PL26	;call to abstracted procedure
 23083  002F62  B4D8               	btfsc	status,2,c
 23084  002F64  18E7               	xorwf	indf1,w,c
 23085  002F66  E10E               	bnz	l12686
 23086                           
 23087                           ;fifo.c: 40: f->tail = 0;
 23088  002F68  EE20 F004          	lfsr	2,4
 23089  002F6C  5019               	movf	fifo_read@f,w,c
 23090  002F6E  26D9               	addwf	fsr2l,f,c
 23091  002F70  501A               	movf	fifo_read@f+1,w,c
 23092  002F72  22DA               	addwfc	fsr2h,f,c
 23093  002F74  6ADE               	clrf	postinc2,c
 23094  002F76  6ADD               	clrf	postdec2,c
 23095  002F78  D005               	goto	l12686
 23096  002F7A                     l1421:
 23097                           
 23098                           ;fifo.c: 43: else {
 23099                           ;fifo.c: 44: return i;
 23100  002F7A  C025  F019         	movff	fifo_read@i,?_fifo_read
 23101  002F7E  C026  F01A         	movff	fifo_read@i+1,?_fifo_read+1
 23102  002F82  D00B               	goto	l1424
 23103  002F84                     l12686:
 23104  002F84  4A25               	infsnz	fifo_read@i,f,c
 23105  002F86  2A26               	incf	fifo_read@i+1,f,c
 23106  002F88                     l12688:
 23107  002F88  501D               	movf	fifo_read@nbytes,w,c
 23108  002F8A  5C25               	subwf	fifo_read@i,w,c
 23109  002F8C  501E               	movf	fifo_read@nbytes+1,w,c
 23110  002F8E  5826               	subwfb	fifo_read@i+1,w,c
 23111  002F90  E3B6               	bnc	l12674
 23112                           
 23113                           ;fifo.c: 45: }
 23114                           ;fifo.c: 47: }
 23115                           ;fifo.c: 49: return nbytes;
 23116  002F92  C01D  F019         	movff	fifo_read@nbytes,?_fifo_read
 23117  002F96  C01E  F01A         	movff	fifo_read@nbytes+1,?_fifo_read+1
 23118  002F9A                     l1424:
 23119  002F9A  0012               	return	
 23120  002F9C                     __end_of_fifo_read:
 23121                           	opt stack 0
 23122  002F9C                     PL26:
 23123                           	opt stack 26
 23124  002F9C  5019               	movf	fifo_read@f,w,c
 23125  002F9E  26D9               	addwf	fsr2l,f,c
 23126  002FA0  501A               	movf	fifo_read@f+1,w,c
 23127  002FA2  22DA               	addwfc	fsr2h,f,c
 23128  002FA4  EE10 F004          	lfsr	1,4
 23129  002FA8  5019               	movf	fifo_read@f,w,c
 23130  002FAA  26E1               	addwf	fsr1l,f,c
 23131  002FAC  501A               	movf	fifo_read@f+1,w,c
 23132  002FAE  22E2               	addwfc	fsr1h,f,c
 23133  002FB0  52E6               	movf	postinc1,f,c
 23134  002FB2  52DE               	movf	postinc2,f,c
 23135  002FB4  50DD               	movf	postdec2,w,c
 23136  002FB6  18E5               	xorwf	postdec1,w,c
 23137  002FB8  CFDF FFE8          	movff	indf2,wreg
 23138  002FBC  0012               	return	
 23139  002FBE                     __end_ofPL26:
 23140                           	opt stack 0
 23141                           tblptru	equ	0xFF8
 23142                           tblptrh	equ	0xFF7
 23143                           tblptrl	equ	0xFF6
 23144                           tablat	equ	0xFF5
 23145                           prodh	equ	0xFF4
 23146                           prodl	equ	0xFF3
 23147                           intcon	equ	0xFF2
 23148                           indf0	equ	0xFEF
 23149                           postinc0	equ	0xFEE
 23150                           fsr0h	equ	0xFEA
 23151                           fsr0l	equ	0xFE9
 23152                           wreg	equ	0xFE8
 23153                           indf1	equ	0xFE7
 23154                           postinc1	equ	0xFE6
 23155                           postdec1	equ	0xFE5
 23156                           fsr1h	equ	0xFE2
 23157                           fsr1l	equ	0xFE1
 23158                           indf2	equ	0xFDF
 23159                           postinc2	equ	0xFDE
 23160                           postdec2	equ	0xFDD
 23161                           plusw2	equ	0xFDB
 23162                           fsr2h	equ	0xFDA
 23163                           fsr2l	equ	0xFD9
 23164                           status	equ	0xFD8
 23165                           
 23166 ;; *************** function _printFirmwareVersion *****************
 23167 ;; Defined at:
 23168 ;;		line 2353 in file "main.c"
 23169 ;; Parameters:    Size  Location     Type
 23170 ;;		None
 23171 ;; Auto vars:     Size  Location     Type
 23172 ;;  wrkbuf         20    2[BANK0 ] unsigned char [20]
 23173 ;; Return value:  Size  Location     Type
 23174 ;;		None               void
 23175 ;; Registers used:
 23176 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23177 ;; Tracked objects:
 23178 ;;		On entry : 0/0
 23179 ;;		On exit  : 0/0
 23180 ;;		Unchanged: 0/0
 23181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23182 ;;      Params:         0       0       0       0       0       0       0
 23183 ;;      Locals:         0      20       0       0       0       0       0
 23184 ;;      Temps:          0       0       0       0       0       0       0
 23185 ;;      Totals:         0      20       0       0       0       0       0
 23186 ;;Total ram usage:       20 bytes
 23187 ;; Hardware stack levels used:    1
 23188 ;; Hardware stack levels required when called:    5
 23189 ;; This function calls:
 23190 ;;		_putsUSART
 23191 ;;		_WriteUSART
 23192 ;;		_itoa
 23193 ;; This function is called by:
 23194 ;;		_main
 23195 ;;		_doModeVerbose
 23196 ;; This function uses a non-reentrant model
 23197 ;;
 23198                           
 23199                           	psect	text61
 23200  002926                     __ptext61:
 23201                           	opt stack 0
 23202  002926                     _printFirmwareVersion:
 23203                           	opt stack 23
 23204                           
 23205                           ;main.c: 2354: char wrkbuf[20];
 23206                           ;main.c: 2355: putsUSART((char *) "Version: ");
 23207                           
 23208                           ;incstack = 0
 23209                           ;incstack = 0
 23210  002926  0E7B               	movlw	high STR_245
 23211  002928  6E1B               	movwf	?_putsUSART+1,c
 23212  00292A  0E9D               	movlw	low STR_245
 23213  00292C  6E1A               	movwf	?_putsUSART,c
 23214  00292E  EC2E  F011         	call	_putsUSART	;wreg free
 23215                           
 23216                           ;main.c: 2356: itoa(wrkbuf, 1, 10);
 23217  002932  D83A               	call	PL60	;call to abstracted procedure
 23218  002934  0E01               	movlw	1
 23219  002936  6E2B               	movwf	?_itoa+2,c
 23220  002938  6A2E               	clrf	?_itoa+5,c
 23221  00293A  0E0A               	movlw	10
 23222  00293C  6E2D               	movwf	?_itoa+4,c
 23223  00293E  EC2D  F00F         	call	_itoa	;wreg free
 23224                           
 23225                           ;main.c: 2357: putsUSART(wrkbuf);
 23226  002942  0100               	movlb	0	; () banked
 23227  002944  0E00               	movlw	high printFirmwareVersion@wrkbuf
 23228  002946  6E1B               	movwf	?_putsUSART+1,c
 23229  002948  0E62               	movlw	low printFirmwareVersion@wrkbuf
 23230  00294A  6E1A               	movwf	?_putsUSART,c
 23231  00294C  EC2E  F011         	call	_putsUSART	;wreg free
 23232  002950                     l1117:
 23233  002950  A2AC               	btfss	4012,1,c	;volatile
 23234  002952  D7FE               	goto	l1117
 23235                           
 23236                           ;main.c: 2359: WriteUSART('.');
 23237  002954  0E2E               	movlw	46
 23238  002956  EC6E  F00E         	call	_WriteUSART
 23239                           
 23240                           ;main.c: 2360: itoa(wrkbuf, 0, 10);
 23241  00295A  D826               	call	PL60	;call to abstracted procedure
 23242  00295C  6A2B               	clrf	?_itoa+2,c
 23243  00295E  6A2E               	clrf	?_itoa+5,c
 23244  002960  0E0A               	movlw	10
 23245  002962  6E2D               	movwf	?_itoa+4,c
 23246  002964  EC2D  F00F         	call	_itoa	;wreg free
 23247                           
 23248                           ;main.c: 2361: putsUSART(wrkbuf);
 23249  002968  0100               	movlb	0	; () banked
 23250  00296A  0E00               	movlw	high printFirmwareVersion@wrkbuf
 23251  00296C  6E1B               	movwf	?_putsUSART+1,c
 23252  00296E  0E62               	movlw	low printFirmwareVersion@wrkbuf
 23253  002970  6E1A               	movwf	?_putsUSART,c
 23254  002972  EC2E  F011         	call	_putsUSART	;wreg free
 23255  002976                     l1120:
 23256  002976  A2AC               	btfss	4012,1,c	;volatile
 23257  002978  D7FE               	goto	l1120
 23258                           
 23259                           ;main.c: 2363: WriteUSART('.');
 23260  00297A  0E2E               	movlw	46
 23261  00297C  EC6E  F00E         	call	_WriteUSART
 23262                           
 23263                           ;main.c: 2364: itoa(wrkbuf, 0, 10);
 23264  002980  D813               	call	PL60	;call to abstracted procedure
 23265  002982  6A2B               	clrf	?_itoa+2,c
 23266  002984  6A2E               	clrf	?_itoa+5,c
 23267  002986  0E0A               	movlw	10
 23268  002988  6E2D               	movwf	?_itoa+4,c
 23269  00298A  EC2D  F00F         	call	_itoa	;wreg free
 23270                           
 23271                           ;main.c: 2365: putsUSART(wrkbuf);
 23272  00298E  0100               	movlb	0	; () banked
 23273  002990  0E00               	movlw	high printFirmwareVersion@wrkbuf
 23274  002992  6E1B               	movwf	?_putsUSART+1,c
 23275  002994  0E62               	movlw	low printFirmwareVersion@wrkbuf
 23276  002996  6E1A               	movwf	?_putsUSART,c
 23277  002998  EC2E  F011         	call	_putsUSART	;wreg free
 23278                           
 23279                           ;main.c: 2366: putsUSART((char *) "\r\n");
 23280  00299C  0E71               	movlw	high (STR_188+50)
 23281  00299E  6E1B               	movwf	?_putsUSART+1,c
 23282  0029A0  0EAE               	movlw	low (STR_188+50)
 23283  0029A2  6E1A               	movwf	?_putsUSART,c
 23284  0029A4  EF2E  F011         	goto	_putsUSART	;wreg free
 23285  0029A8                     __end_of_printFirmwareVersion:
 23286                           	opt stack 0
 23287  0029A8                     PL60:
 23288                           	opt stack 23
 23289  0029A8  0100               	movlb	0	; () banked
 23290  0029AA  0E00               	movlw	high printFirmwareVersion@wrkbuf
 23291  0029AC  6E2A               	movwf	?_itoa+1,c
 23292  0029AE  0E62               	movlw	low printFirmwareVersion@wrkbuf
 23293  0029B0  6E29               	movwf	?_itoa,c
 23294  0029B2  6A2C               	clrf	?_itoa+3,c
 23295  0029B4  0012               	return	
 23296  0029B6                     __end_ofPL60:
 23297                           	opt stack 0
 23298                           tblptru	equ	0xFF8
 23299                           tblptrh	equ	0xFF7
 23300                           tblptrl	equ	0xFF6
 23301                           tablat	equ	0xFF5
 23302                           prodh	equ	0xFF4
 23303                           prodl	equ	0xFF3
 23304                           intcon	equ	0xFF2
 23305                           indf0	equ	0xFEF
 23306                           postinc0	equ	0xFEE
 23307                           fsr0h	equ	0xFEA
 23308                           fsr0l	equ	0xFE9
 23309                           wreg	equ	0xFE8
 23310                           indf1	equ	0xFE7
 23311                           postinc1	equ	0xFE6
 23312                           postdec1	equ	0xFE5
 23313                           fsr1h	equ	0xFE2
 23314                           fsr1l	equ	0xFE1
 23315                           indf2	equ	0xFDF
 23316                           postinc2	equ	0xFDE
 23317                           postdec2	equ	0xFDD
 23318                           plusw2	equ	0xFDB
 23319                           fsr2h	equ	0xFDA
 23320                           fsr2l	equ	0xFD9
 23321                           status	equ	0xFD8
 23322                           
 23323 ;; *************** function _itoa *****************
 23324 ;; Defined at:
 23325 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\itoa.c"
 23326 ;; Parameters:    Size  Location     Type
 23327 ;;  buf             2   40[COMRAM] PTR unsigned char 
 23328 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 23329 ;;  val             2   42[COMRAM] int 
 23330 ;;  base            2   44[COMRAM] int 
 23331 ;; Auto vars:     Size  Location     Type
 23332 ;;  cp              2    0        PTR unsigned char 
 23333 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 23334 ;; Return value:  Size  Location     Type
 23335 ;;                  2   40[COMRAM] PTR unsigned char 
 23336 ;; Registers used:
 23337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23338 ;; Tracked objects:
 23339 ;;		On entry : F/0
 23340 ;;		On exit  : 0/0
 23341 ;;		Unchanged: 0/0
 23342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23343 ;;      Params:         6       0       0       0       0       0       0
 23344 ;;      Locals:         0       2       0       0       0       0       0
 23345 ;;      Temps:          0       0       0       0       0       0       0
 23346 ;;      Totals:         6       2       0       0       0       0       0
 23347 ;;Total ram usage:        8 bytes
 23348 ;; Hardware stack levels used:    1
 23349 ;; Hardware stack levels required when called:    4
 23350 ;; This function calls:
 23351 ;;		_utoa
 23352 ;; This function is called by:
 23353 ;;		_receivePrintEventSLCAN
 23354 ;;		_findNodes
 23355 ;;		_printGUID
 23356 ;;		_printNodeFirmwareVersion
 23357 ;;		_printFirmwareVersion
 23358 ;; This function uses a non-reentrant model
 23359 ;;
 23360                           
 23361                           	psect	text62
 23362  001E5A                     __ptext62:
 23363                           	opt stack 0
 23364  001E5A                     _itoa:
 23365                           	opt stack 23
 23366                           
 23367                           ; BSR set to: 0
 23368                           
 23369                           ;incstack = 0
 23370                           ;incstack = 0
 23371  001E5A  AE2C               	btfss	itoa@val+1,7,c
 23372  001E5C  D00C               	goto	l14556
 23373                           
 23374                           ; BSR set to: 0
 23375  001E5E  C029  FFD9         	movff	itoa@buf,fsr2l
 23376  001E62  C02A  FFDA         	movff	itoa@buf+1,fsr2h
 23377  001E66  0E2D               	movlw	45
 23378  001E68  6EDF               	movwf	indf2,c
 23379                           
 23380                           ; BSR set to: 0
 23381  001E6A  4A29               	infsnz	itoa@buf,f,c
 23382  001E6C  2A2A               	incf	itoa@buf+1,f,c
 23383                           
 23384                           ; BSR set to: 0
 23385  001E6E  6C2B               	negf	itoa@val,c
 23386  001E70  1E2C               	comf	itoa@val+1,f,c
 23387  001E72  B0D8               	btfsc	status,0,c
 23388  001E74  2A2C               	incf	itoa@val+1,f,c
 23389  001E76                     l14556:
 23390                           
 23391                           ; BSR set to: 0
 23392  001E76  C029  F020         	movff	itoa@buf,?_utoa
 23393  001E7A  C02A  F021         	movff	itoa@buf+1,?_utoa+1
 23394  001E7E  C02B  F022         	movff	itoa@val,?_utoa+2
 23395  001E82  C02C  F023         	movff	itoa@val+1,?_utoa+3
 23396  001E86  C02D  F024         	movff	itoa@base,?_utoa+4
 23397  001E8A  C02E  F025         	movff	itoa@base+1,?_utoa+5
 23398  001E8E  EFBB  F015         	goto	_utoa	;wreg free
 23399  001E92                     __end_of_itoa:
 23400                           	opt stack 0
 23401                           tblptru	equ	0xFF8
 23402                           tblptrh	equ	0xFF7
 23403                           tblptrl	equ	0xFF6
 23404                           tablat	equ	0xFF5
 23405                           prodh	equ	0xFF4
 23406                           prodl	equ	0xFF3
 23407                           intcon	equ	0xFF2
 23408                           indf0	equ	0xFEF
 23409                           postinc0	equ	0xFEE
 23410                           fsr0h	equ	0xFEA
 23411                           fsr0l	equ	0xFE9
 23412                           wreg	equ	0xFE8
 23413                           indf1	equ	0xFE7
 23414                           postinc1	equ	0xFE6
 23415                           postdec1	equ	0xFE5
 23416                           fsr1h	equ	0xFE2
 23417                           fsr1l	equ	0xFE1
 23418                           indf2	equ	0xFDF
 23419                           postinc2	equ	0xFDE
 23420                           postdec2	equ	0xFDD
 23421                           plusw2	equ	0xFDB
 23422                           fsr2h	equ	0xFDA
 23423                           fsr2l	equ	0xFD9
 23424                           status	equ	0xFD8
 23425                           
 23426 ;; *************** function _utoa *****************
 23427 ;; Defined at:
 23428 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\itoa.c"
 23429 ;; Parameters:    Size  Location     Type
 23430 ;;  buf             2   31[COMRAM] PTR unsigned char 
 23431 ;;		 -> printFirmwareVersion@wrkbuf(20), printNodeFirmwareVersion@buf(3), printGUID@buf(3), wrkbuf(80), 
 23432 ;;  val             2   33[COMRAM] unsigned int 
 23433 ;;  base            2   35[COMRAM] int 
 23434 ;; Auto vars:     Size  Location     Type
 23435 ;;  v               2   37[COMRAM] unsigned int 
 23436 ;;  c               1   39[COMRAM] unsigned char 
 23437 ;; Return value:  Size  Location     Type
 23438 ;;                  2   31[COMRAM] PTR unsigned char 
 23439 ;; Registers used:
 23440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23441 ;; Tracked objects:
 23442 ;;		On entry : F/0
 23443 ;;		On exit  : 0/0
 23444 ;;		Unchanged: 0/0
 23445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23446 ;;      Params:         6       0       0       0       0       0       0
 23447 ;;      Locals:         3       0       0       0       0       0       0
 23448 ;;      Temps:          0       0       0       0       0       0       0
 23449 ;;      Totals:         9       0       0       0       0       0       0
 23450 ;;Total ram usage:        9 bytes
 23451 ;; Hardware stack levels used:    1
 23452 ;; Hardware stack levels required when called:    3
 23453 ;; This function calls:
 23454 ;;		___lwdiv
 23455 ;;		___lwmod
 23456 ;; This function is called by:
 23457 ;;		_itoa
 23458 ;; This function uses a non-reentrant model
 23459 ;;
 23460                           
 23461                           	psect	text63
 23462  002B76                     __ptext63:
 23463                           	opt stack 0
 23464  002B76                     _utoa:
 23465                           	opt stack 23
 23466                           
 23467                           ; BSR set to: 0
 23468                           
 23469                           ;incstack = 0
 23470                           ;incstack = 0
 23471  002B76  C022  F026         	movff	utoa@val,utoa@v
 23472  002B7A  C023  F027         	movff	utoa@val+1,utoa@v+1
 23473  002B7E                     l14858:
 23474  002B7E  C026  F019         	movff	utoa@v,?___lwdiv
 23475  002B82  C027  F01A         	movff	utoa@v+1,?___lwdiv+1
 23476  002B86  C024  F01B         	movff	utoa@base,?___lwdiv+2
 23477  002B8A  C025  F01C         	movff	utoa@base+1,?___lwdiv+3
 23478  002B8E  ECE2  F010         	call	___lwdiv	;wreg free
 23479  002B92  C019  F026         	movff	?___lwdiv,utoa@v
 23480  002B96  C01A  F027         	movff	?___lwdiv+1,utoa@v+1
 23481  002B9A  4A20               	infsnz	utoa@buf,f,c
 23482  002B9C  2A21               	incf	utoa@buf+1,f,c
 23483  002B9E  5027               	movf	utoa@v+1,w,c
 23484  002BA0  1026               	iorwf	utoa@v,w,c
 23485  002BA2  E1ED               	bnz	l14858
 23486  002BA4  C020  FFD9         	movff	utoa@buf,fsr2l
 23487  002BA8  C021  FFDA         	movff	utoa@buf+1,fsr2h
 23488  002BAC  0E00               	movlw	0
 23489  002BAE  6ADF               	clrf	indf2,c
 23490  002BB0  0620               	decf	utoa@buf,f,c
 23491  002BB2  A0D8               	btfss	status,0,c
 23492  002BB4  0621               	decf	utoa@buf+1,f,c
 23493  002BB6                     l14868:
 23494  002BB6  C022  F019         	movff	utoa@val,?___lwmod
 23495  002BBA  C023  F01A         	movff	utoa@val+1,?___lwmod+1
 23496  002BBE  C024  F01B         	movff	utoa@base,?___lwmod+2
 23497  002BC2  C025  F01C         	movff	utoa@base+1,?___lwmod+3
 23498  002BC6  ECBC  F00F         	call	___lwmod	;wreg free
 23499  002BCA  5019               	movf	?___lwmod,w,c
 23500  002BCC  6E28               	movwf	utoa@c,c
 23501  002BCE  C022  F019         	movff	utoa@val,?___lwdiv
 23502  002BD2  C023  F01A         	movff	utoa@val+1,?___lwdiv+1
 23503  002BD6  C024  F01B         	movff	utoa@base,?___lwdiv+2
 23504  002BDA  C025  F01C         	movff	utoa@base+1,?___lwdiv+3
 23505  002BDE  ECE2  F010         	call	___lwdiv	;wreg free
 23506  002BE2  C019  F022         	movff	?___lwdiv,utoa@val
 23507  002BE6  C01A  F023         	movff	?___lwdiv+1,utoa@val+1
 23508  002BEA  0E09               	movlw	9
 23509  002BEC  6428               	cpfsgt	utoa@c,c
 23510  002BEE  D002               	goto	l2210
 23511  002BF0  0E07               	movlw	7
 23512  002BF2  2628               	addwf	utoa@c,f,c
 23513  002BF4                     l2210:
 23514  002BF4  0E30               	movlw	48
 23515  002BF6  2628               	addwf	utoa@c,f,c
 23516  002BF8  C020  FFD9         	movff	utoa@buf,fsr2l
 23517  002BFC  C021  FFDA         	movff	utoa@buf+1,fsr2h
 23518  002C00  C028  FFDF         	movff	utoa@c,indf2
 23519  002C04  0620               	decf	utoa@buf,f,c
 23520  002C06  A0D8               	btfss	status,0,c
 23521  002C08  0621               	decf	utoa@buf+1,f,c
 23522  002C0A  5023               	movf	utoa@val+1,w,c
 23523  002C0C  1022               	iorwf	utoa@val,w,c
 23524  002C0E  E1D3               	bnz	l14868
 23525                           
 23526                           ;	Return value of _utoa is never used
 23527  002C10  4A20               	infsnz	utoa@buf,f,c
 23528  002C12  2A21               	incf	utoa@buf+1,f,c
 23529  002C14  0012               	return	
 23530  002C16                     __end_of_utoa:
 23531                           	opt stack 0
 23532                           tblptru	equ	0xFF8
 23533                           tblptrh	equ	0xFF7
 23534                           tblptrl	equ	0xFF6
 23535                           tablat	equ	0xFF5
 23536                           prodh	equ	0xFF4
 23537                           prodl	equ	0xFF3
 23538                           intcon	equ	0xFF2
 23539                           indf0	equ	0xFEF
 23540                           postinc0	equ	0xFEE
 23541                           fsr0h	equ	0xFEA
 23542                           fsr0l	equ	0xFE9
 23543                           wreg	equ	0xFE8
 23544                           indf1	equ	0xFE7
 23545                           postinc1	equ	0xFE6
 23546                           postdec1	equ	0xFE5
 23547                           fsr1h	equ	0xFE2
 23548                           fsr1l	equ	0xFE1
 23549                           indf2	equ	0xFDF
 23550                           postinc2	equ	0xFDE
 23551                           postdec2	equ	0xFDD
 23552                           plusw2	equ	0xFDB
 23553                           fsr2h	equ	0xFDA
 23554                           fsr2l	equ	0xFD9
 23555                           status	equ	0xFD8
 23556                           
 23557 ;; *************** function ___lwmod *****************
 23558 ;; Defined at:
 23559 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwmod.c"
 23560 ;; Parameters:    Size  Location     Type
 23561 ;;  dividend        2   24[COMRAM] unsigned int 
 23562 ;;  divisor         2   26[COMRAM] unsigned int 
 23563 ;; Auto vars:     Size  Location     Type
 23564 ;;  counter         1   28[COMRAM] unsigned char 
 23565 ;; Return value:  Size  Location     Type
 23566 ;;                  2   24[COMRAM] unsigned int 
 23567 ;; Registers used:
 23568 ;;		wreg, status,2, status,0
 23569 ;; Tracked objects:
 23570 ;;		On entry : 0/0
 23571 ;;		On exit  : 0/0
 23572 ;;		Unchanged: 0/0
 23573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23574 ;;      Params:         4       0       0       0       0       0       0
 23575 ;;      Locals:         1       0       0       0       0       0       0
 23576 ;;      Temps:          0       0       0       0       0       0       0
 23577 ;;      Totals:         5       0       0       0       0       0       0
 23578 ;;Total ram usage:        5 bytes
 23579 ;; Hardware stack levels used:    1
 23580 ;; Hardware stack levels required when called:    2
 23581 ;; This function calls:
 23582 ;;		Nothing
 23583 ;; This function is called by:
 23584 ;;		_utoa
 23585 ;; This function uses a non-reentrant model
 23586 ;;
 23587                           
 23588                           	psect	text64
 23589  001F78                     __ptext64:
 23590                           	opt stack 0
 23591  001F78                     ___lwmod:
 23592                           	opt stack 23
 23593                           
 23594                           ;incstack = 0
 23595                           ;incstack = 0
 23596  001F78  501C               	movf	___lwmod@divisor+1,w,c
 23597  001F7A  101B               	iorwf	___lwmod@divisor,w,c
 23598  001F7C  E017               	bz	l2334
 23599  001F7E  0E01               	movlw	1
 23600  001F80  6E1D               	movwf	___lwmod@counter,c
 23601  001F82  D004               	goto	l14914
 23602  001F84                     l14912:
 23603  001F84  90D8               	bcf	status,0,c
 23604  001F86  361B               	rlcf	___lwmod@divisor,f,c
 23605  001F88  361C               	rlcf	___lwmod@divisor+1,f,c
 23606  001F8A  2A1D               	incf	___lwmod@counter,f,c
 23607  001F8C                     l14914:
 23608  001F8C  AE1C               	btfss	___lwmod@divisor+1,7,c
 23609  001F8E  D7FA               	goto	l14912
 23610  001F90                     l14916:
 23611  001F90  501B               	movf	___lwmod@divisor,w,c
 23612  001F92  5C19               	subwf	___lwmod@dividend,w,c
 23613  001F94  501C               	movf	___lwmod@divisor+1,w,c
 23614  001F96  581A               	subwfb	___lwmod@dividend+1,w,c
 23615  001F98  E304               	bnc	l14920
 23616  001F9A  501B               	movf	___lwmod@divisor,w,c
 23617  001F9C  5E19               	subwf	___lwmod@dividend,f,c
 23618  001F9E  501C               	movf	___lwmod@divisor+1,w,c
 23619  001FA0  5A1A               	subwfb	___lwmod@dividend+1,f,c
 23620  001FA2                     l14920:
 23621  001FA2  90D8               	bcf	status,0,c
 23622  001FA4  321C               	rrcf	___lwmod@divisor+1,f,c
 23623  001FA6  321B               	rrcf	___lwmod@divisor,f,c
 23624  001FA8  2E1D               	decfsz	___lwmod@counter,f,c
 23625  001FAA  D7F2               	goto	l14916
 23626  001FAC                     l2334:
 23627  001FAC  C019  F019         	movff	___lwmod@dividend,?___lwmod
 23628  001FB0  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
 23629  001FB4  0012               	return	
 23630  001FB6                     __end_of___lwmod:
 23631                           	opt stack 0
 23632                           tblptru	equ	0xFF8
 23633                           tblptrh	equ	0xFF7
 23634                           tblptrl	equ	0xFF6
 23635                           tablat	equ	0xFF5
 23636                           prodh	equ	0xFF4
 23637                           prodl	equ	0xFF3
 23638                           intcon	equ	0xFF2
 23639                           indf0	equ	0xFEF
 23640                           postinc0	equ	0xFEE
 23641                           fsr0h	equ	0xFEA
 23642                           fsr0l	equ	0xFE9
 23643                           wreg	equ	0xFE8
 23644                           indf1	equ	0xFE7
 23645                           postinc1	equ	0xFE6
 23646                           postdec1	equ	0xFE5
 23647                           fsr1h	equ	0xFE2
 23648                           fsr1l	equ	0xFE1
 23649                           indf2	equ	0xFDF
 23650                           postinc2	equ	0xFDE
 23651                           postdec2	equ	0xFDD
 23652                           plusw2	equ	0xFDB
 23653                           fsr2h	equ	0xFDA
 23654                           fsr2l	equ	0xFD9
 23655                           status	equ	0xFD8
 23656                           
 23657 ;; *************** function ___lwdiv *****************
 23658 ;; Defined at:
 23659 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\lwdiv.c"
 23660 ;; Parameters:    Size  Location     Type
 23661 ;;  dividend        2   24[COMRAM] unsigned int 
 23662 ;;  divisor         2   26[COMRAM] unsigned int 
 23663 ;; Auto vars:     Size  Location     Type
 23664 ;;  quotient        2   29[COMRAM] unsigned int 
 23665 ;;  counter         1   28[COMRAM] unsigned char 
 23666 ;; Return value:  Size  Location     Type
 23667 ;;                  2   24[COMRAM] unsigned int 
 23668 ;; Registers used:
 23669 ;;		wreg, status,2, status,0
 23670 ;; Tracked objects:
 23671 ;;		On entry : 0/0
 23672 ;;		On exit  : 0/0
 23673 ;;		Unchanged: 0/0
 23674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23675 ;;      Params:         4       0       0       0       0       0       0
 23676 ;;      Locals:         3       0       0       0       0       0       0
 23677 ;;      Temps:          0       0       0       0       0       0       0
 23678 ;;      Totals:         7       0       0       0       0       0       0
 23679 ;;Total ram usage:        7 bytes
 23680 ;; Hardware stack levels used:    1
 23681 ;; Hardware stack levels required when called:    2
 23682 ;; This function calls:
 23683 ;;		Nothing
 23684 ;; This function is called by:
 23685 ;;		_utoa
 23686 ;; This function uses a non-reentrant model
 23687 ;;
 23688                           
 23689                           	psect	text65
 23690  0021C4                     __ptext65:
 23691                           	opt stack 0
 23692  0021C4                     ___lwdiv:
 23693                           	opt stack 23
 23694                           
 23695                           ;incstack = 0
 23696                           ;incstack = 0
 23697  0021C4  6A1E               	clrf	___lwdiv@quotient,c
 23698  0021C6  6A1F               	clrf	___lwdiv@quotient+1,c
 23699  0021C8  501C               	movf	___lwdiv@divisor+1,w,c
 23700  0021CA  101B               	iorwf	___lwdiv@divisor,w,c
 23701  0021CC  E01B               	bz	l2324
 23702  0021CE  0E01               	movlw	1
 23703  0021D0  6E1D               	movwf	___lwdiv@counter,c
 23704  0021D2  D004               	goto	l14894
 23705  0021D4                     l14892:
 23706  0021D4  90D8               	bcf	status,0,c
 23707  0021D6  361B               	rlcf	___lwdiv@divisor,f,c
 23708  0021D8  361C               	rlcf	___lwdiv@divisor+1,f,c
 23709  0021DA  2A1D               	incf	___lwdiv@counter,f,c
 23710  0021DC                     l14894:
 23711  0021DC  AE1C               	btfss	___lwdiv@divisor+1,7,c
 23712  0021DE  D7FA               	goto	l14892
 23713  0021E0                     l14896:
 23714  0021E0  90D8               	bcf	status,0,c
 23715  0021E2  361E               	rlcf	___lwdiv@quotient,f,c
 23716  0021E4  361F               	rlcf	___lwdiv@quotient+1,f,c
 23717  0021E6  501B               	movf	___lwdiv@divisor,w,c
 23718  0021E8  5C19               	subwf	___lwdiv@dividend,w,c
 23719  0021EA  501C               	movf	___lwdiv@divisor+1,w,c
 23720  0021EC  581A               	subwfb	___lwdiv@dividend+1,w,c
 23721  0021EE  E305               	bnc	l14904
 23722  0021F0  501B               	movf	___lwdiv@divisor,w,c
 23723  0021F2  5E19               	subwf	___lwdiv@dividend,f,c
 23724  0021F4  501C               	movf	___lwdiv@divisor+1,w,c
 23725  0021F6  5A1A               	subwfb	___lwdiv@dividend+1,f,c
 23726  0021F8  801E               	bsf	___lwdiv@quotient,0,c
 23727  0021FA                     l14904:
 23728  0021FA  90D8               	bcf	status,0,c
 23729  0021FC  321C               	rrcf	___lwdiv@divisor+1,f,c
 23730  0021FE  321B               	rrcf	___lwdiv@divisor,f,c
 23731  002200  2E1D               	decfsz	___lwdiv@counter,f,c
 23732  002202  D7EE               	goto	l14896
 23733  002204                     l2324:
 23734  002204  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
 23735  002208  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
 23736  00220C  0012               	return	
 23737  00220E                     __end_of___lwdiv:
 23738                           	opt stack 0
 23739                           tblptru	equ	0xFF8
 23740                           tblptrh	equ	0xFF7
 23741                           tblptrl	equ	0xFF6
 23742                           tablat	equ	0xFF5
 23743                           prodh	equ	0xFF4
 23744                           prodl	equ	0xFF3
 23745                           intcon	equ	0xFF2
 23746                           indf0	equ	0xFEF
 23747                           postinc0	equ	0xFEE
 23748                           fsr0h	equ	0xFEA
 23749                           fsr0l	equ	0xFE9
 23750                           wreg	equ	0xFE8
 23751                           indf1	equ	0xFE7
 23752                           postinc1	equ	0xFE6
 23753                           postdec1	equ	0xFE5
 23754                           fsr1h	equ	0xFE2
 23755                           fsr1l	equ	0xFE1
 23756                           indf2	equ	0xFDF
 23757                           postinc2	equ	0xFDE
 23758                           postdec2	equ	0xFDD
 23759                           plusw2	equ	0xFDB
 23760                           fsr2h	equ	0xFDA
 23761                           fsr2l	equ	0xFD9
 23762                           status	equ	0xFD8
 23763                           
 23764 ;; *************** function _printMode *****************
 23765 ;; Defined at:
 23766 ;;		line 2373 in file "main.c"
 23767 ;; Parameters:    Size  Location     Type
 23768 ;;		None
 23769 ;; Auto vars:     Size  Location     Type
 23770 ;;		None
 23771 ;; Return value:  Size  Location     Type
 23772 ;;		None               void
 23773 ;; Registers used:
 23774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23775 ;; Tracked objects:
 23776 ;;		On entry : 0/0
 23777 ;;		On exit  : 0/0
 23778 ;;		Unchanged: 0/0
 23779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23780 ;;      Params:         0       0       0       0       0       0       0
 23781 ;;      Locals:         0       0       0       0       0       0       0
 23782 ;;      Temps:          0       0       0       0       0       0       0
 23783 ;;      Totals:         0       0       0       0       0       0       0
 23784 ;;Total ram usage:        0 bytes
 23785 ;; Hardware stack levels used:    1
 23786 ;; Hardware stack levels required when called:    4
 23787 ;; This function calls:
 23788 ;;		_putsUSART
 23789 ;; This function is called by:
 23790 ;;		_main
 23791 ;; This function uses a non-reentrant model
 23792 ;;
 23793                           
 23794                           	psect	text66
 23795  0025C0                     __ptext66:
 23796                           	opt stack 0
 23797  0025C0                     _printMode:
 23798                           	opt stack 25
 23799                           
 23800                           ;main.c: 2374: putsUSART((char *) "Mode: ");
 23801                           
 23802                           ;incstack = 0
 23803                           ;incstack = 0
 23804  0025C0  0E7C               	movlw	high STR_247
 23805  0025C2  6E1B               	movwf	?_putsUSART+1,c
 23806  0025C4  0E26               	movlw	low STR_247
 23807  0025C6  6E1A               	movwf	?_putsUSART,c
 23808  0025C8  EC2E  F011         	call	_putsUSART	;wreg free
 23809                           
 23810                           ;main.c: 2375: if (0 == mode) {
 23811  0025CC  0100               	movlb	0	; () banked
 23812  0025CE  67D7               	tstfsz	_mode& (0+255),b
 23813  0025D0  D007               	goto	l12658
 23814                           
 23815                           ; BSR set to: 0
 23816                           ;main.c: 2376: putsUSART((char *) "Verbose");
 23817  0025D2  0E7C               	movlw	high STR_248
 23818  0025D4  6E1B               	movwf	?_putsUSART+1,c
 23819  0025D6  0E1E               	movlw	low STR_248
 23820  0025D8  6E1A               	movwf	?_putsUSART,c
 23821  0025DA  EC2E  F011         	call	_putsUSART	;wreg free
 23822                           
 23823                           ;main.c: 2377: } else if (1 == mode) {
 23824  0025DE  D023               	goto	l1127
 23825  0025E0                     l12658:
 23826                           
 23827                           ; BSR set to: 0
 23828  0025E0  05D7               	decf	_mode& (0+255),w,b
 23829  0025E2  E107               	bnz	l12662
 23830                           
 23831                           ; BSR set to: 0
 23832                           ;main.c: 2378: putsUSART((char *) "VSCP Driver");
 23833  0025E4  0E7B               	movlw	high STR_249
 23834  0025E6  6E1B               	movwf	?_putsUSART+1,c
 23835  0025E8  0E7B               	movlw	low STR_249
 23836  0025EA  6E1A               	movwf	?_putsUSART,c
 23837  0025EC  EC2E  F011         	call	_putsUSART	;wreg free
 23838                           
 23839                           ;main.c: 2379: } else if (2 == mode) {
 23840  0025F0  D01A               	goto	l1127
 23841  0025F2                     l12662:
 23842                           
 23843                           ; BSR set to: 0
 23844  0025F2  51D7               	movf	_mode& (0+255),w,b
 23845  0025F4  0A02               	xorlw	2
 23846  0025F6  E107               	bnz	l12666
 23847                           
 23848                           ; BSR set to: 0
 23849                           ;main.c: 2380: putsUSART((char *) "SL Driver");
 23850  0025F8  0E7B               	movlw	high STR_250
 23851  0025FA  6E1B               	movwf	?_putsUSART+1,c
 23852  0025FC  0EB1               	movlw	low STR_250
 23853  0025FE  6E1A               	movwf	?_putsUSART,c
 23854  002600  EC2E  F011         	call	_putsUSART	;wreg free
 23855                           
 23856                           ;main.c: 2381: } else if (3 == mode) {
 23857  002604  D010               	goto	l1127
 23858  002606                     l12666:
 23859                           
 23860                           ; BSR set to: 0
 23861  002606  51D7               	movf	_mode& (0+255),w,b
 23862  002608  0A03               	xorlw	3
 23863  00260A  E107               	bnz	l12670
 23864                           
 23865                           ; BSR set to: 0
 23866                           ;main.c: 2382: putsUSART((char *) "VSCP Node");
 23867  00260C  0E7B               	movlw	high STR_251
 23868  00260E  6E1B               	movwf	?_putsUSART+1,c
 23869  002610  0EA7               	movlw	low STR_251
 23870  002612  6E1A               	movwf	?_putsUSART,c
 23871  002614  EC2E  F011         	call	_putsUSART	;wreg free
 23872                           
 23873                           ;main.c: 2383: } else {
 23874  002618  D006               	goto	l1127
 23875  00261A                     l12670:
 23876                           
 23877                           ; BSR set to: 0
 23878                           ;main.c: 2384: putsUSART((char *) "Unknown (Verbose used)");
 23879  00261A  0E79               	movlw	high STR_252
 23880  00261C  6E1B               	movwf	?_putsUSART+1,c
 23881  00261E  0EEF               	movlw	low STR_252
 23882  002620  6E1A               	movwf	?_putsUSART,c
 23883  002622  EC2E  F011         	call	_putsUSART	;wreg free
 23884  002626                     l1127:
 23885                           
 23886                           ;main.c: 2385: }
 23887                           ;main.c: 2386: putsUSART((char *) "\r\n");
 23888  002626  0E71               	movlw	high (STR_188+50)
 23889  002628  6E1B               	movwf	?_putsUSART+1,c
 23890  00262A  0EAE               	movlw	low (STR_188+50)
 23891  00262C  6E1A               	movwf	?_putsUSART,c
 23892  00262E  EF2E  F011         	goto	_putsUSART	;wreg free
 23893  002632                     __end_of_printMode:
 23894                           	opt stack 0
 23895                           tblptru	equ	0xFF8
 23896                           tblptrh	equ	0xFF7
 23897                           tblptrl	equ	0xFF6
 23898                           tablat	equ	0xFF5
 23899                           prodh	equ	0xFF4
 23900                           prodl	equ	0xFF3
 23901                           intcon	equ	0xFF2
 23902                           indf0	equ	0xFEF
 23903                           postinc0	equ	0xFEE
 23904                           fsr0h	equ	0xFEA
 23905                           fsr0l	equ	0xFE9
 23906                           wreg	equ	0xFE8
 23907                           indf1	equ	0xFE7
 23908                           postinc1	equ	0xFE6
 23909                           postdec1	equ	0xFE5
 23910                           fsr1h	equ	0xFE2
 23911                           fsr1l	equ	0xFE1
 23912                           indf2	equ	0xFDF
 23913                           postinc2	equ	0xFDE
 23914                           postdec2	equ	0xFDD
 23915                           plusw2	equ	0xFDB
 23916                           fsr2h	equ	0xFDA
 23917                           fsr2l	equ	0xFD9
 23918                           status	equ	0xFD8
 23919                           
 23920 ;; *************** function _putsUSART *****************
 23921 ;; Defined at:
 23922 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uputs.c"
 23923 ;; Parameters:    Size  Location     Type
 23924 ;;  data            2   25[COMRAM] PTR unsigned char 
 23925 ;;		 -> STR_253(3), STR_252(23), STR_251(10), STR_250(10), 
 23926 ;;		 -> STR_249(12), STR_248(8), STR_247(7), STR_246(3), 
 23927 ;;		 -> printFirmwareVersion@wrkbuf(20), STR_245(10), STR_244(3), STR_241(20), 
 23928 ;;		 -> STR_240(3), STR_239(14), STR_238(3), STR_234(8), 
 23929 ;;		 -> STR_233(15), STR_232(67), STR_231(3), STR_230(27), 
 23930 ;;		 -> STR_229(67), STR_228(39), STR_227(62), STR_226(55), 
 23931 ;;		 -> STR_225(49), STR_224(67), STR_223(47), STR_222(47), 
 23932 ;;		 -> STR_221(34), STR_220(71), STR_219(20), STR_218(78), 
 23933 ;;		 -> STR_217(24), STR_216(77), STR_215(67), STR_214(69), 
 23934 ;;		 -> STR_213(47), STR_212(40), STR_211(39), STR_210(33), 
 23935 ;;		 -> STR_209(23), STR_208(56), STR_207(24), STR_206(44), 
 23936 ;;		 -> STR_205(50), STR_204(31), STR_203(50), STR_202(51), 
 23937 ;;		 -> STR_201(46), STR_200(44), STR_199(27), STR_198(39), 
 23938 ;;		 -> STR_197(39), STR_196(52), STR_195(54), STR_194(55), 
 23939 ;;		 -> STR_193(3), STR_190(24), STR_189(57), STR_188(53), 
 23940 ;;		 -> STR_187(58), STR_186(3), STR_183(25), STR_182(3), 
 23941 ;;		 -> STR_179(24), STR_178(3), STR_175(24), STR_174(3), 
 23942 ;;		 -> STR_171(24), STR_170(3), STR_167(23), STR_166(3), 
 23943 ;;		 -> STR_163(21), STR_162(3), STR_159(22), STR_158(3), 
 23944 ;;		 -> STR_155(17), STR_154(3), STR_151(18), STR_150(4), 
 23945 ;;		 -> STR_149(11), STR_148(2), STR_145(7), STR_142(7), 
 23946 ;;		 -> STR_139(9), STR_136(7), STR_133(8), STR_130(7), 
 23947 ;;		 -> STR_129(2), STR_128(2), STR_127(6), STR_126(8), 
 23948 ;;		 -> STR_125(8), STR_124(20), STR_123(27), STR_122(33), 
 23949 ;;		 -> STR_119(26), STR_117(32), STR_115(28), STR_110(40), 
 23950 ;;		 -> STR_108(44), STR_105(39), STR_103(36), STR_101(37), 
 23951 ;;		 -> STR_99(40), STR_97(37), STR_96(50), STR_93(41), 
 23952 ;;		 -> STR_91(38), STR_89(39), STR_87(42), STR_85(39), 
 23953 ;;		 -> STR_84(66), STR_81(3), STR_78(20), STR_76(33), 
 23954 ;;		 -> STR_75(35), STR_74(24), STR_72(33), STR_70(24), 
 23955 ;;		 -> STR_67(54), STR_66(6), STR_65(3), STR_60(34), 
 23956 ;;		 -> STR_59(3), STR_56(4), wrkbuf(80), STR_51(15), 
 23957 ;;		 -> STR_49(33), STR_47(24), STR_43(6), STR_39(18), 
 23958 ;;		 -> STR_38(6), STR_36(33), STR_35(6), STR_27(24), 
 23959 ;;		 -> STR_26(18), STR_25(20), STR_24(25), STR_23(22), 
 23960 ;;		 -> STR_22(19), STR_21(20), STR_20(20), STR_18(6), 
 23961 ;;		 -> STR_16(6), STR_14(6), STR_12(6), STR_10(6), 
 23962 ;;		 -> STR_8(6), STR_6(31), STR_4(29), STR_3(55), 
 23963 ;;		 -> STR_2(53), STR_1(37), 
 23964 ;; Auto vars:     Size  Location     Type
 23965 ;;		None
 23966 ;; Return value:  Size  Location     Type
 23967 ;;		None               void
 23968 ;; Registers used:
 23969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23970 ;; Tracked objects:
 23971 ;;		On entry : 0/0
 23972 ;;		On exit  : 0/0
 23973 ;;		Unchanged: 0/0
 23974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23975 ;;      Params:         2       0       0       0       0       0       0
 23976 ;;      Locals:         0       0       0       0       0       0       0
 23977 ;;      Temps:          2       0       0       0       0       0       0
 23978 ;;      Totals:         4       0       0       0       0       0       0
 23979 ;;Total ram usage:        4 bytes
 23980 ;; Hardware stack levels used:    1
 23981 ;; Hardware stack levels required when called:    3
 23982 ;; This function calls:
 23983 ;;		_WriteUSART
 23984 ;; This function is called by:
 23985 ;;		_main
 23986 ;;		_doModeVerbose
 23987 ;;		_doModeSLCAN
 23988 ;;		_receivePrintEventVerbose
 23989 ;;		_receivePrintEventSLCAN
 23990 ;;		_printStatistics
 23991 ;;		_printErrors
 23992 ;;		_printHelp
 23993 ;;		_findNodes
 23994 ;;		_printGUID
 23995 ;;		_printMDF
 23996 ;;		_printNodeFirmwareVersion
 23997 ;;		_printFirmwareVersion
 23998 ;;		_printMode
 23999 ;; This function uses a non-reentrant model
 24000 ;;
 24001                           
 24002                           	psect	text67
 24003  00225C                     __ptext67:
 24004                           	opt stack 0
 24005  00225C                     _putsUSART:
 24006                           	opt stack 24
 24007  00225C                     l1726:
 24008  00225C  A2AC               	btfss	4012,1,c	;volatile
 24009  00225E  D7FE               	goto	l1726
 24010  002260  501A               	movf	putsUSART@data,w,c
 24011  002262  6EF6               	movwf	tblptrl,c
 24012  002264  6EE9               	movwf	fsr0l,c
 24013  002266  0E05               	movlw	(high __ramtop+-1)
 24014  002268  6EEA               	movwf	fsr0h,c
 24015  00226A  501B               	movf	putsUSART@data+1,w,c
 24016  00226C  64EA               	cpfsgt	fsr0h,c
 24017  00226E  D003               	bra	u16547
 24018  002270  6EEA               	movwf	fsr0h,c
 24019  002272  50EF               	movf	indf0,w,c
 24020  002274  D003               	bra	u16540
 24021  002276                     u16547:
 24022  002276  6EF7               	movwf	tblptrh,c
 24023  002278  0008               	tblrd		*
 24024  00227A  50F5               	movf	tablat,w,c
 24025  00227C                     u16540:
 24026  00227C  EC6E  F00E         	call	_WriteUSART
 24027  002280  501A               	movf	putsUSART@data,w,c
 24028  002282  6E1C               	movwf	??_putsUSART& (0+255),c
 24029  002284  501B               	movf	putsUSART@data+1,w,c
 24030  002286  6E1D               	movwf	(??_putsUSART+1)& (0+255),c
 24031  002288  4A1A               	infsnz	putsUSART@data,f,c
 24032  00228A  2A1B               	incf	putsUSART@data+1,f,c
 24033  00228C  501C               	movf	??_putsUSART,w,c
 24034  00228E  6EF6               	movwf	tblptrl,c
 24035  002290  6EE9               	movwf	fsr0l,c
 24036  002292  0E05               	movlw	(high __ramtop+-1)
 24037  002294  6EEA               	movwf	fsr0h,c
 24038  002296  501D               	movf	??_putsUSART+1,w,c
 24039  002298  64EA               	cpfsgt	fsr0h,c
 24040  00229A  D003               	bra	u16557
 24041  00229C  6EEA               	movwf	fsr0h,c
 24042  00229E  50EF               	movf	indf0,w,c
 24043  0022A0  D003               	bra	u16550
 24044  0022A2                     u16557:
 24045  0022A2  6EF7               	movwf	tblptrh,c
 24046  0022A4  0008               	tblrd		*
 24047  0022A6  50F5               	movf	tablat,w,c
 24048  0022A8                     u16550:
 24049  0022A8  0900               	iorlw	0
 24050  0022AA  B4D8               	btfsc	status,2,c
 24051  0022AC  0012               	return	
 24052  0022AE  D7D6               	goto	l1726
 24053  0022B0                     __end_of_putsUSART:
 24054                           	opt stack 0
 24055                           tblptru	equ	0xFF8
 24056                           tblptrh	equ	0xFF7
 24057                           tblptrl	equ	0xFF6
 24058                           tablat	equ	0xFF5
 24059                           prodh	equ	0xFF4
 24060                           prodl	equ	0xFF3
 24061                           intcon	equ	0xFF2
 24062                           indf0	equ	0xFEF
 24063                           postinc0	equ	0xFEE
 24064                           fsr0h	equ	0xFEA
 24065                           fsr0l	equ	0xFE9
 24066                           wreg	equ	0xFE8
 24067                           indf1	equ	0xFE7
 24068                           postinc1	equ	0xFE6
 24069                           postdec1	equ	0xFE5
 24070                           fsr1h	equ	0xFE2
 24071                           fsr1l	equ	0xFE1
 24072                           indf2	equ	0xFDF
 24073                           postinc2	equ	0xFDE
 24074                           postdec2	equ	0xFDD
 24075                           plusw2	equ	0xFDB
 24076                           fsr2h	equ	0xFDA
 24077                           fsr2l	equ	0xFD9
 24078                           status	equ	0xFD8
 24079                           
 24080 ;; *************** function _WriteUSART *****************
 24081 ;; Defined at:
 24082 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
 24083 ;; Parameters:    Size  Location     Type
 24084 ;;  data            1    wreg     unsigned char 
 24085 ;; Auto vars:     Size  Location     Type
 24086 ;;  data            1   24[COMRAM] unsigned char 
 24087 ;; Return value:  Size  Location     Type
 24088 ;;		None               void
 24089 ;; Registers used:
 24090 ;;		wreg
 24091 ;; Tracked objects:
 24092 ;;		On entry : 0/1
 24093 ;;		On exit  : 0/0
 24094 ;;		Unchanged: 0/0
 24095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24096 ;;      Params:         0       0       0       0       0       0       0
 24097 ;;      Locals:         1       0       0       0       0       0       0
 24098 ;;      Temps:          0       0       0       0       0       0       0
 24099 ;;      Totals:         1       0       0       0       0       0       0
 24100 ;;Total ram usage:        1 bytes
 24101 ;; Hardware stack levels used:    1
 24102 ;; Hardware stack levels required when called:    2
 24103 ;; This function calls:
 24104 ;;		Nothing
 24105 ;; This function is called by:
 24106 ;;		_doModeVerbose
 24107 ;;		_sendEscapedUartData
 24108 ;;		_sendVSCPDriverErrorFrame
 24109 ;;		_sendVSCPDriverAck
 24110 ;;		_sendVSCPDriverNack
 24111 ;;		_sendVSCPDriverCommandReply
 24112 ;;		_receivePrintEventCANAL
 24113 ;;		_receivePrintEventSLCAN
 24114 ;;		_printBinary
 24115 ;;		_printFirmwareVersion
 24116 ;;		_putsUSART
 24117 ;; This function uses a non-reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text68
 24121  001CDC                     __ptext68:
 24122                           	opt stack 0
 24123  001CDC                     _WriteUSART:
 24124                           	opt stack 25
 24125                           
 24126                           ;incstack = 0
 24127                           ;incstack = 0
 24128                           ;WriteUSART@data stored from wreg
 24129  001CDC  CFE8 F019          	movff	wreg,WriteUSART@data
 24130  001CE0  ACAC               	btfss	4012,6,c	;volatile
 24131  001CE2  D003               	goto	l14026
 24132  001CE4  90AC               	bcf	4012,0,c	;volatile
 24133  001CE6  B234               	btfsc	_USART_Status,1,c
 24134  001CE8  80AC               	bsf	4012,0,c	;volatile
 24135  001CEA                     l14026:
 24136  001CEA  C019  FFAD         	movff	WriteUSART@data,4013	;volatile
 24137  001CEE  0012               	return	
 24138  001CF0                     __end_of_WriteUSART:
 24139                           	opt stack 0
 24140                           tblptru	equ	0xFF8
 24141                           tblptrh	equ	0xFF7
 24142                           tblptrl	equ	0xFF6
 24143                           tablat	equ	0xFF5
 24144                           prodh	equ	0xFF4
 24145                           prodl	equ	0xFF3
 24146                           intcon	equ	0xFF2
 24147                           indf0	equ	0xFEF
 24148                           postinc0	equ	0xFEE
 24149                           fsr0h	equ	0xFEA
 24150                           fsr0l	equ	0xFE9
 24151                           wreg	equ	0xFE8
 24152                           indf1	equ	0xFE7
 24153                           postinc1	equ	0xFE6
 24154                           postdec1	equ	0xFE5
 24155                           fsr1h	equ	0xFE2
 24156                           fsr1l	equ	0xFE1
 24157                           indf2	equ	0xFDF
 24158                           postinc2	equ	0xFDE
 24159                           postdec2	equ	0xFDD
 24160                           plusw2	equ	0xFDB
 24161                           fsr2h	equ	0xFDA
 24162                           fsr2l	equ	0xFD9
 24163                           status	equ	0xFD8
 24164                           
 24165 ;; *************** function _init *****************
 24166 ;; Defined at:
 24167 ;;		line 300 in file "main.c"
 24168 ;; Parameters:    Size  Location     Type
 24169 ;;		None
 24170 ;; Auto vars:     Size  Location     Type
 24171 ;;		None
 24172 ;; Return value:  Size  Location     Type
 24173 ;;		None               void
 24174 ;; Registers used:
 24175 ;;		wreg, status,2, status,0, cstack
 24176 ;; Tracked objects:
 24177 ;;		On entry : 0/0
 24178 ;;		On exit  : 0/0
 24179 ;;		Unchanged: 0/0
 24180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24181 ;;      Params:         0       0       0       0       0       0       0
 24182 ;;      Locals:         0       0       0       0       0       0       0
 24183 ;;      Temps:          0       0       0       0       0       0       0
 24184 ;;      Totals:         0       0       0       0       0       0       0
 24185 ;;Total ram usage:        0 bytes
 24186 ;; Hardware stack levels used:    1
 24187 ;; Hardware stack levels required when called:    4
 24188 ;; This function calls:
 24189 ;;		_WriteTimer0
 24190 ;;		_init_app_ram
 24191 ;;		_OpenUSART
 24192 ;;		_OpenTimer0
 24193 ;;		_ECANInitialize
 24194 ;; This function is called by:
 24195 ;;		_main
 24196 ;; This function uses a non-reentrant model
 24197 ;;
 24198                           
 24199                           	psect	text69
 24200  0020B2                     __ptext69:
 24201                           	opt stack 0
 24202  0020B2                     _init:
 24203                           	opt stack 25
 24204                           
 24205                           ;main.c: 303: init_app_ram();
 24206                           
 24207                           ;incstack = 0
 24208                           ;incstack = 0
 24209  0020B2  EC07  F011         	call	_init_app_ram	;wreg free
 24210                           
 24211                           ; BSR set to: 0
 24212                           ;main.c: 306: OSCCONbits.IRCF0 = 1;
 24213  0020B6  88D3               	bsf	4051,4,c	;volatile
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;main.c: 307: OSCCONbits.IRCF1 = 1;
 24217  0020B8  8AD3               	bsf	4051,5,c	;volatile
 24218                           
 24219                           ; BSR set to: 0
 24220                           ;main.c: 308: OSCCONbits.IRCF2 = 1;
 24221  0020BA  8CD3               	bsf	4051,6,c	;volatile
 24222                           
 24223                           ; BSR set to: 0
 24224                           ;main.c: 309: OSCTUNEbits.PLLEN = 1;
 24225  0020BC  8C9B               	bsf	3995,6,c	;volatile
 24226                           
 24227                           ; BSR set to: 0
 24228                           ;main.c: 311: TRISBbits.RB2 = 0;
 24229  0020BE  9493               	bcf	3987,2,c	;volatile
 24230                           
 24231                           ; BSR set to: 0
 24232                           ;main.c: 312: TRISBbits.RB3 = 1;
 24233  0020C0  8693               	bsf	3987,3,c	;volatile
 24234                           
 24235                           ; BSR set to: 0
 24236                           ;main.c: 314: TRISCbits.RC1 = 0;
 24237  0020C2  9294               	bcf	3988,1,c	;volatile
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;main.c: 315: TRISCbits.RC6 = 0;
 24241  0020C4  9C94               	bcf	3988,6,c	;volatile
 24242                           
 24243                           ; BSR set to: 0
 24244                           ;main.c: 316: TRISCbits.RC7 = 1;
 24245  0020C6  8E94               	bsf	3988,7,c	;volatile
 24246                           
 24247                           ;main.c: 320: OpenUSART(0b01111111 &
 24248                           ;main.c: 321: 0b11111111 &
 24249                           ;main.c: 322: 0b11111110 &
 24250                           ;main.c: 323: 0b11111101 &
 24251                           ;main.c: 324: 0b11111111,
 24252                           ;main.c: 325: 21);
 24253  0020C8  6A1A               	clrf	?_OpenUSART+1,c
 24254  0020CA  0E15               	movlw	21
 24255  0020CC  6E19               	movwf	?_OpenUSART,c
 24256  0020CE  0E7C               	movlw	124
 24257  0020D0  EC83  F011         	call	_OpenUSART
 24258                           
 24259                           ; BSR set to: 0
 24260                           ;main.c: 327: RCIF = 0;
 24261  0020D4  9A9E               	bcf	3998,5,c	;volatile
 24262                           
 24263                           ; BSR set to: 0
 24264                           ;main.c: 328: RCIP = 0;
 24265  0020D6  9A9F               	bcf	3999,5,c	;volatile
 24266                           
 24267                           ; BSR set to: 0
 24268                           ;main.c: 329: RCIE = 1;
 24269  0020D8  8A9D               	bsf	3997,5,c	;volatile
 24270                           
 24271                           ; BSR set to: 0
 24272                           ;main.c: 330: PEIE = 1;
 24273  0020DA  8CF2               	bsf	intcon,6,c	;volatile
 24274                           
 24275                           ; BSR set to: 0
 24276                           ;main.c: 333: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110010);
 24277  0020DC  0E92               	movlw	146
 24278  0020DE  EC9E  F00E         	call	_OpenTimer0
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;main.c: 334: WriteTimer0(0xfb1d);
 24282  0020E2  0EFB               	movlw	251
 24283  0020E4  6E1A               	movwf	?_WriteTimer0+1,c
 24284  0020E6  0E1D               	movlw	29
 24285  0020E8  6E19               	movwf	?_WriteTimer0,c
 24286  0020EA  EC65  F00E         	call	_WriteTimer0	;wreg free
 24287                           
 24288                           ;main.c: 337: ECANInitialize();
 24289  0020EE  ECCB  F013         	call	_ECANInitialize	;wreg free
 24290                           
 24291                           ;main.c: 360: (INTCONbits.GIE = 1);
 24292  0020F2  8EF2               	bsf	intcon,7,c	;volatile
 24293  0020F4  0012               	return	
 24294  0020F6                     __end_of_init:
 24295                           	opt stack 0
 24296                           tblptru	equ	0xFF8
 24297                           tblptrh	equ	0xFF7
 24298                           tblptrl	equ	0xFF6
 24299                           tablat	equ	0xFF5
 24300                           prodh	equ	0xFF4
 24301                           prodl	equ	0xFF3
 24302                           intcon	equ	0xFF2
 24303                           indf0	equ	0xFEF
 24304                           postinc0	equ	0xFEE
 24305                           fsr0h	equ	0xFEA
 24306                           fsr0l	equ	0xFE9
 24307                           wreg	equ	0xFE8
 24308                           indf1	equ	0xFE7
 24309                           postinc1	equ	0xFE6
 24310                           postdec1	equ	0xFE5
 24311                           fsr1h	equ	0xFE2
 24312                           fsr1l	equ	0xFE1
 24313                           indf2	equ	0xFDF
 24314                           postinc2	equ	0xFDE
 24315                           postdec2	equ	0xFDD
 24316                           plusw2	equ	0xFDB
 24317                           fsr2h	equ	0xFDA
 24318                           fsr2l	equ	0xFD9
 24319                           status	equ	0xFD8
 24320                           
 24321 ;; *************** function _ECANInitialize *****************
 24322 ;; Defined at:
 24323 ;;		line 168 in file "ECAN.c"
 24324 ;; Parameters:    Size  Location     Type
 24325 ;;		None
 24326 ;; Auto vars:     Size  Location     Type
 24327 ;;		None
 24328 ;; Return value:  Size  Location     Type
 24329 ;;		None               void
 24330 ;; Registers used:
 24331 ;;		wreg, status,2, status,0, cstack
 24332 ;; Tracked objects:
 24333 ;;		On entry : F/0
 24334 ;;		On exit  : 0/0
 24335 ;;		Unchanged: 0/0
 24336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24337 ;;      Params:         0       0       0       0       0       0       0
 24338 ;;      Locals:         0       0       0       0       0       0       0
 24339 ;;      Temps:          0       0       0       0       0       0       0
 24340 ;;      Totals:         0       0       0       0       0       0       0
 24341 ;;Total ram usage:        0 bytes
 24342 ;; Hardware stack levels used:    1
 24343 ;; Hardware stack levels required when called:    3
 24344 ;; This function calls:
 24345 ;;		_ECANSetOperationMode
 24346 ;; This function is called by:
 24347 ;;		_init
 24348 ;; This function uses a non-reentrant model
 24349 ;;
 24350                           
 24351                           	psect	text70
 24352  002796                     __ptext70:
 24353                           	opt stack 0
 24354  002796                     _ECANInitialize:
 24355                           	opt stack 25
 24356                           
 24357                           ; BSR set to: 0
 24358                           ;ECAN.c: 171: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 24359                           
 24360                           ;incstack = 0
 24361                           ;incstack = 0
 24362  002796  0E80               	movlw	128
 24363  002798  EC83  F00E         	call	_ECANSetOperationMode
 24364                           
 24365                           ;ECAN.c: 175: BRGCON1 = ((1-1) << 6) | (10-1);
 24366  00279C  0E09               	movlw	9
 24367  00279E  6E70               	movwf	3952,c	;volatile
 24368                           
 24369                           ;ECAN.c: 176: BRGCON2 = (1 << 7) | (1 << 6) | ((8-1) << 3) | (5-1);
 24370  0027A0  0EFC               	movlw	252
 24371  0027A2  6E71               	movwf	3953,c	;volatile
 24372                           
 24373                           ;ECAN.c: 180: BRGCON3 = (0 << 7) |
 24374                           ;ECAN.c: 181: (0 << 6) |
 24375                           ;ECAN.c: 182: (2-1);
 24376  0027A4  0E01               	movlw	1
 24377  0027A6  6E72               	movwf	3954,c	;volatile
 24378                           
 24379                           ;ECAN.c: 185: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 0;
 24380  0027A8  0E20               	movlw	32
 24381  0027AA  6E73               	movwf	3955,c	;volatile
 24382                           
 24383                           ;ECAN.c: 192: MDSEL1 = 0x80 >> 7;
 24384  0027AC  8E77               	bsf	3959,7,c	;volatile
 24385                           
 24386                           ;ECAN.c: 193: MDSEL0 = 0x80 >> 6;
 24387  0027AE  9C77               	bcf	3959,6,c	;volatile
 24388                           
 24389                           ;ECAN.c: 205: RXB0CON = 0;
 24390  0027B0  6A60               	clrf	3936,c	;volatile
 24391                           
 24392                           ;ECAN.c: 211: RXB1CON = 0;
 24393  0027B2  010F               	movlb	15	; () banked
 24394  0027B4  6B50               	clrf	80,b	;volatile
 24395                           
 24396                           ; BSR set to: 15
 24397                           ;ECAN.c: 221: B0CON = 0;
 24398  0027B6  010E               	movlb	14	; () banked
 24399  0027B8  6B20               	clrf	32,b	;volatile
 24400                           
 24401                           ; BSR set to: 14
 24402                           ;ECAN.c: 231: B1CON = 0;
 24403  0027BA  6B30               	clrf	48,b	;volatile
 24404                           
 24405                           ; BSR set to: 14
 24406                           ;ECAN.c: 241: B2CON = 0;
 24407  0027BC  6B40               	clrf	64,b	;volatile
 24408                           
 24409                           ; BSR set to: 14
 24410                           ;ECAN.c: 254: B3CON = 0 << 2;
 24411  0027BE  6B50               	clrf	80,b	;volatile
 24412                           
 24413                           ; BSR set to: 14
 24414                           ;ECAN.c: 264: B4CON = 0 << 2;
 24415  0027C0  6B60               	clrf	96,b	;volatile
 24416                           
 24417                           ; BSR set to: 14
 24418                           ;ECAN.c: 274: B5CON = 0 << 2;
 24419  0027C2  6B70               	clrf	112,b	;volatile
 24420                           
 24421                           ; BSR set to: 14
 24422                           ;ECAN.c: 278: BSEL0 = 1 << 7 | 1 << 6 | 1 << 5 | 0 << 4 | 0 << 3 | 0 << 2;
 24423  0027C4  0EE0               	movlw	224
 24424  0027C6  010D               	movlb	13	; () banked
 24425  0027C8  6FF8               	movwf	248,b	;volatile
 24426                           
 24427                           ; BSR set to: 13
 24428                           ;ECAN.c: 295: RXF0SIDH = (long)0x00000000L >> 21L;RXF0SIDL = (((long)0x00000000L >> 13L)
      +                           & 0xe0) | ((long)(0x00000000L) & 0x03L) | 0x08;RXF0EIDH = (long)0x00000000L >> 8L;RXF0E
      +                          IDL = 0x00000000L;;
 24429  0027CA  010F               	movlb	15	; () banked
 24430  0027CC  6B00               	clrf	0,b	;volatile
 24431                           
 24432                           ; BSR set to: 15
 24433  0027CE  0E08               	movlw	8
 24434  0027D0  6F01               	movwf	1,b	;volatile
 24435                           
 24436                           ; BSR set to: 15
 24437  0027D2  6B02               	clrf	2,b	;volatile
 24438                           
 24439                           ; BSR set to: 15
 24440  0027D4  6B03               	clrf	3,b	;volatile
 24441                           
 24442                           ; BSR set to: 15
 24443                           ;ECAN.c: 428: RXFCON0 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (1);
 24444  0027D6  0E01               	movlw	1
 24445  0027D8  010D               	movlb	13	; () banked
 24446  0027DA  6FD4               	movwf	212,b	;volatile
 24447                           
 24448                           ; BSR set to: 13
 24449                           ;ECAN.c: 436: RXFCON1 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (0);
 24450  0027DC  6BD5               	clrf	213,b	;volatile
 24451                           
 24452                           ; BSR set to: 13
 24453                           ;ECAN.c: 449: RXFBCON0 = (0 << 4) | 0;
 24454  0027DE  6BE0               	clrf	224,b	;volatile
 24455                           
 24456                           ; BSR set to: 13
 24457                           ;ECAN.c: 450: RXFBCON1 = (1 << 4) | 1;
 24458  0027E0  0E11               	movlw	17
 24459  0027E2  6FE1               	movwf	225,b	;volatile
 24460                           
 24461                           ; BSR set to: 13
 24462                           ;ECAN.c: 451: RXFBCON2 = (1 << 4) | 1;
 24463  0027E4  6FE2               	movwf	226,b	;volatile
 24464                           
 24465                           ; BSR set to: 13
 24466                           ;ECAN.c: 452: RXFBCON3 = (0 << 4) | 0;
 24467  0027E6  6BE3               	clrf	227,b	;volatile
 24468                           
 24469                           ; BSR set to: 13
 24470                           ;ECAN.c: 453: RXFBCON4 = (0 << 4) | 0;
 24471  0027E8  6BE4               	clrf	228,b	;volatile
 24472                           
 24473                           ; BSR set to: 13
 24474                           ;ECAN.c: 454: RXFBCON5 = (0 << 4) | 0;
 24475  0027EA  6BE5               	clrf	229,b	;volatile
 24476                           
 24477                           ; BSR set to: 13
 24478                           ;ECAN.c: 455: RXFBCON6 = (0 << 4) | 0;
 24479  0027EC  6BE6               	clrf	230,b	;volatile
 24480                           
 24481                           ; BSR set to: 13
 24482                           ;ECAN.c: 456: RXFBCON7 = (0 << 4) | 0;
 24483  0027EE  6BE7               	clrf	231,b	;volatile
 24484                           
 24485                           ; BSR set to: 13
 24486                           ;ECAN.c: 458: MSEL0 = 1 << 6 | 1 << 4 | 1 << 2 | 0;;
 24487  0027F0  0E54               	movlw	84
 24488  0027F2  6FF0               	movwf	240,b	;volatile
 24489                           
 24490                           ; BSR set to: 13
 24491                           ;ECAN.c: 462: MSEL1 = 0 << 6 | 0 << 4 | 1 << 2 | 1;;
 24492  0027F4  0E05               	movlw	5
 24493  0027F6  6FF1               	movwf	241,b	;volatile
 24494                           
 24495                           ; BSR set to: 13
 24496                           ;ECAN.c: 466: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 24497  0027F8  6BF2               	clrf	242,b	;volatile
 24498                           
 24499                           ; BSR set to: 13
 24500                           ;ECAN.c: 470: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 24501  0027FA  6BF2               	clrf	242,b	;volatile
 24502                           
 24503                           ; BSR set to: 13
 24504                           ;ECAN.c: 481: RXM0SIDH = (long)0x00000000L >> 21L; RXM0SIDL = (((long)0x00000000L >> 13L
      +                          ) & 0xe0) | ((long)(0x00000000L) & 0x03L); RXM0EIDH = (long)0x00000000L >> 8L; RXM0EIDL 
      +                          = 0x00000000L;;
 24505  0027FC  010F               	movlb	15	; () banked
 24506  0027FE  6B18               	clrf	24,b	;volatile
 24507                           
 24508                           ; BSR set to: 15
 24509  002800  6B19               	clrf	25,b	;volatile
 24510                           
 24511                           ; BSR set to: 15
 24512  002802  6B1A               	clrf	26,b	;volatile
 24513                           
 24514                           ; BSR set to: 15
 24515  002804  6B1B               	clrf	27,b	;volatile
 24516                           
 24517                           ; BSR set to: 15
 24518                           ;ECAN.c: 482: RXM0EXIDM = 1;
 24519  002806  8719               	bsf	25,3,b	;volatile
 24520                           
 24521                           ; BSR set to: 15
 24522                           ;ECAN.c: 489: RXM1SIDH = (long)0x00000000L >> 21L; RXM1SIDL = (((long)0x00000000L >> 13L
      +                          ) & 0xe0) | ((long)(0x00000000L) & 0x03L); RXM1EIDH = (long)0x00000000L >> 8L; RXM1EIDL 
      +                          = 0x00000000L;;
 24523  002808  6B1C               	clrf	28,b	;volatile
 24524                           
 24525                           ; BSR set to: 15
 24526  00280A  6B1D               	clrf	29,b	;volatile
 24527                           
 24528                           ; BSR set to: 15
 24529  00280C  6B1E               	clrf	30,b	;volatile
 24530                           
 24531                           ; BSR set to: 15
 24532  00280E  6B1F               	clrf	31,b	;volatile
 24533                           
 24534                           ; BSR set to: 15
 24535                           ;ECAN.c: 490: RXM1EXIDEN = 1;
 24536  002810  871D               	bsf	29,3,b	;volatile
 24537                           
 24538                           ; BSR set to: 15
 24539                           ;ECAN.c: 498: ECANSetOperationMode(0x20);
 24540  002812  0E20               	movlw	32
 24541  002814  EF83  F00E         	goto	_ECANSetOperationMode
 24542  002818                     __end_of_ECANInitialize:
 24543                           	opt stack 0
 24544                           tblptru	equ	0xFF8
 24545                           tblptrh	equ	0xFF7
 24546                           tblptrl	equ	0xFF6
 24547                           tablat	equ	0xFF5
 24548                           prodh	equ	0xFF4
 24549                           prodl	equ	0xFF3
 24550                           intcon	equ	0xFF2
 24551                           indf0	equ	0xFEF
 24552                           postinc0	equ	0xFEE
 24553                           fsr0h	equ	0xFEA
 24554                           fsr0l	equ	0xFE9
 24555                           wreg	equ	0xFE8
 24556                           indf1	equ	0xFE7
 24557                           postinc1	equ	0xFE6
 24558                           postdec1	equ	0xFE5
 24559                           fsr1h	equ	0xFE2
 24560                           fsr1l	equ	0xFE1
 24561                           indf2	equ	0xFDF
 24562                           postinc2	equ	0xFDE
 24563                           postdec2	equ	0xFDD
 24564                           plusw2	equ	0xFDB
 24565                           fsr2h	equ	0xFDA
 24566                           fsr2l	equ	0xFD9
 24567                           status	equ	0xFD8
 24568                           
 24569 ;; *************** function _ECANSetOperationMode *****************
 24570 ;; Defined at:
 24571 ;;		line 1012 in file "ECAN.c"
 24572 ;; Parameters:    Size  Location     Type
 24573 ;;  mode            1    wreg     enum E16346
 24574 ;; Auto vars:     Size  Location     Type
 24575 ;;  mode            1   24[COMRAM] enum E16346
 24576 ;; Return value:  Size  Location     Type
 24577 ;;		None               void
 24578 ;; Registers used:
 24579 ;;		wreg, status,2, status,0
 24580 ;; Tracked objects:
 24581 ;;		On entry : 0/0
 24582 ;;		On exit  : 0/0
 24583 ;;		Unchanged: 0/0
 24584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24585 ;;      Params:         0       0       0       0       0       0       0
 24586 ;;      Locals:         1       0       0       0       0       0       0
 24587 ;;      Temps:          0       0       0       0       0       0       0
 24588 ;;      Totals:         1       0       0       0       0       0       0
 24589 ;;Total ram usage:        1 bytes
 24590 ;; Hardware stack levels used:    1
 24591 ;; Hardware stack levels required when called:    2
 24592 ;; This function calls:
 24593 ;;		Nothing
 24594 ;; This function is called by:
 24595 ;;		_doModeVerbose
 24596 ;;		_doModeVscp
 24597 ;;		_doModeSLCAN
 24598 ;;		_ECANInitialize
 24599 ;; This function uses a non-reentrant model
 24600 ;;
 24601                           
 24602                           	psect	text71
 24603  001D06                     __ptext71:
 24604                           	opt stack 0
 24605  001D06                     _ECANSetOperationMode:
 24606                           	opt stack 26
 24607                           
 24608                           ;incstack = 0
 24609                           ;incstack = 0
 24610                           ;ECANSetOperationMode@mode stored from wreg
 24611  001D06  CFE8 F019          	movff	wreg,ECANSetOperationMode@mode
 24612                           
 24613                           ;ECAN.c: 1013: CANCON &= 0x1F;
 24614  001D0A  0E1F               	movlw	31
 24615  001D0C  166F               	andwf	3951,f,c	;volatile
 24616                           
 24617                           ;ECAN.c: 1014: CANCON |= mode;
 24618  001D0E  5019               	movf	ECANSetOperationMode@mode,w,c
 24619  001D10  126F               	iorwf	3951,f,c	;volatile
 24620  001D12                     l13752:
 24621  001D12  506F               	movf	3951,w,c	;volatile
 24622  001D14  0BE0               	andlw	224
 24623  001D16  1819               	xorwf	ECANSetOperationMode@mode,w,c
 24624  001D18  B4D8               	btfsc	status,2,c
 24625  001D1A  0012               	return	
 24626  001D1C  D7FA               	goto	l13752
 24627  001D1E                     __end_of_ECANSetOperationMode:
 24628                           	opt stack 0
 24629                           tblptru	equ	0xFF8
 24630                           tblptrh	equ	0xFF7
 24631                           tblptrl	equ	0xFF6
 24632                           tablat	equ	0xFF5
 24633                           prodh	equ	0xFF4
 24634                           prodl	equ	0xFF3
 24635                           intcon	equ	0xFF2
 24636                           indf0	equ	0xFEF
 24637                           postinc0	equ	0xFEE
 24638                           fsr0h	equ	0xFEA
 24639                           fsr0l	equ	0xFE9
 24640                           wreg	equ	0xFE8
 24641                           indf1	equ	0xFE7
 24642                           postinc1	equ	0xFE6
 24643                           postdec1	equ	0xFE5
 24644                           fsr1h	equ	0xFE2
 24645                           fsr1l	equ	0xFE1
 24646                           indf2	equ	0xFDF
 24647                           postinc2	equ	0xFDE
 24648                           postdec2	equ	0xFDD
 24649                           plusw2	equ	0xFDB
 24650                           fsr2h	equ	0xFDA
 24651                           fsr2l	equ	0xFD9
 24652                           status	equ	0xFD8
 24653                           
 24654 ;; *************** function _OpenTimer0 *****************
 24655 ;; Defined at:
 24656 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 24657 ;; Parameters:    Size  Location     Type
 24658 ;;  config          1    wreg     unsigned char 
 24659 ;; Auto vars:     Size  Location     Type
 24660 ;;  config          1   24[COMRAM] unsigned char 
 24661 ;; Return value:  Size  Location     Type
 24662 ;;		None               void
 24663 ;; Registers used:
 24664 ;;		wreg, status,2, status,0
 24665 ;; Tracked objects:
 24666 ;;		On entry : F/0
 24667 ;;		On exit  : F/0
 24668 ;;		Unchanged: F/0
 24669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24670 ;;      Params:         0       0       0       0       0       0       0
 24671 ;;      Locals:         1       0       0       0       0       0       0
 24672 ;;      Temps:          0       0       0       0       0       0       0
 24673 ;;      Totals:         1       0       0       0       0       0       0
 24674 ;;Total ram usage:        1 bytes
 24675 ;; Hardware stack levels used:    1
 24676 ;; Hardware stack levels required when called:    2
 24677 ;; This function calls:
 24678 ;;		Nothing
 24679 ;; This function is called by:
 24680 ;;		_init
 24681 ;; This function uses a non-reentrant model
 24682 ;;
 24683                           
 24684                           	psect	text72
 24685  001D3C                     __ptext72:
 24686                           	opt stack 0
 24687  001D3C                     _OpenTimer0:
 24688                           	opt stack 26
 24689                           
 24690                           ;incstack = 0
 24691                           ;incstack = 0
 24692                           ;OpenTimer0@config stored from wreg
 24693  001D3C  CFE8 F019          	movff	wreg,OpenTimer0@config
 24694                           
 24695                           ; BSR set to: 0
 24696  001D40  5019               	movf	OpenTimer0@config,w,c
 24697  001D42  0B7F               	andlw	127
 24698  001D44  6ED5               	movwf	4053,c	;volatile
 24699                           
 24700                           ; BSR set to: 0
 24701  001D46  6AD7               	clrf	4055,c	;volatile
 24702                           
 24703                           ; BSR set to: 0
 24704  001D48  6AD6               	clrf	4054,c	;volatile
 24705                           
 24706                           ; BSR set to: 0
 24707  001D4A  94F2               	bcf	intcon,2,c	;volatile
 24708                           
 24709                           ; BSR set to: 0
 24710  001D4C  AE19               	btfss	OpenTimer0@config,7,c
 24711  001D4E  D002               	goto	l1676
 24712                           
 24713                           ; BSR set to: 0
 24714  001D50  8AF2               	bsf	intcon,5,c	;volatile
 24715  001D52  D001               	goto	l1677
 24716  001D54                     l1676:
 24717                           
 24718                           ; BSR set to: 0
 24719  001D54  9AF2               	bcf	intcon,5,c	;volatile
 24720  001D56                     l1677:
 24721                           
 24722                           ; BSR set to: 0
 24723  001D56  8ED5               	bsf	4053,7,c	;volatile
 24724                           
 24725                           ; BSR set to: 0
 24726  001D58  0012               	return	
 24727  001D5A                     __end_of_OpenTimer0:
 24728                           	opt stack 0
 24729                           tblptru	equ	0xFF8
 24730                           tblptrh	equ	0xFF7
 24731                           tblptrl	equ	0xFF6
 24732                           tablat	equ	0xFF5
 24733                           prodh	equ	0xFF4
 24734                           prodl	equ	0xFF3
 24735                           intcon	equ	0xFF2
 24736                           indf0	equ	0xFEF
 24737                           postinc0	equ	0xFEE
 24738                           fsr0h	equ	0xFEA
 24739                           fsr0l	equ	0xFE9
 24740                           wreg	equ	0xFE8
 24741                           indf1	equ	0xFE7
 24742                           postinc1	equ	0xFE6
 24743                           postdec1	equ	0xFE5
 24744                           fsr1h	equ	0xFE2
 24745                           fsr1l	equ	0xFE1
 24746                           indf2	equ	0xFDF
 24747                           postinc2	equ	0xFDE
 24748                           postdec2	equ	0xFDD
 24749                           plusw2	equ	0xFDB
 24750                           fsr2h	equ	0xFDA
 24751                           fsr2l	equ	0xFD9
 24752                           status	equ	0xFD8
 24753                           
 24754 ;; *************** function _OpenUSART *****************
 24755 ;; Defined at:
 24756 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
 24757 ;; Parameters:    Size  Location     Type
 24758 ;;  config          1    wreg     unsigned char 
 24759 ;;  spbrg           2   24[COMRAM] unsigned int 
 24760 ;; Auto vars:     Size  Location     Type
 24761 ;;  config          1   26[COMRAM] unsigned char 
 24762 ;; Return value:  Size  Location     Type
 24763 ;;		None               void
 24764 ;; Registers used:
 24765 ;;		wreg, status,2
 24766 ;; Tracked objects:
 24767 ;;		On entry : F/0
 24768 ;;		On exit  : F/0
 24769 ;;		Unchanged: F/0
 24770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24771 ;;      Params:         2       0       0       0       0       0       0
 24772 ;;      Locals:         1       0       0       0       0       0       0
 24773 ;;      Temps:          0       0       0       0       0       0       0
 24774 ;;      Totals:         3       0       0       0       0       0       0
 24775 ;;Total ram usage:        3 bytes
 24776 ;; Hardware stack levels used:    1
 24777 ;; Hardware stack levels required when called:    2
 24778 ;; This function calls:
 24779 ;;		Nothing
 24780 ;; This function is called by:
 24781 ;;		_init
 24782 ;; This function uses a non-reentrant model
 24783 ;;
 24784                           
 24785                           	psect	text73
 24786  002306                     __ptext73:
 24787                           	opt stack 0
 24788  002306                     _OpenUSART:
 24789                           	opt stack 26
 24790                           
 24791                           ; BSR set to: 0
 24792                           ;incstack = 0
 24793                           ;incstack = 0
 24794                           ;OpenUSART@config stored from wreg
 24795  002306  CFE8 F01B          	movff	wreg,OpenUSART@config
 24796                           
 24797                           ; BSR set to: 0
 24798  00230A  6AAC               	clrf	4012,c	;volatile
 24799  00230C  6AAB               	clrf	4011,c	;volatile
 24800                           
 24801                           ; BSR set to: 0
 24802  00230E  B01B               	btfsc	OpenUSART@config,0,c
 24803                           
 24804                           ; BSR set to: 0
 24805  002310  88AC               	bsf	4012,4,c	;volatile
 24806                           
 24807                           ; BSR set to: 0
 24808  002312  A21B               	btfss	OpenUSART@config,1,c
 24809  002314  D002               	goto	l10404
 24810                           
 24811                           ; BSR set to: 0
 24812  002316  8CAC               	bsf	4012,6,c	;volatile
 24813  002318  8CAB               	bsf	4011,6,c	;volatile
 24814  00231A                     l10404:
 24815                           
 24816                           ; BSR set to: 0
 24817  00231A  B41B               	btfsc	OpenUSART@config,2,c
 24818                           
 24819                           ; BSR set to: 0
 24820  00231C  8EAC               	bsf	4012,7,c	;volatile
 24821                           
 24822                           ; BSR set to: 0
 24823  00231E  A61B               	btfss	OpenUSART@config,3,c
 24824  002320  D002               	goto	l1709
 24825                           
 24826                           ; BSR set to: 0
 24827  002322  88AB               	bsf	4011,4,c	;volatile
 24828  002324  D001               	goto	l10412
 24829  002326                     l1709:
 24830                           
 24831                           ; BSR set to: 0
 24832  002326  8AAB               	bsf	4011,5,c	;volatile
 24833  002328                     l10412:
 24834                           
 24835                           ; BSR set to: 0
 24836  002328  B81B               	btfsc	OpenUSART@config,4,c
 24837                           
 24838                           ; BSR set to: 0
 24839  00232A  84AC               	bsf	4012,2,c	;volatile
 24840                           
 24841                           ; BSR set to: 0
 24842  00232C  989E               	bcf	3998,4,c	;volatile
 24843                           
 24844                           ; BSR set to: 0
 24845  00232E  BA1B               	btfsc	OpenUSART@config,5,c
 24846                           
 24847                           ; BSR set to: 0
 24848  002330  86AB               	bsf	4011,3,c	;volatile
 24849                           
 24850                           ; BSR set to: 0
 24851  002332  AC1B               	btfss	OpenUSART@config,6,c
 24852  002334  D002               	goto	l1713
 24853                           
 24854                           ; BSR set to: 0
 24855  002336  8A9D               	bsf	3997,5,c	;volatile
 24856  002338  D001               	goto	l1714
 24857  00233A                     l1713:
 24858                           
 24859                           ; BSR set to: 0
 24860  00233A  9A9D               	bcf	3997,5,c	;volatile
 24861  00233C                     l1714:
 24862                           
 24863                           ; BSR set to: 0
 24864  00233C  9A9E               	bcf	3998,5,c	;volatile
 24865                           
 24866                           ; BSR set to: 0
 24867  00233E  AE1B               	btfss	OpenUSART@config,7,c
 24868  002340  D002               	goto	l1715
 24869                           
 24870                           ; BSR set to: 0
 24871  002342  889D               	bsf	3997,4,c	;volatile
 24872  002344  D001               	goto	l1716
 24873  002346                     l1715:
 24874                           
 24875                           ; BSR set to: 0
 24876  002346  989D               	bcf	3997,4,c	;volatile
 24877  002348                     l1716:
 24878                           
 24879                           ; BSR set to: 0
 24880  002348  C019  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 24881                           
 24882                           ; BSR set to: 0
 24883  00234C  501A               	movf	OpenUSART@spbrg+1,w,c
 24884  00234E  6EB0               	movwf	4016,c	;volatile
 24885                           
 24886                           ; BSR set to: 0
 24887  002350  8AAC               	bsf	4012,5,c	;volatile
 24888                           
 24889                           ; BSR set to: 0
 24890  002352  8EAB               	bsf	4011,7,c	;volatile
 24891                           
 24892                           ; BSR set to: 0
 24893  002354  9C94               	bcf	3988,6,c	;volatile
 24894                           
 24895                           ; BSR set to: 0
 24896  002356  8E94               	bsf	3988,7,c	;volatile
 24897                           
 24898                           ; BSR set to: 0
 24899  002358  B8AC               	btfsc	4012,4,c	;volatile
 24900                           
 24901                           ; BSR set to: 0
 24902  00235A  BEAC               	btfsc	4012,7,c	;volatile
 24903  00235C  D001               	goto	l1718
 24904                           
 24905                           ; BSR set to: 0
 24906  00235E  8C94               	bsf	3988,6,c	;volatile
 24907  002360                     l1718:
 24908                           
 24909                           ; BSR set to: 0
 24910  002360  0012               	return	
 24911  002362                     __end_of_OpenUSART:
 24912                           	opt stack 0
 24913                           tblptru	equ	0xFF8
 24914                           tblptrh	equ	0xFF7
 24915                           tblptrl	equ	0xFF6
 24916                           tablat	equ	0xFF5
 24917                           prodh	equ	0xFF4
 24918                           prodl	equ	0xFF3
 24919                           intcon	equ	0xFF2
 24920                           indf0	equ	0xFEF
 24921                           postinc0	equ	0xFEE
 24922                           fsr0h	equ	0xFEA
 24923                           fsr0l	equ	0xFE9
 24924                           wreg	equ	0xFE8
 24925                           indf1	equ	0xFE7
 24926                           postinc1	equ	0xFE6
 24927                           postdec1	equ	0xFE5
 24928                           fsr1h	equ	0xFE2
 24929                           fsr1l	equ	0xFE1
 24930                           indf2	equ	0xFDF
 24931                           postinc2	equ	0xFDE
 24932                           postdec2	equ	0xFDD
 24933                           plusw2	equ	0xFDB
 24934                           fsr2h	equ	0xFDA
 24935                           fsr2l	equ	0xFD9
 24936                           status	equ	0xFD8
 24937                           
 24938 ;; *************** function _WriteTimer0 *****************
 24939 ;; Defined at:
 24940 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 24941 ;; Parameters:    Size  Location     Type
 24942 ;;  timer0          2   24[COMRAM] unsigned int 
 24943 ;; Auto vars:     Size  Location     Type
 24944 ;;  timer           2   26[COMRAM] struct Timers
 24945 ;; Return value:  Size  Location     Type
 24946 ;;		None               void
 24947 ;; Registers used:
 24948 ;;		None
 24949 ;; Tracked objects:
 24950 ;;		On entry : F/0
 24951 ;;		On exit  : F/0
 24952 ;;		Unchanged: F/0
 24953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24954 ;;      Params:         2       0       0       0       0       0       0
 24955 ;;      Locals:         2       0       0       0       0       0       0
 24956 ;;      Temps:          0       0       0       0       0       0       0
 24957 ;;      Totals:         4       0       0       0       0       0       0
 24958 ;;Total ram usage:        4 bytes
 24959 ;; Hardware stack levels used:    1
 24960 ;; Hardware stack levels required when called:    2
 24961 ;; This function calls:
 24962 ;;		Nothing
 24963 ;; This function is called by:
 24964 ;;		_init
 24965 ;; This function uses a non-reentrant model
 24966 ;;
 24967                           
 24968                           	psect	text74
 24969  001CCA                     __ptext74:
 24970                           	opt stack 0
 24971  001CCA                     _WriteTimer0:
 24972                           	opt stack 26
 24973                           
 24974                           ; BSR set to: 0
 24975                           
 24976                           ; BSR set to: 0
 24977                           ;incstack = 0
 24978                           ;incstack = 0
 24979  001CCA  C019  F01B         	movff	WriteTimer0@timer0,WriteTimer0@timer
 24980  001CCE  C01A  F01C         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 24981  001CD2  C01C  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 24982  001CD6  C01B  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 24983                           
 24984                           ; BSR set to: 0
 24985  001CDA  0012               	return	
 24986  001CDC                     __end_of_WriteTimer0:
 24987                           	opt stack 0
 24988                           tblptru	equ	0xFF8
 24989                           tblptrh	equ	0xFF7
 24990                           tblptrl	equ	0xFF6
 24991                           tablat	equ	0xFF5
 24992                           prodh	equ	0xFF4
 24993                           prodl	equ	0xFF3
 24994                           intcon	equ	0xFF2
 24995                           indf0	equ	0xFEF
 24996                           postinc0	equ	0xFEE
 24997                           fsr0h	equ	0xFEA
 24998                           fsr0l	equ	0xFE9
 24999                           wreg	equ	0xFE8
 25000                           indf1	equ	0xFE7
 25001                           postinc1	equ	0xFE6
 25002                           postdec1	equ	0xFE5
 25003                           fsr1h	equ	0xFE2
 25004                           fsr1l	equ	0xFE1
 25005                           indf2	equ	0xFDF
 25006                           postinc2	equ	0xFDE
 25007                           postdec2	equ	0xFDD
 25008                           plusw2	equ	0xFDB
 25009                           fsr2h	equ	0xFDA
 25010                           fsr2l	equ	0xFD9
 25011                           status	equ	0xFD8
 25012                           
 25013 ;; *************** function _vscp_restoreDefaults *****************
 25014 ;; Defined at:
 25015 ;;		line 2344 in file "main.c"
 25016 ;; Parameters:    Size  Location     Type
 25017 ;;		None
 25018 ;; Auto vars:     Size  Location     Type
 25019 ;;		None
 25020 ;; Return value:  Size  Location     Type
 25021 ;;		None               void
 25022 ;; Registers used:
 25023 ;;		wreg, status,2, status,0, cstack
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : F/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25029 ;;      Params:         0       0       0       0       0       0       0
 25030 ;;      Locals:         0       0       0       0       0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0
 25032 ;;      Totals:         0       0       0       0       0       0       0
 25033 ;;Total ram usage:        0 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:    4
 25036 ;; This function calls:
 25037 ;;		_init_app_ram
 25038 ;;		_init_app_eeprom
 25039 ;; This function is called by:
 25040 ;;		_main
 25041 ;; This function uses a non-reentrant model
 25042 ;;
 25043                           
 25044                           	psect	text75
 25045  001C9E                     __ptext75:
 25046                           	opt stack 0
 25047  001C9E                     _vscp_restoreDefaults:
 25048                           	opt stack 25
 25049                           
 25050                           ;main.c: 2345: init_app_eeprom();
 25051                           
 25052                           ; BSR set to: 0
 25053                           ;incstack = 0
 25054                           ;incstack = 0
 25055  001C9E  EC4E  F014         	call	_init_app_eeprom	;wreg free
 25056                           
 25057                           ;main.c: 2346: init_app_ram();
 25058  001CA2  EF07  F011         	goto	_init_app_ram	;wreg free
 25059  001CA6                     __end_of_vscp_restoreDefaults:
 25060                           	opt stack 0
 25061                           tblptru	equ	0xFF8
 25062                           tblptrh	equ	0xFF7
 25063                           tblptrl	equ	0xFF6
 25064                           tablat	equ	0xFF5
 25065                           prodh	equ	0xFF4
 25066                           prodl	equ	0xFF3
 25067                           intcon	equ	0xFF2
 25068                           indf0	equ	0xFEF
 25069                           postinc0	equ	0xFEE
 25070                           fsr0h	equ	0xFEA
 25071                           fsr0l	equ	0xFE9
 25072                           wreg	equ	0xFE8
 25073                           indf1	equ	0xFE7
 25074                           postinc1	equ	0xFE6
 25075                           postdec1	equ	0xFE5
 25076                           fsr1h	equ	0xFE2
 25077                           fsr1l	equ	0xFE1
 25078                           indf2	equ	0xFDF
 25079                           postinc2	equ	0xFDE
 25080                           postdec2	equ	0xFDD
 25081                           plusw2	equ	0xFDB
 25082                           fsr2h	equ	0xFDA
 25083                           fsr2l	equ	0xFD9
 25084                           status	equ	0xFD8
 25085                           
 25086 ;; *************** function _init_app_eeprom *****************
 25087 ;; Defined at:
 25088 ;;		line 385 in file "main.c"
 25089 ;; Parameters:    Size  Location     Type
 25090 ;;		None
 25091 ;; Auto vars:     Size  Location     Type
 25092 ;;  i               1   27[COMRAM] unsigned char 
 25093 ;; Return value:  Size  Location     Type
 25094 ;;		None               void
 25095 ;; Registers used:
 25096 ;;		wreg, status,2, status,0, cstack
 25097 ;; Tracked objects:
 25098 ;;		On entry : 0/0
 25099 ;;		On exit  : 0/0
 25100 ;;		Unchanged: 0/0
 25101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25102 ;;      Params:         0       0       0       0       0       0       0
 25103 ;;      Locals:         1       0       0       0       0       0       0
 25104 ;;      Temps:          0       0       0       0       0       0       0
 25105 ;;      Totals:         1       0       0       0       0       0       0
 25106 ;;Total ram usage:        1 bytes
 25107 ;; Hardware stack levels used:    1
 25108 ;; Hardware stack levels required when called:    3
 25109 ;; This function calls:
 25110 ;;		_writeEEPROM
 25111 ;; This function is called by:
 25112 ;;		_vscp_restoreDefaults
 25113 ;; This function uses a non-reentrant model
 25114 ;;
 25115                           
 25116                           	psect	text76
 25117  00289C                     __ptext76:
 25118                           	opt stack 0
 25119  00289C                     _init_app_eeprom:
 25120                           	opt stack 25
 25121                           
 25122                           ;main.c: 386: uint8_t i;
 25123                           ;main.c: 388: writeEEPROM(0x01, 0x55);
 25124                           
 25125                           ; BSR set to: 0
 25126                           ;incstack = 0
 25127                           ;incstack = 0
 25128  00289C  6A1A               	clrf	?_writeEEPROM+1,c
 25129  00289E  0E01               	movlw	1
 25130  0028A0  6E19               	movwf	?_writeEEPROM,c
 25131  0028A2  0E55               	movlw	85
 25132  0028A4  6E1B               	movwf	?_writeEEPROM+2,c
 25133  0028A6  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25134                           
 25135                           ;main.c: 389: writeEEPROM(0x02, 0xAA);
 25136  0028AA  6A1A               	clrf	?_writeEEPROM+1,c
 25137  0028AC  0E02               	movlw	2
 25138  0028AE  6E19               	movwf	?_writeEEPROM,c
 25139  0028B0  0EAA               	movlw	170
 25140  0028B2  6E1B               	movwf	?_writeEEPROM+2,c
 25141  0028B4  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25142                           
 25143                           ;main.c: 390: writeEEPROM(0x03, 0);
 25144  0028B8  6A1A               	clrf	?_writeEEPROM+1,c
 25145  0028BA  0E03               	movlw	3
 25146  0028BC  6E19               	movwf	?_writeEEPROM,c
 25147  0028BE  0E00               	movlw	0
 25148  0028C0  6A1B               	clrf	?_writeEEPROM+2,c
 25149  0028C2  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25150                           
 25151                           ;main.c: 391: writeEEPROM(0x05, 0);
 25152  0028C6  6A1A               	clrf	?_writeEEPROM+1,c
 25153  0028C8  0E05               	movlw	5
 25154  0028CA  6E19               	movwf	?_writeEEPROM,c
 25155  0028CC  0E00               	movlw	0
 25156  0028CE  6A1B               	clrf	?_writeEEPROM+2,c
 25157  0028D0  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25158                           
 25159                           ;main.c: 392: writeEEPROM(0x06, 0);
 25160  0028D4  6A1A               	clrf	?_writeEEPROM+1,c
 25161  0028D6  0E06               	movlw	6
 25162  0028D8  6E19               	movwf	?_writeEEPROM,c
 25163  0028DA  0E00               	movlw	0
 25164  0028DC  6A1B               	clrf	?_writeEEPROM+2,c
 25165  0028DE  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25166                           
 25167                           ;main.c: 393: writeEEPROM(0x09, 10u);
 25168  0028E2  6A1A               	clrf	?_writeEEPROM+1,c
 25169  0028E4  0E09               	movlw	9
 25170  0028E6  6E19               	movwf	?_writeEEPROM,c
 25171  0028E8  0E0A               	movlw	10
 25172  0028EA  6E1B               	movwf	?_writeEEPROM+2,c
 25173  0028EC  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25174                           
 25175                           ;main.c: 396: for (i = 0x20; i < (0x5C + 4); i++) {
 25176  0028F0  0E20               	movlw	32
 25177  0028F2  6E1C               	movwf	init_app_eeprom@i,c
 25178  0028F4                     l10554:
 25179                           
 25180                           ;main.c: 397: writeEEPROM(0x01, 0xFF);
 25181  0028F4  6A1A               	clrf	?_writeEEPROM+1,c
 25182  0028F6  0E01               	movlw	1
 25183  0028F8  6E19               	movwf	?_writeEEPROM,c
 25184  0028FA  0EFF               	movlw	255
 25185  0028FC  681B               	setf	?_writeEEPROM+2,c
 25186  0028FE  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25187  002902  2A1C               	incf	init_app_eeprom@i,f,c
 25188  002904  0E5F               	movlw	95
 25189  002906  641C               	cpfsgt	init_app_eeprom@i,c
 25190  002908  D7F5               	goto	l10554
 25191                           
 25192                           ;main.c: 398: }
 25193                           ;main.c: 401: for (i = 0x60; i < (0x64 + 4); i++) {
 25194  00290A  0E60               	movlw	96
 25195  00290C  6E1C               	movwf	init_app_eeprom@i,c
 25196  00290E                     l10566:
 25197                           
 25198                           ;main.c: 402: writeEEPROM(0x01, 0xFF);
 25199  00290E  6A1A               	clrf	?_writeEEPROM+1,c
 25200  002910  0E01               	movlw	1
 25201  002912  6E19               	movwf	?_writeEEPROM,c
 25202  002914  0EFF               	movlw	255
 25203  002916  681B               	setf	?_writeEEPROM+2,c
 25204  002918  ECBC  F00E         	call	_writeEEPROM	;wreg free
 25205  00291C  2A1C               	incf	init_app_eeprom@i,f,c
 25206  00291E  0E67               	movlw	103
 25207  002920  641C               	cpfsgt	init_app_eeprom@i,c
 25208  002922  D7F5               	goto	l10566
 25209  002924  0C67               	retlw	103
 25210  002926                     __end_of_init_app_eeprom:
 25211                           	opt stack 0
 25212                           tblptru	equ	0xFF8
 25213                           tblptrh	equ	0xFF7
 25214                           tblptrl	equ	0xFF6
 25215                           tablat	equ	0xFF5
 25216                           prodh	equ	0xFF4
 25217                           prodl	equ	0xFF3
 25218                           intcon	equ	0xFF2
 25219                           indf0	equ	0xFEF
 25220                           postinc0	equ	0xFEE
 25221                           fsr0h	equ	0xFEA
 25222                           fsr0l	equ	0xFE9
 25223                           wreg	equ	0xFE8
 25224                           indf1	equ	0xFE7
 25225                           postinc1	equ	0xFE6
 25226                           postdec1	equ	0xFE5
 25227                           fsr1h	equ	0xFE2
 25228                           fsr1l	equ	0xFE1
 25229                           indf2	equ	0xFDF
 25230                           postinc2	equ	0xFDE
 25231                           postdec2	equ	0xFDD
 25232                           plusw2	equ	0xFDB
 25233                           fsr2h	equ	0xFDA
 25234                           fsr2l	equ	0xFD9
 25235                           status	equ	0xFD8
 25236                           
 25237 ;; *************** function _writeEEPROM *****************
 25238 ;; Defined at:
 25239 ;;		line 23 in file "eeprom.c"
 25240 ;; Parameters:    Size  Location     Type
 25241 ;;  address         2   24[COMRAM] unsigned short 
 25242 ;;  data            1   26[COMRAM] unsigned char 
 25243 ;; Auto vars:     Size  Location     Type
 25244 ;;		None
 25245 ;; Return value:  Size  Location     Type
 25246 ;;		None               void
 25247 ;; Registers used:
 25248 ;;		wreg, status,2
 25249 ;; Tracked objects:
 25250 ;;		On entry : 0/1
 25251 ;;		On exit  : 0/0
 25252 ;;		Unchanged: 0/0
 25253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25254 ;;      Params:         3       0       0       0       0       0       0
 25255 ;;      Locals:         0       0       0       0       0       0       0
 25256 ;;      Temps:          0       0       0       0       0       0       0
 25257 ;;      Totals:         3       0       0       0       0       0       0
 25258 ;;Total ram usage:        3 bytes
 25259 ;; Hardware stack levels used:    1
 25260 ;; Hardware stack levels required when called:    2
 25261 ;; This function calls:
 25262 ;;		Nothing
 25263 ;; This function is called by:
 25264 ;;		_init_app_eeprom
 25265 ;;		_doModeVerbose
 25266 ;;		_doModeSLCAN
 25267 ;; This function uses a non-reentrant model
 25268 ;;
 25269                           
 25270                           	psect	text77
 25271  001D78                     __ptext77:
 25272                           	opt stack 0
 25273  001D78                     _writeEEPROM:
 25274                           	opt stack 26
 25275                           
 25276                           ;eeprom.c: 29: EEADR = address & 0xff;
 25277                           
 25278                           ;incstack = 0
 25279                           ;incstack = 0
 25280  001D78  C019  FFA9         	movff	writeEEPROM@address,4009	;volatile
 25281                           
 25282                           ;eeprom.c: 30: EEDATA = data;
 25283  001D7C  C01B  FFA8         	movff	writeEEPROM@data,4008	;volatile
 25284                           
 25285                           ;eeprom.c: 31: EECON1bits.EEPGD = 0;
 25286  001D80  9EA6               	bcf	4006,7,c	;volatile
 25287                           
 25288                           ;eeprom.c: 32: EECON1bits.CFGS = 0;
 25289  001D82  9CA6               	bcf	4006,6,c	;volatile
 25290                           
 25291                           ;eeprom.c: 33: EECON1bits.WREN = 1;
 25292  001D84  84A6               	bsf	4006,2,c	;volatile
 25293                           
 25294                           ;eeprom.c: 36: INTCONbits.GIE = 0;
 25295  001D86  9EF2               	bcf	intcon,7,c	;volatile
 25296                           
 25297                           ;eeprom.c: 37: EECON2 = 0x55;
 25298  001D88  0E55               	movlw	85
 25299  001D8A  6EA7               	movwf	4007,c	;volatile
 25300                           
 25301                           ;eeprom.c: 38: EECON2 = 0xaa;
 25302  001D8C  0EAA               	movlw	170
 25303  001D8E  6EA7               	movwf	4007,c	;volatile
 25304                           
 25305                           ;eeprom.c: 39: EECON1bits.WR = 1;
 25306  001D90  82A6               	bsf	4006,1,c	;volatile
 25307                           
 25308                           ;eeprom.c: 40: INTCONbits.GIE = 1;
 25309  001D92  8EF2               	bsf	intcon,7,c	;volatile
 25310  001D94                     l1456:
 25311  001D94  A8A1               	btfss	4001,4,c	;volatile
 25312  001D96  D7FE               	goto	l1456
 25313                           
 25314                           ;eeprom.c: 43: PIR2bits.EEIF = 0;
 25315  001D98  98A1               	bcf	4001,4,c	;volatile
 25316                           
 25317                           ;eeprom.c: 44: EECON1bits.WREN = 0;
 25318  001D9A  94A6               	bcf	4006,2,c	;volatile
 25319  001D9C  0012               	return	
 25320  001D9E                     __end_of_writeEEPROM:
 25321                           	opt stack 0
 25322                           tblptru	equ	0xFF8
 25323                           tblptrh	equ	0xFF7
 25324                           tblptrl	equ	0xFF6
 25325                           tablat	equ	0xFF5
 25326                           prodh	equ	0xFF4
 25327                           prodl	equ	0xFF3
 25328                           intcon	equ	0xFF2
 25329                           indf0	equ	0xFEF
 25330                           postinc0	equ	0xFEE
 25331                           fsr0h	equ	0xFEA
 25332                           fsr0l	equ	0xFE9
 25333                           wreg	equ	0xFE8
 25334                           indf1	equ	0xFE7
 25335                           postinc1	equ	0xFE6
 25336                           postdec1	equ	0xFE5
 25337                           fsr1h	equ	0xFE2
 25338                           fsr1l	equ	0xFE1
 25339                           indf2	equ	0xFDF
 25340                           postinc2	equ	0xFDE
 25341                           postdec2	equ	0xFDD
 25342                           plusw2	equ	0xFDB
 25343                           fsr2h	equ	0xFDA
 25344                           fsr2l	equ	0xFD9
 25345                           status	equ	0xFD8
 25346                           
 25347 ;; *************** function _init_app_ram *****************
 25348 ;; Defined at:
 25349 ;;		line 368 in file "main.c"
 25350 ;; Parameters:    Size  Location     Type
 25351 ;;		None
 25352 ;; Auto vars:     Size  Location     Type
 25353 ;;		None
 25354 ;; Return value:  Size  Location     Type
 25355 ;;		None               void
 25356 ;; Registers used:
 25357 ;;		wreg, status,2, cstack
 25358 ;; Tracked objects:
 25359 ;;		On entry : 0/0
 25360 ;;		On exit  : F/0
 25361 ;;		Unchanged: 0/0
 25362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25363 ;;      Params:         0       0       0       0       0       0       0
 25364 ;;      Locals:         0       0       0       0       0       0       0
 25365 ;;      Temps:          0       0       0       0       0       0       0
 25366 ;;      Totals:         0       0       0       0       0       0       0
 25367 ;;Total ram usage:        0 bytes
 25368 ;; Hardware stack levels used:    1
 25369 ;; Hardware stack levels required when called:    3
 25370 ;; This function calls:
 25371 ;;		_readEEPROM
 25372 ;; This function is called by:
 25373 ;;		_init
 25374 ;;		_vscp_restoreDefaults
 25375 ;; This function uses a non-reentrant model
 25376 ;;
 25377                           
 25378                           	psect	text78
 25379  00220E                     __ptext78:
 25380                           	opt stack 0
 25381  00220E                     _init_app_ram:
 25382                           	opt stack 25
 25383                           
 25384                           ;main.c: 370: can_receiveOverruns = 0;
 25385                           
 25386                           ;incstack = 0
 25387                           ;incstack = 0
 25388  00220E  0101               	movlb	1	; () banked
 25389  002210  6B00               	clrf	_can_receiveOverruns& (0+255),b
 25390  002212  6B01               	clrf	(_can_receiveOverruns+1)& (0+255),b
 25391  002214  6B02               	clrf	(_can_receiveOverruns+2)& (0+255),b
 25392  002216  6B03               	clrf	(_can_receiveOverruns+3)& (0+255),b
 25393                           
 25394                           ;main.c: 371: can_transmitOverruns = 0;
 25395  002218  6B04               	clrf	_can_transmitOverruns& (0+255),b
 25396  00221A  6B05               	clrf	(_can_transmitOverruns+1)& (0+255),b
 25397  00221C  6B06               	clrf	(_can_transmitOverruns+2)& (0+255),b
 25398  00221E  6B07               	clrf	(_can_transmitOverruns+3)& (0+255),b
 25399                           
 25400                           ;main.c: 372: uart_receiveOverruns = 0;
 25401  002220  6B1C               	clrf	_uart_receiveOverruns& (0+255),b
 25402  002222  6B1D               	clrf	(_uart_receiveOverruns+1)& (0+255),b
 25403  002224  6B1E               	clrf	(_uart_receiveOverruns+2)& (0+255),b
 25404  002226  6B1F               	clrf	(_uart_receiveOverruns+3)& (0+255),b
 25405                           
 25406                           ;main.c: 373: uart_transmitOverruns = 0;
 25407  002228  6B20               	clrf	_uart_transmitOverruns& (0+255),b
 25408  00222A  6B21               	clrf	(_uart_transmitOverruns+1)& (0+255),b
 25409  00222C  6B22               	clrf	(_uart_transmitOverruns+2)& (0+255),b
 25410  00222E  6B23               	clrf	(_uart_transmitOverruns+3)& (0+255),b
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;main.c: 375: bHex = readEEPROM(0x06);
 25414  002230  6A1A               	clrf	?_readEEPROM+1,c
 25415  002232  0E06               	movlw	6
 25416  002234  6E19               	movwf	?_readEEPROM,c
 25417  002236  EC5C  F00E         	call	_readEEPROM	;wreg free
 25418  00223A  0100               	movlb	0	; () banked
 25419  00223C  6FD3               	movwf	_bHex& (0+255),b
 25420                           
 25421                           ;main.c: 376: mode = readEEPROM(0x03);
 25422  00223E  6A1A               	clrf	?_readEEPROM+1,c
 25423  002240  0E03               	movlw	3
 25424  002242  6E19               	movwf	?_readEEPROM,c
 25425  002244  EC5C  F00E         	call	_readEEPROM	;wreg free
 25426  002248  0100               	movlb	0	; () banked
 25427  00224A  6FD7               	movwf	_mode& (0+255),b
 25428                           
 25429                           ;main.c: 378: rwtimeout = readEEPROM(0x09);
 25430  00224C  6A1A               	clrf	?_readEEPROM+1,c
 25431  00224E  0E09               	movlw	9
 25432  002250  6E19               	movwf	?_readEEPROM,c
 25433  002252  EC5C  F00E         	call	_readEEPROM	;wreg free
 25434  002256  0100               	movlb	0	; () banked
 25435  002258  6FD9               	movwf	_rwtimeout& (0+255),b
 25436                           
 25437                           ; BSR set to: 0
 25438  00225A  0012               	return	
 25439  00225C                     __end_of_init_app_ram:
 25440                           	opt stack 0
 25441                           tblptru	equ	0xFF8
 25442                           tblptrh	equ	0xFF7
 25443                           tblptrl	equ	0xFF6
 25444                           tablat	equ	0xFF5
 25445                           prodh	equ	0xFF4
 25446                           prodl	equ	0xFF3
 25447                           intcon	equ	0xFF2
 25448                           indf0	equ	0xFEF
 25449                           postinc0	equ	0xFEE
 25450                           fsr0h	equ	0xFEA
 25451                           fsr0l	equ	0xFE9
 25452                           wreg	equ	0xFE8
 25453                           indf1	equ	0xFE7
 25454                           postinc1	equ	0xFE6
 25455                           postdec1	equ	0xFE5
 25456                           fsr1h	equ	0xFE2
 25457                           fsr1l	equ	0xFE1
 25458                           indf2	equ	0xFDF
 25459                           postinc2	equ	0xFDE
 25460                           postdec2	equ	0xFDD
 25461                           plusw2	equ	0xFDB
 25462                           fsr2h	equ	0xFDA
 25463                           fsr2l	equ	0xFD9
 25464                           status	equ	0xFD8
 25465                           
 25466 ;; *************** function _readEEPROM *****************
 25467 ;; Defined at:
 25468 ;;		line 87 in file "eeprom.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;  address         2   24[COMRAM] unsigned short 
 25471 ;; Auto vars:     Size  Location     Type
 25472 ;;  data            1   26[COMRAM] unsigned char 
 25473 ;; Return value:  Size  Location     Type
 25474 ;;                  1    wreg      unsigned char 
 25475 ;; Registers used:
 25476 ;;		wreg, status,2
 25477 ;; Tracked objects:
 25478 ;;		On entry : 0/0
 25479 ;;		On exit  : 0/0
 25480 ;;		Unchanged: 0/0
 25481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25482 ;;      Params:         2       0       0       0       0       0       0
 25483 ;;      Locals:         1       0       0       0       0       0       0
 25484 ;;      Temps:          0       0       0       0       0       0       0
 25485 ;;      Totals:         3       0       0       0       0       0       0
 25486 ;;Total ram usage:        3 bytes
 25487 ;; Hardware stack levels used:    1
 25488 ;; Hardware stack levels required when called:    2
 25489 ;; This function calls:
 25490 ;;		Nothing
 25491 ;; This function is called by:
 25492 ;;		_main
 25493 ;;		_init_app_ram
 25494 ;; This function uses a non-reentrant model
 25495 ;;
 25496                           
 25497                           	psect	text79
 25498  001CB8                     __ptext79:
 25499                           	opt stack 0
 25500  001CB8                     _readEEPROM:
 25501                           	opt stack 25
 25502                           
 25503                           ;eeprom.c: 88: uint8_t data;
 25504                           ;eeprom.c: 93: EEADR = address & 0xff;
 25505                           
 25506                           ; BSR set to: 0
 25507                           ;incstack = 0
 25508                           ;incstack = 0
 25509  001CB8  C019  FFA9         	movff	readEEPROM@address,4009	;volatile
 25510                           
 25511                           ;eeprom.c: 94: EECON1bits.EEPGD= 0;
 25512  001CBC  9EA6               	bcf	4006,7,c	;volatile
 25513                           
 25514                           ;eeprom.c: 95: EECON1bits.CFGS = 0;
 25515  001CBE  9CA6               	bcf	4006,6,c	;volatile
 25516                           
 25517                           ;eeprom.c: 96: EECON1bits.RD = 1;
 25518  001CC0  80A6               	bsf	4006,0,c	;volatile
 25519                           
 25520                           ;eeprom.c: 97: data = EEDATA;
 25521  001CC2  CFA8 F01B          	movff	4008,readEEPROM@data	;volatile
 25522                           
 25523                           ;eeprom.c: 99: return data;
 25524  001CC6  501B               	movf	readEEPROM@data,w,c
 25525  001CC8  0012               	return	
 25526  001CCA                     __end_of_readEEPROM:
 25527                           	opt stack 0
 25528                           tblptru	equ	0xFF8
 25529                           tblptrh	equ	0xFF7
 25530                           tblptrl	equ	0xFF6
 25531                           tablat	equ	0xFF5
 25532                           prodh	equ	0xFF4
 25533                           prodl	equ	0xFF3
 25534                           intcon	equ	0xFF2
 25535                           indf0	equ	0xFEF
 25536                           postinc0	equ	0xFEE
 25537                           fsr0h	equ	0xFEA
 25538                           fsr0l	equ	0xFE9
 25539                           wreg	equ	0xFE8
 25540                           indf1	equ	0xFE7
 25541                           postinc1	equ	0xFE6
 25542                           postdec1	equ	0xFE5
 25543                           fsr1h	equ	0xFE2
 25544                           fsr1l	equ	0xFE1
 25545                           indf2	equ	0xFDF
 25546                           postinc2	equ	0xFDE
 25547                           postdec2	equ	0xFDD
 25548                           plusw2	equ	0xFDB
 25549                           fsr2h	equ	0xFDA
 25550                           fsr2l	equ	0xFD9
 25551                           status	equ	0xFD8
 25552                           
 25553 ;; *************** function _fifo_init *****************
 25554 ;; Defined at:
 25555 ;;		line 14 in file "fifo.c"
 25556 ;; Parameters:    Size  Location     Type
 25557 ;;  f               2   24[COMRAM] PTR struct .
 25558 ;;		 -> canInputFifo(8), serialInputFifo(8), 
 25559 ;;  buf             2   26[COMRAM] PTR unsigned char 
 25560 ;;		 -> caninputBuffer(494), inputBuffer(128), 
 25561 ;;  size            2   28[COMRAM] unsigned short 
 25562 ;; Auto vars:     Size  Location     Type
 25563 ;;		None
 25564 ;; Return value:  Size  Location     Type
 25565 ;;		None               void
 25566 ;; Registers used:
 25567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25568 ;; Tracked objects:
 25569 ;;		On entry : C/2
 25570 ;;		On exit  : C/0
 25571 ;;		Unchanged: C/0
 25572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25573 ;;      Params:         6       0       0       0       0       0       0
 25574 ;;      Locals:         0       0       0       0       0       0       0
 25575 ;;      Temps:          0       0       0       0       0       0       0
 25576 ;;      Totals:         6       0       0       0       0       0       0
 25577 ;;Total ram usage:        6 bytes
 25578 ;; Hardware stack levels used:    1
 25579 ;; Hardware stack levels required when called:    2
 25580 ;; This function calls:
 25581 ;;		Nothing
 25582 ;; This function is called by:
 25583 ;;		_main
 25584 ;; This function uses a non-reentrant model
 25585 ;;
 25586                           
 25587                           	psect	text80
 25588  002032                     __ptext80:
 25589                           	opt stack 0
 25590  002032                     _fifo_init:
 25591                           	opt stack 27
 25592                           
 25593                           ;fifo.c: 15: f->head = 0;
 25594                           
 25595                           ;incstack = 0
 25596                           ;incstack = 0
 25597  002032  EE20 F002          	lfsr	2,2
 25598  002036  D816               	call	PL92	;call to abstracted procedure
 25599                           
 25600                           ;fifo.c: 16: f->tail = 0;
 25601  002038  EE20 F004          	lfsr	2,4
 25602  00203C  D813               	call	PL92	;call to abstracted procedure
 25603                           
 25604                           ;fifo.c: 17: f->size = size;
 25605  00203E  EE20 F006          	lfsr	2,6
 25606  002042  5019               	movf	fifo_init@f,w,c
 25607  002044  26D9               	addwf	fsr2l,f,c
 25608  002046  501A               	movf	fifo_init@f+1,w,c
 25609  002048  22DA               	addwfc	fsr2h,f,c
 25610  00204A  C01D  FFDE         	movff	fifo_init@size,postinc2
 25611  00204E  C01E  FFDD         	movff	fifo_init@size+1,postdec2
 25612                           
 25613                           ;fifo.c: 18: f->buf = buf;
 25614  002052  C019  FFD9         	movff	fifo_init@f,fsr2l
 25615  002056  C01A  FFDA         	movff	fifo_init@f+1,fsr2h
 25616  00205A  C01B  FFDE         	movff	fifo_init@buf,postinc2
 25617  00205E  C01C  FFDD         	movff	fifo_init@buf+1,postdec2
 25618  002062  0012               	return	
 25619  002064                     __end_of_fifo_init:
 25620                           	opt stack 0
 25621  002064                     PL92:
 25622                           	opt stack 27
 25623  002064  5019               	movf	fifo_init@f,w,c
 25624  002066  26D9               	addwf	fsr2l,f,c
 25625  002068  501A               	movf	fifo_init@f+1,w,c
 25626  00206A  22DA               	addwfc	fsr2h,f,c
 25627  00206C  6ADE               	clrf	postinc2,c
 25628  00206E  6ADD               	clrf	postdec2,c
 25629  002070  0012               	return	
 25630  002072                     __end_ofPL92:
 25631                           	opt stack 0
 25632                           tblptru	equ	0xFF8
 25633                           tblptrh	equ	0xFF7
 25634                           tblptrl	equ	0xFF6
 25635                           tablat	equ	0xFF5
 25636                           prodh	equ	0xFF4
 25637                           prodl	equ	0xFF3
 25638                           intcon	equ	0xFF2
 25639                           indf0	equ	0xFEF
 25640                           postinc0	equ	0xFEE
 25641                           fsr0h	equ	0xFEA
 25642                           fsr0l	equ	0xFE9
 25643                           wreg	equ	0xFE8
 25644                           indf1	equ	0xFE7
 25645                           postinc1	equ	0xFE6
 25646                           postdec1	equ	0xFE5
 25647                           fsr1h	equ	0xFE2
 25648                           fsr1l	equ	0xFE1
 25649                           indf2	equ	0xFDF
 25650                           postinc2	equ	0xFDE
 25651                           postdec2	equ	0xFDD
 25652                           plusw2	equ	0xFDB
 25653                           fsr2h	equ	0xFDA
 25654                           fsr2l	equ	0xFD9
 25655                           status	equ	0xFD8
 25656                           
 25657 ;; *************** function _Interrupt *****************
 25658 ;; Defined at:
 25659 ;;		line 232 in file "main.c"
 25660 ;; Parameters:    Size  Location     Type
 25661 ;;		None
 25662 ;; Auto vars:     Size  Location     Type
 25663 ;;  c               1   23[COMRAM] unsigned char 
 25664 ;; Return value:  Size  Location     Type
 25665 ;;		None               void
 25666 ;; Registers used:
 25667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25668 ;; Tracked objects:
 25669 ;;		On entry : 0/0
 25670 ;;		On exit  : 0/0
 25671 ;;		Unchanged: 0/0
 25672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 25673 ;;      Params:         0       0       0       0       0       0       0
 25674 ;;      Locals:         1       0       0       0       0       0       0
 25675 ;;      Temps:          7       0       0       0       0       0       0
 25676 ;;      Totals:         8       0       0       0       0       0       0
 25677 ;;Total ram usage:        8 bytes
 25678 ;; Hardware stack levels used:    1
 25679 ;; Hardware stack levels required when called:    1
 25680 ;; This function calls:
 25681 ;;		_ReadUSART
 25682 ;;		_fifo_write
 25683 ;;		i1_WriteTimer0
 25684 ;; This function is called by:
 25685 ;;		Interrupt level 1
 25686 ;; This function uses a non-reentrant model
 25687 ;;
 25688                           
 25689                           	psect	intcodelo
 25690  000018                     __pintcodelo:
 25691                           	opt stack 0
 25692  000018                     _Interrupt:
 25693                           	opt stack 20
 25694                           
 25695                           ;incstack = 0
 25696  000018  CFD8 F011          	movff	status,??_Interrupt
 25697  00001C  CFE8 F012          	movff	wreg,??_Interrupt+1
 25698  000020  CFE0 F013          	movff	bsr,??_Interrupt+2
 25699  000024  CFE1 F014          	movff	fsr1l,??_Interrupt+3
 25700  000028  CFE2 F015          	movff	fsr1h,??_Interrupt+4
 25701  00002C  CFD9 F016          	movff	fsr2l,??_Interrupt+5
 25702  000030  CFDA F017          	movff	fsr2h,??_Interrupt+6
 25703  000034                     
 25704                           ;main.c: 233: uint8_t c;
 25705                           ;main.c: 236: if (1 == PIR1bits.RCIF) {
 25706  000034  AA9E               	btfss	3998,5,c	;volatile
 25707  000036  D001               	goto	i1u1099_21
 25708  000038  D001               	goto	i1u1099_20
 25709  00003A                     i1u1099_21:
 25710  00003A  D024               	goto	i1l401
 25711  00003C                     i1u1099_20:
 25712  00003C                     
 25713                           ;main.c: 238: c = ReadUSART();
 25714  00003C  EC8F  F00E         	call	_ReadUSART	;wreg free
 25715  000040  6E18               	movwf	Interrupt@c,c
 25716  000042                     
 25717                           ;main.c: 240: if (1 != fifo_write(&serialInputFifo, &c, 1)) {
 25718  000042  0101               	movlb	1	; () banked
 25719  000044  0E01               	movlw	high _serialInputFifo
 25720  000046  6E02               	movwf	?_fifo_write+1,c
 25721  000048  0ECC               	movlw	low _serialInputFifo
 25722  00004A  6E01               	movwf	?_fifo_write,c
 25723  00004C  0E18               	movlw	low Interrupt@c
 25724  00004E  6E03               	movwf	?_fifo_write+2,c
 25725  000050  0E01               	movlw	1
 25726  000052  6E04               	movwf	?_fifo_write+3,c
 25727  000054  0E00               	movlw	0
 25728  000056  6E05               	movwf	?_fifo_write+4,c
 25729  000058  0E00               	movlw	0
 25730  00005A  6E06               	movwf	?_fifo_write+5,c
 25731  00005C  0E00               	movlw	0
 25732  00005E  6E07               	movwf	?_fifo_write+6,c
 25733  000060  EC6F  F01D         	call	_fifo_write	;wreg free
 25734  000064  0401               	decf	?_fifo_write,w,c
 25735  000066  1002               	iorwf	?_fifo_write+1,w,c
 25736  000068  B4D8               	btfsc	status,2,c
 25737  00006A  D001               	goto	i1u1100_21
 25738  00006C  D001               	goto	i1u1100_20
 25739  00006E                     i1u1100_21:
 25740  00006E  D008               	goto	i1l9226
 25741  000070                     i1u1100_20:
 25742  000070                     
 25743                           ; BSR set to: 1
 25744                           ;main.c: 242: uart_receiveOverruns++;
 25745  000070  0E01               	movlw	1
 25746  000072  271C               	addwf	_uart_receiveOverruns& (0+255),f,b
 25747  000074  0E00               	movlw	0
 25748  000076  231D               	addwfc	(_uart_receiveOverruns+1)& (0+255),f,b
 25749  000078  0E00               	movlw	0
 25750  00007A  231E               	addwfc	(_uart_receiveOverruns+2)& (0+255),f,b
 25751  00007C  0E00               	movlw	0
 25752  00007E  231F               	addwfc	(_uart_receiveOverruns+3)& (0+255),f,b
 25753  000080                     i1l9226:
 25754                           
 25755                           ; BSR set to: 1
 25756                           ;main.c: 243: }
 25757                           ;main.c: 246: PIR1bits.RCIF = 0;
 25758  000080  9A9E               	bcf	3998,5,c	;volatile
 25759                           
 25760                           ;main.c: 247: }
 25761  000082  D07E               	goto	i1l403
 25762  000084                     i1l401:
 25763                           
 25764                           ;main.c: 248: else if (1 == INTCONbits.TMR0IF) {
 25765  000084  A4F2               	btfss	intcon,2,c	;volatile
 25766  000086  D001               	goto	i1u1101_21
 25767  000088  D001               	goto	i1u1101_20
 25768  00008A                     i1u1101_21:
 25769  00008A  D07A               	goto	i1l403
 25770  00008C                     i1u1101_20:
 25771  00008C                     
 25772                           ;main.c: 250: timer++;
 25773  00008C  0E01               	movlw	1
 25774  00008E  0101               	movlb	1	; () banked
 25775  000090  2718               	addwf	_timer& (0+255),f,b	;volatile
 25776  000092  0E00               	movlw	0
 25777  000094  2319               	addwfc	(_timer+1)& (0+255),f,b	;volatile
 25778  000096  0E00               	movlw	0
 25779  000098  231A               	addwfc	(_timer+2)& (0+255),f,b	;volatile
 25780  00009A  0E00               	movlw	0
 25781  00009C  231B               	addwfc	(_timer+3)& (0+255),f,b	;volatile
 25782                           
 25783                           ;main.c: 251: timekeeper++;
 25784  00009E  0E01               	movlw	1
 25785  0000A0  0100               	movlb	0	; () banked
 25786  0000A2  27CD               	addwf	_timekeeper& (0+255),f,b	;volatile
 25787  0000A4  0E00               	movlw	0
 25788  0000A6  23CE               	addwfc	(_timekeeper+1)& (0+255),f,b	;volatile
 25789  0000A8  0E00               	movlw	0
 25790  0000AA  23CF               	addwfc	(_timekeeper+2)& (0+255),f,b	;volatile
 25791  0000AC  0E00               	movlw	0
 25792  0000AE  23D0               	addwfc	(_timekeeper+3)& (0+255),f,b	;volatile
 25793  0000B0                     
 25794                           ; BSR set to: 0
 25795                           ;main.c: 253: WriteTimer0(0xfb1d);
 25796  0000B0  0EFB               	movlw	251
 25797  0000B2  6E02               	movwf	?i1_WriteTimer0+1,c
 25798  0000B4  0E1D               	movlw	29
 25799  0000B6  6E01               	movwf	?i1_WriteTimer0,c
 25800  0000B8  EC53  F00E         	call	i1_WriteTimer0	;wreg free
 25801  0000BC                     
 25802                           ; BSR set to: 0
 25803                           ;main.c: 256: status_led_cnt++;
 25804  0000BC  4A30               	infsnz	_status_led_cnt,f,c	;volatile
 25805  0000BE  2A31               	incf	_status_led_cnt+1,f,c	;volatile
 25806  0000C0                     
 25807                           ; BSR set to: 0
 25808                           ;main.c: 257: if ((2 == ledFunctionality) &&
 25809                           ;main.c: 258: (status_led_cnt > 1000)) {
 25810  0000C0  503C               	movf	_ledFunctionality,w,c
 25811  0000C2  0A02               	xorlw	2
 25812  0000C4  A4D8               	btfss	status,2,c
 25813  0000C6  D001               	goto	i1u1102_21
 25814  0000C8  D001               	goto	i1u1102_20
 25815  0000CA                     i1u1102_21:
 25816  0000CA  D00C               	goto	i1l9240
 25817  0000CC                     i1u1102_20:
 25818  0000CC                     
 25819                           ; BSR set to: 0
 25820  0000CC  0EE9               	movlw	233
 25821  0000CE  5C30               	subwf	_status_led_cnt,w,c	;volatile
 25822  0000D0  0E03               	movlw	3
 25823  0000D2  5831               	subwfb	_status_led_cnt+1,w,c	;volatile
 25824  0000D4  A0D8               	btfss	status,0,c
 25825  0000D6  D001               	goto	i1u1103_21
 25826  0000D8  D001               	goto	i1u1103_20
 25827  0000DA                     i1u1103_21:
 25828  0000DA  D004               	goto	i1l9240
 25829  0000DC                     i1u1103_20:
 25830  0000DC                     i1l9238:
 25831                           
 25832                           ; BSR set to: 0
 25833                           ;main.c: 259: LATC1 = ~LATC1;
 25834  0000DC  728B               	btg	3979,1,c	;volatile
 25835                           
 25836                           ;main.c: 260: status_led_cnt = 0;
 25837  0000DE  6A30               	clrf	_status_led_cnt,c	;volatile
 25838  0000E0  6A31               	clrf	_status_led_cnt+1,c	;volatile
 25839                           
 25840                           ;main.c: 261: } else if ((3 == ledFunctionality) &&
 25841  0000E2  D04D               	goto	i1l406
 25842  0000E4                     i1l9240:
 25843                           
 25844                           ; BSR set to: 0
 25845                           ;main.c: 262: (status_led_cnt > 400)) {
 25846  0000E4  503C               	movf	_ledFunctionality,w,c
 25847  0000E6  0A03               	xorlw	3
 25848  0000E8  A4D8               	btfss	status,2,c
 25849  0000EA  D001               	goto	i1u1104_21
 25850  0000EC  D001               	goto	i1u1104_20
 25851  0000EE                     i1u1104_21:
 25852  0000EE  D009               	goto	i1l9246
 25853  0000F0                     i1u1104_20:
 25854  0000F0                     
 25855                           ; BSR set to: 0
 25856  0000F0  0E91               	movlw	145
 25857  0000F2  5C30               	subwf	_status_led_cnt,w,c	;volatile
 25858  0000F4  0E01               	movlw	1
 25859  0000F6  5831               	subwfb	_status_led_cnt+1,w,c	;volatile
 25860  0000F8  A0D8               	btfss	status,0,c
 25861  0000FA  D001               	goto	i1u1105_21
 25862  0000FC  D001               	goto	i1u1105_20
 25863  0000FE                     i1u1105_21:
 25864  0000FE  D001               	goto	i1l9246
 25865  000100                     i1u1105_20:
 25866  000100  D7ED               	goto	i1l9238
 25867  000102                     i1l9246:
 25868                           
 25869                           ; BSR set to: 0
 25870                           ;main.c: 266: (status_led_cnt > 100)) {
 25871  000102  503C               	movf	_ledFunctionality,w,c
 25872  000104  0A04               	xorlw	4
 25873  000106  A4D8               	btfss	status,2,c
 25874  000108  D001               	goto	i1u1106_21
 25875  00010A  D001               	goto	i1u1106_20
 25876  00010C                     i1u1106_21:
 25877  00010C  D009               	goto	i1l9252
 25878  00010E                     i1u1106_20:
 25879  00010E                     
 25880                           ; BSR set to: 0
 25881  00010E  0E65               	movlw	101
 25882  000110  5C30               	subwf	_status_led_cnt,w,c	;volatile
 25883  000112  0E00               	movlw	0
 25884  000114  5831               	subwfb	_status_led_cnt+1,w,c	;volatile
 25885  000116  A0D8               	btfss	status,0,c
 25886  000118  D001               	goto	i1u1107_21
 25887  00011A  D001               	goto	i1u1107_20
 25888  00011C                     i1u1107_21:
 25889  00011C  D001               	goto	i1l9252
 25890  00011E                     i1u1107_20:
 25891  00011E  D7DE               	goto	i1l9238
 25892  000120                     i1l9252:
 25893                           
 25894                           ; BSR set to: 0
 25895                           ;main.c: 270: (status_led_cnt > 70)) {
 25896  000120  503C               	movf	_ledFunctionality,w,c
 25897  000122  0A05               	xorlw	5
 25898  000124  A4D8               	btfss	status,2,c
 25899  000126  D001               	goto	i1u1108_21
 25900  000128  D001               	goto	i1u1108_20
 25901  00012A                     i1u1108_21:
 25902  00012A  D009               	goto	i1l9258
 25903  00012C                     i1u1108_20:
 25904  00012C                     
 25905                           ; BSR set to: 0
 25906  00012C  0E47               	movlw	71
 25907  00012E  5C30               	subwf	_status_led_cnt,w,c	;volatile
 25908  000130  0E00               	movlw	0
 25909  000132  5831               	subwfb	_status_led_cnt+1,w,c	;volatile
 25910  000134  A0D8               	btfss	status,0,c
 25911  000136  D001               	goto	i1u1109_21
 25912  000138  D001               	goto	i1u1109_20
 25913  00013A                     i1u1109_21:
 25914  00013A  D001               	goto	i1l9258
 25915  00013C                     i1u1109_20:
 25916  00013C  D7CF               	goto	i1l9238
 25917  00013E                     i1l9258:
 25918                           
 25919                           ; BSR set to: 0
 25920                           ;main.c: 274: (status_led_cnt > 40)) {
 25921  00013E  503C               	movf	_ledFunctionality,w,c
 25922  000140  0A06               	xorlw	6
 25923  000142  A4D8               	btfss	status,2,c
 25924  000144  D001               	goto	i1u1110_21
 25925  000146  D001               	goto	i1u1110_20
 25926  000148                     i1u1110_21:
 25927  000148  D009               	goto	i1l9264
 25928  00014A                     i1u1110_20:
 25929  00014A                     
 25930                           ; BSR set to: 0
 25931  00014A  0E29               	movlw	41
 25932  00014C  5C30               	subwf	_status_led_cnt,w,c	;volatile
 25933  00014E  0E00               	movlw	0
 25934  000150  5831               	subwfb	_status_led_cnt+1,w,c	;volatile
 25935  000152  A0D8               	btfss	status,0,c
 25936  000154  D001               	goto	i1u1111_21
 25937  000156  D001               	goto	i1u1111_20
 25938  000158                     i1u1111_21:
 25939  000158  D001               	goto	i1l9264
 25940  00015A                     i1u1111_20:
 25941  00015A  D7C0               	goto	i1l9238
 25942  00015C                     i1l9264:
 25943                           
 25944                           ; BSR set to: 0
 25945  00015C  043C               	decf	_ledFunctionality,w,c
 25946  00015E  A4D8               	btfss	status,2,c
 25947  000160  D001               	goto	i1u1112_21
 25948  000162  D001               	goto	i1u1112_20
 25949  000164                     i1u1112_21:
 25950  000164  D004               	goto	i1l415
 25951  000166                     i1u1112_20:
 25952  000166                     
 25953                           ; BSR set to: 0
 25954                           ;main.c: 278: LATC1 = 1;
 25955  000166  828B               	bsf	3979,1,c	;volatile
 25956                           
 25957                           ;main.c: 279: status_led_cnt = 0;
 25958  000168  6A30               	clrf	_status_led_cnt,c	;volatile
 25959  00016A  6A31               	clrf	_status_led_cnt+1,c	;volatile
 25960                           
 25961                           ;main.c: 280: } else if (0 == ledFunctionality) {
 25962  00016C  D008               	goto	i1l406
 25963  00016E                     i1l415:
 25964                           
 25965                           ; BSR set to: 0
 25966  00016E  663C               	tstfsz	_ledFunctionality,c
 25967  000170  D001               	goto	i1u1113_21
 25968  000172  D001               	goto	i1u1113_20
 25969  000174                     i1u1113_21:
 25970  000174  D004               	goto	i1l412
 25971  000176                     i1u1113_20:
 25972  000176                     
 25973                           ; BSR set to: 0
 25974                           ;main.c: 281: LATC1 = 0;
 25975  000176  928B               	bcf	3979,1,c	;volatile
 25976                           
 25977                           ;main.c: 282: status_led_cnt = 0;
 25978  000178  6A30               	clrf	_status_led_cnt,c	;volatile
 25979  00017A  6A31               	clrf	_status_led_cnt+1,c	;volatile
 25980  00017C  D000               	goto	i1l406
 25981  00017E                     i1l412:
 25982  00017E                     i1l406:
 25983                           
 25984                           ; BSR set to: 0
 25985                           ;main.c: 283: }
 25986                           ;main.c: 285: INTCONbits.TMR0IF = 0;
 25987  00017E  94F2               	bcf	intcon,2,c	;volatile
 25988  000180                     i1l403:
 25989                           
 25990                           ;main.c: 286: }
 25991                           ;main.c: 288: if ( 1 == PIR3bits.RXBNIF ) {
 25992  000180  A2A4               	btfss	4004,1,c	;volatile
 25993  000182  D001               	goto	i1u1114_21
 25994  000184  D001               	goto	i1u1114_20
 25995  000186                     i1u1114_21:
 25996  000186  D001               	goto	i1l419
 25997  000188                     i1u1114_20:
 25998  000188                     
 25999                           ;main.c: 290: PIR3bits.RXBNIF = 0;
 26000  000188  92A4               	bcf	4004,1,c	;volatile
 26001  00018A                     i1l419:
 26002  00018A  C017  FFDA         	movff	??_Interrupt+6,fsr2h
 26003  00018E  C016  FFD9         	movff	??_Interrupt+5,fsr2l
 26004  000192  C015  FFE2         	movff	??_Interrupt+4,fsr1h
 26005  000196  C014  FFE1         	movff	??_Interrupt+3,fsr1l
 26006  00019A  C013  FFE0         	movff	??_Interrupt+2,bsr
 26007  00019E  C012  FFE8         	movff	??_Interrupt+1,wreg
 26008  0001A2  C011  FFD8         	movff	??_Interrupt,status
 26009  0001A6  0010               	retfie	
 26010  0001A8                     __end_of_Interrupt:
 26011                           	opt stack 0
 26012                           tblptru	equ	0xFF8
 26013                           tblptrh	equ	0xFF7
 26014                           tblptrl	equ	0xFF6
 26015                           tablat	equ	0xFF5
 26016                           prodh	equ	0xFF4
 26017                           prodl	equ	0xFF3
 26018                           intcon	equ	0xFF2
 26019                           indf0	equ	0xFEF
 26020                           postinc0	equ	0xFEE
 26021                           fsr0h	equ	0xFEA
 26022                           fsr0l	equ	0xFE9
 26023                           wreg	equ	0xFE8
 26024                           indf1	equ	0xFE7
 26025                           postinc1	equ	0xFE6
 26026                           postdec1	equ	0xFE5
 26027                           fsr1h	equ	0xFE2
 26028                           fsr1l	equ	0xFE1
 26029                           bsr	equ	0xFE0
 26030                           indf2	equ	0xFDF
 26031                           postinc2	equ	0xFDE
 26032                           postdec2	equ	0xFDD
 26033                           plusw2	equ	0xFDB
 26034                           fsr2h	equ	0xFDA
 26035                           fsr2l	equ	0xFD9
 26036                           status	equ	0xFD8
 26037                           
 26038 ;; *************** function i1_WriteTimer0 *****************
 26039 ;; Defined at:
 26040 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 26041 ;; Parameters:    Size  Location     Type
 26042 ;;  timer0          2    0[COMRAM] unsigned int 
 26043 ;; Auto vars:     Size  Location     Type
 26044 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 26045 ;; Return value:  Size  Location     Type
 26046 ;;		None               void
 26047 ;; Registers used:
 26048 ;;		None
 26049 ;; Tracked objects:
 26050 ;;		On entry : F/0
 26051 ;;		On exit  : F/0
 26052 ;;		Unchanged: F/0
 26053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26054 ;;      Params:         2       0       0       0       0       0       0
 26055 ;;      Locals:         2       0       0       0       0       0       0
 26056 ;;      Temps:          0       0       0       0       0       0       0
 26057 ;;      Totals:         4       0       0       0       0       0       0
 26058 ;;Total ram usage:        4 bytes
 26059 ;; Hardware stack levels used:    1
 26060 ;; This function calls:
 26061 ;;		Nothing
 26062 ;; This function is called by:
 26063 ;;		_Interrupt
 26064 ;; This function uses a non-reentrant model
 26065 ;;
 26066                           
 26067                           	psect	text82
 26068  001CA6                     __ptext82:
 26069                           	opt stack 0
 26070  001CA6                     i1_WriteTimer0:
 26071                           	opt stack 20
 26072                           
 26073                           ; BSR set to: 0
 26074                           
 26075                           ;incstack = 0
 26076                           ;incstack = 0
 26077  001CA6  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 26078  001CAA  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 26079  001CAE  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 26080  001CB2  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 26081                           
 26082                           ; BSR set to: 0
 26083  001CB6  0012               	return	
 26084  001CB8                     __end_ofi1_WriteTimer0:
 26085                           	opt stack 0
 26086                           tblptru	equ	0xFF8
 26087                           tblptrh	equ	0xFF7
 26088                           tblptrl	equ	0xFF6
 26089                           tablat	equ	0xFF5
 26090                           prodh	equ	0xFF4
 26091                           prodl	equ	0xFF3
 26092                           intcon	equ	0xFF2
 26093                           indf0	equ	0xFEF
 26094                           postinc0	equ	0xFEE
 26095                           fsr0h	equ	0xFEA
 26096                           fsr0l	equ	0xFE9
 26097                           wreg	equ	0xFE8
 26098                           indf1	equ	0xFE7
 26099                           postinc1	equ	0xFE6
 26100                           postdec1	equ	0xFE5
 26101                           fsr1h	equ	0xFE2
 26102                           fsr1l	equ	0xFE1
 26103                           bsr	equ	0xFE0
 26104                           indf2	equ	0xFDF
 26105                           postinc2	equ	0xFDE
 26106                           postdec2	equ	0xFDD
 26107                           plusw2	equ	0xFDB
 26108                           fsr2h	equ	0xFDA
 26109                           fsr2l	equ	0xFD9
 26110                           status	equ	0xFD8
 26111                           
 26112 ;; *************** function _fifo_write *****************
 26113 ;; Defined at:
 26114 ;;		line 61 in file "fifo.c"
 26115 ;; Parameters:    Size  Location     Type
 26116 ;;  f               2    0[COMRAM] PTR struct .
 26117 ;;		 -> serialInputFifo(8), 
 26118 ;;  buf             1    2[COMRAM] PTR const void 
 26119 ;;		 -> Interrupt@c(1), 
 26120 ;;  nbytes          4    3[COMRAM] unsigned long 
 26121 ;; Auto vars:     Size  Location     Type
 26122 ;;  i               4   12[COMRAM] unsigned long 
 26123 ;;  p               1   11[COMRAM] PTR const unsigned char 
 26124 ;;		 -> Interrupt@c(1), 
 26125 ;; Return value:  Size  Location     Type
 26126 ;;                  2    0[COMRAM] unsigned short 
 26127 ;; Registers used:
 26128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26129 ;; Tracked objects:
 26130 ;;		On entry : F/1
 26131 ;;		On exit  : F/1
 26132 ;;		Unchanged: F/0
 26133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26134 ;;      Params:         7       0       0       0       0       0       0
 26135 ;;      Locals:         5       0       0       0       0       0       0
 26136 ;;      Temps:          4       0       0       0       0       0       0
 26137 ;;      Totals:        16       0       0       0       0       0       0
 26138 ;;Total ram usage:       16 bytes
 26139 ;; Hardware stack levels used:    1
 26140 ;; This function calls:
 26141 ;;		Nothing
 26142 ;; This function is called by:
 26143 ;;		_Interrupt
 26144 ;; This function uses a non-reentrant model
 26145 ;;
 26146                           
 26147                           	psect	text83
 26148  003ADE                     __ptext83:
 26149                           	opt stack 0
 26150  003ADE                     _fifo_write:
 26151                           	opt stack 20
 26152                           
 26153                           ; BSR set to: 1
 26154                           ;fifo.c: 62: uint32_t i;
 26155                           ;fifo.c: 63: const uint8_t *p;
 26156                           ;fifo.c: 64: p = buf;
 26157                           
 26158                           ; BSR set to: 0
 26159                           ;incstack = 0
 26160                           ;incstack = 0
 26161  003ADE  C003  F00C         	movff	fifo_write@buf,fifo_write@p
 26162                           
 26163                           ;fifo.c: 66: for ( i = 0; i < nbytes; i++ ) {
 26164  003AE2  6A0D               	clrf	fifo_write@i,c
 26165  003AE4  6A0E               	clrf	fifo_write@i+1,c
 26166  003AE6  6A0F               	clrf	fifo_write@i+2,c
 26167  003AE8  6A10               	clrf	fifo_write@i+3,c
 26168  003AEA  D067               	goto	i1l7120
 26169  003AEC                     i1l7100:
 26170                           
 26171                           ; BSR set to: 1
 26172                           ;fifo.c: 69: if ((f->head + 1 == f->tail) ||
 26173                           ;fifo.c: 70: ((f->head + 1 == f->size) && (f->tail == 0))) {
 26174  003AEC  EE20 F004          	lfsr	2,4
 26175  003AF0  5001               	movf	fifo_write@f,w,c
 26176  003AF2  D871               	call	PL14	;call to abstracted procedure
 26177  003AF4  E102               	bnz	i1u753_25
 26178  003AF6  5008               	movf	??_fifo_write,w,c
 26179  003AF8  180A               	xorwf	??_fifo_write+2,w,c
 26180  003AFA                     i1u753_25:
 26181  003AFA  E011               	bz	i1l1432
 26182                           
 26183                           ; BSR set to: 1
 26184  003AFC  EE20 F006          	lfsr	2,6
 26185  003B00  5001               	movf	fifo_write@f,w,c
 26186  003B02  D869               	call	PL14	;call to abstracted procedure
 26187  003B04  E102               	bnz	i1u754_25
 26188  003B06  5008               	movf	??_fifo_write,w,c
 26189  003B08  180A               	xorwf	??_fifo_write+2,w,c
 26190  003B0A                     i1u754_25:
 26191  003B0A  E10E               	bnz	i1l7108
 26192                           
 26193                           ; BSR set to: 1
 26194  003B0C  EE20 F004          	lfsr	2,4
 26195  003B10  5001               	movf	fifo_write@f,w,c
 26196  003B12  26D9               	addwf	fsr2l,f,c
 26197  003B14  5002               	movf	fifo_write@f+1,w,c
 26198  003B16  22DA               	addwfc	fsr2h,f,c
 26199  003B18  50DE               	movf	postinc2,w,c
 26200  003B1A  10DD               	iorwf	postdec2,w,c
 26201  003B1C  E105               	bnz	i1l7108
 26202  003B1E                     i1l1432:
 26203                           
 26204                           ; BSR set to: 1
 26205                           ;fifo.c: 71: return i;
 26206  003B1E  C00D  F001         	movff	fifo_write@i,?_fifo_write
 26207  003B22  C00E  F002         	movff	fifo_write@i+1,?_fifo_write+1
 26208  003B26  D056               	goto	i1l1433
 26209  003B28                     i1l7108:
 26210                           
 26211                           ; BSR set to: 1
 26212                           ;fifo.c: 73: else {
 26213                           ;fifo.c: 74: f->buf[ f->head ] = *p++;
 26214  003B28  500C               	movf	fifo_write@p,w,c
 26215  003B2A  6ED9               	movwf	fsr2l,c
 26216  003B2C  6ADA               	clrf	fsr2h,c
 26217  003B2E  EE10 F002          	lfsr	1,2
 26218  003B32  5001               	movf	fifo_write@f,w,c
 26219  003B34  26E1               	addwf	fsr1l,f,c
 26220  003B36  5002               	movf	fifo_write@f+1,w,c
 26221  003B38  22E2               	addwfc	fsr1h,f,c
 26222  003B3A  CFE6 F008          	movff	postinc1,??_fifo_write
 26223  003B3E  CFE5 F009          	movff	postdec1,??_fifo_write+1
 26224  003B42  C001  FFE1         	movff	fifo_write@f,fsr1l
 26225  003B46  C002  FFE2         	movff	fifo_write@f+1,fsr1h
 26226  003B4A  CFE6 F00A          	movff	postinc1,??_fifo_write+2
 26227  003B4E  CFE5 F00B          	movff	postdec1,??_fifo_write+3
 26228  003B52  5008               	movf	??_fifo_write,w,c
 26229  003B54  240A               	addwf	??_fifo_write+2,w,c
 26230  003B56  6EE1               	movwf	fsr1l,c
 26231  003B58  5009               	movf	??_fifo_write+1,w,c
 26232  003B5A  200B               	addwfc	??_fifo_write+3,w,c
 26233  003B5C  6EE2               	movwf	fsr1h,c
 26234  003B5E  CFDF FFE7          	movff	indf2,indf1
 26235                           
 26236                           ; BSR set to: 1
 26237  003B62  2A0C               	incf	fifo_write@p,f,c
 26238                           
 26239                           ; BSR set to: 1
 26240                           ;fifo.c: 75: f->head++;
 26241  003B64  EE20 F002          	lfsr	2,2
 26242  003B68  5001               	movf	fifo_write@f,w,c
 26243  003B6A  26D9               	addwf	fsr2l,f,c
 26244  003B6C  5002               	movf	fifo_write@f+1,w,c
 26245  003B6E  22DA               	addwfc	fsr2h,f,c
 26246  003B70  2ADE               	incf	postinc2,f,c
 26247  003B72  0E00               	movlw	0
 26248  003B74  22DD               	addwfc	postdec2,f,c
 26249                           
 26250                           ; BSR set to: 1
 26251                           ;fifo.c: 76: if (f->head == f->size) {
 26252  003B76  EE20 F006          	lfsr	2,6
 26253  003B7A  5001               	movf	fifo_write@f,w,c
 26254  003B7C  26D9               	addwf	fsr2l,f,c
 26255  003B7E  5002               	movf	fifo_write@f+1,w,c
 26256  003B80  22DA               	addwfc	fsr2h,f,c
 26257  003B82  EE10 F002          	lfsr	1,2
 26258  003B86  5001               	movf	fifo_write@f,w,c
 26259  003B88  26E1               	addwf	fsr1l,f,c
 26260  003B8A  5002               	movf	fifo_write@f+1,w,c
 26261  003B8C  22E2               	addwfc	fsr1h,f,c
 26262  003B8E  52E6               	movf	postinc1,f,c
 26263  003B90  52DE               	movf	postinc2,f,c
 26264  003B92  50DD               	movf	postdec2,w,c
 26265  003B94  18E5               	xorwf	postdec1,w,c
 26266  003B96  CFDF FFE8          	movff	indf2,wreg
 26267  003B9A  B4D8               	btfsc	status,2,c
 26268  003B9C  18E7               	xorwf	indf1,w,c
 26269  003B9E  E108               	bnz	i1l7118
 26270                           
 26271                           ; BSR set to: 1
 26272                           ;fifo.c: 77: f->head = 0;
 26273  003BA0  EE20 F002          	lfsr	2,2
 26274  003BA4  5001               	movf	fifo_write@f,w,c
 26275  003BA6  26D9               	addwf	fsr2l,f,c
 26276  003BA8  5002               	movf	fifo_write@f+1,w,c
 26277  003BAA  22DA               	addwfc	fsr2h,f,c
 26278  003BAC  6ADE               	clrf	postinc2,c
 26279  003BAE  6ADD               	clrf	postdec2,c
 26280  003BB0                     i1l7118:
 26281                           
 26282                           ; BSR set to: 1
 26283  003BB0  2A0D               	incf	fifo_write@i,f,c
 26284  003BB2  0E00               	movlw	0
 26285  003BB4  220E               	addwfc	fifo_write@i+1,f,c
 26286  003BB6  220F               	addwfc	fifo_write@i+2,f,c
 26287  003BB8  2210               	addwfc	fifo_write@i+3,f,c
 26288  003BBA                     i1l7120:
 26289                           
 26290                           ; BSR set to: 1
 26291  003BBA  5004               	movf	fifo_write@nbytes,w,c
 26292  003BBC  5C0D               	subwf	fifo_write@i,w,c
 26293  003BBE  5005               	movf	fifo_write@nbytes+1,w,c
 26294  003BC0  580E               	subwfb	fifo_write@i+1,w,c
 26295  003BC2  5006               	movf	fifo_write@nbytes+2,w,c
 26296  003BC4  580F               	subwfb	fifo_write@i+2,w,c
 26297  003BC6  5007               	movf	fifo_write@nbytes+3,w,c
 26298  003BC8  5810               	subwfb	fifo_write@i+3,w,c
 26299  003BCA  E390               	bnc	i1l7100
 26300                           
 26301                           ; BSR set to: 1
 26302                           ;fifo.c: 78: }
 26303                           ;fifo.c: 79: }
 26304                           ;fifo.c: 81: }
 26305                           ;fifo.c: 83: return nbytes;
 26306  003BCC  C004  F001         	movff	fifo_write@nbytes,?_fifo_write
 26307  003BD0  C005  F002         	movff	fifo_write@nbytes+1,?_fifo_write+1
 26308  003BD4                     i1l1433:
 26309                           
 26310                           ; BSR set to: 1
 26311  003BD4  0012               	return	
 26312  003BD6                     __end_of_fifo_write:
 26313                           	opt stack 0
 26314  003BD6                     PL14:
 26315                           	opt stack 20
 26316  003BD6  26D9               	addwf	fsr2l,f,c
 26317  003BD8  5002               	movf	fifo_write@f+1,w,c
 26318  003BDA  22DA               	addwfc	fsr2h,f,c
 26319  003BDC  CFDE F008          	movff	postinc2,??_fifo_write
 26320  003BE0  CFDD F009          	movff	postdec2,??_fifo_write+1
 26321  003BE4  EE20 F002          	lfsr	2,2
 26322  003BE8  5001               	movf	fifo_write@f,w,c
 26323  003BEA  26D9               	addwf	fsr2l,f,c
 26324  003BEC  5002               	movf	fifo_write@f+1,w,c
 26325  003BEE  22DA               	addwfc	fsr2h,f,c
 26326  003BF0  CFDE F00A          	movff	postinc2,??_fifo_write+2
 26327  003BF4  CFDD F00B          	movff	postdec2,??_fifo_write+3
 26328  003BF8  2A0A               	incf	??_fifo_write+2,f,c
 26329  003BFA  0E00               	movlw	0
 26330  003BFC  220B               	addwfc	??_fifo_write+3,f,c
 26331  003BFE  5009               	movf	??_fifo_write+1,w,c
 26332  003C00  180B               	xorwf	??_fifo_write+3,w,c
 26333  003C02  0012               	return	
 26334  003C04                     __end_ofPL14:
 26335                           	opt stack 0
 26336                           tblptru	equ	0xFF8
 26337                           tblptrh	equ	0xFF7
 26338                           tblptrl	equ	0xFF6
 26339                           tablat	equ	0xFF5
 26340                           prodh	equ	0xFF4
 26341                           prodl	equ	0xFF3
 26342                           intcon	equ	0xFF2
 26343                           indf0	equ	0xFEF
 26344                           postinc0	equ	0xFEE
 26345                           fsr0h	equ	0xFEA
 26346                           fsr0l	equ	0xFE9
 26347                           wreg	equ	0xFE8
 26348                           indf1	equ	0xFE7
 26349                           postinc1	equ	0xFE6
 26350                           postdec1	equ	0xFE5
 26351                           fsr1h	equ	0xFE2
 26352                           fsr1l	equ	0xFE1
 26353                           bsr	equ	0xFE0
 26354                           indf2	equ	0xFDF
 26355                           postinc2	equ	0xFDE
 26356                           postdec2	equ	0xFDD
 26357                           plusw2	equ	0xFDB
 26358                           fsr2h	equ	0xFDA
 26359                           fsr2l	equ	0xFD9
 26360                           status	equ	0xFD8
 26361                           
 26362 ;; *************** function _ReadUSART *****************
 26363 ;; Defined at:
 26364 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
 26365 ;; Parameters:    Size  Location     Type
 26366 ;;		None
 26367 ;; Auto vars:     Size  Location     Type
 26368 ;;  data            1    0[COMRAM] unsigned char 
 26369 ;; Return value:  Size  Location     Type
 26370 ;;                  1    wreg      unsigned char 
 26371 ;; Registers used:
 26372 ;;		wreg, status,2, status,0
 26373 ;; Tracked objects:
 26374 ;;		On entry : 0/0
 26375 ;;		On exit  : 0/0
 26376 ;;		Unchanged: 0/0
 26377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 26378 ;;      Params:         0       0       0       0       0       0       0
 26379 ;;      Locals:         1       0       0       0       0       0       0
 26380 ;;      Temps:          0       0       0       0       0       0       0
 26381 ;;      Totals:         1       0       0       0       0       0       0
 26382 ;;Total ram usage:        1 bytes
 26383 ;; Hardware stack levels used:    1
 26384 ;; This function calls:
 26385 ;;		Nothing
 26386 ;; This function is called by:
 26387 ;;		_Interrupt
 26388 ;; This function uses a non-reentrant model
 26389 ;;
 26390                           
 26391                           	psect	text84
 26392  001D1E                     __ptext84:
 26393                           	opt stack 0
 26394  001D1E                     _ReadUSART:
 26395                           	opt stack 20
 26396                           
 26397                           ; BSR set to: 1
 26398                           ;incstack = 0
 26399                           ;incstack = 0
 26400  001D1E  0EF2               	movlw	242
 26401  001D20  1634               	andwf	_USART_Status,f,c
 26402  001D22  ACAB               	btfss	4011,6,c	;volatile
 26403  001D24  D003               	goto	i1l1739
 26404  001D26  9034               	bcf	_USART_Status,0,c
 26405  001D28  B0AB               	btfsc	4011,0,c	;volatile
 26406  001D2A  8034               	bsf	_USART_Status,0,c
 26407  001D2C                     i1l1739:
 26408  001D2C  B4AB               	btfsc	4011,2,c	;volatile
 26409  001D2E  8434               	bsf	_USART_Status,2,c
 26410  001D30  B2AB               	btfsc	4011,1,c	;volatile
 26411  001D32  8634               	bsf	_USART_Status,3,c
 26412  001D34  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 26413  001D38  5001               	movf	ReadUSART@data,w,c
 26414  001D3A  0012               	return	
 26415  001D3C                     __end_of_ReadUSART:
 26416                           	opt stack 0
 26417                           tblptru	equ	0xFF8
 26418                           tblptrh	equ	0xFF7
 26419                           tblptrl	equ	0xFF6
 26420                           tablat	equ	0xFF5
 26421                           prodh	equ	0xFF4
 26422                           prodl	equ	0xFF3
 26423                           intcon	equ	0xFF2
 26424                           indf0	equ	0xFEF
 26425                           postinc0	equ	0xFEE
 26426                           fsr0h	equ	0xFEA
 26427                           fsr0l	equ	0xFE9
 26428                           wreg	equ	0xFE8
 26429                           indf1	equ	0xFE7
 26430                           postinc1	equ	0xFE6
 26431                           postdec1	equ	0xFE5
 26432                           fsr1h	equ	0xFE2
 26433                           fsr1l	equ	0xFE1
 26434                           bsr	equ	0xFE0
 26435                           indf2	equ	0xFDF
 26436                           postinc2	equ	0xFDE
 26437                           postdec2	equ	0xFDD
 26438                           plusw2	equ	0xFDB
 26439                           fsr2h	equ	0xFDA
 26440                           fsr2l	equ	0xFD9
 26441                           status	equ	0xFD8
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           indf0	equ	0xFEF
 26450                           postinc0	equ	0xFEE
 26451                           fsr0h	equ	0xFEA
 26452                           fsr0l	equ	0xFE9
 26453                           wreg	equ	0xFE8
 26454                           indf1	equ	0xFE7
 26455                           postinc1	equ	0xFE6
 26456                           postdec1	equ	0xFE5
 26457                           fsr1h	equ	0xFE2
 26458                           fsr1l	equ	0xFE1
 26459                           bsr	equ	0xFE0
 26460                           indf2	equ	0xFDF
 26461                           postinc2	equ	0xFDE
 26462                           postdec2	equ	0xFDD
 26463                           plusw2	equ	0xFDB
 26464                           fsr2h	equ	0xFDA
 26465                           fsr2l	equ	0xFD9
 26466                           status	equ	0xFD8
 26467                           
 26468                           	psect	rparam
 26469  0000                     tblptru	equ	0xFF8
 26470                           tblptrh	equ	0xFF7
 26471                           tblptrl	equ	0xFF6
 26472                           tablat	equ	0xFF5
 26473                           prodh	equ	0xFF4
 26474                           prodl	equ	0xFF3
 26475                           intcon	equ	0xFF2
 26476                           indf0	equ	0xFEF
 26477                           postinc0	equ	0xFEE
 26478                           fsr0h	equ	0xFEA
 26479                           fsr0l	equ	0xFE9
 26480                           wreg	equ	0xFE8
 26481                           indf1	equ	0xFE7
 26482                           postinc1	equ	0xFE6
 26483                           postdec1	equ	0xFE5
 26484                           fsr1h	equ	0xFE2
 26485                           fsr1l	equ	0xFE1
 26486                           bsr	equ	0xFE0
 26487                           indf2	equ	0xFDF
 26488                           postinc2	equ	0xFDE
 26489                           postdec2	equ	0xFDD
 26490                           plusw2	equ	0xFDB
 26491                           fsr2h	equ	0xFDA
 26492                           fsr2l	equ	0xFD9
 26493                           status	equ	0xFD8
 26494                           tblptru	equ	0xFF8
 26495                           tblptrh	equ	0xFF7
 26496                           tblptrl	equ	0xFF6
 26497                           tablat	equ	0xFF5
 26498                           prodh	equ	0xFF4
 26499                           prodl	equ	0xFF3
 26500                           intcon	equ	0xFF2
 26501                           indf0	equ	0xFEF
 26502                           postinc0	equ	0xFEE
 26503                           fsr0h	equ	0xFEA
 26504                           fsr0l	equ	0xFE9
 26505                           wreg	equ	0xFE8
 26506                           indf1	equ	0xFE7
 26507                           postinc1	equ	0xFE6
 26508                           postdec1	equ	0xFE5
 26509                           fsr1h	equ	0xFE2
 26510                           fsr1l	equ	0xFE1
 26511                           bsr	equ	0xFE0
 26512                           indf2	equ	0xFDF
 26513                           postinc2	equ	0xFDE
 26514                           postdec2	equ	0xFDD
 26515                           plusw2	equ	0xFDB
 26516                           fsr2h	equ	0xFDA
 26517                           fsr2l	equ	0xFD9
 26518                           status	equ	0xFD8


Data Sizes:
    Strings     4015
    Constant    120
    Data        0
    BSS         1133
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      71
    BANK0           160    109     129
    BANK1           256      0     212
    BANK2           256     61     189
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    ?_strcspn	unsigned int  size(2) Largest target is 0

    ?_strspn	unsigned int  size(2) Largest target is 0

    ?_strichr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_strnicmp	int  size(2) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 1
		 -> ECANSendMessage@dataLen(COMRAM[1]), 

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?_utoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    ?___llmod	unsigned long  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 4
		 -> ECANSendMessage@dataLen(COMRAM[1]), getVSCPFrame@id(BANK0[4]), 

    ?__ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ?_strcat	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_itoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    ?_ultoa	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_memcpy	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(COMRAM[8]), 

    ?_strlen	unsigned int  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_121(CODE[6]), STR_120(CODE[8]), STR_118(CODE[6]), 
		 -> STR_116(CODE[5]), STR_114(CODE[8]), STR_113(CODE[6]), STR_112(CODE[9]), 
		 -> STR_111(CODE[11]), STR_109(CODE[8]), STR_107(CODE[4]), STR_106(CODE[5]), 
		 -> STR_94(CODE[5]), STR_82(CODE[7]), STR_77(CODE[5]), STR_68(CODE[5]), 
		 -> wrkbuf(BANK1[80]), STR_45(CODE[5]), STR_44(CODE[5]), STR_42(CODE[5]), 
		 -> STR_41(CODE[4]), STR_40(CODE[5]), STR_37(CODE[3]), STR_28(CODE[3]), 
		 -> STR_19(CODE[7]), STR_17(CODE[8]), STR_15(CODE[7]), STR_13(CODE[9]), 
		 -> STR_11(CODE[6]), STR_9(CODE[7]), STR_7(CODE[5]), STR_5(CODE[5]), 
		 -> cmdbuf(BANK1[80]), 

    ?_strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), NULL(NULL[0]), STR_29(CODE[2]), cmdbuf(BANK1[80]), 

    ?_strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    ?_memset	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(COMRAM[8]), cmdbuf(BANK1[80]), 

    ?_atoi	int  size(2) Largest target is 0

    ?_strtok	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_stristr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    ?_fifo_write	unsigned short  size(2) Largest target is 0

    ?_fifo_read	unsigned short  size(2) Largest target is 0

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), STR_29(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strichr@ptr	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), STR_29(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), STR_29(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strnicmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_121(CODE[6]), STR_120(CODE[8]), STR_118(CODE[6]), STR_116(CODE[5]), 
		 -> STR_114(CODE[8]), STR_113(CODE[6]), STR_112(CODE[9]), STR_111(CODE[11]), 
		 -> STR_109(CODE[8]), STR_107(CODE[4]), STR_106(CODE[5]), STR_94(CODE[5]), 
		 -> STR_82(CODE[7]), STR_77(CODE[5]), STR_68(CODE[5]), STR_45(CODE[5]), 
		 -> STR_44(CODE[5]), STR_42(CODE[5]), STR_41(CODE[4]), STR_40(CODE[5]), 
		 -> STR_37(CODE[3]), STR_28(CODE[3]), STR_19(CODE[7]), STR_17(CODE[8]), 
		 -> STR_15(CODE[7]), STR_13(CODE[9]), STR_11(CODE[6]), STR_9(CODE[7]), 
		 -> STR_7(CODE[5]), STR_5(CODE[5]), 

    strnicmp@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_121(CODE[6]), STR_120(CODE[8]), STR_118(CODE[6]), 
		 -> STR_116(CODE[5]), STR_114(CODE[8]), STR_113(CODE[6]), STR_112(CODE[9]), 
		 -> STR_111(CODE[11]), STR_109(CODE[8]), STR_107(CODE[4]), STR_106(CODE[5]), 
		 -> STR_94(CODE[5]), STR_82(CODE[7]), STR_77(CODE[5]), STR_68(CODE[5]), 
		 -> wrkbuf(BANK1[80]), STR_45(CODE[5]), STR_44(CODE[5]), STR_42(CODE[5]), 
		 -> STR_41(CODE[4]), STR_40(CODE[5]), STR_37(CODE[3]), STR_28(CODE[3]), 
		 -> STR_19(CODE[7]), STR_17(CODE[8]), STR_15(CODE[7]), STR_13(CODE[9]), 
		 -> STR_11(CODE[6]), STR_9(CODE[7]), STR_7(CODE[5]), STR_5(CODE[5]), 
		 -> cmdbuf(BANK1[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> printGUID@buf(BANK0[3]), STR_121(CODE[6]), STR_120(CODE[8]), STR_118(CODE[6]), 
		 -> STR_116(CODE[5]), STR_114(CODE[8]), STR_113(CODE[6]), STR_112(CODE[9]), 
		 -> STR_111(CODE[11]), STR_109(CODE[8]), STR_107(CODE[4]), STR_106(CODE[5]), 
		 -> STR_94(CODE[5]), STR_82(CODE[7]), STR_77(CODE[5]), STR_68(CODE[5]), 
		 -> wrkbuf(BANK1[80]), STR_45(CODE[5]), STR_44(CODE[5]), STR_42(CODE[5]), 
		 -> STR_41(CODE[4]), STR_40(CODE[5]), STR_37(CODE[3]), STR_28(CODE[3]), 
		 -> STR_19(CODE[7]), STR_17(CODE[8]), STR_15(CODE[7]), STR_13(CODE[9]), 
		 -> STR_11(CODE[6]), STR_9(CODE[7]), STR_7(CODE[5]), STR_5(CODE[5]), 
		 -> cmdbuf(BANK1[80]), 

    sp__strichr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    stristr@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_121(CODE[6]), STR_120(CODE[8]), STR_118(CODE[6]), STR_116(CODE[5]), 
		 -> STR_114(CODE[8]), STR_113(CODE[6]), STR_112(CODE[9]), STR_111(CODE[11]), 
		 -> STR_109(CODE[8]), STR_107(CODE[4]), STR_106(CODE[5]), STR_94(CODE[5]), 
		 -> STR_82(CODE[7]), STR_77(CODE[5]), STR_68(CODE[5]), STR_45(CODE[5]), 
		 -> STR_44(CODE[5]), STR_42(CODE[5]), STR_41(CODE[4]), STR_40(CODE[5]), 
		 -> STR_37(CODE[3]), STR_28(CODE[3]), STR_19(CODE[7]), STR_17(CODE[8]), 
		 -> STR_15(CODE[7]), STR_13(CODE[9]), STR_11(CODE[6]), STR_9(CODE[7]), 
		 -> STR_7(CODE[5]), STR_5(CODE[5]), 

    stristr@s1	PTR const unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), NULL(NULL[0]), STR_29(CODE[2]), cmdbuf(BANK1[80]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_243(CODE[2]), STR_242(CODE[2]), printNodeFirmwareVersion@buf(BANK0[3]), STR_237(CODE[2]), 
		 -> STR_236(CODE[3]), STR_235(CODE[2]), printGUID@buf(BANK0[3]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(COMRAM[8]), cmdbuf(BANK1[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(COMRAM[8]), cmdbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(COMRAM[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(COMRAM[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> vscpData(COMRAM[8]), cmdbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> vscpData(COMRAM[8]), cmdbuf(BANK1[80]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), NULL(NULL[0]), STR_29(CODE[2]), cmdbuf(BANK1[80]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 80
		 -> STR_253(CODE[3]), STR_252(CODE[23]), STR_251(CODE[10]), STR_250(CODE[10]), 
		 -> STR_249(CODE[12]), STR_248(CODE[8]), STR_247(CODE[7]), STR_246(CODE[3]), 
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), STR_245(CODE[10]), STR_244(CODE[3]), STR_241(CODE[20]), 
		 -> STR_240(CODE[3]), STR_239(CODE[14]), STR_238(CODE[3]), STR_234(CODE[8]), 
		 -> STR_233(CODE[15]), STR_232(CODE[67]), STR_231(CODE[3]), STR_230(CODE[27]), 
		 -> STR_229(CODE[67]), STR_228(CODE[39]), STR_227(CODE[62]), STR_226(CODE[55]), 
		 -> STR_225(CODE[49]), STR_224(CODE[67]), STR_223(CODE[47]), STR_222(CODE[47]), 
		 -> STR_221(CODE[34]), STR_220(CODE[71]), STR_219(CODE[20]), STR_218(CODE[78]), 
		 -> STR_217(CODE[24]), STR_216(CODE[77]), STR_215(CODE[67]), STR_214(CODE[69]), 
		 -> STR_213(CODE[47]), STR_212(CODE[40]), STR_211(CODE[39]), STR_210(CODE[33]), 
		 -> STR_209(CODE[23]), STR_208(CODE[56]), STR_207(CODE[24]), STR_206(CODE[44]), 
		 -> STR_205(CODE[50]), STR_204(CODE[31]), STR_203(CODE[50]), STR_202(CODE[51]), 
		 -> STR_201(CODE[46]), STR_200(CODE[44]), STR_199(CODE[27]), STR_198(CODE[39]), 
		 -> STR_197(CODE[39]), STR_196(CODE[52]), STR_195(CODE[54]), STR_194(CODE[55]), 
		 -> STR_193(CODE[3]), STR_190(CODE[24]), STR_189(CODE[57]), STR_188(CODE[53]), 
		 -> STR_187(CODE[58]), STR_186(CODE[3]), STR_183(CODE[25]), STR_182(CODE[3]), 
		 -> STR_179(CODE[24]), STR_178(CODE[3]), STR_175(CODE[24]), STR_174(CODE[3]), 
		 -> STR_171(CODE[24]), STR_170(CODE[3]), STR_167(CODE[23]), STR_166(CODE[3]), 
		 -> STR_163(CODE[21]), STR_162(CODE[3]), STR_159(CODE[22]), STR_158(CODE[3]), 
		 -> STR_155(CODE[17]), STR_154(CODE[3]), STR_151(CODE[18]), STR_150(CODE[4]), 
		 -> STR_149(CODE[11]), STR_148(CODE[2]), STR_145(CODE[7]), STR_142(CODE[7]), 
		 -> STR_139(CODE[9]), STR_136(CODE[7]), STR_133(CODE[8]), STR_130(CODE[7]), 
		 -> STR_129(CODE[2]), STR_128(CODE[2]), STR_127(CODE[6]), STR_126(CODE[8]), 
		 -> STR_125(CODE[8]), STR_124(CODE[20]), STR_123(CODE[27]), STR_122(CODE[33]), 
		 -> STR_119(CODE[26]), STR_117(CODE[32]), STR_115(CODE[28]), STR_110(CODE[40]), 
		 -> STR_108(CODE[44]), STR_105(CODE[39]), STR_103(CODE[36]), STR_101(CODE[37]), 
		 -> STR_99(CODE[40]), STR_97(CODE[37]), STR_96(CODE[50]), STR_93(CODE[41]), 
		 -> STR_91(CODE[38]), STR_89(CODE[39]), STR_87(CODE[42]), STR_85(CODE[39]), 
		 -> STR_84(CODE[66]), STR_81(CODE[3]), STR_78(CODE[20]), STR_76(CODE[33]), 
		 -> STR_75(CODE[35]), STR_74(CODE[24]), STR_72(CODE[33]), STR_70(CODE[24]), 
		 -> STR_67(CODE[54]), STR_66(CODE[6]), STR_65(CODE[3]), STR_60(CODE[34]), 
		 -> STR_59(CODE[3]), STR_56(CODE[4]), wrkbuf(BANK1[80]), STR_51(CODE[15]), 
		 -> STR_49(CODE[33]), STR_47(CODE[24]), STR_43(CODE[6]), STR_39(CODE[18]), 
		 -> STR_38(CODE[6]), STR_36(CODE[33]), STR_35(CODE[6]), STR_27(CODE[24]), 
		 -> STR_26(CODE[18]), STR_25(CODE[20]), STR_24(CODE[25]), STR_23(CODE[22]), 
		 -> STR_22(CODE[19]), STR_21(CODE[20]), STR_20(CODE[20]), STR_18(CODE[6]), 
		 -> STR_16(CODE[6]), STR_14(CODE[6]), STR_12(CODE[6]), STR_10(CODE[6]), 
		 -> STR_8(CODE[6]), STR_6(CODE[31]), STR_4(CODE[29]), STR_3(CODE[55]), 
		 -> STR_2(CODE[53]), STR_1(CODE[37]), 

    sprintf$2148	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_255(CODE[17]), STR_254(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_192(CODE[3]), STR_191(CODE[7]), STR_185(CODE[3]), STR_184(CODE[7]), 
		 -> STR_181(CODE[4]), STR_180(CODE[8]), STR_177(CODE[4]), STR_176(CODE[8]), 
		 -> STR_173(CODE[4]), STR_172(CODE[8]), STR_169(CODE[4]), STR_168(CODE[8]), 
		 -> STR_165(CODE[4]), STR_164(CODE[7]), STR_161(CODE[4]), STR_160(CODE[7]), 
		 -> STR_157(CODE[4]), STR_156(CODE[7]), STR_153(CODE[4]), STR_152(CODE[7]), 
		 -> STR_147(CODE[3]), STR_146(CODE[7]), STR_144(CODE[3]), STR_143(CODE[7]), 
		 -> STR_141(CODE[3]), STR_140(CODE[7]), STR_138(CODE[3]), STR_137(CODE[7]), 
		 -> STR_135(CODE[3]), STR_134(CODE[7]), STR_132(CODE[3]), STR_131(CODE[7]), 
		 -> STR_80(CODE[3]), STR_79(CODE[7]), STR_64(CODE[3]), STR_63(CODE[7]), 
		 -> STR_62(CODE[3]), STR_61(CODE[7]), STR_58(CODE[3]), STR_57(CODE[7]), 
		 -> STR_55(CODE[3]), STR_54(CODE[7]), STR_53(CODE[3]), STR_52(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    ?_sprintf	int  size(2) Largest target is 4
		 -> ECANSendMessage@dataLen(COMRAM[1]), getVSCPFrame@id(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2128$_cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    hexStringToBytes@buf	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    hexStringToBytes@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    hexStringToBytes@inhex	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    crc8@crc	PTR unsigned char  size(2) Largest target is 1
		 -> calcCRC@crc(COMRAM[1]), sendReceiveEventVSCP@crc(COMRAM[1]), receivePrintEventCANAL@crc(BANK0[1]), sendVSCPDriverCommandReply@crc(COMRAM[1]), 
		 -> sendVSCPDriverNack@crc(COMRAM[1]), sendVSCPDriverAck@crc(COMRAM[1]), sendVSCPDriverErrorFrame@crc(COMRAM[1]), NULL(NULL[0]), 

    fifo_getFree@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    fifo_write@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    fifo_write@f	PTR struct . size(2) Largest target is 9
		 -> serialInputFifo(BANK1[8]), 

    fifo_write@buf	PTR const void  size(1) Largest target is 1
		 -> Interrupt@c(COMRAM[1]), 

    fifo_write@p	PTR const unsigned char  size(1) Largest target is 1
		 -> Interrupt@c(COMRAM[1]), 

    fifo_read@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    fifo_read@f	PTR struct . size(2) Largest target is 9
		 -> serialInputFifo(BANK1[8]), 

    fifo_read@buf	PTR void  size(2) Largest target is 1
		 -> doModeSLCAN@c(BANK0[1]), doModeVscp@c(COMRAM[1]), doModeVerbose@c(BANK2[1]), main@c(BANK0[1]), 

    fifo_read@p	PTR unsigned char  size(2) Largest target is 1
		 -> doModeSLCAN@c(BANK0[1]), doModeVscp@c(COMRAM[1]), doModeVerbose@c(BANK2[1]), main@c(BANK0[1]), 

    fifo_init@buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    fifo_init@f.buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    fifo_init@f	PTR struct . size(2) Largest target is 9
		 -> canInputFifo(BANK1[8]), serialInputFifo(BANK1[8]), 

    _ECANPointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(1) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), receivePrintEventSLCAN@id(BANK0[4]), receivePrintEventCANAL@id(BANK0[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(1) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), receivePrintEventSLCAN@id(BANK0[4]), receivePrintEventCANAL@id(BANK0[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), RXM1SIDH(ABS[1]), RXM0SIDH(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(1) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> receivePrintEventCANAL@data(BANK0[8]), vscpData(COMRAM[8]), 

    ECANReceiveMessage@id	PTR unsigned long  size(1) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), receivePrintEventSLCAN@id(BANK0[4]), receivePrintEventCANAL@id(BANK0[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(1) Largest target is 1
		 -> receivePrintEventSLCAN@dlc(BANK0[1]), receivePrintEventCANAL@dlc(BANK0[1]), vscpSize(BANK0[1]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    sp___ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E16333 size(1) Largest target is 1
		 -> getCANFrame@flags(BANK0[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(COMRAM[8]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    getCANFrame@pdlc	PTR unsigned char  size(1) Largest target is 1
		 -> receivePrintEventSLCAN@dlc(BANK0[1]), receivePrintEventCANAL@dlc(BANK0[1]), vscpSize(BANK0[1]), 

    getCANFrame@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> receivePrintEventCANAL@data(BANK0[8]), vscpData(COMRAM[8]), 

    getCANFrame@pid	PTR unsigned long  size(1) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), receivePrintEventSLCAN@id(BANK0[4]), receivePrintEventCANAL@id(BANK0[4]), 

    sendCANFrame@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(COMRAM[8]), 

    getVSCPFrame@pPriority	PTR unsigned char  size(1) Largest target is 1
		 -> vscpPriority(BANK0[1]), 

    getVSCPFrame@pvscpclass	PTR unsigned short  size(1) Largest target is 2
		 -> vscpClass(BANK0[2]), 

    getVSCPFrame@pvscptype	PTR unsigned char  size(1) Largest target is 1
		 -> vscpType(BANK0[1]), 

    getVSCPFrame@pNodeId	PTR unsigned char  size(1) Largest target is 1
		 -> vscpNodeId(BANK0[1]), 

    getVSCPFrame@pData	PTR unsigned char  size(1) Largest target is 8
		 -> vscpData(COMRAM[8]), 

    getVSCPFrame@pSize	PTR unsigned char  size(1) Largest target is 1
		 -> vscpSize(BANK0[1]), 

    sendVSCPFrame@pData	PTR unsigned char  size(1) Largest target is 8
		 -> vscpData(COMRAM[8]), 

    printMDF@p	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    printErrors$1420	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_192(CODE[3]), STR_191(CODE[7]), 

    printErrors$1411	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_185(CODE[3]), STR_184(CODE[7]), 

    printErrors$1405	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_181(CODE[4]), STR_180(CODE[8]), 

    printErrors$1399	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_177(CODE[4]), STR_176(CODE[8]), 

    printErrors$1393	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_173(CODE[4]), STR_172(CODE[8]), 

    printErrors$1387	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_169(CODE[4]), STR_168(CODE[8]), 

    printStatistics$1380	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_165(CODE[4]), STR_164(CODE[7]), 

    printStatistics$1374	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_161(CODE[4]), STR_160(CODE[7]), 

    printStatistics$1368	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_157(CODE[4]), STR_156(CODE[7]), 

    printStatistics$1362	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_153(CODE[4]), STR_152(CODE[7]), 

    calcCRC@p	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    writeRegisterExtended@value	PTR unsigned char  size(2) Largest target is 1
		 -> doModeVerbose@value_1171(BANK2[1]), 

    readRegisterExtended@value	PTR unsigned char  size(2) Largest target is 1
		 -> doModeVerbose@value(BANK2[1]), 

    readRegister@value	PTR unsigned char  size(1) Largest target is 1
		 -> printNodeFirmwareVersion@value(BANK0[1]), printMDF@value(BANK0[1]), printGUID@value(BANK0[1]), findNodes@value(BANK0[1]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> printFirmwareVersion@wrkbuf(BANK0[20]), printNodeFirmwareVersion@buf(BANK0[3]), printGUID@buf(BANK0[3]), wrkbuf(BANK1[80]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), 

    receivePrintEventVerbose$1305	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_147(CODE[3]), STR_146(CODE[7]), 

    receivePrintEventVerbose$1300	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_144(CODE[3]), STR_143(CODE[7]), 

    receivePrintEventVerbose$1295	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_141(CODE[3]), STR_140(CODE[7]), 

    receivePrintEventVerbose$1290	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_138(CODE[3]), STR_137(CODE[7]), 

    receivePrintEventVerbose$1285	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_135(CODE[3]), STR_134(CODE[7]), 

    receivePrintEventVerbose$1280	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_132(CODE[3]), STR_131(CODE[7]), 

    sendEscapedUartData@pcrc	PTR unsigned char  size(2) Largest target is 1
		 -> sendReceiveEventVSCP@crc(COMRAM[1]), receivePrintEventCANAL@crc(BANK0[1]), sendVSCPDriverCommandReply@crc(COMRAM[1]), sendVSCPDriverNack@crc(COMRAM[1]), 
		 -> sendVSCPDriverAck@crc(COMRAM[1]), sendVSCPDriverErrorFrame@crc(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> receiveVSCPModeCanalMsg@data(BANK0[8]), vscpData(COMRAM[8]), 

    doModeVerbose@p_1215	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose@p_1196	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose$1188	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_80(CODE[3]), STR_79(CODE[7]), 

    doModeVerbose@preg_1176	PTR unsigned char  size(2) Largest target is 80
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), NULL(NULL[0]), STR_29(CODE[2]), cmdbuf(BANK1[80]), 

    doModeVerbose@p_1172	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose$1163	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_64(CODE[3]), STR_63(CODE[7]), 

    doModeVerbose$1159	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_62(CODE[3]), STR_61(CODE[7]), 

    doModeVerbose$1153	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_58(CODE[3]), STR_57(CODE[7]), 

    doModeVerbose$1148	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_55(CODE[3]), STR_54(CODE[7]), 

    doModeVerbose$1136	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_53(CODE[3]), STR_52(CODE[7]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), NULL(NULL[0]), STR_29(CODE[2]), cmdbuf(BANK1[80]), 

    doModeVerbose@preg	PTR unsigned char  size(2) Largest target is 80
		 -> STR_104(CODE[2]), STR_102(CODE[2]), STR_100(CODE[2]), STR_98(CODE[2]), 
		 -> STR_95(CODE[2]), STR_92(CODE[2]), STR_90(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_83(CODE[2]), STR_73(CODE[2]), STR_71(CODE[2]), 
		 -> STR_69(CODE[2]), STR_50(CODE[2]), STR_48(CODE[2]), STR_46(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), NULL(NULL[0]), STR_29(CODE[2]), cmdbuf(BANK1[80]), 

    doModeVerbose@p_1124	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> cmdbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> wrkbuf(BANK1[80]), vscpData(COMRAM[8]), cmdbuf(BANK1[80]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    doModeVerbose@p	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    sp__stristr	PTR unsigned char  size(2) Largest target is 80
		 -> NULL(NULL[0]), cmdbuf(BANK1[80]), 

    canInputFifo.buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    S21$buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 

    serialInputFifo.buf	PTR unsigned char  size(2) Largest target is 494
		 -> caninputBuffer(BIGRAM[494]), inputBuffer(BANK2[128]), 


Critical Paths under _main in COMRAM

    _main->_doModeVscp
    _hexStringToBytes->_strlen
    _receivePrintEventSLCAN->_getCANFrame
    _receivePrintEventSLCAN->_itoa
    _ultoa->___llmod
    _sendVSCPDriverCommandReply->_sendEscapedUartData
    _sendVSCPDriverNack->_sendEscapedUartData
    _sendVSCPDriverAck->_sendEscapedUartData
    _sendVSCPDriverErrorFrame->_sendEscapedUartData
    _calcCRC->_crc8
    _receivePrintEventCANAL->_getCANFrame
    _sendEscapedUartData->_crc8
    _crc8->_init_crc8
    _doModeVerbose->_sendVSCPFrame
    _writeRegisterExtended->_sendVSCPFrame
    _printBinary->_WriteUSART
    _readRegisterExtended->_sendVSCPFrame
    _readRegister->_sendVSCPFrame
    _sendCANFrame->_ECANSendMessage
    _ECANSendMessage->__CANIDToRegs
    _printHelp->_putsUSART
    _atoi->___wmul
    _strtok->_strspn
    _strtok->_strcspn
    _strcspn->_strchr
    _strspn->_strchr
    _stristr->_strnicmp
    _strichr->_toupper
    _strnicmp->_strlen
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID
    _sprintf->___llmod
    ___llmod->___lldiv
    _printFirmwareVersion->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _printMode->_putsUSART
    _putsUSART->_WriteUSART
    _init->_WriteTimer0
    _ECANInitialize->_ECANSetOperationMode
    _vscp_restoreDefaults->_init_app_eeprom
    _init_app_eeprom->_writeEEPROM
    _init_app_ram->_readEEPROM

Critical Paths under _Interrupt in COMRAM

    _Interrupt->_fifo_write

Critical Paths under _main in BANK0

    _main->_doModeVerbose
    _doModeSLCAN->_sendCANFrame
    _receivePrintEventSLCAN->_ultoa
    _doModeVscp->_receiveVSCPModeCanalMsg
    _receiveVSCPModeCanalMsg->_sendCANFrame
    _receivePrintEventCANAL->_getCANFrame
    _doModeVerbose->_findNodes
    _writeRegisterExtended->_sendVSCPFrame
    _readRegisterExtended->_sendVSCPFrame
    _findNodes->_printNodeFirmwareVersion
    _findNodes->_printGUID
    _printMDF->_readRegister
    _printGUID->_readRegister
    _printNodeFirmwareVersion->_readRegister
    _readRegister->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _printErrors->_sprintf
    _printStatistics->_sprintf
    _receivePrintEventVerbose->_sprintf
    _getVSCPFrame->_getCANFrame
    _printFirmwareVersion->_itoa

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_doModeVerbose

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5  151409
                                            102 BANK0      7     2      5
                          _fifo_init
                          _init_crc8
                         _readEEPROM
               _vscp_restoreDefaults
                               _init
                          _putsUSART
               _printFirmwareVersion
                          _printMode
                          _fifo_read
                      _doModeVerbose
                         _doModeVscp
                        _doModeSLCAN
                     _doModeVscpNode
 ---------------------------------------------------------------------------------
 (1) _doModeVscpNode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doModeSLCAN                                         14    14      0   11716
                                             35 BANK0     14    14      0
                          _putsUSART
                          _fifo_read
                        _writeEEPROM
               _ECANSetOperationMode
                             _memset
             _receivePrintEventSLCAN
                             _strlen
                   _hexStringToBytes
                             _memcpy
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _hexStringToBytes                                    14     9      5     765
                                             28 COMRAM    14     9      5
                             _strlen
                     _nibbleFromChar
 ---------------------------------------------------------------------------------
 (3) _nibbleFromChar                                       1     1      0     279
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _receivePrintEventSLCAN                              10    10      0    6246
                                             13 BANK0     10    10      0
                          _putsUSART
                         _WriteUSART
                             _strlen
                        _getCANFrame
                              _ultoa
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _ultoa                                               13     5      8     910
                                              0 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (1) _doModeVscp                                           1     1      0   18794
                                             46 COMRAM     1     1      0
                          _fifo_read
               _ECANSetOperationMode
             _receivePrintEventCANAL
                            _calcCRC
           _sendVSCPDriverErrorFrame
                  _sendVSCPDriverAck
            _receiveVSCPModeCanalMsg
                 _sendVSCPDriverNack
         _sendVSCPDriverCommandReply
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverCommandReply                           3     2      1    2094
                                             39 COMRAM     3     2      1
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverNack                                   1     1      0    1926
                                             39 COMRAM     1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _receiveVSCPModeCanalMsg                             33    33      0    3260
                                             35 BANK0     33    33      0
                             _memcpy
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6     242
                                             24 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverAck                                    1     1      0    1926
                                             39 COMRAM     1     1      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _sendVSCPDriverErrorFrame                             2     2      0    2010
                                             39 COMRAM     2     2      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _calcCRC                                              5     2      3     882
                                             36 COMRAM     5     2      3
                               _crc8
 ---------------------------------------------------------------------------------
 (2) _receivePrintEventCANAL                              15    15      0    5694
                                              2 BANK0     15    15      0
                         _WriteUSART
                _sendEscapedUartData
                               _crc8
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _sendEscapedUartData                                  3     1      2    1014
                                             36 COMRAM     3     1      2
                         _WriteUSART
                               _crc8
 ---------------------------------------------------------------------------------
 (3) _crc8                                                 5     2      3     594
                                             31 COMRAM     5     2      3
                          _init_crc8
 ---------------------------------------------------------------------------------
 (4) _init_crc8                                            7     7      0     468
                                             24 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _doModeVerbose                                       81    81      0  116264
                                             82 BANK0     20    20      0
                                              0 BANK2     61    61      0
                          _putsUSART
               _printFirmwareVersion
                          _fifo_read
                        _writeEEPROM
           _receivePrintEventVerbose
                            _stristr
               _ECANSetOperationMode
                             _strtok
                               _atoi
                             _memset
                      _sendVSCPFrame
                    _printStatistics
                        _printErrors
                          _printHelp
                          _findNodes
                             _strcpy
                             _strchr
               _readRegisterExtended
                            _sprintf
                         _WriteUSART
                        _printBinary
              _writeRegisterExtended
           _printNodeFirmwareVersion
                          _printGUID
                           _printMDF
                          _setFilter
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (2) _setFilter                                           15    11      4    2182
                                             24 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _writeRegisterExtended                               12     5      7    6924
                                             62 BANK0     12     5      7
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _printBinary                                          5     5      0     222
                                             25 COMRAM     5     5      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _readRegisterExtended                                12     5      7    6840
                                             62 BANK0     12     5      7
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     109
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _findNodes                                            5     5      0   34601
                                             77 BANK0      5     5      0
                          _putsUSART
           _printNodeFirmwareVersion
                          _printGUID
                           _printMDF
                               _itoa
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _printMDF                                             5     5      0    7313
                                             71 BANK0      5     5      0
                          _putsUSART
                             _memset
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _printGUID                                            6     6      0    9342
                                             71 BANK0      6     6      0
                          _putsUSART
                             _memset
                             _strlen
                               _itoa
                       _readRegister
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _printNodeFirmwareVersion                             6     6      0    9122
                                             71 BANK0      6     6      0
                          _putsUSART
                             _memset
                               _itoa
                       _readRegister
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4     143
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         9     5      4    6672
                                             62 BANK0      9     5      4
                      _sendVSCPFrame
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (4) _sendVSCPFrame                                       31    24      7    3078
                                             43 COMRAM     4     4      0
                                             35 BANK0     27    20      7
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (2) _sendCANFrame                                         7     0      7    2778
                                             28 BANK0      7     0      7
                    _ECANSendMessage
 ---------------------------------------------------------------------------------
 (3) _ECANSendMessage                                     37    29      8    2652
                                             34 COMRAM     9     1      8
                                              0 BANK0     28    28      0
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (4) __CANIDToRegs                                        10     3      7     966
                                             24 COMRAM    10     3      7
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     137
                                             24 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _printHelp                                            0     0      0     126
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _printErrors                                         12    12      0    5537
                                             30 BANK0     12    12      0
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _printStatistics                                      8     8      0    5429
                                             30 BANK0      8     8      0
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     665
                                             30 COMRAM     7     5      2
                            _isdigit
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _strtok                                               4     0      4     799
                                             36 COMRAM     4     0      4
                             _strspn
                            _strcspn
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              6     2      4     257
                                             30 COMRAM     6     2      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strspn                                               6     2      4     257
                                             30 COMRAM     6     2      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4     124
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _stristr                                              4     0      4     898
                                             37 COMRAM     4     0      4
                             _strlen
                           _strnicmp
                            _strichr
 ---------------------------------------------------------------------------------
 (3) _strichr                                              4     0      4     257
                                             25 COMRAM     4     0      4
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _strnicmp                                             9     3      6     260
                                             28 COMRAM     9     3      6
                             _strlen (ARG)
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              1     1      0      96
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     130
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _receivePrintEventVerbose                            18    18      0    9017
                                             30 BANK0     18    18      0
                          _putsUSART
                            _sprintf
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (4) _getVSCPFrame                                        14     9      5    3342
                                              2 BANK0     14     9      5
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _getCANFrame                                          5     2      3    2748
                                             43 COMRAM     3     0      3
                                              0 BANK0      2     2      0
                 _ECANReceiveMessage
 ---------------------------------------------------------------------------------
 (4) _ECANReceiveMessage                                  12     8      4    2400
                                             31 COMRAM    12     8      4
                   __ECANPointBuffer
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (5) __RegsToCANID                                         7     3      4     954
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) __ECANPointBuffer                                     6     3      3     132
                                             24 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             30    22      8    5087
                                              0 BANK0     30    22      8
                            _isdigit
                            ___lldiv
                            ___llmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     232
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     232
                                             37 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     241
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fifo_read                                           14     8      6     612
                                             24 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (2) _printFirmwareVersion                                20    20      0    2068
                                              2 BANK0     20    20      0
                          _putsUSART
                         _WriteUSART
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1600
                                             40 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1280
                                             31 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     324
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     342
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _printMode                                            0     0      0     126
                          _putsUSART
 ---------------------------------------------------------------------------------
 (3) _putsUSART                                            4     2      2     126
                                             25 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      42
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     625
                        _WriteTimer0
                       _init_app_ram
                          _OpenUSART
                         _OpenTimer0
                     _ECANInitialize
 ---------------------------------------------------------------------------------
 (2) _ECANInitialize                                       0     0      0      84
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (2) _ECANSetOperationMode                                 1     1      0      84
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      62
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     310
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     104
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vscp_restoreDefaults                                 0     0      0     263
                       _init_app_ram
                    _init_app_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_app_eeprom                                      1     1      0     198
                                             27 COMRAM     1     1      0
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (2) _writeEEPROM                                          3     0      3      62
                                             24 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _init_app_ram                                         0     0      0      65
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (3) _readEEPROM                                           3     1      2      65
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _fifo_init                                            6     0      6     186
                                             24 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Interrupt                                            8     8      0     646
                                             16 COMRAM     8     8      0
                          _ReadUSART
                         _fifo_write
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i1_WriteTimer0                                       4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _fifo_write                                         16     9      7     378
                                              0 COMRAM    16     9      7
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fifo_init
   _init_crc8
   _readEEPROM
   _vscp_restoreDefaults
     _init_app_ram
       _readEEPROM
     _init_app_eeprom
       _writeEEPROM
   _init
     _WriteTimer0
     _init_app_ram
       _readEEPROM
     _OpenUSART
     _OpenTimer0
     _ECANInitialize
       _ECANSetOperationMode
   _putsUSART
     _WriteUSART
   _printFirmwareVersion
     _putsUSART
       _WriteUSART
     _WriteUSART
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _printMode
     _putsUSART
       _WriteUSART
   _fifo_read
   _doModeVerbose
     _putsUSART
       _WriteUSART
     _printFirmwareVersion
       _putsUSART
         _WriteUSART
       _WriteUSART
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _fifo_read
     _writeEEPROM
     _receivePrintEventVerbose
       _putsUSART
         _WriteUSART
       _sprintf
         _isdigit
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
       _getVSCPFrame
         _getCANFrame
           _ECANReceiveMessage
             __ECANPointBuffer
             __RegsToCANID
     _stristr
       _strlen
       _strnicmp
         _strlen (ARG)
         _toupper (ARG)
       _strichr
         _toupper
     _ECANSetOperationMode
     _strtok
       _strspn
         _strchr
       _strcspn
         _strchr
     _atoi
       _isdigit
       ___wmul
     _memset
     _sendVSCPFrame
       _sendCANFrame
         _ECANSendMessage
           __CANIDToRegs
     _printStatistics
       _putsUSART
         _WriteUSART
       _sprintf
         _isdigit
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
     _printErrors
       _putsUSART
         _WriteUSART
       _sprintf
         _isdigit
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
     _printHelp
       _putsUSART
         _WriteUSART
     _findNodes
       _putsUSART
         _WriteUSART
       _printNodeFirmwareVersion
         _putsUSART
           _WriteUSART
         _memset
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _readRegister
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
           _getVSCPFrame
             _getCANFrame
               _ECANReceiveMessage
                 __ECANPointBuffer
                 __RegsToCANID
         _strcat
       _printGUID
         _putsUSART
           _WriteUSART
         _memset
         _strlen
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _readRegister
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
           _getVSCPFrame
             _getCANFrame
               _ECANReceiveMessage
                 __ECANPointBuffer
                 __RegsToCANID
         _strcat
       _printMDF
         _putsUSART
           _WriteUSART
         _memset
         _readRegister
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
           _getVSCPFrame
             _getCANFrame
               _ECANReceiveMessage
                 __ECANPointBuffer
                 __RegsToCANID
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
         _getVSCPFrame
           _getCANFrame
             _ECANReceiveMessage
               __ECANPointBuffer
               __RegsToCANID
     _strcpy
     _strchr
     _readRegisterExtended
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
       _getVSCPFrame
         _getCANFrame
           _ECANReceiveMessage
             __ECANPointBuffer
             __RegsToCANID
     _sprintf
       _isdigit
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
     _WriteUSART
     _printBinary
       _WriteUSART
     _writeRegisterExtended
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
       _getVSCPFrame
         _getCANFrame
           _ECANReceiveMessage
             __ECANPointBuffer
             __RegsToCANID
     _printNodeFirmwareVersion
       _putsUSART
         _WriteUSART
       _memset
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
         _getVSCPFrame
           _getCANFrame
             _ECANReceiveMessage
               __ECANPointBuffer
               __RegsToCANID
       _strcat
     _printGUID
       _putsUSART
         _WriteUSART
       _memset
       _strlen
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _readRegister
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
         _getVSCPFrame
           _getCANFrame
             _ECANReceiveMessage
               __ECANPointBuffer
               __RegsToCANID
       _strcat
     _printMDF
       _putsUSART
         _WriteUSART
       _memset
       _readRegister
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
         _getVSCPFrame
           _getCANFrame
             _ECANReceiveMessage
               __ECANPointBuffer
               __RegsToCANID
     _setFilter
     __CANIDToRegs
   _doModeVscp
     _fifo_read
     _ECANSetOperationMode
     _receivePrintEventCANAL
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
       _getCANFrame
         _ECANReceiveMessage
           __ECANPointBuffer
           __RegsToCANID
     _calcCRC
       _crc8
         _init_crc8
     _sendVSCPDriverErrorFrame
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverAck
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _receiveVSCPModeCanalMsg
       _memcpy
       _sendCANFrame
         _ECANSendMessage
           __CANIDToRegs
     _sendVSCPDriverNack
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
     _sendVSCPDriverCommandReply
       _WriteUSART
       _sendEscapedUartData
         _WriteUSART
         _crc8
           _init_crc8
       _crc8
         _init_crc8
   _doModeSLCAN
     _putsUSART
       _WriteUSART
     _fifo_read
     _writeEEPROM
     _ECANSetOperationMode
     _memset
     _receivePrintEventSLCAN
       _putsUSART
         _WriteUSART
       _WriteUSART
       _strlen
       _getCANFrame
         _ECANReceiveMessage
           __ECANPointBuffer
           __RegsToCANID
       _ultoa
         ___lldiv
         ___llmod
           ___lldiv (ARG)
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _strlen
     _hexStringToBytes
       _strlen
       _nibbleFromChar
     _memcpy
     _sendCANFrame
       _ECANSendMessage
         __CANIDToRegs
   _doModeVscpNode

 _Interrupt (ROOT)
   _ReadUSART
   _fifo_write
   i1_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0     1EE      16       32.5%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0     100      10      100.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3D      BD       8       73.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D4       6       82.8%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6D      81       4       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2F      47       1       74.7%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       C       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      15        0.0%
DATA                 0      0     553      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Feb 20 16:47:55 2015

                 __end_of_doModeVerbose 6BA6                            printBinary@i 001D  
                           fifo_write@f 0001                             fifo_write@i 000D  
                           fifo_write@p 000C                   __end_of_sendVSCPFrame 2E30  
            doModeVerbose@filter_nodeid 0290                                      PL2 6BA6  
                                    PL4 2EE0                                      PL6 6BB4  
                                    PL8 6BC2                             __CFG_CPB$ON 000000  
                                    bsr 000FE0                     ___wmul@multiplicand 001B  
                           __CFG_BORV$3 000000                  __end_of_doModeVscpNode 1C9E  
                                   PL10 6C0C                                     PL20 596C  
                                   PL12 593E                                     PL30 6C42  
                                   PL22 3798                                     PL14 3BD6  
                                   PL40 6C76                                     PL32 396C  
                                   PL24 321C                                     PL16 6C28  
                                   PL50 59AC                                     PL42 6C90  
                                   PL34 6C56                                     PL26 2F9C  
                                   PL18 595C                                     PL60 29A8  
                                   PL52 6CAA                                     PL44 5992  
                                   PL36 6C68                                     PL28 3698  
                                   PL70 3AB8                                     PL62 59C2  
                                   PL54 3990                                     PL46 322C  
                                   PL38 3A84                             __CFG_LVP$ON 000000  
                                   PL80 59E4                                     PL72 35A6  
                                   PL64 3A92                                     PL56 4484  
                                   PL48 3980                                     PL90 4A06  
                                   PL82 52B2                                     PL74 39A2  
                                   PL66 59D0                                     PL58 6CC2  
                                   PL92 2064                                     PL84 59F6  
                                   PL76 3898                                     PL68 3AA6  
                                   PL94 3D3E                                     PL86 1E4A  
                                   PL78 3ACC                                     PL96 39B6  
                                   PL88 461E                                     PL98 5A00  
               sendEscapedUartData@pcrc 0025                 receivePrintEventCANAL@i 006A  
                           __CFG_WDT$ON 000000                                     l503 60FA  
                                   l512 6180                                     l531 6246  
                                   l523 621C                                     l507 6266  
                                   l381 3E50                                     l526 6226  
                                   l374 3DE2                                     l375 3E20  
                                   l800 2E96                                     l705 51EC  
                                   l722 257C                                     l378 3E3A  
                                   l539 62BA                                     l731 25BE  
                                   l803 2EAC                                     l379 3E44  
                                   l740 3178                                     l628 4482  
                                   l901 3D32                                     l821 35D4  
                                   l718 255C                                     l734 3164  
                                   l806 2ECC                                     l830 3632  
                                   l670 52B0                                     l727 259E  
                                   l743 3190                                     l815 35C0  
                                   l904 3D3C                                     l752 3208  
                                   l824 35EC                                     l680 4FE4  
                                   l737 316E                                     l761 2CC0  
                                   l809 2ED6                                     l833 364A  
                                   l498 6BA4                                     l746 31BC  
                                   l770 2CF8                                     l842 368E  
                                   l818 35CA                                     l755 3212  
                                   l827 361A                                     l764 2CCA  
                                   l836 3662                                     l749 31D4  
                                   l773 2D26                                     l941 4544  
                                   l933 44D8                                     l782 2D6A  
                                   l871 4BE6                                     l767 2CD4  
                                   l791 2E3C                                     l839 3684  
                                   l776 2D3E                                     l960 461C  
                                   l794 2E46                                     l954 45F2  
                                   l938 450A                                     l971 2CBC  
                                   l883 3C3C                                     l779 2D60  
                                   l947 4590                                     l980 315C  
                                   l892 3C6C                                     l788 2E32  
                                   l797 2E6A                                     l957 4612  
                                   l878 4C76                                     l886 3C46  
                                   l879 4C88                                     l968 2C4A  
                                   l977 30D0                                     l889 3C50  
                                   l898 3D28                                     l995 3280  
                                   l998 330E                          getVSCPFrame@id 006C  
                         fifo_write@buf 0003                   ?_vscp_restoreDefaults 0001  
                  __size_of_WriteTimer0 0012                                     _pos 00D8  
        __size_of_writeRegisterExtended 00DA                                     wreg 000FE8  
         __end_of_writeRegisterExtended 3310                 receivePrintEventSLCAN@i 0071  
              receivePrintEventCANAL@id 006C                                    l1014 21A2  
                                  l1120 2976                                    l1018 21AE  
                                  l1140 46B2                                    l1117 2950  
                                  l1141 46C4                                    l1150 4766  
                                  l1142 46D6                                    l1127 2626  
                                  l1151 4778                                    l1143 46E8  
                                  l1400 3A82                                    l1152 478A  
                                  l1144 46FA                                    l1073 4F22  
                                  l1065 4E9A                                    l1153 479C  
                                  l1145 470C                                    l2210 2BF4  
                                  l1154 47AE                                    l1146 471E  
                                  l1138 46A0                                    l1171 1E20  
                                  l1163 289A                                    l1147 4730  
                                  l1155 4806                                    l1172 1E26  
                                  l1148 4742                                    l1421 2F7A  
                                  l1405 2714                                    l1341 4008  
                                  l1333 3F68                                    l1149 4754  
                                  l1335 3F86                                    l1167 1F3A  
                                  l1079 3402                                    l1424 2F9A  
                                  l2241 2696                                    l1361 48B0  
                                  l1353 4A04                                    l1346 4840  
                                  l2251 240E                                    l1363 48C4  
                                  l2324 2204                                    l1620 5740  
                                  l1356 490E                                    l1365 48D8  
                                  l1357 488E                                    l2309 3582  
                                  l2334 1FAC                                    l2430 2A3E  
                                  l1470 24F0                                    l1615 56FA  
                                  l1367 48E8                                    l1359 489C  
                                  l2415 2480                                    l1456 1D94  
                                  l1472 24F8                                    l1713 233A  
                                  l1617 5720                                    l1609 56B8  
                                  l1545 5422                                    l1529 52DC  
                                  l1377 4972                                    l1369 48F8  
                                  l1714 233C                                    l1618 5724  
                                  l1562 5432                                    l1546 53D2  
                                  l1378 498C                                    l1715 2346  
                                  l2427 2A46                                    l1395 396A  
                                  l1716 2348                                    l1636 57CA  
                                  l1709 2326                                    l1581 5556  
                                  l1565 5466                                    l2429 2A3A  
                                  l1493 2B0E                                    l1718 2360  
                                  l1726 225C                                    l1566 546A  
                                  l2454 2174                                    l1478 2550  
                                  l1494 2B74                                    l2463 1FF2  
                                  l2375 2362                                    l1488 2030  
                                  l2377 23BC                                    l2473 2130  
                                  l1676 1D54                                    l2396 2794  
                                  l1677 1D56                                    l1934 378E  
                                  l2399 2790                                    l1935 3796  
                                  STR_1 7653                                    STR_2 71B1  
                                  STR_3 70D9                                    STR_4 782B  
                                  STR_5 7CD0                                    STR_6 77ED  
                                  STR_7 7CB7                                    STR_8 7C80  
                                  STR_9 7C5E                                    _PEIE 007F96  
                        sendCANFrame@id 007C                                    _RCIE 007CED  
                                  _RCIF 007CF5                                    _RCIP 007CFD  
                      ??_ECANInitialize 001A                                    _bDLE 003B  
                                  ___IT 000101              __end_of_sendVSCPDriverNack 2EE0  
                                  _bHex 00D3            doModeVerbose@filter_priority 028E  
                                  _crc8 1E92                                    _atoi 36A8  
                                  _main 3D4C                                    _init 20B2  
                                  _mode 00D7                                    _itoa 1E5A  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                                    _utoa 2B76  
                   i1WriteTimer0@timer0 0001                                    prodh 000FF4  
                                  prodl 000FF3                                    start 01A8  
                          _sprintf$2141 006C                            _sprintf$2142 006E  
                          _sprintf$2148 0070                             _writeEEPROM 1D78  
             ECANReceiveMessage@dataLen 0022                      doModeVerbose@count 02AB  
                 getVSCPFrame@pPriority 0064                          _caninputBuffer 0400  
                    doModeVerbose@value 02B1                    __end_of_getVSCPFrame 289C  
                      __RegsToCANID@val 001B                        __RegsToCANID@ptr 0019  
                  __size_of_getCANFrame 0030                ?_receiveVSCPModeCanalMsg 0001  
              receivePrintEventSLCAN@id 0073                         ?_doModeVscpNode 0001  
                                 l11110 5482                                   l11200 5604  
                                 l11120 54B0                                   l11104 5470  
                                 l11040 52F2                                   l11202 5608  
                                 l11130 54D2                                   l11034 52E6  
                                 l12010 22BE                                   l10412 2328  
                                 l10404 231A                                   l11124 54B6  
                                 l11108 5476                                   l11116 549A  
                                 l11140 5510                                   l11052 5330  
                                 l11060 5378                                   l11036 52EA  
                                 l11044 52F8                                   l11028 52C4  
                                 l12012 22CC                                   l11222 5668  
                                 l11134 54DE                                   l11126 54C4  
                                 l11038 52EE                                   l12014 22D4  
                                 l11312 57EC                                   l11232 5698  
                                 l11216 563C                                   l11080 53D8  
                                 l12008 22BA                                   l13000 6316  
                                 _B0CON 000E20                                   l11330 5828  
                                 l11314 57F2                                   l11250 56FE  
                                 l11226 5686                                   l11218 564E  
                                 l11162 5560                                   l11090 5430  
                                 l11138 54E4                                   l11332 587E  
                                 l11324 5814                                   l11308 57DA  
                                 l11244 56D6                                   l11172 5594  
                                 l11148 5520                                   l11092 5436  
                                 l11084 540E                                   l11068 53A0  
                                 l13020 63A0                                   l11342 58C4  
                                 l11238 56BC                                   l11174 5598  
                                 l11166 557E                                   l11086 5428  
                                 l13102 661C                                   l13030 6418  
                                 l13006 6332                                   l11352 58FE  
                                 l11264 5750                                   l11280 5784  
                                 l11088 542C                                   l13112 6656  
                                 l13040 6466                                   l13032 642C  
                                 l13024 63AE                                   l13008 6342  
                                 l12304 202E                                   _B1CON 000E30  
                                 l10554 28F4                                   l11346 58DE  
                                 l11338 58A0                                   l11274 5770  
                                 l11258 573A                                   l11186 55CC  
                                 l11098 544E                                   l11362 5928  
                                 l10706 29FC                                   l10730 3720  
                                 l13210 68D8                                   l13202 6882  
                                 l13122 668E                                   l13106 662A  
                                 l13050 64B6                                   l12316 1D70  
                                 l11356 5920                                   l11348 58F0  
                                 l11292 57AA                                   l11188 55D0  
                                 l11364 5930                                   l10716 36AA  
                                 l11532 47C0                                   l13212 68E8  
                                 l13132 66C6                                   l13116 6664  
                                 l13044 6474                                   l13036 643A  
                                 l10566 290E                                   l10734 3758  
                                 l10726 3704                                   l10718 36AE  
                                 l10742 1DA8                                   l14110 306A  
                                 l14014 313A                                   l13126 669C  
                                 l13142 672C                                   l13062 6524  
                                 l12360 265A                                   l11288 57A0  
                                 l12432 245A                                   l10728 371A  
                                 l14104 3036                                   l14016 315A  
                                 l13232 69A6                                   l13224 6968  
                                 l13136 66D4                                   l13048 64A8  
                                 _B2CON 000E40                                   l14026 1CEA  
                                 l11298 57B2                                   l12442 1FC2  
                                 l10682 2758                                   l10746 1DB8  
                                 l14106 304C                                   l14042 21B8  
                                 l14034 2188                                   l13242 69FC  
                                 l13162 67A0                                   l13402 4434  
                                 l13314 4366                                   l12356 264A  
                                 l12380 23DE                                   l12436 2466  
                                 l12428 2422                                   l10684 277E  
                                 l13260 6A90                                   l13244 6A0C  
                                 l13172 67D8                                   l13092 65E4  
                                 l13076 657E                                   l13420 447A  
                                 l12358 2656                                   l11822 1F46  
                                 l12438 246E                                   l12446 1FDE  
                                 l10678 2720                                   l12462 20FC  
                                 l12470 2140                                   l14142 3874  
                                 l14134 3838                                   l14126 37D2  
                                 l13182 6812                                   l13158 6792  
                                 l13414 4464                                   l13318 436C  
                                 l12550 3E76                                   l12534 3E4C  
                                 l12526 3E36                                   l12368 2688  
                                 l12384 2400                                   l12376 23CE  
                                 l11824 1F4A                                   l12456 1D02  
                                 l12448 1FE2                                   l12464 2104  
                                 l12472 2148                                   l10696 29C4  
                                 l14136 3840                                   l14160 2A7E  
                                 l13280 6B48                                   l13248 6A32  
                                 l13192 684A                                   l13168 67CA  
                                 l13096 65F2                                   l12800 5CF4  
                                 l14240 3CFE                                   l13408 444C  
                                 l13360 43C4                                   l13328 4382  
                                 l13336 438C                                   l13352 43A0  
                                 l13424 4480                                   l12296 201C  
                                 l12288 200A                                   l13512 5176  
                                 l13504 50E8                                   _B3CON 000E50  
                                 l12378 23DA                                   l14138 3856  
                                 l14170 2ABA                                   l14082 32EC  
                                 l13178 6804                                   l12810 5D48  
                                 l13418 4474                                   l13362 43CA  
                                 l13522 519C                                   l13450 4F96  
                                 l12554 3E80                                   l12546 3E6A  
                                 l13700 4B50                                   l10980 238C  
                                 l14164 2AA4                                   l10972 1DD4  
                                 l14084 330C                                   l13284 6B6C  
                                 l13268 6ACE                                   l13276 6B0C  
                                 l13188 683C                                   l12708 5A5A  
                                 l13292 6BA2                                   l12580 2508  
                                 l14244 3D18                                   l14260 1EF8  
                                 l13364 43D0                                   l11844 2B60  
                                 l13444 4F70                                   l12548 3E70  
                                 l12670 261A                                   l12662 25F2  
                                 l14166 2AAC                                   l10974 1DDC  
                                 l13286 6B7A                                   l13198 6874  
                                 l12902 60A4                                   l12822 5DA8  
                                 l12750 5BA0                                   l12742 5B66  
                                 l12734 5B2A                                   l12726 5AEE  
                                 l12718 5AB4                                   l13390 4406  
                                 l13374 43E2                                   l11838 2B1C  
                                 l13542 51F2                                   l13534 51D2  
                                 l13462 4FDE                                   l13550 521C  
                                 l12558 3E8C                                   l12494 3DA6  
                                 l13712 4B9C                                   l13800 4268  
                                 l14600 3EF0                                   l12904 60B8  
                                 l12816 5D7A                                   l13288 6B86  
                                 l14256 1ED0                                   l13376 43E8  
                                 l13544 5204                                   l13456 4FBA  
                                 l13448 4F92                                   l13552 5272  
                                 _B4CON 000E60                                   l12666 2606  
                                 l12658 25E0                                   l12674 2EFE  
                                 l14186 38F8                                   l14098 2FEA  
                                 l12834 5E04                                   l12578 2502  
                                 l13298 431A                                   l11938 34E4  
                                 l14434 459A                                   l14426 4558  
                                 l13466 4FEE                                   l13562 52AE  
                                 l14532 1E1C                                   l13740 4C6A  
                                 l13900 4E8A                                   l12908 60C8  
                                 l12860 5F04                                   l12852 5EBA  
                                 l12844 5E5E                                   l12828 5DD6  
                                 l12764 5C10                                   l13396 441C  
                                 l11948 3528                                   l13556 5286  
                                 l12686 2F84                                   l14518 283C  
                                 l13726 4BF2                                   l13814 42CA  
                                 l14606 3F02                                   l12950 61E8  
                                 l12926 614C                                   l12918 6102  
                                 l12870 5F68                                   l12862 5F14  
                                 l12846 5E68                                   l12838 5E2A  
                                 l12854 5ECA                                   l12790 5CB8  
                                 l12782 5C8C                                   l12774 5C54  
                                 l12758 5BDA                                   l12694 5A14  
                                 l14470 20A0                                   l14438 45AE  
                                 l13558 5292                                   l13478 501E  
                                 l13752 1D12                                   l12688 2F88  
                                 l14704 487C                                   l13736 4C5E  
                                 l13664 4A6A                                   l13920 4F02  
                                 l14640 3FB8                                   l14480 1F38  
                                 l14464 2084                                   l13488 5046  
                                 _B5CON 000E70                                   l14810 26AE  
                                 l13738 4C62                                   l13746 4C86  
                                 l13842 4D06                                   l14634 3F88  
                                 l14618 3F2C                                   l12938 619A  
                                 l12874 5F9E                                   l12866 5F3E  
                                 l12794 5CCE                                   l12786 5CA2  
                                 l12778 5C74                                   l14556 1E76  
                                 l14820 26DE                                   l14812 26B6  
                                 l13676 4AB6                                   l13772 41A4  
                                 l13924 4F12                                   l13908 4EB4  
                                 l13828 4CA4                                   l14628 3F6C  
                                 l14660 3FFE                                   l12964 6240  
                                 l12892 602A                                   l14822 26E4  
                                 l14814 26C0                                   l13870 4DCA  
                                 l14654 3FF8                                   l12990 62D4  
                                 l12878 5FC8                                   l12798 5CE4  
                                 l14904 21FA                                   l14920 1FA2  
                                 l14912 1F84                                   l14824 26EA  
                                 l14816 26CA                                   l14680 482E  
                                 l13688 4B04                                   l13856 4D68  
                                 l14648 3FD6                                   l12896 603A  
                                 l14914 1F8C                                   l14818 26D4  
                                 l14842 3A1E                                   l14690 4858  
                                 l13786 4206                                   l14658 3FFC  
                                 l14586 2C9A                                   l12978 6286  
                                 l14916 1F90                                   l14828 26F6  
                                 l14748 4922                                   l13884 4E2C  
                                 l14588 2CBA                                   l13948 3436  
                                 l14758 4942                                   l13966 349A  
                                 l12998 6312                                   ?_crc8 0020  
                                 l14784 49BA                                   l14792 49D8  
                                 l14776 498E                                   l14696 486E  
                                 l13896 4E7A                                   l14858 2B7E  
                                 l14698 4878                                   l14892 21D4  
                                 l14868 2BB6                                   l14894 21DC  
                                 l14798 49EE                                   l14896 21E0  
                  __size_of_doModeSLCAN 038E                      writeEEPROM@address 0019  
                                 ?_atoi 001F                                   ?_main 00C6  
                                 ?_init 0001                                   ?_itoa 0029  
                         i1_WriteTimer0 1CA6                                   _EEADR 000FA9  
                                 STR_10 7C80                                   STR_11 7C92  
                                 STR_12 7C80                                   STR_20 7A83  
                                 STR_13 7BCD                                   STR_21 7A97  
                                 STR_14 7C80                                   STR_30 7CF5  
                                 STR_22 7AD3                                   STR_31 7CF5  
                                 STR_15 7C50                                   STR_23 7A06  
                                 STR_16 7C80                                   STR_32 7CF5  
                                 STR_40 7CCB                                   STR_24 78CF  
                                 STR_33 7CF5                                   STR_41 7CD9  
                                 STR_17 7C0E                                   STR_25 7A6F  
                                 STR_18 7C80                                   STR_50 7C2B  
                                 STR_34 7CF5                                   STR_42 7CC6  
                                 STR_26 7AE6                                   STR_43 7C80  
                                 STR_35 7C80                                   STR_19 7C49  
                                 STR_51 7B5E                                   STR_27 7949  
                                 STR_28 7CEB                                   STR_44 7CA3  
                                 STR_52 7C65                                   STR_36 7749  
                                 STR_60 7706                                   STR_61 7C65  
                                 STR_29 7CF5                                   STR_53 7CEE  
                                 STR_37 7CE8                                   STR_45 7CA8  
                                 STR_38 7C80                                   STR_70 7931  
                                 STR_46 7C2B                                   STR_54 7C65  
                                 STR_62 7CEE                                   STR_71 7C2B  
                                 STR_63 7C65                                   STR_55 7CEE  
                                 STR_39 7AF8                                   STR_47 7931  
                                 STR_72 77AC                                   STR_48 7C2B  
                                 STR_56 7BEA                                   STR_80 7CEE  
                                 STR_64 7CEE                                   STR_81 71AE  
                                 STR_65 71AE                                   STR_73 7C2B  
                                 STR_57 7C65                                   STR_49 77AC  
                                 STR_66 7C80                                   STR_90 7CF5  
                                 STR_58 7CEE                                   STR_82 7C57  
                                 STR_74 7961                                   STR_59 71AE  
                                 STR_83 7CF5                                   STR_75 76C1  
                                 STR_91 7608                                   STR_67 7146  
                                 STR_92 7CF5                                   STR_68 7CAD  
                                 STR_76 778B                                   STR_84 6F40  
                                 STR_69 7C2B                                   STR_77 7CBC  
                                 STR_85 751E                                   STR_93 747D  
                                 STR_86 7CF5                                   STR_94 7CB2  
                                 STR_78 7AAB                                   STR_95 7CF5  
                                 STR_79 7C65                                   STR_87 7453  
                                 STR_88 7CF5                                   STR_96 724D  
                                 STR_97 762E                                   STR_89 75BA  
                                 STR_98 7CF5                                   STR_99 74CE  
          __end_of_printFirmwareVersion 29A8                                   _BSEL0 000DF8  
                       __end_of___lldiv 26A8                                   ?_utoa 0020  
                       __end_of_calcCRC 1F02                                   _T0CON 000FD5  
                       __end_of___llmod 2420                                   u20075 39E6  
                                 u20085 39F6                                   u13310 3716  
                                 u20095 3A22                                   u13330 3744  
                                 u13250 36CA                                   u13340 376A  
                                 u13317 3710                                   u20197 3DB6  
                                 u13270 36E0                                   _LATC1 007C59  
                                 u13337 373E                                   u13257 36C4  
                                 u13610 237E                                   u13290 36FC  
                                 u13347 3764                                   u13277 36DA  
                                 u13630 23B4                                   u15240 1F66  
                                 u13617 2378                                   u13297 36F6  
                                 u13637 23AE                                   u17005 5F88  
                                 u15247 1F60                                   u17015 5FBE  
                                 u18000 50B4                                   u14625 4644  
                                 u17025 5FE8                                   u14626 464A  
                                 u18010 50BE                                   u14635 4678  
                                 u14627 4658                                   u14636 467E  
                                 u18020 50C8                                   u14637 468C  
                                 u18005 50B2                                   u18015 50BC  
                                 u18025 50C6                                   u15570 22FC  
                                 u17315 659C                                   u17235 6362  
                                 u16540 227C                                   u16550 22A8  
                                 u15577 22F2                                   u17505 6986  
                                 u16705 5A94                                   u16547 2276  
                                 u16715 5AD4                                   u16557 22A2  
                                 u18245 2DB0                                   u16725 5B0E  
                                 u19125 334C                                   u17295 64D4  
                                 u16735 5B4A                                   u17385 6BCA  
                                 u16745 5B86                         __end_of___lwdiv 220E  
                                 u17395 674A                                   u16755 5BC0  
                                 u17485 6906                                   u16765 5BFA  
                                 u17495 6946                                   u16775 5C30  
                                 u16875 5D14                                   u16965 5EEA  
                                 u19550 288E                                   u16985 5F34  
                                 u18594 2198                                   u19555 2884  
                                 u18595 2194                                   u16995 5F5E  
                                 u19805 4836                                   u18845 38D2  
                                 u19807 4838                                   u18855 38E2  
                          _vscpPriority 00DD                                   i1l401 0084  
                                 u18865 3900                                   i1l403 0180  
                                 i1l412 017E                                   i1l406 017E  
                                 i1l415 016E                         __end_of___lwmod 1FB6  
                                 i1l419 018A                         sendCANFrame@dlc 0080  
                                 _MSEL0 000DF0                                   _MSEL1 000DF1  
                                 _MSEL2 000DF2                                   _RCREG 000FAE  
                                 _IRXIF 007D27                                   _RCSTA 000FAB  
                      printBinary@value 001C                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _SPBRG 000FAF  
              writeRegisterExtended@reg 00A0                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                          __CFG_EBTR0$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                                   _bOpen 00D5  
               readRegisterExtended@reg 00A0                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                        _hexStringToBytes 2ADC  
                                 crc8@m 0022                         __end_of_dpowers 6D30  
                       __end_of_isdigit 1D78                                   _timer 0118  
                                 atoi@a 0024                                   atoi@s 001F  
                                 main@c 00CC                                   _ultoa 34D4  
                            Interrupt@c 0018              ??_printNodeFirmwareVersion 0030  
                      _printErrors$1411 0086                        _printErrors$1420 0088  
                      _printErrors$1405 0084                        _printErrors$1393 0080  
                                 tablat 000FF5                        _printErrors$1387 007E  
                      _printErrors$1399 0082             __end_of_sendEscapedUartData 25C0  
                                 plusw2 000FDB                                   utoa@c 0028  
                                 utoa@v 0026                                   status 000FD8  
               ?_receivePrintEventCANAL 0001                         __end_of_sprintf 593E  
                       __end_of_strichr 1FF4                         __end_of_strcspn 217E  
                       __end_of_toupper 1D06                         __end_of_stristr 2796  
               ?_receivePrintEventSLCAN 0001       __size_of_receivePrintEventVerbose 0276  
                   doModeVerbose@i_1118 02B0               ?_receivePrintEventVerbose 0001  
                   doModeVerbose@p_1124 02B2                     doModeVerbose@p_1215 02BB  
                   doModeVerbose@p_1172 02B4                     doModeVerbose@p_1196 02B9  
                        WriteUSART@data 0019                    _ECANSetOperationMode 1D06  
                          _canInputFifo 01C4                         __initialization 2482  
                doModeVerbose@page_1169 02A1                            __end_of_crc8 1ECA  
                          __end_of_atoi 3798                            __end_of_main 3E98  
                          __end_of_init 20F6                            __end_of_itoa 1E92  
                          __end_of_utoa 2C16                     doModeVerbose@ifmode 02B6  
                   doModeVerbose@maskno 02A8                     doModeVerbose@nodeid 028C  
                         doModeSLCAN@id 008A                          __CFG_OSC$HSPLL 000000  
                         doModeSLCAN@rv 0090                       ??_ECANSendMessage 002B  
                        ?i1_WriteTimer0 0001              writeRegisterExtended@value 00A3  
                                ??_crc8 0023                   getVSCPFrame@pvscptype 0062  
                                ??_atoi 0021                  ??_vscp_restoreDefaults 001D  
                                ??_main 00CB                       readRegister@value 00A1  
                                ??_init 001D                                  ??_itoa 002F  
                                ??_utoa 0026                  doModeVerbose@mask_type 0292  
                         __activetblptr 000002                         _stateVscpDriver 003F  
                     __RegsToCANID@type 001C                    _can_transmitOverruns 0104  
            ECANReceiveMessage@msgFlags 0023                           ?_readRegister 009E  
             __size_of__ECANPointBuffer 0076                                  _B0TXEN 006FC2  
                                _B1TXEN 006FC3                                  _B2TXEN 006FC4  
                doModeVerbose@preg_1176 0286                                  _B3TXEN 006FC5  
                                _B4TXEN 006FC6                                  _B5TXEN 006FC7  
           readRegisterExtended@timeout 00A1              ECANReceiveMessage@savedPtr 0025  
                                _CANCON 000F6F                        ___llmod@dividend 0026  
                                STR_100 7CF5                                  STR_101 7678  
                                STR_102 7CF5                                  STR_110 74F6  
                                STR_111 7B87                                  STR_103 769D  
                                STR_104 7CF5                                  STR_120 7BEE  
                                STR_112 7BBB                                  STR_200 73FB  
                                STR_121 7C8C                                  STR_113 7C86  
                                STR_105 7593                                  STR_201 73A1  
                                STR_106 7C9E                                  STR_130 7C42  
                                STR_114 7BFE                                  STR_122 776A  
                                STR_210 7728                                  STR_202 721A  
                                STR_131 7C65                                  STR_107 7CDD  
                                STR_123 787F                                  STR_115 7848  
                                STR_211 7545                                  STR_203 727F  
                                STR_140 7C65                                  STR_132 7CEE  
                                STR_116 7CC1                                  STR_124 7A5B  
                                STR_204 780C                                  STR_212 74A6  
                                STR_108 7427                                  STR_220 6DEB  
                                STR_141 7CEE                                  STR_109 7C06  
                                STR_133 7BF6                                  STR_125 7BD6  
                                STR_117 77CD                                  STR_221 76E4  
                                STR_213 7372                                  STR_205 72B1  
                                STR_150 7CD5                                  STR_118 7C98  
                                STR_134 7C6C                                  STR_142 7C3B  
                                STR_126 7BDE                                  STR_230 789A  
                                STR_206 73CF                                  STR_222 7343  
                                STR_214 6E32                                  STR_231 71AE  
                                STR_143 7C65                                  STR_135 7CEE  
                                STR_127 7C7A                                  STR_151 7B0A  
                                STR_207 7901                                  STR_119 78B5  
                                STR_223 7314                                  STR_215 6EFD  
                                STR_240 71AE                                  STR_232 6E77  
                                STR_160 7C73                                  STR_144 7CEE  
                                STR_128 7CF3                                  STR_152 7C73  
                                STR_136 7C34                                  STR_208 7033  
                                STR_224 6EBA                                  STR_216 6D9E  
                                STR_137 7C65                                  STR_161 7CE1  
                                STR_129 7CF1                                  STR_153 7CE1  
                                STR_145 7C2D                                  STR_233 7B4F  
                                STR_241 7ABF                                  STR_209 79C1  
                                STR_217 7919                                  STR_225 72E3  
                                STR_170 71AE                                  STR_162 71AE  
                                STR_154 71AE                                  STR_146 7C65  
                                STR_138 7CEE                                  STR_242 7CFD  
                                STR_234 7BE6                                  STR_250 7BB1  
                                STR_226 70A2                                  STR_218 6D50  
                                STR_147 7CEE                                  STR_235 7CF9  
                                STR_243 7CF7                                  STR_139 7BC4  
                                STR_251 7BA7                                  STR_155 7B3E  
                                STR_219 7A47                                  STR_163 7A32  
                                STR_171 79A9                                  STR_227 6F82  
                                STR_244 71AE                                  STR_148 7CF5  
                                STR_164 7C73                                  STR_156 7C73  
                                STR_180 7C16                                  STR_172 7C16  
                                STR_236 7CE5                                  STR_252 79EF  
                                STR_228 75E1                                  STR_253 71AE  
                                STR_181 7CE1                                  STR_173 7CE1  
                                STR_165 7CE1                                  STR_157 7CE1  
                                STR_237 7CFB                                  STR_245 7B9D  
                                STR_149 7B92                                  STR_229 6E77  
                                _EEDATA 000FA8                                  STR_246 71AE  
                                STR_238 71AE                                  STR_182 71AE  
                                STR_174 71AE                                  STR_166 71AE  
                                STR_158 71AE                                  STR_254 7B1C  
                                STR_190 7979                                  STR_191 7C65  
                                STR_247 7C26                                  STR_239 7B6D  
                                STR_255 7B2D                                  STR_159 7A1C  
                                STR_167 79D8                                  STR_175 7991  
                                STR_183 78E8                                  STR_184 7C65  
                                STR_176 7C16                                  STR_192 7CEE  
                                STR_248 7C1E                                  STR_168 7C16  
                                STR_193 71AE                                  STR_185 7CEE  
                                STR_177 7CE1                                  STR_169 7CE1  
                                STR_249 7B7B                                  STR_186 71AE  
                                STR_178 71AE                                  STR_194 706B  
                                STR_179 7991                                  STR_195 7110  
                                STR_187 6FC0                                  STR_196 71E6  
                                STR_188 717C                                  STR_197 756C  
                                STR_189 6FFA                                  STR_198 6E93  
                                STR_199 7864                                  _EECON2 000FA7  
          __end_of_readRegisterExtended 315E                                  _CIOCON 000F73  
                       __CFG_BBSIZ$2048 000000                                  ?_ultoa 0060  
          ??_sendVSCPDriverCommandReply 0029                                  i1l1432 3B1E  
                                i1l1433 3BD4                           ?_init_app_ram 0001  
                                _MDSEL0 007BBE                                  _MDSEL1 007BBF  
                                i1l1739 1D2C                                  i1l7100 3AEC  
                                i1l7120 3BBA                                  i1l7108 3B28  
                                i1l7118 3BB0                              _OpenTimer0 1D3C  
        __end_of_receivePrintEventCANAL 3D3E                                  i1l9220 003C  
                                i1l9230 00B0                                  i1l9222 0042  
                                i1l9240 00E4                                  i1l9232 00BC  
                                i1l9224 0070                                  i1l9242 00F0  
                                i1l9234 00C0                                  i1l9226 0080  
                                i1l9218 0034                                  i1l9260 014A  
                                i1l9252 0120                                  i1l9236 00CC  
                                i1l9228 008C                                  i1l9270 0188  
                                i1l9254 012C                                  i1l9246 0102  
                                i1l9238 00DC                                  i1l9264 015C  
                                i1l9248 010E                                  i1l9266 0166  
                                i1l9258 013E                                  i1l9268 0176  
                       _init_app_eeprom 289C                      __size_of_ReadUSART 001E  
                                _RXB0IF 007D20                                  _RXB1IF 007D21  
                        __CFG_WDTPS$128 000000                                  _SPBRGH 000FB0  
                ECANReceiveMessage@data 0020          __end_of_receivePrintEventSLCAN 461E  
                ECANReceiveMessage@mode 0028                  ECANReceiveMessage@temp 0029  
                     getVSCPFrame@pData 0066              ??_sendVSCPDriverErrorFrame 0028  
                     getVSCPFrame@pSize 0065                      _doModeVerbose$1136 0294  
                    _doModeVerbose$1153 0298                      _doModeVerbose$1163 029C  
                    _doModeVerbose$1148 0296                      _doModeVerbose$1159 029A  
                    _doModeVerbose$1188 029E                   ?_ECANSetOperationMode 0001  
                    __CANIDToRegs@Value 0022                      __size_of_Interrupt 0190  
              readRegisterExtended@page 009E                      __size_of_OpenUSART 005C  
                      fifo_write@nbytes 0004                          getCANFrame@pid 0060  
                                ___wmul 1E28                              _bInitiated 00D4  
                        __CFG_STVREN$ON 000000                               ??___lldiv 0021  
                             ??_calcCRC 0028                                  _cmdbuf 0124  
                             ??___llmod 002E                        OpenTimer0@config 0019  
                             ??___lwdiv 001D                               ??___lwmod 001D  
         _receivePrintEventVerbose$1300 008B           _receivePrintEventVerbose$1305 008D  
         _receivePrintEventVerbose$1280 0083           _receivePrintEventVerbose$1290 0087  
         _receivePrintEventVerbose$1285 0085           _receivePrintEventVerbose$1295 0089  
                                _memcpy 2072                                  _memset 1D9E  
                                clear_0 248A                                  clear_1 249E  
                                clear_2 24B0                                  clear_3 24BC  
                                clear_4 24C8                                  clear_5 24D4  
                         ?_sendCANFrame 007C                                  _strcat 22B0  
                                _strchr 2362                                  _strcpy 1DCA  
                                _strlen 1F3C                                  _wrkbuf 0174  
                                _strtok 29B6                                  _strspn 20F6  
   __size_of_sendVSCPDriverCommandReply 00DE                               ??_isdigit 0019  
                      __end_of_printMDF 2ADC                            __mediumconst 6CD8  
                        ??_readRegister 00A2                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                          ?_printBinary 0001                 __size_of_nibbleFromChar 003E  
                                ultoa@c 006C                                  ultoa@v 0068  
                          ?_printErrors 0001                               ??_sprintf 0068  
                             ??_strichr 001E                               ??_strcspn 0023  
                             ??_toupper 0019                          ??_init_app_ram 001C  
                             ??_stristr 002A              doModeVerbose@mask_priority 0291  
                      __end_of_strnicmp 2482                              __accesstop 0060  
               __end_of__initialization 24DA                    _printFirmwareVersion 2926  
                       writeEEPROM@data 001B                   __size_of_getVSCPFrame 0084  
                  doModeVerbose@id_1227 02A3                              _WriteUSART 1CDC  
                        __pcstackCOMRAM 0001                __size_of_printStatistics 0188  
                  _printStatistics$1362 007E                    _printStatistics$1380 0084  
                  _printStatistics$1374 0082                    _printStatistics$1368 0080  
                 _uart_transmitOverruns 0120                         ??i1_WriteTimer0 0003  
                         __end_of_ultoa 35A6                              __end_ofPL2 6BB4  
                            __end_ofPL4 2EF0                              __end_ofPL6 6BC2  
                            __end_ofPL8 6C0C                          ??_sendCANFrame 002C  
                     __end_of_ReadUSART 1D3C                           ?__RegsToCANID 0019  
           __size_of_ECANReceiveMessage 01FE                      sendVSCPFrame@pData 0089  
                       readRegister@reg 009E                    sendVSCPDriverAck@crc 0028  
                    __size_of_findNodes 00E6                          doModeSLCAN@dlc 008E  
                    __size_of_fifo_init 0032                      __size_of_fifo_read 00AC  
                getVSCPFrame@pvscpclass 006B                 __end_of_init_app_eeprom 2926  
                     __end_of_Interrupt 01A8                           ReadUSART@data 0001  
                    readRegister@nodeid 00A6                          _status_led_cnt 0030  
                    __RegsToCANID@Value 001F                              _crc8_table 0300  
                     __end_of_OpenUSART 2362                 doModeVerbose@mask_class 028A  
             printNodeFirmwareVersion@i 00AC                         setFilter@filter 0023  
                          sprintf@width 0075        __end_of_printNodeFirmwareVersion 308E  
                            _doModeVscp 4312                                 ??_ultoa 002F  
                          _getVSCPFrame 2818                              __pbssBANK0 00CD  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            __pbssBANK3 0300                             ?_OpenTimer0 0001  
                            calcCRC@crc 0029                              calcCRC@len 0027  
                 ?_printFirmwareVersion 0001                  ??_ECANSetOperationMode 0019  
                    __size_of_init_crc8 006E                            __IT_INT_MASK 0036  
                         setFilter@eidh 0026                           setFilter@eidl 0027  
                          __IT_SAVE_BSR 0037                           setFilter@sidh 0024  
                         setFilter@sidl 0025                            ?_writeEEPROM 0019  
                      ??_doModeVscpNode 0019                              _nTimeStamp 003D  
              __end_of_hexStringToBytes 2B76                ECANSetOperationMode@mode 0019  
                               ?___wmul 0019                      __size_of_setFilter 01DC  
                               _B0RXFUL 007107                                 _B1RXFUL 007187  
                  __ECANRxFilterHitInfo 0035                                 _B2RXFUL 007207  
                               _B3RXFUL 007287                                 _B4RXFUL 007307  
                    _sendVSCPDriverNack 2E30                                 _B5RXFUL 007387  
                      WriteTimer0@timer 001B                           putsUSART@data 001A  
                  _readRegisterExtended 308E                                 ?_memcpy 0019  
                               _ECANCON 000F77                                 ?_memset 0019  
                         ??_WriteTimer0 001B                          ??__RegsToCANID 001D  
                 sendVSCPFrame@priority 0087                                 _BRGCON1 000F70  
                               _BRGCON2 000F71                                 _BRGCON3 000F72  
                               ?_strcat 0019                                 ?_strchr 0019  
                               ?_strcpy 0019                                 ?_strlen 0019  
                               ?_strtok 0025                                 ?_strspn 001F  
                            _cntRxBytes 0108                              _cntTxBytes 0110  
                    __size_of_printGUID 00F2                     ?_sendVSCPDriverNack 0001  
                            _fifo_write 3ADE                      __size_of_printHelp 0180  
                    __size_of_printMode 0072                   sendVSCPFrame@vscptype 0085  
               doModeVerbose@value_1171 02AA                       sendCANFrame@pdata 0081  
                            _made_table 00D1                                 _RXB0CON 000F60  
                               _RXB1CON 000F50                                 _RXB0FUL 007B07  
                      __ECANPointBuffer 26A8                                 _TXB0CON 000F40  
                               _TXB1CON 000F30                                 _TXB2CON 000F20  
                    __size_of_putsUSART 0054      __end_of_sendVSCPDriverCommandReply 3698  
            _sendVSCPDriverCommandReply 35BA                                 _RXFCON0 000DD4  
                               _RXFCON1 000DD5                   _writeRegisterExtended 3236  
      __size_of_receiveVSCPModeCanalMsg 00DE                  __size_of_doModeVerbose 119C  
                  sendEscapedUartData@c 0027                  __size_of_sendVSCPFrame 00BC  
      __end_of_sendVSCPDriverErrorFrame 321C                              _readEEPROM 1CB8  
                  ??_sendVSCPDriverNack 0028              printFirmwareVersion@wrkbuf 0062  
                       _ECANSendMessage 3E98                                 __Hparam 0000  
                     __end_of_findNodes 34D4                                 __Lparam 0000  
                     __end_of_fifo_init 2064                       __end_of_fifo_read 2F9C  
                         ??_getCANFrame 002F                             ?_WriteUSART 0001  
            receiveVSCPModeCanalMsg@dlc 00A3                    __end_of_readRegister 2CBE  
                             ?_printMDF 0001                                 _bSilent 00D6  
             receiveVSCPModeCanalMsg@id 009F                           ??_doModeSLCAN 0083  
                               ___lldiv 2632                         __size_of___wmul 0022  
                               _calcCRC 1ECA                         getCANFrame@pdlc 002C  
                               ___llmod 23BE                                 ___lwdiv 21C4  
                             _FIFOEMPTY 007BA7                                 ___lwmod 1F78  
                 ?_readRegisterExtended 009E             printNodeFirmwareVersion@buf 00A8  
                  __end_of_init_app_ram 225C                            init_crc8@crc 001D  
                               __pcinit 2482                         __size_of_memcpy 0040  
                       __size_of_memset 002C                                 __ramtop 0600  
                   __size_of_OpenTimer0 001E                               ?_strnicmp 001D  
                               __ptext0 3D4C                                 __ptext1 1C9C  
                               __ptext2 4F24                                 __ptext3 2ADC  
                               __ptext4 1FF4                                 __ptext5 449A  
                               __ptext6 34D4                                 __ptext7 4312  
                               __ptext8 35BA                                 __ptext9 2E30  
                               crc8@crc 0020           printNodeFirmwareVersion@value 00AB  
                     ??_printStatistics 002F                               _T0CONbits 000FD5  
                       __size_of_strcat 0056                         __size_of_strchr 005C  
                       __size_of_strcpy 002E                         __size_of_strlen 003C  
                     __end_of_hexpowers 6D50                         __size_of_strtok 0092  
                       __size_of_strspn 0044                                 _dpowers 6D08  
                     __end_of_init_crc8 2552                                 _isdigit 1D5A  
        printNodeFirmwareVersion@nodeid 00A7                     __end_of_WriteTimer0 1CDC  
                        _nibbleFromChar 1FF4                        ?_init_app_eeprom 0001  
                               _sprintf 52BE                       __end_of_setFilter 4808  
                               _strichr 1FB6                          doModeVerbose@c 02AC  
                        doModeVerbose@i 02A9                          doModeVerbose@p 02B7  
                               _strcspn 213A                                 _toupper 1CF0  
                           ?_doModeVscp 0001                                 _stristr 271E  
                  __size_of_printBinary 0046                    end_of_initialization 24DA  
                     __end_of_octpowers 6D08                    __size_of_printErrors 029A  
                               memcpy@d 001F                                 memcpy@n 001D  
                               memcpy@s 0021                  ??_printFirmwareVersion 002F  
                             i1u1100_20 0070                               i1u1100_21 006E  
                             i1u1101_20 008C                               i1u1101_21 008A  
                             i1u1110_20 014A                               i1u1102_20 00CC  
                             i1u1110_21 0148                               i1u1102_21 00CA  
                             i1u1111_20 015A                               i1u1103_20 00DC  
                             i1u1111_21 0158                               i1u1103_21 00DA  
                             i1u1112_20 0166                               i1u1104_20 00F0  
                             i1u1112_21 0164                               i1u1104_21 00EE  
                               itoa@buf 0029                               i1u1113_20 0176  
                             i1u1105_20 0100                               i1u1113_21 0174  
                             i1u1105_21 00FE                               i1u1114_20 0188  
                             i1u1106_20 010E                               i1u1114_21 0186  
                             i1u1106_21 010C                               i1u1107_20 011E  
                             i1u1107_21 011C                               i1u1108_20 012C  
                             i1u1108_21 012A                               i1u1109_20 013C  
                               memset@c 001B                               i1u1109_21 013A  
                               itoa@val 002B                                 memset@n 001D  
                               memset@p 001F                           __Lmediumconst 6CD8  
                  __end_of_sendCANFrame 1F3C                               i1u1099_20 003C  
                             i1u1099_21 003A                     _can_receiveOverruns 0100  
                     __end_of_printGUID 3898                         ___lldiv@divisor 001D  
                     __end_of_printHelp 418A                         ___lldiv@counter 0025  
                     __end_of_printMode 2632                       ECANSendMessage@id 0023  
                     ECANSendMessage@pb 0060            __size_of_sendEscapedUartData 006E  
                             _RXF10EIDH 000D76                               _RXF10EIDL 000D77  
                             _RXF11EIDH 000D7A                               _RXF11EIDL 000D7B  
                            ??_printMDF 0030                               _RXF12EIDH 000D82  
                             _RCSTAbits 000FAB                               _RXF12EIDL 000D83  
                             _RXF13EIDH 000D86                               _RXF13EIDL 000D87  
                             _RXF14EIDH 000D8A                               _RXF14EIDL 000D8B  
                             _RXF15EIDH 000D92                               _RXF15EIDL 000D93  
                             _RXF10SIDH 000D74                               _RXF10SIDL 000D75  
                             _RXF11SIDH 000D78                               _RXF11SIDL 000D79  
                             _RXF12SIDH 000D80                               _RXF12SIDL 000D81  
                               postdec1 000FE5                                 postdec2 000FDD  
                             _RXF13SIDH 000D84                               _RXF13SIDL 000D85  
                             _RXF14SIDH 000D88                               _RXF14SIDL 000D89  
               __size_of_ECANInitialize 0082                               _RXF15SIDH 000D90  
                             _RXF15SIDL 000D91                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                     __end_of_putsUSART 22B0                      __ECANPointBuffer@b 001C  
                         _doModeVerbose 5A0A                                 utoa@buf 0020  
     __size_of_printNodeFirmwareVersion 00D0                                 utoa@val 0022  
             ?_printNodeFirmwareVersion 0001                           _sendVSCPFrame 2D74  
                               strlen@s 0019                              _sequencyno 003E  
                            _timekeeper 00CD                               _RXM0EXIDM 0078CB  
                               strspn@i 0023                              ??_strnicmp 0023  
                   __end_of_getCANFrame 1E28                              findNodes@i 00B1  
                __end_of_nibbleFromChar 2032                     __end_of_doModeSLCAN 52B2  
                           ?_fifo_write 0001                              fifo_init@f 0019  
         __size_of_vscp_restoreDefaults 0008                              fifo_read@f 0019  
                            fifo_read@i 0025                              fifo_read@p 0023  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                ?_writeRegisterExtended 009E       sendVSCPDriverCommandReply@cmdCode 0028  
                   __size_of_WriteUSART 0014                       readEEPROM@address 0019  
               __end_of_ECANSendMessage 400A                    _uart_receiveOverruns 011C  
              _receivePrintEventVerbose 4A14                              _vscpNodeId 00DC  
                         ?__CANIDToRegs 0019                    __end_of__RegsToCANID 3A84  
                           ?_readEEPROM 0019                               _TXSTAbits 000FAC  
                    i1WriteTimer0@timer 0003                       doModeVerbose@page 02AD  
                     doModeVerbose@preg 0284                          _init_crc8$2079 0019  
                ??_readRegisterExtended 00A5                          ?_doModeVerbose 0001  
                        ?_sendVSCPFrame 0083                    __size_of_writeEEPROM 0026  
                        __end_of___wmul 1E4A                     __size_of_doModeVscp 0172  
                           _WriteTimer0 1CCA                          __end_of_memcpy 20B2  
                        __end_of_memset 1DCA       __size_of_sendVSCPDriverErrorFrame 00BE  
             ?_sendVSCPDriverErrorFrame 0001                         ?_nibbleFromChar 0001  
                             ___DCDelay 00E0                          __end_of_strcat 2306  
                        __end_of_strchr 23BE                          __end_of_strcpy 1DF8  
                        __end_of_strlen 1F78                doModeVerbose@filter_type 028F  
                        __end_of_strtok 2A48                          __end_of_strspn 213A  
                           __end_ofPL10 6C28                             __end_ofPL20 5992  
                           __end_ofPL12 595C                             __end_ofPL30 6C56  
                           __end_ofPL22 37A6                             __end_ofPL14 3C04  
                           __end_ofPL40 6C90                             __end_ofPL32 3980  
                           __end_ofPL24 322C                             __end_ofPL16 6C42  
                           __end_ofPL50 59C2                             __end_ofPL42 6CAA  
                           __end_ofPL34 6C68                             __end_ofPL26 2FBE  
                           __end_ofPL18 596C                             __end_ofPL60 29B6  
                           __end_ofPL52 6CC2                             __end_ofPL44 59AC  
                           __end_ofPL36 6C76                             __end_ofPL28 36A8  
                           __end_ofPL70 3ACC                             __end_ofPL62 59D0  
                           __end_ofPL54 39A2                             __end_ofPL46 3236  
                           __end_ofPL38 3A92                             __end_ofPL80 59F6  
                           __end_ofPL72 35BA                             __end_ofPL64 3AA6  
                           __end_ofPL56 449A                             __end_ofPL48 3990  
                           __end_ofPL90 4A14                             __end_ofPL82 52BE  
                           __end_ofPL74 39B6                             __end_ofPL66 59E4  
                           __end_ofPL58 6CD8                             __end_ofPL92 2072  
                           __end_ofPL84 5A00                             __end_ofPL76 38AC  
                           __end_ofPL68 3AB8                             __end_ofPL94 3D4C  
                           __end_ofPL86 1E5A                             __end_ofPL78 3ADE  
                           __end_ofPL96 39C0                             __end_ofPL88 462C  
                           __end_ofPL98 5A0A                     start_initialization 2482  
                             _ReadUSART 1D1E                         findNodes@nFound 00AF  
                 doModeVerbose@reg_1170 02A2                   doModeVerbose@filterno 02A7  
               _receiveVSCPModeCanalMsg 3310                     __CFG_BOREN$BOACTIVE 000000  
                          doModeSLCAN@c 008F                            ??_OpenTimer0 0019  
sendVSCPDriverCommandReply@cmdReplyCode 0029                               _Interrupt 0018  
                        ??__CANIDToRegs 0020              readRegisterExtended@nodeid 00A9  
                             _OpenUSART 2306                     sendVSCPFrame@nodeid 0086  
                       ___llmod@divisor 002A                   __size_of_readRegister 00A8  
                       ___llmod@counter 002E                   ECANReceiveMessage@ptr 002A  
                   __size_of_fifo_write 00F8                   __size_of_init_app_ram 004E  
                        _findNodes$1464 00AD                __end_of__ECANPointBuffer 271E  
                     __CANIDToRegs@type 001F                              init_crc8@i 001E  
                            init_crc8@j 001B                             _getCANFrame 1DF8  
                              ??___wmul 001D                       ?_hexStringToBytes 001D  
                           _doModeSLCAN 4F24              __end_of_ECANReceiveMessage 4A06  
                              ??_memcpy 001F                     readRegister@timeout 009F  
                              ??_memset 001F                   sendVSCPDriverNack@crc 0028  
              doModeVerbose@mask_nodeid 0293                   __end_ofi1_WriteTimer0 1CB8  
                    ??_hexStringToBytes 0022                                ??_strcat 001D  
                              ??_strchr 001D                                ??_strcpy 001D  
                              ??_strlen 001B                      __end_of_OpenTimer0 1D5A  
                              ??_strtok 0029                                ??_strspn 0023  
                   __size_of_readEEPROM 0012                             __pbssBIGRAM 0400  
                           __pbssCOMRAM 0030                              ?_ReadUSART 0001  
                       __IT_SAVE_STATUS 0038                ??_receivePrintEventCANAL 002F  
                         __pcstackBANK0 0060                           __pcstackBANK2 0280  
                   __end_of__stringdata 7CFF                ??_receivePrintEventSLCAN 006D  
                          _readRegister 2C16                            _isdigit$2900 001A  
                 __size_of_sendCANFrame 003A             ?_sendVSCPDriverCommandReply 0028  
           sendVSCPDriverErrorFrame@crc 0029                        ?_ECANSendMessage 0023  
                     sendVSCPFrame@size 0088                            _init_app_ram 220E  
                            ?_Interrupt 0001                              ?_OpenUSART 0019  
                           sprintf@_val 0077                             sprintf@flag 007C  
                           sprintf@prec 0073                               __pnvBANK0 00E0  
                         __IT_SAVE_WREG 0039                        _ledFunctionality 003C  
              doModeVerbose@nodeid_1183 02AF                doModeVerbose@nodeid_1168 028D  
                          setFilter@val 0019                        ___lwdiv@dividend 0019  
                       ??_doModeVerbose 00B2           __size_of_ECANSetOperationMode 0018  
                       _printStatistics 418A                            ??_WriteUSART 0019  
                       ??_sendVSCPFrame 008A                          _ECANInitialize 2796  
                     _sendVSCPDriverAck 2CBE                           __pmediumconst 6CD8  
             receivePrintEventCANAL@dlc 006B               receivePrintEventCANAL@crc 0070  
                              ?___lldiv 0019                                ?_calcCRC 0025  
                              ?___llmod 0026                               _findNodes 33EE  
                              ?___lwdiv 0019                                ?___lwmod 0019  
                             _fifo_init 2032                               _fifo_read 2EF0  
                    ?_sendVSCPDriverAck 0001                       __size_of_printMDF 0094  
                           __pintcodelo 0018                            _sendCANFrame 1F02  
                     WriteTimer0@timer0 0019                             _COMSTATbits 000F74  
                              ?_isdigit 0001               ??_receiveVSCPModeCanalMsg 0083  
                   ??_sendVSCPDriverAck 0028                       __size_of_strnicmp 0062  
                       printGUID@nodeid 00A7                     _sendEscapedUartData 2552  
                             _hexpowers 6D30                        ___lwdiv@quotient 001E  
                             _init_crc8 24E4                   __size_of__RegsToCANID 00C4  
             doModeVerbose@filter_class 0288                                ?_sprintf 0060  
                              ?_strichr 001A                             _cntRxFrames 010C  
                          ??_doModeVscp 002F                                ?_strcspn 001F  
                              ?_toupper 0001                                ?_stristr 0026  
                    __end_of_WriteUSART 1CF0                          __size_of_ultoa 00D2  
                           _cntTxFrames 0114                          ___wmul@product 001D  
                sendVSCPFrame@vscpclass 0083                               _setFilter 462C  
                           strnicmp@len 0021                               _octpowers 6CD8  
                              _PIE1bits 000F9D             __size_of_sendVSCPDriverNack 00B0  
                __end_of_ECANInitialize 2818               __end_of_sendVSCPDriverAck 2D74  
                              i1u753_25 3AFA                                _PIR1bits 000F9E  
                              i1u754_25 3B0A                                _PIR2bits 000FA1  
                              _PIR3bits 000FA4                        ECANSendMessage@i 0079  
                      ECANSendMessage@j 0074                    ?_sendEscapedUartData 0025  
                              _RXF0EIDH 000F02                                _RXF0EIDL 000F03  
                              _RXB0OVFL 007BA7                                _RXF1EIDH 000F06  
                              _RXF1EIDL 000F07                                _RXB1OVFL 007BA6  
                              _RXF2EIDH 000F0A                                _RXF2EIDL 000F0B  
                              _RXF3EIDH 000F0E                                _RXF3EIDL 000F0F  
                              _RXF4EIDH 000F12                                _RXF4EIDL 000F13  
                              _RXF5EIDH 000F16                                _RXF5EIDL 000F17  
                              _RXF6EIDH 000D62                                _RXF6EIDL 000D63  
                     hexStringToBytes@i 0029                                _RXF7EIDH 000D66  
                              _RXF0SIDH 000F00                       hexStringToBytes@p 0027  
                              _RXF7EIDL 000D67                                _RXF0SIDL 000F01  
                             _printGUID 37A6                                _RXF8EIDH 000D6A  
                              _RXF1SIDH 000F04                                _RXF8EIDL 000D6B  
                              _RXF1SIDL 000F05                                _RXF9EIDH 000D72  
                              _RXF2SIDH 000F08                                _RXF9EIDL 000D73  
                              _RXF2SIDL 000F09                                _RXF3SIDH 000F0C  
                              _RXF3SIDL 000F0D                              printGUID@i 00AC  
                              _RXF4SIDH 000F10                                _RXF4SIDL 000F11  
                              _RXF5SIDH 000F14                                _RXF5SIDL 000F15  
                              _RXF6SIDH 000D60                                _RXF6SIDL 000D61  
                              _RXM0EIDH 000F1A                                _RXF7SIDH 000D64  
                              _RXM0EIDL 000F1B                                _RXF7SIDL 000D65  
                              _RXM1EIDH 000F1E                                _RXF8SIDH 000D68  
                              _RXM1EIDL 000F1F                                _RXF8SIDL 000D69  
                              _RXF9SIDH 000D70                                _RXF9SIDL 000D71  
                              _RXFBCON0 000DE0                                _RXFBCON1 000DE1  
                              _RXFBCON2 000DE2                                _RXFBCON3 000DE3  
                              _RXFBCON4 000DE4                                _RXFBCON5 000DE5  
                              _RXFBCON6 000DE6                                _RXFBCON7 000DE7  
                            ?_findNodes 0001                               _printHelp 400A  
                              _RXM0SIDH 000F18                                _RXM0SIDL 000F19  
                              _RXM1SIDH 000F1C                                _RXM1SIDL 000F1D  
                             _printMode 25C0                              ?_fifo_init 0019  
                            ?_fifo_read 0019                                _RXERRCNT 000F75  
                    __end_of_doModeVscp 4484                                _TXERRCNT 000F76  
                  __end_of__CANIDToRegs 396C                               _putsUSART 225C  
                           __stringdata 6D50                       ___wmul@multiplier 0019  
             receivePrintEventSLCAN@dlc 0070                            __RegsToCANID 39C0  
                             _vscpClass 00DA                 ??_writeRegisterExtended 00A5  
                          ??_fifo_write 0008                 __size_of_doModeVscpNode 0002  
            ??_receivePrintEventVerbose 007E                             ??_ReadUSART 0001  
                   getVSCPFrame@pNodeId 0063                           ??_printBinary 001A  
       __size_of_receivePrintEventCANAL 013A                        doModeVerbose@reg 02AE  
                         ??_printErrors 002F                              ?_init_crc8 0001  
       __size_of_receivePrintEventSLCAN 0184                               _rwtimeout 00D9  
             writeRegisterExtended@page 009E                                ___DCByte 003A  
                           ??_Interrupt 0011                 __end_of_printStatistics 4312  
                           ??_OpenUSART 001B            writeRegisterExtended@timeout 00A1  
                          ??_readEEPROM 001B                __size_of_init_app_eeprom 008A  
                            ?_setFilter 0019                         OpenUSART@config 001B  
                        findNodes@value 00B0            __end_of_vscp_restoreDefaults 1CA6  
                            _EECON1bits 000FA6           __size_of_printFirmwareVersion 0082  
       __end_of_receiveVSCPModeCanalMsg 33EE                         ?_ECANInitialize 0001  
                              __Hrparam 0000                    ECANReceiveMessage@id 0024  
                 ??_sendEscapedUartData 0027                                __Lrparam 0000  
                      __CANIDToRegs@val 001B                      __end_of_fifo_write 3BD6  
                      __CANIDToRegs@ptr 0019             receiveVSCPModeCanalMsg@data 0097  
                            ?_printGUID 0001                             doModeVscp@c 002F  
                            ?_printHelp 0001                              ?_printMode 0001  
                       nibbleFromChar@c 0019                        ??_nibbleFromChar 0019  
                      __size_of___lldiv 0076                        __size_of_calcCRC 0038  
                      __size_of___llmod 0062                        __size_of___lwdiv 004A  
                      __size_of___lwmod 003E                        getCANFrame@flags 0061  
                          ?_WriteTimer0 0019                        getCANFrame@pdata 002D  
                            ?_putsUSART 001A                         fifo_read@nbytes 001D  
                            sprintf@idx 006B                      __end_of_readEEPROM 1CCA  
                 hexStringToBytes@inhex 0020                                calcCRC@j 0028  
                              calcCRC@p 0025                              strcat@from 001B  
                      __size_of_isdigit 001E                         ___lwdiv@divisor 001B  
                       ___lwdiv@counter 001D                                __ptext10 3310  
                              __ptext11 2072                                __ptext20 462C  
                              __ptext12 2CBE                                __ptext21 3236  
                              __ptext13 315E                                __ptext30 2C16  
                              __ptext22 217E                                __ptext14 1ECA  
                              __ptext31 2D74                                __ptext23 308E  
                              __ptext15 3C04                                __ptext40 29B6  
                              __ptext32 1F02                                __ptext24 1DCA  
                              __ptext16 2552                                __ptext41 213A  
                              __ptext33 3E98                                __ptext25 33EE  
                              __ptext17 1E92                                __ptext50 2818  
                              __ptext42 20F6                                __ptext34 38AC  
                              __ptext26 2A48                                __ptext18 24E4  
                              __ptext51 1DF8                                __ptext43 2362  
                              __ptext35 1D9E                                __ptext27 37A6  
                              __ptext19 5A0A                                __ptext60 2EF0  
                              __ptext52 4808                                __ptext44 271E  
                              __ptext36 400A                                __ptext28 2FBE  
                              __ptext61 2926                                __ptext53 39C0  
                              __ptext45 1FB6                                __ptext37 4C8A  
                              __ptext29 22B0                                __ptext70 2796  
                              __ptext62 1E5A                                __ptext54 26A8  
                              __ptext46 2420                                __ptext38 418A  
                              __ptext71 1D06                                __ptext63 2B76  
                              __ptext55 52BE                                __ptext47 1CF0  
                              __ptext39 36A8                                __ptext80 2032  
                              __ptext72 1D3C                                __ptext64 1F78  
                              __ptext56 1E28                                __ptext48 1F3C  
                              __ptext73 2306                                __ptext65 21C4  
                              __ptext57 23BE                                __ptext49 4A14  
                              __ptext82 1CA6                                __ptext74 1CCA  
                              __ptext66 25C0                                __ptext58 2632  
                              __ptext83 3ADE                                __ptext75 1C9E  
                              __ptext67 225C                                __ptext59 1D5A  
                              __ptext84 1D1E                                __ptext76 289C  
                              __ptext68 1CDC                                __ptext77 1D78  
                              __ptext69 20B2                                __ptext78 220E  
                              __ptext79 1CB8                          printMDF@nodeid 00A7  
                         ?_getVSCPFrame 0062                              strichr@chr 001C  
                      __size_of_sprintf 0680                              strichr@ptr 001A  
                      __size_of_strichr 003E                        __size_of_strcspn 0044  
                      __size_of_toupper 0016                        __size_of_stristr 0078  
                            strcpy@from 001B                          printGUID@value 00AB  
                   __end_of_printBinary 21C4                           __size_of_crc8 0038  
                         __size_of_atoi 00F0                           __size_of_main 014C  
                         __size_of_init 0044                           __size_of_itoa 0038  
                   __end_of_printErrors 4F24                           __size_of_utoa 00A0  
                            strnicmp@s1 001D                              strnicmp@s2 001F  
                           _inputBuffer 0200              __size_of_sendVSCPDriverAck 00B6  
                _receivePrintEventCANAL 3C04                           ??_writeEEPROM 001C  
              _printNodeFirmwareVersion 2FBE                     ECANSendMessage@data 0027  
              ECANSendMessage@tempBSEL0 0075                                _printMDF 2A48  
                             printMDF@i 00AB                  _receivePrintEventSLCAN 449A  
                             printMDF@p 00A9                            ?_getCANFrame 002C  
                   ECANSendMessage@mode 0072                     ECANSendMessage@temp 0078  
                     ?__ECANPointBuffer 0019                                atoi@sign 0023  
                           ??_findNodes 0030                            ?_doModeSLCAN 0001  
                           ??_fifo_init 001F                             ??_fifo_read 001F  
                              _vscpData 0040           __size_of_readRegisterExtended 00D0  
                              main@argc 00C6                                main@argv 00C8  
                              _vscpSize 00DE                      ??__ECANPointBuffer 001C  
                              _vscpType 00DF                             _RXB0FILHIT0 007B00  
     sendVSCPDriverErrorFrame@errorcode 0028                         doModeVerbose@id 0280  
                       doModeVerbose@rv 02A0                                _strnicmp 2420  
                      init_app_eeprom@i 001C             writeRegisterExtended@nodeid 00A9  
                       _serialInputFifo 01CC                             _RXB1CONbits 000F50  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                        OpenUSART@spbrg 0019                     ECANReceiveMessage@i 0027  
                              memcpy@d1 0019                                memcpy@s1 001B  
             receivePrintEventVerbose@i 008F                                itoa@base 002D  
                              isdigit@c 001B                      _ECANReceiveMessage 4808  
                              memset@p1 0019                             ??_init_crc8 0019  
                             ultoa@base 0066                          ??_getVSCPFrame 0067  
             __size_of_hexStringToBytes 009A                         sendVSCPFrame@id 002C  
                              intlevel1 0000                               sprintf@ap 0072  
                             sprintf@sp 0060                    hexStringToBytes@size 001F  
                             strchr@chr 001B                        ?_printStatistics 0001  
                      ___lwmod@dividend 0019                               strchr@ptr 0019  
                   ?_ECANReceiveMessage 0020                        ___lldiv@dividend 0019  
                           ??_setFilter 001D                           printMDF@value 00A8  
                             strcspn@s1 001F                               strcspn@s2 0021  
               ECANSendMessage@msgFlags 002A                              _OSCCONbits 000FD3  
                             strnicmp@r 0025                               stristr@s1 0026  
                             stristr@s2 0028                      ECANSendMessage@ptr 007A  
                     ??_init_app_eeprom 001C              receivePrintEventCANAL@data 0062  
                 __size_of__CANIDToRegs 00C0                             ??_printGUID 0030  
                        readEEPROM@data 001B                             ??_printHelp 001E  
                           ??_printMode 001E                _sendVSCPDriverErrorFrame 315E  
                ECANSendMessage@dataLen 0029                     __end_of_writeEEPROM 1D9E  
                   __ECANPointBuffer@pt 001D                    ??_ECANReceiveMessage 0024  
                           ??_putsUSART 001C                                utoa@base 0024  
                              ultoa@buf 0060                                ultoa@val 0062  
                         fifo_init@size 001D                                sprintf@c 007B  
                              sprintf@f 0062                     hexStringToBytes@buf 001D  
                              strcat@cp 001D                     hexStringToBytes@len 0025  
                        _doModeVscpNode 1C9C                                strcat@to 0019  
      __end_of_receivePrintEventVerbose 4C8A                  ECANSendMessage@buffers 0073  
                      ___lldiv@quotient 0021                         ___lwmod@divisor 001B  
          __end_of_ECANSetOperationMode 1D1E                    _vscp_restoreDefaults 1C9E  
                          printGUID@buf 00A8                                strcpy@cp 001D  
                              strlen@cp 001B                                strcpy@to 0019  
                       ___lwmod@counter 001D                                strcspn@i 0023  
                              toupper@c 0019                             _printBinary 217E  
                              strtok@s1 0025                                strtok@s2 0027  
                              strspn@s1 001F                                strspn@s2 0021  
                            _RXM1EXIDEN 0078EB                                strtok@sp 0032  
                ECANSendMessage@tempPtr 0076                             _printErrors 4C8A  
                          fifo_init@buf 001B                            fifo_read@buf 001B  
         sendVSCPDriverCommandReply@crc 002A                            __CANIDToRegs 38AC  
                __size_ofi1_WriteTimer0 0012                            _USART_Status 0034  
             readRegisterExtended@value 00A3                __size_of_ECANSendMessage 0172  
