#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Frankfurt - RS232
\end_layout

\begin_layout Author
Smart CAN4VSCP serial interface 
\end_layout

\begin_layout Date
Reversion 1.0 - 2014-08-03
\end_layout

\begin_layout Abstract
CAN4VSCP-RS22 is a very simple interface module for connecting a computers
 RS-232 interface (TTL or RS-232) to the VSCP4CAN bus or if one want the
 other way around a CAN4VSCP bus to a serial interface.
 The module is constructed to interface the VSCP network and is hardwired
 for its speed and other VSCP specific parameters.
 This lowers the cost for the device and makes it very easy to use.
 The module comes with a serial boot loader installed which makes it very
 easy to update the software in the module when the need occurs.
 The module fully adopts to the CAN4VSCP specification and is powered directly
 over the bus with a 9 - 28VDC power source.
 
\end_layout

\begin_layout Title
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/automation_company.png
	width 6cm

\end_inset


\end_layout

\begin_layout Author
Grodans Paradis AB
\begin_inset Newline newline
\end_inset

Brattbergavägen 17
\begin_inset Newline newline
\end_inset

820 50 LOS
\begin_inset Newline newline
\end_inset

SWEDEN
\begin_inset Newline newline
\end_inset

Phone: +46 (0)8 40011835 
\end_layout

\begin_layout Author
web: 
\begin_inset CommandInset href
LatexCommand href
target "http://www.auto.grodansparadis.com"

\end_inset

 email: 
\begin_inset CommandInset href
LatexCommand href
target "info@grodansparadis.com"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center
Copyright © 2011-2014, Grodans Paradis AB, All rights reserved
\end_layout

\begin_layout Title
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/pbfree.png
	width 2cm

\end_inset

 All boards produced by 
\emph on
Grodans Paradis AB
\emph default
 are ROHS compliant.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Disclaimer: © 2011-2012 Grodans Paradis AB.
 All rights reserved.
 Grodans Paradis AB®, logo and combinations thereof, are registered trademarks
 of Grodans Paradis AB.
 Other terms and product names may be trademarks of others.
 The information in this document is provided in connection with Grodans
 Paradis AB products.
 No license, express or implied or otherwise, to any intellectual property
 right is granted by this document or in connection with the sale of Grodans
 Paradis AB products.
 Neither the whole nor any part of the information contained in or the product
 described in this document may be adapted or reproduced in any material
 from except with the prior written permission of the copyright holder.
 The product described in this document is subject to continuous development
 and improvements.
 All particulars of the product and its use contained in this document are
 given by Grodans Paradis AB in good faith.
 However all warranties implied or expressed including but not limited to
 implied warranties of merchantability or fitness for purpose are excluded.
 This document is intended only to assist the reader in the use of the product.
 Grodans Paradis AB.
 shall not be liable for any loss or damage arising from the use of any
 information in this document or any error or omission in such information
 or any incorrect use of the product.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Chapter
Frankfurt - RS232
\end_layout

\begin_layout Standard
Frankfurt-RS232 is a serial interface to the CAN4VSCP bus.
 The module can be attached to a standard DIN Rail or be mounted directly
 on a wall (ordered separately).
 The module fully adopts to the CAN4VSCP specification and is powered directly
 over the bus with a 9-28V DC power source (for example with CAN4VSCP-POWER).
 All that is needed is a CAT5
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

 or better twisted pair cable.
 Buss length can be a maximum of 500 meters with drops of maximum 24 meters
 length (up to a total of 120 meters).
 As for all VSCP4CAN modules the communication speed is fixed at 125 kbps.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Most current information
\end_layout

\begin_layout Standard
You can find the most current information about the Frankfurt-RS232 module
 at 
\begin_inset CommandInset href
LatexCommand href
target "http://www.grodansparadis.com/can4vscp_rs232/can4vscp_rs232.html"

\end_inset

.
 On the site you can also find links to the latest firmware and schematics
 and recipes for its use.
 
\end_layout

\begin_layout Section
The raw facts
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="5cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Supply voltage
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9-28VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PCB Size
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42 mm x 72mm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Power requirements
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1W.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Communication RS-232
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
57500 baud, 8N1, without hardware/software handshake.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Communication VSCP4CAN
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
125kbps
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The raw facts
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
Hardware
\end_layout

\end_inset

Hardware
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/can4vscp_rs232_revb_sch.png
	width 12cm
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Schema
\end_layout

\end_inset

Schema for the Paris relay module
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Some 
\begin_inset Index idx
status open

\begin_layout Plain Layout
key positions
\end_layout

\end_inset

key positions on the module is outlined in the figure below
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/can4vscp_rs232_revb_brd_600.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Road map to module
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
TTL level pinhead
\end_layout

\begin_layout Standard
J3 can be used if you want to connect Frankfurt-RS232 to another card using
 TTL serial levels.
 On this pin RX/TX + power and ground is available.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Power: 9V+28V
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RX
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TX
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
ICSP Programming pinhead
\end_layout

\begin_layout Standard
The in circuit programming pinhead can be used to program (or debug) the
 mikroprocessor.
 The socket directly fits the low cost PICKIT2 programmer, but any pic programme
r can obviously be used.
 The pinput is described below.
 Pin 6 is connected to RB5/LVPGM of the processor.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/pickit2.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
PICKIT2 programmer
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VPP/MCLR
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VDD (+5V)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSS (Ground)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PGD
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PGC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LVPGM
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/pickit2prg.jpg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pinout for ICSP programming socket
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Termination
\end_layout

\begin_layout Standard
Both ends of a CAN4VSCP bus should be terminated with a 120 ohm resistor.
 If the Frankfurt RS-232 is on one end of a bus this termination can be
 shorted to enable the onboard resistor.
\end_layout

\begin_layout Subsection
Status LED
\end_layout

\begin_layout Standard
The power LED is steady on when the device is powered and will blink shortly
 when events are received.
 Fault conditions are indicated by a blinking LED.
 Fast blinking: bus error.
 Slow blinking: Bus warning.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="5cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Steady
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Powered.
 No error.
 No traffic on bus.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Short untimed blinks
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Traffic on bus.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Slow blinking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bus error warning.
 Something is wrong on the CAN4VSCP bus and if not fixed a bus off will
 result.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fast blinking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bus off.
 Something is very wrong of the CAN4VSCP bus and the driver to the bus has
 unconnected itself from the bus.
 When the bus behaves as normal again it will automatically connect again.
 The problem can typically be shorted CANH/CANL, only one devices on the
 bus, a device with wrong bitrate on the bus.
 
\end_layout

\begin_layout Plain Layout
To not terminate both ens of the bus with a 120 ohm resistor can also give
 problems.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Cable and 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
connectors
\end_layout

\end_inset

connectors
\end_layout

\begin_layout Standard
The unit is powered over the CAN4VSCP bus.
 The CAN4VSCP normally uses 
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

CAT5 or better 
\begin_inset Index idx
status open

\begin_layout Plain Layout
twisted pair cable
\end_layout

\end_inset

twisted pair cable.
 You can use other cables if you which.
 The important thing is that the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANH
\end_layout

\end_inset

CANH and CANL
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANL
\end_layout

\end_inset

 signals uses a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
twisted cable
\end_layout

\end_inset

twisted cable.
 For connectors you can use RJ10
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ10
\end_layout

\end_inset

, RJ11
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ11
\end_layout

\end_inset

, RJ12
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ12
\end_layout

\end_inset

 or the most common RJ45
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ45
\end_layout

\end_inset

 connectors.
 There are different versions 
\end_layout

\begin_layout Subsubsection
Serial connection - DSUB9, female
\end_layout

\begin_layout Standard
The DSUB-9 connector can connect the device to a computer or other device
 with a RS-232 serial connection.
 The communication parameters are always set to 57600, N81 (No parity, eight
 databits, one stopbit), no handshake.
 A standard USB to RS-232 adapter fits directly if a RS-232 serial port
 is missing.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/9-pinout.gif
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RS-22 connector
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transmit data (TXD) out
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Receive data (RXD) in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not used
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Request to send (RTS) in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clear to send (CTS) out
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not used
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
RTS and CTS is currently not used.
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ-XX
\end_layout

\end_inset

RJ-XX pin-out 
\begin_inset CommandInset label
LatexCommand label
name "sub:RJ-XX-pin-out"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Patch Cable wire color 
\begin_inset Index idx
status open

\begin_layout Plain Layout
T568B
\end_layout

\end_inset

T568B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+9-28V DC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orange/White 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+9-28V DC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orange
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 2 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+9-28V DC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Green/White
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 3 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CANH
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Blue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 4 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CANL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Blue/White
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 5 4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Green
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brown/White
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brown
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RJ-XX pin-out 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
RJ-11/12/45 pin-out
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/rj45.jpg
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ-45 pin out
\end_layout

\end_inset

RJ-45 pin out
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Always use a pair of wires for CANH/CANL fort best noise immunity.
 If the EIA/TIA 56B standard is used this condition will be satisfied.
 This is good as most Ethernet networks already is wired this way.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Cable length
\end_layout

\end_inset

Cable length
\end_layout

\begin_layout Standard
CAN4VSCP always communicate with 125kbps.
 This means that if you use a good quality cable it can be up to a maximum
 of 500 meters using AWG24
\begin_inset Index idx
status open

\begin_layout Plain Layout
AWG24
\end_layout

\end_inset

 or similar (CAT5
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

) .
 Actual length depend on the environment and other parameters.
 Drops
\begin_inset Index idx
status open

\begin_layout Plain Layout
Drops
\end_layout

\end_inset

 with a maximum length of 24 meters can be taken from this cable and the
 sum of all drops must not exceed a total of 120 meters.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/drops.jpg
	width 12cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
CAN4VSCP bus with drops and terminations
\begin_inset Index idx
status open

\begin_layout Plain Layout
terminations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Termination"

\end_inset

Termination
\end_layout

\begin_layout Standard
The CAN4VSCP bus, as all CAN
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAN
\end_layout

\end_inset

 based networks, should be terminated
\begin_inset Index idx
status open

\begin_layout Plain Layout
terminated
\end_layout

\end_inset

 with a 120 ohms resistor between CANH
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANH
\end_layout

\end_inset

 and CANL
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANL
\end_layout

\end_inset

 at both ends of the cable.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/CAN_Termination.gif
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Termination
\begin_inset Index idx
status open

\begin_layout Plain Layout
Termination
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
If you use CAT5
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

 this termination
\begin_inset Index idx
status open

\begin_layout Plain Layout
termination
\end_layout

\end_inset

 should be placed between the blue - blue/white cables at both end of your
 bus.
\end_layout

\begin_layout Standard

\emph on
On the board there is a jumper for an 
\begin_inset Index idx
status open

\begin_layout Plain Layout
on-board terminator
\end_layout

\end_inset

on-board terminator.

\emph default
 See figure above.
\end_layout

\begin_layout Subsubsection
Why are terminators required? 
\end_layout

\begin_layout Standard
Terminators
\begin_inset Index idx
status open

\begin_layout Plain Layout
Terminators
\end_layout

\end_inset

 are needed to cancel signal echos in the cable.
 In short you get less noise in the cable if you use them.
 It is recommended to use them even if at 125 kbit it is possible that your
 bus will work anyway.
\end_layout

\begin_layout Subsection
Power
\begin_inset Index idx
status open

\begin_layout Plain Layout
Power
\end_layout

\end_inset

 the module
\end_layout

\begin_layout Standard
You normally power the module through the RJ45
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ45
\end_layout

\end_inset

 connector over the CAN4VSCP bus.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:RJ-XX-pin-out"

\end_inset

 for a description of which pins to use for power
\begin_inset Index idx
status open

\begin_layout Plain Layout
power
\end_layout

\end_inset

 and ground.
 The voltage
\begin_inset Index idx
status open

\begin_layout Plain Layout
voltage
\end_layout

\end_inset

 range is +9VDC - 28VDC.
 The current
\begin_inset Index idx
status open

\begin_layout Plain Layout
current
\end_layout

\end_inset

 need depend on how many modules you want to power.
\end_layout

\begin_layout Standard
An alternative way to power the module is through the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
daisy chain
\end_layout

\end_inset

daisy chain connector described above.
 Just connect +9V - 28V to it's pin 1 and ground to pin 4.
 Needless to say you can't have power supplied by the CAN4VSCP bus at the
 same time.
\end_layout

\begin_layout Subsection
Best practice
\end_layout

\begin_layout Standard
Even if it is possible to have cable lengths up to 500 meters it is better
 to stay at shorter distances to have some margins.
 Here are some guidelines for a reliable set up
\end_layout

\begin_layout Itemize
Total cable length of 300m, stub cables count double their length in that
 total.
\end_layout

\begin_layout Itemize
Nodes count as 6m in that total.
 
\end_layout

\begin_layout Itemize
Never less than 30cm of cable between nodes, nor between a stub connection
 and a node.
 
\end_layout

\begin_layout Itemize
No more than 50 nodes connected.
\end_layout

\begin_layout Standard
Following this best practice you will have a setup that will work reliable
 even in harsh environments.
\end_layout

\begin_layout Section
Installing
\begin_inset Index idx
status open

\begin_layout Plain Layout
Installing
\end_layout

\end_inset

 the module
\end_layout

\begin_layout Standard
Connect the module to the CAN4VSCP bus.
 The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
green led
\end_layout

\end_inset

green led on the module should light up indicating that the device is powered.
 Connect a serial device to the RS-232 connector and now your module is
 ready to use.
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
Updating firmware
\end_layout

\end_inset

Updating firmware
\end_layout

\begin_layout Standard
There is two ways you can use to update the firmware of the device.
 You can program the device using the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
programming socket
\end_layout

\end_inset

programming socket on board or you can use a special bootloader program
 to program the device over the serial channel.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Update firmware
\end_layout

\end_inset

Update firmware using the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICP connector
\end_layout

\end_inset

ICP connector
\end_layout

\begin_layout Standard
The firmware
\begin_inset Index idx
status open

\begin_layout Plain Layout
firmware
\end_layout

\end_inset

 of a circuit equipped with a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Microchip microprocessor
\end_layout

\end_inset

Microchip microprocessor usually can be programmed in circuit.
 That is when it is mounted on a printed circuit board.
 This is also true for the Frankfurt RS-232 module which have the programming
 connector on-board (J3).
 If you have a programmer for Microchip processors (
\begin_inset Index idx
status open

\begin_layout Plain Layout
Real ICE
\end_layout

\end_inset

Real ICE
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICE
\end_layout

\end_inset

, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICD-2
\end_layout

\end_inset

ICD-2, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICD-3
\end_layout

\end_inset

ICD-3, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
PICKIT-2
\end_layout

\end_inset

PICKIT-2, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
PICKIT3
\end_layout

\end_inset

PICKIT3 or other) you can program your own firmware
\begin_inset Index idx
status open

\begin_layout Plain Layout
firmware
\end_layout

\end_inset

 or the latest 
\begin_inset Index idx
status open

\begin_layout Plain Layout
official firmware
\end_layout

\end_inset

official firmware into the module using MPLAB
\begin_inset Index idx
status open

\begin_layout Plain Layout
MPLAB
\end_layout

\end_inset

 or similar tools.
 You can always find a link to the latest firmware on the Frankfurt RS-232
 
\begin_inset CommandInset href
LatexCommand href
name "module home page"
target "http://www.grodansparadis.com/can4vscp_rs232/can4vscp_rs232.html"

\end_inset

.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Update firmware
\end_layout

\end_inset

Update firmware with bootloader program
\end_layout

\begin_layout Standard
You need a Windows/Linux equipped PC to load the Frankfurt RS-232 module
 with new firmware.
 Download the bootloader from the Frankfurt RS-232 homepage.
 You can always find a link to the latest firmware and bootloader on the
 Frankfurt RS-232 module home page (
\begin_inset CommandInset href
LatexCommand href
name "here"
target "http://www.grodansparadis.com/can4vscp_rs232/can4vscp_rs232.html"

\end_inset

).
 
\end_layout

\begin_layout Standard
The bootloader code is described 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1824&appnote=en546974"

\end_inset

 and a Linux version is here 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "http://sourceforge.net/projects/tinypicbootload/files/"

\end_inset

.
\end_layout

\begin_layout Section
Driver
\end_layout

\begin_layout Standard
A VSCP Level I driver is available for the CAN4VSCP RS-232 module both for
 windows and for Linux.
 This driver can be used with the VSCP daemon and with VSCP Works and other
 software.
 The interface that is exported is described in part VII of the specification
 document (
\begin_inset CommandInset href
LatexCommand href
target "http://vscp.org/docs.php"

\end_inset

) and it is easy to interface from your own programs.
 The VSCP helper dll can also be a convenient tool to use for this.
 
\end_layout

\begin_layout Section
Interface
\end_layout

\begin_layout Standard
The interface of the module is text based.
 The module is normally always connected.
 So the only thing that is needed to see traffic on a CAN4VSCP bus is to
 connect the module to a serial device.
\end_layout

\begin_layout Subsection
Data frame
\end_layout

\begin_layout Standard
All data is always represented in hexadecimal form.
 A sent frame and a received frame have the same format.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Byte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Character
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of characters
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start of frame
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1,2.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
000-1FF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSCP class
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4,5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
00-FF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSCP ctype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0-8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of databaytes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7,8,9,10,11,12,13,14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
00-FF
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0-8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Databytes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(15)*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
End of frame.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
* The end of frame byte (0x0D) is the last character of the frame so it
 can be placed at position 7,8,9,10,11,12,13,14,15 depending on the size
 of the data in the frame.
\end_layout

\begin_layout Standard
When a frame is sent 
\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset

 followed by a carriage return is received from the module.
 
\end_layout

\begin_layout Subsection
Commands
\end_layout

\begin_layout Standard
Commands is used to control the behaviour of the Frankfurt RS-232 module.
 A command is acknowledged with 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset

 for a valid command and 
\begin_inset Quotes eld
\end_inset

-ERR<errorcode><CR>
\begin_inset Quotes erd
\end_inset

 for an invalid command.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="25" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET ON
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The Frankfurt RS-232 module interface works as normal and frames can be
 sent to the CAN4VSCP bus and received from the CAN4VSCP bus.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
Response is always
\emph on
 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 even if the channel already is on.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The command is persistent so if the node is underpowered and powered again
 the module will be on-line.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET OFF
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The CAN4VSCP bus is decoupled from the Frankfurt RS-232 module and frames
 will not be received nor be possible to send.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset

Response is always
\emph on
 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 even if the channel already is off.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The command is persistent so if the node is underpowered and powered again
 the module will be off-line.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MODE STREAM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The Frankfurt RS-232 module will be a an autonomous working node on the
 bus after this command has been issued.
 Any data sent on the serial interface will be sent out on the bus as a
 serial stream using either CLASS1.DATA, Type=36 or CLASS1.DATA, Type=38.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
Streams received (either CLASS1.DATA, Type=36 or CLASS1.DATA, Type=38) will
 be sent out on the serial interface.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The module confirm the mode change with 
\emph on

\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The command is persistent so if the node is underpowered and powered again
 the module will be in stream-mode.
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
Zero <NUL> is escape sequence.
 If a <NUL> is received when in this mode all characters up to <CR> will
 be treated as a command.
 A response from the device will be also given with a <NUL> up to a terminating
 <CR>.
 To send a zero to the stream send two consecutive <NUL> and for receiving
 <NUL> should be changed to one <NUL>.
 So 
\begin_inset Quotes eld
\end_inset

<NUL>SET MODE NORMAL<CR>
\begin_inset Quotes erd
\end_inset

 will give the response 
\begin_inset Quotes eld
\end_inset

<NUL>+OK<CR>
\begin_inset Quotes erd
\end_inset

 and take the module out of stream mode to normal mode.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MODE LISTEN
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The Frankfurt RS-232 module interface is connected to the CAN4VSCP and frames
 will be received but not sent.
 For other devices on the CAN4VSCP bus the module looks like it's not connected.
 This is useful for investigating a CAN4VSCP bus without disturbing the
 connected devices.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset

Response is always
\emph on
 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 even if the channel already is listen mode.
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The command is persistent so if the node is underpowered and powered again
 the module will be in listen only mode.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MODE LOOPBACK
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The interface is set into loop back mode that is the things that is sent
 is received.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset

Response is always
\emph on
 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 even if the channel already is in loop back mode.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The command is persistent so if the node is underpowered and powered again
 the module will be loop-back-mode.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MODE BINARY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Go into VSCP RS-232 serial binary mode (See VSCP specification section 2.2
 document 
\begin_inset CommandInset href
LatexCommand href
name "VSCP Specification"
target "http://vscp.org/docs.php"

\end_inset

).
 Response is always
\emph on
 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
Binary command 0x55aa will return the device to non binary mode.
 And the response will be command response 0x55 and after it has been sent
 the device will go into normal mode.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MODE NORMAL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The interface is set into normal mode and possible stream/listen/loopback
 modes will be disabled.
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset

Response is always
\emph on
 
\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 even if the channel already is in loop back mode.
 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
The command is persistent so if the node is underpowered and powered again
 the module will be loop-back-mode.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET FILTER
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set a receive filter.
 Argument is 
\emph on
priority,class, type, nickname
\emph default
.
 
\end_layout

\begin_layout Plain Layout
Response is 
\emph on

\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 for a valid argument or 
\begin_inset Quotes eld
\end_inset


\emph on
-ERR<CR>
\emph default

\begin_inset Quotes erd
\end_inset

 for an invalid argument.
 The filter command is persistent.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MASK
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set a receive mask.
 Argument is 
\emph on
priority,class, type, nickname
\emph default
.
 Response is 
\emph on

\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset


\emph default
 for a valid argument or 
\begin_inset Quotes eld
\end_inset


\emph on
-ERR<CR>
\emph default

\begin_inset Quotes erd
\end_inset

 for an invalid argument.
 The mask command is persistent.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET BOOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enter boot loader mode.
 Response is 
\emph on

\begin_inset Quotes eld
\end_inset

+OK<CR>
\begin_inset Quotes erd
\end_inset

.
 
\emph default
The device will stay in boot mode until a valid firmware image has been
 loaded.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET ZONE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set the zone that will be used for this device when it is in stream mode.
 Same as writing internal register 0.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET SUBZONE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set the subzone that will be used for this device when it is in stream mode.
 Same as writing internal register 1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
READ STATS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Return statistics !error-counter,flags,send frames,received frames
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Status byte.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error counter.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Overruns.
 Cleared on read.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Receive error counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transmit error counter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sent frames (four bytes)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Received frames (four bytes)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
Ths status byte has the following bits
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bus off
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bus Warning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error passive
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transmission Lost Arbitration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transmission Error Detected Status bit(
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
STATSCLR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clear statistics.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SEARCH 
\emph on
nickname
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Search the CAN4VSCP bus for valid devices and return a comma separated list
 of found nickname id's.
 The format for the returned list is just a carriage return if no device
 is found.
 
\end_layout

\begin_layout Plain Layout
The nickname argument is optional.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SEARCH FULL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Search the CAN4VSCP bus for valid devices and return a comma separated list
 of found nickname id's, GUID's and MDF paths 
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout

\emph on
nickname, GUID, MDF
\emph default
<CR>
\end_layout

\begin_layout Plain Layout
...
\end_layout

\begin_layout Plain Layout
...
\end_layout

\begin_layout Plain Layout
+OK<CR>
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
READ n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read one or more VSCP frames.
 The frames are returned as
\end_layout

\begin_layout Plain Layout
frame0<CR>
\end_layout

\begin_layout Plain Layout
frame1<CR>
\end_layout

\begin_layout Plain Layout
...
\end_layout

\begin_layout Plain Layout
framen<CR>
\end_layout

\begin_layout Plain Layout
+OK<CR>
\end_layout

\begin_layout Plain Layout
n is the requested number of frames and if n is higher then the number of
 available frames in the queue all frames that are waiting in the queue
 will be sent.
\end_layout

\begin_layout Plain Layout
The argument n can be omitted and if so one frame is read.
\end_layout

\begin_layout Plain Layout
frames have the following format
\end_layout

\begin_layout Plain Layout

\emph on
class,type,data0,data1....
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
READ VERSION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Get firmware and hardware version as
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset


\emph on
firmware-version,hardware-version+OK
\emph default
<CR>
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
READ MODE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read the device mode.
 Will return
\end_layout

\begin_layout Plain Layout
LISTEN ONLY +OK<CR> if in listen only mode.
\end_layout

\begin_layout Plain Layout
LOOP BACK +OK<CR> if in loop back mode.
\end_layout

\begin_layout Plain Layout
NORMAL +OK<CR> if not any of the above.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
READ REGISTER 
\emph on
node reg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read a register of the node as 
\emph on
read register node reg
\emph default
.
 Response is 
\begin_inset Quotes eld
\end_inset


\emph on
register,content+OK<CR>
\emph default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Plain Layout
If node is equal to zero internal registers of the Frankfurt RS-232 module
 will be read.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WRITE REGISTER 
\emph on
node reg content
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write a register of the node as 
\emph on
write register reg,content
\emph default
.
 Response is 
\begin_inset Quotes eld
\end_inset


\emph on
register,content+OK<CR>
\emph default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Plain Layout
If node is equal to zero internal registers of the Frankfurt RS-232 module
 will be written.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FIND NICKNAME
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Do a nickname search on the bus.Response is 
\begin_inset Quotes eld
\end_inset


\emph on
free-nickname+OK<CR>
\emph default

\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset


\emph on
-ERR
\emph default

\begin_inset Quotes erd
\end_inset

 if no free nickname is found.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SET MASTER 
\emph on
on/off
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set this module as the segment controller (argument is on) or not (argument
 is off).
 The communication modules nickname will be set equal to zero and the module
 will respond to nickname discovery sequence by a node and send 
\begin_inset Quotes eld
\end_inset

NEW NODE+OK<CR>
\begin_inset Quotes erd
\end_inset

 on the serial 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Subsection
Registers
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Register
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zone for Frankfurt RS-232 module
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sub zone for Frankfurt RS-232 module
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Configuration
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0,1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mode.
 00=Normal, 01=Listen, 10=Loopback, 11=Stream
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node is master if set to one.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Binary mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stream with zone/subzone if set to one.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5,6,7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Where can I find the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
source code
\end_layout

\end_inset

source code?
\end_layout

\begin_layout Standard
Most VSCP modules from Grodans Paradis AB is 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Open hardware
\end_layout

\end_inset

Open hardware/
\begin_inset Index idx
status open

\begin_layout Plain Layout
Open source
\end_layout

\end_inset

Open source meaning that both the hardware information as well as the source
 code is available.
 This means that you can modify the source code and /or the hardware to
 your specific needs if you want.
 
\end_layout

\end_body
\end_document
